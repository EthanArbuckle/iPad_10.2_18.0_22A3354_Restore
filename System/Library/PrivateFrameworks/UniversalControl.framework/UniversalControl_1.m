uint64_t sub_2497C2494(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_249837684();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_2497C526C(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_2497C258C(char *a1, double *a2)
{
  uint64_t *v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  double v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[70];
  _OWORD v29[4];
  char v30;
  int v31;
  _BYTE __dst[70];

  v5 = *v2;
  sub_249837690();
  memcpy(__dst, a2, sizeof(__dst));
  v6 = a2[9];
  memcpy(v28, a2, sizeof(v28));
  swift_bridgeObjectRetain();
  UniversalControlLink.hash(into:)((uint64_t)v29);
  sub_2498376D8();
  v7 = sub_2498376E4();
  v8 = -1 << *(_BYTE *)(v5 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = ~v8;
    while (1)
    {
      v11 = *(_QWORD *)(v5 + 48) + 80 * v9;
      v12 = *(_BYTE *)(v11 + 64);
      v13 = *(_DWORD *)(v11 + 66);
      v14 = *(double *)(v11 + 72);
      v15 = *(_OWORD *)(v11 + 16);
      v16 = *(_OWORD *)(v11 + 32);
      v17 = *(_OWORD *)(v11 + 48);
      v29[0] = *(_OWORD *)v11;
      v29[1] = v15;
      v29[2] = v16;
      v29[3] = v17;
      v30 = v12;
      v31 = v13;
      memcpy(v28, __dst, sizeof(v28));
      static UniversalControlLink.== infix(_:_:)((unsigned __int8 *)v29, (uint64_t)v28);
      if ((v18 & 1) != 0 && v14 == v6)
        break;
      v9 = (v9 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    result = 0;
    v21 = *(_QWORD *)(*v2 + 48) + 80 * v9;
    v22 = *(_BYTE *)(v21 + 64);
    v23 = *(_QWORD *)(v21 + 72);
    v24 = *(_OWORD *)v21;
    v25 = *(_OWORD *)(v21 + 16);
    v26 = *(_OWORD *)(v21 + 32);
    v27 = *(_OWORD *)(v21 + 48);
    LODWORD(v21) = *(_DWORD *)(v21 + 66);
    *(_OWORD *)a1 = v24;
    *((_OWORD *)a1 + 1) = v25;
    *((_OWORD *)a1 + 2) = v26;
    *((_OWORD *)a1 + 3) = v27;
    a1[64] = v22;
    *(_DWORD *)(a1 + 66) = v21;
    *((_QWORD *)a1 + 9) = v23;
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v29[0] = *v2;
    *v2 = 0x8000000000000000;
    sub_2497C538C(a2, v9, isUniquelyReferenced_nonNull_native);
    *v2 = *(_QWORD *)&v29[0];
    swift_bridgeObjectRelease();
    memcpy(a1, a2, 0x50uLL);
    return 1;
  }
  return result;
}

uint64_t sub_2497C2784(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v7;
  uint64_t result;
  uint64_t *v9;
  uint64_t v11;

  v4 = *v2;
  sub_249837690();
  sub_2497CEBD0(a2);
  swift_bridgeObjectRetain();
  sub_249836D84();
  OUTLINED_FUNCTION_36_5();
  v5 = sub_2498376E4() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    OUTLINED_FUNCTION_50_2();
    __asm { BR              X9 }
  }
  OUTLINED_FUNCTION_78();
  v7 = OUTLINED_FUNCTION_145();
  v11 = *v9;
  *v9 = 0x8000000000000000;
  sub_2497C556C(a2, v5, v7);
  OUTLINED_FUNCTION_76_1(v11);
  result = 1;
  *a1 = a2;
  return result;
}

__n128 sub_2497C29B8(char *a1, const void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  __n128 result;
  uint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[4];
  char v27;
  int v28;
  uint64_t v29[9];
  _BYTE v30[70];

  v3 = v2;
  OUTLINED_FUNCTION_87(v30, a2);
  v6 = *v3;
  OUTLINED_FUNCTION_87(v29, a2);
  sub_249837690();
  swift_bridgeObjectRetain();
  UniversalControlLink.hash(into:)((uint64_t)v26);
  v7 = sub_2498376E4() & ~(-1 << *(_BYTE *)(v6 + 32));
  OUTLINED_FUNCTION_155();
  if (((v9 >> v7) & 1) != 0)
  {
    v10 = ~v8;
    while (1)
    {
      v11 = *(_QWORD *)(v6 + 48) + 70 * v7;
      v12 = *(_BYTE *)(v11 + 64);
      v13 = *(_DWORD *)(v11 + 66);
      v14 = *(_OWORD *)(v11 + 16);
      v15 = *(_OWORD *)(v11 + 32);
      v16 = *(_OWORD *)(v11 + 48);
      v26[0] = *(_OWORD *)v11;
      v26[1] = v14;
      v26[2] = v15;
      v26[3] = v16;
      v27 = v12;
      v28 = v13;
      static UniversalControlLink.== infix(_:_:)((unsigned __int8 *)v26, (uint64_t)v30);
      if ((v17 & 1) != 0)
        break;
      v7 = (v7 + 1) & v10;
      OUTLINED_FUNCTION_152();
      if (((v18 >> v7) & 1) == 0)
        goto LABEL_5;
    }
    OUTLINED_FUNCTION_78();
    v21 = *(_QWORD *)(*v3 + 48) + 70 * v7;
    v22 = *(_BYTE *)(v21 + 64);
    result = *(__n128 *)v21;
    v23 = *(_OWORD *)(v21 + 16);
    v24 = *(_OWORD *)(v21 + 32);
    v25 = *(_OWORD *)(v21 + 48);
    LODWORD(v21) = *(_DWORD *)(v21 + 66);
    *(__n128 *)a1 = result;
    *((_OWORD *)a1 + 1) = v23;
    *((_OWORD *)a1 + 2) = v24;
    *((_OWORD *)a1 + 3) = v25;
    a1[64] = v22;
    *(_DWORD *)(a1 + 66) = v21;
  }
  else
  {
LABEL_5:
    OUTLINED_FUNCTION_78();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_87(v26, v30);
    v29[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_2497C5888(v26, v7, isUniquelyReferenced_nonNull_native);
    *v3 = v29[0];
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_87(a1, v26);
  }
  return result;
}

uint64_t sub_2497C2B58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819D0);
  v3 = sub_249837150();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_249837690();
      sub_249748BCC(v18, v19);
      sub_24983694C();
      sub_249748C10(v18, v19);
      result = sub_2498376E4();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_249781B64(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2497C2E48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t result;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881A08);
  v45 = sub_249837150();
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = 0;
    v36 = (_QWORD *)(v2 + 56);
    v37 = v2;
    v4 = 1 << *(_BYTE *)(v2 + 32);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v2 + 56);
    v34 = v0;
    v35 = (unint64_t)(v4 + 63) >> 6;
    v7 = v45 + 56;
    if (!v6)
      goto LABEL_7;
    while (2)
    {
      v38 = (v6 - 1) & v6;
      v39 = v3;
      v8 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_21:
      v13 = (char *)(*(_QWORD *)(v2 + 48) + 16 * v8);
      v14 = *v13;
      v15 = v13[1];
      v16 = v13[3];
      v17 = v13[5];
      v46 = v13[2];
      v47 = v13[6];
      v48 = v13[7];
      v18 = v13[8];
      v43 = v13[9];
      v44 = v13[4];
      v19 = v13[11];
      v42 = v13[12];
      v20 = v13[13];
      v40 = v13[10];
      v41 = v13[14];
      v21 = v13[15];
      sub_249837690();
      sub_24983769C();
      v22 = sub_2498376E4();
      v23 = -1 << *(_BYTE *)(v45 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v7 + 8 * (v24 >> 6))) != 0)
      {
        v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v7 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v7 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
LABEL_30:
      *(_QWORD *)(v7 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      v31 = (_BYTE *)(*(_QWORD *)(v45 + 48) + 16 * v26);
      *v31 = v14;
      v31[1] = v15;
      v31[2] = v46;
      v31[3] = v16;
      v31[4] = v44;
      v31[5] = v17;
      v31[6] = v47;
      v31[7] = v48;
      v31[8] = v18;
      v31[9] = v43;
      v31[10] = v40;
      v31[11] = v19;
      v31[12] = v42;
      v31[13] = v20;
      v31[14] = v41;
      v31[15] = v21;
      ++*(_QWORD *)(v45 + 16);
      v2 = v37;
      v6 = v38;
      v3 = v39;
      if (v38)
        continue;
      break;
    }
LABEL_7:
    v9 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_38;
    if (v9 < v35)
    {
      v10 = v36[v9];
      v11 = v3 + 1;
      if (v10)
        goto LABEL_20;
      v11 = v3 + 2;
      if (v3 + 2 < v35)
      {
        v10 = v36[v11];
        if (v10)
          goto LABEL_20;
        v11 = v3 + 3;
        if (v3 + 3 < v35)
        {
          v10 = v36[v11];
          if (v10)
            goto LABEL_20;
          v12 = v3 + 4;
          if (v3 + 4 < v35)
          {
            v10 = v36[v12];
            if (v10)
            {
              v11 = v3 + 4;
LABEL_20:
              v38 = (v10 - 1) & v10;
              v39 = v11;
              v8 = __clz(__rbit64(v10)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
                break;
              if (v11 >= v35)
                goto LABEL_32;
              v10 = v36[v11];
              ++v12;
              if (v10)
                goto LABEL_20;
            }
LABEL_39:
            __break(1u);
          }
        }
      }
    }
LABEL_32:
    v32 = 1 << *(_BYTE *)(v2 + 32);
    if (v32 > 63)
      sub_249781B64(0, (unint64_t)(v32 + 63) >> 6, v36);
    else
      *v36 = -1 << v32;
    v1 = v34;
    *(_QWORD *)(v2 + 16) = 0;
  }
  result = swift_release();
  *v1 = v45;
  return result;
}

uint64_t sub_2497C32AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881A00);
  result = sub_249837150();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v7 = (uint64_t *)(v2 + 56);
    v6 = *(_QWORD *)(v2 + 56);
    v8 = 1 << *(_BYTE *)(v2 + 32);
    v27 = -1 << v8;
    v28 = v1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & v6;
    v29 = 1 << *(_BYTE *)(v2 + 32);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = result + 56;
    if ((v9 & v6) == 0)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v13 | (v5 << 6); ; i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
      result = sub_249837684();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          v25 = v21 == v24;
          if (v21 == v24)
            v21 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v22) = v18;
      ++*(_QWORD *)(v4 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v15 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_38;
      if (v15 >= v11)
        goto LABEL_32;
      v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        v5 = v15 + 1;
        if (v15 + 1 >= v11)
          goto LABEL_32;
        v16 = v7[v5];
        if (!v16)
        {
          v5 = v15 + 2;
          if (v15 + 2 >= v11)
            goto LABEL_32;
          v16 = v7[v5];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63)
                sub_249781B64(0, v11, (_QWORD *)(v2 + 56));
              else
                *v7 = v27;
              v1 = v28;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                v5 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_39;
                if (v5 >= v11)
                  goto LABEL_32;
                v16 = v7[v5];
                ++v17;
                if (v16)
                  goto LABEL_20;
              }
            }
            v5 = v17;
          }
        }
      }
LABEL_20:
      v10 = (v16 - 1) & v16;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2497C352C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  _BYTE v17[80];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819F0);
  v3 = sub_249837150();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    result = swift_retain();
    v10 = 0;
    if (!v7)
      goto LABEL_6;
LABEL_5:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
    {
      memcpy(v17, (const void *)(*(_QWORD *)(v2 + 48) + 80 * i), sizeof(v17));
      result = (uint64_t)sub_2497C42B0(v17, v3);
      if (v7)
        goto LABEL_5;
LABEL_6:
      v13 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
      if (v13 >= v8)
        goto LABEL_22;
      v14 = v5[v13];
      ++v10;
      if (!v14)
      {
        v10 = v13 + 1;
        if (v13 + 1 >= v8)
          goto LABEL_22;
        v14 = v5[v10];
        if (!v14)
        {
          v10 = v13 + 2;
          if (v13 + 2 >= v8)
            goto LABEL_22;
          v14 = v5[v10];
          if (!v14)
          {
            v15 = v13 + 3;
            if (v15 >= v8)
            {
LABEL_22:
              swift_release();
              v16 = 1 << *(_BYTE *)(v2 + 32);
              if (v16 > 63)
                sub_249781B64(0, (unint64_t)(v16 + 63) >> 6, (_QWORD *)(v2 + 56));
              else
                *v5 = -1 << v16;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v14 = v5[v15];
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_28;
                if (v10 >= v8)
                  goto LABEL_22;
                v14 = v5[v10];
                ++v15;
                if (v14)
                  goto LABEL_19;
              }
            }
            v10 = v15;
          }
        }
      }
LABEL_19:
      v7 = (v14 - 1) & v14;
    }
  }
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_2497C3714()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819E8);
  v3 = sub_249837150();
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_25;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = (_QWORD *)(v2 + 56);
  if (v4 < 64)
    v6 = ~(-1 << v4);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    goto LABEL_20;
  }
  if (v8 > 1)
  {
    v10 = *(_QWORD *)(v2 + 64);
    v11 = 1;
    if (v10)
      goto LABEL_19;
    v11 = 2;
    if (v8 > 2)
    {
      v10 = *(_QWORD *)(v2 + 72);
      if (v10)
        goto LABEL_19;
      v11 = 3;
      if (v8 > 3)
      {
        v10 = *(_QWORD *)(v2 + 80);
        if (!v10)
        {
          v12 = 4;
          if (v8 > 4)
          {
            v10 = *(_QWORD *)(v2 + 88);
            if (v10)
            {
              v11 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v11 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
                __break(1u);
                JUMPOUT(0x2497C3A6CLL);
              }
              if (v11 >= v8)
                break;
              v10 = v5[v11];
              ++v12;
              if (v10)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v9 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_20:
        v13 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v9);
        sub_249837690();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v1 = v0;
  v14 = 1 << *(_BYTE *)(v2 + 32);
  if (v14 > 63)
    sub_249781B64(0, (unint64_t)(v14 + 63) >> 6, (_QWORD *)(v2 + 56));
  else
    *v5 = -1 << v14;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v1 = v3;
  return result;
}

unint64_t sub_2497C3A88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t result;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  __int16 v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;
  int64_t v67;
  __int16 v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99[74];
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  __int16 v165;
  __int16 v166;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819D8);
  v36 = sub_249837150();
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = 1 << *(_BYTE *)(v1 + 32);
    v33 = (_QWORD *)(v1 + 56);
    if (v2 < 64)
      v3 = ~(-1 << v2);
    else
      v3 = -1;
    v4 = v3 & *(_QWORD *)(v1 + 56);
    v34 = (unint64_t)(v2 + 63) >> 6;
    v35 = v1;
    result = swift_retain();
    v6 = 0;
    if (!v4)
      goto LABEL_7;
LABEL_6:
    v66 = (v4 - 1) & v4;
    v67 = v6;
    v7 = __clz(__rbit64(v4)) | (v6 << 6);
    v8 = v35;
    while (1)
    {
      v13 = *(_QWORD *)(v8 + 48) + 70 * v7;
      v14 = *(_BYTE *)(v13 + 1);
      v15 = *(_BYTE *)(v13 + 2);
      v97 = *(_BYTE *)(v13 + 3);
      v16 = *(_BYTE *)(v13 + 4);
      v65 = *(_BYTE *)(v13 + 6);
      v17 = *(_BYTE *)(v13 + 7);
      v18 = *(_BYTE *)(v13 + 8);
      v64 = *(_BYTE *)(v13 + 5);
      v19 = *(_BYTE *)(v13 + 10);
      v61 = v19;
      v62 = *(_BYTE *)(v13 + 9);
      v20 = *(_BYTE *)(v13 + 12);
      v59 = v20;
      v60 = *(_BYTE *)(v13 + 11);
      v21 = *(_BYTE *)(v13 + 14);
      v57 = v21;
      v58 = *(_BYTE *)(v13 + 13);
      v22 = *(_BYTE *)(v13 + 16);
      v55 = v22;
      v56 = *(_BYTE *)(v13 + 15);
      v23 = *(_BYTE *)(v13 + 18);
      v53 = v23;
      v54 = *(_BYTE *)(v13 + 17);
      v24 = *(_BYTE *)(v13 + 20);
      v51 = v24;
      v52 = *(_BYTE *)(v13 + 19);
      v25 = *(_BYTE *)(v13 + 22);
      v49 = v25;
      v50 = *(_BYTE *)(v13 + 21);
      v26 = *(_BYTE *)(v13 + 24);
      v47 = v26;
      v48 = *(_BYTE *)(v13 + 23);
      v27 = *(_BYTE *)(v13 + 26);
      v46 = *(_BYTE *)(v13 + 25);
      v28 = *(_BYTE *)(v13 + 27);
      v44 = *(_BYTE *)(v13 + 28);
      v43 = *(_BYTE *)(v13 + 29);
      v42 = *(_BYTE *)(v13 + 30);
      v41 = *(_BYTE *)(v13 + 31);
      v40 = *(_BYTE *)(v13 + 32);
      v39 = *(_BYTE *)(v13 + 33);
      v38 = *(_BYTE *)(v13 + 34);
      v37 = *(_BYTE *)(v13 + 35);
      v98 = *(_BYTE *)(v13 + 36);
      v95 = *(_BYTE *)(v13 + 37);
      v96 = *(_BYTE *)(v13 + 38);
      v93 = *(_BYTE *)(v13 + 39);
      v94 = *(_BYTE *)(v13 + 40);
      v91 = *(_BYTE *)(v13 + 41);
      v92 = *(_BYTE *)(v13 + 42);
      v89 = *(_BYTE *)(v13 + 43);
      v90 = *(_BYTE *)(v13 + 44);
      v87 = *(_BYTE *)(v13 + 45);
      v88 = *(_BYTE *)(v13 + 46);
      v85 = *(_BYTE *)(v13 + 47);
      v86 = *(_BYTE *)(v13 + 48);
      v83 = *(_BYTE *)(v13 + 49);
      v84 = *(_BYTE *)(v13 + 50);
      v81 = *(_BYTE *)(v13 + 51);
      v82 = *(_BYTE *)(v13 + 52);
      v79 = *(_BYTE *)(v13 + 53);
      v80 = *(_BYTE *)(v13 + 54);
      v77 = *(_BYTE *)(v13 + 55);
      v78 = *(_BYTE *)(v13 + 56);
      v75 = *(_BYTE *)(v13 + 57);
      v76 = *(_BYTE *)(v13 + 58);
      v73 = *(_BYTE *)(v13 + 59);
      v74 = *(_BYTE *)(v13 + 60);
      v71 = *(_BYTE *)(v13 + 61);
      v72 = *(_BYTE *)(v13 + 62);
      v69 = *(_BYTE *)(v13 + 63);
      v70 = *(_BYTE *)(v13 + 64);
      v29 = *(_WORD *)(v13 + 66);
      v45 = v29;
      v68 = *(_WORD *)(v13 + 68);
      v100 = *(_BYTE *)v13;
      v63 = v100;
      v101 = v14;
      v102 = v15;
      v103 = v97;
      v104 = v16;
      v105 = v64;
      v106 = v65;
      v107 = v17;
      v108 = v18;
      v109 = v62;
      v110 = v19;
      v111 = v60;
      v112 = v20;
      v113 = v58;
      v114 = v21;
      v115 = v56;
      v116 = v22;
      v117 = v54;
      v118 = v23;
      v119 = v52;
      v120 = v24;
      v121 = v50;
      v122 = v25;
      v123 = v48;
      v124 = v26;
      v125 = v46;
      v126 = v27;
      v127 = v28;
      v128 = v44;
      v129 = v43;
      v130 = v42;
      v131 = v41;
      v132 = v40;
      v133 = v39;
      v134 = v38;
      v135 = v37;
      v136 = v98;
      v137 = v95;
      v138 = v96;
      v139 = v93;
      v140 = v94;
      v141 = v91;
      v142 = v92;
      v143 = v89;
      v144 = v90;
      v145 = v87;
      v146 = v88;
      v147 = v85;
      v148 = v86;
      v149 = v83;
      v150 = v84;
      v151 = v81;
      v152 = v82;
      v153 = v79;
      v154 = v80;
      v155 = v77;
      v156 = v78;
      v157 = v75;
      v158 = v76;
      v159 = v73;
      v160 = v74;
      v161 = v71;
      v162 = v72;
      v163 = v69;
      v164 = v70;
      v165 = v29;
      v166 = v68;
      sub_249837690();
      UniversalControlLink.hash(into:)((uint64_t)v99);
      sub_2498376E4();
      result = sub_249837120();
      *(_QWORD *)(v36 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v30 = *(_QWORD *)(v36 + 48) + 70 * result;
      *(_BYTE *)v30 = v63;
      *(_BYTE *)(v30 + 1) = v14;
      *(_BYTE *)(v30 + 2) = v15;
      *(_BYTE *)(v30 + 3) = v97;
      *(_BYTE *)(v30 + 4) = v16;
      *(_BYTE *)(v30 + 5) = v64;
      *(_BYTE *)(v30 + 6) = v65;
      *(_BYTE *)(v30 + 7) = v17;
      *(_BYTE *)(v30 + 8) = v18;
      *(_BYTE *)(v30 + 9) = v62;
      *(_BYTE *)(v30 + 10) = v61;
      *(_BYTE *)(v30 + 11) = v60;
      *(_BYTE *)(v30 + 12) = v59;
      *(_BYTE *)(v30 + 13) = v58;
      *(_BYTE *)(v30 + 14) = v57;
      *(_BYTE *)(v30 + 15) = v56;
      *(_BYTE *)(v30 + 16) = v55;
      *(_BYTE *)(v30 + 17) = v54;
      *(_BYTE *)(v30 + 18) = v53;
      *(_BYTE *)(v30 + 19) = v52;
      *(_BYTE *)(v30 + 20) = v51;
      *(_BYTE *)(v30 + 21) = v50;
      *(_BYTE *)(v30 + 22) = v49;
      *(_BYTE *)(v30 + 23) = v48;
      *(_BYTE *)(v30 + 24) = v47;
      *(_BYTE *)(v30 + 25) = v46;
      *(_BYTE *)(v30 + 26) = v27;
      *(_BYTE *)(v30 + 27) = v28;
      *(_BYTE *)(v30 + 28) = v44;
      *(_BYTE *)(v30 + 29) = v43;
      *(_BYTE *)(v30 + 30) = v42;
      *(_BYTE *)(v30 + 31) = v41;
      *(_BYTE *)(v30 + 32) = v40;
      *(_BYTE *)(v30 + 33) = v39;
      *(_BYTE *)(v30 + 34) = v38;
      *(_BYTE *)(v30 + 35) = v37;
      *(_BYTE *)(v30 + 36) = v98;
      *(_BYTE *)(v30 + 37) = v95;
      *(_BYTE *)(v30 + 38) = v96;
      *(_BYTE *)(v30 + 39) = v93;
      *(_BYTE *)(v30 + 40) = v94;
      *(_BYTE *)(v30 + 41) = v91;
      *(_BYTE *)(v30 + 42) = v92;
      *(_BYTE *)(v30 + 43) = v89;
      *(_BYTE *)(v30 + 44) = v90;
      *(_BYTE *)(v30 + 45) = v87;
      *(_BYTE *)(v30 + 46) = v88;
      *(_BYTE *)(v30 + 47) = v85;
      *(_BYTE *)(v30 + 48) = v86;
      *(_BYTE *)(v30 + 49) = v83;
      *(_BYTE *)(v30 + 50) = v84;
      *(_BYTE *)(v30 + 51) = v81;
      *(_BYTE *)(v30 + 52) = v82;
      *(_BYTE *)(v30 + 53) = v79;
      *(_BYTE *)(v30 + 54) = v80;
      *(_BYTE *)(v30 + 55) = v77;
      *(_BYTE *)(v30 + 56) = v78;
      *(_BYTE *)(v30 + 57) = v75;
      *(_BYTE *)(v30 + 58) = v76;
      *(_BYTE *)(v30 + 59) = v73;
      *(_BYTE *)(v30 + 60) = v74;
      *(_BYTE *)(v30 + 61) = v71;
      *(_BYTE *)(v30 + 62) = v72;
      *(_BYTE *)(v30 + 63) = v69;
      *(_BYTE *)(v30 + 64) = v70;
      *(_WORD *)(v30 + 66) = v45;
      *(_WORD *)(v30 + 68) = v68;
      ++*(_QWORD *)(v36 + 16);
      v4 = v66;
      v6 = v67;
      if (v66)
        goto LABEL_6;
LABEL_7:
      v9 = v6 + 1;
      v8 = v35;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_29:
        __break(1u);
        return result;
      }
      if (v9 >= v34)
        goto LABEL_23;
      v10 = v33[v9];
      v11 = v6 + 1;
      if (!v10)
      {
        v11 = v6 + 2;
        if (v6 + 2 >= v34)
          goto LABEL_23;
        v10 = v33[v11];
        if (!v10)
        {
          v11 = v6 + 3;
          if (v6 + 3 >= v34)
            goto LABEL_23;
          v10 = v33[v11];
          if (!v10)
          {
            v12 = v6 + 4;
            if (v6 + 4 >= v34)
            {
LABEL_23:
              swift_release();
              v31 = 1 << *(_BYTE *)(v35 + 32);
              if (v31 > 63)
                sub_249781B64(0, (unint64_t)(v31 + 63) >> 6, v33);
              else
                *v33 = -1 << v31;
              *(_QWORD *)(v35 + 16) = 0;
              break;
            }
            v10 = v33[v12];
            if (!v10)
            {
              while (1)
              {
                v11 = v12 + 1;
                if (__OFADD__(v12, 1))
                  goto LABEL_29;
                if (v11 >= v34)
                  goto LABEL_23;
                v10 = v33[v11];
                ++v12;
                if (v10)
                  goto LABEL_20;
              }
            }
            v11 = v6 + 4;
          }
        }
      }
LABEL_20:
      v66 = (v10 - 1) & v10;
      v67 = v11;
      v7 = __clz(__rbit64(v10)) + (v11 << 6);
    }
  }
  result = swift_release();
  *v32 = v36;
  return result;
}

void *sub_2497C42B0(const void *a1, uint64_t a2)
{
  unint64_t v4;
  void *result;
  _BYTE __dst[70];
  _BYTE v7[72];

  sub_249837690();
  memcpy(__dst, a1, sizeof(__dst));
  UniversalControlLink.hash(into:)((uint64_t)v7);
  sub_2498376D8();
  sub_2498376E4();
  v4 = sub_249837120();
  *(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v4;
  result = memcpy((void *)(*(_QWORD *)(a2 + 48) + 80 * v4), a1, 0x50uLL);
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_2497C4384(uint64_t result, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t *v16;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 <= v8 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_2497C2B58();
    }
    else
    {
      if (v9 > v8)
      {
        result = (uint64_t)sub_2497C5A38();
        goto LABEL_10;
      }
      sub_2497C640C();
    }
    v10 = *v4;
    sub_249837690();
    sub_249748BCC(v7, a2);
    sub_24983694C();
    sub_249748C10(v7, a2);
    result = sub_2498376E4();
    a3 = result & ~(-1 << *(_BYTE *)(v10 + 32));
    if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
      __asm { BR              X8 }
  }
LABEL_10:
  v11 = *v16;
  *(_QWORD *)(*v16 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v12 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * a3);
  *v12 = v7;
  v12[1] = a2;
  v13 = *(_QWORD *)(v11 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    JUMPOUT(0x2497C4E7CLL);
  }
  *(_QWORD *)(v11 + 16) = v15;
  return result;
}

unint64_t sub_2497C4F50(unint64_t result, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  char v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char __s2;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  _OWORD __s1[5];
  uint64_t v52;

  v6 = a2;
  v7 = result;
  v52 = *MEMORY[0x24BDAC8D0];
  v33 = HIWORD(a2);
  v34 = HIBYTE(a2);
  v31 = HIDWORD(a2);
  v32 = a2 >> 40;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  v29 = a2 >> 16;
  v30 = a2 >> 24;
  v27 = HIBYTE(result);
  v28 = a2 >> 8;
  v25 = result >> 40;
  v26 = HIWORD(result);
  v10 = HIDWORD(result);
  v11 = result >> 24;
  v12 = result >> 16;
  v13 = result >> 8;
  if (v9 > v8 && (a4 & 1) != 0)
  {
LABEL_12:
    v19 = *v24;
    *(_QWORD *)(*v24 + 8 * (a3 >> 6) + 56) |= 1 << a3;
    v20 = (_BYTE *)(*(_QWORD *)(v19 + 48) + 16 * a3);
    *v20 = v7;
    v20[1] = v13;
    v20[2] = v12;
    v20[3] = v11;
    v20[4] = v10;
    v20[5] = v25;
    v20[6] = v26;
    v20[7] = v27;
    v20[8] = v6;
    v20[9] = v28;
    v20[10] = v29;
    v20[11] = v30;
    v20[12] = v31;
    v20[13] = v32;
    v20[14] = v33;
    v20[15] = v34;
    v21 = *(_QWORD *)(v19 + 16);
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      __break(1u);
    *(_QWORD *)(v19 + 16) = v23;
    return result;
  }
  if ((a4 & 1) != 0)
  {
    sub_2497C2E48();
    goto LABEL_8;
  }
  if (v9 > v8)
  {
    result = (unint64_t)sub_2497C5BE8();
    goto LABEL_12;
  }
  sub_2497C66D0();
LABEL_8:
  v14 = *v4;
  sub_249837690();
  __s2 = v7;
  v36 = v13;
  v37 = v12;
  v38 = v11;
  v39 = v10;
  v40 = v25;
  v41 = v26;
  v42 = v27;
  v43 = v6;
  v44 = v28;
  v45 = v29;
  v46 = v30;
  v47 = v31;
  v48 = v32;
  v49 = v33;
  v50 = v34;
  sub_24983769C();
  result = sub_2498376E4();
  v15 = -1 << *(_BYTE *)(v14 + 32);
  a3 = result & ~v15;
  v16 = v14 + 56;
  if (((*(_QWORD *)(v14 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
    goto LABEL_12;
  v17 = ~v15;
  v18 = *(_QWORD *)(v14 + 48);
  while (1)
  {
    __s1[0] = *(_OWORD *)(v18 + 16 * a3);
    __s2 = v7;
    v36 = v13;
    v37 = v12;
    v38 = v11;
    v39 = v10;
    v40 = v25;
    v41 = v26;
    v42 = v27;
    v43 = v6;
    v44 = v28;
    v45 = v29;
    v46 = v30;
    v47 = v31;
    v48 = v32;
    v49 = v33;
    v50 = v34;
    result = memcmp(__s1, &__s2, 0x10uLL);
    if (!(_DWORD)result)
      break;
    a3 = (a3 + 1) & v17;
    if (((*(_QWORD *)(v16 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
      goto LABEL_12;
  }
  result = sub_249837630();
  __break(1u);
  return result;
}

uint64_t sub_2497C526C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_2497C32AC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_2497C5D7C();
      goto LABEL_14;
    }
    sub_2497C6AF4();
  }
  v8 = *v3;
  result = sub_249837684();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_249837630();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_2497C538C(double *__src, unint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  double v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _BYTE v27[70];
  _OWORD v28[4];
  char v29;
  int v30;
  _BYTE __dst[70];

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_13;
  if ((a3 & 1) != 0)
  {
    sub_2497C352C();
  }
  else
  {
    if (v8 > v7)
    {
      sub_2497C5F10();
      goto LABEL_13;
    }
    sub_2497C6D50();
  }
  v9 = *v3;
  sub_249837690();
  memcpy(__dst, __src, sizeof(__dst));
  v10 = __src[9];
  memcpy(v27, __src, sizeof(v27));
  UniversalControlLink.hash(into:)((uint64_t)v28);
  sub_2498376D8();
  v11 = sub_2498376E4();
  v12 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = ~v12;
    do
    {
      v14 = *(_QWORD *)(v9 + 48) + 80 * a2;
      v15 = *(_BYTE *)(v14 + 64);
      v16 = *(_DWORD *)(v14 + 66);
      v17 = *(double *)(v14 + 72);
      v18 = *(_OWORD *)(v14 + 16);
      v19 = *(_OWORD *)(v14 + 32);
      v20 = *(_OWORD *)(v14 + 48);
      v28[0] = *(_OWORD *)v14;
      v28[1] = v18;
      v28[2] = v19;
      v28[3] = v20;
      v29 = v15;
      v30 = v16;
      memcpy(v27, __dst, sizeof(v27));
      static UniversalControlLink.== infix(_:_:)((unsigned __int8 *)v28, (uint64_t)v27);
      if ((v21 & 1) != 0 && v17 == v10)
        goto LABEL_16;
      a2 = (a2 + 1) & v13;
    }
    while (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_13:
  v22 = *v3;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (uint64_t)memcpy((void *)(*(_QWORD *)(v22 + 48) + 80 * a2), __src, 0x50uLL);
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (!v25)
  {
    *(_QWORD *)(v22 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_16:
  result = sub_249837630();
  __break(1u);
  return result;
}

uint64_t sub_2497C556C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned __int8 v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_2497C3714();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_2497C60D0();
        goto LABEL_10;
      }
      sub_2497C6EFC();
    }
    v8 = *v3;
    sub_249837690();
    sub_2497CEBD0(v5);
    sub_249836D84();
    swift_bridgeObjectRelease();
    result = sub_2498376E4();
    a2 = result & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x2497C5834);
  }
  *(_QWORD *)(v9 + 16) = v12;
  return result;
}

uint64_t sub_2497C5888(void *__src, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _OWORD v26[4];
  char v27;
  int v28;
  _BYTE v29[70];
  _BYTE __dst[70];

  v4 = v3;
  memcpy(__dst, __src, sizeof(__dst));
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 > v8 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_2497C3A88();
  }
  else
  {
    if (v9 > v8)
    {
      sub_2497C6264();
      goto LABEL_12;
    }
    sub_2497C723C();
  }
  v10 = *v4;
  memcpy(v29, __src, sizeof(v29));
  sub_249837690();
  UniversalControlLink.hash(into:)((uint64_t)v26);
  v11 = sub_2498376E4();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = ~v12;
    do
    {
      v14 = *(_QWORD *)(v10 + 48) + 70 * a2;
      v15 = *(_BYTE *)(v14 + 64);
      v16 = *(_DWORD *)(v14 + 66);
      v17 = *(_OWORD *)(v14 + 16);
      v18 = *(_OWORD *)(v14 + 32);
      v19 = *(_OWORD *)(v14 + 48);
      v26[0] = *(_OWORD *)v14;
      v26[1] = v17;
      v26[2] = v18;
      v26[3] = v19;
      v27 = v15;
      v28 = v16;
      static UniversalControlLink.== infix(_:_:)((unsigned __int8 *)v26, (uint64_t)__dst);
      if ((v20 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v13;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v21 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (uint64_t)memcpy((void *)(*(_QWORD *)(v21 + 48) + 70 * a2), __src, 0x46uLL);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_249837630();
  __break(1u);
  return result;
}

void *sub_2497C5A38()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  __int128 v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819D0);
  v2 = *v0;
  v3 = sub_249837144();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * i) = v20;
    result = (void *)sub_249748BCC(v20, *((unint64_t *)&v20 + 1));
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2497C5BE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881A08);
  v2 = *v0;
  v3 = sub_249837144();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + 16 * i) = *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2497C5D7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881A00);
  v2 = *v0;
  v3 = sub_249837144();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * i) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2497C5F10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819F0);
  v2 = *v0;
  v3 = sub_249837144();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    v19 = 5 * i;
    v20 = *(_QWORD *)(v2 + 48) + 16 * v19;
    v21 = *(_BYTE *)(v20 + 64);
    v22 = *(_DWORD *)(v20 + 66);
    v23 = *(_QWORD *)(v20 + 72);
    v24 = *(_QWORD *)(v4 + 48) + 16 * v19;
    v25 = *(_OWORD *)(v20 + 16);
    v26 = *(_OWORD *)(v20 + 32);
    v27 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)v24 = *(_OWORD *)v20;
    *(_OWORD *)(v24 + 16) = v25;
    *(_OWORD *)(v24 + 32) = v26;
    *(_OWORD *)(v24 + 48) = v27;
    *(_BYTE *)(v24 + 64) = v21;
    *(_DWORD *)(v24 + 66) = v22;
    *(_QWORD *)(v24 + 72) = v23;
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2497C60D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819E8);
  v2 = *v0;
  v3 = sub_249837144();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v9 << 6); ; i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + i) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + i);
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_2497C6264()
{
  uint64_t *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819D8);
  v2 = (_QWORD *)*v0;
  v3 = sub_249837144();
  if (!v2[2])
  {
LABEL_28:
    OUTLINED_FUNCTION_10_1();
    *v1 = v3;
    OUTLINED_FUNCTION_81();
    return;
  }
  OUTLINED_FUNCTION_172();
  v5 = v2 + 7;
  v7 = (unint64_t)(v6 + 63) >> 6;
  if ((_QWORD *)v3 != v2 || v4 >= &v2[v7 + 7])
    memmove(v4, v2 + 7, 8 * v7);
  *(_QWORD *)(v3 + 16) = v2[2];
  OUTLINED_FUNCTION_172();
  v11 = -1;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  v12 = v11 & v2[7];
  v13 = (unint64_t)(v9 + 63) >> 6;
  if (!v12)
    goto LABEL_12;
LABEL_11:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v10 << 6); ; i = __clz(__rbit64(v17)) + (v10 << 6))
  {
    v19 = 70 * i;
    v20 = v2[6] + v19;
    v21 = *(_BYTE *)(v20 + 64);
    v22 = *(_DWORD *)(v20 + 66);
    v23 = *(_QWORD *)(v3 + 48) + v19;
    v24 = *(_OWORD *)(v20 + 16);
    v25 = *(_OWORD *)(v20 + 32);
    v26 = *(_OWORD *)(v20 + 48);
    *(_OWORD *)v23 = *(_OWORD *)v20;
    *(_OWORD *)(v23 + 16) = v24;
    *(_OWORD *)(v23 + 32) = v25;
    *(_OWORD *)(v23 + 48) = v26;
    *(_BYTE *)(v23 + 64) = v21;
    *(_DWORD *)(v23 + 66) = v22;
    if (v12)
      goto LABEL_11;
LABEL_12:
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = v5[v16];
    ++v10;
    if (!v17)
    {
      v10 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = v5[v10];
      if (!v17)
      {
        v10 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = v5[v10];
        if (!v17)
          break;
      }
    }
LABEL_25:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = v5[v18];
  if (v17)
  {
    v10 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= v13)
      goto LABEL_28;
    v17 = v5[v10];
    ++v18;
    if (v17)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_2497C640C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819D0);
  v3 = sub_249837150();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_249837690();
    sub_249748BCC(v18, v19);
    sub_249748BCC(v18, v19);
    sub_24983694C();
    sub_249748C10(v18, v19);
    result = sub_2498376E4();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2497C66D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t result;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881A08);
  v46 = sub_249837150();
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = 0;
    v33 = v0;
    v34 = v2 + 56;
    v4 = 1 << *(_BYTE *)(v2 + 32);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v2 + 56);
    v35 = (unint64_t)(v4 + 63) >> 6;
    v36 = v2;
    v37 = v46 + 56;
    if (!v6)
      goto LABEL_7;
    while (2)
    {
      v38 = (v6 - 1) & v6;
      v39 = v3;
      v7 = __clz(__rbit64(v6)) | (v3 << 6);
LABEL_21:
      v12 = (char *)(*(_QWORD *)(v2 + 48) + 16 * v7);
      v13 = *v12;
      v14 = v12[1];
      v15 = v12[3];
      v16 = v12[4];
      v17 = v12[5];
      v18 = v12[6];
      v44 = v12[2];
      v45 = v12[7];
      v19 = v12[8];
      v47 = v12[11];
      v40 = v12[12];
      v41 = v12[10];
      v20 = v12[13];
      v21 = v12[14];
      v42 = v12[15];
      v43 = v12[9];
      sub_249837690();
      sub_24983769C();
      v22 = sub_2498376E4();
      v23 = -1 << *(_BYTE *)(v46 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v37 + 8 * (v24 >> 6))) != 0)
      {
        v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v37 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v37 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
LABEL_30:
      *(_QWORD *)(v37 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      v31 = (_BYTE *)(*(_QWORD *)(v46 + 48) + 16 * v26);
      *v31 = v13;
      v31[1] = v14;
      v31[2] = v44;
      v31[3] = v15;
      v31[4] = v16;
      v31[5] = v17;
      v31[6] = v18;
      v31[7] = v45;
      v31[8] = v19;
      v31[9] = v43;
      v31[10] = v41;
      v31[11] = v47;
      v31[12] = v40;
      v31[13] = v20;
      v31[14] = v21;
      v31[15] = v42;
      ++*(_QWORD *)(v46 + 16);
      v2 = v36;
      v6 = v38;
      v3 = v39;
      if (v38)
        continue;
      break;
    }
LABEL_7:
    v8 = v3 + 1;
    if (__OFADD__(v3, 1))
      goto LABEL_36;
    if (v8 < v35)
    {
      v9 = *(_QWORD *)(v34 + 8 * v8);
      v10 = v3 + 1;
      if (v9)
        goto LABEL_20;
      v10 = v3 + 2;
      if (v3 + 2 < v35)
      {
        v9 = *(_QWORD *)(v34 + 8 * v10);
        if (v9)
          goto LABEL_20;
        v10 = v3 + 3;
        if (v3 + 3 < v35)
        {
          v9 = *(_QWORD *)(v34 + 8 * v10);
          if (v9)
            goto LABEL_20;
          v11 = v3 + 4;
          if (v3 + 4 < v35)
          {
            v9 = *(_QWORD *)(v34 + 8 * v11);
            if (v9)
            {
              v10 = v3 + 4;
LABEL_20:
              v38 = (v9 - 1) & v9;
              v39 = v10;
              v7 = __clz(__rbit64(v9)) + (v10 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
                break;
              if (v10 >= v35)
                goto LABEL_32;
              v9 = *(_QWORD *)(v34 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_20;
            }
LABEL_37:
            __break(1u);
          }
        }
      }
    }
LABEL_32:
    result = swift_release();
    v1 = v33;
  }
  else
  {
    result = swift_release();
  }
  *v1 = v46;
  return result;
}

uint64_t sub_2497C6AF4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881A00);
  result = sub_249837150();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  if (!v9)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    result = sub_249837684();
    v18 = -1 << *(_BYTE *)(v4 + 32);
    v19 = result & ~v18;
    v20 = v19 >> 6;
    if (((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        v24 = v20 == v23;
        if (v20 == v23)
          v20 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v21 = __clz(__rbit64((-1 << v19) & ~*(_QWORD *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v21) = v17;
    ++*(_QWORD *)(v4 + 16);
    if (v9)
      goto LABEL_6;
LABEL_7:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_36;
    if (v14 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v9 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    result = swift_release();
    v1 = v26;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2497C6D50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _BYTE v16[80];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819F0);
  v3 = sub_249837150();
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    result = swift_release();
    *v1 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  result = swift_retain();
  v10 = 0;
  if (!v7)
    goto LABEL_6;
LABEL_5:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    memcpy(v16, (const void *)(*(_QWORD *)(v2 + 48) + 80 * i), sizeof(v16));
    result = (uint64_t)sub_2497C42B0(v16, v3);
    if (v7)
      goto LABEL_5;
LABEL_6:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_22;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_22;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v7 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      goto LABEL_22;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2497C6EFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819E8);
  v3 = sub_249837150();
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  if (v6)
  {
    v8 = __clz(__rbit64(v6));
    goto LABEL_20;
  }
  if (v7 > 1)
  {
    v9 = *(_QWORD *)(v2 + 64);
    v10 = 1;
    if (v9)
      goto LABEL_19;
    v10 = 2;
    if (v7 > 2)
    {
      v9 = *(_QWORD *)(v2 + 72);
      if (v9)
        goto LABEL_19;
      v10 = 3;
      if (v7 > 3)
      {
        v9 = *(_QWORD *)(v2 + 80);
        if (!v9)
        {
          v11 = 4;
          if (v7 > 4)
          {
            v9 = *(_QWORD *)(v2 + 88);
            if (v9)
            {
              v10 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
              {
                __break(1u);
                JUMPOUT(0x2497C7220);
              }
              if (v10 >= v7)
                break;
              v9 = *(_QWORD *)(v2 + 56 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + v8);
        sub_249837690();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
  v1 = v0;
LABEL_23:
  *v1 = v3;
  return result;
}

unint64_t sub_2497C723C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t result;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  __int16 v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  uint64_t v65;
  int64_t v66;
  __int16 v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98[74];
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  __int16 v164;
  __int16 v165;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819D8);
  v34 = sub_249837150();
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_24:
    result = swift_release();
    *v30 = v34;
    return result;
  }
  v2 = 1 << *(_BYTE *)(v1 + 32);
  v31 = v1 + 56;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  else
    v3 = -1;
  v4 = v3 & *(_QWORD *)(v1 + 56);
  v32 = (unint64_t)(v2 + 63) >> 6;
  v33 = v1;
  result = swift_retain();
  v6 = 0;
  if (!v4)
    goto LABEL_7;
LABEL_6:
  v65 = (v4 - 1) & v4;
  v66 = v6;
  v7 = __clz(__rbit64(v4)) | (v6 << 6);
  v8 = v33;
  while (1)
  {
    v13 = *(_QWORD *)(v8 + 48) + 70 * v7;
    v14 = *(_BYTE *)(v13 + 1);
    v15 = *(_BYTE *)(v13 + 2);
    v96 = *(_BYTE *)(v13 + 3);
    v16 = *(_BYTE *)(v13 + 4);
    v64 = *(_BYTE *)(v13 + 6);
    v62 = *(_BYTE *)(v13 + 5);
    v63 = *(_BYTE *)(v13 + 7);
    v17 = *(_BYTE *)(v13 + 8);
    v18 = *(_BYTE *)(v13 + 10);
    v59 = v18;
    v60 = *(_BYTE *)(v13 + 9);
    v19 = *(_BYTE *)(v13 + 12);
    v57 = v19;
    v58 = *(_BYTE *)(v13 + 11);
    v20 = *(_BYTE *)(v13 + 14);
    v55 = v20;
    v56 = *(_BYTE *)(v13 + 13);
    v21 = *(_BYTE *)(v13 + 16);
    v53 = v21;
    v54 = *(_BYTE *)(v13 + 15);
    v22 = *(_BYTE *)(v13 + 18);
    v51 = v22;
    v52 = *(_BYTE *)(v13 + 17);
    v23 = *(_BYTE *)(v13 + 20);
    v49 = v23;
    v50 = *(_BYTE *)(v13 + 19);
    v24 = *(_BYTE *)(v13 + 22);
    v47 = v24;
    v48 = *(_BYTE *)(v13 + 21);
    v25 = *(_BYTE *)(v13 + 24);
    v45 = v25;
    v46 = *(_BYTE *)(v13 + 23);
    v26 = *(_BYTE *)(v13 + 26);
    v44 = *(_BYTE *)(v13 + 25);
    v27 = *(_BYTE *)(v13 + 27);
    v42 = *(_BYTE *)(v13 + 28);
    v41 = *(_BYTE *)(v13 + 29);
    v40 = *(_BYTE *)(v13 + 30);
    v39 = *(_BYTE *)(v13 + 31);
    v38 = *(_BYTE *)(v13 + 32);
    v37 = *(_BYTE *)(v13 + 33);
    v36 = *(_BYTE *)(v13 + 34);
    v35 = *(_BYTE *)(v13 + 35);
    v97 = *(_BYTE *)(v13 + 36);
    v94 = *(_BYTE *)(v13 + 37);
    v95 = *(_BYTE *)(v13 + 38);
    v92 = *(_BYTE *)(v13 + 39);
    v93 = *(_BYTE *)(v13 + 40);
    v90 = *(_BYTE *)(v13 + 41);
    v91 = *(_BYTE *)(v13 + 42);
    v88 = *(_BYTE *)(v13 + 43);
    v89 = *(_BYTE *)(v13 + 44);
    v86 = *(_BYTE *)(v13 + 45);
    v87 = *(_BYTE *)(v13 + 46);
    v84 = *(_BYTE *)(v13 + 47);
    v85 = *(_BYTE *)(v13 + 48);
    v82 = *(_BYTE *)(v13 + 49);
    v83 = *(_BYTE *)(v13 + 50);
    v80 = *(_BYTE *)(v13 + 51);
    v81 = *(_BYTE *)(v13 + 52);
    v78 = *(_BYTE *)(v13 + 53);
    v79 = *(_BYTE *)(v13 + 54);
    v76 = *(_BYTE *)(v13 + 55);
    v77 = *(_BYTE *)(v13 + 56);
    v74 = *(_BYTE *)(v13 + 57);
    v75 = *(_BYTE *)(v13 + 58);
    v72 = *(_BYTE *)(v13 + 59);
    v73 = *(_BYTE *)(v13 + 60);
    v70 = *(_BYTE *)(v13 + 61);
    v71 = *(_BYTE *)(v13 + 62);
    v68 = *(_BYTE *)(v13 + 63);
    v69 = *(_BYTE *)(v13 + 64);
    v28 = *(_WORD *)(v13 + 66);
    v43 = v28;
    v67 = *(_WORD *)(v13 + 68);
    v99 = *(_BYTE *)v13;
    v61 = v99;
    v100 = v14;
    v101 = v15;
    v102 = v96;
    v103 = v16;
    v104 = v62;
    v105 = v64;
    v106 = v63;
    v107 = v17;
    v108 = v60;
    v109 = v18;
    v110 = v58;
    v111 = v19;
    v112 = v56;
    v113 = v20;
    v114 = v54;
    v115 = v21;
    v116 = v52;
    v117 = v22;
    v118 = v50;
    v119 = v23;
    v120 = v48;
    v121 = v24;
    v122 = v46;
    v123 = v25;
    v124 = v44;
    v125 = v26;
    v126 = v27;
    v127 = v42;
    v128 = v41;
    v129 = v40;
    v130 = v39;
    v131 = v38;
    v132 = v37;
    v133 = v36;
    v134 = v35;
    v135 = v97;
    v136 = v94;
    v137 = v95;
    v138 = v92;
    v139 = v93;
    v140 = v90;
    v141 = v91;
    v142 = v88;
    v143 = v89;
    v144 = v86;
    v145 = v87;
    v146 = v84;
    v147 = v85;
    v148 = v82;
    v149 = v83;
    v150 = v80;
    v151 = v81;
    v152 = v78;
    v153 = v79;
    v154 = v76;
    v155 = v77;
    v156 = v74;
    v157 = v75;
    v158 = v72;
    v159 = v73;
    v160 = v70;
    v161 = v71;
    v162 = v68;
    v163 = v69;
    v164 = v28;
    v165 = v67;
    sub_249837690();
    UniversalControlLink.hash(into:)((uint64_t)v98);
    sub_2498376E4();
    result = sub_249837120();
    *(_QWORD *)(v34 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v29 = *(_QWORD *)(v34 + 48) + 70 * result;
    *(_BYTE *)v29 = v61;
    *(_BYTE *)(v29 + 1) = v14;
    *(_BYTE *)(v29 + 2) = v15;
    *(_BYTE *)(v29 + 3) = v96;
    *(_BYTE *)(v29 + 4) = v16;
    *(_BYTE *)(v29 + 5) = v62;
    *(_BYTE *)(v29 + 6) = v64;
    *(_BYTE *)(v29 + 7) = v63;
    *(_BYTE *)(v29 + 8) = v17;
    *(_BYTE *)(v29 + 9) = v60;
    *(_BYTE *)(v29 + 10) = v59;
    *(_BYTE *)(v29 + 11) = v58;
    *(_BYTE *)(v29 + 12) = v57;
    *(_BYTE *)(v29 + 13) = v56;
    *(_BYTE *)(v29 + 14) = v55;
    *(_BYTE *)(v29 + 15) = v54;
    *(_BYTE *)(v29 + 16) = v53;
    *(_BYTE *)(v29 + 17) = v52;
    *(_BYTE *)(v29 + 18) = v51;
    *(_BYTE *)(v29 + 19) = v50;
    *(_BYTE *)(v29 + 20) = v49;
    *(_BYTE *)(v29 + 21) = v48;
    *(_BYTE *)(v29 + 22) = v47;
    *(_BYTE *)(v29 + 23) = v46;
    *(_BYTE *)(v29 + 24) = v45;
    *(_BYTE *)(v29 + 25) = v44;
    *(_BYTE *)(v29 + 26) = v26;
    *(_BYTE *)(v29 + 27) = v27;
    *(_BYTE *)(v29 + 28) = v42;
    *(_BYTE *)(v29 + 29) = v41;
    *(_BYTE *)(v29 + 30) = v40;
    *(_BYTE *)(v29 + 31) = v39;
    *(_BYTE *)(v29 + 32) = v38;
    *(_BYTE *)(v29 + 33) = v37;
    *(_BYTE *)(v29 + 34) = v36;
    *(_BYTE *)(v29 + 35) = v35;
    *(_BYTE *)(v29 + 36) = v97;
    *(_BYTE *)(v29 + 37) = v94;
    *(_BYTE *)(v29 + 38) = v95;
    *(_BYTE *)(v29 + 39) = v92;
    *(_BYTE *)(v29 + 40) = v93;
    *(_BYTE *)(v29 + 41) = v90;
    *(_BYTE *)(v29 + 42) = v91;
    *(_BYTE *)(v29 + 43) = v88;
    *(_BYTE *)(v29 + 44) = v89;
    *(_BYTE *)(v29 + 45) = v86;
    *(_BYTE *)(v29 + 46) = v87;
    *(_BYTE *)(v29 + 47) = v84;
    *(_BYTE *)(v29 + 48) = v85;
    *(_BYTE *)(v29 + 49) = v82;
    *(_BYTE *)(v29 + 50) = v83;
    *(_BYTE *)(v29 + 51) = v80;
    *(_BYTE *)(v29 + 52) = v81;
    *(_BYTE *)(v29 + 53) = v78;
    *(_BYTE *)(v29 + 54) = v79;
    *(_BYTE *)(v29 + 55) = v76;
    *(_BYTE *)(v29 + 56) = v77;
    *(_BYTE *)(v29 + 57) = v74;
    *(_BYTE *)(v29 + 58) = v75;
    *(_BYTE *)(v29 + 59) = v72;
    *(_BYTE *)(v29 + 60) = v73;
    *(_BYTE *)(v29 + 61) = v70;
    *(_BYTE *)(v29 + 62) = v71;
    *(_BYTE *)(v29 + 63) = v68;
    *(_BYTE *)(v29 + 64) = v69;
    *(_WORD *)(v29 + 66) = v43;
    *(_WORD *)(v29 + 68) = v67;
    ++*(_QWORD *)(v34 + 16);
    v4 = v65;
    v6 = v66;
    if (v65)
      goto LABEL_6;
LABEL_7:
    v9 = v6 + 1;
    v8 = v33;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v9 >= v32)
      goto LABEL_23;
    v10 = *(_QWORD *)(v31 + 8 * v9);
    v11 = v6 + 1;
    if (!v10)
    {
      v11 = v6 + 2;
      if (v6 + 2 >= v32)
        goto LABEL_23;
      v10 = *(_QWORD *)(v31 + 8 * v11);
      if (!v10)
      {
        v11 = v6 + 3;
        if (v6 + 3 >= v32)
          goto LABEL_23;
        v10 = *(_QWORD *)(v31 + 8 * v11);
        if (!v10)
          break;
      }
    }
LABEL_20:
    v65 = (v10 - 1) & v10;
    v66 = v11;
    v7 = __clz(__rbit64(v10)) + (v11 << 6);
  }
  v12 = v6 + 4;
  if (v6 + 4 >= v32)
  {
LABEL_23:
    swift_release();
    goto LABEL_24;
  }
  v10 = *(_QWORD *)(v31 + 8 * v12);
  if (v10)
  {
    v11 = v6 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v10 = *(_QWORD *)(v31 + 8 * v11);
    ++v12;
    if (v10)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2497C7A24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void sub_2497C7A5C()
{
  sub_249752D34();
}

void sub_2497C7A70()
{
  sub_249752D50();
}

void sub_2497C7A84()
{
  sub_249752D88();
}

void sub_2497C7A98()
{
  sub_249752D18();
}

void (*sub_2497C7AAC(_QWORD *a1, unsigned __int8 a2))(uint64_t a1)
{
  _QWORD *v4;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_2497C7CF0(v4);
  v4[9] = sub_2497C7B5C((uint64_t)(v4 + 4), a2);
  return sub_2497C7B28;
}

void sub_2497C7B28(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  OUTLINED_FUNCTION_118((uint64_t)v1);
  OUTLINED_FUNCTION_116(v1);
}

void (*sub_2497C7B5C(uint64_t a1, unsigned __int8 a2))(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  void (*result)(uint64_t);

  v3 = v2;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 24) = a2;
  v6 = *v2;
  v7 = sub_2497F2638(a2);
  *(_BYTE *)(a1 + 25) = v8 & 1;
  if (__OFADD__(*(_QWORD *)(v6 + 16), (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819B0);
  if ((sub_249837270() & 1) != 0)
  {
    v11 = sub_2497F2638(a2);
    if ((v10 & 1) == (v12 & 1))
    {
      v9 = v11;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t))sub_24983763C();
    __break(1u);
    return result;
  }
LABEL_5:
  *(_QWORD *)(a1 + 16) = v9;
  if ((v10 & 1) != 0)
    v13 = *(_QWORD *)(*(_QWORD *)(*v3 + 56) + 8 * v9);
  else
    v13 = 0;
  *(_QWORD *)a1 = v13;
  return sub_2497C7C58;
}

void sub_2497C7C58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)a1;
  if (!*(_QWORD *)a1)
  {
    if ((*(_BYTE *)(a1 + 25) & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578819C0);
      OUTLINED_FUNCTION_194();
      sub_249837288();
      return;
    }
    goto LABEL_6;
  }
  v2 = **(_QWORD ***)(a1 + 8);
  if ((*(_BYTE *)(a1 + 25) & 1) != 0)
  {
    *(_QWORD *)(v2[7] + 8 * *(_QWORD *)(a1 + 16)) = v1;
LABEL_6:
    OUTLINED_FUNCTION_81();
    return;
  }
  sub_2497AC3D0(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), v1, v2);
}

uint64_t (*sub_2497C7CF0(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2497C7D10;
}

uint64_t sub_2497C7D10(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_2497C7D1C(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v3 = v1[2];
  v2 = v1[3];
  v4 = (v2 >> 1) - v3;
  if (__OFSUB__(v2 >> 1, v3))
  {
    __break(1u);
    goto LABEL_16;
  }
  v5 = result;
  if ((v2 & 1) == 0)
    goto LABEL_7;
  v6 = v1[1];
  sub_249837618();
  swift_unknownObjectRetain();
  v7 = swift_dynamicCastClass();
  if (!v7)
  {
    swift_unknownObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
  }
  v8 = *(_QWORD *)(v7 + 16);
  if (v6 + 16 * v3 + 16 * v4 != v7 + 16 * v8 + 32)
  {
    swift_release();
LABEL_7:
    v9 = v4;
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v7 + 24);
  result = swift_release();
  v11 = (v10 >> 1) - v8;
  v12 = __OFADD__(v4, v11);
  v9 = v4 + v11;
  if (!v12)
  {
LABEL_9:
    result = v4 + v5;
    if (!__OFADD__(v4, v5))
    {
      if (v9 >= result)
        return sub_2497C93E0(result);
      if (v9 + 0x4000000000000000 >= 0)
      {
        v13 = 2 * v9;
        if (v13 > result)
          result = v13;
        return sub_2497C93E0(result);
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2497C7E10(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v3 = v1[2];
  v2 = v1[3];
  v4 = (v2 >> 1) - v3;
  if (__OFSUB__(v2 >> 1, v3))
  {
    __break(1u);
    goto LABEL_16;
  }
  v5 = result;
  if ((v2 & 1) == 0)
    goto LABEL_7;
  v6 = v1[1];
  sub_249837618();
  swift_unknownObjectRetain();
  v7 = swift_dynamicCastClass();
  if (!v7)
  {
    swift_unknownObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
  }
  v8 = *(_QWORD *)(v7 + 16);
  if (v6 + 8 * v3 + 8 * v4 != v7 + 8 * v8 + 32)
  {
    swift_release();
LABEL_7:
    v9 = v4;
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v7 + 24);
  result = swift_release();
  v11 = (v10 >> 1) - v8;
  v12 = __OFADD__(v4, v11);
  v9 = v4 + v11;
  if (!v12)
  {
LABEL_9:
    result = v4 + v5;
    if (!__OFADD__(v4, v5))
    {
      if (v9 >= result)
        return sub_2497C95A0(result);
      if (v9 + 0x4000000000000000 >= 0)
      {
        v13 = 2 * v9;
        if (v13 > result)
          result = v13;
        return sub_2497C95A0(result);
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2497C7F04(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v3 = v1[2];
  v2 = v1[3];
  v4 = (v2 >> 1) - v3;
  if (__OFSUB__(v2 >> 1, v3))
  {
    __break(1u);
    goto LABEL_16;
  }
  v5 = result;
  if ((v2 & 1) == 0)
    goto LABEL_7;
  v6 = v1[1];
  sub_249837618();
  swift_unknownObjectRetain();
  v7 = swift_dynamicCastClass();
  if (!v7)
  {
    swift_unknownObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
  }
  v8 = *(_QWORD *)(v7 + 16);
  if (v6 + 40 * v3 + 40 * v4 != v7 + 40 * v8 + 32)
  {
    swift_release();
LABEL_7:
    v9 = v4;
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v7 + 24);
  result = swift_release();
  v11 = (v10 >> 1) - v8;
  v12 = __OFADD__(v4, v11);
  v9 = v4 + v11;
  if (!v12)
  {
LABEL_9:
    result = v4 + v5;
    if (!__OFADD__(v4, v5))
    {
      if (v9 >= result)
        return sub_2497C9764(result);
      if (v9 + 0x4000000000000000 >= 0)
      {
        v13 = 2 * v9;
        if (v13 > result)
          result = v13;
        return sub_2497C9764(result);
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2497C7FFC(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v3 = v1[2];
  v2 = v1[3];
  v4 = (v2 >> 1) - v3;
  if (__OFSUB__(v2 >> 1, v3))
  {
    __break(1u);
    goto LABEL_16;
  }
  v5 = result;
  if ((v2 & 1) == 0)
    goto LABEL_7;
  v6 = v1[1];
  sub_249837618();
  swift_unknownObjectRetain();
  v7 = swift_dynamicCastClass();
  if (!v7)
  {
    swift_unknownObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
  }
  v8 = *(_QWORD *)(v7 + 16);
  if (v6 + 16 * v3 + 16 * v4 != v7 + 16 * v8 + 32)
  {
    swift_release();
LABEL_7:
    v9 = v4;
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v7 + 24);
  result = swift_release();
  v11 = (v10 >> 1) - v8;
  v12 = __OFADD__(v4, v11);
  v9 = v4 + v11;
  if (!v12)
  {
LABEL_9:
    result = v4 + v5;
    if (!__OFADD__(v4, v5))
    {
      if (v9 >= result)
        return sub_2497C9930(result);
      if (v9 + 0x4000000000000000 >= 0)
      {
        v13 = 2 * v9;
        if (v13 > result)
          result = v13;
        return sub_2497C9930(result);
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2497C80F0(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v3 = v1[2];
  v2 = v1[3];
  v4 = (v2 >> 1) - v3;
  if (__OFSUB__(v2 >> 1, v3))
  {
    __break(1u);
    goto LABEL_16;
  }
  v5 = result;
  if ((v2 & 1) == 0)
    goto LABEL_7;
  v6 = v1[1];
  sub_249837618();
  swift_unknownObjectRetain();
  v7 = swift_dynamicCastClass();
  if (!v7)
  {
    swift_unknownObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
  }
  v8 = *(_QWORD *)(v7 + 16);
  if (v6 + 80 * v3 + 80 * v4 != v7 + 80 * v8 + 32)
  {
    swift_release();
LABEL_7:
    v9 = v4;
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v7 + 24);
  result = swift_release();
  v11 = (v10 >> 1) - v8;
  v12 = __OFADD__(v4, v11);
  v9 = v4 + v11;
  if (!v12)
  {
LABEL_9:
    result = v4 + v5;
    if (!__OFADD__(v4, v5))
    {
      if (v9 >= result)
        return sub_2497C9AF0(result);
      if (v9 + 0x4000000000000000 >= 0)
      {
        v13 = 2 * v9;
        if (v13 > result)
          result = v13;
        return sub_2497C9AF0(result);
      }
      goto LABEL_17;
    }
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_2497C81E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = v3 >> 1;
  v5 = __OFSUB__(v3 >> 1, v2);
  v6 = (v3 >> 1) - v2;
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = a1 - v6;
  if (__OFSUB__(a1, v6))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v7)
  {
LABEL_10:
    OUTLINED_FUNCTION_10_0();
    return;
  }
  sub_249837618();
  swift_unknownObjectRetain();
  v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
  }
  v9 = *(_QWORD *)(v8 + 16);
  v5 = __OFADD__(v9, v7);
  v10 = v9 + v7;
  if (v5)
    goto LABEL_13;
  *(_QWORD *)(v8 + 16) = v10;
  swift_release();
  v11 = v4 + v7;
  if (__OFADD__(v4, v7))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((v11 & 0x8000000000000000) == 0)
  {
    *(_QWORD *)(v1 + 24) = v3 & 1 | (2 * v11);
    goto LABEL_10;
  }
LABEL_15:
  __break(1u);
}

void sub_2497C8290(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24) >> 1;
  v5 = v4 - v3;
  if (__OFSUB__(v4, v3))
    goto LABEL_32;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8 == a2)
    goto LABEL_26;
  if (v8 > a2)
  {
    v28 = a1 + 32;
    v9 = (uint64_t *)(a1 + 32 + 16 * a2);
    v11 = *v9;
    v10 = v9[1];
    sub_249748BCC(*v9, v10);
    if (v10 >> 60 != 15)
    {
      v29 = a2 + 1;
      v27 = a1;
      while (2)
      {
        if (__OFADD__(v5, 1))
        {
          __break(1u);
        }
        else
        {
          v30 = sub_2497C9CBC(v5, v5 + 1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
          v12 = sub_2497CA6C4();
          sub_2497CA6D4((uint64_t)&v30, v5, 0, (void (*)(uint64_t, uint64_t))v12);
          swift_release();
          swift_release();
          v14 = *(_QWORD *)(v2 + 16);
          v13 = *(_QWORD *)(v2 + 24);
          v15 = (v13 >> 1) - v14;
          if (!__OFSUB__(v13 >> 1, v14))
          {
            v16 = *(_QWORD *)(v2 + 8);
            if ((v13 & 1) == 0)
            {
LABEL_14:
              v22 = v16 + 16 * v14 + 8;
              v23 = v29;
LABEL_15:
              v24 = (unint64_t *)(v22 + 16 * v5);
              while (v10 >> 60 != 15 && v5 < v15)
              {
                ++v5;
                *(v24 - 1) = v11;
                *v24 = v10;
                v24 += 2;
                v10 = 0xF000000000000000;
                v11 = 0;
                if (v23 != v8)
                {
                  if ((v29 & 0x8000000000000000) != 0)
                    goto LABEL_29;
                  if (v23 < *(_QWORD *)(v27 + 16))
                  {
                    v26 = (uint64_t *)(v28 + 16 * v23);
                    v11 = *v26;
                    v10 = v26[1];
                    sub_249748BCC(*v26, v10);
                    ++v23;
                    goto LABEL_15;
                  }
                  goto LABEL_30;
                }
              }
              sub_2497C81E8(v5);
              v29 = v23;
              if (v10 >> 60 != 15)
                continue;
              goto LABEL_26;
            }
            sub_249837618();
            swift_unknownObjectRetain();
            v17 = swift_dynamicCastClass();
            if (!v17)
            {
              swift_unknownObjectRelease();
              v17 = MEMORY[0x24BEE4AF8];
            }
            v18 = *(_QWORD *)(v17 + 16);
            if (v16 + 16 * v14 + 16 * v15 != v17 + 16 * v18 + 32)
            {
              swift_release();
              goto LABEL_14;
            }
            v19 = *(_QWORD *)(v17 + 24);
            swift_release();
            v20 = (v19 >> 1) - v18;
            v21 = __OFADD__(v15, v20);
            v15 += v20;
            if (!v21)
              goto LABEL_14;
            goto LABEL_31;
          }
        }
        break;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_2497C84B0(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  BOOL v10;
  uint64_t (*v11)(void);
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = v2;
  v5 = *(_QWORD *)(v2 + 24);
  v31 = *(_QWORD *)(v2 + 16);
  v6 = (v5 >> 1) - v31;
  if (__OFSUB__(v5 >> 1, v31))
    goto LABEL_54;
  v3 = a2;
  v2 = a1;
  if (a1 >> 62)
LABEL_55:
    v7 = sub_249837324();
  else
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7 == v3)
    return swift_bridgeObjectRelease();
  sub_2497760E0(v3, (v2 & 0xC000000000000001) == 0, v2);
  if ((v2 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x24BCF8148](v3, v2);
    v8 = result;
  }
  else
  {
    v8 = *(_QWORD *)(v2 + 8 * v3 + 32);
    result = swift_retain();
  }
  v10 = __OFADD__(v3++, 1);
  if (!v10)
  {
    v27 = v2;
    v28 = v2 & 0xFFFFFFFFFFFFFF8;
    v25 = v2 & 0xC000000000000001;
    v26 = v7;
    while (1)
    {
      if (__OFADD__(v6, 1))
      {
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      v32 = sub_2497C9EB8(v6, v6 + 1, *(_QWORD *)v4, *(_QWORD *)(v4 + 8), v31, v5);
      v11 = sub_2497CA6C4();
      v2 = v4;
      sub_2497CA908((uint64_t)&v32, v6, 0, (void (*)(uint64_t, uint64_t))v11);
      swift_release();
      swift_release();
      v12 = *(_QWORD *)(v4 + 24);
      v31 = *(_QWORD *)(v4 + 16);
      v13 = (v12 >> 1) - v31;
      if (__OFSUB__(v12 >> 1, v31))
        goto LABEL_48;
      v14 = *(_QWORD *)(v4 + 8);
      v30 = *(_QWORD *)(v4 + 24);
      v29 = v12 >> 1;
      if ((v12 & 1) == 0)
        goto LABEL_16;
      sub_249837618();
      swift_unknownObjectRetain();
      v15 = swift_dynamicCastClass();
      if (!v15)
      {
        swift_unknownObjectRelease();
        v15 = MEMORY[0x24BEE4AF8];
      }
      v16 = *(_QWORD *)(v15 + 16);
      if (v14 + 8 * v31 + 8 * v13 != v15 + 8 * v16 + 32)
        break;
      v4 = *(_QWORD *)(v15 + 24);
      swift_release();
      v17 = (v4 >> 1) - v16;
      v5 = v13 + v17;
      if (__OFADD__(v13, v17))
        goto LABEL_53;
      v4 = v2;
LABEL_19:
      v2 = v27;
      if (v6 < (uint64_t)v5)
      {
        v18 = v14 + 8 * v31;
        *(_QWORD *)(v18 + 8 * v6) = v8;
        if (v3 != v26)
        {
          ++v6;
          while (1)
          {
            if (v25)
            {
              v8 = MEMORY[0x24BCF8148](v3, v27);
            }
            else
            {
              if ((v3 & 0x8000000000000000) != 0)
                goto LABEL_45;
              if (v3 >= *(_QWORD *)(v28 + 16))
                goto LABEL_46;
              v8 = *(_QWORD *)(v27 + 8 * v3 + 32);
              swift_retain();
            }
            v19 = v3 + 1;
            if (__OFADD__(v3, 1))
              break;
            if (v6 >= (uint64_t)v5)
            {
              v6 = v5;
              ++v3;
              goto LABEL_34;
            }
            *(_QWORD *)(v18 + 8 * v6++) = v8;
            ++v3;
            if (v19 == v26)
            {
              v8 = 0;
              goto LABEL_32;
            }
          }
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        v8 = 0;
        ++v6;
LABEL_32:
        v3 = v26;
      }
LABEL_34:
      v20 = v6 - v13;
      v5 = v30;
      if (__OFSUB__(v6, v13))
        goto LABEL_49;
      if (v20)
      {
        v5 = sub_249837618();
        swift_unknownObjectRetain();
        v21 = swift_dynamicCastClass();
        if (!v21)
        {
          swift_unknownObjectRelease();
          v21 = MEMORY[0x24BEE4AF8];
        }
        v22 = *(_QWORD *)(v21 + 16);
        v10 = __OFADD__(v22, v20);
        v23 = v22 + v20;
        if (v10)
          goto LABEL_50;
        *(_QWORD *)(v21 + 16) = v23;
        swift_release();
        v24 = v29 + v20;
        if (__OFADD__(v29, v20))
          goto LABEL_51;
        if ((v24 & 0x8000000000000000) != 0)
          goto LABEL_52;
        v5 = v30 & 1 | (2 * v24);
        *(_QWORD *)(v4 + 24) = v5;
      }
      if (!v8)
        return swift_bridgeObjectRelease();
    }
    swift_release();
LABEL_16:
    v5 = v13;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_2497C87E8(uint64_t result, unint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = v2[2];
  v3 = v2[3];
  v5 = (v3 >> 1) - v4;
  if (__OFSUB__(v3 >> 1, v4))
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v6 = *(_QWORD *)(result + 16);
  v43 = v6;
  if (v6 == a2)
    return swift_bridgeObjectRelease();
  if (v6 > a2)
  {
    v7 = (_QWORD *)(result + 40 * a2);
    v8 = a2 + 1;
    v9 = v7[8];
    v40 = v7[6];
    v41 = v7[7];
    v39 = v7[5];
    v37 = result;
    v38 = v7[4];
    result = swift_retain();
    v42 = v2;
    while (!__OFADD__(v5, 1))
    {
      v48 = sub_2497CA0B8(v5, v5 + 1, *v2, v2[1], v4, v3);
      v10 = sub_2497CA6C4();
      sub_2497CAB58((uint64_t)&v48, v5, 0, (void (*)(uint64_t, uint64_t))v10);
      swift_release();
      result = swift_release();
      v4 = v2[2];
      v3 = v2[3];
      v44 = v3 >> 1;
      v11 = (v3 >> 1) - v4;
      if (__OFSUB__(v3 >> 1, v4))
        goto LABEL_41;
      v45 = v9;
      v12 = v8;
      v47 = v2[1];
      if ((v3 & 1) != 0)
      {
        sub_249837618();
        swift_unknownObjectRetain();
        v13 = swift_dynamicCastClass();
        if (!v13)
        {
          swift_unknownObjectRelease();
          v13 = MEMORY[0x24BEE4AF8];
        }
        v14 = *(_QWORD *)(v13 + 16);
        if (v47 + 40 * v4 + 40 * v11 == v13 + 40 * v14 + 32)
        {
          v16 = *(_QWORD *)(v13 + 24);
          result = swift_release();
          v17 = (v16 >> 1) - v14;
          v15 = v11 + v17;
          if (__OFADD__(v11, v17))
            goto LABEL_46;
        }
        else
        {
          result = swift_release();
          v15 = (v3 >> 1) - v4;
        }
        v18 = v43;
      }
      else
      {
        v15 = (v3 >> 1) - v4;
        v18 = v43;
      }
      if (v5 >= v15)
      {
        v2 = v42;
        v8 = v12;
        v9 = v45;
      }
      else
      {
        v19 = (_QWORD *)(v47 + 40 * v4 + 40 * v5);
        *v19 = v38;
        v19[1] = v39;
        v19[2] = v40;
        v19[3] = v41;
        v19[4] = v45;
        if (v12 == v18)
        {
          v38 = 0;
          v39 = 0;
          v40 = 0;
          v41 = 0;
          v9 = 0;
          ++v5;
          v8 = v18;
          v2 = v42;
        }
        else
        {
          v35 = (v3 >> 1) - v4;
          v36 = v3;
          v46 = v4;
          v20 = *(_QWORD *)(v37 + 16);
          if (v12 >= v20)
          {
LABEL_39:
            __break(1u);
            break;
          }
          v21 = 0;
          v22 = 0;
          v23 = v47 + 40 * v4 + 40 * v5;
          v24 = v37 + 40 * v12;
          while (1)
          {
            v25 = *(_QWORD *)(v24 + v21 + 40);
            v26 = *(_QWORD *)(v24 + v21 + 48);
            v27 = *(_QWORD *)(v24 + v21 + 56);
            v28 = *(_QWORD *)(v24 + v21 + 64);
            if (v5 + v22 + 1 >= v15)
            {
              v40 = *(_QWORD *)(v24 + v21 + 48);
              v41 = *(_QWORD *)(v24 + v21 + 56);
              v38 = *(_QWORD *)(v24 + v21 + 32);
              v39 = *(_QWORD *)(v24 + v21 + 40);
              v8 = v12 + v22 + 1;
              v5 += v22 + 1;
              v9 = *(_QWORD *)(v24 + v21 + 64);
              goto LABEL_26;
            }
            v29 = (_QWORD *)(v23 + v21);
            v29[5] = *(_QWORD *)(v24 + v21 + 32);
            v29[6] = v25;
            v29[7] = v26;
            v29[8] = v27;
            v29[9] = v28;
            if (v43 - 1 - v12 == v22)
              break;
            result = swift_retain();
            ++v22;
            v21 += 40;
            if (v12 + v22 >= v20)
              goto LABEL_39;
          }
          v38 = 0;
          v39 = 0;
          v40 = 0;
          v41 = 0;
          v9 = 0;
          v5 += v22 + 2;
          v8 = v18;
LABEL_26:
          result = swift_retain();
          v2 = v42;
          v4 = v46;
          v11 = v35;
          v3 = v36;
        }
      }
      v30 = v5 - v11;
      if (__OFSUB__(v5, v11))
        goto LABEL_42;
      if (v30)
      {
        sub_249837618();
        swift_unknownObjectRetain();
        result = swift_dynamicCastClass();
        if (!result)
        {
          swift_unknownObjectRelease();
          result = MEMORY[0x24BEE4AF8];
        }
        v31 = *(_QWORD *)(result + 16);
        v32 = __OFADD__(v31, v30);
        v33 = v31 + v30;
        if (v32)
          goto LABEL_43;
        *(_QWORD *)(result + 16) = v33;
        result = swift_release();
        v34 = v44 + v30;
        if (__OFADD__(v44, v30))
          goto LABEL_44;
        if ((v34 & 0x8000000000000000) != 0)
          goto LABEL_45;
        v3 = v3 & 1 | (2 * v34);
        v2[3] = v3;
      }
      if (!v9)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_48:
  __break(1u);
  return result;
}

void sub_2497C8B98(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t (*v10)(void);
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  char v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24) >> 1;
  v4 = v3 - v2;
  if (!__OFSUB__(v3, v2))
  {
    v33 = v1;
    v5 = a1[1];
    v37 = *a1;
    v38 = v5;
    v39 = *((_QWORD *)a1 + 4);
    sub_2497CCA2C((uint64_t)&v35);
    v6 = v37;
    v7 = *((_QWORD *)&v38 + 1);
    v8 = v39;
    if ((v36 & 1) != 0)
    {
LABEL_3:
      sub_249757AC0();
      return;
    }
    v9 = (unint64_t)(v38 + 64) >> 6;
    v32 = *((_QWORD *)&v37 + 1);
    while (1)
    {
      if (__OFADD__(v4, 1))
        goto LABEL_46;
      v34 = sub_2497CA2C0(v4, v4 + 1, *(_QWORD *)v33, *(_QWORD *)(v33 + 8), *(_QWORD *)(v33 + 16), *(_QWORD *)(v33 + 24));
      v10 = sub_2497CA6C4();
      sub_2497CADC0(&v34, v4, 0, (void (*)(uint64_t, uint64_t))v10);
      swift_release();
      swift_release();
      v12 = *(_QWORD *)(v33 + 16);
      v11 = *(_QWORD *)(v33 + 24);
      v13 = (v11 >> 1) - v12;
      if (__OFSUB__(v11 >> 1, v12))
        break;
      v14 = *(_QWORD *)(v33 + 8);
      if ((v11 & 1) != 0)
      {
        sub_249837618();
        swift_unknownObjectRetain();
        v15 = swift_dynamicCastClass();
        if (!v15)
        {
          swift_unknownObjectRelease();
          v15 = MEMORY[0x24BEE4AF8];
        }
        v16 = *(_QWORD *)(v15 + 16);
        if (v14 + 16 * v12 + 16 * v13 == v15 + 16 * v16 + 32)
        {
          v17 = *(_QWORD *)(v15 + 24);
          swift_release();
          v18 = (v17 >> 1) - v16;
          v19 = __OFADD__(v13, v18);
          v13 += v18;
          if (v19)
            goto LABEL_48;
        }
        else
        {
          swift_release();
        }
      }
      v20 = v36;
      if ((v36 & 1) == 0 && v4 < v13)
      {
        while (1)
        {
          v21 = *((_QWORD *)&v35 + 1);
          v22 = v35;
          v23 = v14 + 16 * v12 + 16 * v4;
          *(_WORD *)v23 = v35;
          *(_BYTE *)(v23 + 2) = BYTE2(v22);
          *(_BYTE *)(v23 + 3) = BYTE3(v22);
          *(_BYTE *)(v23 + 4) = BYTE4(v22);
          *(_BYTE *)(v23 + 5) = BYTE5(v22);
          *(_BYTE *)(v23 + 6) = BYTE6(v22);
          *(_BYTE *)(v23 + 7) = HIBYTE(v22);
          *(_QWORD *)(v23 + 8) = v21;
          ++v4;
          if (!v8)
            break;
          v24 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
          v25 = v24 | (v7 << 6);
LABEL_27:
          v35 = *(_OWORD *)(*(_QWORD *)(v6 + 48) + 16 * v25);
          if (v4 >= v13)
          {
            v20 = 0;
            goto LABEL_42;
          }
        }
        v26 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_46:
          __break(1u);
          break;
        }
        if (v26 >= v9)
        {
          v29 = v7;
LABEL_41:
          v8 = 0;
          v35 = 0uLL;
          v20 = 1;
          v7 = v29;
          goto LABEL_42;
        }
        v27 = *(_QWORD *)(v32 + 8 * v26);
        if (!v27)
        {
          v28 = v7 + 2;
          v29 = v7 + 1;
          if (v7 + 2 >= v9)
            goto LABEL_41;
          v27 = *(_QWORD *)(v32 + 8 * v28);
          if (v27)
            goto LABEL_22;
          v30 = v7 + 3;
          v29 = v7 + 2;
          if (v7 + 3 >= v9)
            goto LABEL_41;
          v27 = *(_QWORD *)(v32 + 8 * v30);
          if (v27)
          {
LABEL_25:
            v26 = v30;
          }
          else
          {
            v28 = v7 + 4;
            v29 = v7 + 3;
            if (v7 + 4 >= v9)
              goto LABEL_41;
            v27 = *(_QWORD *)(v32 + 8 * v28);
            if (v27)
            {
LABEL_22:
              v26 = v28;
            }
            else
            {
              v30 = v7 + 5;
              v29 = v7 + 4;
              if (v7 + 5 >= v9)
                goto LABEL_41;
              v27 = *(_QWORD *)(v32 + 8 * v30);
              if (v27)
                goto LABEL_25;
              v26 = v7 + 6;
              v29 = v7 + 5;
              if (v7 + 6 >= v9)
                goto LABEL_41;
              v27 = *(_QWORD *)(v32 + 8 * v26);
              if (!v27)
              {
                v31 = v7 + 7;
                while (v31 < v9)
                {
                  v27 = *(_QWORD *)(v32 + 8 * v31++);
                  if (v27)
                  {
                    v26 = v31 - 1;
                    goto LABEL_26;
                  }
                }
                v29 = v9 - 1;
                goto LABEL_41;
              }
            }
          }
        }
LABEL_26:
        v8 = (v27 - 1) & v27;
        v25 = __clz(__rbit64(v27)) + (v26 << 6);
        v7 = v26;
        goto LABEL_27;
      }
LABEL_42:
      v36 = v20;
      sub_2497C81E8(v4);
      if ((v20 & 1) != 0)
        goto LABEL_3;
    }
    __break(1u);
LABEL_48:
    __break(1u);
  }
  __break(1u);
}

void sub_2497C8F20(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24) >> 1;
  v5 = v4 - v3;
  if (__OFSUB__(v4, v3))
    goto LABEL_32;
  v6 = *(_QWORD *)(a1 + 16);
  v38 = v6;
  if (v6 == a2)
    goto LABEL_26;
  if (v6 > a2)
  {
    v37 = a1 + 32;
    v7 = a1 + 32 + 80 * a2;
    v8 = *(unsigned __int8 *)(v7 + 64);
    if (v8 != 4)
    {
      v9 = ((unint64_t)*(unsigned __int16 *)(v7 + 68) << 32) | ((unint64_t)*(unsigned __int16 *)(v7 + 66) << 16) | v8;
      v10 = a2 + 1;
      v11 = *(_QWORD *)(v37 + 80 * a2 + 72);
      v13 = *(_QWORD *)(v7 + 48);
      v12 = *(_QWORD *)(v7 + 56);
      v14 = *(_QWORD *)(v7 + 32);
      v15 = *(_QWORD *)(v7 + 40);
      v17 = *(_QWORD *)(v7 + 16);
      v16 = *(_QWORD *)(v7 + 24);
      v18 = *(_QWORD *)v7;
      v19 = *(_QWORD *)(v7 + 8);
      v36 = v2;
      while (2)
      {
        if (__OFADD__(v5, 1))
        {
          __break(1u);
        }
        else
        {
          v45 = v11;
          v47 = v9;
          v41 = v10;
          v20 = v5;
          v51 = sub_2497CA4BC(v5, v5 + 1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
          v21 = sub_2497CA6C4();
          v49 = v20;
          sub_2497CAF7C(&v51, v20, 0, (void (*)(uint64_t, uint64_t))v21);
          swift_release();
          swift_release();
          v22 = *(_QWORD *)(v2 + 24);
          v43 = *(_QWORD *)(v2 + 16);
          v23 = (v22 >> 1) - v43;
          if (!__OFSUB__(v22 >> 1, v43))
          {
            v42 = *(_QWORD *)(v2 + 8);
            if ((v22 & 1) == 0)
            {
LABEL_14:
              v28 = v41;
              v30 = v47;
              v29 = v49;
              v31 = v45;
LABEL_15:
              v32 = (_QWORD *)(v42 + 80 * v43 + 72 + 80 * v29);
              while (1)
              {
                v33 = v30;
                if (v30 == 4 || v29 >= v23)
                  break;
                *(v32 - 9) = v18;
                *(v32 - 8) = v19;
                *(v32 - 7) = v17;
                *(v32 - 6) = v16;
                *(v32 - 5) = v14;
                *(v32 - 4) = v15;
                *(v32 - 3) = v13;
                *(v32 - 2) = v12;
                ++v29;
                *((_BYTE *)v32 - 8) = v30;
                *((_WORD *)v32 - 3) = WORD1(v30);
                *((_WORD *)v32 - 2) = WORD2(v30);
                *v32 = v31;
                v32 += 10;
                v30 = 4;
                v31 = 0;
                v12 = 0;
                v13 = 0;
                v15 = 0;
                v14 = 0;
                v16 = 0;
                v17 = 0;
                v19 = 0;
                v18 = 0;
                if (v28 != v38)
                {
                  if ((v41 & 0x8000000000000000) != 0)
                    goto LABEL_29;
                  if (v28 < *(_QWORD *)(a1 + 16))
                  {
                    v35 = (uint64_t *)(v37 + 80 * v28);
                    v18 = *v35;
                    v19 = v35[1];
                    v17 = v35[2];
                    v16 = v35[3];
                    v14 = v35[4];
                    v15 = v35[5];
                    v13 = v35[6];
                    v12 = v35[7];
                    v31 = v35[9];
                    v30 = *((unsigned __int8 *)v35 + 64) | ((unint64_t)*((unsigned __int16 *)v35 + 33) << 16) | ((unint64_t)*((unsigned __int16 *)v35 + 34) << 32);
                    ++v28;
                    goto LABEL_15;
                  }
                  goto LABEL_30;
                }
              }
              v2 = v36;
              v48 = v30;
              v50 = v29;
              v44 = v28;
              v46 = v31;
              sub_2497C81E8(v29);
              v11 = v46;
              v9 = v48;
              v5 = v50;
              v10 = v44;
              if (v33 != 4)
                continue;
              goto LABEL_26;
            }
            v24 = (v22 >> 1) - v43;
            sub_249837618();
            swift_unknownObjectRetain();
            v25 = swift_dynamicCastClass();
            if (!v25)
            {
              swift_unknownObjectRelease();
              v25 = MEMORY[0x24BEE4AF8];
            }
            if (v42 + 80 * v43 + 80 * v24 != v25 + 80 * *(_QWORD *)(v25 + 16) + 32)
            {
              swift_release();
              v23 = v24;
              goto LABEL_14;
            }
            v40 = *(_QWORD *)(v25 + 24);
            v26 = *(_QWORD *)(v25 + 16);
            swift_release();
            v27 = (v40 >> 1) - v26;
            v23 = v24 + v27;
            if (!__OFADD__(v24, v27))
              goto LABEL_14;
            goto LABEL_31;
          }
        }
        break;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_33:
  __break(1u);
}

size_t sub_2497C93E0(size_t result)
{
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;

  v2 = result;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD **)v1;
  v5 = v3 >> 1;
  if ((v3 & 1) == 0)
    goto LABEL_8;
  result = swift_isUniquelyReferenced_nonNull();
  *(_QWORD *)v1 = v4;
  if ((result & 1) == 0)
    goto LABEL_8;
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v8 = *(_QWORD *)(v1 + 8);
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 16 * v6 + 16 * v7 != v9 + 16 * v10 + 32)
  {
    result = swift_release();
    goto LABEL_23;
  }
  v17 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v18 = (v17 >> 1) - v10;
  v19 = __OFADD__(v7, v18);
  v7 += v18;
  if (!v19)
  {
LABEL_23:
    if (v7 >= v2)
      goto LABEL_21;
LABEL_8:
    v11 = *(_QWORD *)(v1 + 16);
    v12 = v5 - v11;
    if (__OFSUB__(v5, v11))
    {
      __break(1u);
    }
    else
    {
      v13 = *(_QWORD *)(v1 + 8);
      if (v12 <= v2)
        v14 = v2;
      else
        v14 = v5 - v11;
      if (v14)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_25787F828);
        v4 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v4);
        v4[2] = v12;
        v4[3] = 2 * ((uint64_t)(result - 32) / 16);
      }
      else
      {
        v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      if (v5 >= v11)
      {
        result = sub_24974D17C(v13 + 16 * v11, v5 - v11, (unint64_t)(v4 + 4));
        if (!__OFSUB__(0, v11))
        {
          v15 = v4[2];
          v16 = v11 + v15;
          if (!__OFADD__(v11, v15))
          {
            if (v16 >= v11)
            {
              result = swift_unknownObjectRelease();
              if ((v16 & 0x8000000000000000) == 0)
              {
                *(_QWORD *)(v1 + 8) = &v4[-2 * v11 + 4];
                *(_QWORD *)(v1 + 16) = v11;
                *(_QWORD *)(v1 + 24) = (2 * v16) | 1;
LABEL_21:
                *(_QWORD *)v1 = v4;
                return result;
              }
              goto LABEL_30;
            }
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

size_t sub_2497C95A0(size_t result)
{
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;

  v2 = result;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD **)v1;
  v5 = v3 >> 1;
  if ((v3 & 1) == 0)
    goto LABEL_8;
  result = swift_isUniquelyReferenced_nonNull();
  *(_QWORD *)v1 = v4;
  if ((result & 1) == 0)
    goto LABEL_8;
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v8 = *(_QWORD *)(v1 + 8);
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 8 * v6 + 8 * v7 != v9 + 8 * v10 + 32)
  {
    result = swift_release();
    goto LABEL_23;
  }
  v17 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v18 = (v17 >> 1) - v10;
  v19 = __OFADD__(v7, v18);
  v7 += v18;
  if (!v19)
  {
LABEL_23:
    if (v7 >= v2)
      goto LABEL_21;
LABEL_8:
    v11 = *(_QWORD *)(v1 + 16);
    v12 = v5 - v11;
    if (__OFSUB__(v5, v11))
    {
      __break(1u);
    }
    else
    {
      v13 = *(_QWORD *)(v1 + 8);
      if (v12 <= v2)
        v14 = v2;
      else
        v14 = v5 - v11;
      if (v14)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257880610);
        v4 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v4);
        v4[2] = v12;
        v4[3] = (2 * ((uint64_t)(result - 32) / 8)) | 1;
      }
      else
      {
        v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      if (v5 >= v11)
      {
        result = sub_24974DBB4(v13 + 8 * v11, v5 - v11, (unint64_t)(v4 + 4));
        if (!__OFSUB__(0, v11))
        {
          v15 = v4[2];
          v16 = v11 + v15;
          if (!__OFADD__(v11, v15))
          {
            if (v16 >= v11)
            {
              result = swift_unknownObjectRelease();
              if ((v16 & 0x8000000000000000) == 0)
              {
                *(_QWORD *)(v1 + 8) = &v4[-v11 + 4];
                *(_QWORD *)(v1 + 16) = v11;
                *(_QWORD *)(v1 + 24) = (2 * v16) | 1;
LABEL_21:
                *(_QWORD *)v1 = v4;
                return result;
              }
              goto LABEL_30;
            }
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

size_t sub_2497C9764(size_t result)
{
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;

  v2 = result;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD **)v1;
  v5 = v3 >> 1;
  if ((v3 & 1) == 0)
    goto LABEL_8;
  result = swift_isUniquelyReferenced_nonNull();
  *(_QWORD *)v1 = v4;
  if ((result & 1) == 0)
    goto LABEL_8;
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v8 = *(_QWORD *)(v1 + 8);
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 40 * v6 + 40 * v7 != v9 + 40 * v10 + 32)
  {
    result = swift_release();
    goto LABEL_23;
  }
  v17 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v18 = (v17 >> 1) - v10;
  v19 = __OFADD__(v7, v18);
  v7 += v18;
  if (!v19)
  {
LABEL_23:
    if (v7 >= v2)
      goto LABEL_21;
LABEL_8:
    v11 = *(_QWORD *)(v1 + 16);
    v12 = v5 - v11;
    if (__OFSUB__(v5, v11))
    {
      __break(1u);
    }
    else
    {
      v13 = *(_QWORD *)(v1 + 8);
      if (v12 <= v2)
        v14 = v2;
      else
        v14 = v5 - v11;
      if (v14)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF58);
        v4 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v4);
        v4[2] = v12;
        v4[3] = 2 * ((uint64_t)(result - 32) / 40);
      }
      else
      {
        v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      if (v5 >= v11)
      {
        result = sub_24974DC60(v13 + 40 * v11, v5 - v11);
        if (!__OFSUB__(0, v11))
        {
          v15 = v4[2];
          v16 = v11 + v15;
          if (!__OFADD__(v11, v15))
          {
            if (v16 >= v11)
            {
              result = swift_unknownObjectRelease();
              if ((v16 & 0x8000000000000000) == 0)
              {
                *(_QWORD *)(v1 + 8) = &v4[-5 * v11 + 4];
                *(_QWORD *)(v1 + 16) = v11;
                *(_QWORD *)(v1 + 24) = (2 * v16) | 1;
LABEL_21:
                *(_QWORD *)v1 = v4;
                return result;
              }
              goto LABEL_30;
            }
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

size_t sub_2497C9930(size_t result)
{
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;

  v2 = result;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD **)v1;
  v5 = v3 >> 1;
  if ((v3 & 1) == 0)
    goto LABEL_8;
  result = swift_isUniquelyReferenced_nonNull();
  *(_QWORD *)v1 = v4;
  if ((result & 1) == 0)
    goto LABEL_8;
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v8 = *(_QWORD *)(v1 + 8);
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 16 * v6 + 16 * v7 != v9 + 16 * v10 + 32)
  {
    result = swift_release();
    goto LABEL_23;
  }
  v17 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v18 = (v17 >> 1) - v10;
  v19 = __OFADD__(v7, v18);
  v7 += v18;
  if (!v19)
  {
LABEL_23:
    if (v7 >= v2)
      goto LABEL_21;
LABEL_8:
    v11 = *(_QWORD *)(v1 + 16);
    v12 = v5 - v11;
    if (__OFSUB__(v5, v11))
    {
      __break(1u);
    }
    else
    {
      v13 = *(_QWORD *)(v1 + 8);
      if (v12 <= v2)
        v14 = v2;
      else
        v14 = v5 - v11;
      if (v14)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578807A0);
        v4 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v4);
        v4[2] = v12;
        v4[3] = 2 * ((uint64_t)(result - 32) / 16);
      }
      else
      {
        v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      if (v5 >= v11)
      {
        result = (size_t)sub_24974D334(v13 + 16 * v11, v5 - v11, (unint64_t)(v4 + 4));
        if (!__OFSUB__(0, v11))
        {
          v15 = v4[2];
          v16 = v11 + v15;
          if (!__OFADD__(v11, v15))
          {
            if (v16 >= v11)
            {
              result = swift_unknownObjectRelease();
              if ((v16 & 0x8000000000000000) == 0)
              {
                *(_QWORD *)(v1 + 8) = &v4[-2 * v11 + 4];
                *(_QWORD *)(v1 + 16) = v11;
                *(_QWORD *)(v1 + 24) = (2 * v16) | 1;
LABEL_21:
                *(_QWORD *)v1 = v4;
                return result;
              }
              goto LABEL_30;
            }
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

size_t sub_2497C9AF0(size_t result)
{
  uint64_t v1;
  int64_t v2;
  unint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;

  v2 = result;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD **)v1;
  v5 = v3 >> 1;
  if ((v3 & 1) == 0)
    goto LABEL_8;
  result = swift_isUniquelyReferenced_nonNull();
  *(_QWORD *)v1 = v4;
  if ((result & 1) == 0)
    goto LABEL_8;
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v8 = *(_QWORD *)(v1 + 8);
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 80 * v6 + 80 * v7 != v9 + 80 * v10 + 32)
  {
    result = swift_release();
    goto LABEL_23;
  }
  v17 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v18 = (v17 >> 1) - v10;
  v19 = __OFADD__(v7, v18);
  v7 += v18;
  if (!v19)
  {
LABEL_23:
    if (v7 >= v2)
      goto LABEL_21;
LABEL_8:
    v11 = *(_QWORD *)(v1 + 16);
    v12 = v5 - v11;
    if (__OFSUB__(v5, v11))
    {
      __break(1u);
    }
    else
    {
      v13 = *(_QWORD *)(v1 + 8);
      if (v12 <= v2)
        v14 = v2;
      else
        v14 = v5 - v11;
      if (v14)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF78);
        v4 = (_QWORD *)swift_allocObject();
        result = _swift_stdlib_malloc_size(v4);
        v4[2] = v12;
        v4[3] = 2 * ((uint64_t)(result - 32) / 80);
      }
      else
      {
        v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      if (v5 >= v11)
      {
        result = (size_t)sub_24974D218(v13 + 80 * v11, v5 - v11);
        if (!__OFSUB__(0, v11))
        {
          v15 = v4[2];
          v16 = v11 + v15;
          if (!__OFADD__(v11, v15))
          {
            if (v16 >= v11)
            {
              result = swift_unknownObjectRelease();
              if ((v16 & 0x8000000000000000) == 0)
              {
                *(_QWORD *)(v1 + 8) = &v4[-10 * v11 + 4];
                *(_QWORD *)(v1 + 16) = v11;
                *(_QWORD *)(v1 + 24) = (2 * v16) | 1;
LABEL_21:
                *(_QWORD *)v1 = v4;
                return result;
              }
              goto LABEL_30;
            }
LABEL_29:
            __break(1u);
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_2497C9CBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  size_t v28;

  v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_32:
    if (v8 >= v7)
      goto LABEL_21;
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  v7 = a2;
  v6 = result;
  if ((a6 & 1) == 0)
    goto LABEL_32;
  sub_249837618();
  swift_unknownObjectRetain();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  v13 = a4 + 16 * a5 + 16 * v8;
  if (v13 == v11 + 16 * v12 + 32)
  {
    v15 = *(_QWORD *)(v11 + 24);
    result = swift_release();
    v16 = (v15 >> 1) - v12;
    v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    v14 = v8;
  }
  swift_unknownObjectRetain();
  v17 = swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      v17 = MEMORY[0x24BEE4AF8];
    }
    v18 = *(_QWORD *)(v17 + 16);
    if (v13 == v17 + 16 * v18 + 32)
    {
      v20 = *(_QWORD *)(v17 + 24);
      result = swift_release();
      v21 = (v20 >> 1) - v18;
      v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
  }
  v19 = *(_QWORD *)(v17 + 16);
  if (v13 == v17 + 16 * v19 + 32)
  {
    v23 = *(_QWORD *)(v17 + 24);
    result = swift_release();
    v24 = (v23 >> 1) - v19;
    v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22)
      goto LABEL_21;
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7)
    v25 = v7;
  else
    v25 = v8;
  if (v25 <= v6)
    v26 = v6;
  else
    v26 = v25;
  if (!v26)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787F828);
  v27 = (_QWORD *)swift_allocObject();
  v28 = _swift_stdlib_malloc_size(v27);
  v27[2] = v6;
  v27[3] = 2 * ((uint64_t)(v28 - 32) / 16);
  return (uint64_t)v27;
}

uint64_t sub_2497C9EB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  size_t v28;

  v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_32:
    if (v8 >= v7)
      goto LABEL_21;
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  v7 = a2;
  v6 = result;
  if ((a6 & 1) == 0)
    goto LABEL_32;
  sub_249837618();
  swift_unknownObjectRetain();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  v13 = a4 + 8 * a5 + 8 * v8;
  if (v13 == v11 + 8 * v12 + 32)
  {
    v15 = *(_QWORD *)(v11 + 24);
    result = swift_release();
    v16 = (v15 >> 1) - v12;
    v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    v14 = v8;
  }
  swift_unknownObjectRetain();
  v17 = swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      v17 = MEMORY[0x24BEE4AF8];
    }
    v18 = *(_QWORD *)(v17 + 16);
    if (v13 == v17 + 8 * v18 + 32)
    {
      v20 = *(_QWORD *)(v17 + 24);
      result = swift_release();
      v21 = (v20 >> 1) - v18;
      v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
  }
  v19 = *(_QWORD *)(v17 + 16);
  if (v13 == v17 + 8 * v19 + 32)
  {
    v23 = *(_QWORD *)(v17 + 24);
    result = swift_release();
    v24 = (v23 >> 1) - v19;
    v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22)
      goto LABEL_21;
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7)
    v25 = v7;
  else
    v25 = v8;
  if (v25 <= v6)
    v26 = v6;
  else
    v26 = v25;
  if (!v26)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880610);
  v27 = (_QWORD *)swift_allocObject();
  v28 = _swift_stdlib_malloc_size(v27);
  v27[2] = v6;
  v27[3] = (2 * ((uint64_t)(v28 - 32) / 8)) | 1;
  return (uint64_t)v27;
}

uint64_t sub_2497CA0B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  size_t v28;

  v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_32:
    if (v8 >= v7)
      goto LABEL_21;
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  v7 = a2;
  v6 = result;
  if ((a6 & 1) == 0)
    goto LABEL_32;
  sub_249837618();
  swift_unknownObjectRetain();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  v13 = a4 + 40 * a5 + 40 * v8;
  if (v13 == v11 + 40 * v12 + 32)
  {
    v15 = *(_QWORD *)(v11 + 24);
    result = swift_release();
    v16 = (v15 >> 1) - v12;
    v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    v14 = v8;
  }
  swift_unknownObjectRetain();
  v17 = swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      v17 = MEMORY[0x24BEE4AF8];
    }
    v18 = *(_QWORD *)(v17 + 16);
    if (v13 == v17 + 40 * v18 + 32)
    {
      v20 = *(_QWORD *)(v17 + 24);
      result = swift_release();
      v21 = (v20 >> 1) - v18;
      v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
  }
  v19 = *(_QWORD *)(v17 + 16);
  if (v13 == v17 + 40 * v19 + 32)
  {
    v23 = *(_QWORD *)(v17 + 24);
    result = swift_release();
    v24 = (v23 >> 1) - v19;
    v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22)
      goto LABEL_21;
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7)
    v25 = v7;
  else
    v25 = v8;
  if (v25 <= v6)
    v26 = v6;
  else
    v26 = v25;
  if (!v26)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF58);
  v27 = (_QWORD *)swift_allocObject();
  v28 = _swift_stdlib_malloc_size(v27);
  v27[2] = v6;
  v27[3] = 2 * ((uint64_t)(v28 - 32) / 40);
  return (uint64_t)v27;
}

uint64_t sub_2497CA2C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  size_t v28;

  v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_32:
    if (v8 >= v7)
      goto LABEL_21;
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  v7 = a2;
  v6 = result;
  if ((a6 & 1) == 0)
    goto LABEL_32;
  sub_249837618();
  swift_unknownObjectRetain();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  v13 = a4 + 16 * a5 + 16 * v8;
  if (v13 == v11 + 16 * v12 + 32)
  {
    v15 = *(_QWORD *)(v11 + 24);
    result = swift_release();
    v16 = (v15 >> 1) - v12;
    v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    v14 = v8;
  }
  swift_unknownObjectRetain();
  v17 = swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      v17 = MEMORY[0x24BEE4AF8];
    }
    v18 = *(_QWORD *)(v17 + 16);
    if (v13 == v17 + 16 * v18 + 32)
    {
      v20 = *(_QWORD *)(v17 + 24);
      result = swift_release();
      v21 = (v20 >> 1) - v18;
      v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
  }
  v19 = *(_QWORD *)(v17 + 16);
  if (v13 == v17 + 16 * v19 + 32)
  {
    v23 = *(_QWORD *)(v17 + 24);
    result = swift_release();
    v24 = (v23 >> 1) - v19;
    v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22)
      goto LABEL_21;
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7)
    v25 = v7;
  else
    v25 = v8;
  if (v25 <= v6)
    v26 = v6;
  else
    v26 = v25;
  if (!v26)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578807A0);
  v27 = (_QWORD *)swift_allocObject();
  v28 = _swift_stdlib_malloc_size(v27);
  v27[2] = v6;
  v27[3] = 2 * ((uint64_t)(v28 - 32) / 16);
  return (uint64_t)v27;
}

uint64_t sub_2497CA4BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  size_t v28;

  v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_32:
    if (v8 >= v7)
      goto LABEL_21;
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  v7 = a2;
  v6 = result;
  if ((a6 & 1) == 0)
    goto LABEL_32;
  sub_249837618();
  swift_unknownObjectRetain();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    v11 = MEMORY[0x24BEE4AF8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  v13 = a4 + 80 * a5 + 80 * v8;
  if (v13 == v11 + 80 * v12 + 32)
  {
    v15 = *(_QWORD *)(v11 + 24);
    result = swift_release();
    v16 = (v15 >> 1) - v12;
    v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    v14 = v8;
  }
  swift_unknownObjectRetain();
  v17 = swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      v17 = MEMORY[0x24BEE4AF8];
    }
    v18 = *(_QWORD *)(v17 + 16);
    if (v13 == v17 + 80 * v18 + 32)
    {
      v20 = *(_QWORD *)(v17 + 24);
      result = swift_release();
      v21 = (v20 >> 1) - v18;
      v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    v17 = MEMORY[0x24BEE4AF8];
  }
  v19 = *(_QWORD *)(v17 + 16);
  if (v13 == v17 + 80 * v19 + 32)
  {
    v23 = *(_QWORD *)(v17 + 24);
    result = swift_release();
    v24 = (v23 >> 1) - v19;
    v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22)
      goto LABEL_21;
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7)
    v25 = v7;
  else
    v25 = v8;
  if (v25 <= v6)
    v26 = v6;
  else
    v26 = v25;
  if (!v26)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF78);
  v27 = (_QWORD *)swift_allocObject();
  v28 = _swift_stdlib_malloc_size(v27);
  v27[2] = v6;
  v27[3] = 2 * ((uint64_t)(v28 - 32) / 80);
  return (uint64_t)v27;
}

uint64_t (*sub_2497CA6C4())(void)
{
  return nullsub_1;
}

uint64_t sub_2497CA6D4(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v32;

  v5 = v4[2];
  v6 = (unint64_t)v4[3] >> 1;
  v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_17;
  }
  v9 = *(_QWORD *)result;
  v10 = *(_QWORD *)(*(_QWORD *)result + 16);
  v11 = __OFSUB__(v10, a2);
  v12 = v10 - a2;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v13 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v14 = v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = __OFSUB__(v14, v13);
  v15 = v14 - v13;
  if (v11)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v30 = v15;
  v17 = (char *)(v9 + 32);
  v18 = v9 + 32 + 16 * a2;
  v32 = (char *)(v18 + 16 * a3);
  result = sub_2497CCC80(v7);
  if (result)
  {
    v19 = result;
    v29 = v4[2];
    v28 = a4;
    v20 = (char *)(v4[1] + 16 * v29);
    swift_arrayDestroy();
    sub_2497ABFE8(v20, a2, v17);
    swift_arrayDestroy();
    v28(v18, a3);
    sub_2497ABFE8(&v20[16 * a2 + 16 * v30], v13, v32);
    v21 = v29;
    swift_arrayDestroy();
    *(_QWORD *)(v19 + 16) = 0;
    swift_release();
LABEL_15:
    swift_retain();
    swift_unknownObjectRelease();
    result = sub_2497CCB58(v9, v21);
    *v4 = result;
    v4[1] = v25;
    v4[2] = v26;
    v4[3] = v27;
    return result;
  }
  v21 = v4[2];
  v22 = v21 + a2;
  if (__OFADD__(v21, a2))
    goto LABEL_21;
  if (v22 < v21)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFSUB__(v22, v21))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  result = ((uint64_t (*)(char *, uint64_t))a4)(&v17[16 * a2], a3);
  v23 = v22 + v30;
  if (__OFADD__(v22, v30))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v24 = (unint64_t)v4[3] >> 1;
  if (v24 < v23)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!__OFSUB__(v24, v23))
  {
    swift_arrayInitWithCopy();
    goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2497CA908(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v5 = v4[2];
  v6 = (unint64_t)v4[3] >> 1;
  v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_17;
  }
  v9 = *(_QWORD *)result;
  v10 = *(_QWORD *)(*(_QWORD *)result + 16);
  v11 = __OFSUB__(v10, a2);
  v12 = v10 - a2;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v13 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v14 = v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = __OFSUB__(v14, v13);
  v15 = v14 - v13;
  if (v11)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v31 = v15;
  v17 = (char *)(v9 + 32);
  v18 = v9 + 32 + 8 * a2;
  v29 = (char *)(v18 + 8 * a3);
  result = sub_2497CCDE8(v7);
  v30 = v9;
  if (result)
  {
    v19 = result;
    v28 = v4[2];
    v20 = (char *)(v4[1] + 8 * v28);
    type metadata accessor for UniversalControlDisplaySolver1.DisplayProxy();
    swift_arrayDestroy();
    sub_2497AC2B4(v20, a2, v17);
    swift_arrayDestroy();
    a4(v18, a3);
    sub_2497AC2B4(&v20[8 * a2 + 8 * v31], v13, v29);
    swift_arrayDestroy();
    *(_QWORD *)(v19 + 16) = 0;
    v21 = v28;
    swift_release();
LABEL_15:
    swift_retain();
    swift_unknownObjectRelease();
    result = sub_2497CCBA0(v30, v21);
    *v4 = result;
    v4[1] = v25;
    v4[2] = v26;
    v4[3] = v27;
    return result;
  }
  v21 = v4[2];
  v22 = v21 + a2;
  if (__OFADD__(v21, a2))
    goto LABEL_21;
  if (v22 < v21)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFSUB__(v22, v21))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  type metadata accessor for UniversalControlDisplaySolver1.DisplayProxy();
  swift_arrayInitWithCopy();
  result = ((uint64_t (*)(char *, uint64_t))a4)(&v17[8 * a2], a3);
  v23 = v22 + v31;
  if (__OFADD__(v22, v31))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v24 = (unint64_t)v4[3] >> 1;
  if (v24 < v23)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!__OFSUB__(v24, v23))
  {
    swift_arrayInitWithCopy();
    goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2497CAB58(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v5 = v4[2];
  v6 = (unint64_t)v4[3] >> 1;
  v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_17;
  }
  v9 = *(_QWORD *)result;
  v10 = *(_QWORD *)(*(_QWORD *)result + 16);
  v11 = __OFSUB__(v10, a2);
  v12 = v10 - a2;
  if (v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v13 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v14 = v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = __OFSUB__(v14, v13);
  v15 = v14 - v13;
  if (v11)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v32 = v15;
  v17 = (char *)(v9 + 32);
  v18 = v9 + 32 + 40 * a2;
  v30 = v13;
  v31 = (char *)(v18 + 40 * a3);
  result = sub_2497CCF50(v7);
  if (result)
  {
    v19 = result;
    v29 = v4[2];
    v28 = a4;
    v20 = (char *)(v4[1] + 40 * v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF60);
    swift_arrayDestroy();
    sub_2497AC258(v20, a2, v17);
    swift_arrayDestroy();
    v28(v18, a3);
    sub_2497AC258(&v20[40 * a2 + 40 * v32], v30, v31);
    swift_arrayDestroy();
    *(_QWORD *)(v19 + 16) = 0;
    v21 = v29;
    swift_release();
LABEL_15:
    swift_retain();
    swift_unknownObjectRelease();
    result = sub_2497CCBE8(v9, v21);
    *v4 = result;
    v4[1] = v25;
    v4[2] = v26;
    v4[3] = v27;
    return result;
  }
  v21 = v4[2];
  v22 = v21 + a2;
  if (__OFADD__(v21, a2))
    goto LABEL_21;
  if (v22 < v21)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFSUB__(v22, v21))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF60);
  swift_arrayInitWithCopy();
  result = ((uint64_t (*)(char *, uint64_t))a4)(&v17[40 * a2], a3);
  v23 = v22 + v32;
  if (__OFADD__(v22, v32))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v24 = (unint64_t)v4[3] >> 1;
  if (v24 < v23)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!__OFSUB__(v24, v23))
  {
    swift_arrayInitWithCopy();
    goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2497CADC0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;
  BOOL v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = v4[2];
  v7 = (unint64_t)v4[3] >> 1;
  result = v7 - v6;
  if (__OFSUB__(v7, v6))
  {
    __break(1u);
    goto LABEL_17;
  }
  v10 = *a1;
  v11 = *(_QWORD *)(*a1 + 16);
  v29 = __OFSUB__(v11, a2);
  v12 = v11 - a2;
  if (v29)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v15 = result - a2;
  if (__OFSUB__(result, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v29 = __OFSUB__(v15, v14);
  v16 = v15 - v14;
  if (v29)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v36 = v16;
  v17 = (char *)(v10 + 32);
  v18 = v10 + 32 + 16 * a2;
  result = sub_2497CD0BC(result);
  if (result)
  {
    v19 = result;
    v35 = v10;
    v20 = v4[2];
    v21 = (char *)(v4[1] + 16 * v20);
    v22 = &v21[16 * a2];
    sub_2497ABFE8(v21, a2, v17);
    a4(v18, a3);
    v23 = &v22[16 * v36];
    v10 = v35;
    sub_2497ABFE8(v23, v14, (char *)(v18 + 16 * a3));
    *(_QWORD *)(v19 + 16) = 0;
    swift_release();
LABEL_15:
    swift_retain();
    swift_unknownObjectRelease();
    result = sub_2497CCB58(v10, v20);
    *v4 = result;
    v4[1] = v32;
    v4[2] = v33;
    v4[3] = v34;
    return result;
  }
  v24 = (void *)(v18 + 16 * a3);
  v20 = v4[2];
  v25 = v20 + a2;
  if (__OFADD__(v20, a2))
    goto LABEL_21;
  if (v25 < v20)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFSUB__(v25, v20))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v26 = v4[1];
  memcpy((void *)(v10 + 32), (const void *)(v26 + 16 * v20), 16 * a2);
  result = ((uint64_t (*)(char *, uint64_t))a4)(&v17[16 * a2], a3);
  v27 = v25 + v36;
  if (__OFADD__(v25, v36))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v28 = (unint64_t)v4[3] >> 1;
  v29 = __OFSUB__(v28, v27);
  v30 = v28 < v27;
  v31 = v28 - v27;
  if (v30)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!v29)
  {
    memcpy(v24, (const void *)(v26 + 16 * v27), 16 * v31);
    goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2497CAF7C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;
  BOOL v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = v4[2];
  v7 = (unint64_t)v4[3] >> 1;
  result = v7 - v6;
  if (__OFSUB__(v7, v6))
  {
    __break(1u);
    goto LABEL_17;
  }
  v10 = *a1;
  v11 = *(_QWORD *)(*a1 + 16);
  v29 = __OFSUB__(v11, a2);
  v12 = v11 - a2;
  if (v29)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v15 = result - a2;
  if (__OFSUB__(result, a2))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v29 = __OFSUB__(v15, v14);
  v16 = v15 - v14;
  if (v29)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v36 = v16;
  v17 = (char *)(v10 + 32);
  v18 = v10 + 32 + 80 * a2;
  result = sub_2497CD224(result);
  if (result)
  {
    v19 = result;
    v35 = v10;
    v20 = v4[2];
    v21 = (char *)(v4[1] + 80 * v20);
    v22 = &v21[80 * a2];
    sub_2497AC03C(v21, a2, v17);
    a4(v18, a3);
    v23 = &v22[80 * v36];
    v10 = v35;
    sub_2497AC03C(v23, v14, (char *)(v18 + 80 * a3));
    *(_QWORD *)(v19 + 16) = 0;
    swift_release();
LABEL_15:
    swift_retain();
    swift_unknownObjectRelease();
    result = sub_2497CCC34(v10, v20);
    *v4 = result;
    v4[1] = v32;
    v4[2] = v33;
    v4[3] = v34;
    return result;
  }
  v24 = (void *)(v18 + 80 * a3);
  v20 = v4[2];
  v25 = v20 + a2;
  if (__OFADD__(v20, a2))
    goto LABEL_21;
  if (v25 < v20)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (__OFSUB__(v25, v20))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v26 = v4[1];
  memcpy((void *)(v10 + 32), (const void *)(v26 + 80 * v20), 80 * a2);
  result = ((uint64_t (*)(char *, uint64_t))a4)(&v17[80 * a2], a3);
  v27 = v25 + v36;
  if (__OFADD__(v25, v36))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v28 = (unint64_t)v4[3] >> 1;
  v29 = __OFSUB__(v28, v27);
  v30 = v28 < v27;
  v31 = v28 - v27;
  if (v30)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!v29)
  {
    memcpy(v24, (const void *)(v26 + 80 * v27), 80 * v31);
    goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

double sub_2497CB154@<D0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  double result;

  v2 = *v1;
  sub_249837690();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_7_13();
  sub_24983694C();
  OUTLINED_FUNCTION_11_8();
  v3 = sub_2498376E4() & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X8 }
  OUTLINED_FUNCTION_21_5();
  result = 0.0;
  *a1 = xmmword_24983B6B0;
  return result;
}

uint64_t sub_2497CBA64@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  double v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[70];
  _OWORD v31[4];
  char v32;
  int v33;
  _BYTE __dst[70];

  v3 = v2;
  v6 = *v3;
  sub_249837690();
  memcpy(__dst, a1, sizeof(__dst));
  v7 = a1[9];
  memcpy(v30, a1, sizeof(v30));
  swift_bridgeObjectRetain();
  UniversalControlLink.hash(into:)((uint64_t)v31);
  sub_2498376D8();
  v8 = sub_2498376E4();
  v9 = -1 << *(_BYTE *)(v6 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    while (1)
    {
      v12 = *(_QWORD *)(v6 + 48) + 80 * v10;
      v13 = *(_BYTE *)(v12 + 64);
      v14 = *(_DWORD *)(v12 + 66);
      v15 = *(double *)(v12 + 72);
      v16 = *(_OWORD *)(v12 + 16);
      v17 = *(_OWORD *)(v12 + 32);
      v18 = *(_OWORD *)(v12 + 48);
      v31[0] = *(_OWORD *)v12;
      v31[1] = v16;
      v31[2] = v17;
      v31[3] = v18;
      v32 = v13;
      v33 = v14;
      memcpy(v30, __dst, sizeof(v30));
      static UniversalControlLink.== infix(_:_:)((unsigned __int8 *)v31, (uint64_t)v30);
      if ((v19 & 1) != 0 && v15 == v7)
        break;
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *(_QWORD *)&v31[0] = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2497C5F10();
      v22 = *(_QWORD *)&v31[0];
    }
    v23 = *(_QWORD *)(v22 + 48) + 80 * v10;
    v24 = *(_BYTE *)(v23 + 64);
    v25 = *(_DWORD *)(v23 + 66);
    v26 = *(_QWORD *)(v23 + 72);
    v27 = *(_OWORD *)(v23 + 16);
    v28 = *(_OWORD *)(v23 + 32);
    v29 = *(_OWORD *)(v23 + 48);
    *(_OWORD *)a2 = *(_OWORD *)v23;
    *(_OWORD *)(a2 + 16) = v27;
    *(_OWORD *)(a2 + 32) = v28;
    *(_OWORD *)(a2 + 48) = v29;
    *(_BYTE *)(a2 + 64) = v24;
    *(_DWORD *)(a2 + 66) = v25;
    *(_QWORD *)(a2 + 72) = v26;
    sub_24980996C();
    *v3 = *(_QWORD *)&v31[0];
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    result = swift_bridgeObjectRelease();
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 64) = xmmword_24983B6C0;
  }
  return result;
}

void sub_2497CBC5C(unsigned __int8 a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *v1;
  OUTLINED_FUNCTION_69_3();
  sub_2497CEBD0(a1);
  OUTLINED_FUNCTION_138();
  sub_249836D84();
  OUTLINED_FUNCTION_42();
  v4 = OUTLINED_FUNCTION_33() & ~(-1 << *(_BYTE *)(v3 + 32));
  if (((*(_QWORD *)(v3 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    OUTLINED_FUNCTION_50_2();
    __asm { BR              X9 }
  }
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_64_2();
}

uint64_t sub_2497CBE60(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  __int128 *v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  double *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  int64_t v31;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819F8);
  result = sub_24983733C();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = *(_QWORD *)(a1 + 64);
  v28 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v31 = (unint64_t)(v6 + 63) >> 6;
  v9 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v10 | (v4 << 6); ; i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    v15 = (__int128 *)(*(_QWORD *)(a1 + 48) + 32 * i);
    swift_retain();
    v29 = v15[1];
    v30 = *v15;
    v16 = sub_2497A1E9C();
    v18 = v17;
    v20 = v19;
    v22 = v21;
    result = swift_release();
    *(_QWORD *)(v9 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v23 = (_OWORD *)(v3[6] + 32 * i);
    *v23 = v30;
    v23[1] = v29;
    v24 = (double *)(v3[7] + 32 * i);
    *v24 = v16;
    *((_QWORD *)v24 + 1) = v18;
    *((_QWORD *)v24 + 2) = v20;
    *((_QWORD *)v24 + 3) = v22;
    v25 = v3[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v27;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v12 >= v31)
      return (uint64_t)v3;
    v13 = *(_QWORD *)(v28 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v31)
        return (uint64_t)v3;
      v13 = *(_QWORD *)(v28 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v31)
          return (uint64_t)v3;
        v13 = *(_QWORD *)(v28 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_18:
    v8 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v31)
    return (uint64_t)v3;
  v13 = *(_QWORD *)(v28 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v31)
      return (uint64_t)v3;
    v13 = *(_QWORD *)(v28 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2497CC090(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t isStackAllocationSafe;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v14[2];

  v3 = v2;
  v14[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v10 = (_QWORD *)((char *)v14 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_249781B64(0, v8, v10);
    swift_retain();
    v11 = sub_2497CC25C((uint64_t)v10, v8, a1, a2);
    swift_release();
    if (v3)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v12 = (_QWORD *)swift_slowAlloc();
    sub_249781B64(0, v8, v12);
    swift_retain();
    v11 = sub_2497CC25C((uint64_t)v12, v8, a1, a2);
    swift_release();
    MEMORY[0x24BCF906C](v12, -1, -1);
    swift_release_n();
  }
  swift_release();
  return v11;
}

uint64_t sub_2497CC25C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  int64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  unint64_t *v21;
  uint64_t v22;

  v21 = (unint64_t *)result;
  v22 = 0;
  v6 = 0;
  v7 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_17;
    }
    v14 = __OFADD__(v6++, 1);
    if (v14)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v6 >= v11)
      goto LABEL_26;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    if (!v15)
      break;
LABEL_16:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_17:
    if (*(_QWORD *)(*(_QWORD *)(a4 + 40) + 16))
    {
      swift_bridgeObjectRetain();
      sub_2497F1F1C();
      v18 = v17;
      result = swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
      {
        *(unint64_t *)((char *)v21 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        v14 = __OFADD__(v22++, 1);
        if (v14)
          goto LABEL_29;
      }
    }
  }
  v16 = v6 + 1;
  if (v6 + 1 >= v11)
    goto LABEL_26;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v16 = v6 + 2;
  if (v6 + 2 >= v11)
    goto LABEL_26;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v16 = v6 + 3;
  if (v6 + 3 >= v11)
  {
LABEL_26:
    swift_retain();
    v19 = sub_2497CC43C(v21, a2, v22, a3);
    swift_release();
    return v19;
  }
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
LABEL_15:
    v6 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_26;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_16;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2497CC43C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v4 = a4;
  if (a3)
  {
    v5 = a3;
    if (*(_QWORD *)(a4 + 16) != a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257881A08);
      v47 = sub_24983715C();
      if (a2 < 1)
        v6 = 0;
      else
        v6 = *a1;
      v7 = 0;
      v37 = v47 + 56;
      v36 = v4;
      while (1)
      {
        v46 = v5;
        if (v6)
        {
          v38 = (v6 - 1) & v6;
          v39 = v7;
          v8 = __clz(__rbit64(v6)) | (v7 << 6);
        }
        else
        {
          v9 = v7 + 1;
          if (__OFADD__(v7, 1))
            goto LABEL_40;
          if (v9 >= a2)
            goto LABEL_36;
          v10 = a1[v9];
          v11 = v7 + 1;
          if (!v10)
          {
            v11 = v7 + 2;
            if (v7 + 2 >= a2)
              goto LABEL_36;
            v10 = a1[v11];
            if (!v10)
            {
              v11 = v7 + 3;
              if (v7 + 3 >= a2)
                goto LABEL_36;
              v10 = a1[v11];
              if (!v10)
              {
                v12 = v7 + 4;
                if (v7 + 4 >= a2)
                  goto LABEL_36;
                v10 = a1[v12];
                if (!v10)
                {
                  while (1)
                  {
                    v11 = v12 + 1;
                    if (__OFADD__(v12, 1))
                      goto LABEL_41;
                    if (v11 >= a2)
                      goto LABEL_36;
                    v10 = a1[v11];
                    ++v12;
                    if (v10)
                      goto LABEL_24;
                  }
                }
                v11 = v7 + 4;
              }
            }
          }
LABEL_24:
          v38 = (v10 - 1) & v10;
          v39 = v11;
          v8 = __clz(__rbit64(v10)) + (v11 << 6);
        }
        v13 = (char *)(*(_QWORD *)(v4 + 48) + 16 * v8);
        v14 = *v13;
        v48 = v13[2];
        v15 = v13[3];
        v43 = v13[4];
        v44 = v13[1];
        v16 = v13[5];
        v17 = v13[7];
        v42 = v13[8];
        v18 = v13[9];
        v19 = v13[10];
        v20 = v13[11];
        v40 = v13[6];
        v41 = v13[12];
        v21 = v13[13];
        v45 = v13[14];
        v22 = v13[15];
        sub_249837690();
        sub_24983769C();
        v23 = sub_2498376E4();
        v24 = -1 << *(_BYTE *)(v47 + 32);
        v25 = v23 & ~v24;
        v26 = v25 >> 6;
        if (((-1 << v25) & ~*(_QWORD *)(v37 + 8 * (v25 >> 6))) != 0)
        {
          v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v37 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
          goto LABEL_34;
        }
        v28 = 0;
        v29 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
          }
          v30 = v26 == v29;
          if (v26 == v29)
            v26 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v37 + 8 * v26);
        }
        while (v31 == -1);
        v27 = __clz(__rbit64(~v31)) + (v26 << 6);
LABEL_34:
        *(_QWORD *)(v37 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
        v32 = (_BYTE *)(*(_QWORD *)(v47 + 48) + 16 * v27);
        *v32 = v14;
        v32[1] = v44;
        v32[2] = v48;
        v32[3] = v15;
        v32[4] = v43;
        v32[5] = v16;
        v32[6] = v40;
        v32[7] = v17;
        v32[8] = v42;
        v32[9] = v18;
        v32[10] = v19;
        v32[11] = v20;
        v32[12] = v41;
        v32[13] = v21;
        v32[14] = v45;
        v32[15] = v22;
        ++*(_QWORD *)(v47 + 16);
        v5 = v46 - 1;
        if (__OFSUB__(v46, 1))
          goto LABEL_39;
        v4 = v36;
        v6 = v38;
        v7 = v39;
        if (v46 == 1)
        {
LABEL_36:
          swift_release();
          return v47;
        }
      }
    }
    return a4;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_2497CC86C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
LABEL_3:
    v3 = __clz(__rbit64(v1)) + v2;
    return OUTLINED_FUNCTION_148(v3);
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return OUTLINED_FUNCTION_148(v3);
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    goto LABEL_3;
  }
  v2 = 64;
  v7 = 9;
  while (v7 - 7 < (unint64_t)(v3 + 63) >> 6)
  {
    v1 = *(_QWORD *)(a1 + 8 * v7);
    v2 += 64;
    ++v7;
    if (v1)
      goto LABEL_3;
  }
  return OUTLINED_FUNCTION_148(v3);
}

uint64_t sub_2497CC8E0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
LABEL_3:
    v3 = __clz(__rbit64(v1)) + v2;
    return OUTLINED_FUNCTION_148(v3);
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return OUTLINED_FUNCTION_148(v3);
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    goto LABEL_3;
  }
  if (v6 < 8)
    return OUTLINED_FUNCTION_148(v3);
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    goto LABEL_3;
  }
  v2 = 128;
  v7 = 10;
  while (v7 - 7 < (unint64_t)(v3 + 63) >> 6)
  {
    v1 = *(_QWORD *)(a1 + 8 * v7);
    v2 += 64;
    ++v7;
    if (v1)
      goto LABEL_3;
  }
  return OUTLINED_FUNCTION_148(v3);
}

uint64_t type metadata accessor for UniversalControlDisplaySolver1.DeviceProxy()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UniversalControlDisplaySolver1.DisplayProxy()
{
  return objc_opt_self();
}

unint64_t sub_2497CC9AC()
{
  unint64_t result;

  result = qword_257881680;
  if (!qword_257881680)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDisplayID, &type metadata for UniversalControlDisplayID);
    atomic_store(result, (unint64_t *)&qword_257881680);
  }
  return result;
}

unint64_t sub_2497CC9E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257881688;
  if (!qword_257881688)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578800D8);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE12E8], v1);
    atomic_store(result, (unint64_t *)&qword_257881688);
  }
  return result;
}

void sub_2497CCA2C(uint64_t a1@<X8>)
{
  _QWORD *v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;

  v3 = v1[3];
  v2 = v1[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    *(_OWORD *)a1 = *(_OWORD *)(*(_QWORD *)(*v1 + 48) + 16 * v6);
    *(_BYTE *)(a1 + 16) = 0;
LABEL_23:
    v1[3] = v4;
    v1[4] = v5;
    return;
  }
  v7 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    v8 = (unint64_t)(v1[2] + 64) >> 6;
    if (v7 < v8)
    {
      v9 = v1[1];
      v10 = *(_QWORD *)(v9 + 8 * v7);
      if (v10)
      {
LABEL_7:
        v5 = (v10 - 1) & v10;
        v6 = __clz(__rbit64(v10)) + (v7 << 6);
        v4 = v7;
        goto LABEL_3;
      }
      v11 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v8)
      {
        v10 = *(_QWORD *)(v9 + 8 * v11);
        if (v10)
        {
LABEL_10:
          v7 = v11;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v8)
        {
          v10 = *(_QWORD *)(v9 + 8 * (v3 + 3));
          if (v10)
          {
            v7 = v3 + 3;
            goto LABEL_7;
          }
          v11 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v8)
          {
            v10 = *(_QWORD *)(v9 + 8 * v11);
            if (v10)
              goto LABEL_10;
            v7 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v8)
            {
              v10 = *(_QWORD *)(v9 + 8 * v7);
              if (v10)
                goto LABEL_7;
              v4 = v8 - 1;
              v12 = v3 + 6;
              while (v12 < v8)
              {
                v10 = *(_QWORD *)(v9 + 8 * v12++);
                if (v10)
                {
                  v7 = v12 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v5 = 0;
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 1;
    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_2497CCB58(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  if (__OFSUB__(0, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(result + 16);
  v3 = __OFADD__(a2, v2);
  v4 = a2 + v2;
  if (v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v4 < a2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
LABEL_9:
    __break(1u);
  return result;
}

uint64_t sub_2497CCBA0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  if (__OFSUB__(0, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(result + 16);
  v3 = __OFADD__(a2, v2);
  v4 = a2 + v2;
  if (v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v4 < a2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
LABEL_9:
    __break(1u);
  return result;
}

uint64_t sub_2497CCBE8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  if (__OFSUB__(0, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(result + 16);
  v3 = __OFADD__(a2, v2);
  v4 = a2 + v2;
  if (v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v4 < a2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
LABEL_9:
    __break(1u);
  return result;
}

uint64_t sub_2497CCC34(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  if (__OFSUB__(0, a2))
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(result + 16);
  v3 = __OFADD__(a2, v2);
  v4 = a2 + v2;
  if (v3)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v4 < a2)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
LABEL_9:
    __break(1u);
  return result;
}

uint64_t sub_2497CCC80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t isUniquelyReferenced_nonNull;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!(_DWORD)isUniquelyReferenced_nonNull)
    return 0;
  v6 = v1[2];
  v5 = v1[3];
  v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  v8 = v1[1];
  if ((v5 & 1) == 0)
    goto LABEL_8;
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 16 * v6 + 16 * v7 != v9 + 16 * v10 + 32)
  {
    swift_release();
LABEL_8:
    v11 = v7;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v14 = (v12 >> 1) - v10;
  v15 = __OFADD__(v7, v14);
  v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < a1)
      return 0;
    sub_249837618();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x24BEE4AF8];
    }
    v16 = (v8 + 16 * v6 - a1 - 32) / 16;
    isUniquelyReferenced_nonNull = v7 + v16;
    if (!__OFADD__(v7, v16))
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (isUniquelyReferenced_nonNull >= v4)
        return a1;
LABEL_19:
      sub_2497CD390(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_2497CCDE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t isUniquelyReferenced_nonNull;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!(_DWORD)isUniquelyReferenced_nonNull)
    return 0;
  v6 = v1[2];
  v5 = v1[3];
  v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  v8 = v1[1];
  if ((v5 & 1) == 0)
    goto LABEL_8;
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 8 * v6 + 8 * v7 != v9 + 8 * v10 + 32)
  {
    swift_release();
LABEL_8:
    v11 = v7;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v14 = (v12 >> 1) - v10;
  v15 = __OFADD__(v7, v14);
  v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < a1)
      return 0;
    sub_249837618();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x24BEE4AF8];
    }
    v16 = (v8 + 8 * v6 - a1 - 32) / 8;
    isUniquelyReferenced_nonNull = v7 + v16;
    if (!__OFADD__(v7, v16))
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (isUniquelyReferenced_nonNull >= v4)
        return a1;
LABEL_19:
      sub_2497CD438(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_2497CCF50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t isUniquelyReferenced_nonNull;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!(_DWORD)isUniquelyReferenced_nonNull)
    return 0;
  v6 = v1[2];
  v5 = v1[3];
  v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  v8 = v1[1];
  if ((v5 & 1) == 0)
    goto LABEL_8;
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 40 * v6 + 40 * v7 != v9 + 40 * v10 + 32)
  {
    swift_release();
LABEL_8:
    v11 = v7;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v14 = (v12 >> 1) - v10;
  v15 = __OFADD__(v7, v14);
  v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < a1)
      return 0;
    sub_249837618();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x24BEE4AF8];
    }
    v16 = (v8 + 40 * v6 - a1 - 32) / 40;
    isUniquelyReferenced_nonNull = v7 + v16;
    if (!__OFADD__(v7, v16))
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (isUniquelyReferenced_nonNull >= v4)
        return a1;
LABEL_19:
      sub_2497CD4E4(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_2497CD0BC(uint64_t a1)
{
  _QWORD *v1;
  char *isUniquelyReferenced_nonNull;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  isUniquelyReferenced_nonNull = (char *)swift_isUniquelyReferenced_nonNull();
  if (!(_DWORD)isUniquelyReferenced_nonNull)
    return 0;
  v6 = v1[2];
  v5 = v1[3];
  v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  v8 = v1[1];
  if ((v5 & 1) == 0)
    goto LABEL_8;
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 16 * v6 + 16 * v7 != v9 + 16 * v10 + 32)
  {
    swift_release();
LABEL_8:
    v11 = v7;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v14 = (v12 >> 1) - v10;
  v15 = __OFADD__(v7, v14);
  v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < a1)
      return 0;
    sub_249837618();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x24BEE4AF8];
    }
    v16 = (v8 + 16 * v6 - a1 - 32) / 16;
    isUniquelyReferenced_nonNull = (char *)(v7 + v16);
    if (!__OFADD__(v7, v16))
    {
      v4 = *(_QWORD *)(a1 + 16);
      if ((uint64_t)isUniquelyReferenced_nonNull >= v4)
        return a1;
LABEL_19:
      sub_2497CD5A4(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_2497CD224(uint64_t a1)
{
  _QWORD *v1;
  char *isUniquelyReferenced_nonNull;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  isUniquelyReferenced_nonNull = (char *)swift_isUniquelyReferenced_nonNull();
  if (!(_DWORD)isUniquelyReferenced_nonNull)
    return 0;
  v6 = v1[2];
  v5 = v1[3];
  v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  v8 = v1[1];
  if ((v5 & 1) == 0)
    goto LABEL_8;
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 80 * v6 + 80 * v7 != v9 + 80 * v10 + 32)
  {
    swift_release();
LABEL_8:
    v11 = v7;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v14 = (v12 >> 1) - v10;
  v15 = __OFADD__(v7, v14);
  v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < a1)
      return 0;
    sub_249837618();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x24BEE4AF8];
    }
    v16 = (v8 + 80 * v6 - a1 - 32) / 80;
    isUniquelyReferenced_nonNull = (char *)(v7 + v16);
    if (!__OFADD__(v7, v16))
    {
      v4 = *(_QWORD *)(a1 + 16);
      if ((uint64_t)isUniquelyReferenced_nonNull >= v4)
        return a1;
LABEL_19:
      sub_2497CD630(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_2497CD390(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  v7 = *v3;
  v8 = v7 + 32 + 16 * result;
  result = swift_arrayDestroy();
  v9 = __OFSUB__(a3, v4);
  v10 = a3 - v4;
  if (v9)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v10)
    goto LABEL_7;
  v11 = *(_QWORD *)(v7 + 16);
  if (__OFSUB__(v11, a2))
    goto LABEL_11;
  result = (uint64_t)sub_2497ABFE8((char *)(v7 + 32 + 16 * a2), v11 - a2, (char *)(v8 + 16 * a3));
  v12 = *(_QWORD *)(v7 + 16);
  v9 = __OFADD__(v12, v10);
  v13 = v12 + v10;
  if (v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(_QWORD *)(v7 + 16) = v13;
LABEL_7:
  if (a3 > 0)
LABEL_13:
    __break(1u);
  return result;
}

uint64_t sub_2497CD438(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  v7 = *v3;
  v8 = v7 + 32 + 8 * result;
  type metadata accessor for UniversalControlDisplaySolver1.DisplayProxy();
  result = swift_arrayDestroy();
  v9 = __OFSUB__(a3, v4);
  v10 = a3 - v4;
  if (v9)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v10)
    goto LABEL_7;
  v11 = *(_QWORD *)(v7 + 16);
  if (__OFSUB__(v11, a2))
    goto LABEL_11;
  result = (uint64_t)sub_2497AC2B4((char *)(v7 + 32 + 8 * a2), v11 - a2, (char *)(v8 + 8 * a3));
  v12 = *(_QWORD *)(v7 + 16);
  v9 = __OFADD__(v12, v10);
  v13 = v12 + v10;
  if (v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(_QWORD *)(v7 + 16) = v13;
LABEL_7:
  if (a3 > 0)
LABEL_13:
    __break(1u);
  return result;
}

uint64_t sub_2497CD4E4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  v7 = *v3;
  v8 = v7 + 32 + 40 * result;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF60);
  result = swift_arrayDestroy();
  v9 = __OFSUB__(a3, v4);
  v10 = a3 - v4;
  if (v9)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v10)
    goto LABEL_7;
  v11 = *(_QWORD *)(v7 + 16);
  if (__OFSUB__(v11, a2))
    goto LABEL_11;
  result = (uint64_t)sub_2497AC258((char *)(v7 + 32 + 40 * a2), v11 - a2, (char *)(v8 + 40 * a3));
  v12 = *(_QWORD *)(v7 + 16);
  v9 = __OFADD__(v12, v10);
  v13 = v12 + v10;
  if (v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(_QWORD *)(v7 + 16) = v13;
LABEL_7:
  if (a3 > 0)
LABEL_13:
    __break(1u);
  return result;
}

char *sub_2497CD5A4(char *result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = a3 - v4;
  if (__OFSUB__(a3, v4))
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v6)
    goto LABEL_7;
  v7 = *v3;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = __OFSUB__(v8, a2);
  v10 = v8 - a2;
  if (v9)
    goto LABEL_11;
  result = sub_2497ABFE8((char *)(v7 + 32 + 16 * a2), v10, (char *)(v7 + 32 + 16 * (_QWORD)result + 16 * a3));
  v11 = *(_QWORD *)(v7 + 16);
  v9 = __OFADD__(v11, v6);
  v12 = v11 + v6;
  if (v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(_QWORD *)(v7 + 16) = v12;
LABEL_7:
  if (a3 > 0)
LABEL_13:
    __break(1u);
  return result;
}

char *sub_2497CD630(char *result, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = a3 - v4;
  if (__OFSUB__(a3, v4))
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v6)
    goto LABEL_7;
  v7 = *v3;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = __OFSUB__(v8, a2);
  v10 = v8 - a2;
  if (v9)
    goto LABEL_11;
  result = sub_2497AC03C((char *)(v7 + 32 + 80 * a2), v10, (char *)(v7 + 32 + 80 * (_QWORD)result + 80 * a3));
  v11 = *(_QWORD *)(v7 + 16);
  v9 = __OFADD__(v11, v6);
  v12 = v11 + v6;
  if (v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(_QWORD *)(v7 + 16) = v12;
LABEL_7:
  if (a3 > 0)
LABEL_13:
    __break(1u);
  return result;
}

uint64_t sub_2497CD6C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

int64_t sub_2497CD740(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      while (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for UniversalControlDisplaySolver1()
{
  return objc_opt_self();
}

uint64_t method lookup function for UniversalControlDisplaySolver1()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniversalControlDisplaySolver1.__allocating_init<A>(configurationID:devices:links:localDevice:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of UniversalControlDisplaySolver1.solve()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t sub_2497CD864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578819B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2497CD8AC()
{
  unint64_t result;

  result = qword_2578819C8;
  if (!qword_2578819C8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlEdge, &type metadata for UniversalControlEdge);
    atomic_store(result, (unint64_t *)&qword_2578819C8);
  }
  return result;
}

unint64_t sub_2497CD8E8()
{
  unint64_t result;

  result = qword_2578819E0;
  if (!qword_2578819E0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlLink, &type metadata for UniversalControlLink);
    atomic_store(result, (unint64_t *)&qword_2578819E0);
  }
  return result;
}

unint64_t sub_2497CD924()
{
  unint64_t result;

  result = qword_257881A10;
  if (!qword_257881A10)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlConfiguration.GradedLink, &type metadata for UniversalControlConfiguration.GradedLink);
    atomic_store(result, (unint64_t *)&qword_257881A10);
  }
  return result;
}

void *OUTLINED_FUNCTION_0_19@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_1_16()
{
  return sub_249837360();
}

uint64_t OUTLINED_FUNCTION_2_18()
{
  uint64_t v0;

  LOBYTE(STACK[0x43A]) = STACK[0x3A0];
  LOBYTE(STACK[0x43B]) = STACK[0x390];
  LOBYTE(STACK[0x43C]) = STACK[0x380];
  LOBYTE(STACK[0x43D]) = STACK[0x360];
  LOBYTE(STACK[0x43E]) = STACK[0x340];
  LOBYTE(STACK[0x43F]) = STACK[0x330];
  LOBYTE(STACK[0x440]) = STACK[0x320];
  LOBYTE(STACK[0x441]) = STACK[0x318];
  LOBYTE(STACK[0x442]) = STACK[0x300];
  LOBYTE(STACK[0x443]) = STACK[0x2E0];
  LOBYTE(STACK[0x444]) = STACK[0x2D0];
  LOBYTE(STACK[0x445]) = STACK[0x2C8];
  LOBYTE(STACK[0x446]) = STACK[0x2B0];
  LOBYTE(STACK[0x447]) = STACK[0x2A0];
  LOBYTE(STACK[0x448]) = STACK[0x290];
  LOBYTE(STACK[0x449]) = STACK[0x288];
  return memcmp((const void *)(v0 - 256), &STACK[0x43A], 0x10uLL);
}

uint64_t OUTLINED_FUNCTION_4_17()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 368) = *(_DWORD *)(v0 - 440);
  *(_BYTE *)(v0 - 367) = *(_DWORD *)(v0 - 448);
  *(_BYTE *)(v0 - 366) = *(_DWORD *)(v0 - 456);
  *(_BYTE *)(v0 - 365) = *(_DWORD *)(v0 - 464);
  *(_BYTE *)(v0 - 364) = *(_DWORD *)(v0 - 472);
  *(_BYTE *)(v0 - 363) = *(_DWORD *)(v0 - 480);
  *(_BYTE *)(v0 - 362) = *(_DWORD *)(v0 - 488);
  *(_BYTE *)(v0 - 361) = *(_DWORD *)(v0 - 496);
  *(_BYTE *)(v0 - 360) = *(_DWORD *)(v0 - 504);
  *(_BYTE *)(v0 - 359) = *(_DWORD *)(v0 - 512);
  *(_BYTE *)(v0 - 358) = *(_DWORD *)(v0 - 520);
  *(_BYTE *)(v0 - 357) = *(_DWORD *)(v0 - 528);
  *(_BYTE *)(v0 - 356) = *(_DWORD *)(v0 - 532);
  *(_BYTE *)(v0 - 355) = *(_DWORD *)(v0 - 536);
  *(_BYTE *)(v0 - 354) = *(_DWORD *)(v0 - 544);
  *(_BYTE *)(v0 - 353) = *(_DWORD *)(v0 - 552);
  return memcmp((const void *)(v0 - 256), (const void *)(v0 - 368), 0x10uLL);
}

uint64_t OUTLINED_FUNCTION_5_12()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 208) = *(_QWORD *)(v0 - 528);
  *(_BYTE *)(v0 - 207) = *(_QWORD *)(v0 - 520);
  *(_BYTE *)(v0 - 206) = *(_QWORD *)(v0 - 512);
  *(_BYTE *)(v0 - 205) = *(_QWORD *)(v0 - 504);
  *(_BYTE *)(v0 - 204) = *(_QWORD *)(v0 - 496);
  *(_BYTE *)(v0 - 203) = *(_QWORD *)(v0 - 488);
  *(_BYTE *)(v0 - 202) = *(_QWORD *)(v0 - 480);
  *(_BYTE *)(v0 - 201) = *(_QWORD *)(v0 - 472);
  *(_BYTE *)(v0 - 200) = *(_QWORD *)(v0 - 464);
  *(_BYTE *)(v0 - 199) = *(_QWORD *)(v0 - 456);
  *(_BYTE *)(v0 - 198) = *(_QWORD *)(v0 - 448);
  *(_BYTE *)(v0 - 197) = *(_QWORD *)(v0 - 440);
  *(_BYTE *)(v0 - 196) = *(_QWORD *)(v0 - 432);
  *(_BYTE *)(v0 - 195) = *(_QWORD *)(v0 - 400);
  *(_BYTE *)(v0 - 194) = *(_QWORD *)(v0 - 392);
  *(_BYTE *)(v0 - 193) = *(_QWORD *)(v0 - 384);
  *(_BYTE *)(v0 - 192) = *(_QWORD *)(v0 - 544);
  *(_WORD *)(v0 - 190) = *(_DWORD *)(v0 - 536);
  *(_WORD *)(v0 - 188) = *(_DWORD *)(v0 - 532);
  return v0 - 256;
}

uint64_t OUTLINED_FUNCTION_7_13()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748BCC(v1, v0);
}

void OUTLINED_FUNCTION_8_12()
{
  LOBYTE(STACK[0x520]) = STACK[0x2E0];
  LOBYTE(STACK[0x521]) = STACK[0x2D0];
  LOBYTE(STACK[0x522]) = STACK[0x2C8];
  LOBYTE(STACK[0x523]) = STACK[0x2B0];
  LOBYTE(STACK[0x524]) = STACK[0x2A0];
  LOBYTE(STACK[0x525]) = STACK[0x290];
  LOBYTE(STACK[0x526]) = STACK[0x288];
  LOBYTE(STACK[0x527]) = STACK[0x270];
  LOBYTE(STACK[0x528]) = STACK[0x268];
  LOBYTE(STACK[0x529]) = STACK[0x260];
  LOBYTE(STACK[0x52A]) = STACK[0x250];
  LOBYTE(STACK[0x52B]) = STACK[0x248];
  LOBYTE(STACK[0x52C]) = STACK[0x230];
  LOBYTE(STACK[0x52D]) = STACK[0x228];
  LOBYTE(STACK[0x52E]) = STACK[0x210];
  LOBYTE(STACK[0x52F]) = STACK[0x208];
}

void OUTLINED_FUNCTION_9_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a64;
  char a66;
  char a69;
  char a71;
  char a73;
  char a74;

  LOBYTE(STACK[0x480]) = STACK[0x288];
  LOBYTE(STACK[0x481]) = STACK[0x270];
  LOBYTE(STACK[0x482]) = STACK[0x268];
  LOBYTE(STACK[0x483]) = STACK[0x260];
  LOBYTE(STACK[0x484]) = STACK[0x250];
  LOBYTE(STACK[0x485]) = STACK[0x248];
  LOBYTE(STACK[0x486]) = STACK[0x230];
  LOBYTE(STACK[0x487]) = STACK[0x228];
  LOBYTE(STACK[0x488]) = STACK[0x210];
  LOBYTE(STACK[0x489]) = STACK[0x208];
  LOBYTE(STACK[0x48A]) = a74;
  LOBYTE(STACK[0x48B]) = a73;
  LOBYTE(STACK[0x48C]) = a71;
  LOBYTE(STACK[0x48D]) = a69;
  LOBYTE(STACK[0x48E]) = a66;
  LOBYTE(STACK[0x48F]) = a64;
}

uint64_t OUTLINED_FUNCTION_11_8()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748C10(v1, v0);
}

double OUTLINED_FUNCTION_12_8@<D0>(unsigned int a1@<W8>, int8x16_t a2@<Q2>, uint64x2_t a3@<Q3>, uint64x2_t a4@<Q4>, double a5@<D6>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64x2_t a20)
{
  unsigned int v20;
  unsigned int v21;
  char v22;
  int8x16_t v23;
  uint64x2_t v24;
  int8x16_t v25;
  int64x2_t v26;
  double result;

  v23.i64[0] = v22;
  v23.i64[1] = v21;
  v24 = (uint64x2_t)vandq_s8(v23, a2);
  v23.i64[0] = a1;
  v23.i64[1] = v20;
  v25 = vorrq_s8((int8x16_t)vshlq_u64(v24, a4), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v23, a2), a3));
  *(int8x8_t *)v25.i8 = vorr_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL));
  v23.i64[0] = BYTE3(a5);
  v23.i64[1] = BYTE4(a5);
  v25.i64[1] = (unint64_t)BYTE5(a5) << 56;
  v26 = (int64x2_t)vorrq_s8(v25, (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v23, a2), a20));
  *(_QWORD *)&result = vorrq_s8((int8x16_t)v26, (int8x16_t)vdupq_laneq_s64(v26, 1)).u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_13_8()
{
  return memcmp(&STACK[0x240], &STACK[0x230], 0x10uLL);
}

uint64_t OUTLINED_FUNCTION_14_6()
{
  uint64_t v0;

  return memcmp((const void *)(v0 - 160), (const void *)(v0 - 176), 0x10uLL);
}

void OUTLINED_FUNCTION_16_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,char a59,__int16 a60,char a61,__int16 a62,char a63)
{
  char a65;
  char a67;
  char a69;
  char a71;
  char a73;
  char a74;
  char a75;
  char a76;
  char a77;

  LOBYTE(STACK[0x243]) = a77;
  LOBYTE(STACK[0x244]) = a76;
  LOBYTE(STACK[0x245]) = a75;
  LOBYTE(STACK[0x246]) = a74;
  LOBYTE(STACK[0x247]) = a73;
  LOBYTE(STACK[0x248]) = a71;
  LOBYTE(STACK[0x249]) = a69;
  LOBYTE(STACK[0x24A]) = a67;
  LOBYTE(STACK[0x24B]) = a65;
  LOBYTE(STACK[0x24C]) = a63;
  LOBYTE(STACK[0x24D]) = a61;
  LOBYTE(STACK[0x24E]) = a59;
}

void OUTLINED_FUNCTION_17_7()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 216) = *(_QWORD *)(v0 - 584);
  *(_BYTE *)(v0 - 215) = *(_QWORD *)(v0 - 592);
  *(_BYTE *)(v0 - 214) = *(_QWORD *)(v0 - 600);
  *(_BYTE *)(v0 - 213) = *(_QWORD *)(v0 - 608);
  *(_BYTE *)(v0 - 212) = *(_QWORD *)(v0 - 616);
  *(_BYTE *)(v0 - 211) = *(_QWORD *)(v0 - 624);
  *(_BYTE *)(v0 - 210) = *(_QWORD *)(v0 - 632);
}

uint64_t OUTLINED_FUNCTION_18_8()
{
  return sub_249836B08();
}

void OUTLINED_FUNCTION_19_9(char a1@<W8>)
{
  char v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 225) = a1;
  *(_BYTE *)(v2 - 224) = *(_QWORD *)(v2 - 864);
  *(_BYTE *)(v2 - 223) = *(_QWORD *)(v2 - 552);
  *(_BYTE *)(v2 - 222) = *(_QWORD *)(v2 - 560);
  *(_BYTE *)(v2 - 221) = *(_QWORD *)(v2 - 872);
  *(_BYTE *)(v2 - 220) = v1;
  *(_BYTE *)(v2 - 219) = *(_QWORD *)(v2 - 568);
  *(_BYTE *)(v2 - 218) = *(_QWORD *)(v2 - 576);
}

uint64_t OUTLINED_FUNCTION_20_7()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t OUTLINED_FUNCTION_22_7()
{
  return swift_bridgeObjectRetain_n();
}

double OUTLINED_FUNCTION_24_7@<D0>(unint64_t a1@<X8>, int8x16_t a2@<Q0>, uint64x2_t a3@<Q1>, uint64x2_t a4@<Q2>)
{
  int64x2_t v4;
  double result;

  a2.i64[1] = a1;
  v4 = (int64x2_t)vorrq_s8(a2, (int8x16_t)vshlq_u64(a3, a4));
  *(_QWORD *)&result = vorrq_s8((int8x16_t)v4, (int8x16_t)vdupq_laneq_s64(v4, 1)).u64[0];
  return result;
}

void OUTLINED_FUNCTION_25_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, char a16, int a17, char a18, int a19, char a20,int a21,char a22,int a23,char a24)
{
  char v24;
  char v25;
  char v26;
  uint64_t v27;

  *(_BYTE *)(v27 - 168) = v26;
  *(_BYTE *)(v27 - 167) = v24;
  *(_BYTE *)(v27 - 166) = a16;
  *(_BYTE *)(v27 - 165) = a18;
  *(_BYTE *)(v27 - 164) = a14;
  *(_BYTE *)(v27 - 163) = a20;
  *(_BYTE *)(v27 - 162) = a22;
  *(_BYTE *)(v27 - 161) = a24;
  *(_BYTE *)(v27 - 160) = v25;
}

uint64_t OUTLINED_FUNCTION_26_5(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x10uLL);
}

BOOL OUTLINED_FUNCTION_28_6(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGRect v13;
  CGRect v14;

  v13.origin.x = v4;
  v13.origin.y = v5;
  v13.size.width = v6;
  v13.size.height = v7;
  v14.origin.x = a1;
  v14.origin.y = a2;
  v14.size.width = a3;
  v14.size.height = a4;
  return CGRectIntersectsRect(v13, v14);
}

void OUTLINED_FUNCTION_29_3()
{
  sub_249752EF4();
}

void OUTLINED_FUNCTION_33_6()
{
  sub_249752D50();
}

void OUTLINED_FUNCTION_34_6()
{
  sub_249752D50();
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_37_4()
{
  sub_249752D50();
}

uint64_t OUTLINED_FUNCTION_38_3()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_39_4()
{
  return 0x6F7463656A6F7270;
}

double OUTLINED_FUNCTION_41_4()
{
  double v0;

  return v0;
}

double OUTLINED_FUNCTION_44_3(__n128 a1)
{
  int8x16_t v1;
  int8x16_t v2;
  double result;

  v1.i64[0] = a1.n128_u8[13];
  v1.i64[1] = a1.n128_u8[14];
  v2.i64[0] = 255;
  v2.i64[1] = 255;
  *(_QWORD *)&result = vandq_s8(v1, v2).u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_48_3()
{
  return 0x72616365646973;
}

uint64_t OUTLINED_FUNCTION_49_3()
{
  return 0x6E69746C697562;
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  return 0x79616C70726961;
}

unint64_t OUTLINED_FUNCTION_54_2(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  *(_QWORD *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  v5 = (_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * result) = a4;
  return result;
}

double OUTLINED_FUNCTION_55_2(double a1)
{
  uint64_t v1;

  return round((double)*(unsigned int *)(v1 - 536) / *(double *)(v1 - 944) * a1);
}

double OUTLINED_FUNCTION_56_2(double a1)
{
  uint64_t v1;

  return round((double)*(unsigned int *)(v1 - 536) / *(double *)(v1 - 944) * a1);
}

uint64_t OUTLINED_FUNCTION_57_2()
{
  return sub_24983682C();
}

double OUTLINED_FUNCTION_58_3(double a1)
{
  double result;

  *(_QWORD *)&result = ((*(uint64_t *)&a1 >> 63) | 1) + *(_QWORD *)&a1;
  return result;
}

double OUTLINED_FUNCTION_59_1(uint64x2_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64x2_t a26)
{
  double result;

  *(_QWORD *)&result = vshlq_u64(a1, a26).u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  return sub_2498370CC();
}

uint64_t OUTLINED_FUNCTION_69_3()
{
  return sub_249837690();
}

uint64_t OUTLINED_FUNCTION_71_3()
{
  uint64_t v0;
  uint64_t v1;

  return sub_2497A0914(v1, v0);
}

void OUTLINED_FUNCTION_74_2()
{
  LOBYTE(STACK[0x232]) = STACK[0x214];
  LOBYTE(STACK[0x233]) = STACK[0x218];
  LOBYTE(STACK[0x234]) = STACK[0x21C];
  LOBYTE(STACK[0x235]) = STACK[0x220];
}

uint64_t OUTLINED_FUNCTION_76_1@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_77_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,int a22,char a23,int a24,char a25,int a26,char a27)
{
  uint64_t v27;

  *(_BYTE *)(v27 - 158) = a21;
  *(_BYTE *)(v27 - 157) = a23;
  *(_BYTE *)(v27 - 156) = a25;
  *(_BYTE *)(v27 - 155) = a27;
}

uint64_t OUTLINED_FUNCTION_78_1()
{
  return sub_2498375C4();
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  return sub_249836DB4();
}

void *OUTLINED_FUNCTION_87(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x46uLL);
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_101_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_103_0()
{
  return 0x726F7272696DLL;
}

uint64_t OUTLINED_FUNCTION_105_0()
{
  return sub_2498375C4();
}

void *OUTLINED_FUNCTION_107_0@<X0>(void *__dst@<X2>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memmove(__dst, a2, a3);
}

void OUTLINED_FUNCTION_108_0()
{
  sub_24974E3B0();
}

double OUTLINED_FUNCTION_110_0()
{
  CGFloat v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGRect v5;

  v5.origin.x = v1;
  v5.origin.y = v0;
  v5.size.width = v3;
  v5.size.height = v2;
  return CGRectGetWidth(v5);
}

double OUTLINED_FUNCTION_111_0()
{
  CGFloat v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGRect v5;

  v5.origin.x = v1;
  v5.origin.y = v0;
  v5.size.width = v3;
  v5.size.height = v2;
  return CGRectGetHeight(v5);
}

void OUTLINED_FUNCTION_112()
{
  sub_24974E3B0();
}

uint64_t OUTLINED_FUNCTION_114(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_24976A748(a1, a2, (uint64_t *)(v2 - 208));
}

void OUTLINED_FUNCTION_116(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_118(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, _QWORD);

  return v1(a1, 0);
}

uint64_t OUTLINED_FUNCTION_121()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_125()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_127@<X0>(const void *a1@<X0>, size_t a2@<X8>)
{
  const void *v2;

  return memcmp(a1, v2, a2);
}

void *OUTLINED_FUNCTION_129(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

BOOL OUTLINED_FUNCTION_130@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_133(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,__int16 a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,__int16 a34,char a35,char a36,char a37,char a38,__int128 a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  sub_2497A14FC(v62, v63, v61, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48,
    a49,
    a50,
    a51,
    a52,
    a53,
    a54,
    a55,
    a56,
    a57,
    a58,
    a59,
    a60,
    a61);
}

void OUTLINED_FUNCTION_134()
{
  uint64_t v0;

  sub_24979F99C(v0);
}

int8x8_t OUTLINED_FUNCTION_135(int8x16_t a1, int8x16_t a2)
{
  int8x16_t v2;

  v2 = vorrq_s8(a1, a2);
  return vorr_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL));
}

double OUTLINED_FUNCTION_136(double a1)
{
  int8x16_t v1;
  int8x16_t v2;
  double result;

  v1.i64[0] = LODWORD(a1);
  v1.i64[1] = HIDWORD(a1);
  v2.i64[0] = 255;
  v2.i64[1] = 255;
  *(_QWORD *)&result = vandq_s8(v1, v2).u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_138()
{
  return swift_bridgeObjectRetain();
}

int8x8_t OUTLINED_FUNCTION_140(int8x16_t a1, double a2, int8x16_t a3)
{
  return vmovn_s16((int16x8_t)vzip1q_s8(a3, a1));
}

int8x8_t OUTLINED_FUNCTION_141(int8x16_t a1, double a2, int8x16_t a3)
{
  uint64_t v3;
  int8x8_t result;

  result = vmovn_s16((int16x8_t)vzip1q_s8(a3, a1));
  *(_DWORD *)(v3 - 246) = result.i32[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_144()
{
  return 1852399981;
}

uint64_t OUTLINED_FUNCTION_145()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

double OUTLINED_FUNCTION_147@<D0>(unsigned __int16 a1@<W8>, int16x8_t a2@<Q0>)
{
  unsigned __int16 v2;
  unsigned __int16 v3;
  unsigned __int16 v4;

  a2.i16[0] = v4;
  a2.i16[1] = v3;
  a2.i16[2] = v2;
  a2.i16[3] = a1;
  *(int8x8_t *)a2.i8 = vmovn_s16(a2);
  return *(double *)a2.i64;
}

uint64_t OUTLINED_FUNCTION_148@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_149@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_151()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_153()
{
  return sub_249837288();
}

uint64_t OUTLINED_FUNCTION_154()
{
  return sub_2497A1974();
}

void OUTLINED_FUNCTION_156(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  *(_BYTE *)(v39 - 173) = a39;
  *(_BYTE *)(v39 - 172) = *(_DWORD *)(v39 - 236);
}

uint64_t OUTLINED_FUNCTION_157()
{
  return sub_2497D01D8(2u);
}

uint64_t OUTLINED_FUNCTION_158(const void *a1, const void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,size_t __n)
{
  return memcmp(a1, a2, __n);
}

uint64_t OUTLINED_FUNCTION_164_0(uint64_t a1, uint64_t a2, size_t a3)
{
  const void *v3;
  uint64_t v4;

  return memcmp((const void *)(v4 - 168), v3, a3);
}

uint64_t OUTLINED_FUNCTION_165()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_166()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_167()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_168()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_170()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_176()
{
  char v0;
  char v1;
  char v2;
  char v3;

  LOBYTE(STACK[0x574]) = v3;
  LOBYTE(STACK[0x575]) = v1;
  LOBYTE(STACK[0x576]) = v2;
  LOBYTE(STACK[0x577]) = v0;
}

id OUTLINED_FUNCTION_177(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(*(_QWORD *)(v1 + 56) + 8 * a1);
}

uint64_t OUTLINED_FUNCTION_178()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_181()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_182()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_184()
{
  return sub_24983769C();
}

uint64_t OUTLINED_FUNCTION_185()
{
  return sub_249836F40();
}

uint64_t OUTLINED_FUNCTION_187(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t (*v28)(char *, _QWORD);

  return v28(&a28, 0);
}

uint64_t OUTLINED_FUNCTION_189()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 160, 0);
}

uint64_t OUTLINED_FUNCTION_190(char *a1, char *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char *a19)
{
  return sub_2497BF374(a1, a2, a3, a19);
}

unint64_t OUTLINED_FUNCTION_194()
{
  return sub_2497CD8AC();
}

uint64_t OUTLINED_FUNCTION_195()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_196()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748BCC(v0, v1);
}

id NSError.init(NSOSStatusErrorDomain:debugDescription:__file:__line:)(int a1, uint64_t a2, uint64_t a3)
{
  return sub_2497CEB14(a1, a2, a3);
}

{
  return sub_2497CEB14(a1, a2, a3);
}

id sub_2497CE94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_0;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23[3];
  uint64_t v24;
  uint64_t v25;

  v10 = MEMORY[0x24BEE0D00];
  v25 = sub_249836CA0();
  if (a5)
  {
    v11 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
    v24 = v10;
    v23[0] = a4;
    v23[1] = a5;
    sub_2498100B4((uint64_t)v23, v11, v12);
  }
  if (a6)
  {
    v13 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
    v15 = v14;
    swift_getErrorValue();
    v24 = v22;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v23);
    (*(void (**)(uint64_t *))(*(_QWORD *)(v22 - 8) + 16))(boxed_opaque_existential_0);
    sub_2498100B4((uint64_t)v23, v13, v15);
  }
  v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v18 = (void *)sub_249836D18();
  swift_bridgeObjectRelease();
  v19 = (void *)sub_249836C88();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, a3, v19);

  return v20;
}

id NSError.init(NSPOSIXErrorDomain:debugDescription:__file:__line:)(int a1, uint64_t a2, uint64_t a3)
{
  return sub_2497CEB14(a1, a2, a3);
}

{
  return sub_2497CEB14(a1, a2, a3);
}

id NSError.init(NSMachErrorDomain:debugDescription:__file:__line:)(int a1, uint64_t a2, uint64_t a3)
{
  return sub_2497CEB14(a1, a2, a3);
}

{
  return sub_2497CEB14(a1, a2, a3);
}

id sub_2497CEB14(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  return sub_2497CE94C(v6, v7, a1, a2, a3, 0);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2497CEBD0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2497CEC04 + 4 * byte_24983B6D0[a1]))(0x79616C70726961, 0xE700000000000000);
}

uint64_t sub_2497CEC04()
{
  return 0x6E69746C697562;
}

uint64_t sub_2497CEC18()
{
  return 1852399981;
}

uint64_t sub_2497CEC28()
{
  return 0x726F7272696DLL;
}

uint64_t sub_2497CEC3C()
{
  return 0x6F7463656A6F7270;
}

uint64_t sub_2497CEC58()
{
  return 0x72616365646973;
}

uint64_t sub_2497CEC6C()
{
  return 30324;
}

void sub_2497CEC78(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24975E0B0();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_2497D3DE0(v5);
  *a1 = v2;
}

double UniversalControlDisplay.Rectangle.rect.getter(uint64_t a1)
{
  return (double)a1;
}

UniversalControl::UniversalControlDisplay::Rectangle __swiftcall UniversalControlDisplay.Rectangle.init(_:)(__C::CGRect a1)
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  Swift::Int v5;
  Swift::Int v6;
  Swift::Int v7;
  Swift::Int v8;
  double v9;
  double v10;
  uint64_t v11;
  UniversalControl::UniversalControlDisplay::Size v12;
  UniversalControl::UniversalControlDisplay::Rectangle result;
  CGRect v14;
  CGRect v15;

  v14 = CGRectStandardize((CGRect)a1);
  x = v14.origin.x;
  y = v14.origin.y;
  width = v14.size.width;
  height = v14.size.height;
  v9 = floor(CGRectGetMinX(v14));
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v15.origin.x = x;
  v15.origin.y = y;
  v15.size.width = width;
  v15.size.height = height;
  v10 = floor(CGRectGetMinY(v15));
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v11 = (uint64_t)v10;
  v12 = UniversalControlDisplay.Size.init(_:)((CGSize)__PAIR128__(*(unint64_t *)&height, *(unint64_t *)&width));
  v7 = v12.width;
  v8 = v12.height;
  v5 = (uint64_t)v9;
  v6 = v11;
LABEL_14:
  result.size.height = v8;
  result.size.width = v7;
  result.y = v6;
  result.x = v5;
  return result;
}

UniversalControl::UniversalControlDisplay::Rectangle __swiftcall UniversalControlDisplay.Rectangle.init()()
{
  Swift::Int v0;
  Swift::Int v1;
  Swift::Int v2;
  Swift::Int v3;
  UniversalControl::UniversalControlDisplay::Rectangle result;

  v0 = 0;
  v1 = 0;
  v2 = 0;
  v3 = 0;
  result.size.height = v3;
  result.size.width = v2;
  result.y = v1;
  result.x = v0;
  return result;
}

UniversalControl::UniversalControlDisplay::Rectangle __swiftcall UniversalControlDisplay.Rectangle.init(x:y:width:height:)(Swift::Int x, Swift::Int y, Swift::Int width, Swift::Int height)
{
  Swift::Int v4;
  Swift::Int v5;
  UniversalControl::UniversalControlDisplay::Rectangle result;

  v4 = width & ~(width >> 63);
  v5 = height & ~(height >> 63);
  result.size.height = v5;
  result.size.width = v4;
  result.y = y;
  result.x = x;
  return result;
}

uint64_t sub_2497CEE0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  result = sub_2497CEF50();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 9) = v3;
  *(_BYTE *)(a1 + 10) = v4;
  *(_BYTE *)(a1 + 11) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  *(_BYTE *)(a1 + 13) = v7;
  *(_BYTE *)(a1 + 14) = v8;
  *(_BYTE *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 15) = v10;
  *(_BYTE *)(a1 + 17) = v11;
  *(_BYTE *)(a1 + 18) = v12;
  *(_BYTE *)(a1 + 19) = v13;
  *(_BYTE *)(a1 + 20) = v14;
  *(_BYTE *)(a1 + 21) = v15;
  *(_BYTE *)(a1 + 22) = v16;
  *(_BYTE *)(a1 + 16) = v17;
  *(_BYTE *)(a1 + 23) = v18;
  *(_BYTE *)(a1 + 25) = v19;
  *(_BYTE *)(a1 + 26) = v20;
  *(_BYTE *)(a1 + 27) = v21;
  *(_BYTE *)(a1 + 28) = v22;
  *(_BYTE *)(a1 + 29) = v23;
  *(_BYTE *)(a1 + 30) = v24;
  *(_BYTE *)(a1 + 24) = v25;
  *(_BYTE *)(a1 + 31) = v26;
  return result;
}

uint64_t sub_2497CEF20(unint64_t *a1)
{
  return sub_2497CEF94(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_2497CEF50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  return *(_QWORD *)v1;
}

uint64_t sub_2497CEF94(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;

  v5 = a4;
  v6 = a3;
  v7 = a2;
  v8 = a1;
  v9 = a1 >> 8;
  v10 = a1 >> 16;
  v11 = a1 >> 24;
  v12 = HIDWORD(a1);
  v16 = a1 >> 40;
  v17 = HIWORD(a1);
  v18 = HIBYTE(a1);
  v19 = a2 >> 8;
  v20 = a2 >> 16;
  v21 = a2 >> 24;
  v22 = HIDWORD(a2);
  v23 = a2 >> 40;
  v24 = HIWORD(a2);
  v25 = HIBYTE(a2);
  v26 = a3 >> 8;
  v27 = a3 >> 16;
  v28 = a3 >> 24;
  v29 = HIDWORD(a3);
  v30 = a3 >> 40;
  v31 = HIWORD(a3);
  v32 = HIBYTE(a3);
  v34 = a4 >> 8;
  v35 = a4 >> 16;
  v37 = a4 >> 24;
  v38 = HIDWORD(a4);
  v13 = (_BYTE *)(v4 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
  v14 = a4 >> 40;
  v33 = HIWORD(a4);
  v36 = HIBYTE(a4);
  result = OUTLINED_FUNCTION_44_0();
  *v13 = v8;
  v13[1] = v9;
  v13[2] = v10;
  v13[3] = v11;
  v13[4] = v12;
  v13[5] = v16;
  v13[6] = v17;
  v13[7] = v18;
  v13[8] = v7;
  v13[9] = v19;
  v13[10] = v20;
  v13[11] = v21;
  v13[12] = v22;
  v13[13] = v23;
  v13[14] = v24;
  v13[15] = v25;
  v13[16] = v6;
  v13[17] = v26;
  v13[18] = v27;
  v13[19] = v28;
  v13[20] = v29;
  v13[21] = v30;
  v13[22] = v31;
  v13[23] = v32;
  v13[24] = v5;
  v13[25] = v34;
  v13[26] = v35;
  v13[27] = v37;
  v13[28] = v38;
  v13[29] = v14;
  v13[30] = v33;
  v13[31] = v36;
  return result;
}

void sub_2497CF184()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;

  v2 = OUTLINED_FUNCTION_36_6();
  v3 = OUTLINED_FUNCTION_18_9((uint64_t)v2);
  v4 = OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(v3 + 32) = v4;
  v5 = (_OWORD *)(v0 + v4);
  OUTLINED_FUNCTION_44_0();
  v6 = v5[1];
  *(_OWORD *)(v1 + 40) = *v5;
  *(_OWORD *)(v1 + 56) = v6;
  OUTLINED_FUNCTION_81();
}

void sub_2497CF1DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  v1 = *a1;
  v2 = *(_QWORD *)(v1 + 24) + *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 56);
  v5 = *(_DWORD *)(v1 + 64);
  v4 = *(_DWORD *)(v1 + 68);
  *(_OWORD *)v2 = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(v2 + 16) = v3;
  *(_DWORD *)(v2 + 24) = v5;
  *(_DWORD *)(v2 + 28) = v4;
  free((void *)v1);
}

void sub_2497CF204(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v3 + 32) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_0();
}

void sub_2497CF248(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_2497CF2D4(v1, v2);
}

uint64_t sub_2497CF284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  v2 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain();
  return v2;
}

void sub_2497CF2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v5 + 40) = a1;
  *(_QWORD *)(v5 + 48) = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_3();
}

void sub_2497CF320()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = malloc(0x30uLL);
  *(_QWORD *)(OUTLINED_FUNCTION_18_9((uint64_t)v2) + 40) = v0;
  v3 = v0 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_44_0();
  v4 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v1 + 32) = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_81();
}

void sub_2497CF37C(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_65_3();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_65_3();
  }
  OUTLINED_FUNCTION_27_5(v2);
}

void sub_2497CF3C8(uint64_t a1@<X8>)
{
  _BYTE v2[33];

  sub_2497CF44C((uint64_t)v2);
  sub_2497D3C50((uint64_t)v2, a1, &qword_257880108);
}

uint64_t sub_2497CF40C(uint64_t a1)
{
  _BYTE v2[33];

  sub_2497D3C50(a1, (uint64_t)v2, &qword_257880108);
  return sub_2497CF4A4((uint64_t)v2);
}

void sub_2497CF44C(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 *v3;
  char v4;
  __int128 v5;
  __int128 v6;

  v3 = (__int128 *)(v1 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
  OUTLINED_FUNCTION_44_0();
  v4 = *((_BYTE *)v3 + 72);
  v5 = 0uLL;
  v6 = 0uLL;
  if ((v4 & 1) == 0)
  {
    v6 = *(__int128 *)((char *)v3 + 56);
    v5 = *v3;
  }
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = v4;
  OUTLINED_FUNCTION_24_0();
}

uint64_t sub_2497CF4A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  char v10;

  sub_2497D3C50(a1, (uint64_t)v9, &qword_257880108);
  if ((v10 & 1) != 0)
  {
    v2 = v1 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
    result = OUTLINED_FUNCTION_44_0();
    *(_QWORD *)(v2 + 56) = 0;
    *(_QWORD *)(v2 + 64) = 0;
    *(_BYTE *)(v2 + 72) = 1;
  }
  else
  {
    v4 = v9[0];
    v5 = v9[1];
    v6 = v9[2];
    v7 = v9[3];
    v8 = v1 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
    OUTLINED_FUNCTION_44_0();
    result = static UniversalControlUUID.compare(lhs:rhs:)(v4, v5, *(_QWORD *)v8, *(_QWORD *)(v8 + 8));
    if (!result)
    {
      *(_QWORD *)(v8 + 56) = v6;
      *(_QWORD *)(v8 + 64) = v7;
      *(_BYTE *)(v8 + 72) = 0;
    }
  }
  return result;
}

void sub_2497CF558()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;

  v2 = malloc(0x90uLL);
  v3 = OUTLINED_FUNCTION_18_9((uint64_t)v2);
  *v1 = v0;
  sub_2497CF44C(v3 + 74);
  v4 = OUTLINED_FUNCTION_31_3();
  sub_2497D3C50(v4, v5, v6);
  OUTLINED_FUNCTION_81();
}

void sub_2497CF5AC(void **a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = (uint64_t)*a1 + 107;
  v4 = 41;
  if ((a2 & 1) != 0)
    v4 = 8;
  v5 = (uint64_t)v2 + v4;
  sub_2497D3C50(v3, (uint64_t)v2 + v4, &qword_257880108);
  sub_2497CF4A4(v5);
  OUTLINED_FUNCTION_27_5(v2);
}

void sub_2497CF600(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;

  sub_2497CF67C((uint64_t)&v3);
  v2 = v4;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v2;
}

void sub_2497CF640(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;

  v1 = *(_BYTE *)(a1 + 8);
  v2 = *(_QWORD *)a1;
  v3 = v1;
  sub_2497CF6C4(&v2);
}

void sub_2497CF67C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  v4 = *(_BYTE *)(v3 + 88);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 80);
  *(_BYTE *)(a1 + 8) = v4;
  OUTLINED_FUNCTION_24_0();
}

void sub_2497CF6C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = v1 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v4 + 80) = v2;
  *(_BYTE *)(v4 + 88) = v3;
  OUTLINED_FUNCTION_3_3();
}

void sub_2497CF70C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_37_5();
  v3 = OUTLINED_FUNCTION_18_9((uint64_t)v2);
  v4 = OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  *(_QWORD *)(v3 + 40) = v0;
  *(_QWORD *)(v3 + 48) = v4;
  v5 = v0 + v4;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v5 + 80);
  *(_BYTE *)(v1 + 32) = *(_BYTE *)(v5 + 88);
  OUTLINED_FUNCTION_81();
}

void sub_2497CF768(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *a1;
  v2 = *(_QWORD *)(v1 + 40) + *(_QWORD *)(v1 + 48);
  v3 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(v2 + 88) = v3;
  free((void *)v1);
}

void sub_2497CF788(double *a1)
{
  sub_2497CF7F8(*a1, a1[1]);
}

void sub_2497CF7AC()
{
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_24_0();
}

double UniversalControlDisplay.Size.size.getter(uint64_t a1)
{
  return (double)a1;
}

void sub_2497CF7F8(double a1, double a2)
{
  uint64_t v2;
  UniversalControl::UniversalControlDisplay::Size v3;
  UniversalControl::UniversalControlDisplay::Size *v4;

  v3 = UniversalControlDisplay.Size.init(_:)((CGSize)__PAIR128__(*(unint64_t *)&a2, *(unint64_t *)&a1));
  v4 = (UniversalControl::UniversalControlDisplay::Size *)(v2
                                                         + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
  OUTLINED_FUNCTION_44_0();
  v4[6] = v3;
  OUTLINED_FUNCTION_3_3();
}

UniversalControl::UniversalControlDisplay::Size __swiftcall UniversalControlDisplay.Size.init(_:)(CGSize a1)
{
  double v1;
  double v2;
  double v3;
  CGFloat height;
  double v5;
  double v6;
  Swift::Int v7;
  Swift::Int v8;
  UniversalControl::UniversalControlDisplay::Size result;

  v1 = floor(a1.width);
  v2 = ceil(a1.width);
  if (a1.width >= 0.0)
    v3 = v2;
  else
    v3 = v1;
  if (v3 <= 0.0)
    v3 = 0.0;
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  height = a1.height;
  v5 = floor(a1.height);
  v6 = ceil(a1.height);
  if (height < 0.0)
    v6 = v5;
  if (v6 <= 0.0)
    v6 = 0.0;
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
    goto LABEL_20;
  if (v6 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = (uint64_t)v3;
  v8 = (uint64_t)v6;
LABEL_23:
  result.height = v8;
  result.width = v7;
  return result;
}

void sub_2497CF8F8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_36_6();
  *v0 = v2;
  v2[8] = v1;
  sub_2497CF7AC();
  v2[6] = v3;
  v2[7] = v4;
  OUTLINED_FUNCTION_81();
}

void sub_2497CF934(CGSize **a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_46_4(a1);
  v5 = v4 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v5 + 96) = v2;
  *(_QWORD *)(v5 + 104) = v3;
  OUTLINED_FUNCTION_7_14(v1);
}

void sub_2497CF980(double *a1)
{
  sub_2497CF9E4(*a1, a1[1]);
}

void sub_2497CF9A4()
{
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_24_0();
}

void sub_2497CF9E4(double a1, double a2)
{
  uint64_t v2;
  UniversalControl::UniversalControlDisplay::Size v3;
  UniversalControl::UniversalControlDisplay::Size *v4;

  v3 = UniversalControlDisplay.Size.init(_:)((CGSize)__PAIR128__(*(unint64_t *)&a2, *(unint64_t *)&a1));
  v4 = (UniversalControl::UniversalControlDisplay::Size *)(v2
                                                         + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
  OUTLINED_FUNCTION_44_0();
  v4[7] = v3;
  OUTLINED_FUNCTION_3_3();
}

void sub_2497CFA2C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_36_6();
  *v0 = v2;
  v2[8] = v1;
  sub_2497CF9A4();
  v2[6] = v3;
  v2[7] = v4;
  OUTLINED_FUNCTION_81();
}

void sub_2497CFA68(CGSize **a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_46_4(a1);
  v5 = v4 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v5 + 112) = v2;
  *(_QWORD *)(v5 + 120) = v3;
  OUTLINED_FUNCTION_7_14(v1);
}

void sub_2497CFAB4(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = sub_2497CFB08();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
}

uint64_t sub_2497CFAE0(double *a1)
{
  return sub_2497CFB5C(*a1, a1[1], a1[2], a1[3]);
}

double sub_2497CFB08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  return (double)*(uint64_t *)(v1 + 128);
}

uint64_t sub_2497CFB5C(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  Swift::Int x;
  Swift::Int y;
  Swift::Int width;
  Swift::Int height;
  _QWORD *v9;
  uint64_t result;
  UniversalControl::UniversalControlDisplay::Rectangle v11;

  v11 = UniversalControlDisplay.Rectangle.init(_:)(*(__C::CGRect *)&a1);
  x = v11.x;
  y = v11.y;
  width = v11.size.width;
  height = v11.size.height;
  v9 = (_QWORD *)(v4 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
  result = OUTLINED_FUNCTION_44_0();
  v9[16] = x;
  v9[17] = y;
  v9[18] = width;
  v9[19] = height;
  return result;
}

void sub_2497CFBC4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = malloc(0x58uLL);
  *(_QWORD *)(OUTLINED_FUNCTION_18_9((uint64_t)v2) + 80) = v0;
  *(double *)v1 = sub_2497CFB08();
  *(_QWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v5;
  OUTLINED_FUNCTION_81();
}

void sub_2497CFC08(__C::CGRect **a1)
{
  __C::CGRect *v1;
  CGFloat width;
  Swift::Int x;
  Swift::Int y;
  Swift::Int v5;
  Swift::Int height;
  _QWORD *v7;
  UniversalControl::UniversalControlDisplay::Rectangle v8;

  v1 = *a1;
  width = (*a1)[2].size.width;
  v8 = UniversalControlDisplay.Rectangle.init(_:)(**a1);
  x = v8.x;
  y = v8.y;
  v5 = v8.size.width;
  height = v8.size.height;
  v7 = (_QWORD *)(*(_QWORD *)&width + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
  OUTLINED_FUNCTION_44_0();
  v7[16] = x;
  v7[17] = y;
  v7[18] = v5;
  v7[19] = height;
  free(v1);
}

void sub_2497CFC98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249773D10(a1, (uint64_t)v4);
  sub_2497CFD58((uint64_t)v4);
}

void sub_2497CFD14()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_0();
  v0 = type metadata accessor for UniversalControlDisplay.Properties(0);
  OUTLINED_FUNCTION_39_5(v0);
  OUTLINED_FUNCTION_24_0();
}

void sub_2497CFD58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  v4 = type metadata accessor for UniversalControlDisplay.Properties(0);
  sub_2497D3BCC(a1, v3 + *(int *)(v4 + 48));
  swift_endAccess();
  sub_2497D5E68(a1, &qword_257880850);
  OUTLINED_FUNCTION_24_0();
}

void sub_2497CFDC0()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  size_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = malloc(0x70uLL);
  *(_QWORD *)(OUTLINED_FUNCTION_18_9((uint64_t)v2) + 72) = v0;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257880850) - 8) + 64);
  v1[10] = malloc(v3);
  v4 = malloc(v3);
  v5 = OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  v1[11] = v4;
  v1[12] = v5;
  OUTLINED_FUNCTION_44_0();
  v6 = type metadata accessor for UniversalControlDisplay.Properties(0);
  v1[13] = v6;
  OUTLINED_FUNCTION_39_5(v6);
  OUTLINED_FUNCTION_81();
}

void sub_2497CFE54(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 104);
  v4 = *(void **)(*(_QWORD *)a1 + 80);
  v5 = *(void **)(*(_QWORD *)a1 + 88);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 72) + *(_QWORD *)(*(_QWORD *)a1 + 96);
  if ((a2 & 1) != 0)
  {
    sub_249773D10(*(_QWORD *)(*(_QWORD *)a1 + 88), (uint64_t)v4);
    OUTLINED_FUNCTION_44_0();
    sub_2497D3BCC((uint64_t)v4, v6 + *(int *)(v3 + 48));
    swift_endAccess();
    sub_2497D5E68((uint64_t)v4, &qword_257880850);
  }
  else
  {
    OUTLINED_FUNCTION_44_0();
    sub_2497D3BCC((uint64_t)v5, v6 + *(int *)(v3 + 48));
    swift_endAccess();
  }
  sub_2497D5E68((uint64_t)v5, &qword_257880850);
  free(v5);
  free(v4);
  OUTLINED_FUNCTION_7_14(v2);
}

void sub_2497CFF24(uint64_t a1@<X8>)
{
  int v2;
  char v3;

  sub_2497CFF54();
  *(_DWORD *)a1 = v2;
  *(_BYTE *)(a1 + 4) = v3 & 1;
}

void sub_2497CFF54()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_0();
  v0 = type metadata accessor for UniversalControlDisplay.Properties(0);
  OUTLINED_FUNCTION_38_4(*(int *)(v0 + 52));
  OUTLINED_FUNCTION_24_0();
}

void sub_2497CFF98()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_0();
  v0 = type metadata accessor for UniversalControlDisplay.Properties(0);
  OUTLINED_FUNCTION_77_2(*(int *)(v0 + 52));
  OUTLINED_FUNCTION_24_0();
}

void sub_2497CFFE0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_37_5();
  v3 = OUTLINED_FUNCTION_18_9((uint64_t)v2);
  v4 = OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(v3 + 32) = v4;
  OUTLINED_FUNCTION_44_0();
  v5 = type metadata accessor for UniversalControlDisplay.Properties(0);
  *(_QWORD *)(v1 + 40) = v5;
  OUTLINED_FUNCTION_50_3(*(int *)(v5 + 52));
  OUTLINED_FUNCTION_81();
}

void sub_2497D0040(void **a1)
{
  OUTLINED_FUNCTION_17_8(*a1, *(int *)(*((_QWORD *)*a1 + 5) + 52));
}

void sub_2497D0060(uint64_t a1@<X8>)
{
  int v2;
  char v3;

  sub_2497D00CC();
  *(_DWORD *)a1 = v2;
  *(_BYTE *)(a1 + 4) = v3 & 1;
}

uint64_t sub_2497D0090(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(unint64_t))
{
  return a5(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32));
}

void sub_2497D00CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_0();
  v0 = type metadata accessor for UniversalControlDisplay.Properties(0);
  OUTLINED_FUNCTION_38_4(*(int *)(v0 + 56));
  OUTLINED_FUNCTION_24_0();
}

void sub_2497D0110()
{
  uint64_t v0;

  OUTLINED_FUNCTION_44_0();
  v0 = type metadata accessor for UniversalControlDisplay.Properties(0);
  OUTLINED_FUNCTION_77_2(*(int *)(v0 + 56));
  OUTLINED_FUNCTION_24_0();
}

void sub_2497D0158()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_37_5();
  v3 = OUTLINED_FUNCTION_18_9((uint64_t)v2);
  v4 = OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  *(_QWORD *)(v3 + 24) = v0;
  *(_QWORD *)(v3 + 32) = v4;
  OUTLINED_FUNCTION_44_0();
  v5 = type metadata accessor for UniversalControlDisplay.Properties(0);
  *(_QWORD *)(v1 + 40) = v5;
  OUTLINED_FUNCTION_50_3(*(int *)(v5 + 56));
  OUTLINED_FUNCTION_81();
}

void sub_2497D01B8(void **a1)
{
  OUTLINED_FUNCTION_17_8(*a1, *(int *)(*((_QWORD *)*a1 + 5) + 56));
}

uint64_t sub_2497D01D8(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v3 = v1 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  v4 = *(_QWORD *)(v3 + 32);
  swift_bridgeObjectRetain();
  sub_2497A1354(a1, v4);
  v6 = v5;
  swift_bridgeObjectRelease();
  return v6 & 1;
}

void sub_2497D0240(uint64_t a1, char a2)
{
  char v3;
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_74_3();
    sub_2497C2784(&v3, a1);
  }
  else
  {
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_74_3();
    sub_2497CBC5C(a1);
  }
  sub_2497CF204(v4);
}

uint64_t sub_2497D02DC()
{
  return sub_2497D01D8(0);
}

void sub_2497D02E4(char a1)
{
  sub_2497D0240(0, a1);
}

void sub_2497D02F0(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_28_7(a1);
  v1 = sub_2497D01D8(0);
  OUTLINED_FUNCTION_22_8(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D0320()
{
  char v0;

  OUTLINED_FUNCTION_26_6();
  sub_2497D0240(0, v0);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497D0340()
{
  return sub_2497D01D8(1u);
}

void sub_2497D0348(char a1)
{
  sub_2497D0240(1, a1);
}

void sub_2497D0354(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_28_7(a1);
  v1 = sub_2497D01D8(1u);
  OUTLINED_FUNCTION_22_8(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D0384()
{
  char v0;

  OUTLINED_FUNCTION_26_6();
  sub_2497D0240(1, v0);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497D03A4()
{
  return sub_2497D01D8(2u);
}

void sub_2497D03AC(char a1)
{
  sub_2497D0240(2, a1);
}

void sub_2497D03B8(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_28_7(a1);
  v1 = sub_2497D01D8(2u);
  OUTLINED_FUNCTION_22_8(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D03E8()
{
  char v0;

  OUTLINED_FUNCTION_26_6();
  sub_2497D0240(2, v0);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497D0408()
{
  return sub_2497D01D8(3u);
}

void sub_2497D0410(char a1)
{
  sub_2497D0240(3, a1);
}

void sub_2497D041C(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_28_7(a1);
  v1 = sub_2497D01D8(3u);
  OUTLINED_FUNCTION_22_8(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D044C()
{
  char v0;

  OUTLINED_FUNCTION_26_6();
  sub_2497D0240(3, v0);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497D046C()
{
  return sub_2497D01D8(4u);
}

void sub_2497D0474(char a1)
{
  sub_2497D0240(4, a1);
}

void sub_2497D0480(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_28_7(a1);
  v1 = sub_2497D01D8(4u);
  OUTLINED_FUNCTION_22_8(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D04B0()
{
  char v0;

  OUTLINED_FUNCTION_26_6();
  sub_2497D0240(4, v0);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497D04D0()
{
  return sub_2497D01D8(5u);
}

void sub_2497D04D8(char a1)
{
  sub_2497D0240(5, a1);
}

void sub_2497D04E4(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_28_7(a1);
  v1 = sub_2497D01D8(5u);
  OUTLINED_FUNCTION_22_8(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D0514()
{
  char v0;

  OUTLINED_FUNCTION_26_6();
  sub_2497D0240(5, v0);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497D0534()
{
  return sub_2497D01D8(6u);
}

void sub_2497D053C(char a1)
{
  sub_2497D0240(6, a1);
}

void sub_2497D0548(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_28_7(a1);
  v1 = sub_2497D01D8(6u);
  OUTLINED_FUNCTION_22_8(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D0578()
{
  char v0;

  OUTLINED_FUNCTION_26_6();
  sub_2497D0240(6, v0);
  OUTLINED_FUNCTION_27();
}

UniversalControl::UniversalControlDisplay::Size __swiftcall UniversalControlDisplay.Size.init()()
{
  Swift::Int v0;
  Swift::Int v1;
  UniversalControl::UniversalControlDisplay::Size result;

  OUTLINED_FUNCTION_29_4();
  result.height = v1;
  result.width = v0;
  return result;
}

BOOL sub_2497D05A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  char v30;
  _BOOL8 result;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  _DWORD *v47;
  char v48;
  _DWORD *v49;
  int v50;
  uint64_t v51;
  _DWORD *v52;
  char v53;
  _DWORD *v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = sub_249836A84();
  v64 = *(_QWORD *)(v4 - 8);
  v65 = v4;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v62 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881E30);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  v8 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v56 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v56 - v14;
  v17 = a1[2];
  v16 = a1[3];
  v18 = *(_QWORD *)(a2 + 16);
  v19 = *(_QWORD *)(a2 + 24);
  if (static UniversalControlUUID.compare(lhs:rhs:)(*a1, a1[1], *(_QWORD *)a2, *(_QWORD *)(a2 + 8)))
    return 0;
  v60 = v13;
  v61 = a1;
  v57 = v15;
  v58 = v10;
  v21 = v64;
  v20 = v65;
  v59 = v7;
  if (static UniversalControlUUID.compare(lhs:rhs:)(v17, v16, v18, v19))
    return 0;
  v22 = v61;
  if ((sub_249769F1C(v61[4], *(_QWORD *)(a2 + 32)) & 1) == 0)
    return 0;
  v23 = v22[6];
  v24 = *(_QWORD *)(a2 + 48);
  if (!v23)
  {
    v27 = v20;
    v28 = v21;
    v25 = (uint64_t)v60;
    v26 = v63;
    if (v24)
      return 0;
    goto LABEL_13;
  }
  v25 = (uint64_t)v60;
  v26 = v63;
  if (!v24)
    return 0;
  v27 = v20;
  v28 = v21;
  v29 = v22[5] == *(_QWORD *)(a2 + 40) && v23 == v24;
  if (v29 || (v30 = sub_2498375C4(), result = 0, (v30 & 1) != 0))
  {
LABEL_13:
    if ((v22[9] & 1) != 0)
    {
      v33 = (uint64_t)v58;
      v32 = (uint64_t)v59;
      if (!*(_BYTE *)(a2 + 72))
        return 0;
    }
    else
    {
      v33 = (uint64_t)v58;
      v32 = (uint64_t)v59;
      if ((*(_BYTE *)(a2 + 72) & 1) != 0
        || static UniversalControlUUID.compare(lhs:rhs:)(v22[7], v22[8], *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
      {
        return 0;
      }
    }
    v34 = *(_BYTE *)(a2 + 88);
    if ((v22[11] & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 88))
        return 0;
    }
    else
    {
      if (v22[10] != *(_QWORD *)(a2 + 80))
        v34 = 1;
      if ((v34 & 1) != 0)
        return 0;
    }
    if (v22[12] != *(_QWORD *)(a2 + 96) || v22[13] != *(_QWORD *)(a2 + 104))
      return 0;
    if (v22[14] != *(_QWORD *)(a2 + 112) || v22[15] != *(_QWORD *)(a2 + 120))
      return 0;
    if (v22[16] != *(_QWORD *)(a2 + 128) || v22[17] != *(_QWORD *)(a2 + 136))
      return 0;
    if (v22[18] != *(_QWORD *)(a2 + 144) || v22[19] != *(_QWORD *)(a2 + 152))
      return 0;
    v39 = (int *)type metadata accessor for UniversalControlDisplay.Properties(0);
    v40 = (uint64_t)v22 + v39[12];
    v41 = (uint64_t)v57;
    sub_249773D10(v40, (uint64_t)v57);
    sub_249773D10(a2 + v39[12], v25);
    v42 = v32 + *(int *)(v26 + 48);
    sub_249773D10(v41, v32);
    sub_249773D10(v25, v42);
    if (__swift_getEnumTagSinglePayload(v32, 1, v27) == 1)
    {
      sub_2497D5E68(v25, &qword_257880850);
      sub_2497D5E68(v41, &qword_257880850);
      if (__swift_getEnumTagSinglePayload(v42, 1, v27) == 1)
      {
        sub_2497D5E68(v32, &qword_257880850);
LABEL_52:
        v46 = v39[13];
        v47 = (_DWORD *)((char *)v61 + v46);
        v48 = *((_BYTE *)v61 + v46 + 4);
        v49 = (_DWORD *)(a2 + v46);
        v50 = *(unsigned __int8 *)(a2 + v46 + 4);
        if ((v48 & 1) != 0)
        {
          if (!v50)
            return 0;
        }
        else
        {
          if (*v47 != *v49)
            LOBYTE(v50) = 1;
          if ((v50 & 1) != 0)
            return 0;
        }
        v51 = v39[14];
        v52 = (_DWORD *)((char *)v61 + v51);
        v53 = *((_BYTE *)v61 + v51 + 4);
        v54 = (_DWORD *)(a2 + v51);
        v55 = *(_BYTE *)(a2 + v51 + 4);
        if ((v53 & 1) == 0)
        {
          if (*v52 != *v54)
            v55 = 1;
          return (v55 & 1) == 0;
        }
        return (v55 & 1) != 0;
      }
    }
    else
    {
      sub_249773D10(v32, v33);
      if (__swift_getEnumTagSinglePayload(v42, 1, v27) != 1)
      {
        v43 = v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v62, v42, v27);
        sub_24974BBF4(&qword_257881E38, (void (*)(uint64_t))MEMORY[0x24BEE63B8]);
        v44 = sub_249836D0C();
        v45 = *(void (**)(char *, uint64_t))(v28 + 8);
        v45(v43, v27);
        sub_2497D5E68((uint64_t)v60, &qword_257880850);
        sub_2497D5E68((uint64_t)v57, &qword_257880850);
        v45((char *)v33, v27);
        sub_2497D5E68(v32, &qword_257880850);
        if ((v44 & 1) == 0)
          return 0;
        goto LABEL_52;
      }
      sub_2497D5E68(v25, &qword_257880850);
      sub_2497D5E68(v41, &qword_257880850);
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v33, v27);
    }
    sub_2497D5E68(v32, &qword_257881E30);
    return 0;
  }
  return result;
}

uint64_t sub_2497D0A6C(uint64_t a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int *v14;
  uint64_t v15;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v2 = v1;
  v31 = *MEMORY[0x24BDAC8D0];
  v4 = sub_249836A84();
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v29 = v1[1];
  v30 = v10;
  sub_24983769C();
  v30 = v29;
  sub_24983769C();
  v11 = *((_QWORD *)v1 + 4);
  swift_bridgeObjectRetain();
  sub_2497D46E8(a1, v11);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v2 + 6))
  {
    sub_2498376B4();
    swift_bridgeObjectRetain();
    sub_249836D84();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2498376B4();
  }
  if (*((_BYTE *)v2 + 72) == 1)
  {
    sub_2498376B4();
  }
  else
  {
    v13 = *((_QWORD *)v2 + 7);
    v12 = *((_QWORD *)v2 + 8);
    v27 = v6;
    *(_QWORD *)&v29 = v4;
    v17 = v13 >> 40;
    v18 = HIWORD(v13);
    v19 = HIBYTE(v13);
    v20 = v12 >> 8;
    v21 = v12 >> 16;
    v22 = v12 >> 24;
    v23 = HIDWORD(v12);
    v24 = v12 >> 40;
    v25 = HIWORD(v12);
    v26 = HIBYTE(v12);
    sub_2498376B4();
    LOWORD(v30) = v13;
    BYTE2(v30) = BYTE2(v13);
    BYTE3(v30) = BYTE3(v13);
    v6 = v27;
    BYTE4(v30) = BYTE4(v13);
    v4 = v29;
    BYTE5(v30) = v17;
    BYTE6(v30) = v18;
    BYTE7(v30) = v19;
    BYTE8(v30) = v12;
    BYTE9(v30) = v20;
    BYTE10(v30) = v21;
    BYTE11(v30) = v22;
    BYTE12(v30) = v23;
    BYTE13(v30) = v24;
    BYTE14(v30) = v25;
    HIBYTE(v30) = v26;
    sub_24983769C();
  }
  if (*((_BYTE *)v2 + 88) == 1)
  {
    sub_2498376B4();
  }
  else
  {
    sub_2498376B4();
    sub_2498376A8();
  }
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  v14 = (int *)type metadata accessor for UniversalControlDisplay.Properties(0);
  sub_249773D10((uint64_t)v2 + v14[12], (uint64_t)v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v4) == 1)
  {
    sub_2498376B4();
  }
  else
  {
    v15 = v28;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v6, v9, v4);
    sub_2498376B4();
    sub_24974BBF4(&qword_2578808C8, (void (*)(uint64_t))MEMORY[0x24BEE63B8]);
    sub_249836CD0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v4);
  }
  if (*((_BYTE *)v2 + v14[13] + 4) == 1)
  {
    sub_2498376B4();
  }
  else
  {
    sub_2498376B4();
    sub_2498376CC();
  }
  if (*((_BYTE *)v2 + v14[14] + 4) == 1)
    return sub_2498376B4();
  sub_2498376B4();
  return sub_2498376CC();
}

uint64_t sub_2497D0E94()
{
  _BYTE v1[72];

  sub_249837690();
  sub_2497D0A6C((uint64_t)v1);
  return sub_2498376E4();
}

uint64_t sub_2497D0ED0()
{
  unint64_t v0;

  v0 = sub_249837384();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_2497D0F24()
{
  _BYTE v1[72];

  sub_249837690();
  sub_2497D0A6C((uint64_t)v1);
  return sub_2498376E4();
}

void sub_2497D0F5C()
{
  sub_2497A065C();
}

void sub_2497D0F68()
{
  unsigned __int8 *v0;

  sub_24975E2E0(*v0);
}

void sub_2497D0F70(uint64_t a1)
{
  char *v1;

  sub_2497715B4(a1, *v1);
}

void sub_2497D0F78(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_2497A0D58(a1, *v1);
}

uint64_t sub_2497D0F80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2497D0ED0();
  *a1 = result;
  return result;
}

void sub_2497D0FAC(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_2497CEBD0(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_27();
}

uint64_t UniversalControlDisplay.Rectangle.x.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*UniversalControlDisplay.Rectangle.x.modify())(void)
{
  return nullsub_1;
}

uint64_t UniversalControlDisplay.Rectangle.y.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t UniversalControlDisplay.Rectangle.y.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*UniversalControlDisplay.Rectangle.y.modify())(void)
{
  return nullsub_1;
}

uint64_t UniversalControlDisplay.Rectangle.size.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t UniversalControlDisplay.Rectangle.size.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*UniversalControlDisplay.Rectangle.size.modify())(void)
{
  return nullsub_1;
}

UniversalControl::UniversalControlDisplay::Size __swiftcall UniversalControlDisplay.Size.init(width:height:)(Swift::Int width, Swift::Int height)
{
  Swift::Int v2;
  Swift::Int v3;
  UniversalControl::UniversalControlDisplay::Size result;

  v2 = width & ~(width >> 63);
  v3 = height & ~(height >> 63);
  result.height = v3;
  result.width = v2;
  return result;
}

void UniversalControlDisplay.Rectangle.hash(into:)()
{
  OUTLINED_FUNCTION_56_3();
  sub_2498376A8();
  OUTLINED_FUNCTION_66_4();
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_81();
}

BOOL static UniversalControlDisplay.Rectangle.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _BOOL4 v9;

  v9 = a3 == a7 && a4 == a8;
  return a1 == a5 && a2 == a6 && v9;
}

BOOL static UniversalControlDisplay.Size.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

uint64_t UniversalControlDisplay.Rectangle.hashValue.getter()
{
  OUTLINED_FUNCTION_3_4();
  sub_2498376A8();
  sub_2498376A8();
  OUTLINED_FUNCTION_66_4();
  OUTLINED_FUNCTION_31_7();
  return OUTLINED_FUNCTION_33();
}

uint64_t sub_2497D1110()
{
  return UniversalControlDisplay.Rectangle.hashValue.getter();
}

void sub_2497D111C()
{
  UniversalControlDisplay.Rectangle.hash(into:)();
}

uint64_t sub_2497D1128()
{
  sub_249837690();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  return sub_2498376E4();
}

BOOL sub_2497D11A0(uint64_t *a1, uint64_t *a2)
{
  return static UniversalControlDisplay.Rectangle.== infix(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t UniversalControlDisplay.Size.width.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*UniversalControlDisplay.Size.width.modify())(void)
{
  return nullsub_1;
}

uint64_t UniversalControlDisplay.Size.height.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t UniversalControlDisplay.Size.height.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*UniversalControlDisplay.Size.height.modify())(void)
{
  return nullsub_1;
}

void UniversalControlDisplay.Size.hash(into:)()
{
  OUTLINED_FUNCTION_56_3();
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_27();
}

uint64_t UniversalControlDisplay.Size.hashValue.getter()
{
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_66_4();
  OUTLINED_FUNCTION_31_7();
  return OUTLINED_FUNCTION_33();
}

uint64_t sub_2497D1260()
{
  return UniversalControlDisplay.Size.hashValue.getter();
}

void sub_2497D1268()
{
  UniversalControlDisplay.Size.hash(into:)();
}

uint64_t sub_2497D1270()
{
  sub_249837690();
  sub_2498376A8();
  sub_2498376A8();
  return sub_2498376E4();
}

BOOL sub_2497D12C4(uint64_t *a1, uint64_t *a2)
{
  return static UniversalControlDisplay.Size.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

void static UniversalControlDisplay.Orientation.up.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void static UniversalControlDisplay.Orientation.left.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void static UniversalControlDisplay.Orientation.down.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void static UniversalControlDisplay.Orientation.right.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void UniversalControlDisplay.Orientation.hash(into:)()
{
  sub_2498376A8();
  OUTLINED_FUNCTION_27();
}

BOOL static UniversalControlDisplay.Orientation.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2497D1330()
{
  return 1;
}

uint64_t sub_2497D1338()
{
  return sub_2498376A8();
}

uint64_t sub_2497D135C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x73656572676564 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2498375C4();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2497D13E0()
{
  sub_249837690();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t sub_2497D1420()
{
  return 0x73656572676564;
}

uint64_t sub_2497D1444()
{
  sub_249837690();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t sub_2497D1484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2497D135C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2497D14AC()
{
  return OUTLINED_FUNCTION_66_1();
}

uint64_t sub_2497D14C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2497D1330();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2497D14EC()
{
  sub_2497D3C14();
  return sub_249837750();
}

uint64_t sub_2497D1514()
{
  sub_2497D3C14();
  return sub_24983775C();
}

void UniversalControlDisplay.Orientation.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_48_4();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881A28);
  OUTLINED_FUNCTION_45_4();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_40_2();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2497D3C14();
  sub_249837744();
  sub_2498374EC();
  OUTLINED_FUNCTION_32_6(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  OUTLINED_FUNCTION_10_6();
}

void UniversalControlDisplay.Orientation.hashValue.getter()
{
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_31_7();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void UniversalControlDisplay.Orientation.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_48_4();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881A38);
  OUTLINED_FUNCTION_45_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_40_2();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2497D3C14();
  sub_249837720();
  if (!v0)
  {
    v7 = sub_24983742C();
    OUTLINED_FUNCTION_32_6(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *v5 = v7;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v3);
  OUTLINED_FUNCTION_10_6();
}

void sub_2497D16DC()
{
  UniversalControlDisplay.Orientation.init(from:)();
}

void sub_2497D16F0()
{
  UniversalControlDisplay.Orientation.encode(to:)();
}

uint64_t sub_2497D170C()
{
  sub_249837690();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t UniversalControlDisplay.__allocating_init(id:displayName:mirrorPrimary:orientation:physicalSize:pixelSize:screenRect:typeIdentifier:vendorID:productID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, unint64_t a10, unint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_15_7();
  v16 = v15;
  v18 = v17;
  v19 = swift_allocObject();
  v21 = a10 | ((HIDWORD(a10) & 1) << 32);
  v22 = a11 | ((HIDWORD(a11) & 1) << 32);
  UniversalControlDisplay.init(id:displayName:mirrorPrimary:orientation:physicalSize:pixelSize:screenRect:typeIdentifier:vendorID:productID:)(v18, v16, a3, a4, a5, a6, a7, a8, a9, v21, SBYTE4(v21), v22, SBYTE4(v22));
  return v19;
}

uint64_t UniversalControlDisplay.init(id:displayName:mirrorPrimary:orientation:physicalSize:pixelSize:screenRect:typeIdentifier:vendorID:productID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, int a10, char a11, int a12, char a13)
{
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  UniversalControl::UniversalControlDisplay::Size v37;
  UniversalControl::UniversalControlDisplay::Size v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  int *v48;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[2];
  char v56;
  UniversalControl::UniversalControlDisplay::Rectangle v57;
  __C::CGRect v58;

  OUTLINED_FUNCTION_15_7();
  v26 = v25;
  v28 = v27;
  v50 = v29;
  sub_2497D3C50(v30, (uint64_t)&v52, &qword_257880108);
  v31 = v53;
  v32 = v54;
  v48 = (int *)type metadata accessor for UniversalControlDisplay.Properties(0);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_126();
  v36 = v35 - v34;
  v47 = *a8;
  v46 = *((_BYTE *)a8 + 8);
  sub_2497D3C50(a7, (uint64_t)v55, &qword_257880108);
  if ((v56 & 1) != 0 || static UniversalControlUUID.compare(lhs:rhs:)(v28, v26, v55[0], v55[1]))
  {
    v43 = 0;
    v44 = 0;
    v45 = 1;
  }
  else
  {
    v45 = 0;
    v43 = v31;
    v44 = v32;
  }
  v37 = UniversalControlDisplay.Size.init(_:)((CGSize)__PAIR128__(v19, v20));
  v38 = UniversalControlDisplay.Size.init(_:)((CGSize)__PAIR128__(v17, v18));
  v58.origin.x = v16;
  v58.origin.y = v15;
  v58.size.width = v14;
  v58.size.height = v13;
  v57 = UniversalControlDisplay.Rectangle.init(_:)(v58);
  *(_QWORD *)v36 = v28;
  *(_QWORD *)(v36 + 8) = v26;
  *(_QWORD *)(v36 + 16) = a3;
  *(_QWORD *)(v36 + 24) = a4;
  v39 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v36 + 48) = a6;
  *(_QWORD *)(v36 + 56) = v43;
  *(_QWORD *)(v36 + 64) = v44;
  *(_BYTE *)(v36 + 72) = v45;
  *(_QWORD *)(v36 + 80) = v47;
  *(_BYTE *)(v36 + 88) = v46;
  *(UniversalControl::UniversalControlDisplay::Size *)(v36 + 96) = v37;
  *(UniversalControl::UniversalControlDisplay::Size *)(v36 + 112) = v38;
  *(UniversalControl::UniversalControlDisplay::Rectangle *)(v36 + 128) = v57;
  v57.y = v36 + v48[12];
  *(_QWORD *)(v36 + 32) = v39;
  *(_QWORD *)(v36 + 40) = v50;
  sub_2497D3C50(a9, v57.y, &qword_257880850);
  v40 = v36 + v48[13];
  *(_DWORD *)v40 = a10;
  *(_BYTE *)(v40 + 4) = a11 & 1;
  v41 = v36 + v48[14];
  *(_DWORD *)v41 = a12;
  *(_BYTE *)(v41 + 4) = a13 & 1;
  sub_2497D3C90(v36, v51 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
  return v51;
}

uint64_t sub_2497D1D6C()
{
  sub_2497D3CD4();
  return sub_249837750();
}

uint64_t sub_2497D1D94()
{
  sub_2497D3CD4();
  return sub_24983775C();
}

uint64_t sub_2497D1DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE v8[40];
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = a3;
  v11 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881A40);
  if ((sub_249837468() & 1) == 0)
    return 0;
  sub_249837390();
  if (!v3)
  {
    v4 = v10;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v5 = sub_24983754C();
    if ((v6 & 1) != 0 || v5 != 4)
    {
      sub_24977AEF8((uint64_t)v9, (uint64_t)v8);
      sub_2498371BC();
      swift_allocError();
      sub_249837198();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    }
    else
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      v4 = sub_249837558();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_249837558();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_249837558();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_249837558();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    }
  }
  return v4;
}

uint64_t sub_2497D1FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _BYTE v9[40];
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a2;
  v13 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881A40);
  if ((sub_249837468() & 1) == 0)
    return 0;
  sub_249837390();
  if (!v3)
  {
    a1 = (uint64_t)__swift_project_boxed_opaque_existential_1(v10, v11);
    v5 = sub_24983754C();
    if ((v6 & 1) != 0 || v5 != 2)
    {
      sub_24977AEF8((uint64_t)v10, (uint64_t)v9);
      sub_2498371BC();
      swift_allocError();
      sub_249837198();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
    }
    else
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
      v7 = sub_249837558();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
      sub_249837558();
      a1 = v7 & ~(v7 >> 63);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
    }
  }
  return a1;
}

uint64_t UniversalControlDisplay.__allocating_init(from:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  UniversalControlDisplay.init(from:)();
  return v0;
}

uint64_t UniversalControlDisplay.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  OUTLINED_FUNCTION_48_4();
  v14 = v0;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_65_1();
  v13 = sub_249836A84();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_40_2();
  v6 = type metadata accessor for UniversalControlDisplay.Properties(0);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_44_4();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881A40);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_126();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_2497D3CD4();
  sub_249837720();
  if (!v1)
  {
    OUTLINED_FUNCTION_59_2();
    sub_24977266C();
    OUTLINED_FUNCTION_54_3();
    sub_2497726A8();
    OUTLINED_FUNCTION_68_3();
    OUTLINED_FUNCTION_54_3();
    v10 = v6;
    __swift_storeEnumTagSinglePayload(v2 + *(int *)(v6 + 48), 1, 1, v13);
    *(_OWORD *)v2 = v15;
    *(_OWORD *)(v2 + 16) = v15;
    *(_QWORD *)(v2 + 32) = MEMORY[0x24BEE4B08];
    *(_OWORD *)(v2 + 40) = 0u;
    *(_OWORD *)(v2 + 56) = 0u;
    *(_BYTE *)(v2 + 72) = 1;
    *(_QWORD *)(v2 + 80) = 0;
    *(_BYTE *)(v2 + 88) = 1;
    *(_OWORD *)(v2 + 96) = 0u;
    *(_OWORD *)(v2 + 112) = 0u;
    *(_OWORD *)(v2 + 128) = 0u;
    *(_OWORD *)(v2 + 144) = 0u;
    v11 = v2 + *(int *)(v6 + 52);
    *(_DWORD *)v11 = 0;
    *(_BYTE *)(v11 + 4) = 1;
    v12 = v2 + *(int *)(v10 + 56);
    *(_DWORD *)v12 = 0;
    *(_BYTE *)(v12 + 4) = 1;
    __asm { BR              X9; loc_2497D2470 }
  }
  type metadata accessor for UniversalControlDisplay(0);
  swift_deallocPartialClassInstance();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v4);
  return v14;
}

uint64_t sub_2497D2864(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a6;
  v11 = a7;
  if (result || a2 || a3 || a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257881A60);
    sub_249837474();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
    sub_249837588();
    if (!v7)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
      sub_249837588();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
      sub_249837588();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
      sub_249837588();
    }
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  }
  return result;
}

uint64_t sub_2497D29AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _BYTE v6[24];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a4;
  v9 = a5;
  if (result | a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257881A60);
    sub_249837474();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_249837588();
    if (!v5)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
      sub_249837588();
    }
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  return result;
}

void sub_2497D2A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_48_4();
  v32 = v0;
  v6 = v5;
  v7 = sub_249836A84();
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_65_1();
  v34 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_44_4();
  v10 = type metadata accessor for UniversalControlDisplay.Properties(0);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_126();
  v14 = v13 - v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881A60);
  OUTLINED_FUNCTION_45_4();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_40_2();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_2497D3CD4();
  sub_249837744();
  v17 = v32 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  swift_beginAccess();
  sub_2497D3D9C(v17, v14);
  OUTLINED_FUNCTION_59_2();
  sub_2497726E4();
  sub_2498374F8();
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v15);
    goto LABEL_4;
  }
  v35 = v3;
  sub_249772720();
  OUTLINED_FUNCTION_33_7();
  v29 = v14;
  v18 = *(_QWORD *)(v14 + 32);
  v19 = 1 << *(_BYTE *)(v18 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & *(_QWORD *)(v18 + 56);
  v33 = (unint64_t)(v19 + 63) >> 6;
  swift_bridgeObjectRetain();
  v22 = v35;
  if (v21)
  {
    v23 = __clz(__rbit64(v21));
    goto LABEL_19;
  }
  v14 = 1;
  if (v33 <= 1)
  {
    v14 = v29;
    v25 = v34;
    goto LABEL_26;
  }
  v24 = *(_QWORD *)(v18 + 64);
  v25 = v34;
  if (v24)
  {
LABEL_18:
    v23 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_19:
    __asm { BR              X10 }
  }
  v26 = 2;
  if (v33 > 2)
  {
    v24 = *(_QWORD *)(v18 + 72);
    if (v24)
      goto LABEL_17;
    v26 = 3;
    if (v33 > 3)
    {
      v24 = *(_QWORD *)(v18 + 80);
      if (!v24)
      {
        v26 = 4;
        if (v33 > 4)
        {
          v24 = *(_QWORD *)(v18 + 88);
          if (v24)
            goto LABEL_17;
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              break;
            if (v14 >= v33)
              goto LABEL_25;
            v24 = *(_QWORD *)(v18 + 56 + 8 * v14);
            ++v26;
            if (v24)
              goto LABEL_18;
          }
          __break(1u);
          goto LABEL_42;
        }
        goto LABEL_25;
      }
LABEL_17:
      v14 = v26;
      goto LABEL_18;
    }
  }
LABEL_25:
  v14 = v29;
LABEL_26:
  swift_release();
  v18 = v4;
  if (*(_QWORD *)(v14 + 48))
  {
    OUTLINED_FUNCTION_61_3();
    OUTLINED_FUNCTION_47_4();
    v25 = v34;
    v22 = v35;
  }
  if ((*(_BYTE *)(v14 + 72) & 1) == 0)
  {
    OUTLINED_FUNCTION_24_8();
    OUTLINED_FUNCTION_33_7();
    v25 = v34;
    v22 = v35;
  }
  if ((*(_BYTE *)(v14 + 88) & 1) == 0)
  {
    OUTLINED_FUNCTION_30_4();
    sub_2497D46AC();
    OUTLINED_FUNCTION_33_7();
    v25 = v34;
    v22 = v35;
  }
  sub_2497D29AC(*(_QWORD *)(v14 + 96), *(_QWORD *)(v14 + 104), v2, 1702521203, 0xE400000000000000);
  sub_2497D29AC(*(_QWORD *)(v14 + 112), *(_QWORD *)(v14 + 120), v2, 0x736C65786970, 0xE600000000000000);
  sub_2497D2864(*(_QWORD *)(v14 + 128), *(_QWORD *)(v14 + 136), *(_QWORD *)(v14 + 144), *(_QWORD *)(v14 + 152), v2, 1952671090, 0xE400000000000000);
  sub_249773D10(v17 + *(int *)(v10 + 48), v22);
  if (!__swift_getEnumTagSinglePayload(v22, 1, v31))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v25, v22, v31);
    sub_2497D5E68(v22, &qword_257880850);
    sub_249836A30();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v25, v31);
    OUTLINED_FUNCTION_47_4();
LABEL_42:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  sub_2497D5E68(v22, &qword_257880850);
LABEL_36:
  v28 = v10;
  if ((*(_BYTE *)(v14 + *(int *)(v10 + 52) + 4) & 1) == 0)
  {
    OUTLINED_FUNCTION_42_2();
    v28 = v10;
  }
  if (*(_BYTE *)(v14 + *(int *)(v28 + 56) + 4) != 1)
    OUTLINED_FUNCTION_42_2();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v15);
LABEL_4:
  sub_2497D3D24(v14);
  OUTLINED_FUNCTION_10_6();
}

uint64_t UniversalControlDisplay.deinit()
{
  uint64_t v0;

  sub_2497D3D24(v0 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
  return v0;
}

uint64_t UniversalControlDisplay.__deallocating_deinit()
{
  uint64_t v0;

  sub_2497D3D24(v0 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
  return swift_deallocClassInstance();
}

uint64_t sub_2497D31EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = UniversalControlDisplay.__allocating_init(from:)();
  if (!v1)
    *a1 = result;
  return result;
}

void sub_2497D3214()
{
  sub_2497D2A7C();
}

uint64_t sub_2497D3234@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  result = sub_2497CEF50();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 9) = v3;
  *(_BYTE *)(a1 + 10) = v4;
  *(_BYTE *)(a1 + 11) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  *(_BYTE *)(a1 + 13) = v7;
  *(_BYTE *)(a1 + 14) = v8;
  *(_BYTE *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 15) = v10;
  *(_BYTE *)(a1 + 17) = v11;
  *(_BYTE *)(a1 + 18) = v12;
  *(_BYTE *)(a1 + 19) = v13;
  *(_BYTE *)(a1 + 20) = v14;
  *(_BYTE *)(a1 + 21) = v15;
  *(_BYTE *)(a1 + 22) = v16;
  *(_BYTE *)(a1 + 16) = v17;
  *(_BYTE *)(a1 + 23) = v18;
  *(_BYTE *)(a1 + 25) = v19;
  *(_BYTE *)(a1 + 26) = v20;
  *(_BYTE *)(a1 + 27) = v21;
  *(_BYTE *)(a1 + 28) = v22;
  *(_BYTE *)(a1 + 29) = v23;
  *(_BYTE *)(a1 + 30) = v24;
  *(_BYTE *)(a1 + 24) = v25;
  *(_BYTE *)(a1 + 31) = v26;
  return result;
}

void sub_2497D3348(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AB0918;
}

uint64_t UniversalControlDisplay.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v2 = sub_249836A84();
  v16 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_126();
  v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_40_2();
  v7 = sub_249837768();
  v9 = v8;
  v18 = 0x27204449202CLL;
  v19 = 0xE600000000000000;
  v10 = (unint64_t *)(v0 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
  OUTLINED_FUNCTION_44_0();
  UniversalControlDisplayID.description.getter(*v10, v10[1], v10[2], v10[3]);
  sub_249836DB4();
  OUTLINED_FUNCTION_72_3();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_57_3();
  sub_249836DB4();
  OUTLINED_FUNCTION_89();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_78_2(1833836588);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_72_3();
  OUTLINED_FUNCTION_28_5();
  v18 = v7;
  v19 = v9;
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_72_3();
  OUTLINED_FUNCTION_78_2(1682776108);
  v11 = type metadata accessor for UniversalControlDisplay.Properties(0);
  sub_249773D10((uint64_t)v10 + *(int *)(v11 + 48), v1);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2))
  {
    sub_2497D5E68(v1, &qword_257880850);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v5, v1, v2);
    sub_2497D5E68(v1, &qword_257880850);
    sub_249836A30();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v5, v2);
  }
  sub_249836DB4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_57_3();
  OUTLINED_FUNCTION_51_4();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_78();
  sub_249837168();
  swift_bridgeObjectRelease();
  v20.origin.x = OUTLINED_FUNCTION_43_5();
  CGRectGetMinX(v20);
  sub_249836F1C();
  OUTLINED_FUNCTION_34_7();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_28_5();
  v21.origin.x = OUTLINED_FUNCTION_43_5();
  CGRectGetMinY(v21);
  sub_249836F1C();
  OUTLINED_FUNCTION_34_7();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_28_5();
  v22.origin.x = OUTLINED_FUNCTION_43_5();
  CGRectGetMaxX(v22);
  sub_249836F1C();
  OUTLINED_FUNCTION_34_7();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_28_5();
  v23.origin.x = OUTLINED_FUNCTION_43_5();
  CGRectGetMaxY(v23);
  sub_249836F1C();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_51_4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_78();
  v18 = 0x3C204C46202CLL;
  v19 = 0xE600000000000000;
  if (*(_QWORD *)(v10[4] + 16))
  {
    v17 = MEMORY[0x24BEE4AF8];
    v15 = swift_bridgeObjectRetain();
    sub_24974DDF0();
    v12 = sub_2497CC868(v15);
    if (v12 < 0 || v12 >= 1 << *(_BYTE *)(v15 + 32))
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(v15 + 56 + (((unint64_t)v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
    {
      if (*(_DWORD *)(v15 + 36) == v13)
        __asm { BR              X9 }
LABEL_13:
      __break(1u);
      swift_release();
      __break(1u);
      JUMPOUT(0x2497D3928);
    }
    __break(1u);
    goto LABEL_13;
  }
  v17 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_2497CEC78(&v17);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FEB8);
  sub_24974B98C(&qword_25787FEC0, &qword_25787FEB8);
  sub_249836CDC();
  swift_release();
  OUTLINED_FUNCTION_51_4();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_31_3();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_2497D3944()
{
  return UniversalControlDisplay.description.getter();
}

uint64_t sub_2497D3968()
{
  return UniversalControlDisplay.debugDescription.getter();
}

BOOL static UniversalControlDisplay.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  _BYTE v13[24];

  type metadata accessor for UniversalControlDisplay.Properties(0);
  OUTLINED_FUNCTION_3_9();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = (uint64_t *)&v13[-v6];
  v8 = a1 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  sub_2497D3D9C(v8, (uint64_t)v7);
  OUTLINED_FUNCTION_44_0();
  v9 = OUTLINED_FUNCTION_31_3();
  sub_2497D3D9C(v9, v10);
  v11 = sub_2497D05A0(v7, (uint64_t)v5);
  sub_2497D3D24((uint64_t)v5);
  sub_2497D3D24((uint64_t)v7);
  return v11;
}

BOOL sub_2497D3A74(uint64_t *a1)
{
  return static UniversalControlDisplay.== infix(_:_:)(*a1);
}

void UniversalControlDisplay.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for UniversalControlDisplay.Properties(0);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_126();
  v6 = v5 - v4;
  v7 = v1 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
  OUTLINED_FUNCTION_44_0();
  sub_2497D3D9C(v7, v6);
  sub_2497D0A6C(a1);
  sub_2497D3D24(v6);
  OUTLINED_FUNCTION_81();
}

void UniversalControlDisplay.hashValue.getter()
{
  _BYTE v0[72];

  OUTLINED_FUNCTION_3_4();
  UniversalControlDisplay.hash(into:)((uint64_t)v0);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_2497D3B40()
{
  UniversalControlDisplay.hashValue.getter();
}

void sub_2497D3B60(uint64_t a1)
{
  UniversalControlDisplay.hash(into:)(a1);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497D3B7C()
{
  _BYTE v1[72];

  sub_249837690();
  UniversalControlDisplay.hash(into:)((uint64_t)v1);
  return sub_2498376E4();
}

uint64_t type metadata accessor for UniversalControlDisplay.Properties(uint64_t a1)
{
  return sub_24976B000(a1, (uint64_t *)&unk_257881D80);
}

uint64_t sub_2497D3BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_2497D3C14()
{
  unint64_t result;

  result = qword_257881A30;
  if (!qword_257881A30)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BD48, &type metadata for UniversalControlDisplay.Orientation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881A30);
  }
  return result;
}

void sub_2497D3C50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497D3C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UniversalControlDisplay.Properties(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2497D3CD4()
{
  unint64_t result;

  result = qword_257881A48;
  if (!qword_257881A48)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BCF8, &type metadata for UniversalControlDisplay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881A48);
  }
  return result;
}

uint64_t type metadata accessor for UniversalControlDisplay(uint64_t a1)
{
  return sub_24976B000(a1, qword_257881AB8);
}

uint64_t sub_2497D3D24(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UniversalControlDisplay.Properties(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2497D3D60()
{
  unint64_t result;

  result = qword_257881A50;
  if (!qword_257881A50)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDisplay.Orientation, &type metadata for UniversalControlDisplay.Orientation);
    atomic_store(result, (unint64_t *)&qword_257881A50);
  }
  return result;
}

uint64_t sub_2497D3D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UniversalControlDisplay.Properties(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_2497D3DE0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  BOOL v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;

  v3 = a1[1];
  v4 = sub_249837534();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_2497D4444(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  sub_24974CFAC(v3 / 2);
  v98 = v6;
  v99 = v3;
  v100 = v7;
  v96 = a1;
  if (v3 <= 0)
  {
    v101 = (char *)MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_110:
    if (v33 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(_QWORD *)(v98 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v88 = *v96;
    while (1)
    {
      v89 = v33 - 2;
      if (v33 < 2)
        break;
      if (!v88)
        goto LABEL_153;
      v90 = v101;
      v91 = *(_QWORD *)&v101[16 * v89 + 32];
      v92 = *(_QWORD *)&v101[16 * v33 + 24];
      sub_2497D4508((char *)(v88 + 16 * v91), (char *)(v88 + 16 * *(_QWORD *)&v101[16 * v33 + 16]), v88 + 16 * v92, v100);
      if (v1)
        goto LABEL_106;
      if (v92 < v91)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v90 = sub_24975DBE8();
      if (v89 >= *((_QWORD *)v90 + 2))
        goto LABEL_140;
      v93 = &v90[16 * v89 + 32];
      *(_QWORD *)v93 = v91;
      *((_QWORD *)v93 + 1) = v92;
      v94 = *((_QWORD *)v90 + 2);
      if (v33 > v94)
        goto LABEL_141;
      memmove(&v90[16 * v33 + 16], &v90[16 * v33 + 32], 16 * (v94 - v33));
      v101 = v90;
      *((_QWORD *)v90 + 2) = v94 - 1;
      v33 = v94 - 1;
      v3 = v99;
      if (v94 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v97 = v5;
  v8 = 0;
  v9 = *a1;
  v95 = *a1 + 8;
  v101 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v10 = v8++;
    if (v8 >= v3)
      goto LABEL_32;
    v11 = (uint64_t *)(v9 + 16 * v8);
    v12 = *v11;
    v13 = v11[1];
    v14 = (_QWORD *)(v9 + 16 * v10);
    if (v12 == *v14 && v13 == v14[1])
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v3)
        goto LABEL_31;
      v16 = 0;
LABEL_13:
      v18 = (_QWORD *)(v95 + 16 * v17);
      do
      {
        v19 = (_QWORD *)(v9 + 16 * v8);
        if (*(v18 - 1) == *v19 && *v18 == v19[1])
        {
          if ((v16 & 1) != 0)
            goto LABEL_24;
        }
        else if (((v16 ^ sub_2498375C4()) & 1) != 0)
        {
          goto LABEL_23;
        }
        v18 += 2;
        v21 = v17 + 1;
        v8 = v17;
        v17 = v21;
      }
      while (v21 < v3);
      v17 = v21;
      goto LABEL_23;
    }
    v16 = sub_2498375C4();
    v17 = v10 + 2;
    if (v10 + 2 < v3)
      goto LABEL_13;
LABEL_23:
    v8 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_32;
LABEL_24:
    if (v17 < v10)
      goto LABEL_148;
    if (v10 < v17)
    {
      v22 = 16 * v17;
      v23 = 16 * v10;
      v24 = v17;
      v25 = v10;
      do
      {
        if (v25 != --v24)
        {
          if (!v9)
            goto LABEL_152;
          v26 = v9 + v22;
          v27 = *(_QWORD *)(v9 + v23);
          v28 = *(_QWORD *)(v9 + v23 + 8);
          *(_OWORD *)(v9 + v23) = *(_OWORD *)(v9 + v22 - 16);
          *(_QWORD *)(v26 - 16) = v27;
          *(_QWORD *)(v26 - 8) = v28;
        }
        ++v25;
        v22 -= 16;
        v23 += 16;
      }
      while (v25 < v24);
    }
LABEL_31:
    v8 = v17;
LABEL_32:
    if (v8 >= v3)
      goto LABEL_41;
    if (__OFSUB__(v8, v10))
      goto LABEL_143;
    if (v8 - v10 >= v97)
      goto LABEL_41;
    if (__OFADD__(v10, v97))
      goto LABEL_146;
    if (v10 + v97 >= v3)
      v29 = v3;
    else
      v29 = v10 + v97;
    if (v29 < v10)
      goto LABEL_147;
    if (v8 == v29)
    {
LABEL_41:
      v30 = v101;
    }
    else
    {
      v81 = (_QWORD *)(v9 + 16 * v8);
      v30 = v101;
      do
      {
        v82 = (uint64_t *)(v9 + 16 * v8);
        v83 = *v82;
        v84 = v82[1];
        v85 = v10;
        v86 = v81;
        do
        {
          v87 = v83 == *(v86 - 2) && v84 == *(v86 - 1);
          if (v87 || (sub_2498375C4() & 1) == 0)
            break;
          if (!v9)
            goto LABEL_150;
          v83 = *v86;
          v84 = v86[1];
          *(_OWORD *)v86 = *((_OWORD *)v86 - 1);
          *(v86 - 1) = v84;
          *(v86 - 2) = v83;
          v86 -= 2;
          ++v85;
        }
        while (v8 != v85);
        ++v8;
        v81 += 2;
      }
      while (v8 != v29);
      v8 = v29;
    }
    if (v8 < v10)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_24975DAF4(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
    v32 = *((_QWORD *)v30 + 2);
    v31 = *((_QWORD *)v30 + 3);
    v33 = v32 + 1;
    if (v32 >= v31 >> 1)
      v30 = sub_24975DAF4((char *)(v31 > 1), v32 + 1, 1, v30);
    *((_QWORD *)v30 + 2) = v33;
    v34 = v30 + 32;
    v35 = &v30[16 * v32 + 32];
    *(_QWORD *)v35 = v10;
    *((_QWORD *)v35 + 1) = v8;
    v101 = v30;
    if (v32)
      break;
    v33 = 1;
LABEL_90:
    v3 = v99;
    if (v8 >= v99)
      goto LABEL_110;
  }
  while (1)
  {
    v36 = v33 - 1;
    if (v33 >= 4)
    {
      v41 = &v34[16 * v33];
      v42 = *((_QWORD *)v41 - 8);
      v43 = *((_QWORD *)v41 - 7);
      v47 = __OFSUB__(v43, v42);
      v44 = v43 - v42;
      if (v47)
        goto LABEL_127;
      v46 = *((_QWORD *)v41 - 6);
      v45 = *((_QWORD *)v41 - 5);
      v47 = __OFSUB__(v45, v46);
      v39 = v45 - v46;
      v40 = v47;
      if (v47)
        goto LABEL_128;
      v48 = v33 - 2;
      v49 = &v34[16 * v33 - 32];
      v51 = *(_QWORD *)v49;
      v50 = *((_QWORD *)v49 + 1);
      v47 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v47)
        goto LABEL_129;
      v47 = __OFADD__(v39, v52);
      v53 = v39 + v52;
      if (v47)
        goto LABEL_131;
      if (v53 >= v44)
      {
        v71 = &v34[16 * v36];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v47 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v47)
          goto LABEL_137;
        v64 = v39 < v74;
        goto LABEL_79;
      }
    }
    else
    {
      if (v33 != 3)
      {
        v65 = *((_QWORD *)v30 + 4);
        v66 = *((_QWORD *)v30 + 5);
        v47 = __OFSUB__(v66, v65);
        v58 = v66 - v65;
        v59 = v47;
        goto LABEL_73;
      }
      v38 = *((_QWORD *)v30 + 4);
      v37 = *((_QWORD *)v30 + 5);
      v47 = __OFSUB__(v37, v38);
      v39 = v37 - v38;
      v40 = v47;
    }
    if ((v40 & 1) != 0)
      goto LABEL_130;
    v48 = v33 - 2;
    v54 = &v34[16 * v33 - 32];
    v56 = *(_QWORD *)v54;
    v55 = *((_QWORD *)v54 + 1);
    v57 = __OFSUB__(v55, v56);
    v58 = v55 - v56;
    v59 = v57;
    if (v57)
      goto LABEL_132;
    v60 = &v34[16 * v36];
    v62 = *(_QWORD *)v60;
    v61 = *((_QWORD *)v60 + 1);
    v47 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v47)
      goto LABEL_134;
    if (__OFADD__(v58, v63))
      goto LABEL_136;
    if (v58 + v63 >= v39)
    {
      v64 = v39 < v63;
LABEL_79:
      if (v64)
        v36 = v48;
      goto LABEL_81;
    }
LABEL_73:
    if ((v59 & 1) != 0)
      goto LABEL_133;
    v67 = &v34[16 * v36];
    v69 = *(_QWORD *)v67;
    v68 = *((_QWORD *)v67 + 1);
    v47 = __OFSUB__(v68, v69);
    v70 = v68 - v69;
    if (v47)
      goto LABEL_135;
    if (v70 < v58)
      goto LABEL_90;
LABEL_81:
    v75 = v36 - 1;
    if (v36 - 1 >= v33)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v9)
      goto LABEL_151;
    v76 = &v34[16 * v75];
    v77 = *(_QWORD *)v76;
    v78 = &v34[16 * v36];
    v79 = *((_QWORD *)v78 + 1);
    sub_2497D4508((char *)(v9 + 16 * *(_QWORD *)v76), (char *)(v9 + 16 * *(_QWORD *)v78), v9 + 16 * v79, v100);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_124;
    if (v36 > *((_QWORD *)v101 + 2))
      goto LABEL_125;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v34[16 * v75 + 8] = v79;
    v80 = *((_QWORD *)v101 + 2);
    if (v36 >= v80)
      goto LABEL_126;
    v30 = v101;
    v33 = v80 - 1;
    memmove(&v34[16 * v36], v78 + 16, 16 * (v80 - 1 - v36));
    *((_QWORD *)v101 + 2) = v80 - 1;
    if (v80 <= 2)
      goto LABEL_90;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v99 < -1)
    goto LABEL_145;
  *(_QWORD *)(v98 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_2497D4444(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1))
          break;
        result = sub_2498375C4();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        result = *v12;
        v10 = v12[1];
        *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_2497D4508(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_2497ABFE8(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_47;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = (char *)(v12 - 16);
      v21 = *(_QWORD *)(v12 - 16) == *((_QWORD *)v6 - 2) && *(_QWORD *)(v12 - 8) == *((_QWORD *)v6 - 1);
      if (v21 || (sub_2498375C4() & 1) == 0)
      {
        v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23)
          goto LABEL_43;
      }
      else
      {
        v22 = v19 != v6 || v18 >= v6;
        v20 = v6 - 16;
        v6 -= 16;
        if (!v22)
          goto LABEL_43;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_47;
    }
  }
  sub_2497ABFE8(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (sub_2498375C4() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 16;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 16;
    if (v14)
      goto LABEL_16;
LABEL_15:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_2497ABFE8(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

unint64_t sub_2497D46AC()
{
  unint64_t result;

  result = qword_257881A68;
  if (!qword_257881A68)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDisplay.Orientation, &type metadata for UniversalControlDisplay.Orientation);
    atomic_store(result, (unint64_t *)&qword_257881A68);
  }
  return result;
}

uint64_t sub_2497D46E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2498376E4();
  v3 = 1 << *(_BYTE *)(a2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a2 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
    goto LABEL_14;
  }
  v8 = 1;
  if (v6 > 1)
  {
    v9 = *(_QWORD *)(a2 + 64);
    if (v9)
    {
LABEL_13:
      v7 = __clz(__rbit64(v9)) + (v8 << 6);
LABEL_14:
      v11 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v7);
      sub_249837690();
      __asm { BR              X8 }
    }
    v10 = 2;
    if (v6 > 2)
    {
      v9 = *(_QWORD *)(a2 + 72);
      if (v9)
      {
        v8 = 2;
        goto LABEL_13;
      }
      while (1)
      {
        v8 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          __break(1u);
          JUMPOUT(0x2497D4908);
        }
        if (v8 >= v6)
          break;
        v9 = *(_QWORD *)(a2 + 56 + 8 * v8);
        ++v10;
        if (v9)
          goto LABEL_13;
      }
    }
  }
  swift_release();
  return sub_2498376A8();
}

unint64_t sub_2497D4928()
{
  unint64_t result;

  result = qword_257881A70;
  if (!qword_257881A70)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDisplay.Rectangle, &type metadata for UniversalControlDisplay.Rectangle);
    atomic_store(result, (unint64_t *)&qword_257881A70);
  }
  return result;
}

unint64_t sub_2497D4968()
{
  unint64_t result;

  result = qword_257881A78;
  if (!qword_257881A78)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDisplay.Size, &type metadata for UniversalControlDisplay.Size);
    atomic_store(result, (unint64_t *)&qword_257881A78);
  }
  return result;
}

unint64_t sub_2497D49A8()
{
  unint64_t result;

  result = qword_257881A80;
  if (!qword_257881A80)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDisplay.Orientation, &type metadata for UniversalControlDisplay.Orientation);
    atomic_store(result, (unint64_t *)&qword_257881A80);
  }
  return result;
}

void sub_2497D49E8()
{
  sub_24974BBF4(&qword_257881A88, (void (*)(uint64_t))type metadata accessor for UniversalControlDisplay);
}

void sub_2497D4A1C()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  *v0 = sub_2497CF284();
  v0[1] = v1;
  OUTLINED_FUNCTION_27();
}

void sub_2497D4A50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_7();
  sub_2497CF7AC();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_27();
}

void sub_2497D4A74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_7();
  sub_2497CF9A4();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_27();
}

void sub_2497D4AA0()
{
  sub_2497CFD14();
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497D4AC4(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2497D0090(a1, a2, a3, a4, (uint64_t (*)(unint64_t))sub_2497CFF98);
}

uint64_t sub_2497D4AE4(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2497D0090(a1, a2, a3, a4, (uint64_t (*)(unint64_t))sub_2497D0110);
}

void sub_2497D4B00()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_7();
  v0 = sub_2497D02DC();
  OUTLINED_FUNCTION_22_3(v0);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4B20(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_37_1(a1);
  sub_2497D02E4(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4B3C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_7();
  v0 = sub_2497D0340();
  OUTLINED_FUNCTION_22_3(v0);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4B5C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_37_1(a1);
  sub_2497D0348(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4B78()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_7();
  v0 = sub_2497D03A4();
  OUTLINED_FUNCTION_22_3(v0);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4B98(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_37_1(a1);
  sub_2497D03AC(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4BB4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_7();
  v0 = sub_2497D0408();
  OUTLINED_FUNCTION_22_3(v0);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4BD4(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_37_1(a1);
  sub_2497D0410(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4BF0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_7();
  v0 = sub_2497D046C();
  OUTLINED_FUNCTION_22_3(v0);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4C10(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_37_1(a1);
  sub_2497D0474(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4C2C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_7();
  v0 = sub_2497D04D0();
  OUTLINED_FUNCTION_22_3(v0);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4C4C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_37_1(a1);
  sub_2497D04D8(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4C68()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_7();
  v0 = sub_2497D0534();
  OUTLINED_FUNCTION_22_3(v0);
  OUTLINED_FUNCTION_27();
}

void sub_2497D4C88(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_37_1(a1);
  sub_2497D053C(v1);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497D4CA4()
{
  return type metadata accessor for UniversalControlDisplay(0);
}

uint64_t sub_2497D4CAC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UniversalControlDisplay.Properties(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for UniversalControlDisplay()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniversalControlDisplay.id.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of UniversalControlDisplay.id.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of UniversalControlDisplay.id.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of UniversalControlDisplay.displayName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of UniversalControlDisplay.displayName.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of UniversalControlDisplay.displayName.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of UniversalControlDisplay.mirrorPrimary.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of UniversalControlDisplay.mirrorPrimary.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[2];
  char v7;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(uint64_t (**)(_OWORD *))(*(_QWORD *)v1 + 168);
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of UniversalControlDisplay.mirrorPrimary.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of UniversalControlDisplay.orientation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of UniversalControlDisplay.orientation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of UniversalControlDisplay.orientation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of UniversalControlDisplay.physicalSize.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of UniversalControlDisplay.physicalSize.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of UniversalControlDisplay.physicalSize.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of UniversalControlDisplay.pixelSize.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of UniversalControlDisplay.pixelSize.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of UniversalControlDisplay.pixelSize.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of UniversalControlDisplay.screenRect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of UniversalControlDisplay.screenRect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of UniversalControlDisplay.screenRect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of UniversalControlDisplay.typeIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of UniversalControlDisplay.typeIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of UniversalControlDisplay.typeIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of UniversalControlDisplay.vendorID.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t dispatch thunk of UniversalControlDisplay.vendorID.setter(unint64_t a1)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_14_7(a1, *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 312));
}

uint64_t dispatch thunk of UniversalControlDisplay.vendorID.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of UniversalControlDisplay.productID.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
  return v1 | ((HIDWORD(v1) & 1) << 32);
}

uint64_t dispatch thunk of UniversalControlDisplay.productID.setter(unint64_t a1)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_14_7(a1, *(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 336));
}

uint64_t dispatch thunk of UniversalControlDisplay.productID.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isAirPlay.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isAirPlay.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isAirPlay.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isBuiltIn.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isBuiltIn.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isBuiltIn.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isMain.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isMain.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isMain.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isMirror.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isMirror.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isMirror.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isProjector.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isProjector.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isProjector.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isSidecar.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isSidecar.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isSidecar.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isTV.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isTV.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of UniversalControlDisplay.isTV.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of UniversalControlDisplay.__allocating_init(id:displayName:mirrorPrimary:orientation:physicalSize:pixelSize:screenRect:typeIdentifier:vendorID:productID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *);
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v8 = *(_BYTE *)(a7 + 32);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *))(v7 + 560);
  v10 = *(_OWORD *)(a7 + 16);
  v12[0] = *(_OWORD *)a7;
  v12[1] = v10;
  v13 = v8;
  return v9(a1, a2, a3, a4, a5, a6, v12);
}

uint64_t dispatch thunk of UniversalControlDisplay.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 568))();
}

uint64_t dispatch thunk of UniversalControlDisplay.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

void type metadata accessor for UniversalControlDisplay.Rectangle()
{
  OUTLINED_FUNCTION_29_4();
}

void type metadata accessor for UniversalControlDisplay.Size()
{
  OUTLINED_FUNCTION_29_4();
}

void type metadata accessor for UniversalControlDisplay.Orientation()
{
  OUTLINED_FUNCTION_29_4();
}

ValueMetadata *type metadata accessor for UniversalControlDisplay.CodingKeys()
{
  return &type metadata for UniversalControlDisplay.CodingKeys;
}

uint64_t getEnumTagSinglePayload for UniversalControlDisplay.Orientation.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for UniversalControlDisplay.Orientation.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2497D515C + 4 * byte_24983B6DE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2497D517C + 4 * byte_24983B6E3[v4]))();
}

_BYTE *sub_2497D515C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2497D517C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2497D5184(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2497D518C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2497D5194(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2497D519C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t PlatformIsBeta()
{
  return 0;
}

ValueMetadata *type metadata accessor for UniversalControlDisplay.Orientation.CodingKeys()
{
  return &type metadata for UniversalControlDisplay.Orientation.CodingKeys;
}

_QWORD *sub_2497D51C0(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 80) = a2[10];
    v9 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 112) = v9;
    v10 = *((_OWORD *)a2 + 9);
    v11 = a3[12];
    v12 = (void *)(a1 + v11);
    v13 = (char *)a2 + v11;
    *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 144) = v10;
    v14 = sub_249836A84();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
    }
    v17 = a3[13];
    v18 = a3[14];
    v19 = (char *)v4 + v17;
    v20 = (uint64_t)a2 + v17;
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v19[4] = *(_BYTE *)(v20 + 4);
    v21 = (char *)v4 + v18;
    v22 = (uint64_t)a2 + v18;
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = *(_BYTE *)(v22 + 4);
  }
  return v4;
}

uint64_t sub_2497D5334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_249836A84();
  result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

uint64_t sub_2497D53A8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = *(_OWORD *)(a2 + 144);
  v10 = a3[12];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  v13 = sub_249836A84();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  v15 = a3[13];
  v16 = a3[14];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a1 + v16;
  v20 = a2 + v16;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  return a1;
}

uint64_t sub_2497D54F0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  int v23;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_BYTE *)(a1 + 6) = *(_BYTE *)(a2 + 6);
  *(_BYTE *)(a1 + 7) = *(_BYTE *)(a2 + 7);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 21) = *(_BYTE *)(a2 + 21);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_BYTE *)(a1 + 23) = *(_BYTE *)(a2 + 23);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v8 = a3[12];
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_249836A84();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (!EnumTagSinglePayload)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 24))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
LABEL_7:
  v16 = a3[13];
  v17 = a1 + v16;
  v18 = (int *)(a2 + v16);
  v19 = *v18;
  *(_BYTE *)(v17 + 4) = *((_BYTE *)v18 + 4);
  *(_DWORD *)v17 = v19;
  v20 = a3[14];
  v21 = a1 + v20;
  v22 = (int *)(a2 + v20);
  v23 = *v22;
  *(_BYTE *)(v21 + 4) = *((_BYTE *)v22 + 4);
  *(_DWORD *)v21 = v23;
  return a1;
}

uint64_t sub_2497D57C4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  v8 = *(_OWORD *)(a2 + 144);
  v9 = a3[12];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  v12 = sub_249836A84();
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  v14 = a3[13];
  v15 = a3[14];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  return a1;
}

uint64_t sub_2497D58F4(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  v9 = *(_OWORD *)(a2 + 144);
  v10 = a3[12];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  v13 = sub_249836A84();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (!EnumTagSinglePayload)
  {
    v16 = *(_QWORD *)(v13 - 8);
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
LABEL_7:
  v18 = a3[13];
  v19 = a3[14];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  v22 = a1 + v19;
  v23 = a2 + v19;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  return a1;
}

uint64_t sub_2497D5A84()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2497D5A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t sub_2497D5B08()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2497D5B14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 32) = (a2 - 1);
    OUTLINED_FUNCTION_81();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 48), a2, a2, v7);
  }
}

void sub_2497D5B7C()
{
  unint64_t v0;

  sub_2497D5C3C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2497D5C3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257881D90)
  {
    sub_249836A84();
    v0 = sub_2498370A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257881D90);
  }
}

void sub_2497D5C90()
{
  sub_24974BBF4(&qword_257881DE8, (void (*)(uint64_t))type metadata accessor for UniversalControlDisplay.Properties);
}

unint64_t sub_2497D5CC0()
{
  unint64_t result;

  result = qword_257881DF0;
  if (!qword_257881DF0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BBE0, &type metadata for UniversalControlDisplay.Orientation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881DF0);
  }
  return result;
}

unint64_t sub_2497D5D00()
{
  unint64_t result;

  result = qword_257881DF8;
  if (!qword_257881DF8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BC98, &type metadata for UniversalControlDisplay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881DF8);
  }
  return result;
}

void sub_2497D5D3C()
{
  sub_24974B98C(&qword_257881E00, &qword_257881E08);
}

unint64_t sub_2497D5D6C()
{
  unint64_t result;

  result = qword_257881E10;
  if (!qword_257881E10)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BC08, &type metadata for UniversalControlDisplay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881E10);
  }
  return result;
}

unint64_t sub_2497D5DAC()
{
  unint64_t result;

  result = qword_257881E18;
  if (!qword_257881E18)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BC30, &type metadata for UniversalControlDisplay.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881E18);
  }
  return result;
}

unint64_t sub_2497D5DEC()
{
  unint64_t result;

  result = qword_257881E20;
  if (!qword_257881E20)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BB50, &type metadata for UniversalControlDisplay.Orientation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881E20);
  }
  return result;
}

unint64_t sub_2497D5E2C()
{
  unint64_t result;

  result = qword_257881E28;
  if (!qword_257881E28)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BB78, &type metadata for UniversalControlDisplay.Orientation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881E28);
  }
  return result;
}

void sub_2497D5E68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497D5EA0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_2497D5F28(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2497D5F74 + 4 * byte_24983B6ED[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2497D5FA8 + 4 * byte_24983B6E8[v4]))();
}

uint64_t sub_2497D5FA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2497D5FB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2497D5FB8);
  return result;
}

uint64_t sub_2497D5FC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2497D5FCCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2497D5FD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2497D5FD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for UniversalControlDisplay.Attribute()
{
  OUTLINED_FUNCTION_29_4();
}

unint64_t sub_2497D5FF4()
{
  unint64_t result;

  result = qword_257881E40;
  if (!qword_257881E40)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BE1C, &unk_251AB3EF8);
    atomic_store(result, (unint64_t *)&qword_257881E40);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v1, v0);
}

void OUTLINED_FUNCTION_7_14(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_8_13@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_14_7(unint64_t a1, uint64_t (*a2)(uint64_t))
{
  return a2(a1 | ((HIDWORD(a1) & 1) << 32));
}

void OUTLINED_FUNCTION_17_8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;

  v5 = v2 + a2;
  *(_DWORD *)v5 = v3;
  *(_BYTE *)(v5 + 4) = v4;
  free(a1);
}

uint64_t OUTLINED_FUNCTION_18_9(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_21_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = a1;
  *(_QWORD *)(v2 - 120) = v1;
  return sub_2498373E4();
}

uint64_t OUTLINED_FUNCTION_22_8(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result & 1;
  return result;
}

void OUTLINED_FUNCTION_27_5(void *a1)
{
  free(a1);
}

_QWORD *OUTLINED_FUNCTION_28_7(_QWORD *result)
{
  uint64_t v1;

  *result = v1;
  return result;
}

void OUTLINED_FUNCTION_30_4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 128) = 0x6E6F697461746F72;
  *(_QWORD *)(v0 - 120) = 0xE800000000000000;
}

uint64_t OUTLINED_FUNCTION_31_7()
{
  return sub_2498376A8();
}

uint64_t OUTLINED_FUNCTION_32_6@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_33_7()
{
  return sub_2498374F8();
}

uint64_t OUTLINED_FUNCTION_34_7()
{
  return sub_249836DB4();
}

void *OUTLINED_FUNCTION_36_6()
{
  return malloc(0x48uLL);
}

void *OUTLINED_FUNCTION_37_5()
{
  return malloc(0x38uLL);
}

unint64_t OUTLINED_FUNCTION_38_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(unsigned int *)(v1 + a1) | ((unint64_t)*(unsigned __int8 *)(v1 + a1 + 4) << 32);
}

uint64_t OUTLINED_FUNCTION_39_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_249773D10(v2 + *(int *)(a1 + 48), v1);
}

uint64_t OUTLINED_FUNCTION_42_2()
{
  return sub_249837510();
}

double OUTLINED_FUNCTION_43_5()
{
  return sub_2497CFB08();
}

Swift::Int OUTLINED_FUNCTION_46_4(CGSize **a1)
{
  return UniversalControlDisplay.Size.init(_:)((*a1)[3]).width;
}

uint64_t OUTLINED_FUNCTION_47_4()
{
  return sub_2498374BC();
}

void OUTLINED_FUNCTION_50_3(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v1 + a1;
  *(_DWORD *)(v2 + 48) = *(_DWORD *)v3;
  *(_BYTE *)(v2 + 52) = *(_BYTE *)(v3 + 4);
}

uint64_t OUTLINED_FUNCTION_51_4()
{
  return sub_249836DB4();
}

uint64_t OUTLINED_FUNCTION_54_3()
{
  return sub_249837438();
}

uint64_t OUTLINED_FUNCTION_55_3()
{
  return sub_2498373D8();
}

uint64_t OUTLINED_FUNCTION_56_3()
{
  return sub_2498376A8();
}

uint64_t OUTLINED_FUNCTION_57_3()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_61_3()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 128) = 1701667182;
  *(_QWORD *)(v0 - 120) = 0xE400000000000000;
}

uint64_t OUTLINED_FUNCTION_63_4()
{
  uint64_t v0;

  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_64_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = v1;
  *(_QWORD *)(v2 - 88) = v0;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_65_3()
{
  uint64_t v0;
  uint64_t v1;

  sub_2497CF2D4(v1, v0);
}

uint64_t OUTLINED_FUNCTION_66_4()
{
  return sub_2498376A8();
}

uint64_t OUTLINED_FUNCTION_72_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_74_3()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_75_2()
{
  return sub_249836DB4();
}

void OUTLINED_FUNCTION_77_2(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + a1;
  *(_DWORD *)v3 = v1;
  *(_BYTE *)(v3 + 4) = BYTE4(v1) & 1;
}

void OUTLINED_FUNCTION_78_2(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1 & 0xFFFF0000FFFFFFFFLL | 0x272000000000;
  *(_QWORD *)(v1 - 88) = 0xE600000000000000;
}

uint64_t sub_2497D6394()
{
  OUTLINED_FUNCTION_19_10();
  sub_249759088(&qword_257881F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
  return sub_249836C10();
}

uint64_t sub_2497D649C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  char v9;
  _QWORD *v11;
  int64_t v12;

  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v11 = (_QWORD *)(a1 + 64);
    OUTLINED_FUNCTION_0_14();
    v12 = (unint64_t)(v3 + 63) >> 6;
    if ((v5 & v4) == 0)
    {
      if ((unint64_t)(v3 + 63) >> 6 <= 1)
        return 1;
      if (!v11[1])
      {
        if ((unint64_t)(v3 + 63) >> 6 <= 2)
          return 1;
        if (!v11[2])
        {
          if ((unint64_t)(v3 + 63) >> 6 <= 3)
            return 1;
          if (!v11[3])
          {
            v6 = 4;
            if (v12 > 4)
            {
              if (!v11[4])
              {
                while (1)
                {
                  v7 = v6 + 1;
                  if (__OFADD__(v6, 1))
                  {
                    __break(1u);
                    JUMPOUT(0x2497D6D58);
                  }
                  if (v7 >= v12)
                    return 1;
                  ++v6;
                  if (v11[v7])
                    goto LABEL_15;
                }
              }
              goto LABEL_15;
            }
            return 1;
          }
        }
      }
    }
LABEL_15:
    OUTLINED_FUNCTION_1_17();
    v8 = sub_2497F1F1C();
    if ((v9 & 1) != 0)
      __asm { BR              X8 }
    OUTLINED_FUNCTION_0_20();
  }
  return 0;
}

uint64_t sub_2497D6E0C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  unint64_t v21;
  char v22;
  CGRect v23;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = *(_QWORD *)(v3 + 48) + 32 * v11;
    v16 = *(_QWORD *)(v3 + 56) + 32 * v11;
    v17 = *(double *)v16;
    v18 = *(double *)(v16 + 8);
    v19 = *(double *)(v16 + 16);
    v20 = *(double *)(v16 + 24);
    v21 = sub_2497F2068(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24));
    if ((v22 & 1) != 0)
    {
      v23.origin.x = v17;
      v23.origin.y = v18;
      v23.size.width = v19;
      v23.size.height = v20;
      result = CGRectEqualToRect(*(CGRect *)(*(_QWORD *)(a2 + 56) + 32 * v21), v23);
      if ((result & 1) != 0)
        continue;
    }
    return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_2497D6FA4(_QWORD *a1, _QWORD *a2)
{
  int64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  int64_t v28;

  if (a1 == a2 || a1[2] != a2[2])
    return;
  v3 = 0;
  v4 = a1 + 8;
  OUTLINED_FUNCTION_0_14();
  v7 = v6 & v5;
  v28 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_26;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v28)
      return;
    v12 = v4[v11];
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      OUTLINED_FUNCTION_23_6();
      if (v14 == v15)
        return;
      v12 = v4[v3];
      if (!v12)
      {
        v3 = v13 + 2;
        OUTLINED_FUNCTION_23_6();
        if (v14 == v15)
          return;
        v12 = v4[v3];
        if (!v12)
        {
          v3 = v16 + 3;
          OUTLINED_FUNCTION_23_6();
          if (v14 == v15)
            return;
          v12 = v4[v3];
          if (!v12)
            break;
        }
      }
    }
LABEL_25:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_26:
    v20 = (uint64_t *)(a1[6] + 16 * v10);
    v21 = *v20;
    v22 = v20[1];
    v23 = *(_QWORD *)(a1[7] + 8 * v10);
    sub_249748BCC(*v20, v22);
    swift_retain();
    sub_2497F22B8();
    v25 = v24;
    sub_249748C10(v21, v22);
    if ((v25 & 1) == 0)
    {
      swift_release();
      return;
    }
    type metadata accessor for UVC1Object();
    v26 = swift_retain();
    v27 = sub_24977C6AC(v26, v23);
    swift_release();
    swift_release();
    if ((v27 & 1) == 0)
      return;
  }
  v18 = v17 + 4;
  if (v18 >= v28)
    return;
  v12 = v4[v18];
  if (v12)
  {
    v3 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    v3 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    OUTLINED_FUNCTION_23_6();
    if (v14 == v15)
      return;
    v12 = v4[v3];
    v18 = v19 + 1;
    if (v12)
      goto LABEL_25;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_2497D719C(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t UniversalControlDisplayLayout.init(configuration:devices:displaysID:links:displayFrames:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v17 = a3;
  swift_bridgeObjectRetain();
  sub_2497D719C(&v17, (uint64_t (*)(uint64_t))sub_24975E0A0, (uint64_t (*)(_QWORD *))sub_24976BA88);
  swift_bridgeObjectRelease();
  v15 = v17;
  v17 = a6;
  swift_bridgeObjectRetain();
  sub_2497D719C(&v17, (uint64_t (*)(uint64_t))sub_24975E0C0, sub_2497D8634);
  result = swift_bridgeObjectRelease();
  *a8 = v15;
  a8[1] = a4;
  a8[2] = a5;
  a8[3] = a1;
  a8[4] = a2;
  a8[5] = v17;
  a8[6] = a7;
  a8[7] = 2;
  return result;
}

uint64_t Array<A>.displaysID()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = sub_249836C40();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_126();
  v0 = OUTLINED_FUNCTION_19_10();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_126();
  v1 = sub_2498367D8();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8];
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_126();
  sub_249836808();
  swift_allocObject();
  sub_2498367FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881E48);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_249838510;
  sub_2498367CC();
  sub_249759088(&qword_257881E50, v2, MEMORY[0x24BDCB2C8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881E58);
  sub_2497D776C();
  sub_2498370FC();
  sub_2498367E4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578800E8);
  sub_2497D77B0();
  sub_2498367F0();
  if (!v7)
  {
    v5 = v3;
    sub_249836C70();
    __asm { BR              X10 }
  }
  return swift_release();
}

unint64_t sub_2497D776C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257881E60;
  if (!qword_257881E60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257881E58);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257881E60);
  }
  return result;
}

unint64_t sub_2497D77B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2578808A8;
  if (!qword_2578808A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578800E8);
    v2 = sub_249759088(&qword_2578808B0, type metadata accessor for UniversalControlDisplay, (uint64_t)&protocol conformance descriptor for UniversalControlDisplay);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2578808A8);
  }
  return result;
}

uint64_t UniversalControlDisplayLayout.devices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UniversalControlDisplayLayout.displaysID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t UniversalControlDisplayLayout.configuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t UniversalControlDisplayLayout.links.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UniversalControlDisplayLayout.displayFrames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t UniversalControlDisplayLayout.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

double UniversalControlDisplayLayout.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  type metadata accessor for CGRect(0);
  sub_2497CC9AC();
  v2 = MEMORY[0x24BEE4AF8];
  v3 = sub_249836CA0();
  *(_QWORD *)a1 = v2;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = 2;
  return result;
}

void UniversalControlDisplayLayout.displayFrames(relativeTo:)(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v5 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = sub_2497F2068(a1, a2, a3, a4);
    if ((v7 & 1) != 0)
      sub_2497E4C14(v5, *(double *)(*(_QWORD *)(v5 + 56) + 32 * v6), *(double *)(*(_QWORD *)(v5 + 56) + 32 * v6 + 8));
  }
  OUTLINED_FUNCTION_12_2();
}

uint64_t static UniversalControlDisplayLayout.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a1[1];
  v2 = a1[3];
  v4 = a1[4];
  v3 = a1[5];
  v6 = a1[6];
  v5 = a1[7];
  v20 = a2[1];
  v21 = a1[2];
  v7 = a2[3];
  v19 = a2[2];
  v8 = a2[4];
  v9 = a2[5];
  v11 = a2[6];
  v10 = a2[7];
  if (!sub_24977D68C(*a1, *a2)
    || static UniversalControlUUID.compare(lhs:rhs:)(v22, v21, v20, v19)
    || static UniversalControlUUID.compare(lhs:rhs:)(v2, v4, v7, v8)
    || (sub_24977D750(v3, v9, v12, v13, v14, v15, v16, v17) & 1) == 0)
  {
    return 0;
  }
  else
  {
    return sub_2497D6E0C(v6, v11) & (v5 == v10);
  }
}

uint64_t sub_2497D7A04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x73656369766564 && a2 == 0xE700000000000000;
  if (v2 || (sub_2498375C4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7379616C70736964 && a2 == 0xEA00000000004449;
    if (v6 || (sub_2498375C4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461;
      if (v7 || (sub_2498375C4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x736B6E696CLL && a2 == 0xE500000000000000;
        if (v8 || (sub_2498375C4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x4679616C70736964 && a2 == 0xED000073656D6172;
          if (v9 || (sub_2498375C4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v11 = sub_2498375C4();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 5;
            else
              return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_2497D7CBC()
{
  return 6;
}

uint64_t sub_2497D7CC4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2497D7CF8 + 4 * byte_24983BE50[a1]))(0x73656369766564, 0xE700000000000000);
}

uint64_t sub_2497D7CF8()
{
  return 0x7379616C70736964;
}

uint64_t sub_2497D7D14()
{
  return 0x72756769666E6F63;
}

uint64_t sub_2497D7D38()
{
  return 0x736B6E696CLL;
}

uint64_t sub_2497D7D4C()
{
  return 0x4679616C70736964;
}

uint64_t sub_2497D7D70()
{
  return 0x6E6F6973726576;
}

uint64_t sub_2497D7D84()
{
  unsigned __int8 *v0;

  return sub_2497D7CC4(*v0);
}

uint64_t sub_2497D7D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2497D7A04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2497D7DB0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2497D7CBC();
  *a1 = result;
  return result;
}

uint64_t sub_2497D7DD4()
{
  sub_2497E4DC4();
  return sub_249837750();
}

uint64_t sub_2497D7DFC()
{
  sub_2497E4DC4();
  return sub_24983775C();
}

void UniversalControlDisplayLayout.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881E68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_126();
  v7 = v6 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2497E4DC4();
  sub_249837744();
  OUTLINED_FUNCTION_21_8();
  OUTLINED_FUNCTION_22_9(&qword_257881E80, v8, (uint64_t (*)(void))sub_2497726E4, MEMORY[0x24BEE12A0]);
  OUTLINED_FUNCTION_6_8();
  if (!v1)
  {
    sub_249772720();
    OUTLINED_FUNCTION_6_8();
    OUTLINED_FUNCTION_6_8();
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_22_9(&qword_257881E90, v9, (uint64_t (*)(void))sub_2497E4E58, MEMORY[0x24BEE12A0]);
    OUTLINED_FUNCTION_6_8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257881EA0);
    sub_2497E4E94();
    OUTLINED_FUNCTION_6_8();
    sub_2498374E0();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  OUTLINED_FUNCTION_10_6();
}

void UniversalControlDisplayLayout.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881EB8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_126();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2497E4DC4();
  sub_249837720();
  if (v2)
  {
    OUTLINED_FUNCTION_30_5();
  }
  else
  {
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_22_9(&qword_257881EC0, v6, (uint64_t (*)(void))sub_24977266C, MEMORY[0x24BEE12D0]);
    OUTLINED_FUNCTION_5_13();
    sub_2497726A8();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_5_13();
    OUTLINED_FUNCTION_5_13();
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_22_9(&qword_257881EC8, v7, (uint64_t (*)(void))sub_2497E4F18, MEMORY[0x24BEE12D0]);
    OUTLINED_FUNCTION_5_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257881EA0);
    v8 = sub_2497E4F54();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_5_13();
    if (v8)
    {
      OUTLINED_FUNCTION_4_18();
      OUTLINED_FUNCTION_78();
      OUTLINED_FUNCTION_72_3();
      OUTLINED_FUNCTION_30_5();
      OUTLINED_FUNCTION_78();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      v9 = sub_249837420();
      OUTLINED_FUNCTION_4_18();
      *(_QWORD *)a2 = v10;
      *(_OWORD *)(a2 + 8) = v10;
      *(_OWORD *)(a2 + 24) = v10;
      *(_QWORD *)(a2 + 40) = v10;
      *(_QWORD *)(a2 + 48) = v10;
      *(_QWORD *)(a2 + 56) = v9;
      OUTLINED_FUNCTION_30_5();
      OUTLINED_FUNCTION_72_3();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  OUTLINED_FUNCTION_10_6();
}

void sub_2497D83E0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  UniversalControlDisplayLayout.init(from:)(a1, a2);
}

void sub_2497D83F4(_QWORD *a1)
{
  UniversalControlDisplayLayout.encode(to:)(a1);
}

uint64_t sub_2497D840C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDE0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_249836A18();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v26 - v14;
  v16 = sub_24980DFB0(0, 16, a1, a2);
  sub_249749358(v16, v17);
  result = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    v19 = sub_2498369F4();
    v20 = v19;
    v22 = v21;
    v23 = v19 >> 8;
    v24 = v19 >> 16;
    v26 = v19 >> 24;
    v27 = HIDWORD(v19);
    v28 = v19 >> 40;
    v29 = HIWORD(v19);
    v30 = HIBYTE(v19);
    v31 = v21 >> 8;
    v32 = v21 >> 16;
    v33 = v21 >> 24;
    v34 = HIDWORD(v21);
    v35 = v21 >> 40;
    v25 = *(void (**)(char *, uint64_t))(v10 + 8);
    v36 = HIBYTE(v21);
    v37 = HIWORD(v21);
    v25(v13, v9);
    result = ((uint64_t (*)(char *, uint64_t))v25)(v15, v9);
    *a3 = v20;
    a3[1] = v23;
    a3[2] = v24;
    a3[3] = v26;
    a3[4] = v27;
    a3[5] = v28;
    a3[6] = v29;
    a3[7] = v30;
    a3[8] = v22;
    a3[9] = v31;
    a3[10] = v32;
    a3[11] = v33;
    a3[12] = v34;
    a3[13] = v35;
    a3[14] = v37;
    a3[15] = v36;
  }
  return result;
}

uint64_t sub_2497D8634(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  unsigned int v53;
  char v54;
  char v55;
  char v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  unsigned __int8 *v68;
  uint64_t v69;
  unsigned __int8 *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  char v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  int v127;
  uint64_t v128;
  unsigned __int16 *v129;
  uint64_t v130;
  unsigned __int8 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unsigned __int16 *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int v175;
  char v176;
  int v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  char *v200;
  char *v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  BOOL v213;
  unint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  BOOL v223;
  uint64_t v224;
  char v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  BOOL v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  char *v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unsigned __int16 *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  int v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  unsigned __int8 v297;
  uint64_t v298;
  uint64_t v299;
  unsigned int v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  unsigned __int8 v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  int v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  int v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  unsigned __int8 v444;
  int v445;
  uint64_t v446;
  unsigned __int8 v447;
  int v448;
  unsigned __int8 v449;
  uint64_t v450;
  int v451;
  unsigned __int8 v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  unsigned __int8 v456;
  uint64_t v457;
  uint64_t v458;
  unsigned int v459;
  uint64_t v460;
  uint64_t v461;
  unsigned __int8 v462;
  uint64_t v463;
  uint64_t v464;
  unsigned __int8 v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  int v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  int v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  int v522;
  uint64_t v523;
  uint64_t v524;
  int v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  int v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  int v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  int v574;
  uint64_t v575;
  uint64_t v576;
  unsigned int v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  unint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  int8x16_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  __int128 v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  int v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  unsigned __int16 v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  unsigned int v685;
  __int128 v686;
  uint64_t v687;
  uint64_t v688;
  unsigned int v689;
  uint64_t v690;
  unsigned int v691;
  unsigned int v692;
  __int128 v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  __int128 v700;
  uint64_t v701;
  unsigned int v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  __int128 v709;
  unsigned __int8 v710;
  uint64_t v711;
  unsigned __int8 v712;
  unsigned __int8 __s2;
  char v714;
  char v715;
  char v716;
  char v717;
  char v718;
  char v719;
  char v720;
  char v721;
  char v722;
  char v723;
  char v724;
  char v725;
  char v726;
  char v727;
  char v728;
  char __s1;
  char v730;
  char v731;
  char v732;
  char v733;
  char v734;
  char v735;
  char v736;
  char v737;
  unsigned __int8 v738;
  char v739;
  char v740;
  char v741;
  char v742;
  char v743;
  char v744;
  uint64_t v745;

  v745 = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  result = sub_249837534();
  if (result < v3)
  {
    v5 = result;
    v265 = v1;
    sub_24974CF94(v3 / 2);
    v257 = v6;
    v264 = v7;
    v261 = v3;
    v255 = a1;
    if (v3 <= 0)
    {
      v9 = (char *)MEMORY[0x24BEE4AF8];
      v199 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      goto LABEL_166;
    }
    v256 = v5;
    v8 = 0;
    v269 = *a1;
    v253 = *a1 + 68;
    v254 = *a1 + 34;
    v9 = (char *)MEMORY[0x24BEE4AF8];
LABEL_4:
    v10 = v8 + 1;
    v262 = v8;
    if (v8 + 1 >= v3)
    {
      v43 = v269;
      v44 = v8;
      goto LABEL_76;
    }
    v258 = v9;
    v272 = v8 + 1;
    v11 = (unsigned __int8 *)(v269 + 70 * v10);
    v673 = *v11;
    v12 = v11[1];
    v13 = v11[2];
    v14 = v11[3];
    v683 = v11[4];
    v678 = v11[5];
    v15 = v11[6];
    v16 = v11[7];
    v540 = v11[8];
    v538 = v11[9];
    v537 = v11[10];
    v535 = v11[11];
    v17 = v11[12];
    v18 = v11[13];
    v19 = v11[14];
    v20 = v11[15];
    v470 = v11[16];
    v466 = v11[17];
    v473 = v11[18];
    v427 = v11[19];
    v425 = v11[20];
    v422 = v11[21];
    v418 = v11[22];
    v415 = v11[23];
    v463 = v11[24];
    v460 = v11[25];
    v411 = v11[26];
    v408 = v11[27];
    v405 = v11[28];
    v402 = v11[29];
    v399 = v11[30];
    v396 = v11[31];
    v21 = v11[32];
    v22 = v11[33];
    v23 = v11[34];
    v24 = v11[35];
    v25 = v11[36];
    v26 = v11[37];
    v27 = v11[38];
    v28 = v11[39];
    v29 = v11[40];
    v30 = v11[41];
    v31 = v11[42];
    v32 = v11[43];
    v33 = v11[44];
    v34 = v11[45];
    v35 = v11[46];
    v36 = v11[47];
    v326 = v11[48];
    v543 = v11[49];
    v323 = v11[50];
    v320 = v11[51];
    v317 = v11[52];
    v544 = v11[53];
    v314 = v11[54];
    v311 = v11[55];
    v308 = v11[56];
    v556 = v11[57];
    v305 = v11[58];
    v568 = v11[59];
    v303 = v11[60];
    v565 = v11[61];
    v301 = v11[62];
    v571 = v11[63];
    v298 = v11[64];
    v445 = *((unsigned __int16 *)v11 + 33);
    v574 = *((unsigned __int16 *)v11 + 34);
    v37 = (unsigned __int8 *)(v269 + 70 * v8);
    v533 = *v37;
    v531 = v37[1];
    v529 = v37[2];
    v526 = v37[3];
    v523 = v37[4];
    v520 = v37[5];
    v518 = v37[6];
    v516 = v37[7];
    v669 = v37[8];
    v513 = v37[9];
    v665 = v37[10];
    v660 = v37[11];
    v654 = v37[12];
    v649 = v37[13];
    v645 = v37[14];
    v641 = v37[15];
    v442 = v37[16];
    v439 = v37[17];
    v393 = v37[18];
    v390 = v37[19];
    v386 = v37[20];
    v382 = v37[21];
    v379 = v37[22];
    v376 = v37[23];
    v436 = v37[24];
    v433 = v37[25];
    v373 = v37[26];
    v370 = v37[27];
    v367 = v37[28];
    v364 = v37[29];
    v361 = v37[30];
    v358 = v37[31];
    v589 = v37[32];
    v592 = v37[33];
    v595 = v37[34];
    v598 = v37[35];
    v601 = v37[36];
    v604 = v37[37];
    v607 = v37[38];
    v610 = v37[39];
    v613 = v37[40];
    v616 = v37[41];
    v620 = v37[42];
    v624 = v37[43];
    v628 = v37[44];
    v631 = v37[45];
    v634 = v37[46];
    v637 = v37[47];
    v476 = v37[48];
    v479 = v37[49];
    v482 = v37[50];
    v486 = v37[51];
    v489 = v37[52];
    v343 = v37[53];
    v492 = v37[54];
    v345 = v37[55];
    v346 = v37[56];
    v347 = v37[57];
    v348 = v37[58];
    v349 = v37[59];
    v350 = v37[60];
    v351 = v37[61];
    v352 = v37[62];
    v354 = v23;
    v494 = v37[63];
    v339 = v25;
    v341 = v37[64];
    v430 = *((unsigned __int16 *)v37 + 33);
    v497 = *((unsigned __int16 *)v37 + 34);
    __s1 = v21;
    v730 = v22;
    v731 = v23;
    v559 = v24;
    v732 = v24;
    v733 = v25;
    v561 = v26;
    v734 = v26;
    v335 = v27;
    v337 = v29;
    v735 = v27;
    v736 = v28;
    v737 = v29;
    v738 = v30;
    v328 = v31;
    v331 = v35;
    v739 = v31;
    v553 = v32;
    v740 = v32;
    v333 = v33;
    v741 = v33;
    v546 = v34;
    v742 = v34;
    v743 = v35;
    v548 = v36;
    v744 = v36;
    __s2 = v673;
    v453 = v12;
    v714 = v12;
    v450 = v13;
    v715 = v13;
    v716 = v14;
    v717 = v683;
    v718 = v678;
    v457 = v15;
    v719 = v15;
    v38 = v16;
    v720 = v16;
    v721 = v540;
    v722 = v538;
    v723 = v537;
    v724 = v535;
    v39 = v17;
    v725 = v17;
    v40 = v18;
    v726 = v18;
    v41 = v19;
    v727 = v19;
    v42 = v20;
    v728 = v20;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      __asm { BR              X4 }
    v511 = v673;
    v509 = v453;
    v580 = v41;
    v674 = v21;
    v454 = v22;
    v271 = v28;
    __s1 = v589;
    v730 = v592;
    v731 = v595;
    v732 = v598;
    v733 = v601;
    v734 = v604;
    v735 = v607;
    v736 = v610;
    v737 = v613;
    v738 = v616;
    v739 = v620;
    v740 = v624;
    v741 = v628;
    v742 = v631;
    v743 = v634;
    v744 = v637;
    __s2 = v533;
    v714 = v531;
    v715 = v529;
    v716 = v526;
    v717 = v523;
    v718 = v520;
    v719 = v518;
    v720 = v516;
    v721 = v669;
    v722 = v513;
    v723 = v665;
    v724 = v660;
    v725 = v654;
    v726 = v649;
    v727 = v645;
    v728 = v641;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      __asm { BR              X8 }
    __s1 = v511;
    v730 = v509;
    v731 = v450;
    v732 = v14;
    v733 = v683;
    v734 = v678;
    v735 = v457;
    v736 = v38;
    v737 = v540;
    v738 = v538;
    v739 = v537;
    v740 = v535;
    v741 = v39;
    v742 = v40;
    v743 = v41;
    v744 = v42;
    __s2 = v533;
    v714 = v531;
    v715 = v529;
    v716 = v526;
    v717 = v523;
    v718 = v520;
    v719 = v518;
    v720 = v516;
    v721 = v669;
    v722 = v513;
    v723 = v665;
    v724 = v660;
    v725 = v654;
    v726 = v649;
    v727 = v645;
    v728 = v641;
    if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
    {
      v45 = v533 | (v531 << 8) | (v529 << 16) | (v526 << 24) | (v523 << 32) | (v520 << 40) | (v518 << 48) | (v516 << 56);
      v46 = v511 | (v509 << 8) | (v450 << 16) | (v14 << 24) | (v683 << 32) | (v678 << 40) | (v457 << 48) | (v38 << 56);
      v47 = v669 | (v513 << 8) | (v665 << 16) | (v660 << 24) | (v654 << 32) | (v649 << 40) | (v645 << 48) | (v641 << 56);
      v48 = v540 | (v538 << 8) | (v537 << 16) | (v535 << 24) | (v39 << 32) | (v40 << 40) | (v580 << 48) | (v42 << 56);
      v49 = v442 | (v439 << 8);
      v50 = v436 | (v433 << 8);
      v51 = v470 | (v466 << 8);
      v704 = v463 | (v460 << 8);
      v52 = v341 | (v430 << 16);
      v53 = v298 | (v445 << 16);
      if (static UniversalControlUUID.compare(lhs:rhs:)(v45, v47, v46, v48) == -1
        || ((sub_249772148(v46, v48, v45, v47), v54 == 2)
         && (sub_249772148(v51 | (v473 << 16) | (v427 << 24) | (v425 << 32) | (v422 << 40) | (v418 << 48) | (v415 << 56), v704 | (v411 << 16) | (v408 << 24) | (v405 << 32) | (v402 << 40) | (v399 << 48) | (v396 << 56), v49 | (v393 << 16) | (v390 << 24) | (v386 << 32) | (v382 << 40) | (v379 << 48) | (v376 << 56), v50 | (v373 << 16) | (v370 << 24) | (v367 << 32) | (v364 << 40) | (v361 << 48) | (v358 << 56)), v54 == 2)|| (v54 & 1) == 0)&& (((sub_249772148(v45, v47, v46, v48), v55 != 2)|| (sub_249772148(v49 | (v393 << 16) | (v390 << 24) | (v386 << 32) | (v382 << 40) | (v379 << 48) | (v376 << 56), v50 | (v373 << 16) | (v370 << 24) | (v367 << 32) | (v364 << 40) | (v361 << 48) | (v358 << 56), v51 | (v473 << 16) | (v427 << 24) | (v425 << 32) | (v422 << 40) | (v418 << 48) | (v415 << 56), v704 | (v411 << 16) | (v408 << 24) | (v405 << 32) | (v402 << 40) | (v399 << 48) | (v396 << 56)), v55 != 2))&& (v55 & 1) != 0|| (sub_24978B990(v53, v52) & 1) == 0))
      {
        if (static UniversalControlUUID.compare(lhs:rhs:)(v45, v47, v46, v48) == -1
          || static UniversalControlUUID.compare(lhs:rhs:)(v46, v48, v45, v47) != -1
          && ((v56 = sub_24978B8C8(v45, v47, v49 | (v393 << 16) | (v390 << 24) | (v386 << 32) | (v382 << 40) | (v379 << 48) | (v376 << 56), v50 | (v373 << 16) | (v370 << 24) | (v367 << 32) | (v364 << 40) | (v361 << 48) | (v358 << 56), v46, v48, v51 | (v473 << 16) | (v427 << 24) | (v425 << 32) | (v422 << 40) | (v418 << 48) | (v415 << 56), v704 | (v411 << 16) | (v408 << 24) | (v405 << 32) | (v402 << 40) | (v399 << 48) | (v396 << 56)), v56 != 2)|| (v56 = sub_24978B990(v52, v53), v56 != 2))&& (v56 & 1) != 0)
        {
          v3 = v261;
          v10 = v262 + 2;
          if (v262 + 2 >= v261)
            goto LABEL_65;
LABEL_37:
          v270 = 0;
LABEL_38:
          v43 = v269;
          v68 = (unsigned __int8 *)(v254 + 70 * v10);
          v69 = v272;
          while (1)
          {
            v70 = (unsigned __int8 *)(v43 + 70 * v69);
            v587 = *v70;
            v584 = v70[1];
            v274 = v10;
            v581 = v70[2];
            v578 = v70[3];
            v575 = v70[4];
            v572 = v70[5];
            v569 = v70[6];
            v566 = v70[7];
            v684 = v70[8];
            v679 = v70[9];
            v675 = v70[10];
            v670 = v70[11];
            v666 = v70[12];
            v661 = v70[13];
            v655 = v70[14];
            v650 = v70[15];
            v464 = v70[16];
            v461 = v70[17];
            v426 = v70[18];
            v423 = v70[19];
            v419 = v70[20];
            v416 = v70[21];
            v412 = v70[22];
            v409 = v70[23];
            v458 = v70[24];
            v455 = v70[25];
            v406 = v70[26];
            v403 = v70[27];
            v400 = v70[28];
            v397 = v70[29];
            v394 = v70[30];
            v391 = v70[31];
            v590 = v70[32];
            v593 = v70[33];
            v596 = v70[34];
            v599 = v70[35];
            v602 = v70[36];
            v605 = v70[37];
            v608 = v70[38];
            v611 = v70[39];
            v614 = v70[40];
            v617 = v70[41];
            v621 = v70[42];
            v625 = v70[43];
            v629 = v70[44];
            v690 = v70[45];
            v697 = v70[46];
            v706 = v70[47];
            v278 = v70[48];
            v280 = v70[49];
            v282 = v70[50];
            v284 = v70[51];
            v519 = v70[52];
            v521 = v70[53];
            v524 = v70[54];
            v527 = v70[55];
            v286 = v70[56];
            v288 = v70[57];
            v290 = v70[58];
            v292 = v70[59];
            v294 = v70[60];
            v295 = v70[61];
            v296 = v70[62];
            v299 = v70[63];
            v276 = v70[64];
            v451 = *((unsigned __int16 *)v70 + 33);
            v562 = *((unsigned __int16 *)v70 + 34);
            v71 = *(v68 - 34);
            v72 = *(v68 - 33);
            v73 = *(v68 - 32);
            v74 = *(v68 - 31);
            v75 = *(v68 - 30);
            v76 = *(v68 - 29);
            v77 = *(v68 - 28);
            v78 = *(v68 - 27);
            v79 = *(v68 - 26);
            v80 = *(v68 - 25);
            v81 = *(v68 - 24);
            v632 = *(v68 - 23);
            v635 = *(v68 - 22);
            v638 = *(v68 - 21);
            v642 = *(v68 - 20);
            v646 = *(v68 - 19);
            v446 = *(v68 - 18);
            v443 = *(v68 - 17);
            v356 = *(v68 - 16);
            v359 = *(v68 - 15);
            v362 = *(v68 - 14);
            v365 = *(v68 - 13);
            v371 = *(v68 - 12);
            v377 = *(v68 - 11);
            v440 = *(v68 - 10);
            v437 = *(v68 - 9);
            v368 = *(v68 - 8);
            v374 = *(v68 - 7);
            v380 = *(v68 - 6);
            v383 = *(v68 - 5);
            v387 = *(v68 - 4);
            v467 = *(v68 - 3);
            v82 = *v68;
            v83 = v68[1];
            v84 = v68[2];
            v85 = v68[3];
            v86 = v68[4];
            v87 = v68[5];
            v88 = v68[6];
            v89 = v68[7];
            v90 = v68[8];
            v91 = v68[9];
            v92 = v68[10];
            v93 = v68[11];
            v94 = v68[12];
            v95 = v68[13];
            v507 = v68[14];
            v329 = v68[15];
            v510 = v68[16];
            v332 = v68[17];
            v503 = v68[18];
            v334 = v68[19];
            v336 = v68[20];
            v338 = v68[21];
            v501 = v68[22];
            v471 = v68[23];
            v504 = v68[24];
            v474 = v68[25];
            v505 = v68[26];
            v477 = v68[27];
            v480 = v68[28];
            v483 = v68[29];
            v517 = v68[30];
            v448 = *((unsigned __int16 *)v68 + 16);
            v514 = *((unsigned __int16 *)v68 + 17);
            v306 = *(v68 - 2);
            v309 = *(v68 - 1);
            __s1 = *(v68 - 2);
            v730 = v309;
            v487 = v82;
            v731 = v82;
            v312 = v83;
            v315 = v85;
            v732 = v83;
            v490 = v84;
            v733 = v84;
            v734 = v85;
            v735 = v86;
            v318 = v87;
            v321 = v89;
            v736 = v87;
            v495 = v88;
            v737 = v88;
            v738 = v89;
            v498 = v90;
            v739 = v90;
            v324 = v91;
            v327 = v95;
            v740 = v91;
            v499 = v92;
            v741 = v92;
            v500 = v93;
            v742 = v93;
            v512 = v94;
            v743 = v94;
            v744 = v95;
            v431 = v71;
            __s2 = v71;
            v428 = v72;
            v714 = v72;
            v96 = v73;
            v715 = v73;
            v97 = v74;
            v716 = v74;
            v98 = v75;
            v717 = v75;
            v99 = v76;
            v718 = v76;
            v100 = v77;
            v719 = v77;
            v101 = v78;
            v720 = v78;
            v434 = v79;
            v721 = v79;
            v722 = v80;
            v723 = v81;
            v724 = v632;
            v725 = v635;
            v726 = v638;
            v727 = v642;
            v728 = v646;
            if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
              __asm { BR              X26 }
            v557 = v97;
            v554 = v98;
            v550 = v101;
            v344 = v383;
            v342 = v387;
            v340 = v467;
            v384 = v477;
            v388 = v480;
            v468 = v483;
            __s1 = v590;
            v730 = v593;
            v731 = v596;
            v732 = v599;
            v733 = v602;
            v734 = v605;
            v735 = v608;
            v736 = v611;
            v737 = v614;
            v738 = v617;
            v739 = v621;
            v740 = v625;
            v741 = v629;
            v742 = v690;
            v743 = v697;
            v744 = v706;
            __s2 = v587;
            v714 = v584;
            v715 = v581;
            v716 = v578;
            v717 = v575;
            v718 = v572;
            v719 = v569;
            v720 = v566;
            v721 = v684;
            v722 = v679;
            v723 = v675;
            v724 = v670;
            v725 = v666;
            v726 = v661;
            v727 = v655;
            v728 = v650;
            if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
              __asm { BR              X16 }
            v484 = v661;
            v481 = v655;
            v478 = v650;
            v662 = v690;
            v651 = v706;
            v656 = v697;
            v102 = v431 | (v428 << 8) | (v96 << 16) | (v97 << 24) | (v98 << 32) | (v99 << 40) | (v77 << 48) | (v101 << 56);
            v103 = v434 | (v80 << 8) | (v81 << 16) | (v632 << 24) | (v635 << 32) | (v638 << 40) | (v642 << 48) | (v646 << 56);
            v104 = v587 | (v584 << 8) | (v581 << 16) | (v578 << 24) | (v575 << 32) | (v572 << 40) | (v569 << 48) | (v566 << 56);
            v105 = v684 | (v679 << 8) | (v675 << 16) | (v670 << 24) | (v666 << 32) | (v484 << 40) | (v481 << 48) | (v478 << 56);
            v106 = sub_24978B870(v431 | (v428 << 8) | (v96 << 16) | (v557 << 24) | (v554 << 32) | (v99 << 40) | (v100 << 48) | (v550 << 56), v103, v104, v105);
            v698 = v446 | (v443 << 8);
            v707 = v440 | (v437 << 8);
            v107 = v464 | (v461 << 8);
            v108 = v458 | (v455 << 8);
            v691 = v517 | (v448 << 16);
            v109 = v276 | (v451 << 16);
            if (v106 == 2
              && (v106 = sub_24978B8C8(v102, v103, v698 | (v356 << 16) | (v359 << 24) | (v362 << 32) | (v365 << 40) | (v371 << 48) | (v377 << 56), v707 | (v368 << 16) | (v374 << 24) | (v380 << 32) | (v344 << 40) | (v342 << 48) | (v340 << 56), v104, v105, v107 | (v426 << 16) | (v423 << 24) | (v419 << 32) | (v416 << 40) | (v412 << 48) | (v409 << 56), v108 | (v406 << 16) | (v403 << 24) | (v400 << 32) | (v397 << 40) | (v394 << 48) | (v391 << 56)), v106 == 2)&& (v106 = sub_24978B990(v691, v109), v106 == 2)|| (v106 & 1) == 0)
            {
              v110 = sub_24978B870(v104, v105, v102, v103);
              if (v110 != 2
                || (v110 = sub_24978B8C8(v104, v105, v107 | (v426 << 16) | (v423 << 24) | (v419 << 32) | (v416 << 40) | (v412 << 48) | (v409 << 56), v108 | (v406 << 16) | (v403 << 24) | (v400 << 32) | (v397 << 40) | (v394 << 48) | (v391 << 56), v102, v103, v698 | (v356 << 16) | (v359 << 24) | (v362 << 32) | (v365 << 40) | (v371 << 48) | (v377 << 56), v707 | (v368 << 16) | (v374 << 24) | (v380 << 32) | (v344 << 40) | (v342 << 48) | (v340 << 56)), v110 != 2)|| (v110 = sub_24978B990(v109, v691), v110 != 2))
              {
                if ((v110 & 1) != 0)
                {
                  v3 = v261;
                  goto LABEL_61;
                }
              }
              v111 = dword_24983AE80[(char)v517];
              v112 = dword_24983AE80[(char)v276];
              v113 = v306 | (v309 << 8) | (v487 << 16) | (v312 << 24) | (v490 << 32) | (v315 << 40) | (v86 << 48) | (v318 << 56);
              v114 = v495 | (v321 << 8) | (v498 << 16) | (v324 << 24) | (v499 << 32) | (v500 << 40) | (v512 << 48) | (v327 << 56);
              v115 = v590 | (v593 << 8) | (v596 << 16) | (v599 << 24) | (v602 << 32) | (v605 << 40) | (v608 << 48) | (v611 << 56);
              v116 = v614 | (v617 << 8) | (v621 << 16) | (v625 << 24) | (v629 << 32) | (v662 << 40) | (v656 << 48) | (v651 << 56);
              v117 = sub_24978B870(v113, v114, v115, v116);
              v699 = v507 | (v329 << 8);
              v708 = v501 | (v471 << 8);
              v118 = v278 | (v280 << 8);
              v119 = v286 | (v288 << 8);
              v120 = v111 | (v514 << 16);
              v692 = v112 | (v562 << 16);
              if (v117 == 2
                && (v117 = sub_24978B8C8(v113, v114, v699 | (v510 << 16) | (v332 << 24) | (v503 << 32) | (v334 << 40) | (v336 << 48) | (v338 << 56), v708 | (v504 << 16) | (v474 << 24) | (v505 << 32) | (v384 << 40) | (v388 << 48) | (v468 << 56), v115, v116, v118 | (v282 << 16) | (v284 << 24) | (v519 << 32) | (v521 << 40) | (v524 << 48) | (v527 << 56), v119 | (v290 << 16) | (v292 << 24) | (v294 << 32) | (v295 << 40) | (v296 << 48) | (v299 << 56)), v117 == 2)&& (v117 = sub_24978B990(v120, v692), v117 == 2)|| (v117 & 1) == 0)
              {
                v685 = v120;
                v3 = v261;
                if (sub_24978B870(v115, v116, v113, v114) == 2
                  && sub_24978B8C8(v115, v116, v118 | (v282 << 16) | (v284 << 24) | (v519 << 32) | (v521 << 40) | (v524 << 48) | (v527 << 56), v119 | (v290 << 16) | (v292 << 24) | (v294 << 32) | (v295 << 40) | (v296 << 48) | (v299 << 56), v113, v114, v699 | (v510 << 16) | (v332 << 24) | (v503 << 32) | (v334 << 40) | (v336 << 48) | (v338 << 56), v708 | (v504 << 16) | (v474 << 24) | (v505 << 32) | (v384 << 40) | (v388 << 48) | (v468 << 56)) == 2)
                {
                  sub_24978B990(v692, v685);
                }
LABEL_61:
                if ((v270 & 1) != 0)
                {
                  v10 = v274;
                  v9 = v258;
                  v43 = v269;
                  v44 = v262;
                  goto LABEL_68;
                }
                goto LABEL_62;
              }
            }
            v3 = v261;
            if ((v270 & 1) == 0)
            {
              v10 = v274;
LABEL_65:
              v9 = v258;
LABEL_66:
              v43 = v269;
              v44 = v262;
              goto LABEL_76;
            }
LABEL_62:
            v68 += 70;
            v69 = v274;
            v10 = v274 + 1;
            v43 = v269;
            if (v274 + 1 >= v3)
            {
              v9 = v258;
              v44 = v262;
              if (!v270)
                goto LABEL_76;
LABEL_68:
              if (v10 < v44)
                goto LABEL_204;
LABEL_69:
              if (v44 < v10)
              {
                v121 = 70 * v10;
                v266 = v10;
                v122 = v10;
                v123 = v44;
                v124 = 70 * v44;
                do
                {
                  if (v123 != --v122)
                  {
                    if (!v43)
                      goto LABEL_211;
                    v125 = v43 + v121;
                    v126 = *(_BYTE *)(v43 + v124 + 64);
                    v127 = *(_DWORD *)(v43 + v124 + 66);
                    v700 = *(_OWORD *)(v43 + v124 + 16);
                    v709 = *(_OWORD *)(v43 + v124);
                    v686 = *(_OWORD *)(v43 + v124 + 48);
                    v693 = *(_OWORD *)(v43 + v124 + 32);
                    memmove((void *)(v43 + v124), (const void *)(v43 + v121 - 70), 0x46uLL);
                    *(_OWORD *)(v125 - 70) = v709;
                    *(_OWORD *)(v125 - 54) = v700;
                    *(_OWORD *)(v125 - 38) = v693;
                    *(_OWORD *)(v125 - 22) = v686;
                    *(_BYTE *)(v125 - 6) = v126;
                    *(_DWORD *)(v125 - 4) = v127;
                  }
                  ++v123;
                  v121 -= 70;
                  v124 += 70;
                }
                while (v123 < v122);
                v3 = v261;
                v44 = v262;
                v10 = v266;
              }
LABEL_76:
              if (v10 < v3)
              {
                if (__OFSUB__(v10, v44))
                  goto LABEL_202;
                if (v10 - v44 < v256)
                {
                  if (__OFADD__(v44, v256))
                    goto LABEL_206;
                  if (v44 + v256 >= v3)
                    v128 = v3;
                  else
                    v128 = v44 + v256;
                  if (v128 >= v44)
                  {
                    if (v10 != v128)
                    {
                      v259 = v9;
                      v260 = v128;
                      v129 = (unsigned __int16 *)(v253 + 70 * v10);
                      do
                      {
                        v130 = v43 + 70 * v10;
                        v131 = *(_BYTE *)v130;
                        v132 = *(unsigned __int8 *)(v130 + 1);
                        v133 = *(unsigned __int8 *)(v130 + 2);
                        v134 = *(unsigned __int8 *)(v130 + 3);
                        v135 = *(unsigned __int8 *)(v130 + 4);
                        v136 = *(unsigned __int8 *)(v130 + 5);
                        v137 = *(unsigned __int8 *)(v130 + 6);
                        v138 = *(unsigned __int8 *)(v130 + 7);
                        v139 = *(unsigned __int8 *)(v130 + 8);
                        v140 = *(unsigned __int8 *)(v130 + 9);
                        v141 = *(unsigned __int8 *)(v130 + 10);
                        v142 = *(unsigned __int8 *)(v130 + 11);
                        v143 = *(unsigned __int8 *)(v130 + 12);
                        v144 = *(unsigned __int8 *)(v130 + 13);
                        v145 = *(unsigned __int8 *)(v130 + 14);
                        v146 = *(unsigned __int8 *)(v130 + 15);
                        v622 = *(unsigned __int8 *)(v130 + 16);
                        v542 = *(unsigned __int8 *)(v130 + 17);
                        v609 = *(unsigned __int8 *)(v130 + 18);
                        v404 = *(unsigned __int8 *)(v130 + 19);
                        v401 = *(unsigned __int8 *)(v130 + 20);
                        v398 = *(unsigned __int8 *)(v130 + 21);
                        v395 = *(unsigned __int8 *)(v130 + 22);
                        v392 = *(unsigned __int8 *)(v130 + 23);
                        v147 = *(_QWORD *)(v130 + 25);
                        v263 = v129;
                        v148 = v129;
                        v389 = *(_BYTE *)(v130 + 24);
                        v267 = v10;
                        while (1)
                        {
                          v618 = v147;
                          v657 = v143;
                          v663 = v142;
                          v541 = v144;
                          v667 = v140;
                          v539 = v145;
                          v671 = v139;
                          v676 = v138;
                          v680 = v134;
                          v687 = v133;
                          v701 = v132;
                          v710 = v131;
                          v694 = v135;
                          v273 = v44;
                          v149 = *((unsigned __int8 *)v148 - 35);
                          v150 = *((unsigned __int8 *)v148 - 34);
                          v151 = *((unsigned __int8 *)v148 - 33);
                          v152 = *((unsigned __int8 *)v148 - 32);
                          v153 = *((unsigned __int8 *)v148 - 31);
                          v154 = *((unsigned __int8 *)v148 - 30);
                          v155 = *((unsigned __int8 *)v148 - 29);
                          v156 = *((unsigned __int8 *)v148 - 28);
                          v157 = *((unsigned __int8 *)v148 - 27);
                          v158 = *((unsigned __int8 *)v148 - 26);
                          v159 = *((unsigned __int8 *)v148 - 25);
                          v160 = *((unsigned __int8 *)v148 - 24);
                          v161 = *((unsigned __int8 *)v148 - 23);
                          v162 = *((unsigned __int8 *)v148 - 22);
                          v163 = *((unsigned __int8 *)v148 - 21);
                          v413 = *((unsigned __int8 *)v148 - 20);
                          v307 = *((unsigned __int8 *)v148 - 19);
                          v407 = *((unsigned __int8 *)v148 - 18);
                          v304 = *((unsigned __int8 *)v148 - 17);
                          v435 = *((unsigned __int8 *)v148 - 16);
                          v302 = *((unsigned __int8 *)v148 - 15);
                          v441 = *((unsigned __int8 *)v148 - 14);
                          v300 = *((unsigned __int8 *)v148 - 13);
                          v444 = *((_BYTE *)v148 - 12);
                          v447 = *((_BYTE *)v148 - 11);
                          v449 = *((_BYTE *)v148 - 10);
                          v452 = *((_BYTE *)v148 - 9);
                          v462 = *((_BYTE *)v148 - 8);
                          v456 = *((_BYTE *)v148 - 7);
                          v465 = *((_BYTE *)v148 - 6);
                          v459 = *((unsigned __int8 *)v148 - 5);
                          v469 = *((unsigned __int8 *)v148 - 4);
                          v536 = *(v148 - 1);
                          v652 = *((unsigned __int8 *)v148 - 138);
                          v438 = *v148;
                          v647 = *((unsigned __int8 *)v148 - 137);
                          v643 = *((unsigned __int8 *)v148 - 136);
                          v639 = *((unsigned __int8 *)v148 - 135);
                          v636 = *((unsigned __int8 *)v148 - 134);
                          v633 = *((unsigned __int8 *)v148 - 133);
                          v630 = *((unsigned __int8 *)v148 - 132);
                          v606 = *((unsigned __int8 *)v148 - 131);
                          v603 = *((unsigned __int8 *)v148 - 130);
                          v600 = *((unsigned __int8 *)v148 - 129);
                          v597 = *((unsigned __int8 *)v148 - 128);
                          v594 = *((unsigned __int8 *)v148 - 127);
                          v591 = *((unsigned __int8 *)v148 - 126);
                          v626 = *((unsigned __int8 *)v148 - 125);
                          v588 = *((unsigned __int8 *)v148 - 124);
                          v585 = *((unsigned __int8 *)v148 - 123);
                          v534 = *((unsigned __int8 *)v148 - 122);
                          v532 = *((unsigned __int8 *)v148 - 121);
                          v385 = *((unsigned __int8 *)v148 - 120);
                          v381 = *((unsigned __int8 *)v148 - 119);
                          v378 = *((unsigned __int8 *)v148 - 118);
                          v375 = *((unsigned __int8 *)v148 - 117);
                          v372 = *((unsigned __int8 *)v148 - 116);
                          v369 = *((unsigned __int8 *)v148 - 115);
                          v530 = *((unsigned __int8 *)v148 - 114);
                          v528 = *((unsigned __int8 *)v148 - 113);
                          v366 = *((unsigned __int8 *)v148 - 112);
                          v363 = *((unsigned __int8 *)v148 - 111);
                          v360 = *((unsigned __int8 *)v148 - 110);
                          v357 = *((unsigned __int8 *)v148 - 109);
                          v355 = *((unsigned __int8 *)v148 - 108);
                          v353 = *((unsigned __int8 *)v148 - 107);
                          v545 = *((unsigned __int8 *)v148 - 106);
                          v547 = *((unsigned __int8 *)v148 - 105);
                          v549 = *((unsigned __int8 *)v148 - 104);
                          v551 = *((unsigned __int8 *)v148 - 103);
                          v552 = *((unsigned __int8 *)v148 - 102);
                          v555 = *((unsigned __int8 *)v148 - 101);
                          v558 = *((unsigned __int8 *)v148 - 100);
                          v560 = *((unsigned __int8 *)v148 - 99);
                          v563 = *((unsigned __int8 *)v148 - 98);
                          v564 = *((unsigned __int8 *)v148 - 97);
                          v567 = *((unsigned __int8 *)v148 - 96);
                          v570 = *((unsigned __int8 *)v148 - 95);
                          v573 = *((unsigned __int8 *)v148 - 94);
                          v576 = *((unsigned __int8 *)v148 - 93);
                          v579 = *((unsigned __int8 *)v148 - 92);
                          v582 = *((unsigned __int8 *)v148 - 91);
                          v472 = *((unsigned __int8 *)v148 - 90);
                          v475 = *((unsigned __int8 *)v148 - 89);
                          v277 = *((unsigned __int8 *)v148 - 88);
                          v279 = *((unsigned __int8 *)v148 - 87);
                          v485 = *((unsigned __int8 *)v148 - 86);
                          v488 = *((unsigned __int8 *)v148 - 85);
                          v491 = *((unsigned __int8 *)v148 - 84);
                          v281 = *((unsigned __int8 *)v148 - 83);
                          v493 = *((unsigned __int8 *)v148 - 82);
                          v283 = *((unsigned __int8 *)v148 - 81);
                          v285 = *((unsigned __int8 *)v148 - 80);
                          v287 = *((unsigned __int8 *)v148 - 79);
                          v289 = *((unsigned __int8 *)v148 - 78);
                          v291 = *((unsigned __int8 *)v148 - 77);
                          v293 = *((unsigned __int8 *)v148 - 76);
                          v496 = *((unsigned __int8 *)v148 - 75);
                          v275 = *((unsigned __int8 *)v148 - 74);
                          v525 = *(v148 - 36);
                          v522 = *(v148 - 35);
                          __s1 = HIBYTE(v147);
                          v330 = v149;
                          v730 = v149;
                          v410 = v150;
                          v731 = v150;
                          v732 = v151;
                          v417 = v152;
                          v733 = v152;
                          v322 = v155;
                          v325 = v153;
                          v734 = v153;
                          v424 = v154;
                          v735 = v154;
                          v736 = v155;
                          v429 = v156;
                          v737 = v156;
                          v316 = v159;
                          v319 = v157;
                          v738 = v157;
                          v432 = v158;
                          v739 = v158;
                          v740 = v159;
                          v420 = v160;
                          v741 = v160;
                          v310 = v163;
                          v313 = v161;
                          v742 = v161;
                          v743 = v162;
                          v744 = v163;
                          __s2 = v710;
                          v714 = v701;
                          v164 = v680;
                          v715 = v687;
                          v716 = v680;
                          v717 = v694;
                          v718 = v136;
                          v719 = v137;
                          v720 = v138;
                          v721 = v139;
                          v722 = v140;
                          v723 = v141;
                          v724 = v142;
                          v725 = v143;
                          v726 = v144;
                          v727 = v145;
                          v728 = v146;
                          v297 = HIBYTE(v147);
                          v165 = v136;
                          v166 = v137;
                          v167 = v141;
                          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                            return v420;
                          v515 = v165;
                          v506 = v167;
                          v502 = v657;
                          v508 = v622;
                          v681 = v151;
                          v658 = v420;
                          v623 = v413;
                          __s1 = v545;
                          v730 = v547;
                          v731 = v549;
                          v732 = v551;
                          v733 = v552;
                          v734 = v555;
                          v735 = v558;
                          v736 = v560;
                          v737 = v563;
                          v738 = v564;
                          v739 = v567;
                          v740 = v570;
                          v741 = v573;
                          v742 = v576;
                          v743 = v579;
                          v744 = v582;
                          __s2 = v652;
                          v714 = v647;
                          v715 = v643;
                          v716 = v639;
                          v717 = v636;
                          v718 = v633;
                          v719 = v630;
                          v720 = v606;
                          v721 = v603;
                          v722 = v600;
                          v723 = v597;
                          v724 = v594;
                          v725 = v591;
                          v726 = v626;
                          v727 = v588;
                          v728 = v585;
                          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                            __asm { BR              X5 }
                          v421 = v626;
                          v414 = v585;
                          v627 = v576;
                          v586 = v582;
                          v168 = v710 | (unint64_t)(v701 << 8) | (v687 << 16) | (v164 << 24) | (v694 << 32) | (v165 << 40) | (v166 << 48) | (v676 << 56);
                          v169 = v671 | (v667 << 8) | (v506 << 16) | (v663 << 24) | (v502 << 32) | (v541 << 40) | (v539 << 48) | (v146 << 56);
                          v170 = v652 | (v647 << 8) | (v643 << 16) | (v639 << 24) | (v636 << 32) | (v633 << 40) | (v630 << 48) | (v606 << 56);
                          v171 = v603 | (v600 << 8) | (v597 << 16) | (v594 << 24) | (v591 << 32) | (v421 << 40) | (v588 << 48) | (v414 << 56);
                          v172 = sub_24978B870(v710 | (unint64_t)(v701 << 8) | (v687 << 16) | (v164 << 24) | (v694 << 32) | (v515 << 40) | (v166 << 48) | (v676 << 56), v169, v170, v171);
                          v583 = v508 | (v542 << 8);
                          v173 = v534 | (v532 << 8);
                          v174 = v530 | (v528 << 8);
                          v577 = v469 | (v536 << 16);
                          v175 = v275 | (v525 << 16);
                          if (v172 == 2)
                          {
                            v172 = sub_24978B8C8(v168, v169, v583 | (v609 << 16) | (v404 << 24) | (v401 << 32) | (v398 << 40) | (v395 << 48) | (v392 << 56), v389 | (unint64_t)(unsigned __int16)(v618 << 8) | ((unint64_t)BYTE1(v618) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE2(v618) << 24) | ((unint64_t)BYTE3(v618) << 32) | ((unint64_t)BYTE4(v618) << 40) | ((unint64_t)BYTE5(v618) << 48) | ((unint64_t)BYTE6(v618) << 56), v170, v171, v173 | (v385 << 16) | (v381 << 24) | (v378 << 32) | (v375 << 40) | (v372 << 48) | (v369 << 56), v174 | (v366 << 16) | (v363 << 24) | (v360 << 32) | (v357 << 40) | (v355 << 48) | (v353 << 56));
                            if (v172 == 2)
                            {
                              v172 = sub_24978B990(v577, v175);
                              if (v172 == 2)
                                goto LABEL_95;
                            }
                          }
                          if ((v172 & 1) == 0)
                          {
LABEL_95:
                            v176 = sub_24978B870(v170, v171, v168, v169);
                            if (v176 != 2
                              || (v176 = sub_24978B8C8(v170, v171, v173 | (v385 << 16) | (v381 << 24) | (v378 << 32) | (v375 << 40) | (v372 << 48) | (v369 << 56), v174 | (v366 << 16) | (v363 << 24) | (v360 << 32) | (v357 << 40) | (v355 << 48) | (v353 << 56), v168, v169, v583 | (v609 << 16) | (v404 << 24) | (v401 << 32) | (v398 << 40) | (v395 << 48) | (v392 << 56), v389 | (unint64_t)(unsigned __int16)(v618 << 8) | ((unint64_t)BYTE1(v618) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE2(v618) << 24) | ((unint64_t)BYTE3(v618) << 32) | ((unint64_t)BYTE4(v618) << 40) | ((unint64_t)BYTE5(v618) << 48) | ((unint64_t)BYTE6(v618) << 56)), v176 != 2)|| (v176 = sub_24978B990(v175, v577), v176 != 2))
                            {
                              if ((v176 & 1) != 0)
                                goto LABEL_109;
                            }
                            v177 = dword_24983AE80[(char)v469];
                            v178 = dword_24983AE80[(char)v275];
                            v179 = v297 | (unint64_t)(v330 << 8) | (v410 << 16) | (v681 << 24) | (v417 << 32) | (v325 << 40) | (v424 << 48) | (v322 << 56);
                            v180 = v429 | (v319 << 8) | (v432 << 16) | (v316 << 24) | (v658 << 32) | (v313 << 40) | (v162 << 48) | (v310 << 56);
                            v181 = v545 | (v547 << 8) | (v549 << 16) | (v551 << 24) | (v552 << 32) | (v555 << 40) | (v558 << 48) | (v560 << 56);
                            v182 = v563 | (v564 << 8) | (v567 << 16) | (v570 << 24) | (v573 << 32) | (v627 << 40) | (v579 << 48) | (v586 << 56);
                            v183 = sub_24978B870(v179, v180, v181, v182);
                            v711 = v623 | (v307 << 8);
                            v184 = v472 | (v475 << 8);
                            v185 = v493 | (v283 << 8);
                            v702 = v177 | (v438 << 16);
                            v186 = v178 | (v522 << 16);
                            if (v183 == 2)
                            {
                              v183 = sub_24978B8C8(v179, v180, v711 | (v407 << 16) | (v304 << 24) | (v435 << 32) | (v302 << 40) | (v441 << 48) | ((unint64_t)v300 << 56), v444 | (unint64_t)(unsigned __int16)(v447 << 8) | ((unint64_t)v449 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v452 << 24) | ((unint64_t)v462 << 32) | ((unint64_t)v456 << 40) | ((unint64_t)v465 << 48) | ((unint64_t)v459 << 56), v181, v182, v184 | (v277 << 16) | (v279 << 24) | (v485 << 32) | (v488 << 40) | (v491 << 48) | (v281 << 56), v185 | (v285 << 16) | (v287 << 24) | (v289 << 32) | (v291 << 40) | (v293 << 48) | (v496 << 56));
                              if (v183 == 2)
                              {
                                v183 = sub_24978B990(v702, v186);
                                if (v183 == 2)
                                  break;
                              }
                            }
                            if ((v183 & 1) == 0)
                              break;
                          }
                          if (!v269)
                            goto LABEL_209;
                          v712 = *((_BYTE *)v148 - 68);
                          v703 = *((unsigned __int8 *)v148 - 67);
                          v688 = *((unsigned __int8 *)v148 - 66);
                          v682 = *((unsigned __int8 *)v148 - 65);
                          v695 = *((unsigned __int8 *)v148 - 64);
                          v619 = *((unsigned __int8 *)v148 - 63);
                          v615 = *((unsigned __int8 *)v148 - 62);
                          v677 = *((unsigned __int8 *)v148 - 61);
                          v672 = *((unsigned __int8 *)v148 - 60);
                          v668 = *((unsigned __int8 *)v148 - 59);
                          v612 = *((unsigned __int8 *)v148 - 58);
                          v664 = *((unsigned __int8 *)v148 - 57);
                          v659 = *((unsigned __int8 *)v148 - 56);
                          v187 = *((unsigned __int8 *)v148 - 55);
                          v188 = *((unsigned __int8 *)v148 - 54);
                          v189 = *((unsigned __int8 *)v148 - 53);
                          v622 = *((unsigned __int8 *)v148 - 52);
                          v190 = *((unsigned __int8 *)v148 - 51);
                          v609 = *((unsigned __int8 *)v148 - 50);
                          v191 = *((unsigned __int8 *)v148 - 49);
                          v192 = *((unsigned __int8 *)v148 - 48);
                          v193 = *((unsigned __int8 *)v148 - 47);
                          v194 = *((unsigned __int8 *)v148 - 46);
                          v653 = *(unsigned __int16 *)((char *)v148 - 5);
                          v648 = *(_DWORD *)(v148 - 1);
                          v640 = *(int8x16_t *)((char *)v148 - 45);
                          v644 = *(_OWORD *)((char *)v148 - 29);
                          v195 = *(_QWORD *)((char *)v148 - 13);
                          memcpy(v148 - 34, v148 - 69, 0x46uLL);
                          v146 = v189;
                          v145 = v188;
                          v144 = v187;
                          v143 = v659;
                          v142 = v664;
                          v141 = v612;
                          v140 = v668;
                          v139 = v672;
                          v138 = v677;
                          v134 = v682;
                          v137 = v615;
                          v133 = v688;
                          v136 = v619;
                          v135 = v695;
                          v132 = v703;
                          v131 = v712;
                          *((_BYTE *)v148 - 138) = v712;
                          *((_BYTE *)v148 - 137) = v703;
                          *((_BYTE *)v148 - 136) = v688;
                          *((_BYTE *)v148 - 135) = v682;
                          *((_BYTE *)v148 - 134) = v695;
                          *((_BYTE *)v148 - 133) = v619;
                          *((_BYTE *)v148 - 132) = v615;
                          *((_BYTE *)v148 - 131) = v677;
                          *((_BYTE *)v148 - 130) = v672;
                          *((_BYTE *)v148 - 129) = v668;
                          *((_BYTE *)v148 - 128) = v612;
                          *((_BYTE *)v148 - 127) = v664;
                          *((_BYTE *)v148 - 126) = v659;
                          *((_BYTE *)v148 - 125) = v187;
                          *((_BYTE *)v148 - 124) = v188;
                          *((_BYTE *)v148 - 123) = v189;
                          *((_BYTE *)v148 - 122) = v622;
                          v542 = v190;
                          *((_BYTE *)v148 - 121) = v190;
                          *((_BYTE *)v148 - 120) = v609;
                          v404 = v191;
                          *((_BYTE *)v148 - 119) = v191;
                          v401 = v192;
                          *((_BYTE *)v148 - 118) = v192;
                          v398 = v193;
                          *((_BYTE *)v148 - 117) = v193;
                          v395 = v194;
                          *((_BYTE *)v148 - 116) = v194;
                          *(int8x16_t *)((char *)v148 - 115) = v640;
                          *(_OWORD *)((char *)v148 - 99) = v644;
                          *(_QWORD *)((char *)v148 - 83) = v195;
                          *(unsigned __int16 *)((char *)v148 - 75) = v653;
                          *((_DWORD *)v148 - 18) = v648;
                          v148 -= 35;
                          v147 = vextq_s8(v640, v640, 2uLL).u64[0];
                          v44 = v273 + 1;
                          v392 = v640.u8[0];
                          v389 = v640.u8[1];
                          v196 = v267;
                          if (v267 == v273 + 1)
                            goto LABEL_110;
                        }
                        if (sub_24978B870(v181, v182, v179, v180) == 2
                          && sub_24978B8C8(v181, v182, v184 | (v277 << 16) | (v279 << 24) | (v485 << 32) | (v488 << 40) | (v491 << 48) | (v281 << 56), v185 | (v285 << 16) | (v287 << 24) | (v289 << 32) | (v291 << 40) | (v293 << 48) | (v496 << 56), v179, v180, v711 | (v407 << 16) | (v304 << 24) | (v435 << 32) | (v302 << 40) | (v441 << 48) | ((unint64_t)v300 << 56), v444 | (unint64_t)(unsigned __int16)(v447 << 8) | ((unint64_t)v449 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v452 << 24) | ((unint64_t)v462 << 32) | ((unint64_t)v456 << 40) | ((unint64_t)v465 << 48) | ((unint64_t)v459 << 56)) == 2)
                        {
                          sub_24978B990(v186, v702);
                        }
LABEL_109:
                        v196 = v267;
LABEL_110:
                        v10 = v196 + 1;
                        v44 = v262;
                        v129 = v263 + 35;
                        v43 = v269;
                      }
                      while (v10 != v260);
                      v10 = v260;
                      v9 = v259;
                    }
                    goto LABEL_112;
                  }
LABEL_207:
                  __break(1u);
LABEL_208:
                  __break(1u);
LABEL_209:
                  __break(1u);
LABEL_210:
                  __break(1u);
LABEL_211:
                  __break(1u);
LABEL_212:
                  __break(1u);
                }
              }
LABEL_112:
              if (v10 < v44)
                goto LABEL_201;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v9 = sub_24975DAF4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
              v198 = *((_QWORD *)v9 + 2);
              v197 = *((_QWORD *)v9 + 3);
              v199 = v198 + 1;
              if (v198 >= v197 >> 1)
                v9 = sub_24975DAF4((char *)(v197 > 1), v198 + 1, 1, v9);
              *((_QWORD *)v9 + 2) = v199;
              v200 = v9 + 32;
              v201 = &v9[16 * v198 + 32];
              *(_QWORD *)v201 = v262;
              *((_QWORD *)v201 + 1) = v10;
              v268 = v10;
              if (v198)
              {
                while (2)
                {
                  v202 = v199 - 1;
                  if (v199 >= 4)
                  {
                    v207 = &v200[16 * v199];
                    v208 = *((_QWORD *)v207 - 8);
                    v209 = *((_QWORD *)v207 - 7);
                    v213 = __OFSUB__(v209, v208);
                    v210 = v209 - v208;
                    if (v213)
                      goto LABEL_186;
                    v212 = *((_QWORD *)v207 - 6);
                    v211 = *((_QWORD *)v207 - 5);
                    v213 = __OFSUB__(v211, v212);
                    v205 = v211 - v212;
                    v206 = v213;
                    if (v213)
                      goto LABEL_187;
                    v214 = v199 - 2;
                    v215 = &v200[16 * v199 - 32];
                    v217 = *(_QWORD *)v215;
                    v216 = *((_QWORD *)v215 + 1);
                    v213 = __OFSUB__(v216, v217);
                    v218 = v216 - v217;
                    if (v213)
                      goto LABEL_188;
                    v213 = __OFADD__(v205, v218);
                    v219 = v205 + v218;
                    if (v213)
                      goto LABEL_190;
                    if (v219 >= v210)
                    {
                      v237 = &v200[16 * v202];
                      v239 = *(_QWORD *)v237;
                      v238 = *((_QWORD *)v237 + 1);
                      v213 = __OFSUB__(v238, v239);
                      v240 = v238 - v239;
                      if (v213)
                        goto LABEL_196;
                      v230 = v205 < v240;
                    }
                    else
                    {
LABEL_131:
                      if ((v206 & 1) != 0)
                        goto LABEL_189;
                      v214 = v199 - 2;
                      v220 = &v200[16 * v199 - 32];
                      v222 = *(_QWORD *)v220;
                      v221 = *((_QWORD *)v220 + 1);
                      v223 = __OFSUB__(v221, v222);
                      v224 = v221 - v222;
                      v225 = v223;
                      if (v223)
                        goto LABEL_191;
                      v226 = &v200[16 * v202];
                      v228 = *(_QWORD *)v226;
                      v227 = *((_QWORD *)v226 + 1);
                      v213 = __OFSUB__(v227, v228);
                      v229 = v227 - v228;
                      if (v213)
                        goto LABEL_193;
                      if (__OFADD__(v224, v229))
                        goto LABEL_195;
                      if (v224 + v229 < v205)
                        goto LABEL_143;
                      v230 = v205 < v229;
                    }
                    if (v230)
                      v202 = v214;
                  }
                  else
                  {
                    if (v199 == 3)
                    {
                      v204 = *((_QWORD *)v9 + 4);
                      v203 = *((_QWORD *)v9 + 5);
                      v213 = __OFSUB__(v203, v204);
                      v205 = v203 - v204;
                      v206 = v213;
                      goto LABEL_131;
                    }
                    v231 = *((_QWORD *)v9 + 4);
                    v232 = *((_QWORD *)v9 + 5);
                    v213 = __OFSUB__(v232, v231);
                    v224 = v232 - v231;
                    v225 = v213;
LABEL_143:
                    if ((v225 & 1) != 0)
                      goto LABEL_192;
                    v233 = &v200[16 * v202];
                    v235 = *(_QWORD *)v233;
                    v234 = *((_QWORD *)v233 + 1);
                    v213 = __OFSUB__(v234, v235);
                    v236 = v234 - v235;
                    if (v213)
                      goto LABEL_194;
                    if (v236 < v224)
                      goto LABEL_160;
                  }
                  v241 = v202 - 1;
                  if (v202 - 1 >= v199)
                  {
                    __break(1u);
LABEL_183:
                    __break(1u);
LABEL_184:
                    __break(1u);
LABEL_185:
                    __break(1u);
LABEL_186:
                    __break(1u);
LABEL_187:
                    __break(1u);
LABEL_188:
                    __break(1u);
LABEL_189:
                    __break(1u);
LABEL_190:
                    __break(1u);
LABEL_191:
                    __break(1u);
LABEL_192:
                    __break(1u);
LABEL_193:
                    __break(1u);
LABEL_194:
                    __break(1u);
LABEL_195:
                    __break(1u);
LABEL_196:
                    __break(1u);
LABEL_197:
                    __break(1u);
LABEL_198:
                    __break(1u);
LABEL_199:
                    __break(1u);
LABEL_200:
                    __break(1u);
LABEL_201:
                    __break(1u);
LABEL_202:
                    __break(1u);
LABEL_203:
                    __break(1u);
LABEL_204:
                    __break(1u);
                    goto LABEL_205;
                  }
                  if (!v269)
                    goto LABEL_210;
                  v242 = &v200[16 * v241];
                  v243 = *(_QWORD *)v242;
                  v244 = &v200[16 * v202];
                  v245 = *((_QWORD *)v244 + 1);
                  sub_2497E031C((char *)(v269 + 70 * *(_QWORD *)v242), (char *)(v269 + 70 * *(_QWORD *)v244), v269 + 70 * v245, v264);
                  if (v265)
                  {
LABEL_179:
                    swift_bridgeObjectRelease();
                    if (v261 >= -1)
                    {
                      *(_QWORD *)(v257 + 16) = 0;
                      return swift_bridgeObjectRelease();
                    }
LABEL_205:
                    __break(1u);
LABEL_206:
                    __break(1u);
                    goto LABEL_207;
                  }
                  if (v245 < v243)
                    goto LABEL_183;
                  if (v202 > *((_QWORD *)v9 + 2))
                    goto LABEL_184;
                  *(_QWORD *)v242 = v243;
                  *(_QWORD *)&v200[16 * v241 + 8] = v245;
                  v246 = *((_QWORD *)v9 + 2);
                  if (v202 >= v246)
                    goto LABEL_185;
                  v265 = 0;
                  v199 = v246 - 1;
                  memmove(&v200[16 * v202], v244 + 16, 16 * (v246 - 1 - v202));
                  *((_QWORD *)v9 + 2) = v246 - 1;
                  if (v246 <= 2)
                    goto LABEL_160;
                  continue;
                }
              }
              v199 = 1;
LABEL_160:
              v3 = v261;
              v8 = v268;
              if (v268 >= v261)
              {
LABEL_166:
                if (v199 >= 2)
                {
                  v247 = *v255;
                  do
                  {
                    v248 = v199 - 2;
                    if (v199 < 2)
                      goto LABEL_197;
                    if (!v247)
                      goto LABEL_212;
                    v249 = *(_QWORD *)&v9[16 * v248 + 32];
                    v250 = *(_QWORD *)&v9[16 * v199 + 24];
                    sub_2497E031C((char *)(v247 + 70 * v249), (char *)(v247 + 70 * *(_QWORD *)&v9[16 * v199 + 16]), v247 + 70 * v250, v264);
                    if (v265)
                      goto LABEL_179;
                    if (v250 < v249)
                      goto LABEL_198;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v9 = sub_24975DBE8();
                    if (v248 >= *((_QWORD *)v9 + 2))
                      goto LABEL_199;
                    v251 = &v9[16 * v248 + 32];
                    *(_QWORD *)v251 = v249;
                    *((_QWORD *)v251 + 1) = v250;
                    v252 = *((_QWORD *)v9 + 2);
                    if (v199 > v252)
                      goto LABEL_200;
                    memmove(&v9[16 * v199 + 16], &v9[16 * v199 + 32], 16 * (v252 - v199));
                    *((_QWORD *)v9 + 2) = v252 - 1;
                    v199 = v252 - 1;
                  }
                  while (v252 > 2);
                }
                swift_bridgeObjectRelease();
                if (v261 >= -1)
                {
                  *(_QWORD *)(v257 + 16) = 0;
                  return swift_bridgeObjectRelease();
                }
                goto LABEL_208;
              }
              goto LABEL_4;
            }
          }
        }
        v57 = dword_24983AE80[(char)v298];
        v58 = dword_24983AE80[(char)v341];
        v59 = v674 | (v454 << 8) | (v354 << 16) | (v559 << 24) | (v339 << 32) | (v561 << 40) | (v335 << 48) | (v271 << 56);
        v60 = v337 | (v665 << 8) | (v328 << 16) | (v553 << 24) | (v333 << 32) | (v546 << 40) | (v331 << 48) | (v548 << 56);
        v61 = v589 | (v592 << 8) | (v595 << 16) | (v598 << 24) | (v601 << 32) | (v604 << 40) | (v607 << 48) | (v610 << 56);
        v62 = v613 | (v616 << 8) | (v620 << 16) | (v624 << 24) | (v628 << 32) | (v631 << 40) | (v634 << 48) | (v637 << 56);
        v63 = sub_24978B870(v59, v60, v61, v62);
        v696 = v326 | (v543 << 8);
        v705 = v308 | (v556 << 8);
        v64 = v476 | (v479 << 8);
        v65 = v346 | (v347 << 8);
        v66 = v57 | (v574 << 16);
        v67 = v58 | (v497 << 16);
        if (v63 == 2
          && (v63 = sub_24978B8C8(v59, v60, v696 | (v323 << 16) | (v320 << 24) | (v317 << 32) | (v544 << 40) | (v314 << 48) | (v311 << 56), v705 | (v305 << 16) | (v568 << 24) | (v303 << 32) | (v565 << 40) | (v301 << 48) | (v571 << 56), v61, v62, v64 | (v482 << 16) | (v486 << 24) | (v489 << 32) | (v343 << 40) | (v492 << 48) | (v345 << 56), v65 | (v348 << 16) | (v349 << 24) | (v350 << 32) | (v351 << 40) | (v352 << 48) | (v494 << 56)), v63 == 2)&& (v63 = sub_24978B990(v66, v67), v63 == 2)|| (v63 & 1) == 0)
        {
          v689 = v67;
          v9 = v258;
          if (sub_24978B870(v61, v62, v59, v60) == 2
            && sub_24978B8C8(v61, v62, v64 | (v482 << 16) | (v486 << 24) | (v489 << 32) | (v343 << 40) | (v492 << 48) | (v345 << 56), v65 | (v348 << 16) | (v349 << 24) | (v350 << 32) | (v351 << 40) | (v352 << 48) | (v494 << 56), v59, v60, v696 | (v323 << 16) | (v320 << 24) | (v317 << 32) | (v544 << 40) | (v314 << 48) | (v311 << 56), v705 | (v305 << 16) | (v568 << 24) | (v303 << 32) | (v565 << 40) | (v301 << 48) | (v571 << 56)) == 2)
          {
            sub_24978B990(v689, v66);
          }
          v3 = v261;
          v10 = v262 + 2;
          if (v262 + 2 >= v261)
            goto LABEL_66;
          goto LABEL_37;
        }
      }
    }
    v3 = v261;
    v10 = v262 + 2;
    if (v262 + 2 >= v261)
    {
      v9 = v258;
      v43 = v269;
      v44 = v262;
      goto LABEL_69;
    }
    v270 = 1;
    goto LABEL_38;
  }
  if (v3 < 0)
    goto LABEL_203;
  if (v3)
    return sub_2497DD4CC(0, v3, 1, a1);
  return result;
}

uint64_t sub_2497DD4CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unsigned __int16 *v4;
  char *v5;
  char v6;
  unsigned __int8 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  unsigned __int8 v36;
  char v37;
  int v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  unsigned __int8 v45;
  int v46;
  char v47;
  char v48;
  int v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v67;
  char v68;
  unsigned __int8 v69;
  char v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  unsigned __int16 *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  unsigned __int8 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned __int8 v124;
  unsigned __int8 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int v140;
  unsigned __int8 v141;
  char v142;
  char v143;
  char v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  unsigned __int8 v160;
  char v161;
  char v162;
  char v163;
  unsigned __int8 v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  char v177;
  char v178;
  char v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  char v185;
  char v186;
  unsigned __int8 v187;
  char v188;
  char v189;
  char v190;
  uint64_t v191;
  char v192;
  char v193;
  unsigned __int8 v194;
  char v195;
  uint64_t v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  uint64_t v210;
  char v211;
  unsigned __int8 v212;
  char v213;
  unsigned __int8 v214;
  unsigned __int8 v215;
  unsigned __int8 v216;
  unsigned __int8 v217;
  uint64_t v218;
  unsigned __int8 v219;
  unsigned int v220;
  char v221;
  char v222;
  char v223;
  unsigned int v224;
  unsigned int v225;
  int8x16_t v226;
  char v227;
  uint64_t v228;
  int v229;
  uint64_t v230;
  __int128 v231;
  unint64_t v232;
  uint64_t v233;
  int v234;
  char __s2;
  char v236;
  char v237;
  char v238;
  char v239;
  unsigned __int8 v240;
  unsigned __int8 v241;
  unint64_t v242;
  char v243;
  char __s1;
  char v245;
  char v246;
  char v247;
  char v248;
  unsigned __int8 v249;
  unsigned __int8 v250;
  unint64_t v251;
  char v252;
  uint64_t v253;

  v77 = result;
  v253 = *MEMORY[0x24BDAC8D0];
  if (a3 == a2)
    return result;
  v79 = *a4;
  v4 = (unsigned __int16 *)(*a4 + 70 * a3 + 68);
  do
  {
    v80 = a3;
    v5 = (char *)(v79 + 70 * a3);
    v221 = *v5;
    v201 = v5[1];
    v6 = v5[2];
    v189 = v5[3];
    v188 = v5[4];
    v187 = v5[5];
    v7 = v5[6];
    v8 = v5[7];
    v197 = v5[8];
    v195 = v5[9];
    v9 = v5[10];
    v10 = v5[11];
    v198 = v5[12];
    v11 = v5[13];
    v12 = v5[14];
    v13 = v5[15];
    v167 = v5[16];
    v165 = v5[17];
    v158 = v5[18];
    v126 = v5[19];
    v127 = v5[20];
    v125 = v5[21];
    v14 = *(_QWORD *)(v5 + 23);
    v108 = v77;
    v78 = v4;
    v124 = v5[22];
    while (1)
    {
      v232 = v14;
      v144 = v13;
      v145 = v12;
      v111 = *((unsigned __int8 *)v4 - 37);
      v15 = *((unsigned __int8 *)v4 - 34);
      v16 = *((unsigned __int8 *)v4 - 33);
      v17 = *((unsigned __int8 *)v4 - 32);
      v18 = *((unsigned __int8 *)v4 - 31);
      v19 = *((unsigned __int8 *)v4 - 30);
      v20 = *((unsigned __int8 *)v4 - 29);
      v21 = *((unsigned __int8 *)v4 - 28);
      v22 = *((unsigned __int8 *)v4 - 27);
      v23 = *((unsigned __int8 *)v4 - 26);
      v24 = *((unsigned __int8 *)v4 - 25);
      v25 = *((unsigned __int8 *)v4 - 24);
      v26 = *((unsigned __int8 *)v4 - 23);
      v27 = *((unsigned __int8 *)v4 - 22);
      v28 = *((unsigned __int8 *)v4 - 21);
      v89 = *((unsigned __int8 *)v4 - 20);
      v208 = *((unsigned __int8 *)v4 - 19);
      v88 = *((unsigned __int8 *)v4 - 18);
      v87 = *((unsigned __int8 *)v4 - 17);
      v86 = *((unsigned __int8 *)v4 - 16);
      v97 = *((_BYTE *)v4 - 15);
      v84 = *((unsigned __int8 *)v4 - 13);
      v85 = *((_BYTE *)v4 - 14);
      v98 = *((_BYTE *)v4 - 12);
      v212 = *((_BYTE *)v4 - 11);
      v214 = *((_BYTE *)v4 - 10);
      v215 = *((_BYTE *)v4 - 9);
      v217 = *((_BYTE *)v4 - 8);
      v219 = *((_BYTE *)v4 - 7);
      v216 = *((_BYTE *)v4 - 6);
      v218 = *((unsigned __int8 *)v4 - 5);
      v83 = *((unsigned __int8 *)v4 - 4);
      v110 = *(v4 - 1);
      v220 = *v4;
      v143 = *((_BYTE *)v4 - 138);
      v142 = *((_BYTE *)v4 - 137);
      v161 = *((_BYTE *)v4 - 136);
      v177 = *((_BYTE *)v4 - 135);
      v176 = *((_BYTE *)v4 - 134);
      v164 = *((_BYTE *)v4 - 133);
      v160 = *((_BYTE *)v4 - 132);
      v159 = *((_BYTE *)v4 - 131);
      v163 = *((_BYTE *)v4 - 130);
      v162 = *((_BYTE *)v4 - 129);
      v186 = *((_BYTE *)v4 - 128);
      v185 = *((_BYTE *)v4 - 127);
      v183 = *((_BYTE *)v4 - 126);
      v181 = *((_BYTE *)v4 - 125);
      v179 = *((_BYTE *)v4 - 124);
      v178 = *((_BYTE *)v4 - 123);
      v128 = *((unsigned __int8 *)v4 - 122);
      v129 = *((unsigned __int8 *)v4 - 121);
      v123 = *((unsigned __int8 *)v4 - 120);
      v122 = *((unsigned __int8 *)v4 - 119);
      v121 = *((unsigned __int8 *)v4 - 118);
      v120 = *((unsigned __int8 *)v4 - 117);
      v119 = *((unsigned __int8 *)v4 - 116);
      v118 = *((unsigned __int8 *)v4 - 115);
      v130 = *((unsigned __int8 *)v4 - 114);
      v131 = *((unsigned __int8 *)v4 - 113);
      v117 = *((unsigned __int8 *)v4 - 112);
      v116 = *((unsigned __int8 *)v4 - 111);
      v115 = *((unsigned __int8 *)v4 - 110);
      v114 = *((unsigned __int8 *)v4 - 109);
      v113 = *((unsigned __int8 *)v4 - 108);
      v112 = *((unsigned __int8 *)v4 - 107);
      v147 = *((unsigned __int8 *)v4 - 106);
      v148 = *((unsigned __int8 *)v4 - 105);
      v149 = *((unsigned __int8 *)v4 - 104);
      v150 = *((unsigned __int8 *)v4 - 103);
      v151 = *((unsigned __int8 *)v4 - 102);
      v152 = *((unsigned __int8 *)v4 - 101);
      v153 = *((unsigned __int8 *)v4 - 100);
      v154 = *((unsigned __int8 *)v4 - 99);
      v155 = *((unsigned __int8 *)v4 - 98);
      v156 = *((unsigned __int8 *)v4 - 97);
      v157 = *((unsigned __int8 *)v4 - 96);
      v168 = *((unsigned __int8 *)v4 - 95);
      v169 = *((unsigned __int8 *)v4 - 94);
      v171 = *((unsigned __int8 *)v4 - 93);
      v173 = *((unsigned __int8 *)v4 - 92);
      v175 = *((unsigned __int8 *)v4 - 91);
      v132 = *((unsigned __int8 *)v4 - 90);
      v133 = *((unsigned __int8 *)v4 - 89);
      v100 = *((unsigned __int8 *)v4 - 88);
      v101 = *((unsigned __int8 *)v4 - 87);
      v102 = *((unsigned __int8 *)v4 - 86);
      v103 = *((unsigned __int8 *)v4 - 85);
      v104 = *((unsigned __int8 *)v4 - 84);
      v105 = *((unsigned __int8 *)v4 - 83);
      v106 = *((unsigned __int8 *)v4 - 82);
      v107 = *((unsigned __int8 *)v4 - 81);
      v134 = *((unsigned __int8 *)v4 - 80);
      v135 = *((unsigned __int8 *)v4 - 79);
      v136 = *((unsigned __int8 *)v4 - 78);
      v137 = *((unsigned __int8 *)v4 - 77);
      v138 = *((unsigned __int8 *)v4 - 76);
      v139 = *((unsigned __int8 *)v4 - 75);
      v99 = *((unsigned __int8 *)v4 - 74);
      v109 = *(v4 - 36);
      v140 = *(v4 - 35);
      v95 = *((unsigned __int8 *)v4 - 35);
      v96 = *((unsigned __int8 *)v4 - 36);
      __s1 = *((_BYTE *)v4 - 36);
      v245 = v95;
      v93 = v17;
      v94 = v15;
      v246 = v15;
      v203 = v16;
      v247 = v16;
      v248 = v17;
      v205 = v18;
      v249 = v18;
      v91 = v21;
      v92 = v19;
      v250 = v19;
      v207 = v20;
      LOBYTE(v251) = v20;
      BYTE1(v251) = v21;
      v210 = v22;
      BYTE2(v251) = v22;
      v90 = v25;
      BYTE3(v251) = v23;
      v202 = v24;
      BYTE4(v251) = v24;
      BYTE5(v251) = v25;
      v204 = v26;
      BYTE6(v251) = v26;
      HIBYTE(v251) = v27;
      v206 = v28;
      v252 = v28;
      __s2 = v221;
      v236 = v201;
      v199 = v6;
      v237 = v6;
      v238 = v189;
      v239 = v188;
      v240 = v187;
      v241 = v7;
      LOBYTE(v242) = v8;
      BYTE1(v242) = v197;
      BYTE2(v242) = v195;
      BYTE3(v242) = v9;
      BYTE4(v242) = v10;
      BYTE5(v242) = v198;
      BYTE6(v242) = v11;
      HIBYTE(v242) = v12;
      v243 = v13;
      v29 = v7;
      v30 = v8;
      v31 = v9;
      v32 = v10;
      v33 = v11;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X9 }
      v141 = v29;
      v227 = v195;
      v223 = v33;
      v222 = v145;
      v82 = v165;
      v196 = v210;
      v191 = v23;
      v146 = v27;
      v166 = v208;
      v81 = v212;
      __s1 = v147;
      v245 = v148;
      v246 = v149;
      v247 = v150;
      v248 = v151;
      v249 = v152;
      v250 = v153;
      LOBYTE(v251) = v154;
      BYTE1(v251) = v155;
      BYTE2(v251) = v156;
      BYTE3(v251) = v157;
      BYTE4(v251) = v168;
      BYTE5(v251) = v169;
      BYTE6(v251) = v171;
      HIBYTE(v251) = v173;
      v252 = v175;
      __s2 = v143;
      v236 = v142;
      v237 = v161;
      v238 = v177;
      v239 = v176;
      v240 = v164;
      v241 = v160;
      LOBYTE(v242) = v159;
      BYTE1(v242) = v163;
      BYTE2(v242) = v162;
      BYTE3(v242) = v186;
      BYTE4(v242) = v185;
      BYTE5(v242) = v183;
      BYTE6(v242) = v181;
      HIBYTE(v242) = v179;
      v243 = v178;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X2 }
      v213 = v183;
      v211 = v181;
      v209 = v179;
      v184 = v169;
      v182 = v171;
      v180 = v173;
      __s1 = v221;
      v245 = v201;
      v34 = v199;
      v246 = v199;
      v35 = v189;
      v247 = v189;
      v248 = v188;
      v249 = v187;
      v36 = v29;
      v250 = v29;
      LOBYTE(v251) = v30;
      BYTE1(v251) = v197;
      BYTE2(v251) = v227;
      v37 = v31;
      BYTE3(v251) = v31;
      BYTE4(v251) = v32;
      BYTE5(v251) = v198;
      BYTE6(v251) = v223;
      HIBYTE(v251) = v222;
      v252 = v144;
      __s2 = v143;
      v236 = v142;
      v237 = v161;
      v238 = v177;
      v239 = v176;
      v240 = v164;
      v241 = v160;
      LOBYTE(v242) = v159;
      BYTE1(v242) = v163;
      BYTE2(v242) = v162;
      BYTE3(v242) = v186;
      BYTE4(v242) = v185;
      BYTE5(v242) = v213;
      BYTE6(v242) = v211;
      HIBYTE(v242) = v209;
      v243 = v178;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_54;
      __s1 = v143;
      v245 = v142;
      v246 = v161;
      v247 = v177;
      v248 = v176;
      v249 = v164;
      v250 = v160;
      LOBYTE(v251) = v159;
      BYTE1(v251) = v163;
      BYTE2(v251) = v162;
      BYTE3(v251) = v186;
      BYTE4(v251) = v185;
      BYTE5(v251) = v213;
      BYTE6(v251) = v211;
      HIBYTE(v251) = v209;
      v252 = v178;
      __s2 = v221;
      v236 = v201;
      v237 = v199;
      v238 = v189;
      v239 = v188;
      v240 = v187;
      v241 = v141;
      LOBYTE(v242) = v30;
      BYTE1(v242) = v197;
      BYTE2(v242) = v227;
      BYTE3(v242) = v31;
      BYTE4(v242) = v32;
      BYTE5(v242) = v198;
      BYTE6(v242) = v223;
      HIBYTE(v242) = v222;
      v243 = v144;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v221;
        v245 = v201;
        v246 = v199;
        v247 = v189;
        v248 = v188;
        v249 = v187;
        v250 = v141;
        LOBYTE(v251) = v30;
        BYTE1(v251) = v197;
        BYTE2(v251) = v227;
        BYTE3(v251) = v31;
        BYTE4(v251) = v32;
        BYTE5(v251) = v198;
        BYTE6(v251) = v223;
        HIBYTE(v251) = v222;
        v252 = v144;
        __s2 = v143;
        v236 = v142;
        v237 = v161;
        v238 = v177;
        v239 = v176;
        v240 = v164;
        v241 = v160;
        LOBYTE(v242) = v159;
        BYTE1(v242) = v163;
        BYTE2(v242) = v162;
        BYTE3(v242) = v186;
        BYTE4(v242) = v185;
        BYTE5(v242) = v213;
        BYTE6(v242) = v211;
        HIBYTE(v242) = v209;
        v243 = v178;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_54;
        __s1 = v143;
        v245 = v142;
        v246 = v161;
        v247 = v177;
        v248 = v176;
        v249 = v164;
        v250 = v160;
        LOBYTE(v251) = v159;
        BYTE1(v251) = v163;
        BYTE2(v251) = v162;
        BYTE3(v251) = v186;
        BYTE4(v251) = v185;
        BYTE5(v251) = v213;
        BYTE6(v251) = v211;
        HIBYTE(v251) = v209;
        v252 = v178;
        __s2 = v221;
        v236 = v201;
        v237 = v199;
        v238 = v189;
        v239 = v188;
        v240 = v187;
        v241 = v141;
        LOBYTE(v242) = v30;
        BYTE1(v242) = v197;
        BYTE2(v242) = v227;
        BYTE3(v242) = v31;
        BYTE4(v242) = v32;
        BYTE5(v242) = v198;
        BYTE6(v242) = v223;
        HIBYTE(v242) = v222;
        v243 = v144;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v167;
          v245 = v82;
          v246 = v158;
          v247 = v126;
          v248 = v127;
          v249 = v125;
          v250 = v124;
          v251 = v232;
          v252 = v111;
          __s2 = v128;
          v236 = v129;
          v237 = v123;
          v238 = v122;
          v239 = v121;
          v240 = v120;
          v241 = v119;
          LOBYTE(v242) = v118;
          BYTE1(v242) = v130;
          BYTE2(v242) = v131;
          BYTE3(v242) = v117;
          BYTE4(v242) = v116;
          BYTE5(v242) = v115;
          BYTE6(v242) = v114;
          HIBYTE(v242) = v113;
          v243 = v112;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_54;
        }
        __s1 = v143;
        v245 = v142;
        v246 = v161;
        v247 = v177;
        v248 = v176;
        v249 = v164;
        v250 = v160;
        LOBYTE(v251) = v159;
        BYTE1(v251) = v163;
        BYTE2(v251) = v162;
        BYTE3(v251) = v186;
        BYTE4(v251) = v185;
        BYTE5(v251) = v213;
        BYTE6(v251) = v211;
        HIBYTE(v251) = v209;
        v252 = v178;
        __s2 = v221;
        v236 = v201;
        v237 = v199;
        v238 = v189;
        v239 = v188;
        v240 = v187;
        v241 = v141;
        LOBYTE(v242) = v30;
        BYTE1(v242) = v197;
        BYTE2(v242) = v227;
        BYTE3(v242) = v31;
        BYTE4(v242) = v32;
        BYTE5(v242) = v198;
        BYTE6(v242) = v223;
        HIBYTE(v242) = v222;
        v243 = v144;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v221;
          v245 = v201;
          v246 = v199;
          v247 = v189;
          v248 = v188;
          v249 = v187;
          v250 = v141;
          LOBYTE(v251) = v30;
          BYTE1(v251) = v197;
          BYTE2(v251) = v227;
          BYTE3(v251) = v31;
          BYTE4(v251) = v32;
          BYTE5(v251) = v198;
          BYTE6(v251) = v223;
          HIBYTE(v251) = v222;
          v252 = v144;
          __s2 = v143;
          v236 = v142;
          v237 = v161;
          v238 = v177;
          v239 = v176;
          v240 = v164;
          v241 = v160;
          LOBYTE(v242) = v159;
          BYTE1(v242) = v163;
          BYTE2(v242) = v162;
          BYTE3(v242) = v186;
          BYTE4(v242) = v185;
          BYTE5(v242) = v213;
          BYTE6(v242) = v211;
          HIBYTE(v242) = v209;
          v243 = v178;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_53;
          __s1 = v128;
          v245 = v129;
          v246 = v123;
          v247 = v122;
          v248 = v121;
          v249 = v120;
          v250 = v119;
          LOBYTE(v251) = v118;
          BYTE1(v251) = v130;
          BYTE2(v251) = v131;
          BYTE3(v251) = v117;
          BYTE4(v251) = v116;
          BYTE5(v251) = v115;
          BYTE6(v251) = v114;
          HIBYTE(v251) = v113;
          v252 = v112;
          __s2 = v167;
          v236 = v82;
          v237 = v158;
          v238 = v126;
          v239 = v127;
          v240 = v125;
          v241 = v124;
          v242 = v232;
          v243 = v111;
          if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
          {
LABEL_53:
            if (v83 < v99)
              goto LABEL_54;
            if (v99 >= v83 && v110 < v109)
              goto LABEL_54;
          }
        }
      }
      __s1 = v143;
      v245 = v142;
      v246 = v161;
      v247 = v177;
      v248 = v176;
      v249 = v164;
      v250 = v160;
      LOBYTE(v251) = v159;
      BYTE1(v251) = v163;
      BYTE2(v251) = v162;
      BYTE3(v251) = v186;
      BYTE4(v251) = v185;
      BYTE5(v251) = v213;
      BYTE6(v251) = v211;
      HIBYTE(v251) = v209;
      v252 = v178;
      __s2 = v221;
      v236 = v201;
      v237 = v199;
      v238 = v189;
      v239 = v188;
      v240 = v187;
      v241 = v141;
      LOBYTE(v242) = v30;
      BYTE1(v242) = v197;
      BYTE2(v242) = v227;
      BYTE3(v242) = v31;
      BYTE4(v242) = v32;
      BYTE5(v242) = v198;
      BYTE6(v242) = v223;
      HIBYTE(v242) = v222;
      v243 = v144;
      result = memcmp(&__s1, &__s2, 0x10uLL);
      if ((result & 0x80000000) != 0)
        goto LABEL_56;
      __s1 = v221;
      v245 = v201;
      v246 = v199;
      v247 = v189;
      v248 = v188;
      v249 = v187;
      v250 = v141;
      LOBYTE(v251) = v30;
      BYTE1(v251) = v197;
      BYTE2(v251) = v227;
      BYTE3(v251) = v31;
      BYTE4(v251) = v32;
      BYTE5(v251) = v198;
      BYTE6(v251) = v223;
      HIBYTE(v251) = v222;
      v252 = v144;
      __s2 = v143;
      v236 = v142;
      v237 = v161;
      v238 = v177;
      v239 = v176;
      v240 = v164;
      v241 = v160;
      LOBYTE(v242) = v159;
      BYTE1(v242) = v163;
      BYTE2(v242) = v162;
      BYTE3(v242) = v186;
      BYTE4(v242) = v185;
      BYTE5(v242) = v213;
      BYTE6(v242) = v211;
      HIBYTE(v242) = v209;
      v243 = v178;
      v38 = memcmp(&__s1, &__s2, 0x10uLL);
      v39 = v206;
      v40 = v27;
      v41 = v204;
      v42 = v202;
      v43 = v191;
      v44 = v207;
      v45 = v92;
      if ((v38 & 0x80000000) == 0)
      {
        __s1 = v143;
        v245 = v142;
        v246 = v161;
        v247 = v177;
        v248 = v176;
        v249 = v164;
        v250 = v160;
        LOBYTE(v251) = v159;
        BYTE1(v251) = v163;
        BYTE2(v251) = v162;
        BYTE3(v251) = v186;
        BYTE4(v251) = v185;
        BYTE5(v251) = v213;
        BYTE6(v251) = v211;
        HIBYTE(v251) = v209;
        v252 = v178;
        __s2 = v221;
        v236 = v201;
        v237 = v199;
        v238 = v189;
        v239 = v188;
        v240 = v187;
        v241 = v141;
        LOBYTE(v242) = v30;
        BYTE1(v242) = v197;
        BYTE2(v242) = v227;
        BYTE3(v242) = v31;
        BYTE4(v242) = v32;
        BYTE5(v242) = v198;
        BYTE6(v242) = v223;
        HIBYTE(v242) = v222;
        v243 = v144;
        result = memcmp(&__s1, &__s2, 0x10uLL);
        if ((result & 0x80000000) != 0)
          goto LABEL_56;
        __s1 = v221;
        v245 = v201;
        v246 = v199;
        v247 = v189;
        v248 = v188;
        v249 = v187;
        v250 = v141;
        LOBYTE(v251) = v30;
        BYTE1(v251) = v197;
        BYTE2(v251) = v227;
        BYTE3(v251) = v31;
        BYTE4(v251) = v32;
        BYTE5(v251) = v198;
        BYTE6(v251) = v223;
        HIBYTE(v251) = v222;
        v252 = v144;
        __s2 = v143;
        v236 = v142;
        v237 = v161;
        v238 = v177;
        v239 = v176;
        v240 = v164;
        v241 = v160;
        LOBYTE(v242) = v159;
        BYTE1(v242) = v163;
        BYTE2(v242) = v162;
        BYTE3(v242) = v186;
        BYTE4(v242) = v185;
        BYTE5(v242) = v213;
        BYTE6(v242) = v211;
        HIBYTE(v242) = v209;
        v243 = v178;
        v46 = memcmp(&__s1, &__s2, 0x10uLL);
        v170 = v167 | (v82 << 8);
        v172 = v128 | (v129 << 8);
        v174 = v130 | (v131 << 8);
        v47 = v221;
        if ((v46 & 0x80000000) == 0)
        {
          result = static UniversalControlUUID.compare(lhs:rhs:)(v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56), v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56));
          if (result == -1)
            goto LABEL_56;
          static UniversalControlUUID.compare(lhs:rhs:)(v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56), v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56));
          v47 = v221;
          v34 = v199;
          v35 = v189;
          v36 = v141;
          v37 = v31;
        }
        __s1 = v47;
        v245 = v201;
        v246 = v34;
        v247 = v35;
        v248 = v188;
        v249 = v187;
        v250 = v36;
        LOBYTE(v251) = v30;
        BYTE1(v251) = v197;
        BYTE2(v251) = v227;
        BYTE3(v251) = v37;
        BYTE4(v251) = v32;
        BYTE5(v251) = v198;
        BYTE6(v251) = v223;
        HIBYTE(v251) = v222;
        v252 = v144;
        __s2 = v143;
        v236 = v142;
        v237 = v161;
        v238 = v177;
        v239 = v176;
        v240 = v164;
        v241 = v160;
        LOBYTE(v242) = v159;
        BYTE1(v242) = v163;
        BYTE2(v242) = v162;
        BYTE3(v242) = v186;
        BYTE4(v242) = v185;
        BYTE5(v242) = v213;
        BYTE6(v242) = v211;
        HIBYTE(v242) = v209;
        v243 = v178;
        v48 = v47;
        v49 = memcmp(&__s1, &__s2, 0x10uLL);
        v45 = v92;
        v44 = v207;
        v43 = v191;
        v42 = v202;
        v41 = v204;
        v40 = v27;
        v39 = v206;
        if ((v49 & 0x80000000) == 0)
        {
          __s1 = v143;
          v245 = v142;
          v246 = v161;
          v247 = v177;
          v248 = v176;
          v249 = v164;
          v250 = v160;
          LOBYTE(v251) = v159;
          BYTE1(v251) = v163;
          BYTE2(v251) = v162;
          BYTE3(v251) = v186;
          BYTE4(v251) = v185;
          BYTE5(v251) = v213;
          BYTE6(v251) = v211;
          HIBYTE(v251) = v209;
          v252 = v178;
          __s2 = v48;
          v236 = v201;
          v237 = v34;
          v238 = v35;
          v239 = v188;
          v240 = v187;
          v241 = v36;
          LOBYTE(v242) = v30;
          BYTE1(v242) = v197;
          BYTE2(v242) = v227;
          BYTE3(v242) = v37;
          BYTE4(v242) = v32;
          BYTE5(v242) = v198;
          BYTE6(v242) = v223;
          HIBYTE(v242) = v222;
          v243 = v144;
          result = memcmp(&__s1, &__s2, 0x10uLL);
          if ((result & 0x80000000) == 0)
          {
            v50 = static UniversalControlUUID.compare(lhs:rhs:)(v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56), v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56));
            v45 = v92;
            v44 = v207;
            v43 = v191;
            v42 = v202;
            v41 = v204;
            v40 = v27;
            v39 = v206;
            if (v50 == -1)
              goto LABEL_26;
            result = static UniversalControlUUID.compare(lhs:rhs:)(v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56), v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56));
          }
          v45 = v92;
          v44 = v207;
          v43 = v191;
          v42 = v202;
          v41 = v204;
          v40 = v27;
          v39 = v206;
          if (v99 < v83)
            goto LABEL_56;
          if (v83 >= v99 && v109 < v110)
            goto LABEL_56;
        }
      }
LABEL_26:
      __s1 = v96;
      v245 = v95;
      v246 = v94;
      v247 = v203;
      v248 = v93;
      v249 = v205;
      v250 = v45;
      LOBYTE(v251) = v44;
      BYTE1(v251) = v91;
      BYTE2(v251) = v196;
      BYTE3(v251) = v43;
      BYTE4(v251) = v42;
      BYTE5(v251) = v90;
      BYTE6(v251) = v41;
      HIBYTE(v251) = v40;
      v252 = v39;
      __s2 = v147;
      v236 = v148;
      v237 = v149;
      v238 = v150;
      v239 = v151;
      v240 = v152;
      v241 = v153;
      LOBYTE(v242) = v154;
      BYTE1(v242) = v155;
      BYTE2(v242) = v156;
      BYTE3(v242) = v157;
      BYTE4(v242) = v168;
      BYTE5(v242) = v184;
      BYTE6(v242) = v182;
      HIBYTE(v242) = v180;
      v243 = v175;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_54;
      __s1 = v147;
      v245 = v148;
      v225 = 0x1000302u >> (8 * v83);
      v246 = v149;
      v247 = v150;
      v224 = 0x1000302u >> (8 * v99);
      v248 = v151;
      v249 = v152;
      v250 = v153;
      LOBYTE(v251) = v154;
      BYTE1(v251) = v155;
      BYTE2(v251) = v156;
      BYTE3(v251) = v157;
      BYTE4(v251) = v168;
      BYTE5(v251) = v184;
      BYTE6(v251) = v182;
      HIBYTE(v251) = v180;
      v252 = v175;
      __s2 = v96;
      v236 = v95;
      v237 = v94;
      v238 = v203;
      v239 = v93;
      v240 = v205;
      v241 = v92;
      LOBYTE(v242) = v207;
      BYTE1(v242) = v91;
      BYTE2(v242) = v196;
      BYTE3(v242) = v191;
      BYTE4(v242) = v202;
      BYTE5(v242) = v90;
      BYTE6(v242) = v204;
      HIBYTE(v242) = v27;
      v243 = v206;
      v228 = v132 | (v133 << 8);
      v230 = v106 | (v107 << 8);
      v233 = v89 | (v166 << 8);
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        break;
      __s1 = v96;
      v245 = v95;
      v246 = v94;
      v247 = v203;
      v248 = v93;
      v249 = v205;
      v250 = v92;
      LOBYTE(v251) = v207;
      BYTE1(v251) = v91;
      BYTE2(v251) = v196;
      BYTE3(v251) = v191;
      BYTE4(v251) = v202;
      BYTE5(v251) = v90;
      BYTE6(v251) = v204;
      HIBYTE(v251) = v27;
      v252 = v206;
      __s2 = v147;
      v236 = v148;
      v237 = v149;
      v238 = v150;
      v239 = v151;
      v240 = v152;
      v241 = v153;
      LOBYTE(v242) = v154;
      BYTE1(v242) = v155;
      BYTE2(v242) = v156;
      BYTE3(v242) = v157;
      BYTE4(v242) = v168;
      BYTE5(v242) = v184;
      BYTE6(v242) = v182;
      HIBYTE(v242) = v180;
      v243 = v175;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v147;
        v245 = v148;
        BYTE1(v251) = v155;
        BYTE2(v251) = v156;
        __s2 = v96;
        v236 = v95;
        BYTE1(v242) = v91;
        BYTE2(v242) = v196;
        v246 = v149;
        v247 = v150;
        v248 = v151;
        v52 = v152;
        v249 = v152;
        v250 = v153;
        LOBYTE(v251) = v154;
        v53 = v157;
        BYTE3(v251) = v157;
        v54 = v168;
        BYTE4(v251) = v168;
        v55 = v184;
        BYTE5(v251) = v184;
        v56 = v182;
        BYTE6(v251) = v182;
        v57 = v180;
        HIBYTE(v251) = v180;
        v58 = v175;
        v252 = v175;
        v59 = v94;
        v237 = v94;
        v238 = v203;
        v239 = v93;
        v240 = v205;
        v241 = v92;
        LOBYTE(v242) = v207;
        BYTE3(v242) = v191;
        BYTE4(v242) = v202;
        BYTE5(v242) = v90;
        BYTE6(v242) = v204;
        HIBYTE(v242) = v146;
        v243 = v206;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v89;
          v245 = v166;
          __s2 = v132;
          v236 = v133;
          BYTE1(v242) = v106;
          BYTE2(v242) = v107;
          v246 = v88;
          v247 = v87;
          v248 = v86;
          v249 = v97;
          v250 = v85;
          LOBYTE(v251) = v84;
          BYTE1(v251) = v98;
          BYTE2(v251) = v81;
          BYTE3(v251) = v214;
          BYTE4(v251) = v215;
          BYTE5(v251) = v217;
          BYTE6(v251) = v219;
          HIBYTE(v251) = v216;
          v252 = v218;
          v237 = v100;
          v238 = v101;
          v239 = v102;
          v240 = v103;
          v241 = v104;
          LOBYTE(v242) = v105;
          BYTE3(v242) = v134;
          BYTE4(v242) = v135;
          BYTE5(v242) = v136;
          BYTE6(v242) = v137;
          HIBYTE(v242) = v138;
          v243 = v139;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_54;
          static UniversalControlUUID.compare(lhs:rhs:)(v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56), v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56));
          v52 = v152;
          v53 = v157;
          v54 = v168;
          v55 = v184;
          v56 = v182;
          v57 = v180;
          v58 = v175;
          v59 = v94;
        }
        v60 = v155 | (v156 << 8) | (v53 << 16) | (v54 << 24) | (v55 << 32) | (v56 << 40) | (v57 << 48) | (v58 << 56);
        v61 = v96 | (v95 << 8) | (v59 << 16);
        v62 = v147 | (v148 << 8) | (v149 << 16) | (v150 << 24) | (v151 << 32) | (v52 << 40) | (v153 << 48) | (v154 << 56);
        v63 = v61 | (v203 << 24) | (v93 << 32) | (v205 << 40) | (v92 << 48) | (v207 << 56);
        v64 = v91 | (v196 << 8) | (v191 << 16) | (v202 << 24) | (v90 << 32) | (v204 << 40) | (v146 << 48) | (v206 << 56);
        if (static UniversalControlUUID.compare(lhs:rhs:)(v62, v60, v63, v64) == -1)
          goto LABEL_59;
        if (static UniversalControlUUID.compare(lhs:rhs:)(v63, v64, v62, v60) != -1)
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56), v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56)) == -1)goto LABEL_59;
          static UniversalControlUUID.compare(lhs:rhs:)(v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56), v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56));
        }
        if (v225 >= v224
          && (v224 < v225 || v220 >= v140))
        {
          goto LABEL_59;
        }
      }
LABEL_54:
      if (!v79)
        __break(1u);
      v221 = *((_BYTE *)v4 - 68);
      v201 = *((_BYTE *)v4 - 67);
      v200 = *((_BYTE *)v4 - 66);
      v67 = *((_BYTE *)v4 - 65);
      v68 = *((_BYTE *)v4 - 64);
      v69 = *((_BYTE *)v4 - 63);
      v194 = *((_BYTE *)v4 - 62);
      v193 = *((_BYTE *)v4 - 61);
      v197 = *((_BYTE *)v4 - 60);
      v195 = *((_BYTE *)v4 - 59);
      v192 = *((_BYTE *)v4 - 58);
      v190 = *((_BYTE *)v4 - 57);
      v198 = *((_BYTE *)v4 - 56);
      v70 = *((_BYTE *)v4 - 55);
      v71 = *((_BYTE *)v4 - 54);
      v72 = *((_BYTE *)v4 - 53);
      v167 = *((unsigned __int8 *)v4 - 52);
      v165 = *((unsigned __int8 *)v4 - 51);
      v158 = *((unsigned __int8 *)v4 - 50);
      v73 = *((unsigned __int8 *)v4 - 49);
      v74 = *((unsigned __int8 *)v4 - 48);
      v234 = *(_DWORD *)(v4 - 1);
      v226 = *(int8x16_t *)((char *)v4 - 47);
      v231 = *(_OWORD *)((char *)v4 - 31);
      v75 = *(_QWORD *)((char *)v4 - 15);
      v229 = *(_DWORD *)((char *)v4 - 7);
      result = (uint64_t)memcpy(v4 - 34, v4 - 69, 0x46uLL);
      v6 = v200;
      v13 = v72;
      v12 = v71;
      v11 = v70;
      v10 = v190;
      v9 = v192;
      v8 = v193;
      v7 = v194;
      *((_BYTE *)v4 - 138) = v221;
      *((_BYTE *)v4 - 137) = v201;
      *((_BYTE *)v4 - 136) = v200;
      v189 = v67;
      *((_BYTE *)v4 - 135) = v67;
      v188 = v68;
      *((_BYTE *)v4 - 134) = v68;
      v187 = v69;
      *((_BYTE *)v4 - 133) = v69;
      *((_BYTE *)v4 - 132) = v194;
      *((_BYTE *)v4 - 131) = v193;
      *((_BYTE *)v4 - 130) = v197;
      *((_BYTE *)v4 - 129) = v195;
      *((_BYTE *)v4 - 128) = v192;
      *((_BYTE *)v4 - 127) = v190;
      *((_BYTE *)v4 - 126) = v198;
      *((_BYTE *)v4 - 125) = v70;
      *((_BYTE *)v4 - 124) = v71;
      *((_BYTE *)v4 - 123) = v72;
      *((_BYTE *)v4 - 122) = v167;
      *((_BYTE *)v4 - 121) = v165;
      *((_BYTE *)v4 - 120) = v158;
      v126 = v73;
      *((_BYTE *)v4 - 119) = v73;
      v127 = v74;
      *((_BYTE *)v4 - 118) = v74;
      *(int8x16_t *)((char *)v4 - 117) = v226;
      *(_OWORD *)((char *)v4 - 101) = v231;
      *(_QWORD *)((char *)v4 - 85) = v75;
      *(_DWORD *)((char *)v4 - 77) = v229;
      *((_DWORD *)v4 - 18) = v234;
      v4 -= 35;
      v14 = vextq_s8(v226, v226, 2uLL).u64[0];
      v125 = v226.i8[0];
      v124 = v226.u8[1];
      if (v80 == ++v108)
        goto LABEL_56;
    }
    v62 = v147 | (v148 << 8) | (v149 << 16) | (v150 << 24) | (v151 << 32) | (v152 << 40) | (v153 << 48) | (v154 << 56);
    v60 = v155 | (v156 << 8) | (v157 << 16) | (v168 << 24) | (v184 << 32) | (v182 << 40) | (v180 << 48) | (v175 << 56);
    v63 = v96 | (v95 << 8) | (v94 << 16) | (v203 << 24) | (v93 << 32) | (v205 << 40) | (v92 << 48) | (v207 << 56);
    v64 = v91 | (v196 << 8) | (v191 << 16) | (v202 << 24) | (v90 << 32) | (v204 << 40) | (v146 << 48) | (v206 << 56);
LABEL_59:
    result = sub_24978B870(v62, v60, v63, v64);
    if (result == 2)
    {
      result = sub_24978B8C8(v62, v60, v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56), v63, v64, v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56));
      if (result == 2)
        result = sub_24978B990((0x1000302u >> (8 * v99)) & 3 | (v140 << 16), (0x1000302u >> (8 * v83)) & 3 | (v220 << 16));
    }
LABEL_56:
    a3 = v80 + 1;
    v4 = v78 + 35;
  }
  while (v80 + 1 != a2);
  return result;
}

uint64_t sub_2497E031C(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned __int8 *v12;
  char *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  BOOL v58;
  unsigned __int8 *v59;
  int v61;
  unsigned __int8 v62;
  char v63;
  char v64;
  char v65;
  char v66;
  unsigned __int8 v67;
  char v68;
  char v69;
  uint64_t v70;
  char v71;
  char v72;
  unsigned __int8 v73;
  char v74;
  unsigned __int8 v75;
  char v76;
  BOOL v77;
  int v78;
  uint64_t v79;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int v89;
  char v90;
  char v91;
  char v92;
  char v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  BOOL v135;
  BOOL v137;
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int v148;
  unsigned int v149;
  char v150;
  char v151;
  char v152;
  char v153;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unsigned __int8 *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unsigned int v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unsigned int v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unsigned int v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  unsigned int v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  int v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  unsigned __int8 *v394;
  uint64_t v395;
  char *__dst;
  unint64_t __dsta;
  unint64_t v398;
  unint64_t v399;
  char *v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  char v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  int v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  char *v506;
  unsigned __int8 __s2;
  char v508;
  char v509;
  char v510;
  char v511;
  char v512;
  char v513;
  char v514;
  char v515;
  char v516;
  char v517;
  char v518;
  char v519;
  char v520;
  char v521;
  char v522;
  unsigned __int8 __s1;
  char v524;
  char v525;
  char v526;
  char v527;
  char v528;
  char v529;
  char v530;
  char v531;
  char v532;
  unsigned __int8 v533;
  unsigned __int8 v534;
  unsigned __int8 v535;
  unsigned __int8 v536;
  unsigned __int8 v537;
  unsigned __int8 v538;
  uint64_t v539;

  v454 = a4;
  v5 = a1;
  v539 = *MEMORY[0x24BDAC8D0];
  v6 = a2 - a1;
  v7 = (a2 - a1) / 70;
  v506 = a2;
  v8 = a3 - (_QWORD)a2;
  v9 = (uint64_t)(a3 - (_QWORD)a2) / 70;
  if (v7 >= v9)
  {
    sub_2497AC098(a2, (uint64_t)(a3 - (_QWORD)a2) / 70, a4);
    v12 = (unsigned __int8 *)&v454[70 * v9];
    if (v8 < 70 || v5 >= v506)
    {
LABEL_139:
      sub_2497AC098(v454, (v12 - (unsigned __int8 *)v454) / 70, v506);
      return 1;
    }
    v14 = (char *)(a3 - 70);
    v400 = v5;
    while (1)
    {
      __dst = v14;
      v398 = (unint64_t)v12;
      v15 = v12 - 70;
      v437 = *(v12 - 70);
      v16 = *(v12 - 69);
      v17 = *(v12 - 68);
      v18 = *(v12 - 67);
      v443 = *(v12 - 66);
      v19 = *(v12 - 65);
      v20 = *(v12 - 64);
      v21 = *(v12 - 63);
      v22 = *(v12 - 62);
      v23 = *(v12 - 61);
      v350 = *(v12 - 60);
      v348 = *(v12 - 59);
      v347 = *(v12 - 58);
      v24 = *(v12 - 57);
      v25 = *(v12 - 56);
      v26 = *(v12 - 55);
      v290 = *(v12 - 54);
      v269 = *(v12 - 53);
      v267 = *(v12 - 52);
      v264 = *(v12 - 51);
      v262 = *(v12 - 50);
      v260 = *(v12 - 49);
      v258 = *(v12 - 48);
      v255 = *(v12 - 47);
      v288 = *(v12 - 46);
      v285 = *(v12 - 45);
      v253 = *(v12 - 44);
      v250 = *(v12 - 43);
      v248 = *(v12 - 42);
      v246 = *(v12 - 41);
      v244 = *(v12 - 40);
      v242 = *(v12 - 39);
      v27 = *(v12 - 38);
      v28 = *(v12 - 37);
      v29 = v15[35];
      v30 = v15[36];
      v31 = v15[37];
      v32 = v15[38];
      v33 = v15[39];
      v34 = v15[40];
      v35 = v15[41];
      v36 = v15[42];
      v37 = v15[43];
      v38 = v15[44];
      v39 = v15[45];
      v40 = v15[46];
      v41 = v15[47];
      v186 = v15[48];
      v406 = v15[49];
      v184 = v15[50];
      v402 = v15[51];
      v182 = v15[52];
      v180 = v15[53];
      v178 = v15[54];
      v413 = v15[55];
      v176 = v15[56];
      v409 = v15[57];
      v174 = v15[58];
      v450 = v15[59];
      v172 = v15[60];
      v171 = v15[61];
      v170 = v15[62];
      v476 = v15[63];
      v169 = v15[64];
      v283 = *((unsigned __int16 *)v15 + 33);
      v159 = v15;
      v497 = *((unsigned __int16 *)v15 + 34);
      v346 = *(v506 - 70);
      v345 = *(v506 - 69);
      v344 = *(v506 - 68);
      v440 = *(v506 - 67);
      v342 = *(v506 - 66);
      v339 = *(v506 - 65);
      v336 = *(v506 - 64);
      v333 = *(v506 - 63);
      v330 = *(v506 - 62);
      v327 = *(v506 - 61);
      v434 = *(v506 - 60);
      v431 = *(v506 - 59);
      v427 = *(v506 - 58);
      v424 = *(v506 - 57);
      v421 = *(v506 - 56);
      v417 = *(v506 - 55);
      v279 = *(v506 - 54);
      v281 = *(v506 - 53);
      v240 = *(v506 - 52);
      v238 = *(v506 - 51);
      v236 = *(v506 - 50);
      v234 = *(v506 - 49);
      v232 = *(v506 - 48);
      v230 = *(v506 - 47);
      v277 = *(v506 - 46);
      v275 = *(v506 - 45);
      v228 = *(v506 - 44);
      v226 = *(v506 - 43);
      v224 = *(v506 - 42);
      v222 = *(v506 - 41);
      v220 = *(v506 - 40);
      v218 = *(v506 - 39);
      v354 = *(v506 - 38);
      v356 = *(v506 - 37);
      v358 = *(v506 - 36);
      v360 = *(v506 - 35);
      v362 = *(v506 - 34);
      v365 = *(v506 - 33);
      v368 = *(v506 - 32);
      v371 = *(v506 - 31);
      v374 = *(v506 - 30);
      v377 = *(v506 - 29);
      v380 = *(v506 - 28);
      v383 = *(v506 - 27);
      v386 = *(v506 - 26);
      v389 = *(v506 - 25);
      v391 = *(v506 - 24);
      v393 = *(v506 - 23);
      v202 = *(v506 - 22);
      v204 = *(v506 - 21);
      v304 = *(v506 - 20);
      v305 = *(v506 - 19);
      v206 = *(v506 - 18);
      v307 = *(v506 - 17);
      v310 = *(v506 - 16);
      v208 = *(v506 - 15);
      v313 = *(v506 - 14);
      v210 = *(v506 - 13);
      v316 = *(v506 - 12);
      v212 = *(v506 - 11);
      v319 = *(v506 - 10);
      v214 = *(v506 - 9);
      v321 = *(v506 - 8);
      v216 = *(v506 - 7);
      v198 = v15[34];
      v200 = *(v506 - 6);
      v273 = *((unsigned __int16 *)v506 - 2);
      v323 = *((unsigned __int16 *)v506 - 1);
      v325 = v27;
      __s1 = v27;
      v524 = v28;
      v525 = v198;
      v526 = v29;
      v194 = v30;
      v196 = v32;
      v527 = v30;
      v471 = v31;
      v528 = v31;
      v529 = v32;
      v464 = v33;
      v530 = v33;
      v192 = v34;
      v531 = v34;
      v478 = v35;
      v532 = v35;
      v190 = v36;
      v533 = v36;
      v461 = v37;
      v534 = v37;
      v535 = v38;
      v495 = v39;
      v536 = v39;
      v188 = v40;
      v537 = v40;
      v455 = v41;
      v538 = v41;
      __s2 = v437;
      v298 = v16;
      v508 = v16;
      v509 = v17;
      v294 = v18;
      v510 = v18;
      v511 = v443;
      v301 = v19;
      v512 = v19;
      v292 = v20;
      v513 = v20;
      v42 = v21;
      v514 = v21;
      v43 = v22;
      v515 = v22;
      v44 = v23;
      v516 = v23;
      v517 = v350;
      v518 = v348;
      v519 = v347;
      v45 = v24;
      v520 = v24;
      v46 = v25;
      v521 = v25;
      v47 = v26;
      v522 = v26;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X22 }
      v458 = v298;
      v499 = v17;
      v503 = v294;
      v493 = v301;
      v490 = v42;
      v352 = v43;
      v446 = v44;
      v485 = v45;
      v481 = v47;
      v483 = v46;
      v168 = v269;
      v164 = v264;
      v163 = v255;
      v167 = v285;
      v162 = v250;
      v299 = v28;
      v295 = v29;
      v302 = v471;
      v158 = v464;
      v156 = v455;
      v270 = v406;
      v265 = v402;
      v256 = v413;
      v286 = v409;
      v251 = v450;
      __s1 = v354;
      v524 = v356;
      v525 = v358;
      v526 = v360;
      v527 = v362;
      v528 = v365;
      v529 = v368;
      v530 = v371;
      v531 = v374;
      v532 = v377;
      v533 = v380;
      v534 = v383;
      v535 = v386;
      v536 = v389;
      v537 = v391;
      v538 = v393;
      __s2 = v346;
      v508 = v345;
      v509 = v344;
      v510 = v440;
      v511 = v342;
      v48 = v339;
      v512 = v339;
      v513 = v336;
      v49 = v333;
      v514 = v333;
      v50 = v330;
      v515 = v330;
      v51 = v327;
      v516 = v327;
      v517 = v434;
      v518 = v431;
      v519 = v427;
      v520 = v424;
      v521 = v421;
      v522 = v417;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X8 }
      v474 = v339;
      v472 = v336;
      v468 = v333;
      v451 = v330;
      v456 = v327;
      v414 = v434;
      v410 = v431;
      v407 = v427;
      v465 = v417;
      v340 = v365;
      v337 = v368;
      v334 = v371;
      v331 = v374;
      v328 = v377;
      v435 = v380;
      v432 = v383;
      v428 = v386;
      v418 = v393;
      v394 = (unsigned __int8 *)(__dst + 70);
      __s1 = v437;
      v524 = v458;
      v525 = v17;
      v526 = v503;
      v527 = v443;
      v528 = v493;
      v529 = v292;
      v530 = v490;
      v531 = v43;
      v532 = v446;
      v533 = v350;
      v534 = v348;
      v535 = v347;
      v536 = v485;
      v537 = v483;
      v538 = v47;
      __s2 = v346;
      v508 = v345;
      v509 = v344;
      v52 = v440;
      v510 = v440;
      v511 = v342;
      v512 = v48;
      v513 = v472;
      v514 = v49;
      v515 = v50;
      v516 = v51;
      v53 = v414;
      v517 = v414;
      v54 = v410;
      v518 = v410;
      v55 = v407;
      v519 = v407;
      v56 = v424;
      v520 = v424;
      v521 = v421;
      v522 = v465;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
LABEL_18:
        v57 = __dst;
        v58 = v394 != (unsigned __int8 *)v506 || __dst >= v506;
        v59 = (unsigned __int8 *)(v506 - 70);
        v506 -= 70;
        v12 = (unsigned __int8 *)v398;
        if (!v58)
          goto LABEL_24;
        goto LABEL_23;
      }
      __s1 = v346;
      v524 = v345;
      v525 = v344;
      v526 = v440;
      v527 = v342;
      v528 = v474;
      v529 = v472;
      v530 = v468;
      v531 = v50;
      v532 = v51;
      v533 = v414;
      v534 = v410;
      v535 = v407;
      v536 = v424;
      v537 = v421;
      v538 = v465;
      __s2 = v437;
      v508 = v458;
      v509 = v17;
      v510 = v503;
      v511 = v443;
      v512 = v493;
      v513 = v292;
      v514 = v490;
      v515 = v352;
      v516 = v446;
      v517 = v350;
      v518 = v348;
      v519 = v347;
      v520 = v485;
      v521 = v483;
      v522 = v481;
      v61 = memcmp(&__s1, &__s2, 0x10uLL);
      v63 = v345;
      v62 = v346;
      v64 = v456;
      v65 = v451;
      v66 = v458;
      v67 = v437;
      v68 = v352;
      v69 = v446;
      v70 = v499;
      v366 = v437 | (v458 << 8);
      v369 = v352 | (v446 << 8);
      v372 = v346 | (v345 << 8);
      v375 = v451 | (v456 << 8);
      v384 = v279 | (v281 << 8);
      v387 = v277 | (v275 << 8);
      v378 = v290 | (v168 << 8);
      v381 = v288 | (v167 << 8);
      if ((v61 & 0x80000000) == 0)
      {
        __s1 = v437;
        v524 = v458;
        v525 = v499;
        v526 = v503;
        v527 = v443;
        v528 = v493;
        v529 = v292;
        v530 = v490;
        v531 = v352;
        v532 = v446;
        v533 = v350;
        v534 = v348;
        v535 = v347;
        v536 = v485;
        v537 = v483;
        v538 = v481;
        __s2 = v346;
        v508 = v345;
        v509 = v344;
        v510 = v440;
        v511 = v342;
        v512 = v474;
        v513 = v472;
        v514 = v468;
        v515 = v451;
        v516 = v456;
        v517 = v414;
        v518 = v410;
        v519 = v407;
        v520 = v424;
        v521 = v421;
        v522 = v465;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_18;
        __s1 = v346;
        v524 = v345;
        v525 = v344;
        v526 = v440;
        v527 = v342;
        v528 = v474;
        v529 = v472;
        v530 = v468;
        v531 = v451;
        v532 = v456;
        v533 = v414;
        v534 = v410;
        v535 = v407;
        v536 = v424;
        v537 = v421;
        v538 = v465;
        __s2 = v437;
        v508 = v458;
        v509 = v499;
        v510 = v503;
        v511 = v443;
        v512 = v493;
        v513 = v292;
        v514 = v490;
        v515 = v352;
        v516 = v446;
        v517 = v350;
        v518 = v348;
        v519 = v347;
        v520 = v485;
        v521 = v483;
        v522 = v481;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v290;
          v524 = v168;
          v531 = v288;
          v532 = v167;
          __s2 = v279;
          v508 = v281;
          v515 = v277;
          v516 = v275;
          v525 = v267;
          v526 = v164;
          v527 = v262;
          v528 = v260;
          v529 = v258;
          v530 = v163;
          v533 = v253;
          v534 = v162;
          v535 = v248;
          v536 = v246;
          v537 = v244;
          v538 = v242;
          v509 = v240;
          v510 = v238;
          v511 = v236;
          v512 = v234;
          v513 = v232;
          v514 = v230;
          v517 = v228;
          v518 = v226;
          v519 = v224;
          v520 = v222;
          v521 = v220;
          v522 = v218;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_18;
          static UniversalControlUUID.compare(lhs:rhs:)(v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56), v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56));
        }
        __s1 = v346;
        v524 = v345;
        v525 = v344;
        v526 = v440;
        v527 = v342;
        v528 = v474;
        v529 = v472;
        v530 = v468;
        v531 = v451;
        v532 = v456;
        v533 = v414;
        v534 = v410;
        v535 = v407;
        v536 = v424;
        v537 = v421;
        v538 = v465;
        __s2 = v437;
        v508 = v458;
        v509 = v499;
        v510 = v503;
        v511 = v443;
        v512 = v493;
        v513 = v292;
        v514 = v490;
        v515 = v352;
        v516 = v446;
        v517 = v350;
        v518 = v348;
        v519 = v347;
        v520 = v485;
        v521 = v483;
        v522 = v481;
        v78 = memcmp(&__s1, &__s2, 0x10uLL);
        v63 = v345;
        v62 = v346;
        v70 = v499;
        v69 = v446;
        v68 = v352;
        v67 = v437;
        v66 = v458;
        v65 = v451;
        v64 = v456;
        if ((v78 & 0x80000000) == 0)
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v366 | (v499 << 16) | (v503 << 24) | (v443 << 32) | (v493 << 40) | (v292 << 48) | (v490 << 56), v369 | (v350 << 16) | (v348 << 24) | (v347 << 32) | (v485 << 40) | (v483 << 48) | (v481 << 56), v372 | (v344 << 16) | (v440 << 24) | (v342 << 32) | (v474 << 40) | (v472 << 48) | (v468 << 56), v375 | (v414 << 16) | (v410 << 24) | (v407 << 32) | (v424 << 40) | (v421 << 48) | (v465 << 56)) != -1)
          {
            v79 = static UniversalControlUUID.compare(lhs:rhs:)(v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56), v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56));
            v67 = v437;
            v66 = v458;
            v68 = v352;
            v69 = v446;
            v52 = v440;
            v53 = v414;
            v54 = v410;
            v55 = v407;
            v56 = v424;
            v62 = v346;
            v70 = v499;
            v65 = v451;
            v64 = v456;
            v63 = v345;
            if (v79 == -1)
              goto LABEL_30;
            static UniversalControlUUID.compare(lhs:rhs:)(v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56), v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56));
          }
          v67 = v437;
          v66 = v458;
          v68 = v352;
          v69 = v446;
          v52 = v440;
          v53 = v414;
          v54 = v410;
          v55 = v407;
          v56 = v424;
          v62 = v346;
          v70 = v499;
          v65 = v451;
          v64 = v456;
          v63 = v345;
          if (v169 < v200)
            goto LABEL_18;
          if (v200 >= v169 && v283 < v273)
            goto LABEL_18;
        }
      }
LABEL_30:
      v447 = v69;
      v500 = v70;
      v411 = v54;
      v415 = v53;
      v403 = v56;
      __s1 = v62;
      v524 = v63;
      v525 = v344;
      v526 = v52;
      v527 = v342;
      v528 = v474;
      v529 = v472;
      v530 = v468;
      v531 = v65;
      v532 = v64;
      v533 = v53;
      v534 = v54;
      v535 = v55;
      v536 = v56;
      v537 = v421;
      v538 = v465;
      __s2 = v67;
      v508 = v66;
      v509 = v70;
      v510 = v503;
      v511 = v443;
      v512 = v493;
      v513 = v292;
      v514 = v490;
      v515 = v68;
      v516 = v69;
      v517 = v350;
      v518 = v348;
      v519 = v347;
      v520 = v485;
      v521 = v483;
      v522 = v481;
      v71 = v64;
      v72 = v65;
      v73 = v62;
      v74 = v68;
      v75 = v67;
      v76 = v66;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v75;
        v524 = v76;
        v525 = v500;
        v526 = v503;
        v527 = v443;
        v528 = v493;
        v529 = v292;
        v530 = v490;
        v531 = v74;
        v532 = v447;
        v533 = v350;
        v534 = v348;
        v535 = v347;
        v536 = v485;
        v537 = v483;
        v538 = v481;
        __s2 = v73;
        v508 = v63;
        v509 = v344;
        v510 = v52;
        v511 = v342;
        v512 = v474;
        v513 = v472;
        v514 = v468;
        v515 = v72;
        v516 = v71;
        v517 = v415;
        v518 = v411;
        v519 = v55;
        v520 = v403;
        v521 = v421;
        v522 = v465;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_52;
        __s1 = v73;
        v524 = v63;
        v531 = v72;
        v532 = v71;
        __s2 = v75;
        v508 = v76;
        v515 = v74;
        v516 = v447;
        v525 = v344;
        v526 = v52;
        v527 = v342;
        v528 = v474;
        v529 = v472;
        v530 = v468;
        v533 = v415;
        v534 = v411;
        v535 = v55;
        v536 = v403;
        v537 = v421;
        v538 = v465;
        v509 = v500;
        v510 = v503;
        v511 = v443;
        v512 = v493;
        v513 = v292;
        v514 = v490;
        v517 = v350;
        v518 = v348;
        v519 = v347;
        v520 = v485;
        v521 = v483;
        v522 = v481;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v366 | (v500 << 16) | (v503 << 24) | (v443 << 32) | (v493 << 40) | (v292 << 48) | (v490 << 56), v369 | (v350 << 16) | (v348 << 24) | (v347 << 32) | (v485 << 40) | (v483 << 48) | (v481 << 56), v372 | (v344 << 16) | (v52 << 24) | (v342 << 32) | (v474 << 40) | (v472 << 48) | (v468 << 56), v375 | (v415 << 16) | (v411 << 24) | (v55 << 32) | (v403 << 40) | (v421 << 48) | (v465 << 56)) == -1|| (sub_249772148(v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56), v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56)), (v92 & 1) == 0))
          {
            if (((sub_249772148(v366 | (v500 << 16) | (v503 << 24) | (v443 << 32) | (v493 << 40) | (v292 << 48) | (v490 << 56), v369 | (v350 << 16) | (v348 << 24) | (v347 << 32) | (v485 << 40) | (v483 << 48) | (v481 << 56), v372 | (v344 << 16) | (v52 << 24) | (v342 << 32) | (v474 << 40) | (v472 << 48) | (v468 << 56), v375 | (v415 << 16) | (v411 << 24) | (v55 << 32) | (v403 << 40) | (v421 << 48) | (v465 << 56)), v93 != 2)|| (sub_249772148(v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56), v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56)), v93 != 2))&& (v93 & 1) != 0|| v200 >= v169&& (v169 >= v200 ? (v94 = v273 >= v283) : (v94 = 1), v94))
            {
LABEL_52:
              v81 = dword_24983AE80[(char)v169];
              v82 = dword_24983AE80[(char)v200];
              v83 = v325 | (v299 << 8) | (v198 << 16) | (v295 << 24) | (v194 << 32) | (v302 << 40) | (v196 << 48) | (v158 << 56);
              v84 = v192 | (v478 << 8) | (v190 << 16) | (v461 << 24) | (v240 << 32) | (v495 << 40) | (v188 << 48) | (v156 << 56);
              v85 = v354 | (v356 << 8) | (v358 << 16) | (v360 << 24) | (v362 << 32) | (v340 << 40) | (v337 << 48) | (v334 << 56);
              v86 = v331 | (v328 << 8) | (v435 << 16) | (v432 << 24) | (v428 << 32) | (v389 << 40) | (v391 << 48) | (v418 << 56);
              if (static UniversalControlUUID.compare(lhs:rhs:)(v83, v84, v85, v86) == -1)
                goto LABEL_18;
              v501 = v202 | (v204 << 8);
              v502 = v313 | (v210 << 8);
              v504 = v186 | (v270 << 8);
              v87 = v176 | (v286 << 8);
              v88 = v82 | (v323 << 16);
              v89 = v81 | (v497 << 16);
              if (static UniversalControlUUID.compare(lhs:rhs:)(v85, v86, v83, v84) != -1)
              {
                sub_249772148(v83, v84, v85, v86);
                if (v90 != 2
                  || (sub_249772148(v504 | (v184 << 16) | (v265 << 24) | (v182 << 32) | (v180 << 40) | (v178 << 48) | (v256 << 56), v87 | (v174 << 16) | (v251 << 24) | (v172 << 32) | (v171 << 40) | (v170 << 48) | (v476 << 56), v501 | (v304 << 16) | (v305 << 24) | (v206 << 32) | (v307 << 40) | (v310 << 48) | (v208 << 56), v502 | (v316 << 16) | (v212 << 24) | (v319 << 32) | (v214 << 40) | (v321 << 48) | (v216 << 56)), v90 != 2))
                {
                  if ((v90 & 1) != 0)
                    goto LABEL_18;
                }
                if ((sub_249772148(v85, v86, v83, v84), v91 == 2)
                  && (sub_249772148(v501 | (v304 << 16) | (v305 << 24) | (v206 << 32) | (v307 << 40) | (v310 << 48) | (v208 << 56), v502 | (v316 << 16) | (v212 << 24) | (v319 << 32) | (v214 << 40) | (v321 << 48) | (v216 << 56), v504 | (v184 << 16) | (v265 << 24) | (v182 << 32) | (v180 << 40) | (v178 << 48) | (v256 << 56), v87 | (v174 << 16) | (v251 << 24) | (v172 << 32) | (v171 << 40) | (v170 << 48) | (v476 << 56)), v91 == 2)|| (v91 & 1) == 0)
                {
                  if ((sub_24978B990(v89, v88) & 1) != 0)
                    goto LABEL_18;
                }
              }
              if (static UniversalControlUUID.compare(lhs:rhs:)(v85, v86, v83, v84) != -1
                && static UniversalControlUUID.compare(lhs:rhs:)(v83, v84, v85, v86) != -1
                && sub_24978B8C8(v85, v86, v501 | (v304 << 16) | (v305 << 24) | (v206 << 32) | (v307 << 40) | (v310 << 48) | (v208 << 56), v502 | (v316 << 16) | (v212 << 24) | (v319 << 32) | (v214 << 40) | (v321 << 48) | (v216 << 56), v83, v84, v504 | (v184 << 16) | (v265 << 24) | (v182 << 32) | (v180 << 40) | (v178 << 48) | (v256 << 56), v87 | (v174 << 16) | (v251 << 24) | (v172 << 32) | (v171 << 40) | (v170 << 48) | (v476 << 56)) == 2)
              {
                sub_24978B990(v88, v89);
              }
            }
          }
        }
      }
      v57 = __dst;
      v77 = v394 != (unsigned __int8 *)v398 || (unint64_t)__dst >= v398;
      v59 = v159;
      v12 = v159;
      if (!v77)
        goto LABEL_24;
LABEL_23:
      memmove(v57, v59, 0x46uLL);
LABEL_24:
      v14 = v57 - 70;
      if (v12 <= (unsigned __int8 *)v454 || v506 <= v400)
        goto LABEL_139;
    }
  }
  sub_2497AC098(a1, (a2 - a1) / 70, a4);
  v10 = (unsigned __int8 *)&v454[70 * v7];
  if (v6 >= 70 && (unint64_t)v506 < a3)
  {
    v399 = (unint64_t)v10;
    v157 = a3;
    while (1)
    {
      v401 = v5;
      v95 = *v506;
      v96 = v506[1];
      v97 = v506[2];
      v98 = v506[3];
      v99 = v506[4];
      v100 = v506[5];
      v101 = v506[6];
      v102 = v506[7];
      v103 = v506[8];
      v104 = v506[9];
      v105 = v506[10];
      v106 = v506[33];
      v107 = v506[34];
      v108 = v506[35];
      v109 = v506[36];
      v110 = v506[37];
      v111 = v506[38];
      v112 = v506[39];
      v113 = v506[40];
      v114 = v506[41];
      v379 = *v454;
      v453 = v454[1];
      v376 = v454[2];
      v452 = v454[3];
      v373 = v454[4];
      v370 = v454[5];
      v367 = v454[6];
      v363 = v454[7];
      v361 = v454[8];
      v359 = v454[9];
      v475 = v506[32];
      __s1 = v506[32];
      v473 = v106;
      v524 = v106;
      v469 = v107;
      v525 = v107;
      v466 = v108;
      v526 = v108;
      v462 = v109;
      v527 = v109;
      v459 = v110;
      v528 = v110;
      v457 = v111;
      v529 = v111;
      v343 = v112;
      v530 = v112;
      v205 = v114;
      v207 = v113;
      v531 = v113;
      v532 = v114;
      v357 = v454[10];
      v533 = v506[42];
      v115 = v506[11];
      v448 = v454[11];
      v189 = v506[43];
      v534 = v506[43];
      v116 = v506[12];
      v444 = v454[12];
      v187 = v506[44];
      v535 = v506[44];
      v117 = v506[13];
      v441 = v454[13];
      v185 = v506[45];
      v536 = v506[45];
      v118 = v506[14];
      v438 = v454[14];
      v183 = v506[46];
      v537 = v506[46];
      v119 = v506[15];
      v436 = v454[15];
      v181 = v506[47];
      v538 = v506[47];
      v322 = v95;
      __s2 = v95;
      v320 = v96;
      v508 = v96;
      v317 = v97;
      v509 = v97;
      v314 = v98;
      v510 = v98;
      v311 = v99;
      v511 = v99;
      v308 = v100;
      v512 = v100;
      v306 = v101;
      v513 = v101;
      v514 = v102;
      v303 = v103;
      v515 = v103;
      v300 = v104;
      v516 = v104;
      v297 = v105;
      v517 = v105;
      v518 = v115;
      v519 = v116;
      v520 = v117;
      v521 = v118;
      v522 = v119;
      v120 = v506[16];
      v293 = v506[17];
      v257 = v506[18];
      v259 = v506[19];
      v261 = v506[20];
      v263 = v506[21];
      v266 = v506[22];
      v271 = v506[23];
      v291 = v506[24];
      v289 = v506[25];
      v121 = v506[26];
      v268 = v506[27];
      v122 = v506[28];
      v274 = v506[29];
      v123 = v506[30];
      v276 = v506[31];
      v191 = v506[48];
      v193 = v506[49];
      v195 = v506[50];
      v197 = v506[51];
      v199 = v506[52];
      v201 = v506[53];
      v203 = v506[54];
      v479 = v506[55];
      v482 = v506[56];
      v484 = v506[57];
      v486 = v506[58];
      v488 = v506[59];
      v487 = v506[60];
      v177 = v506[61];
      v477 = v506[62];
      v179 = v506[63];
      v175 = v506[64];
      v296 = *((unsigned __int16 *)v506 + 33);
      v489 = *((unsigned __int16 *)v506 + 34);
      v284 = v454[16];
      v282 = v454[17];
      v231 = v454[18];
      v233 = v454[19];
      v235 = v454[20];
      v237 = v454[21];
      v241 = v454[22];
      v245 = v454[23];
      v280 = v454[24];
      v278 = v454[25];
      v239 = v454[26];
      v243 = v454[27];
      v247 = v454[28];
      v249 = v454[29];
      v252 = v454[30];
      v254 = v454[31];
      v382 = v454[32];
      v385 = v454[33];
      v388 = v454[34];
      v390 = v454[35];
      v392 = v454[36];
      v395 = v454[37];
      __dsta = v454[38];
      v404 = v454[39];
      v408 = v454[40];
      v412 = v454[41];
      v416 = v454[42];
      v419 = v454[43];
      v422 = v454[44];
      v425 = v454[45];
      v429 = v454[46];
      v433 = v454[47];
      v324 = v454[48];
      v326 = v454[49];
      v329 = v454[50];
      v211 = v454[51];
      v332 = v454[52];
      v213 = v454[53];
      v215 = v454[54];
      v217 = v454[55];
      v219 = v454[56];
      v221 = v454[57];
      v223 = v454[58];
      v225 = v454[59];
      v227 = v454[60];
      v335 = v454[61];
      v229 = v454[62];
      v338 = v454[63];
      v209 = v454[64];
      v287 = *((unsigned __int16 *)v454 + 33);
      v341 = *((unsigned __int16 *)v454 + 34);
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X14 }
      v355 = v317;
      v353 = v314;
      v351 = v311;
      v349 = v308;
      v498 = v115;
      v494 = v117;
      v496 = v116;
      v491 = v119;
      v492 = v118;
      v173 = v120;
      v166 = v271;
      v165 = v122;
      v318 = v469;
      v315 = v466;
      v312 = v462;
      v309 = v459;
      v272 = v479;
      v160 = v123;
      v161 = v121;
      __s1 = v382;
      v524 = v385;
      v525 = v388;
      v526 = v390;
      v527 = v392;
      v528 = v395;
      v529 = __dsta;
      v530 = v404;
      v531 = v408;
      v532 = v412;
      v533 = v416;
      v534 = v419;
      v535 = v422;
      v536 = v425;
      v537 = v429;
      v538 = v433;
      __s2 = v379;
      v508 = v453;
      v509 = v376;
      v510 = v452;
      v511 = v373;
      v512 = v370;
      v513 = v367;
      v514 = v363;
      v515 = v361;
      v516 = v359;
      v517 = v357;
      v518 = v448;
      v519 = v444;
      v520 = v441;
      v521 = v438;
      v522 = v436;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X8 }
      v480 = v363;
      v470 = v448;
      v467 = v444;
      v463 = v441;
      v460 = v438;
      v364 = v404;
      v449 = v419;
      v445 = v422;
      v442 = v425;
      v439 = v429;
      __s1 = v322;
      v524 = v320;
      v124 = v355;
      v525 = v355;
      v125 = v353;
      v526 = v353;
      v126 = v351;
      v527 = v351;
      v127 = v349;
      v528 = v349;
      v128 = v306;
      v529 = v306;
      v129 = v102;
      v530 = v102;
      v130 = v303;
      v531 = v303;
      v131 = v300;
      v532 = v300;
      v533 = v297;
      v534 = v498;
      v535 = v496;
      v536 = v494;
      v537 = v492;
      v538 = v491;
      v132 = v379;
      __s2 = v379;
      v508 = v453;
      v509 = v376;
      v510 = v452;
      v511 = v373;
      v512 = v370;
      v513 = v367;
      v514 = v480;
      v515 = v361;
      v516 = v359;
      v517 = v357;
      v518 = v470;
      v519 = v467;
      v520 = v463;
      v521 = v460;
      v522 = v436;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_83;
      __s1 = v379;
      v524 = v453;
      v525 = v376;
      v526 = v452;
      v527 = v373;
      v528 = v370;
      v529 = v367;
      v530 = v480;
      v531 = v361;
      v532 = v359;
      v533 = v357;
      v534 = v470;
      v535 = v467;
      v536 = v463;
      v537 = v460;
      v538 = v436;
      __s2 = v322;
      v508 = v320;
      v509 = v355;
      v510 = v353;
      v511 = v351;
      v512 = v349;
      v513 = v306;
      v514 = v102;
      v515 = v303;
      v516 = v300;
      v517 = v297;
      v518 = v498;
      v519 = v496;
      v520 = v494;
      v521 = v492;
      v522 = v491;
      v426 = v284 | (v282 << 8);
      v430 = v280 | (v278 << 8);
      v420 = v173 | (v293 << 8);
      v423 = v291 | (v289 << 8);
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v322;
        v524 = v320;
        v525 = v355;
        v526 = v353;
        v527 = v351;
        v528 = v349;
        v529 = v306;
        v530 = v102;
        v531 = v303;
        v532 = v300;
        v533 = v297;
        v534 = v498;
        v535 = v496;
        v536 = v494;
        v537 = v492;
        v538 = v491;
        __s2 = v379;
        v508 = v453;
        v509 = v376;
        v510 = v452;
        v511 = v373;
        v512 = v370;
        v513 = v367;
        v514 = v480;
        v515 = v361;
        v516 = v359;
        v517 = v357;
        v518 = v470;
        v519 = v467;
        v520 = v463;
        v521 = v460;
        v522 = v436;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_83;
        __s1 = v379;
        v524 = v453;
        v525 = v376;
        v526 = v452;
        v527 = v373;
        v528 = v370;
        v529 = v367;
        v530 = v480;
        v531 = v361;
        v532 = v359;
        v533 = v357;
        v534 = v470;
        v535 = v467;
        v536 = v463;
        v537 = v460;
        v538 = v436;
        __s2 = v322;
        v508 = v320;
        v509 = v355;
        v510 = v353;
        v511 = v351;
        v512 = v349;
        v513 = v306;
        v514 = v102;
        v515 = v303;
        v516 = v300;
        v517 = v297;
        v518 = v498;
        v519 = v496;
        v520 = v494;
        v521 = v492;
        v522 = v491;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v173;
          v524 = v293;
          v531 = v291;
          v532 = v289;
          __s2 = v284;
          v508 = v282;
          v515 = v280;
          v516 = v278;
          v525 = v257;
          v526 = v259;
          v527 = v261;
          v528 = v263;
          v529 = v266;
          v530 = v166;
          v533 = v161;
          v534 = v268;
          v535 = v165;
          v536 = v274;
          v537 = v160;
          v538 = v276;
          v509 = v231;
          v510 = v233;
          v511 = v235;
          v512 = v237;
          v513 = v241;
          v514 = v245;
          v517 = v239;
          v518 = v243;
          v519 = v247;
          v520 = v249;
          v521 = v252;
          v522 = v254;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_83;
        }
        __s1 = v379;
        v524 = v453;
        v525 = v376;
        v526 = v452;
        v527 = v373;
        v528 = v370;
        v529 = v367;
        v530 = v480;
        v531 = v361;
        v532 = v359;
        v533 = v357;
        v534 = v470;
        v535 = v467;
        v536 = v463;
        v537 = v460;
        v538 = v436;
        __s2 = v322;
        v508 = v320;
        v509 = v355;
        v510 = v353;
        v511 = v351;
        v512 = v349;
        v513 = v306;
        v514 = v102;
        v515 = v303;
        v516 = v300;
        v517 = v297;
        v518 = v498;
        v519 = v496;
        v520 = v494;
        v521 = v492;
        v522 = v491;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v322;
          v524 = v320;
          v525 = v355;
          v526 = v353;
          v527 = v351;
          v528 = v349;
          v529 = v306;
          v530 = v102;
          v531 = v303;
          v532 = v300;
          v533 = v297;
          v534 = v498;
          v535 = v496;
          v536 = v494;
          v537 = v492;
          v538 = v491;
          __s2 = v379;
          v508 = v453;
          v509 = v376;
          v510 = v452;
          v511 = v373;
          v512 = v370;
          v513 = v367;
          v514 = v480;
          v515 = v361;
          v516 = v359;
          v517 = v357;
          v518 = v470;
          v519 = v467;
          v520 = v463;
          v521 = v460;
          v522 = v436;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_105;
          v405 = v423 | (v161 << 16) | (v268 << 24) | (v165 << 32) | (v274 << 40) | (v160 << 48) | (v276 << 56);
          v124 = v355;
          v125 = v353;
          v126 = v351;
          v127 = v349;
          v128 = v306;
          v129 = v102;
          v130 = v303;
          v131 = v300;
          v132 = v379;
          if (static UniversalControlUUID.compare(lhs:rhs:)(v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56), v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v405) != -1)break;
        }
      }
LABEL_92:
      __s1 = v132;
      v524 = v453;
      v525 = v376;
      v526 = v452;
      v527 = v373;
      v528 = v370;
      v529 = v367;
      v530 = v480;
      v531 = v361;
      v532 = v359;
      v533 = v357;
      v534 = v470;
      v535 = v467;
      v536 = v463;
      v537 = v460;
      v538 = v436;
      __s2 = v322;
      v508 = v320;
      v509 = v124;
      v510 = v125;
      v511 = v126;
      v512 = v127;
      v513 = v128;
      v514 = v129;
      v515 = v130;
      v516 = v131;
      v517 = v297;
      v518 = v498;
      v519 = v496;
      v520 = v494;
      v521 = v492;
      v522 = v491;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_93;
      __s1 = v322;
      v524 = v320;
      v525 = v124;
      v526 = v125;
      v527 = v126;
      v528 = v127;
      v529 = v128;
      v530 = v129;
      v531 = v130;
      v532 = v131;
      v533 = v297;
      v534 = v498;
      v535 = v496;
      v536 = v494;
      v537 = v492;
      v538 = v491;
      __s2 = v132;
      v508 = v453;
      v509 = v376;
      v510 = v452;
      v511 = v373;
      v512 = v370;
      v513 = v367;
      v514 = v480;
      v515 = v361;
      v516 = v359;
      v517 = v357;
      v518 = v470;
      v519 = v467;
      v520 = v463;
      v521 = v460;
      v522 = v436;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v132;
        v524 = v453;
        v525 = v376;
        v526 = v452;
        v527 = v373;
        v528 = v370;
        v529 = v367;
        v530 = v480;
        v531 = v361;
        v532 = v359;
        v533 = v357;
        v534 = v470;
        v535 = v467;
        v536 = v463;
        v537 = v460;
        v538 = v436;
        __s2 = v322;
        v508 = v320;
        v509 = v124;
        v510 = v125;
        v511 = v126;
        v512 = v127;
        v513 = v128;
        v514 = v129;
        v515 = v130;
        v516 = v131;
        v517 = v297;
        v518 = v498;
        v519 = v496;
        v520 = v494;
        v521 = v492;
        v522 = v491;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_93;
        __s1 = v322;
        v524 = v320;
        v525 = v124;
        v526 = v125;
        v527 = v126;
        v528 = v127;
        v529 = v128;
        v530 = v129;
        v531 = v130;
        v532 = v131;
        v533 = v297;
        v534 = v498;
        v535 = v496;
        v536 = v494;
        v537 = v492;
        v538 = v491;
        __s2 = v132;
        v508 = v453;
        v509 = v376;
        v510 = v452;
        v511 = v373;
        v512 = v370;
        v513 = v367;
        v514 = v480;
        v515 = v361;
        v516 = v359;
        v517 = v357;
        v518 = v470;
        v519 = v467;
        v520 = v463;
        v521 = v460;
        v522 = v436;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          sub_249772148(v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56), v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v423 | (v161 << 16) | (v268 << 24) | (v165 << 32) | (v274 << 40) | (v160 << 48) | (v276 << 56));
          if ((v152 & 1) != 0)
            goto LABEL_93;
        }
        if ((sub_249772148(v322 | (v320 << 8) | (v124 << 16) | (v125 << 24) | (v126 << 32) | (v127 << 40) | (v128 << 48) | (v129 << 56), v130 | (v131 << 8) | (v297 << 16) | (v498 << 24) | (v496 << 32) | (v494 << 40) | (v492 << 48) | (v491 << 56), v132 | (v453 << 8) | (v376 << 16) | (v452 << 24) | (v373 << 32) | (v370 << 40) | (v367 << 48) | (v480 << 56), v361 | (v359 << 8) | (v357 << 16) | (v470 << 24) | (v467 << 32) | (v463 << 40) | (v460 << 48) | (v436 << 56)), v153 == 2)&& (sub_249772148(v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v423 | (v161 << 16) | (v268 << 24) | (v165 << 32) | (v274 << 40) | (v160 << 48) | (v276 << 56), v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56)), v153 == 2)|| (v153 & 1) == 0)
        {
          if (v209 < v175)
            goto LABEL_93;
          if (v175 >= v209 && v287 < v296)
            goto LABEL_93;
        }
      }
      v139 = dword_24983AE80[(char)v175];
      v140 = dword_24983AE80[(char)v209];
      __s1 = v475;
      v524 = v473;
      v525 = v318;
      v526 = v315;
      v527 = v312;
      v528 = v309;
      v529 = v457;
      v530 = v343;
      v531 = v207;
      v532 = v205;
      v533 = v245;
      v534 = v189;
      v535 = v187;
      v536 = v185;
      v537 = v183;
      v538 = v181;
      __s2 = v382;
      v508 = v385;
      v509 = v388;
      v510 = v390;
      v511 = v392;
      v512 = v395;
      v513 = __dsta;
      v514 = v364;
      v515 = v408;
      v516 = v412;
      v517 = v416;
      v518 = v449;
      v519 = v445;
      v520 = v442;
      v521 = v439;
      v522 = v433;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        v141 = v382 | (v385 << 8) | (v388 << 16) | (v390 << 24) | (v392 << 32) | (v395 << 40) | (__dsta << 48) | (v364 << 56);
        v142 = v408 | (v412 << 8) | (v416 << 16) | (v449 << 24) | (v445 << 32) | (v442 << 40) | (v439 << 48) | (v433 << 56);
        v143 = v475 | (v473 << 8) | (v318 << 16) | (v315 << 24) | (v312 << 32) | (v309 << 40) | (v457 << 48) | (v343 << 56);
        v144 = v207 | (v205 << 8) | (v245 << 16) | (v189 << 24) | (v187 << 32) | (v185 << 40) | (v183 << 48) | (v181 << 56);
        v145 = v324 | (v326 << 8);
        v146 = v219 | (v221 << 8);
        v147 = v191 | (v193 << 8);
        v505 = v482 | (v484 << 8);
        v148 = v140 | (v341 << 16);
        v149 = v139 | (v489 << 16);
        if (static UniversalControlUUID.compare(lhs:rhs:)(v141, v142, v143, v144) == -1
          || ((sub_249772148(v143, v144, v141, v142), v150 == 2)
           && (sub_249772148(v147 | (v195 << 16) | (v197 << 24) | (v199 << 32) | (v201 << 40) | (v203 << 48) | (v272 << 56), v505 | (v486 << 16) | (v488 << 24) | (v487 << 32) | (v177 << 40) | (v477 << 48) | (v179 << 56), v145 | (v329 << 16) | (v211 << 24) | (v332 << 32) | (v213 << 40) | (v215 << 48) | (v217 << 56), v146 | (v223 << 16) | (v225 << 24) | (v227 << 32) | (v335 << 40) | (v229 << 48) | (v338 << 56)), v150 == 2)|| (v150 & 1) == 0)&& (((sub_249772148(v141, v142, v143, v144), v151 != 2)|| (sub_249772148(v145 | (v329 << 16) | (v211 << 24) | (v332 << 32) | (v213 << 40) | (v215 << 48) | (v217 << 56), v146 | (v223 << 16) | (v225 << 24) | (v227 << 32) | (v335 << 40) | (v229 << 48) | (v338 << 56), v147 | (v195 << 16) | (v197 << 24) | (v199 << 32) | (v201 << 40) | (v203 << 48) | (v272 << 56), v505 | (v486 << 16) | (v488 << 24) | (v487 << 32) | (v177 << 40) | (v477 << 48) | (v179 << 56)), v151 != 2))&& (v151 & 1) != 0|| (sub_24978B990(v149, v148) & 1) == 0))
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v141, v142, v143, v144) != -1
            && static UniversalControlUUID.compare(lhs:rhs:)(v143, v144, v141, v142) != -1
            && sub_24978B8C8(v141, v142, v145 | (v329 << 16) | (v211 << 24) | (v332 << 32) | (v213 << 40) | (v215 << 48) | (v217 << 56), v146 | (v223 << 16) | (v225 << 24) | (v227 << 32) | (v335 << 40) | (v229 << 48) | (v338 << 56), v143, v144, v147 | (v195 << 16) | (v197 << 24) | (v199 << 32) | (v201 << 40) | (v203 << 48) | (v272 << 56), v505 | (v486 << 16) | (v488 << 24) | (v487 << 32) | (v177 << 40) | (v477 << 48) | (v179 << 56)) == 2)
          {
            sub_24978B990(v148, v149);
          }
LABEL_93:
          v134 = v401;
          v133 = v454;
          v137 = v401 != v454 || v401 >= v454 + 70;
          v454 += 70;
          if (!v137)
            goto LABEL_85;
LABEL_84:
          memmove(v134, v133, 0x46uLL);
          goto LABEL_85;
        }
      }
LABEL_83:
      v133 = v506;
      v134 = v401;
      v135 = v401 == v506;
      v506 += 70;
      if (!v135)
        goto LABEL_84;
LABEL_85:
      v5 = v134 + 70;
      if ((unint64_t)v454 >= v399 || (unint64_t)v506 >= v157)
      {
        sub_2497AC098(v454, (uint64_t)(v399 - (_QWORD)v454) / 70, v5);
        return 1;
      }
    }
    static UniversalControlUUID.compare(lhs:rhs:)(v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v405, v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56));
LABEL_105:
    v124 = v355;
    v125 = v353;
    v126 = v351;
    v127 = v349;
    v128 = v306;
    v129 = v102;
    v130 = v303;
    v131 = v300;
    v132 = v379;
    if (v175 < v209)
      goto LABEL_83;
    if (v209 >= v175 && v296 < v287)
      goto LABEL_83;
    goto LABEL_92;
  }
  sub_2497AC098(v454, (v10 - (unsigned __int8 *)v454) / 70, v5);
  return 1;
}

uint64_t sub_2497E4B64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_14_8();
  if (!result || (result = sub_249836838(), !__OFSUB__(v1, result)))
  {
    if (!__OFSUB__(v0, v1))
    {
      sub_24983682C();
      OUTLINED_FUNCTION_19_10();
      sub_249759088(&qword_257881F00, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_249836C10();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_2497E4C14(uint64_t a1, double a2, double a3)
{
  _QWORD *result;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  __int128 *v18;
  uint64_t v19;
  double v20;
  double v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819F8);
  result = (_QWORD *)sub_24983733C();
  v7 = 0;
  v8 = a1 + 64;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a1 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v13 | (v7 << 6); ; i = __clz(__rbit64(v16)) + (v7 << 6))
  {
    v18 = (__int128 *)(*(_QWORD *)(a1 + 48) + 32 * i);
    v19 = *(_QWORD *)(a1 + 56) + 32 * i;
    v20 = *(double *)v19 - a2;
    v21 = *(double *)(v19 + 8) - a3;
    v22 = (_OWORD *)(result[6] + 32 * i);
    v23 = *v18;
    v24 = v18[1];
    v25 = *(_OWORD *)(v19 + 16);
    *(_QWORD *)((char *)result + ((i >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << i;
    *v22 = v23;
    v22[1] = v24;
    v26 = result[7] + 32 * i;
    *(double *)v26 = v20;
    *(double *)(v26 + 8) = v21;
    *(_OWORD *)(v26 + 16) = v25;
    v27 = result[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    result[2] = v29;
    if (v11)
      goto LABEL_4;
LABEL_5:
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_24;
    if (v15 >= v12)
      return result;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        return result;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          return result;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_18:
    v11 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    return result;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      return result;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_2497E4DC4()
{
  unint64_t result;

  result = qword_257881E70;
  if (!qword_257881E70)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BFE4, &type metadata for UniversalControlDisplayLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881E70);
  }
  return result;
}

void sub_2497E4E00(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  if (!*a1)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v8 = a3();
    atomic_store(MEMORY[0x24BCF8F94](a4, v7, &v8), a1);
  }
  OUTLINED_FUNCTION_12_2();
}

unint64_t sub_2497E4E58()
{
  unint64_t result;

  result = qword_257881E98;
  if (!qword_257881E98)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlLink, &type metadata for UniversalControlLink);
    atomic_store(result, (unint64_t *)&qword_257881E98);
  }
  return result;
}

unint64_t sub_2497E4E94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257881EA8;
  if (!qword_257881EA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257881EA0);
    v2[0] = sub_24979EE5C();
    v2[1] = sub_249759088(&qword_257881EB0, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257881EA8);
  }
  return result;
}

unint64_t sub_2497E4F18()
{
  unint64_t result;

  result = qword_257881ED0;
  if (!qword_257881ED0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlLink, &type metadata for UniversalControlLink);
    atomic_store(result, (unint64_t *)&qword_257881ED0);
  }
  return result;
}

unint64_t sub_2497E4F54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_257881ED8;
  if (!qword_257881ED8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257881EA0);
    v2[0] = sub_24979EE20();
    v2[1] = sub_249759088(&qword_257881EE0, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_257881ED8);
  }
  return result;
}

uint64_t destroy for UniversalControlDisplayLayout()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UniversalControlDisplayLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UniversalControlDisplayLayout(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 21) = *(_BYTE *)(a2 + 21);
  *(_BYTE *)(a1 + 22) = *(_BYTE *)(a2 + 22);
  *(_BYTE *)(a1 + 23) = *(_BYTE *)(a2 + 23);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_BYTE *)(a1 + 27) = *(_BYTE *)(a2 + 27);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  *(_BYTE *)(a1 + 30) = *(_BYTE *)(a2 + 30);
  *(_BYTE *)(a1 + 31) = *(_BYTE *)(a2 + 31);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  *(_BYTE *)(a1 + 38) = *(_BYTE *)(a2 + 38);
  *(_BYTE *)(a1 + 39) = *(_BYTE *)(a2 + 39);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for UniversalControlDisplayLayout(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalControlDisplayLayout(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlDisplayLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlDisplayLayout()
{
  return &type metadata for UniversalControlDisplayLayout;
}

uint64_t getEnumTagSinglePayload for UniversalControlDisplayLayout.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlDisplayLayout.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2497E53D4 + 4 * byte_24983BE6B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2497E5408 + 4 * byte_24983BE66[v4]))();
}

uint64_t sub_2497E5408(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2497E5410(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2497E5418);
  return result;
}

uint64_t sub_2497E5424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2497E542CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2497E5430(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2497E5438(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlDisplayLayout.CodingKeys()
{
  return &type metadata for UniversalControlDisplayLayout.CodingKeys;
}

unint64_t sub_2497E5458()
{
  unint64_t result;

  result = qword_257881EE8;
  if (!qword_257881EE8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BFBC, &type metadata for UniversalControlDisplayLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881EE8);
  }
  return result;
}

unint64_t sub_2497E5498()
{
  unint64_t result;

  result = qword_257881EF0;
  if (!qword_257881EF0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BF2C, &type metadata for UniversalControlDisplayLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881EF0);
  }
  return result;
}

unint64_t sub_2497E54D8()
{
  unint64_t result;

  result = qword_257881EF8;
  if (!qword_257881EF8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983BF54, &type metadata for UniversalControlDisplayLayout.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881EF8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_20()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748C10(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_17()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748BCC(v1, v0);
}

void OUTLINED_FUNCTION_2_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, int a11, char a12, int a13, char a14, int a15, char a16, int a17, char a18, int a19, char a20,int a21,char a22,int a23,char a24,int a25,char a26,int a27,char a28,int a29,char a30)
{
  char v30;
  char v31;
  char v32;
  uint64_t v33;

  *(_BYTE *)(v33 - 112) = v32;
  *(_BYTE *)(v33 - 111) = a10;
  *(_BYTE *)(v33 - 110) = a12;
  *(_BYTE *)(v33 - 109) = a14;
  *(_BYTE *)(v33 - 108) = v30;
  *(_BYTE *)(v33 - 107) = a16;
  *(_BYTE *)(v33 - 106) = a18;
  *(_BYTE *)(v33 - 105) = a20;
  *(_BYTE *)(v33 - 104) = v31;
  *(_BYTE *)(v33 - 103) = a22;
  *(_BYTE *)(v33 - 102) = a24;
  *(_BYTE *)(v33 - 101) = a26;
  *(_BYTE *)(v33 - 100) = a28;
  *(_BYTE *)(v33 - 99) = a30;
}

uint64_t OUTLINED_FUNCTION_4_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_5_13()
{
  return sub_249837438();
}

uint64_t OUTLINED_FUNCTION_6_8()
{
  return sub_2498374F8();
}

uint64_t OUTLINED_FUNCTION_9_11(const void *a1, uint64_t a2, size_t a3)
{
  const void *v3;

  return memcmp(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_11_9()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748C10(v1, v0);
}

uint64_t OUTLINED_FUNCTION_13_9()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_14_8()
{
  return sub_249836820();
}

uint64_t OUTLINED_FUNCTION_19_10()
{
  return sub_249836C7C();
}

uint64_t OUTLINED_FUNCTION_20_8()
{
  return sub_2497E4B64();
}

uint64_t OUTLINED_FUNCTION_21_8()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_22_9(unint64_t *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t *v4;

  sub_2497E4E00(a1, v4, a3, a4);
}

uint64_t OUTLINED_FUNCTION_25_6(const void *a1, const void *a2)
{
  size_t v2;

  return memcmp(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_26_7()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748BCC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_30_5()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0(v0);
}

void Preferences.Domain.init(app:user:host:)()
{
  sub_249836D18();
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_81();
}

void sub_2497E5684(uint64_t a1, uint64_t a2, const __CFString *a3)
{
  sub_2497E56A8(a1, a2, a3);
}

void sub_2497E5690(uint64_t a1, uint64_t a2, const __CFString *a3)
{
  sub_2497E56A8(a1, a2, a3);
}

void sub_2497E569C(uint64_t a1, uint64_t a2, const __CFString *a3)
{
  sub_2497E56A8(a1, a2, a3);
}

void sub_2497E56A8(uint64_t a1, uint64_t a2, const __CFString *a3)
{
  __CFString *v4;
  CFPropertyListRef v5;

  v4 = (__CFString *)sub_249836D18();
  v5 = CFPreferencesCopyAppValue(v4, a3);

  if (v5)
  {
    objc_opt_self();
    if (!swift_dynamicCastObjCClass())
      swift_unknownObjectRelease();
  }
  OUTLINED_FUNCTION_81();
}

uint64_t Preferences.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, const __CFString *a4)
{
  __CFString *v5;
  CFPropertyListRef v6;
  uint64_t v8;

  v5 = (__CFString *)sub_249836D18();
  v6 = CFPreferencesCopyAppValue(v5, a4);

  if (!v6)
    return 0;
  if (swift_dynamicCast())
    return v8;
  return 0;
}

void sub_2497E5790()
{
  id v0;
  __CFString *v1;
  id v2;

  OUTLINED_FUNCTION_22_10();
  v2 = v0;
  v1 = (__CFString *)OUTLINED_FUNCTION_19_11();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_10_7(v1, v2);

}

void Preferences.subscript.setter(const void *a1)
{
  __CFString *v2;

  swift_unknownObjectRetain();
  v2 = (__CFString *)OUTLINED_FUNCTION_19_11();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_10_7(v2, a1);

  swift_unknownObjectRelease_n();
  OUTLINED_FUNCTION_10_0();
}

Swift::Bool __swiftcall Preferences.synchronize()()
{
  const __CFString *v0;
  const __CFString *v1;
  const __CFString *v2;

  return CFPreferencesSynchronize(v0, v1, v2) != 0;
}

void Preferences.init(app:)()
{
  void *v0;
  id v1;
  id v2;

  sub_249836D18();
  swift_bridgeObjectRelease();
  v0 = (void *)*MEMORY[0x24BDBD570];
  v1 = (id)*MEMORY[0x24BDBD590];
  v2 = v0;
  OUTLINED_FUNCTION_81();
}

void Preferences.publisher(for:)(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  os_unfair_lock_t *v13;
  os_unfair_lock_s *v14;

  v9 = qword_25787F6D0;
  v10 = a3;
  v11 = a4;
  v12 = a5;
  OUTLINED_FUNCTION_24();
  if (v9 != -1)
    swift_once();
  v13 = (os_unfair_lock_t *)off_257881F08;
  v14 = (os_unfair_lock_s *)*((_QWORD *)off_257881F08 + 2);
  swift_retain();
  os_unfair_lock_lock(v14);
  sub_2497E631C(a1, a2);
  os_unfair_lock_unlock(v13[2]);
  swift_release();
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDA8);
  sub_24974DEBC(&qword_25787FDB0, &qword_25787FDA8, MEMORY[0x24BDB97C8]);
  sub_249836BB0();
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_13_10();
}

void Preferences.domain.getter(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  OUTLINED_FUNCTION_81();
}

CFPropertyListRef Preferences.subscript.getter(uint64_t a1, uint64_t a2, const __CFString *a3)
{
  __CFString *v4;
  CFPropertyListRef v5;

  v4 = (__CFString *)sub_249836D18();
  v5 = CFPreferencesCopyAppValue(v4, a3);

  return v5;
}

uint64_t Preferences.subscript.setter(const void *a1)
{
  __CFString *v2;

  v2 = (__CFString *)sub_249836D18();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_10_7(v2, a1);

  return swift_unknownObjectRelease();
}

void (*Preferences.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, const __CFString *a5, uint64_t a6, uint64_t a7, uint64_t a8))()
{
  _QWORD *v16;
  uint64_t v17;

  v16 = malloc(0x40uLL);
  *a1 = v16;
  v16[6] = a7;
  v16[7] = a8;
  v16[4] = a5;
  v16[5] = a6;
  v16[2] = a3;
  v16[3] = a4;
  v16[1] = a2;
  *v16 = Preferences.subscript.getter(a2, a3, v17, a5);
  return sub_2497E5B6C;
}

void sub_2497E5B6C()
{
  void **v0;
  void *v1;
  char v2;

  OUTLINED_FUNCTION_15_8();
  v1 = *v0;
  if ((v2 & 1) != 0)
  {
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_11_10();
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_11_10();
  }
  OUTLINED_FUNCTION_8_14(v1);
}

CFPropertyListRef sub_2497E5BC8@<X0>(const __CFString **a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  CFPropertyListRef result;

  result = Preferences.subscript.getter(*a2, a2[1], *a1);
  *a3 = result;
  return result;
}

uint64_t sub_2497E5BF4(const void **a1)
{
  const void *v1;

  v1 = *a1;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return Preferences.subscript.setter(v1);
}

void Preferences.subscript.modify()
{
  uint64_t v0;
  uint64_t v1;
  const __CFString *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  __CFString *v7;
  CFPropertyListRef v8;

  OUTLINED_FUNCTION_15_8();
  v6 = OUTLINED_FUNCTION_9_12();
  *v5 = v6;
  v6[4] = v1;
  v6[5] = v0;
  v6[2] = v3;
  v6[3] = v2;
  v6[1] = v4;
  v7 = (__CFString *)OUTLINED_FUNCTION_19_11();
  v8 = CFPreferencesCopyAppValue(v7, v2);

  *v6 = v8;
  OUTLINED_FUNCTION_13_1();
}

{
  uint64_t v0;
  uint64_t v1;
  const __CFString *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  OUTLINED_FUNCTION_15_8();
  v6 = OUTLINED_FUNCTION_9_12();
  *v5 = v6;
  v6[3] = v1;
  v6[4] = v0;
  v6[1] = v3;
  v6[2] = v2;
  *v6 = v4;
  *((_BYTE *)v6 + 40) = Preferences.subscript.getter(v4, v3, v2);
  OUTLINED_FUNCTION_13_1();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  const __CFString *v3;
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_15_8();
  v0 = OUTLINED_FUNCTION_3_14();
  v1 = OUTLINED_FUNCTION_1_18(v0);
  Preferences.subscript.getter(v1, v2, v3);
  OUTLINED_FUNCTION_21_9(v4, v5);
  OUTLINED_FUNCTION_13_1();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  const __CFString *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_15_8();
  v0 = OUTLINED_FUNCTION_3_14();
  v1 = OUTLINED_FUNCTION_1_18(v0);
  Preferences.subscript.getter(v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_21_9(v6, v7);
  OUTLINED_FUNCTION_13_1();
}

{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  const __CFString *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_15_8();
  v0 = OUTLINED_FUNCTION_3_14();
  v1 = OUTLINED_FUNCTION_1_18(v0);
  Preferences.subscript.getter(v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_21_9(v6, v7);
  OUTLINED_FUNCTION_13_1();
}

{
  uint64_t v0;
  uint64_t v1;
  const __CFString *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_15_8();
  OUTLINED_FUNCTION_7_15();
  v5 = v4;
  v7 = v6;
  v8 = malloc(0x38uLL);
  *v7 = v8;
  v8[5] = v1;
  v8[6] = v0;
  v8[3] = v3;
  v8[4] = v2;
  v8[2] = v5;
  sub_2497E56A8(v5, v3, v2);
  if (v9)
  {
    v10 = v9;
    v11 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  *v8 = v11;
  v8[1] = v13;
  OUTLINED_FUNCTION_13_1();
}

void sub_2497E5CB0()
{
  void **v0;
  void *v1;
  char v2;
  void *v3;
  void *v4;

  OUTLINED_FUNCTION_15_8();
  v1 = *v0;
  if ((v2 & 1) != 0)
  {
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_65_2();
    v3 = (void *)OUTLINED_FUNCTION_25_7();
    OUTLINED_FUNCTION_36_5();
    OUTLINED_FUNCTION_16_8();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_65_2();
    v4 = (void *)OUTLINED_FUNCTION_25_7();
    OUTLINED_FUNCTION_36_5();
    OUTLINED_FUNCTION_16_8();
    swift_unknownObjectRelease();

  }
  OUTLINED_FUNCTION_8_14(v1);
}

uint64_t Preferences.subscript.getter(uint64_t a1, uint64_t a2, const __CFString *a3)
{
  void *v3;
  void *v4;
  uint64_t result;
  unsigned __int8 v6;

  sub_2497E56A8(a1, a2, a3);
  v4 = v3;
  result = 2;
  if (v4)
  {
    v6 = 2;
    MEMORY[0x24BCF7EB4](v4, &v6);

    return v6;
  }
  return result;
}

{
  void *v3;
  void *v4;
  uint64_t v5;

  sub_2497E56A8(a1, a2, a3);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();

  return v5;
}

void Preferences.subscript.setter()
{
  char v0;

  OUTLINED_FUNCTION_22_10();
  if (v0 != 2)
    sub_249836EE0();
  OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_10_0();
}

{
  char v0;

  OUTLINED_FUNCTION_7_15();
  if ((v0 & 1) == 0)
    sub_249836EF8();
  OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_10_0();
}

{
  sub_2497E6070();
}

{
  sub_2497E6070();
}

{
  uint64_t v0;

  OUTLINED_FUNCTION_15_8();
  OUTLINED_FUNCTION_7_15();
  if (v0)
  {
    sub_249836D18();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_2_20();
}

void sub_2497E5E2C(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  if (*(_BYTE *)(*(_QWORD *)a1 + 40) == 2)
  {
    OUTLINED_FUNCTION_24();
  }
  else
  {
    OUTLINED_FUNCTION_24();
    sub_249836EE0();
  }
  sub_2497E5790();
  OUTLINED_FUNCTION_27_5(v1);
}

void Preferences.subscript.getter(uint64_t a1, uint64_t a2, const __CFString *a3)
{
  void *v3;
  void *v4;
  uint64_t v5;
  char v6;

  sub_2497E56A8(a1, a2, a3);
  if (v3)
  {
    v4 = v3;
    v5 = 0;
    v6 = 1;
    MEMORY[0x24BCF7ED8](v3, &v5);

  }
  OUTLINED_FUNCTION_31_2();
}

void sub_2497E5F54(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  if ((*(_BYTE *)(*(_QWORD *)a1 + 8) & 1) != 0)
  {
    OUTLINED_FUNCTION_24();
  }
  else
  {
    OUTLINED_FUNCTION_24();
    sub_249836EF8();
  }
  OUTLINED_FUNCTION_17_9();
  free(v1);
}

void Preferences.subscript.getter(uint64_t a1, uint64_t a2, const __CFString *a3, uint64_t a4, uint64_t a5)
{
  sub_2497E6014(a1, a2, a3, a4, a5, MEMORY[0x24BDCFD38]);
}

{
  sub_2497E6014(a1, a2, a3, a4, a5, MEMORY[0x24BDD04A8]);
}

void sub_2497E5FFC(uint64_t **a1, uint64_t a2)
{
  sub_2497E60EC(a1, a2, (void (*)(uint64_t))MEMORY[0x24BDCFD28]);
}

void sub_2497E6014(uint64_t a1, uint64_t a2, const __CFString *a3, uint64_t a4, uint64_t a5, void (*a6)(void *, uint64_t *))
{
  void *v7;
  void *v8;
  uint64_t v9;
  char v10;

  sub_2497E56A8(a1, a2, a3);
  if (v7)
  {
    v8 = v7;
    v9 = 0;
    v10 = 1;
    a6(v7, &v9);

  }
  OUTLINED_FUNCTION_31_2();
}

void sub_2497E6070()
{
  void (*v0)(void);
  char v1;

  OUTLINED_FUNCTION_7_15();
  if ((v1 & 1) == 0)
    v0();
  OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_10_0();
}

void sub_2497E60E0(uint64_t **a1, uint64_t a2)
{
  sub_2497E60EC(a1, a2, MEMORY[0x24BDD0498]);
}

void sub_2497E60EC(uint64_t **a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t *v4;
  uint64_t v5;

  v4 = *a1;
  if (((*a1)[1] & 1) != 0)
  {
    OUTLINED_FUNCTION_24();
  }
  else
  {
    v5 = *v4;
    OUTLINED_FUNCTION_24();
    a3(v5);
  }
  OUTLINED_FUNCTION_17_9();
  OUTLINED_FUNCTION_27_5(v4);
}

void sub_2497E628C(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_24();
    if (v3)
    {
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_31_8();
      OUTLINED_FUNCTION_20_9();
    }
    OUTLINED_FUNCTION_12_9();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_24();
    if (v3)
    {
      OUTLINED_FUNCTION_31_8();
      OUTLINED_FUNCTION_20_9();
    }
    OUTLINED_FUNCTION_12_9();
  }
  OUTLINED_FUNCTION_27_5(v2);
}

uint64_t sub_2497E631C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v4 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  v6 = v5;
  if (qword_25787F6D8 != -1)
    swift_once();
  swift_beginAccess();
  v7 = off_257881F10;
  OUTLINED_FUNCTION_138();
  v8 = (id)sub_2497A08D8(v4, v6, (uint64_t)v7);
  swift_endAccess();
  OUTLINED_FUNCTION_16_0();
  if (!v8)
  {
    v9 = objc_allocWithZone((Class)type metadata accessor for Preferences.KVOProxy());
    OUTLINED_FUNCTION_138();
    sub_2497E6818(v4, v6);
    v11 = v10;
    swift_beginAccess();
    OUTLINED_FUNCTION_138();
    v8 = v11;
    sub_24974B4D4((uint64_t)v8, v4, v6);
    swift_endAccess();
    OUTLINED_FUNCTION_16_0();
    if (qword_25787F6D0 != -1)
      swift_once();
    os_unfair_lock_assert_owner(*((const os_unfair_lock **)off_257881F08 + 2));
  }
  OUTLINED_FUNCTION_16_0();
  v12 = sub_2497E649C(a1, a2);

  return v12;
}

uint64_t sub_2497E649C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v12;
  char v13;

  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtCV16UniversalControl11PreferencesP33_E97794F8E31B248CD291BA178D3BF85D8KVOProxy___lock];
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  v7 = v2;
  OUTLINED_FUNCTION_65_2();
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_2497E69B4((uint64_t)v7, a1, a2, (uint64_t)&v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  OUTLINED_FUNCTION_36_5();

  OUTLINED_FUNCTION_65();
  v8 = v12;
  if ((v13 & 1) != 0)
  {
    v9 = *(void **)&v7[OBJC_IVAR____TtCV16UniversalControl11PreferencesP33_E97794F8E31B248CD291BA178D3BF85D8KVOProxy_userDefaults];
    v10 = (void *)OUTLINED_FUNCTION_25_7();
    objc_msgSend(v9, sel_addObserver_forKeyPath_options_context_, v7, v10, 0, swift_getObjectType());

  }
  return v8;
}

_DWORD *sub_2497E6590()
{
  uint64_t v0;
  _DWORD *result;

  type metadata accessor for UnfairLock();
  v0 = OUTLINED_FUNCTION_33_8();
  result = (_DWORD *)OUTLINED_FUNCTION_32_7();
  *result = 0;
  *(_QWORD *)(v0 + 16) = result;
  off_257881F08 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_2497E65D4()
{
  return 0;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for Preferences()
{
  return &type metadata for Preferences;
}

_QWORD *initializeBufferWithCopyOfBuffer for Preferences.Domain(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for Preferences.Domain(id *a1)
{

}

void _s16UniversalControl11PreferencesV6DomainVwca_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  OUTLINED_FUNCTION_81();
}

uint64_t assignWithTake for Preferences.Domain(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t _s16UniversalControl11PreferencesV6DomainVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2497E6774(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Preferences.Domain()
{
  return &type metadata for Preferences.Domain;
}

void *sub_2497E67C4()
{
  void *result;

  type metadata accessor for Preferences.KVOProxy();
  result = (void *)sub_249836CA0();
  off_257881F10 = result;
  return result;
}

void sub_2497E6804()
{
  uint64_t v0;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0
                                                                   + OBJC_IVAR____TtCV16UniversalControl11PreferencesP33_E97794F8E31B248CD291BA178D3BF85D8KVOProxy___lock)
                                                       + 16));
}

void sub_2497E6818(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _DWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  id v16;
  id v17;
  id v18;
  objc_super v19;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = OBJC_IVAR____TtCV16UniversalControl11PreferencesP33_E97794F8E31B248CD291BA178D3BF85D8KVOProxy___lock;
  type metadata accessor for UnfairLock();
  v8 = OUTLINED_FUNCTION_33_8();
  v9 = v3;
  v10 = (_DWORD *)OUTLINED_FUNCTION_32_7();
  *v10 = 0;
  *(_QWORD *)(v8 + 16) = v10;
  *(_QWORD *)&v3[v7] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDA8);
  *(_QWORD *)&v9[OBJC_IVAR____TtCV16UniversalControl11PreferencesP33_E97794F8E31B248CD291BA178D3BF85D8KVOProxy_subjects] = sub_249836CA0();
  v11 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v12 = sub_2497E7038(v11);
  if (v13)
  {
    if (v12 == a1 && v13 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = sub_2498375C4();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    v18 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    goto LABEL_11;
  }
LABEL_7:
  v16 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v17 = sub_2497E6FD8(a1, a2);
  if (!v17)
  {
    v18 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
LABEL_11:
    v17 = v18;
  }
  *(_QWORD *)&v9[OBJC_IVAR____TtCV16UniversalControl11PreferencesP33_E97794F8E31B248CD291BA178D3BF85D8KVOProxy_userDefaults] = v17;

  v19.receiver = v9;
  v19.super_class = ObjectType;
  objc_msgSendSuper2(&v19, sel_init);
  OUTLINED_FUNCTION_13_10();
}

void sub_2497E69B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v7 = (uint64_t *)(a1
                 + OBJC_IVAR____TtCV16UniversalControl11PreferencesP33_E97794F8E31B248CD291BA178D3BF85D8KVOProxy_subjects);
  swift_beginAccess();
  v8 = *v7;
  if (!*(_QWORD *)(*v7 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v9 = sub_2497F2594();
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257880630);
    swift_allocObject();
    sub_249836B74();
    sub_24974DEBC(&qword_257880640, &qword_257880630, MEMORY[0x24BDB9CB0]);
    v11 = sub_249836BC8();
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v13 = swift_retain();
    sub_24974B4E0(v13, a2, a3);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_2497E6804();
    v12 = 1;
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  v12 = 0;
LABEL_6:
  *(_QWORD *)a4 = v11;
  *(_BYTE *)(a4 + 8) = v12;
}

void sub_2497E6B5C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  void *v5;
  uint64_t ObjectType;
  objc_class *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  objc_super v22;
  _QWORD v23[3];
  uint64_t v24;

  ObjectType = swift_getObjectType();
  v11 = (objc_class *)ObjectType;
  if (!a5)
  {
    if (!ObjectType)
      goto LABEL_4;
LABEL_8:
    if (a2)
      a2 = (void *)sub_249836D18();
    sub_2497E6F90(a3, (uint64_t)v23);
    v15 = v24;
    if (v24)
    {
      v16 = __swift_project_boxed_opaque_existential_1(v23, v24);
      v17 = *(_QWORD *)(v15 - 8);
      MEMORY[0x24BDAC7A8](v16);
      v19 = (char *)&v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v17 + 16))(v19);
      v20 = sub_2498375B8();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v15);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
      if (!a4)
      {
LABEL_13:
        v22.receiver = v5;
        v22.super_class = v11;
        objc_msgSendSuper2(&v22, sel_observeValueForKeyPath_ofObject_change_context_, a2, v20, a4, a5);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      v20 = 0;
      if (!a4)
        goto LABEL_13;
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_2497E6F50();
    a4 = (void *)sub_249836C88();
    goto LABEL_13;
  }
  if (!ObjectType || ObjectType != a5)
    goto LABEL_8;
LABEL_4:
  if (a2)
  {
    v12 = v5;
    OUTLINED_FUNCTION_34_0();
    v13 = swift_retain();
    v14 = sub_249789058(v13, v12);
    swift_release();
    if (v14)
    {
      sub_249836B20();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257880630);
      sub_24974DEBC(&qword_257880688, &qword_257880630, MEMORY[0x24BDB9CA8]);
      sub_249836BA4();
      swift_release();
      swift_release();
    }
  }
}

void sub_2497E6E9C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for Preferences.KVOProxy()
{
  return objc_opt_self();
}

unint64_t sub_2497E6F50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25787F868;
  if (!qword_25787F868)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    result = MEMORY[0x24BCF8F94](&unk_2498389A0, v1);
    atomic_store(result, (unint64_t *)&qword_25787F868);
  }
  return result;
}

uint64_t sub_2497E6F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_2497E6FD8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_249836D18();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

uint64_t sub_2497E7038(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a1, sel_bundleIdentifier);

  if (!v2)
    return 0;
  v3 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();

  return v3;
}

uint64_t OUTLINED_FUNCTION_1_18(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  *v6 = a1;
  a1[5] = v2;
  a1[6] = v1;
  a1[3] = v4;
  a1[4] = v3;
  a1[2] = v5;
  return v5;
}

void OUTLINED_FUNCTION_2_20()
{
  sub_2497E5790();
}

void *OUTLINED_FUNCTION_3_14()
{
  return malloc(0x38uLL);
}

void OUTLINED_FUNCTION_8_14(void *a1)
{
  free(a1);
}

void *OUTLINED_FUNCTION_9_12()
{
  return malloc(0x30uLL);
}

void OUTLINED_FUNCTION_10_7(const __CFString *a1, const void *a2)
{
  const __CFString *v2;
  const __CFString *v3;
  const __CFString *v4;

  CFPreferencesSetValue(a1, a2, v4, v3, v2);
}

void OUTLINED_FUNCTION_11_10()
{
  const void *v0;

  Preferences.subscript.setter(v0);
}

void OUTLINED_FUNCTION_12_9()
{
  sub_2497E5790();
}

void OUTLINED_FUNCTION_16_8()
{
  const void *v0;
  const __CFString *v1;
  const __CFString *v2;
  const __CFString *v3;
  const __CFString *v4;

  CFPreferencesSetValue(v4, v0, v3, v2, v1);
}

void OUTLINED_FUNCTION_17_9()
{
  sub_2497E5790();
}

uint64_t OUTLINED_FUNCTION_19_11()
{
  return sub_249836D18();
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_21_9(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_25_7()
{
  return sub_249836D18();
}

uint64_t OUTLINED_FUNCTION_31_8()
{
  return sub_249836D18();
}

uint64_t OUTLINED_FUNCTION_32_7()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_33_8()
{
  return swift_allocObject();
}

_QWORD *sub_2497E7268(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;

  v3 = *(_OWORD *)(v1 + 24);
  return sub_2497E9084((uint64_t *)&v3, a1);
}

uint64_t sub_2497E7294(uint64_t a1, unint64_t a2)
{
  char v2;
  uint64_t v3;

  v2 = sub_24983724C();
  if (v2 != 2)
    return v2 & 1;
  swift_retain();
  sub_249837240();
  swift_release();
  sub_24983736C();
  if (a2 >> 60 != 15)
    __asm { BR              X11 }
  v3 = 0;
  swift_release();
  return v3;
}

uint64_t sub_2497E7EB4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  __int128 v7;
  __int128 v8;

  v8 = *a1;
  v2 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)&v7 = *(_QWORD *)(v1 + 24);
  *((_QWORD *)&v7 + 1) = v2;
  OUTLINED_FUNCTION_19_12();
  v3 = sub_2497E91D0((uint64_t)&v8, &v7);
  v4 = OUTLINED_FUNCTION_31_3();
  sub_249748C10(v4, v5);
  return v3 & 1;
}

uint64_t sub_2497E7F0C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = 3;
  *(_OWORD *)(v3 + 24) = *a1;
  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 48) = a3;
  return v3;
}

_QWORD *sub_2497E7F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *result;
  _QWORD v18[4];

  v1 = sub_249836C7C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_249836C40();
  OUTLINED_FUNCTION_16_9();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v18 - v10;
  sub_249836C70();
  sub_249836C58();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, char *, uint64_t))(v0 + 16))(v9, v11, v5);
  sub_249836C34();
  v12 = *(void (**)(char *, uint64_t))(v0 + 8);
  v12(v9, v5);
  v13 = v18[2];
  v14 = v18[3];
  v12(v11, v5);
  type metadata accessor for UVC1Object();
  sub_249748CD4();
  v15 = sub_249836CA0();
  sub_249778674();
  v16 = sub_249836CA0();
  result = (_QWORD *)OUTLINED_FUNCTION_18_1();
  result[2] = 3;
  result[3] = v13;
  result[4] = v14;
  result[5] = v15;
  result[6] = v16;
  return result;
}

_QWORD *sub_2497E80D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[3];
  v2 = v0[4];
  OUTLINED_FUNCTION_16();
  v4 = v0[5];
  v3 = v0[6];
  v5 = (_QWORD *)OUTLINED_FUNCTION_18_1();
  v5[2] = 3;
  v5[3] = v1;
  v5[4] = v2;
  v5[5] = v4;
  v5[6] = v3;
  OUTLINED_FUNCTION_3_15();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_24();
  return v5;
}

uint64_t sub_2497E8150(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 1684104552 && a2 == 0xE400000000000000;
  if (v2 || (sub_2498375C4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1885431144 && a2 == 0xE400000000000000;
    if (v6 || (sub_2498375C4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1936090482 && a2 == 0xE400000000000000;
      if (v7 || (sub_2498375C4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 1936876918 && a2 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_2498375C4();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_2497E82BC()
{
  return 4;
}

uint64_t sub_2497E82C4(char a1)
{
  return *(_QWORD *)&aHead_1[8 * a1];
}

uint64_t sub_2497E82DC()
{
  char *v0;

  return sub_2497E82C4(*v0);
}

uint64_t sub_2497E82E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2497E8150(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2497E8308@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2497E82BC();
  *a1 = result;
  return result;
}

uint64_t sub_2497E832C()
{
  sub_2497E8D00();
  return sub_249837750();
}

uint64_t sub_2497E8354()
{
  sub_2497E8D00();
  return sub_24983775C();
}

uint64_t sub_2497E837C(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_2497E83C8(a1);
  return v2;
}

uint64_t sub_2497E83C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257882048);
  OUTLINED_FUNCTION_16_9();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_10_8();
  *(_QWORD *)(v1 + 16) = 3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2497E8D00();
  sub_249837720();
  if (v6)
    goto LABEL_5;
  LOBYTE(v7) = 3;
  v4 = sub_249837420();
  *(_QWORD *)(v1 + 16) = v4;
  if (v4 != 3)
  {
    sub_2497E8DB4();
    NSError.init(NSOSStatusErrorDomain:debugDescription:__file:__line:)(-6717, 0xD00000000000001FLL, 0x80000002498416B0);
    swift_willThrow();
    OUTLINED_FUNCTION_0_21();
LABEL_5:
    swift_deallocPartialClassInstance();
    goto LABEL_6;
  }
  sub_24977C928();
  OUTLINED_FUNCTION_6_9();
  *(_OWORD *)(v1 + 24) = v7;
  sub_2497E8DF0();
  OUTLINED_FUNCTION_6_9();
  *(_QWORD *)(v1 + 40) = v7;
  sub_2497E8E2C();
  sub_249837438();
  OUTLINED_FUNCTION_0_21();
  *(_QWORD *)(v1 + 48) = v7;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_2497E85F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882028);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_10_8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2497E8D00();
  sub_249837744();
  sub_2498374E0();
  if (!v1)
  {
    sub_24977C874();
    OUTLINED_FUNCTION_5_11();
    swift_beginAccess();
    sub_2497E8D3C();
    OUTLINED_FUNCTION_5_11();
    sub_2497E8D78();
    OUTLINED_FUNCTION_5_11();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t sub_2497E8784()
{
  uint64_t v0;

  sub_249748C10(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2497E87B0()
{
  sub_2497E8784();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UVC1Config()
{
  return objc_opt_self();
}

unint64_t sub_2497E87F4()
{
  unint64_t result;

  result = qword_257882018;
  if (!qword_257882018)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlUUID, &type metadata for UniversalControlUUID);
    atomic_store(result, (unint64_t *)&qword_257882018);
  }
  return result;
}

uint64_t sub_2497E8830@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_2497E837C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2497E8858(_QWORD *a1)
{
  return sub_2497E85F8(a1);
}

uint64_t sub_2497E8878(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = a1[3];
  v5 = a1[4];
  v6 = a2[3];
  v7 = a2[4];
  OUTLINED_FUNCTION_3_15();
  sub_249748BCC(v6, v7);
  v8 = MEMORY[0x24BCF78FC](v4, v5, v6, v7);
  sub_249748C10(v6, v7);
  OUTLINED_FUNCTION_8_15();
  if ((v8 & 1) == 0)
    goto LABEL_4;
  OUTLINED_FUNCTION_16();
  v9 = (_QWORD *)a1[5];
  OUTLINED_FUNCTION_16();
  v10 = (_QWORD *)a2[5];
  OUTLINED_FUNCTION_73_0();
  swift_bridgeObjectRetain();
  sub_2497D6FA4(v9, v10);
  v12 = v11;
  OUTLINED_FUNCTION_42();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    v13 = a1[6];
    v14 = a2[6];
    OUTLINED_FUNCTION_24();
    OUTLINED_FUNCTION_73_0();
    v15 = sub_2497D649C(v13, v14);
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_42();
  }
  else
  {
LABEL_4:
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_2497E897C(_QWORD **a1, _QWORD **a2)
{
  return sub_2497E8878(*a1, *a2) & 1;
}

uint64_t sub_2497E899C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_31_3();
  sub_24983694C();
  OUTLINED_FUNCTION_8_15();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_73_0();
  v0 = OUTLINED_FUNCTION_31_3();
  sub_24975A570(v0, v1);
  OUTLINED_FUNCTION_42();
  OUTLINED_FUNCTION_24();
  v2 = OUTLINED_FUNCTION_20_10();
  sub_24977D1F0(v2, v3);
  return OUTLINED_FUNCTION_1();
}

uint64_t sub_2497E8A14()
{
  sub_249837690();
  sub_2497E899C();
  return sub_2498376E4();
}

uint64_t sub_2497E8A50()
{
  return sub_2497E8A14();
}

uint64_t sub_2497E8A70()
{
  return sub_2497E899C();
}

uint64_t sub_2497E8A90()
{
  sub_249837690();
  sub_2497E899C();
  return sub_2498376E4();
}

uint64_t sub_2497E8ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDE0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249836A18();
  OUTLINED_FUNCTION_16_9();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v16 - v9;
  OUTLINED_FUNCTION_3_15();
  v11 = sub_2498368F8();
  sub_249749358(v11, v12);
  result = __swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v0 + 32))(v10, v3, v4);
    (*(void (**)(char *, char *, uint64_t))(v0 + 16))(v8, v10, v4);
    v14 = sub_2498369F4();
    v15 = *(void (**)(char *, uint64_t))(v0 + 8);
    v15(v8, v4);
    v15(v10, v4);
    OUTLINED_FUNCTION_8_15();
    return v14;
  }
  return result;
}

uint64_t sub_2497E8C24@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;

  result = sub_2497E8ACC();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4;
  *(_BYTE *)(a1 + 10) = v5;
  *(_BYTE *)(a1 + 11) = v6;
  *(_BYTE *)(a1 + 12) = v7;
  *(_BYTE *)(a1 + 13) = v8;
  *(_BYTE *)(a1 + 14) = v9;
  *(_BYTE *)(a1 + 15) = v10;
  return result;
}

unint64_t sub_2497E8CC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257882020;
  if (!qword_257882020)
  {
    v1 = type metadata accessor for UVC1Config();
    result = MEMORY[0x24BCF8F94](&unk_24983C134, v1);
    atomic_store(result, (unint64_t *)&qword_257882020);
  }
  return result;
}

unint64_t sub_2497E8D00()
{
  unint64_t result;

  result = qword_257882030;
  if (!qword_257882030)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983C2AC, &type metadata for UVC1Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882030);
  }
  return result;
}

unint64_t sub_2497E8D3C()
{
  unint64_t result;

  result = qword_257882038;
  if (!qword_257882038)
  {
    result = MEMORY[0x24BCF8F94](&unk_2498392EC, &type metadata for UVC1Heap);
    atomic_store(result, (unint64_t *)&qword_257882038);
  }
  return result;
}

unint64_t sub_2497E8D78()
{
  unint64_t result;

  result = qword_257882040;
  if (!qword_257882040)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983A99C, &type metadata for UVC1Refs);
    atomic_store(result, (unint64_t *)&qword_257882040);
  }
  return result;
}

unint64_t sub_2497E8DB4()
{
  unint64_t result;

  result = qword_2578805A8;
  if (!qword_2578805A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2578805A8);
  }
  return result;
}

unint64_t sub_2497E8DF0()
{
  unint64_t result;

  result = qword_257882050;
  if (!qword_257882050)
  {
    result = MEMORY[0x24BCF8F94](&unk_249839314, &type metadata for UVC1Heap);
    atomic_store(result, (unint64_t *)&qword_257882050);
  }
  return result;
}

unint64_t sub_2497E8E2C()
{
  unint64_t result;

  result = qword_257882058;
  if (!qword_257882058)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983A9C4, &type metadata for UVC1Refs);
    atomic_store(result, (unint64_t *)&qword_257882058);
  }
  return result;
}

void sub_2497E8E68(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;

  v5 = v1[2];
  v4 = v1[3];
  if (v5 == v4 >> 1)
  {
    v6 = 0;
    v7 = 0xF000000000000000;
LABEL_18:
    *a1 = v6;
    a1[1] = v7;
  }
  else
  {
    v14 = a1;
    v8 = 0;
    v9 = v4 >> 1;
    v16 = *v1;
    v17 = v4 & 0xFFFFFFFFFFFFFFFELL;
    v15 = v1[1];
    v10 = (unint64_t *)(v15 + 16 * v5 + 8);
    while (v5 < (uint64_t)(v4 >> 1))
    {
      if ((uint64_t)v9 <= v5)
        goto LABEL_20;
      if (v4 >> 1 < v9)
        goto LABEL_21;
      v6 = *(v10 - 1);
      v7 = *v10;
      sub_249748BCC(v6, *v10);
      if ((v8 & 1) != 0)
        sub_249748C10(v2, v3);
      v4 = v4 & 1 | v17;
      sub_249748BCC(v6, v7);
      sub_249748BCC(v6, v7);
      sub_2497CB154(&v18);
      sub_249748C10(v6, v7);
      v11 = *((_QWORD *)&v18 + 1);
      sub_249748C80(v18, *((unint64_t *)&v18 + 1));
      if (v11 >> 60 != 15)
      {
        *v1 = v16;
        v1[1] = v15;
        v1[2] = v5 + 1;
        v1[3] = v4;
        if (*(_QWORD *)(v1[4] + 16))
        {
          sub_249748BCC(v6, v7);
          sub_2497F22B8();
          if ((v12 & 1) != 0)
          {
            swift_retain();
            sub_249748C10(v6, v7);
            sub_249748C10(v6, v7);
            v13 = swift_bridgeObjectRetain();
            sub_2497A5FA0(v13);
            swift_release();
            goto LABEL_17;
          }
          sub_249748C10(v6, v7);
        }
        sub_249748C10(v6, v7);
        goto LABEL_17;
      }
      ++v5;
      sub_249748C10(v6, v7);
      v10 += 2;
      v8 = 1;
      v2 = v6;
      v3 = v7;
      if (v9 == v5)
      {
        sub_249748C10(v6, v7);
        v6 = 0;
        *v1 = v16;
        v1[1] = v15;
        v7 = 0xF000000000000000;
        v1[2] = v9;
        v1[3] = v4;
LABEL_17:
        a1 = v14;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
}

_QWORD *sub_2497E9084(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  _QWORD *v7;
  _QWORD *v8;

  v4 = *a1;
  v5 = a1[1];
  result = (_QWORD *)OUTLINED_FUNCTION_18_1();
  result[2] = v4;
  result[3] = v5;
  result[4] = v2;
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v7 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882078);
    v8 = (_QWORD *)OUTLINED_FUNCTION_18_1();
    v8[2] = sub_2497E977C;
    v8[3] = v7;
    v8[4] = a2;
    OUTLINED_FUNCTION_19_12();
    swift_retain();
    return v8;
  }
  return result;
}

double sub_2497E9110@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  swift_beginAccess();
  v8 = *(_QWORD *)(a3 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787F828);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_249838510;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  swift_bridgeObjectRetain_n();
  sub_249748BCC(a1, a2);
  v10 = sub_2497A1018(v8);
  *(_QWORD *)a4 = v9;
  *(_QWORD *)(a4 + 8) = v9 + 32;
  result = 0.0;
  *(_OWORD *)(a4 + 16) = xmmword_24983C070;
  *(_QWORD *)(a4 + 32) = v8;
  *(_QWORD *)(a4 + 40) = v10;
  return result;
}

uint64_t sub_2497E91D0(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  __int128 v6;

  v6 = *a2;
  sub_2497E9084((uint64_t *)&v6, 0);
  v2 = OUTLINED_FUNCTION_31_3();
  v4 = sub_2497E7294(v2, v3);
  swift_release();
  return v4 & 1;
}

uint64_t sub_2497E9230()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  sub_2497E7268(0);
  sub_249837258();
  swift_release();
  sub_249837240();
  swift_release();
  v1 = (uint64_t *)(v0 + 40);
  swift_retain();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_17_10();
  v2 = *((_QWORD *)&v41 + 1);
  if (*((_QWORD *)&v41 + 1) >> 60 != 15)
  {
    v3 = v41;
    v37 = (uint64_t *)(v0 + 40);
    do
    {
      v4 = *v1;
      if (*(_QWORD *)(*v1 + 16))
      {
        OUTLINED_FUNCTION_24();
        v5 = OUTLINED_FUNCTION_31_3();
        sub_249748C6C(v5, v6);
        OUTLINED_FUNCTION_31_3();
        v7 = sub_2497F22B8();
        if ((v8 & 1) != 0)
        {
          v9 = *(_QWORD **)(*(_QWORD *)(v4 + 56) + 8 * v7);
          swift_retain();
          OUTLINED_FUNCTION_1();
          v39 = v3;
          v40 = v2;
          OUTLINED_FUNCTION_9_13();
          v43 = v9[2];
          v44 = v9[3];
          sub_249748BCC(v43, v44);
          sub_24980C6C8();
          v12 = sub_2497713F8(12, v10, v11);
          MEMORY[0x24BCF7D34](v12);
          sub_249836DB4();
          OUTLINED_FUNCTION_23_1();
          OUTLINED_FUNCTION_42();
          OUTLINED_FUNCTION_14_9();
          OUTLINED_FUNCTION_23_1();
          v13 = OUTLINED_FUNCTION_20_10();
          sub_249748BCC(v13, v14);
          v15 = OUTLINED_FUNCTION_20_10();
          v16 = MEMORY[0x24BCF78FC](v15);
          v17 = OUTLINED_FUNCTION_20_10();
          sub_249748C10(v17, v18);
          if ((v16 & 1) != 0)
            sub_249836DB4();
          OUTLINED_FUNCTION_2_21();
          *(_QWORD *)&v41 = 0x203A746E65726170;
          *((_QWORD *)&v41 + 1) = 0xE800000000000000;
          v19 = v9[5];
          v20 = *(_QWORD *)(v19 + 16);
          if (v20)
          {
            v38 = v9;
            v42 = MEMORY[0x24BEE4AF8];
            swift_bridgeObjectRetain();
            sub_24974E41C();
            v21 = (unint64_t *)(v19 + 40);
            do
            {
              v22 = *(v21 - 1);
              v23 = *v21;
              sub_249748BCC(v22, *v21);
              sub_24980C6C8();
              sub_249836DA8();
              v24 = sub_249836E44();
              v26 = v25;
              v28 = v27;
              v30 = v29;
              swift_bridgeObjectRelease();
              sub_249748C10(v22, v23);
              v31 = *(_QWORD *)(v42 + 16);
              if (v31 >= *(_QWORD *)(v42 + 24) >> 1)
                sub_24974E41C();
              v21 += 2;
              *(_QWORD *)(v42 + 16) = v31 + 1;
              v32 = (_QWORD *)(v42 + 32 * v31);
              v32[4] = v24;
              v32[5] = v26;
              v32[6] = v28;
              v32[7] = v30;
              --v20;
            }
            while (v20);
            swift_bridgeObjectRelease();
            v1 = v37;
            v9 = v38;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_257882060);
          sub_2497E96D0();
          sub_2497E9714();
          sub_249836E80();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_31_3();
          sub_249836DB4();
          OUTLINED_FUNCTION_42();
          OUTLINED_FUNCTION_14_9();
          OUTLINED_FUNCTION_23_1();
          OUTLINED_FUNCTION_2_21();
          v33 = v9[4];
          v34 = *(_QWORD *)(v33 + 16);
          if (v34)
          {
            swift_bridgeObjectRetain();
            v35 = v33 + 100;
            do
            {
              v41 = *(_OWORD *)(v35 - 68);
              UniversalControlLink.description.getter();
              sub_249836DB4();
              OUTLINED_FUNCTION_42();
              OUTLINED_FUNCTION_2_21();
              sub_249836DB4();
              OUTLINED_FUNCTION_42();
              v35 += 80;
              --v34;
            }
            while (v34);
            OUTLINED_FUNCTION_23_1();
          }
          OUTLINED_FUNCTION_2_21();
          sub_249748C80(v39, v40);
          sub_249748C10(v43, v44);
          swift_release();
          goto LABEL_20;
        }
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_9_13();
      }
      OUTLINED_FUNCTION_9_13();
LABEL_20:
      OUTLINED_FUNCTION_17_10();
      v2 = *((_QWORD *)&v41 + 1);
      v3 = v41;
    }
    while (*((_QWORD *)&v41 + 1) >> 60 != 15);
  }
  swift_release_n();
  return 0;
}

unint64_t sub_2497E96D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257882068;
  if (!qword_257882068)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257882060);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257882068);
  }
  return result;
}

unint64_t sub_2497E9714()
{
  unint64_t result;

  result = qword_257882070;
  if (!qword_257882070)
  {
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_257882070);
  }
  return result;
}

uint64_t sub_2497E9750()
{
  uint64_t v0;

  sub_249748C10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

double sub_2497E977C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2497E9110(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t destroy for UVC1Config.TreeIterator()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UVC1Config.TreeIterator(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for UVC1Config.TreeIterator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for UVC1Config.TreeIterator(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  swift_unknownObjectRelease();
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UVC1Config.TreeIterator(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UVC1Config.TreeIterator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UVC1Config.TreeIterator()
{
  return &type metadata for UVC1Config.TreeIterator;
}

uint64_t storeEnumTagSinglePayload for UVC1Config.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2497E99E8 + 4 * byte_24983C085[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2497E9A1C + 4 * byte_24983C080[v4]))();
}

uint64_t sub_2497E9A1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2497E9A24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2497E9A2CLL);
  return result;
}

uint64_t sub_2497E9A38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2497E9A40);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2497E9A44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2497E9A4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UVC1Config.CodingKeys()
{
  return &type metadata for UVC1Config.CodingKeys;
}

unint64_t sub_2497E9A6C()
{
  unint64_t result;

  result = qword_257882080;
  if (!qword_257882080)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983C254, &type metadata for UVC1Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882080);
  }
  return result;
}

unint64_t sub_2497E9AAC()
{
  unint64_t result;

  result = qword_257882088;
  if (!qword_257882088)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983C1C4, &type metadata for UVC1Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882088);
  }
  return result;
}

unint64_t sub_2497E9AEC()
{
  unint64_t result;

  result = qword_257882090;
  if (!qword_257882090)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983C1EC, &type metadata for UVC1Config.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882090);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_21()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_2_21()
{
  return sub_249836DB4();
}

uint64_t OUTLINED_FUNCTION_3_15()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748BCC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  return sub_249837438();
}

uint64_t OUTLINED_FUNCTION_8_15()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t OUTLINED_FUNCTION_9_13()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C80(v0, v1);
}

uint64_t OUTLINED_FUNCTION_14_9()
{
  return sub_249836DB4();
}

uint64_t OUTLINED_FUNCTION_17_10()
{
  return sub_24983736C();
}

uint64_t OUTLINED_FUNCTION_19_12()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748BCC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_20_10()
{
  uint64_t v0;

  return v0;
}

CGPoint __swiftcall UniversalControlAnchor.resolvedPoint(from:)(__C::CGRect from)
{
  unsigned __int8 *v1;
  uint64_t v2;
  CGPoint result;
  CGRect v4;

  v2 = *v1;
  CGRectGetMinX((CGRect)from);
  v4.origin.x = OUTLINED_FUNCTION_0_22();
  CGRectGetMinY(v4);
  __asm { BR              X9 }
  return result;
}

double sub_2497E9C40()
{
  unsigned int v0;
  double v1;
  double v2;

  v2 = OUTLINED_FUNCTION_4_19();
  OUTLINED_FUNCTION_10_9(v2, (double)v0, 65535.0);
  return v1;
}

__C::CGRect __swiftcall UniversalControlAnchor.resolvedRect(from:with:)(CGPoint from, CGSize with)
{
  unsigned __int8 *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  __C::CGRect result;

  ((void (*)(__n128, __n128, __n128, __n128))((char *)sub_2497E9CF0 + 4 * byte_24983C324[*v2]))((__n128)__PAIR128__(v3, *(unint64_t *)&from.x), (__n128)__PAIR128__(v4, *(unint64_t *)&from.y), (__n128)__PAIR128__(v5, *(unint64_t *)&with.width), (__n128)__PAIR128__(v6, *(unint64_t *)&with.height));
  result.size.height = v10;
  result.size.width = v9;
  result.origin.y = v8;
  result.origin.x = v7;
  return result;
}

double sub_2497E9CF0@<D0>(unsigned int a1@<W8>, double a2@<D0>, double a3@<D2>)
{
  return a2 - round((double)a1 / 65535.0 * a3);
}

double sub_2497E9D10@<D0>(unsigned int a1@<W8>, double a2@<D0>, double a3@<D2>)
{
  return a2 - round((double)a1 / 65535.0 * a3);
}

double sub_2497E9D34(double a1, double a2, double a3)
{
  return a1 - a3;
}

void static UniversalControlAnchor.anchor(with:at:on:)(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2497E9D84(double a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  double v6;

  sub_2497E9DCC(a1, a2, a3, a4, a5);
  return UniversalControlAnchor.init(edge:offset:)(0, v5, v6);
}

void sub_2497E9DCC(double a1, double a2, double a3, double a4, double a5)
{
  BOOL v6;
  double v7;
  double v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;

  OUTLINED_FUNCTION_8_16();
  v6 = CGRectGetWidth(v9) <= 0.0;
  v7 = 0.0;
  if (!v6)
  {
    v10.origin.x = OUTLINED_FUNCTION_1_19();
    v8 = a5 - CGRectGetMinX(v10);
    v11.origin.x = OUTLINED_FUNCTION_1_19();
    v7 = v8 / CGRectGetWidth(v11);
  }
  OUTLINED_FUNCTION_7_16(v7);
  OUTLINED_FUNCTION_6_10();
}

void sub_2497E9E20(double a1, double a2, double a3, double a4, double a5, double a6)
{
  BOOL v7;
  double v8;
  double v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;

  OUTLINED_FUNCTION_8_16();
  v7 = CGRectGetHeight(v10) <= 0.0;
  v8 = 0.0;
  if (!v7)
  {
    v11.origin.x = OUTLINED_FUNCTION_1_19();
    v9 = a6 - CGRectGetMinY(v11);
    v12.origin.x = OUTLINED_FUNCTION_1_19();
    v8 = v9 / CGRectGetHeight(v12);
  }
  OUTLINED_FUNCTION_7_16(v8);
  OUTLINED_FUNCTION_6_10();
}

uint64_t UniversalControlDevice.bestDisplay(for:)(CGFloat a1, CGFloat a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  uint64_t v14;
  double Height;
  double v16;
  unsigned __int8 *v17;
  unsigned int __s1;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[2];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t __s2;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  double v100;
  uint64_t __s2_8;
  uint64_t __s2_8a;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;

  v99 = a3;
  v100 = a4;
  v7 = v4 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  v8 = *(_QWORD *)(v7 + 32);
  if (v8 >> 62)
  {
    OUTLINED_FUNCTION_9_14();
    v9 = sub_249837324();
    if (v9)
      goto LABEL_3;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_9_14();
    if (v9)
    {
LABEL_3:
      if (v9 < 1)
        __break(1u);
      v10 = 0;
      v11 = 0;
      v12 = v8 & 0xC000000000000001;
      v13 = 0.0;
      v57 = v9;
      v58 = v8 & 0xC000000000000001;
      v56 = v8;
      while (1)
      {
        if (v12)
        {
          v14 = MEMORY[0x24BCF8148](v10, v8);
        }
        else
        {
          v14 = *(_QWORD *)(v8 + 8 * v10 + 32);
          swift_retain();
        }
        v103.origin.x = sub_2497CFB08();
        v107.origin.x = a1;
        v107.origin.y = a2;
        v107.size.width = v99;
        v107.size.height = v100;
        v104 = CGRectIntersection(v103, v107);
        if (CGRectIsEmpty(v104)
          || (v105.origin.x = OUTLINED_FUNCTION_19_6(),
              Height = CGRectGetHeight(v105),
              v106.origin.x = OUTLINED_FUNCTION_19_6(),
              v16 = Height * CGRectGetWidth(v106),
              v16 < v13))
        {
          swift_release();
          v16 = v13;
        }
        else
        {
          if (v13 >= v16)
          {
            if (v11)
            {
              v92 = v11;
              v17 = (unsigned __int8 *)(v11 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
              OUTLINED_FUNCTION_16();
              __s1 = *v17;
              HIDWORD(v96) = v17[3];
              v19 = v17[4];
              LODWORD(v89) = v17[5];
              HIDWORD(v89) = v17[1];
              v20 = v17[6];
              v21 = v17[8];
              LODWORD(v86) = v17[9];
              HIDWORD(v86) = v17[7];
              v22 = v17[10];
              v23 = v17[12];
              LODWORD(v83) = v17[13];
              HIDWORD(v83) = v17[11];
              HIDWORD(v95) = v17[2];
              LODWORD(v96) = v17[14];
              *(_OWORD *)v51 = *((_OWORD *)v17 + 1);
              v24 = v14 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
              LODWORD(v17) = v17[15];
              OUTLINED_FUNCTION_16();
              v78 = __PAIR64__(v20, v21);
              v25 = v86;
              v75 = __PAIR64__(v22, v23);
              v26 = BYTE4(v83);
              v27 = v83;
              v72 = __PAIR64__(v17, *(unsigned __int8 *)(v24 + 1));
              v28 = *(_BYTE *)v24;
              __s2_8 = *(_QWORD *)(v24 + 8);
              HIDWORD(v59) = *(unsigned __int8 *)(v24 + 14);
              v30 = OUTLINED_FUNCTION_2_22(__s2_8, BYTE1(__s2_8), BYTE2(__s2_8), BYTE3(__s2_8), BYTE4(__s2_8), BYTE5(__s2_8), SHIDWORD(v59), v29, *(_QWORD *)(v24 + 16), *(_QWORD *)(v24 + 24), v51[0], v51[1], v56, v57, v58, v59, __SPAIR64__(BYTE4(__s2_8), BYTE5(__s2_8)), __SPAIR64__(BYTE2(__s2_8), BYTE3(__s2_8)), __SPAIR64__(__s2_8, BYTE1(__s2_8)),
                      __SPAIR64__(*(unsigned __int8 *)(v24 + 6), *(unsigned __int8 *)(v24 + 7)),
                      __SPAIR64__(*(unsigned __int8 *)(v24 + 4), *(unsigned __int8 *)(v24 + 5)),
                      __SPAIR64__(*(unsigned __int8 *)(v24 + 2), *(unsigned __int8 *)(v24 + 3)),
                      v72,
                      v75,
                      v78,
                      __SPAIR64__(__s1, v19),
                      v83,
                      v86,
                      v89,
                      v92,
                      v95,
                      v96,
                      *(uint64_t *)&v99,
                      *(uint64_t *)&v100,
                      *(_BYTE *)v24,
                      __s2_8,
                      __s1);
              if (v30 < 0)
                goto LABEL_17;
              LOBYTE(__s2_8a) = v79;
              BYTE1(__s2_8a) = v25;
              BYTE2(__s2_8a) = BYTE4(v76);
              BYTE3(__s2_8a) = v26;
              BYTE4(__s2_8a) = v76;
              BYTE5(__s2_8a) = v27;
              BYTE6(__s2_8a) = v97;
              HIBYTE(__s2_8a) = BYTE4(v73);
              v38 = OUTLINED_FUNCTION_2_22(v30, v31, v32, v33, v34, v35, v36, v37, v47, v49, v52, v54, v56, v57, v58, v59, v60, v62, v64,
                      v66,
                      v68,
                      v70,
                      v73,
                      v76,
                      v79,
                      __s2,
                      v84,
                      v87,
                      v90,
                      v93,
                      v95,
                      v97,
                      *(uint64_t *)&v99,
                      *(uint64_t *)&v100,
                      SBYTE4(__s2),
                      __s2_8a,
                      v28);
              if (v38 < 0)
                goto LABEL_21;
              if ((OUTLINED_FUNCTION_2_22(v38, v39, v40, v41, v42, v43, v44, v45, v48, v50, v53, v55, v56, v57, v58, v59, v61, v63, v65,
                      v67,
                      v69,
                      v71,
                      v74,
                      v77,
                      v80,
                      v82,
                      v85,
                      v88,
                      v91,
                      v94,
                      v95,
                      v98,
                      *(uint64_t *)&v99,
                      *(uint64_t *)&v100,
                      v48,
                      v50,
                      v53) & 0x80000000) != 0)
              {
LABEL_17:
                swift_release();
                v16 = v13;
                v11 = v93;
              }
              else
              {
LABEL_21:
                swift_release();
                v11 = v14;
              }
              v9 = v57;
              v12 = v58;
              v8 = v56;
              goto LABEL_11;
            }
          }
          else
          {
            swift_release();
          }
          v11 = v14;
        }
LABEL_11:
        ++v10;
        v13 = v16;
        if (v9 == v10)
          goto LABEL_25;
      }
    }
  }
  v11 = 0;
LABEL_25:
  swift_bridgeObjectRelease_n();
  return v11;
}

uint64_t static UniversalControlEdge.edge(of:nearest:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  double MinX;
  double MinY;
  double MaxX;
  double MaxY;
  CGRect v15;
  CGRect v16;
  CGRect v17;

  MinX = CGRectGetMinX(*(CGRect *)&a1);
  v15.origin.x = OUTLINED_FUNCTION_3_16();
  MinY = CGRectGetMinY(v15);
  v16.origin.x = OUTLINED_FUNCTION_3_16();
  MaxX = CGRectGetMaxX(v16);
  v17.origin.x = OUTLINED_FUNCTION_3_16();
  MaxY = CGRectGetMaxY(v17);
  if (MinY <= a6 && MaxY >= a6)
  {
    if (MinX >= a5)
      return 1;
    if (MaxX <= a5)
      return 3;
  }
  if (MinX > a5 || MaxX < a5)
    return 4;
  if (MinY < a6)
  {
    if (MaxY <= a6)
      return 2;
    return 4;
  }
  return 0;
}

double OUTLINED_FUNCTION_0_22()
{
  double v0;

  return v0;
}

double OUTLINED_FUNCTION_1_19()
{
  double v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_2_22(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char __s2,uint64_t a36,char __s1)
{
  return memcmp(&__s1, &__s2, 0x10uLL);
}

double OUTLINED_FUNCTION_3_16()
{
  double v0;

  return v0;
}

double OUTLINED_FUNCTION_4_19()
{
  CGFloat v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGRect v5;

  v5.origin.x = v3;
  v5.origin.y = v2;
  v5.size.width = v1;
  v5.size.height = v0;
  return CGRectGetWidth(v5);
}

double OUTLINED_FUNCTION_7_16(double result)
{
  double v1;

  if (result <= 0.0)
    result = v1;
  if (result > 1.0)
    return 1.0;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_14()
{
  return swift_bridgeObjectRetain_n();
}

double OUTLINED_FUNCTION_10_9(double a1, double a2, double a3)
{
  return round(a2 / a3 * a1);
}

uint64_t sub_2497EA4B8(char a1, uint64_t a2)
{
  uint64_t v3;
  uint8x8_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v8 = a2;
  swift_bridgeObjectRetain();
  sub_2497D719C(&v8, (uint64_t (*)(uint64_t))sub_24975E080, (uint64_t (*)(_QWORD *))sub_2497F3C08);
  v3 = v8;
  sub_24980B514();
  v8 = OUTLINED_FUNCTION_74_4();
  sub_24980B550();
  v7 = OUTLINED_FUNCTION_74_4();
  v5 = sub_2497EA58C(v3, a1 & 1, &v8, &v7, v4);
  OUTLINED_FUNCTION_70_1();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2497EA58C(uint64_t a1, char a2, _QWORD *a3, _QWORD *a4, uint8x8_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  int16x8_t v12;
  char v13;
  char v14;
  char v15;
  __int128 v16;
  int16x8_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  int16x8_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  __int128 v42;
  __int128 v43;
  _QWORD *v44;
  char v45;
  _QWORD *v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  char v51;
  char v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  char v63;
  char v64;
  __int8 v65;
  __int8 v66;
  __int8 v67;
  char v68;
  _QWORD *v69;
  _QWORD *v70;
  unint64_t v71;
  char v72;
  char v73;
  unint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  uint64_t v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int8 v107;
  __int8 v108;
  __int8 v109;
  __int8 v110;
  char v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t v116;
  __int8 v117;
  char v118;
  uint64_t v119;
  __int16 v120;
  __int16 v121;
  char v122;
  char v123;
  uint64_t v124;
  unint64_t v125;
  __int8 v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  int16x8_t v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  double v149;
  char v150;
  char v151;
  char v152;
  _QWORD *v153;
  _QWORD *v154;
  _BYTE __src[66];
  _BYTE v156[33];
  uint64_t v157;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v105 = MEMORY[0x24BEE4AF8];
    goto LABEL_39;
  }
  v112 = *(_QWORD *)(a1 + 16);
  v6 = 0;
  v7 = a1 + 57;
  v103 = v5 - 1;
  v105 = MEMORY[0x24BEE4AF8];
  v114 = a1;
  v104 = a1 + 57;
  do
  {
    v8 = v7 + 80 * v6;
    v9 = v6;
    while (1)
    {
      if (v9 >= *(_QWORD *)(a1 + 16))
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        while (1)
        {
LABEL_45:
          sub_24983763C();
          __break(1u);
        }
      }
      v10 = *(_BYTE *)(v8 - 25);
      v11 = *(_QWORD *)(v8 - 24);
      a5.i32[0] = *(_DWORD *)(v8 - 16);
      v12 = (int16x8_t)vmovl_u8(a5);
      v150 = *(_BYTE *)(v8 - 12);
      v13 = *(_BYTE *)(v8 - 11);
      v14 = *(_BYTE *)(v8 - 10);
      v15 = *(_BYTE *)(v8 - 9);
      *(_QWORD *)&v16 = *(_QWORD *)(v8 - 8);
      a5.i32[0] = *(_DWORD *)v8;
      v17 = (int16x8_t)vmovl_u8(a5);
      v18 = *(_BYTE *)(v8 + 4);
      v19 = *(_BYTE *)(v8 + 5);
      v20 = *(_BYTE *)(v8 + 6);
      v21 = *(_BYTE *)(v8 + 7);
      v22 = *(_QWORD *)(v8 + 8);
      a5.i32[0] = *(_DWORD *)(v8 + 16);
      v23 = (int16x8_t)vmovl_u8(a5);
      v24 = *(_BYTE *)(v8 + 20);
      v152 = *(_BYTE *)(v8 + 21);
      v151 = *(_BYTE *)(v8 + 22);
      v25 = *(_BYTE *)(v8 + 23);
      v26 = *(_BYTE *)(v8 + 24);
      v27 = *(_BYTE *)(v8 + 25);
      v28 = *(_BYTE *)(v8 + 26);
      v29 = *(_BYTE *)(v8 + 27);
      v30 = *(_BYTE *)(v8 + 28);
      v31 = *(_BYTE *)(v8 + 29);
      v32 = *(_BYTE *)(v8 + 30);
      v33 = *(_BYTE *)(v8 + 31);
      v34 = *(_BYTE *)(v8 + 32);
      v35 = *(_BYTE *)(v8 + 33);
      v36 = *(_BYTE *)(v8 + 34);
      v37 = *(_BYTE *)(v8 + 35);
      v38 = *(_BYTE *)(v8 + 36);
      v39 = *(_BYTE *)(v8 + 37);
      v40 = *(_BYTE *)(v8 + 38);
      v41 = *(_BYTE *)(v8 + 39);
      v121 = *(_WORD *)(v8 + 41);
      v120 = *(_WORD *)(v8 + 43);
      v119 = *(_QWORD *)(v8 + 47);
      v127 = v22;
      v128 = v11;
      v149 = *(double *)&v16;
      v140 = v24;
      v139 = v18;
      v123 = v41;
      v138 = v25;
      v137 = v26;
      v136 = v27;
      v135 = v28;
      v134 = v29;
      v133 = v30;
      v132 = v32;
      v147 = v34;
      v148 = v33;
      v145 = v36;
      v146 = v35;
      v144 = v37;
      v143 = v38;
      v142 = v39;
      v141 = v17;
      v122 = v19;
      v131 = v20;
      v130 = v13;
      v129 = v21;
      v118 = v10;
      if ((a2 & 1) == 0)
      {
        v116 = v12.i64[0];
        *(_QWORD *)&v42 = *(_QWORD *)(v8 - 24);
        DWORD2(v42) = vmovn_s16(v12).u32[0];
        v124 = v23.i64[0];
        *(_QWORD *)&v43 = *(_QWORD *)(v8 + 8);
        DWORD2(v43) = vmovn_s16(v23).u32[0];
        v156[0] = *(_BYTE *)(v8 - 25);
        BYTE12(v42) = v150;
        BYTE13(v42) = v13;
        BYTE14(v42) = v14;
        HIBYTE(v42) = v21;
        BYTE12(v43) = v24;
        BYTE13(v43) = v152;
        BYTE14(v43) = v151;
        *(_OWORD *)&v156[1] = v42;
        HIBYTE(v43) = v41;
        *(_OWORD *)&v156[17] = v43;
        v44 = a3;
        if (*(_QWORD *)(*a3 + 16))
        {
          sub_2497F24CC((__int128 *)v156);
          if ((v45 & 1) != 0)
            goto LABEL_20;
          v44 = a3;
        }
        swift_isUniquelyReferenced_nonNull_native();
        v46 = (_QWORD *)*v44;
        v153 = (_QWORD *)*v44;
        *v44 = 0x8000000000000000;
        v47 = sub_2497F24CC((__int128 *)v156);
        if (__OFADD__(v46[2], (v48 & 1) == 0))
          goto LABEL_41;
        v49 = v47;
        v50 = v48;
        __swift_instantiateConcreteTypeFromMangledName(&qword_257882108);
        v51 = sub_249837270();
        v52 = v122;
        if ((v51 & 1) != 0)
        {
          v53 = sub_2497F24CC((__int128 *)v156);
          if ((v50 & 1) != (v54 & 1))
            goto LABEL_45;
          v49 = v53;
          v52 = v122;
        }
        if ((v50 & 1) != 0)
        {
          v55 = v153[7] + 80 * v49;
          *(_BYTE *)(v55 + 9) = v116;
          *(_BYTE *)(v55 + 10) = BYTE2(v116);
          *(_BYTE *)(v55 + 11) = BYTE4(v116);
          *(_BYTE *)(v55 + 12) = BYTE6(v116);
          *(_BYTE *)(v55 + 41) = v124;
          *(_BYTE *)(v55 + 42) = BYTE2(v124);
          *(_BYTE *)(v55 + 43) = BYTE4(v124);
          *(_BYTE *)(v55 + 44) = BYTE6(v124);
          v10 = v118;
          *(_BYTE *)v55 = v118;
          *(_QWORD *)(v55 + 1) = v128;
          *(_BYTE *)(v55 + 13) = v150;
          *(_BYTE *)(v55 + 14) = v130;
          *(_BYTE *)(v55 + 15) = v14;
          *(_BYTE *)(v55 + 16) = v15;
          *(double *)(v55 + 17) = v149;
          *(_DWORD *)(v55 + 25) = vmovn_s16(v141).u32[0];
          *(_BYTE *)(v55 + 29) = v139;
          v19 = v52;
          *(_BYTE *)(v55 + 30) = v52;
          *(_BYTE *)(v55 + 31) = v131;
          *(_BYTE *)(v55 + 32) = v21;
          *(_QWORD *)(v55 + 33) = v127;
          *(_BYTE *)(v55 + 45) = v140;
          *(_BYTE *)(v55 + 46) = v152;
          *(_BYTE *)(v55 + 47) = v151;
          *(_BYTE *)(v55 + 48) = v138;
          *(_BYTE *)(v55 + 49) = v137;
          *(_BYTE *)(v55 + 50) = v136;
          *(_BYTE *)(v55 + 51) = v135;
          *(_BYTE *)(v55 + 52) = v134;
          *(_BYTE *)(v55 + 53) = v133;
          *(_BYTE *)(v55 + 54) = v31;
          *(_BYTE *)(v55 + 55) = v132;
          *(_BYTE *)(v55 + 56) = v148;
          *(_BYTE *)(v55 + 57) = v147;
          *(_BYTE *)(v55 + 58) = v146;
          *(_BYTE *)(v55 + 59) = v145;
          *(_BYTE *)(v55 + 60) = v144;
          *(_BYTE *)(v55 + 61) = v143;
          *(_BYTE *)(v55 + 62) = v142;
          *(_BYTE *)(v55 + 63) = v40;
          v41 = v123;
          *(_BYTE *)(v55 + 64) = v123;
          *(_WORD *)(v55 + 66) = v121;
          *(_WORD *)(v55 + 68) = v120;
          *(_QWORD *)(v55 + 72) = v119;
        }
        else
        {
          v153[(v49 >> 6) + 8] |= 1 << v49;
          v56 = v153[6] + 33 * v49;
          *(_BYTE *)(v56 + 32) = v156[32];
          v57 = *(_OWORD *)&v156[16];
          *(_OWORD *)v56 = *(_OWORD *)v156;
          *(_OWORD *)(v56 + 16) = v57;
          v58 = v153[7] + 80 * v49;
          *(_BYTE *)(v58 + 9) = v116;
          *(_BYTE *)(v58 + 10) = BYTE2(v116);
          *(_BYTE *)(v58 + 11) = BYTE4(v116);
          *(_BYTE *)(v58 + 12) = BYTE6(v116);
          *(_BYTE *)(v58 + 41) = v124;
          *(_BYTE *)(v58 + 42) = BYTE2(v124);
          *(_BYTE *)(v58 + 43) = BYTE4(v124);
          *(_BYTE *)(v58 + 44) = BYTE6(v124);
          v10 = v118;
          *(_BYTE *)v58 = v118;
          *(_QWORD *)(v58 + 1) = v128;
          *(_BYTE *)(v58 + 13) = v150;
          *(_BYTE *)(v58 + 14) = v130;
          *(_BYTE *)(v58 + 15) = v14;
          *(_BYTE *)(v58 + 16) = v15;
          *(double *)(v58 + 17) = v149;
          *(_DWORD *)(v58 + 25) = vmovn_s16(v141).u32[0];
          *(_BYTE *)(v58 + 29) = v139;
          *(_BYTE *)(v58 + 30) = v52;
          *(_BYTE *)(v58 + 31) = v131;
          *(_BYTE *)(v58 + 32) = v21;
          *(_QWORD *)(v58 + 33) = v127;
          *(_BYTE *)(v58 + 45) = v140;
          *(_BYTE *)(v58 + 46) = v152;
          *(_BYTE *)(v58 + 47) = v151;
          *(_BYTE *)(v58 + 48) = v138;
          *(_BYTE *)(v58 + 49) = v137;
          *(_BYTE *)(v58 + 50) = v136;
          *(_BYTE *)(v58 + 51) = v135;
          *(_BYTE *)(v58 + 52) = v134;
          *(_BYTE *)(v58 + 53) = v133;
          *(_BYTE *)(v58 + 54) = v31;
          *(_BYTE *)(v58 + 55) = v132;
          *(_BYTE *)(v58 + 56) = v148;
          *(_BYTE *)(v58 + 57) = v147;
          *(_BYTE *)(v58 + 58) = v146;
          *(_BYTE *)(v58 + 59) = v145;
          *(_BYTE *)(v58 + 60) = v144;
          *(_BYTE *)(v58 + 61) = v143;
          *(_BYTE *)(v58 + 62) = v142;
          *(_BYTE *)(v58 + 63) = v40;
          v41 = v123;
          *(_BYTE *)(v58 + 64) = v123;
          *(_WORD *)(v58 + 66) = v121;
          *(_WORD *)(v58 + 68) = v120;
          *(_QWORD *)(v58 + 72) = v119;
          v59 = v153[2];
          v60 = __OFADD__(v59, 1);
          v61 = v59 + 1;
          if (v60)
            goto LABEL_42;
          v19 = v52;
          v153[2] = v61;
        }
        *v44 = v153;
        swift_bridgeObjectRelease();
        *(double *)&v16 = v149;
        v25 = v138;
        v26 = v137;
        v27 = v136;
        v28 = v135;
        v29 = v134;
        v30 = v133;
        v32 = v132;
        v34 = v147;
        v33 = v148;
        v36 = v145;
        v35 = v146;
        v37 = v144;
        v38 = v143;
        v39 = v142;
        v17 = v141;
        v20 = v131;
        v13 = v130;
        v22 = v127;
        v11 = v128;
        v23.i64[0] = v124;
        v12.i64[0] = v116;
        v24 = v140;
        v18 = v139;
      }
      v125 = v9;
      v62 = v21;
      __src[0] = v10;
      *(_QWORD *)&__src[1] = v11;
      v117 = v12.i8[0];
      __src[9] = v12.i8[0];
      v110 = v12.i8[2];
      __src[10] = v12.i8[2];
      __src[11] = v12.i8[4];
      v108 = v12.i8[6];
      v109 = v12.i8[4];
      __src[12] = v12.i8[6];
      __src[13] = v150;
      __src[14] = v13;
      v63 = v14;
      __src[15] = v14;
      DWORD2(v16) = vmovn_s16(v17).u32[0];
      BYTE12(v16) = v18;
      BYTE13(v16) = v19;
      v64 = v15;
      __src[16] = v15;
      BYTE14(v16) = v20;
      HIBYTE(v16) = v41;
      *(_OWORD *)&__src[17] = v16;
      __src[33] = v62;
      *(_QWORD *)&__src[34] = v22;
      v65 = v23.i8[0];
      __src[42] = v23.i8[0];
      v107 = v23.i8[2];
      __src[43] = v23.i8[2];
      v66 = v23.i8[4];
      v67 = v23.i8[6];
      __src[44] = v23.i8[4];
      __src[45] = v23.i8[6];
      __src[46] = v24;
      __src[47] = v152;
      __src[48] = v151;
      __src[49] = v25;
      __src[50] = v26;
      __src[51] = v27;
      __src[52] = v28;
      __src[53] = v29;
      __src[54] = v30;
      __src[55] = v31;
      __src[56] = v32;
      __src[57] = v33;
      __src[58] = v34;
      __src[59] = v35;
      __src[60] = v36;
      __src[61] = v37;
      __src[62] = v38;
      __src[63] = v39;
      __src[64] = v40;
      __src[65] = 0x1000302u >> (8 * v41);
      if (!*(_QWORD *)(*a4 + 16))
      {
        v69 = a4;
        v9 = v125;
        goto LABEL_24;
      }
      sub_2497F239C((__int128 *)__src);
      v9 = v125;
      if ((v68 & 1) == 0)
        break;
LABEL_20:
      ++v9;
      v8 += 80;
      a1 = v114;
      if (v112 == v9)
        goto LABEL_39;
    }
    v69 = a4;
LABEL_24:
    swift_isUniquelyReferenced_nonNull_native();
    v70 = (_QWORD *)*v69;
    v154 = (_QWORD *)*v69;
    *v69 = 0x8000000000000000;
    v71 = sub_2497F239C((__int128 *)__src);
    if (__OFADD__(v70[2], (v72 & 1) == 0))
      goto LABEL_43;
    v73 = v72;
    v111 = v64;
    v74 = v71;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882110);
    v75 = a4;
    v126 = v65;
    if ((sub_249837270() & 1) == 0)
      goto LABEL_28;
    v76 = sub_2497F239C((__int128 *)__src);
    if ((v73 & 1) != (v77 & 1))
      goto LABEL_45;
    v74 = v76;
LABEL_28:
    if ((v73 & 1) != 0)
    {
      v78 = v154[7] + 80 * v74;
      *(_BYTE *)(v78 + 25) = v141.i8[0];
      *(_BYTE *)(v78 + 26) = v141.i8[2];
      *(_BYTE *)(v78 + 27) = v141.i8[4];
      *(_BYTE *)(v78 + 28) = v141.i8[6];
      *(_BYTE *)v78 = v118;
      *(_QWORD *)(v78 + 1) = v128;
      *(_BYTE *)(v78 + 9) = v117;
      *(_BYTE *)(v78 + 10) = v110;
      *(_BYTE *)(v78 + 11) = v109;
      *(_BYTE *)(v78 + 12) = v108;
      *(_BYTE *)(v78 + 13) = v150;
      *(_BYTE *)(v78 + 14) = v130;
      v79 = v63;
      *(_BYTE *)(v78 + 15) = v63;
      v80 = v111;
      *(_BYTE *)(v78 + 16) = v111;
      *(double *)(v78 + 17) = v149;
      *(_BYTE *)(v78 + 29) = v139;
      *(_BYTE *)(v78 + 30) = v122;
      *(_BYTE *)(v78 + 31) = v131;
      *(_BYTE *)(v78 + 32) = v129;
      *(_QWORD *)(v78 + 33) = v127;
      *(_BYTE *)(v78 + 41) = v126;
      *(_BYTE *)(v78 + 42) = v107;
      *(_BYTE *)(v78 + 43) = v66;
      *(_BYTE *)(v78 + 44) = v67;
      *(_BYTE *)(v78 + 45) = v140;
      *(_BYTE *)(v78 + 46) = v152;
      *(_BYTE *)(v78 + 47) = v151;
      *(_BYTE *)(v78 + 48) = v138;
      *(_BYTE *)(v78 + 49) = v137;
      *(_BYTE *)(v78 + 50) = v136;
      *(_BYTE *)(v78 + 51) = v135;
      *(_BYTE *)(v78 + 52) = v134;
      *(_BYTE *)(v78 + 53) = v133;
      *(_BYTE *)(v78 + 54) = v31;
      *(_BYTE *)(v78 + 55) = v132;
      *(_BYTE *)(v78 + 56) = v148;
      *(_BYTE *)(v78 + 57) = v147;
      *(_BYTE *)(v78 + 58) = v146;
      *(_BYTE *)(v78 + 59) = v145;
      *(_BYTE *)(v78 + 60) = v144;
      *(_BYTE *)(v78 + 61) = v143;
      *(_BYTE *)(v78 + 62) = v142;
      *(_BYTE *)(v78 + 63) = v40;
      *(_BYTE *)(v78 + 64) = v123;
      *(_WORD *)(v78 + 66) = v121;
      *(_WORD *)(v78 + 68) = v120;
      *(_QWORD *)(v78 + 72) = v119;
      goto LABEL_32;
    }
    v154[(v74 >> 6) + 8] |= 1 << v74;
    memcpy((void *)(v154[6] + 66 * v74), __src, 0x42uLL);
    v81 = v154[7] + 80 * v74;
    *(_BYTE *)(v81 + 25) = v141.i8[0];
    *(_BYTE *)(v81 + 26) = v141.i8[2];
    *(_BYTE *)(v81 + 27) = v141.i8[4];
    *(_BYTE *)(v81 + 28) = v141.i8[6];
    *(_BYTE *)v81 = v118;
    *(_QWORD *)(v81 + 1) = v128;
    *(_BYTE *)(v81 + 9) = v117;
    *(_BYTE *)(v81 + 10) = v110;
    *(_BYTE *)(v81 + 11) = v109;
    *(_BYTE *)(v81 + 12) = v108;
    *(_BYTE *)(v81 + 13) = v150;
    *(_BYTE *)(v81 + 14) = v130;
    v79 = v63;
    *(_BYTE *)(v81 + 15) = v63;
    v80 = v111;
    *(_BYTE *)(v81 + 16) = v111;
    *(double *)(v81 + 17) = v149;
    *(_BYTE *)(v81 + 29) = v139;
    *(_BYTE *)(v81 + 30) = v122;
    *(_BYTE *)(v81 + 31) = v131;
    *(_BYTE *)(v81 + 32) = v129;
    *(_QWORD *)(v81 + 33) = v127;
    *(_BYTE *)(v81 + 41) = v126;
    *(_BYTE *)(v81 + 42) = v107;
    *(_BYTE *)(v81 + 43) = v66;
    *(_BYTE *)(v81 + 44) = v67;
    *(_BYTE *)(v81 + 45) = v140;
    *(_BYTE *)(v81 + 46) = v152;
    *(_BYTE *)(v81 + 47) = v151;
    *(_BYTE *)(v81 + 48) = v138;
    *(_BYTE *)(v81 + 49) = v137;
    *(_BYTE *)(v81 + 50) = v136;
    *(_BYTE *)(v81 + 51) = v135;
    *(_BYTE *)(v81 + 52) = v134;
    *(_BYTE *)(v81 + 53) = v133;
    *(_BYTE *)(v81 + 54) = v31;
    *(_BYTE *)(v81 + 55) = v132;
    *(_BYTE *)(v81 + 56) = v148;
    *(_BYTE *)(v81 + 57) = v147;
    *(_BYTE *)(v81 + 58) = v146;
    *(_BYTE *)(v81 + 59) = v145;
    *(_BYTE *)(v81 + 60) = v144;
    *(_BYTE *)(v81 + 61) = v143;
    *(_BYTE *)(v81 + 62) = v142;
    *(_BYTE *)(v81 + 63) = v40;
    *(_BYTE *)(v81 + 64) = v123;
    *(_WORD *)(v81 + 66) = v121;
    *(_WORD *)(v81 + 68) = v120;
    *(_QWORD *)(v81 + 72) = v119;
    v82 = v154[2];
    v60 = __OFADD__(v82, 1);
    v83 = v82 + 1;
    if (v60)
      goto LABEL_44;
    v154[2] = v83;
    v75 = a4;
LABEL_32:
    *v75 = v154;
    swift_bridgeObjectRelease();
    v84 = v105;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v157 = v105;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_24974DDBC();
      v84 = v157;
    }
    a1 = v114;
    v86 = *(_QWORD *)(v84 + 16);
    *(double *)&a5 = v149;
    v88 = v147;
    v87 = v148;
    v90 = v145;
    v89 = v146;
    v91 = v144;
    v92 = v143;
    v93 = v142;
    v94 = v141.i64[0];
    v95 = BYTE2(v128);
    v96 = BYTE3(v128);
    v98 = BYTE5(v128);
    v97 = BYTE4(v128);
    v100 = HIBYTE(v128);
    v99 = BYTE6(v128);
    if (v86 >= *(_QWORD *)(v84 + 24) >> 1)
    {
      sub_24974DDBC();
      v100 = HIBYTE(v128);
      v99 = BYTE6(v128);
      v98 = BYTE5(v128);
      v97 = BYTE4(v128);
      v96 = BYTE3(v128);
      v95 = BYTE2(v128);
      v94 = v141.i64[0];
      v93 = v142;
      v92 = v143;
      v91 = v144;
      v90 = v145;
      v89 = v146;
      v88 = v147;
      v87 = v148;
      *(double *)&a5 = v149;
      a1 = v114;
      v84 = v157;
    }
    *(_QWORD *)(v84 + 16) = v86 + 1;
    v105 = v84;
    v101 = v84 + 80 * v86;
    *(_BYTE *)(v101 + 32) = v118;
    *(_WORD *)(v101 + 33) = v128;
    *(_BYTE *)(v101 + 35) = v95;
    *(_BYTE *)(v101 + 36) = v96;
    *(_BYTE *)(v101 + 37) = v97;
    *(_BYTE *)(v101 + 38) = v98;
    *(_BYTE *)(v101 + 39) = v99;
    *(_BYTE *)(v101 + 40) = v100;
    *(_BYTE *)(v101 + 41) = v117;
    *(_BYTE *)(v101 + 42) = v110;
    *(_BYTE *)(v101 + 43) = v109;
    *(_BYTE *)(v101 + 44) = v108;
    *(_BYTE *)(v101 + 45) = v150;
    *(_BYTE *)(v101 + 46) = v130;
    *(_BYTE *)(v101 + 47) = v79;
    *(_BYTE *)(v101 + 48) = v80;
    *(_BYTE *)(v101 + 57) = v94;
    *(_BYTE *)(v101 + 58) = BYTE2(v94);
    *(_BYTE *)(v101 + 59) = BYTE4(v94);
    *(_BYTE *)(v101 + 60) = BYTE6(v94);
    *(_BYTE *)(v101 + 61) = v139;
    *(_BYTE *)(v101 + 62) = v122;
    *(_BYTE *)(v101 + 63) = v131;
    *(_BYTE *)(v101 + 64) = v129;
    *(_DWORD *)(v101 + 65) = v127;
    *(_WORD *)(v101 + 69) = WORD2(v127);
    *(_BYTE *)(v101 + 71) = BYTE6(v127);
    v6 = v9 + 1;
    *(double *)(v101 + 49) = *(double *)&a5;
    *(_BYTE *)(v101 + 72) = HIBYTE(v127);
    *(_BYTE *)(v101 + 73) = v126;
    *(_BYTE *)(v101 + 74) = v107;
    *(_BYTE *)(v101 + 75) = v66;
    *(_BYTE *)(v101 + 76) = v67;
    *(_BYTE *)(v101 + 77) = v140;
    *(_BYTE *)(v101 + 78) = v152;
    *(_BYTE *)(v101 + 79) = v151;
    *(_BYTE *)(v101 + 80) = v138;
    *(_BYTE *)(v101 + 81) = v137;
    *(_BYTE *)(v101 + 82) = v136;
    *(_BYTE *)(v101 + 83) = v135;
    *(_BYTE *)(v101 + 84) = v134;
    *(_BYTE *)(v101 + 85) = v133;
    *(_BYTE *)(v101 + 86) = v31;
    *(_BYTE *)(v101 + 87) = v132;
    *(_BYTE *)(v101 + 88) = v87;
    *(_BYTE *)(v101 + 89) = v88;
    *(_BYTE *)(v101 + 90) = v89;
    *(_BYTE *)(v101 + 91) = v90;
    *(_BYTE *)(v101 + 92) = v91;
    *(_BYTE *)(v101 + 93) = v92;
    *(_BYTE *)(v101 + 94) = v93;
    *(_BYTE *)(v101 + 95) = v40;
    *(_BYTE *)(v101 + 96) = v123;
    *(_WORD *)(v101 + 98) = v121;
    *(_WORD *)(v101 + 100) = v120;
    *(_QWORD *)(v101 + 104) = v119;
    v7 = v104;
  }
  while (v103 != v9);
LABEL_39:
  swift_bridgeObjectRelease();
  return v105;
}

uint64_t sub_2497EB530(uint64_t a1, uint64_t (*a2)(__int32 *))
{
  uint64_t v2;
  uint64_t v3;
  int8x16_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  __int128 v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  int8x16_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  __int16 v34;
  __int16 v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  int16x8_t v41;
  int8x16_t v42;
  char v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  int8x16_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v55;
  __int16 v56;
  __int16 v57;
  int8x16_t v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  int8x16_t v80;
  __int128 v81;
  _BYTE __s2[10];
  unsigned __int32 v83;
  __int16 v84;
  __int32 __s1;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  uint64_t v92;
  char v93;
  char v94;
  __int128 v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  int8x16_t v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  __int16 v110;
  __int16 v111;
  uint64_t v112;

  v112 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  v3 = swift_bridgeObjectRetain();
  v5 = 0;
  v55 = MEMORY[0x24BEE4AF8];
  v53 = v3;
  do
  {
    v71 = v5;
    v72 = v2;
    v6 = v3 + v5;
    v7 = *(_BYTE *)(v3 + v5 + 32);
    v8 = *(_BYTE *)(v3 + v5 + 33);
    v9 = *(_BYTE *)(v3 + v5 + 34);
    v10 = *(_BYTE *)(v3 + v5 + 35);
    v11 = *(_BYTE *)(v3 + v5 + 36);
    v12 = *(_BYTE *)(v3 + v5 + 37);
    v13 = *(_BYTE *)(v3 + v5 + 38);
    v14 = *(_BYTE *)(v3 + v5 + 39);
    v15 = *(_BYTE *)(v6 + 40);
    v16 = *(_BYTE *)(v6 + 41);
    v4.i64[0] = *(_QWORD *)(v6 + 42);
    v17 = *(_BYTE *)(v6 + 50);
    v18 = *(_BYTE *)(v6 + 51);
    v19 = *(_OWORD *)(v6 + 52);
    v20 = *(_BYTE *)(v6 + 68);
    v21 = *(_BYTE *)(v6 + 69);
    v22 = *(_BYTE *)(v6 + 70);
    v23 = *(_BYTE *)(v6 + 71);
    v24 = *(_BYTE *)(v6 + 72);
    v25 = *(_BYTE *)(v6 + 73);
    v26 = *(int8x16_t *)(v6 + 74);
    v27 = *(_BYTE *)(v6 + 90);
    v28 = *(_BYTE *)(v6 + 91);
    v29 = *(_BYTE *)(v6 + 92);
    v30 = *(_BYTE *)(v6 + 93);
    v31 = *(_BYTE *)(v6 + 94);
    v32 = *(_BYTE *)(v6 + 95);
    v33 = *(unsigned __int8 *)(v6 + 96);
    v34 = *(_WORD *)(v6 + 98);
    v35 = *(_WORD *)(v6 + 100);
    v36 = *(double *)(v6 + 104);
    v74 = v7;
    v75 = v8;
    LOBYTE(__s1) = v7;
    BYTE1(__s1) = v8;
    v76 = v9;
    v77 = v12;
    BYTE2(__s1) = v9;
    v73 = v10;
    HIBYTE(__s1) = v10;
    v79 = v11;
    v86 = v11;
    v87 = v12;
    v88 = v13;
    v89 = v14;
    v90 = v15;
    v91 = v16;
    v80 = v4;
    v92 = v4.i64[0];
    v69 = v18;
    v70 = v17;
    v93 = v17;
    v94 = v18;
    v81 = v19;
    v95 = v19;
    v59 = v20;
    v96 = v20;
    v97 = v21;
    v61 = v23;
    v98 = v22;
    v99 = v23;
    v62 = v24;
    v63 = v25;
    v100 = v24;
    v101 = v25;
    v58 = v26;
    v102 = v26;
    v67 = v28;
    v68 = v27;
    v103 = v27;
    v104 = v28;
    v66 = v30;
    v105 = v29;
    v106 = v30;
    v64 = v32;
    v65 = v31;
    v107 = v31;
    v108 = v32;
    v109 = v33;
    v110 = v34;
    v56 = v35;
    v111 = v35;
    if ((a2(&__s1) & 1) != 0)
    {
      v38 = v71;
      v37 = v72;
    }
    else
    {
      v39 = 1.84467441e19;
      if (v36 * 1000.0 <= 1.84467441e19)
        v39 = v36 * 1000.0;
      if (v36 * 1000.0 > 0.0)
        v40 = v39;
      else
        v40 = 0.0;
      if ((~*(_QWORD *)&v40 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
      }
      if (v40 <= -1.0)
        goto LABEL_25;
      if (v40 >= 1.84467441e19)
        goto LABEL_26;
      v57 = v34;
      v41.i64[1] = *((_QWORD *)&v81 + 1);
      v41.i16[0] = BYTE12(v81);
      v41.i16[1] = BYTE13(v81);
      v41.i16[2] = BYTE14(v81);
      v41.i16[3] = HIBYTE(v81);
      *(int8x8_t *)v41.i8 = vmovn_s16(v41);
      __s1 = v41.i32[0];
      v86 = v20;
      v87 = v21;
      v88 = v22;
      v89 = v61;
      v90 = v62;
      v91 = v63;
      v42 = vzip1q_s8(v58, (int8x16_t)v41);
      *(int8x8_t *)v42.i8 = vmovn_s16((int16x8_t)v42);
      LODWORD(v92) = v42.i32[0];
      WORD2(v92) = v58.i16[2];
      __s2[0] = v74;
      __s2[1] = v75;
      __s2[2] = v76;
      __s2[3] = v73;
      __s2[4] = v79;
      __s2[5] = v77;
      __s2[6] = v13;
      __s2[7] = v14;
      __s2[8] = v15;
      __s2[9] = v16;
      v83 = vmovn_s16((int16x8_t)vzip1q_s8(v80, v42)).u32[0];
      v84 = v80.i16[2];
      if (memcmp(&__s1, __s2, 0x10uLL) < 0)
        __asm { BR              X8 }
      v43 = v77;
      v44 = v14;
      v78 = v21;
      v38 = v71;
      v37 = v72;
      v60 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      {
        v45 = v55;
      }
      else
      {
        sub_249752C44();
        v45 = v50;
      }
      v46 = *(_QWORD *)(v45 + 16);
      v47 = v58;
      v48 = v80.i64[0];
      if (v46 >= *(_QWORD *)(v45 + 24) >> 1)
      {
        sub_249752C44();
        v48 = v80.i64[0];
        v47 = v58;
        v45 = v51;
      }
      *(_QWORD *)(v45 + 16) = v46 + 1;
      v55 = v45;
      v49 = v45 + 80 * v46;
      *(_BYTE *)(v49 + 32) = v74;
      *(_BYTE *)(v49 + 33) = v75;
      *(_BYTE *)(v49 + 34) = v76;
      *(_BYTE *)(v49 + 35) = v73;
      *(_BYTE *)(v49 + 36) = v79;
      *(_BYTE *)(v49 + 37) = v43;
      *(_BYTE *)(v49 + 38) = v13;
      *(_BYTE *)(v49 + 39) = v60;
      *(_BYTE *)(v49 + 40) = v15;
      *(_BYTE *)(v49 + 41) = v16;
      *(_BYTE *)(v49 + 50) = v70;
      *(_BYTE *)(v49 + 51) = v69;
      *(_BYTE *)(v49 + 68) = v59;
      *(_BYTE *)(v49 + 69) = v78;
      *(_BYTE *)(v49 + 70) = v22;
      *(_BYTE *)(v49 + 71) = v61;
      *(_BYTE *)(v49 + 72) = v62;
      *(_BYTE *)(v49 + 73) = v63;
      *(_BYTE *)(v49 + 90) = v68;
      *(_BYTE *)(v49 + 91) = v67;
      *(_BYTE *)(v49 + 92) = v29;
      *(_BYTE *)(v49 + 93) = v66;
      *(_BYTE *)(v49 + 94) = v65;
      *(_BYTE *)(v49 + 95) = v64;
      *(_BYTE *)(v49 + 96) = v33;
      *(_WORD *)(v49 + 98) = v57;
      *(_WORD *)(v49 + 100) = v56;
      *(_QWORD *)(v49 + 104) = (unint64_t)v40;
      *(_QWORD *)(v49 + 42) = v48;
      v4.i64[1] = *((_QWORD *)&v81 + 1);
      *(_OWORD *)(v49 + 52) = v81;
      *(int8x16_t *)(v49 + 74) = v47;
    }
    v5 = v38 + 80;
    v2 = v37 - 1;
    v3 = v53;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v55;
}

uint64_t UniversalControlConfiguration.init(data:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_24983685C();
  OUTLINED_FUNCTION_91();
  sub_249836850();
  OUTLINED_FUNCTION_42_3();
  sub_249759088(qword_2578805C0, (uint64_t (*)(uint64_t))type metadata accessor for UVC1Config, (uint64_t)&unk_24983C184);
  sub_249836844();
  if (v1)
  {
    OUTLINED_FUNCTION_0_20();
    return OUTLINED_FUNCTION_17_0();
  }
  else
  {
    swift_retain();
    sub_2497ECFBC();
    qword_257882098 = v4;
    unk_2578820A0 = v5;
    qword_2578820A8 = v6;
    swift_release();
    OUTLINED_FUNCTION_0_20();
    result = OUTLINED_FUNCTION_17_0();
    *a1 = v6;
  }
  return result;
}

uint64_t UniversalControlConfiguration.encoded()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v24;
  uint64_t v25;

  if ((unint64_t)qword_2578820C8 >> 60 != 15)
  {
    v2 = qword_2578820B0;
    v3 = *(_QWORD *)algn_2578820B8;
    v1 = qword_2578820C0;
    v4 = OUTLINED_FUNCTION_64_4();
    sub_2497ED1F8(v4, v5, v6, v7);
    OUTLINED_FUNCTION_46_0();
    v8 = sub_2497E8ACC();
    v10 = v9;
    OUTLINED_FUNCTION_41_1();
    if (!static UniversalControlUUID.compare(lhs:rhs:)(v2, v3, v8, v10))
      return v1;
    v11 = OUTLINED_FUNCTION_64_4();
    sub_2497ED1DC(v11, v12, v13, v14);
  }
  sub_24983688C();
  OUTLINED_FUNCTION_91();
  sub_249836880();
  sub_249836868();
  OUTLINED_FUNCTION_42_3();
  sub_249759088(&qword_2578820D0, (uint64_t (*)(uint64_t))type metadata accessor for UVC1Config, (uint64_t)&unk_24983C15C);
  OUTLINED_FUNCTION_46_0();
  v15 = sub_249836874();
  if (v0)
  {
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_41_1();
  }
  else
  {
    v1 = v15;
    v17 = v16;
    OUTLINED_FUNCTION_41_1();
    OUTLINED_FUNCTION_46_0();
    v18 = sub_2497E8ACC();
    v20 = v19;
    OUTLINED_FUNCTION_41_1();
    v21 = qword_2578820B0;
    v22 = *(_QWORD *)algn_2578820B8;
    v24 = qword_2578820C8;
    v25 = qword_2578820C0;
    qword_2578820B0 = v18;
    *(_QWORD *)algn_2578820B8 = v20;
    qword_2578820C0 = v1;
    qword_2578820C8 = v17;
    sub_249748BCC(v1, v17);
    sub_2497ED1DC(v21, v22, v25, v24);
    OUTLINED_FUNCTION_49_0();
  }
  return v1;
}

void UniversalControlConfiguration.GradedLink.endpoint1.getter(__n128 *a1@<X8>)
{
  __n128 *v1;

  OUTLINED_FUNCTION_35_4(a1, *v1, v1[1]);
}

uint64_t UniversalControlConfiguration.GradedLink.edge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t UniversalControlConfiguration.links()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char v16;
  __int16 v17;
  __int16 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v1 = *v0;
  OUTLINED_FUNCTION_16();
  v2 = *(_QWORD *)(v1 + 40);
  v3 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = *(_QWORD *)(v1 + 24);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_51_5(v4);
    v5 = sub_2497F22B8();
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v5);
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_68_4();
      v8 = *(_QWORD *)(v7 + 32);
      swift_bridgeObjectRetain();
      swift_release();
    }
    else
    {
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_68_4();
      v8 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
  }
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    OUTLINED_FUNCTION_35_5();
    sub_24974E1E4();
    v10 = v3;
    v11 = (_QWORD *)(v8 + 104);
    do
    {
      v12 = *(_OWORD *)(v11 - 9);
      v13 = *(_OWORD *)(v11 - 7);
      v14 = *(_OWORD *)(v11 - 5);
      v15 = *(_OWORD *)(v11 - 3);
      v16 = *((_BYTE *)v11 - 8);
      v17 = *((_WORD *)v11 - 3);
      v18 = *((_WORD *)v11 - 2);
      v19 = *v11;
      v21 = *(_QWORD *)(v10 + 16);
      v20 = *(_QWORD *)(v10 + 24);
      if (v21 >= v20 >> 1)
      {
        OUTLINED_FUNCTION_80(v20);
        v30 = v24;
        v31 = v23;
        v28 = v26;
        v29 = v25;
        sub_24974E1E4();
        v15 = v28;
        v14 = v29;
        v13 = v30;
        v12 = v31;
      }
      v11 += 10;
      *(_QWORD *)(v10 + 16) = v21 + 1;
      v22 = v10 + 80 * v21;
      *(_OWORD *)(v22 + 32) = v12;
      *(_OWORD *)(v22 + 48) = v13;
      *(_OWORD *)(v22 + 64) = v14;
      *(_OWORD *)(v22 + 80) = v15;
      *(_BYTE *)(v22 + 96) = v16;
      *(_WORD *)(v22 + 98) = v17;
      *(_WORD *)(v22 + 100) = v18;
      *(double *)(v22 + 104) = (double)v19 / 1000.0;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_23_1();
    return MEMORY[0x24BEE4AF8];
  }
  return v10;
}

void UniversalControlConfiguration.GradedLink.endpoint2.getter(__n128 *a1@<X8>)
{
  __n128 *v1;

  OUTLINED_FUNCTION_35_4(a1, v1[2], v1[3]);
}

uint64_t UniversalControlConfiguration.GradedLink.normalized()@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  int8x16_t v5;
  __int128 v6;
  uint64_t v7;
  unsigned int v8;
  int8x16_t v9;
  uint64x2_t v10;
  int8x16_t v11;
  unint64_t v12;
  uint64x2_t v13;
  int8x16_t v14;
  uint64_t v15;
  uint64_t v16;
  int8x16_t v17;
  int8x16_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  unsigned __int8 v21;
  uint64_t v22;
  __int16 v23;
  __int16 v24;
  int64x2_t v25;
  uint64_t v26;
  int64x2_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  signed __int8 v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  uint64_t v46;
  int8x16_t v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  unsigned __int8 v50;

  v3 = v1[7];
  v38 = v1[7];
  v4 = *(_QWORD *)(v1 + 9);
  v43 = v1[17];
  v44 = v1[18];
  v45 = v1[19];
  v5 = *(int8x16_t *)(v1 + 20);
  v32 = v1[39];
  v6 = *(_OWORD *)(v1 + 41);
  v50 = v1[57];
  v49 = v1[58];
  v48 = v1[59];
  v7 = v5.u8[12];
  v8 = v5.u8[15];
  v47 = v5;
  v34 = v1[60];
  v9.i64[0] = v5.u8[13];
  v9.i64[1] = v5.u8[14];
  v5.i64[0] = 255;
  v5.i64[1] = 255;
  v10 = (uint64x2_t)vandq_s8(v9, v5);
  v36 = v1[36];
  v9.i64[0] = v8;
  v9.i64[1] = v36;
  v11 = vorrq_s8((int8x16_t)vshlq_u64(v10, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v9, v5), (uint64x2_t)xmmword_24983AE40));
  v37 = v1[37];
  v35 = v1[38];
  v12 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v11.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v11, v11, 8uLL)) | (v37 << 40) | ((unint64_t)v32 << 56) | (v35 << 48) | v7;
  v31 = v1[61];
  v9.i64[0] = v6;
  v9.i64[1] = BYTE1(v6);
  v13 = (uint64x2_t)vandq_s8(v9, v5);
  v9.i64[0] = BYTE2(v6);
  v9.i64[1] = BYTE3(v6);
  v40 = v6;
  v14 = vorrq_s8((int8x16_t)vshlq_u64(v13, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v9, v5), (uint64x2_t)xmmword_24983AE40));
  *(int8x8_t *)v14.i8 = vorr_s8(*(int8x8_t *)v14.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v14, v14, 8uLL));
  v14.i64[1] = (unint64_t)BYTE6(v6) << 56;
  v41 = v1[3];
  v42 = v1[1];
  v33 = *v1;
  v39 = v1[2];
  v30 = v1[4];
  v15 = v1[5];
  v16 = v1[6];
  v9.i64[0] = BYTE2(v4);
  v9.i64[1] = BYTE3(v4);
  v17 = (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v9, v5), (uint64x2_t)xmmword_24983AE40);
  v9.i64[0] = v4;
  v9.i64[1] = BYTE1(v4);
  v46 = v4;
  v18 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v9, v5), (uint64x2_t)xmmword_24983AE50), v17);
  *(int8x8_t *)v18.i8 = vorr_s8(*(int8x8_t *)v18.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v18, v18, 8uLL));
  v18.i64[1] = (unint64_t)BYTE6(v4) << 56;
  v19 = v1[62];
  v20 = *((_QWORD *)v1 + 9);
  v21 = v1[63];
  v22 = v1[64];
  v23 = *((_WORD *)v1 + 33);
  v24 = *((_WORD *)v1 + 34);
  v9.i64[0] = BYTE4(v6);
  v9.i64[1] = BYTE5(v6);
  v25 = (int64x2_t)vorrq_s8(v14, (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v9, v5), (uint64x2_t)xmmword_24983AE60));
  v26 = v1[40];
  v9.i64[0] = BYTE4(v4);
  v9.i64[1] = BYTE5(v4);
  v27 = (int64x2_t)vorrq_s8(v18, (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v9, v5), (uint64x2_t)xmmword_24983AE60));
  v28 = v1[8];
  if (static UniversalControlUUID.compare(lhs:rhs:)(v12, vorrq_s8((int8x16_t)v25, (int8x16_t)vdupq_laneq_s64(v25, 1)).u64[0] | v26, v33 | (v42 << 8) | (v39 << 16) | (v41 << 24) | (v30 << 32) | (v15 << 40) | (v16 << 48) | (v3 << 56), vorrq_s8((int8x16_t)v27, (int8x16_t)vdupq_laneq_s64(v27, 1)).u64[0] | v28) == -1)
    __asm { BR              X15 }
  result = v35;
  *(_BYTE *)a1 = v33;
  *(_BYTE *)(a1 + 1) = v42;
  *(_BYTE *)(a1 + 2) = v39;
  *(_BYTE *)(a1 + 3) = v41;
  *(_BYTE *)(a1 + 4) = v30;
  *(_BYTE *)(a1 + 5) = v15;
  *(_BYTE *)(a1 + 6) = v16;
  *(_BYTE *)(a1 + 7) = v38;
  *(_BYTE *)(a1 + 8) = v28;
  *(_QWORD *)(a1 + 9) = v46;
  *(_BYTE *)(a1 + 17) = v43;
  *(_BYTE *)(a1 + 18) = v44;
  *(_BYTE *)(a1 + 19) = v45;
  *(int8x16_t *)(a1 + 20) = v47;
  *(_BYTE *)(a1 + 36) = v36;
  *(_BYTE *)(a1 + 37) = v37;
  *(_BYTE *)(a1 + 38) = v35;
  *(_BYTE *)(a1 + 39) = v32;
  *(_BYTE *)(a1 + 40) = v26;
  *(_OWORD *)(a1 + 41) = v40;
  *(_BYTE *)(a1 + 57) = v50;
  *(_BYTE *)(a1 + 58) = v49;
  *(_BYTE *)(a1 + 59) = v48;
  *(_BYTE *)(a1 + 60) = v34;
  *(_BYTE *)(a1 + 61) = v31;
  *(_BYTE *)(a1 + 62) = v19;
  *(_BYTE *)(a1 + 63) = v21;
  *(_BYTE *)(a1 + 64) = v22;
  *(_WORD *)(a1 + 66) = v23;
  *(_WORD *)(a1 + 68) = v24;
  *(_QWORD *)(a1 + 72) = v20;
  return result;
}

uint64_t UniversalControlConfiguration.GradedLink.fixedOffset1.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 66);
}

uint64_t UniversalControlConfiguration.GradedLink.fixedOffset2.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 68);
}

BOOL sub_2497EC634(double *__src, double *a2)
{
  double v3;
  double v4;
  _BYTE v6[70];
  _BYTE __dst[70];

  v3 = __src[9];
  v4 = a2[9];
  if (v4 < v3)
    return 0;
  if (v3 < v4)
    return 1;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v6, a2, sizeof(v6));
  return (sub_2497F1164(__dst) & 1) == 0;
}

void sub_2497EC6B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_20_2();
  v1 = v0;
  v3 = v2;
  v4 = v2[2];
  v5 = v2[3];
  v6 = v0[2];
  v7 = v0[3];
  v8 = *v2;
  v9 = v2[1];
  v10 = *v0;
  v11 = v0[1];
  if (static UniversalControlUUID.compare(lhs:rhs:)(*v2, v9, *v0, v11) != -1
    && static UniversalControlUUID.compare(lhs:rhs:)(v10, v11, v8, v9) != -1
    && sub_24978B8C8(v8, v9, v4, v5, v10, v11, v6, v7) == 2)
  {
    sub_24978B990(*((unsigned __int8 *)v3 + 32) | (*((unsigned __int16 *)v3 + 17) << 16), *((unsigned __int8 *)v1 + 32) | (*((unsigned __int16 *)v1 + 17) << 16));
  }
  OUTLINED_FUNCTION_3_5();
}

BOOL sub_2497EC790(const void *a1)
{
  char v1;
  unsigned __int8 v3[70];
  unsigned __int8 v4[70];

  OUTLINED_FUNCTION_87(v4, a1);
  OUTLINED_FUNCTION_9_15(v3);
  static UniversalControlLink.< infix(_:_:)(v4, v3);
  return (v1 & 1) == 0;
}

BOOL sub_2497EC7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, a3, a4);
  return OUTLINED_FUNCTION_62_2(v4);
}

BOOL sub_2497EC7F4(unsigned int a1, unsigned int a2)
{
  _BOOL4 v3;

  v3 = a2 < a1 || HIWORD(a1) >= HIWORD(a2);
  return a1 >= a2 && v3;
}

BOOL sub_2497EC81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v16;

  if (static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, a5, a6) == -1)
    return 0;
  if (static UniversalControlUUID.compare(lhs:rhs:)(a5, a6, a1, a2) == -1)
    return 1;
  sub_249772148(a3, a4, a7, a8);
  return (v16 & 1) == 0;
}

BOOL sub_2497EC8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  static UVC1Digest.compare(lhs:rhs:)((uint64_t)v4);
  return OUTLINED_FUNCTION_62_2(v2);
}

BOOL sub_2497EC8F8(unint64_t a1, unint64_t a2)
{
  return (double)a1 / 1000.0 >= (double)a2 / 1000.0;
}

_QWORD *UniversalControlConfiguration.init()@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  type metadata accessor for UVC1Config();
  result = sub_2497E7F28();
  *a1 = result;
  return result;
}

void sub_2497EC94C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  OUTLINED_FUNCTION_20_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_249836C40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_126();
  v19 = v11 - v10;
  v12 = type metadata accessor for UVC1Digester();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_126();
  v15 = v14 - v13;
  *(_QWORD *)(v1 + 32) = v7;
  *(_QWORD *)(v1 + 40) = v5;
  *(_QWORD *)(v1 + 48) = v3;
  swift_bridgeObjectRetain();
  sub_249836C70();
  *(double *)&v20 = (double)v3 / 1000.0;
  _s16UniversalControl12UVC1DigesterV6update13bufferPointerySW_tF_0();
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  v16 = *(_QWORD *)(v1 + 32);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    v18 = v16 + 104;
    do
    {
      v20 = *(_OWORD *)(v18 - 72);
      sub_24980E21C();
      v18 += 80;
      --v17;
    }
    while (v17);
    OUTLINED_FUNCTION_42();
  }
  sub_249836C58();
  sub_249836C34();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v8);
  OUTLINED_FUNCTION_36_5();
  *(_OWORD *)(v1 + 16) = v20;
  sub_24980B58C(v15);
  OUTLINED_FUNCTION_3_5();
}

uint64_t sub_2497ECCF8(uint64_t *a1)
{
  return sub_2497D719C(a1, (uint64_t (*)(uint64_t))sub_24975E0D0, (uint64_t (*)(_QWORD *))sub_2497F6C6C);
}

void Collection<>.links(for:)()
{
  uint64_t v0;

  v0 = Collection<>.links(for:where:)();
  swift_bridgeObjectRetain();
  sub_2497D719C(&v0, (uint64_t (*)(uint64_t))sub_24975E0D0, (uint64_t (*)(_QWORD *))sub_2497F6C6C);
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_40();
}

void UniversalControlConfiguration.digest.getter()
{
  uint64_t v0;

  sub_249748BCC(*(_QWORD *)(*(_QWORD *)v0 + 24), *(_QWORD *)(*(_QWORD *)v0 + 32));
  OUTLINED_FUNCTION_27();
}

void UniversalControlConfiguration.id.getter()
{
  sub_2497E8ACC();
  OUTLINED_FUNCTION_27();
}

__n128 UniversalControlConfiguration.GradedLink.link.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  int v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_BYTE *)(v1 + 64);
  v3 = *(_DWORD *)(v1 + 66);
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  result = *(__n128 *)(v1 + 32);
  v6 = *(_OWORD *)(v1 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 64) = v2;
  *(_DWORD *)(a1 + 66) = v3;
  return result;
}

double UniversalControlConfiguration.GradedLink.timestamp.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

void sub_2497ECFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  OUTLINED_FUNCTION_20_2();
  v1 = v0;
  v2 = sub_249836C7C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8];
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_126();
  v4 = sub_249836C40();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_126();
  sub_249759088(&qword_257881F00, v3, MEMORY[0x24BDC6AE8]);
  sub_249836C28();
  __asm { BR              X10 }
}

void sub_2497ED094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2497D6394();
  OUTLINED_FUNCTION_96(v4);
  sub_249836C1C();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
  sub_249836C34();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 112) + 8))(v3, v5);
  OUTLINED_FUNCTION_3_5();
}

uint64_t sub_2497ED1DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a4 >> 60 != 15)
    return sub_249748C10(a3, a4);
  return result;
}

uint64_t sub_2497ED1F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  if (a4 >> 60 != 15)
    return sub_249748BCC(a3, a4);
  return result;
}

void UniversalControlConfiguration.init(parent:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2497ED264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  double Current;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  uint64_t *v14;

  if (BYTE6(v0) == sub_249836C64())
  {
    type metadata accessor for UVC1Object();
    *(_QWORD *)&v13 = v1;
    *((_QWORD *)&v13 + 1) = v0;
    v3 = sub_24977BDC4((uint64_t *)&v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787F828);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_249838510;
    *(_QWORD *)(v4 + 32) = v1;
    *(_QWORD *)(v4 + 40) = v0;
    OUTLINED_FUNCTION_33_9();
    OUTLINED_FUNCTION_33_9();
    Current = CFAbsoluteTimeGetCurrent();
    sub_24975E378(Current);
    OUTLINED_FUNCTION_1_12();
    sub_2497EC94C();
    v7 = v6;
    v8 = *(_QWORD *)(v6 + 24);
    *(_QWORD *)&v13 = *(_QWORD *)(v6 + 16);
    *((_QWORD *)&v13 + 1) = v8;
    sub_249748BCC(v13, v8);
    sub_249748CD4();
    sub_249836CA0();
    sub_24975A458((uint64_t)v3);
    v14 = v2;
    swift_bridgeObjectRelease();
    sub_24975A458(v7);
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_249778674();
    v11 = sub_249836CA0();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_16_10();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_16_10();
    OUTLINED_FUNCTION_42_3();
    OUTLINED_FUNCTION_1_12();
    result = sub_2497E7F0C(&v13, v10, v11);
    *v14 = result;
  }
  else
  {
    OUTLINED_FUNCTION_16_10();
    sub_249783D14(0, (unint64_t *)&qword_2578805A8);
    NSError.init(NSOSStatusErrorDomain:debugDescription:__file:__line:)(-6743, 0xD000000000000013, 0x8000000249841720);
    swift_willThrow();
    return OUTLINED_FUNCTION_16_10();
  }
  return result;
}

uint64_t UniversalControlConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249837714();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    sub_2497F2324();
    sub_2498375DC();
    sub_2497ECFBC();
    v6 = v5;
    v8 = v7;
    v9 = qword_2578820A8;
    if (qword_2578820A8)
    {
      v11 = qword_257882098;
      v10 = unk_2578820A0;
      swift_retain();
      if (!static UniversalControlUUID.compare(lhs:rhs:)(v11, v10, v6, v8))
      {
LABEL_6:
        v12 = OUTLINED_FUNCTION_71_5();
        OUTLINED_FUNCTION_9_3(v12, v13, v14);
        *a2 = v9;
        return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      }
      OUTLINED_FUNCTION_49_0();
    }
    v9 = sub_2497ED5F8();
    qword_257882098 = v6;
    unk_2578820A0 = v8;
    qword_2578820A8 = v9;
    swift_retain();
    swift_release();
    goto LABEL_6;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2497ED5F8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_24983685C();
  OUTLINED_FUNCTION_91();
  sub_249836850();
  OUTLINED_FUNCTION_42_3();
  sub_249759088(qword_2578805C0, (uint64_t (*)(uint64_t))type metadata accessor for UVC1Config, (uint64_t)&unk_24983C184);
  sub_249836844();
  result = OUTLINED_FUNCTION_17_0();
  if (!v0)
    return v2;
  return result;
}

uint64_t UniversalControlConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE v8[24];
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249837738();
  v2 = UniversalControlConfiguration.encoded()();
  if (!v1)
  {
    v5 = v2;
    v6 = v3;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
    sub_2497F2360();
    sub_249837600();
    v2 = sub_249748C10(v5, v6);
  }
  return OUTLINED_FUNCTION_9_3(v2, v3, v4);
}

void sub_2497ED76C(_BYTE *a1@<X8>)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  UniversalControlConfiguration.id.getter();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  a1[14] = v16;
  a1[15] = v17;
}

uint64_t sub_2497ED804@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return UniversalControlConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2497ED818(_QWORD *a1)
{
  return UniversalControlConfiguration.encode(to:)(a1);
}

uint64_t static UniversalControlConfiguration.== infix(_:_:)(_QWORD **a1, _QWORD **a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = *a2;
  type metadata accessor for UVC1Config();
  return sub_2497E8878(v2, v3) & 1;
}

uint64_t UniversalControlConfiguration.hash(into:)()
{
  OUTLINED_FUNCTION_22_1();
  sub_2497E899C();
  return swift_release();
}

void UniversalControlConfiguration.hashValue.getter()
{
  sub_249837690();
  OUTLINED_FUNCTION_22_1();
  sub_2497E899C();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_40();
}

uint64_t sub_2497ED8E8()
{
  sub_249837690();
  swift_retain();
  sub_2497E899C();
  swift_release();
  return sub_2498376E4();
}

void UniversalControlConfiguration.findConflicts(_:)(uint64_t a1)
{
  char v1;
  int v2;
  __int128 v3;
  __int128 v4;
  _OWORD v5[4];
  char v6;
  int v7;

  v1 = *(_BYTE *)(a1 + 64);
  v2 = *(_DWORD *)(a1 + 66);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v4;
  v6 = v1;
  v7 = v2;
  sub_2497452F8((unsigned __int8 *)v5);
  OUTLINED_FUNCTION_40();
}

uint64_t UniversalControlConfiguration.addingLinks(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  double v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char *v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  int8x16_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  int8x16_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  int8x16_t v33;
  int8x16_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  __int16 v42;
  int8x16_t v43;
  int8x16_t v44;
  uint64_t v45;
  char v46;
  char v47;
  unint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t result;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  char v59;
  char v60;
  __int16 v61;
  uint64_t v62;
  char v63;
  int8x16_t v64;
  char v65;
  int8x16_t v66;
  char v67;
  uint64_t v68;
  char v69;
  char v70;
  char v71;
  char v72;
  __int16 v73;
  char v74;
  char v75;
  char v76;
  uint64_t v77;
  int8x16_t v78;
  __int128 v79;
  __int128 v80;
  int8x16_t v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  _BYTE v89[9];
  unsigned __int32 v90;
  __int16 v91;
  char v92;
  __int32 v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  unsigned __int32 v99;
  char v100;
  __int8 v101;
  __int8 v102;
  uint64_t v103;
  uint64_t v104;

  v104 = *MEMORY[0x24BDAC8D0];
  v4 = OUTLINED_FUNCTION_75_3();
  sub_24975E378(v4);
  v58 = v5;
  v6 = sub_2497E80D4();
  v7 = v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v56 = v6;
    v57 = a2;
    v103 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_35_5();
    sub_24974DDBC();
    v9 = v103;
    v11 = (char *)(a1 + 50);
    do
    {
      v68 = v8;
      v12 = *(v11 - 18);
      v13 = *(v11 - 17);
      v14 = *(v11 - 14);
      v15 = *(v11 - 13);
      v16 = *(v11 - 12);
      v17 = *(_QWORD *)(v11 - 9);
      v75 = *v11;
      v76 = *(v11 - 1);
      v74 = v11[1];
      v18 = *(int8x16_t *)(v11 + 2);
      v19 = v11[18];
      v20 = v11[19];
      v21 = v11[20];
      v22 = v11[21];
      v23 = v11[22];
      v24 = *(int8x16_t *)(v11 + 23);
      v87 = v11[40];
      v88 = v11[39];
      v86 = v11[41];
      v71 = v11[43];
      v72 = v11[42];
      v69 = v11[45];
      v70 = v11[44];
      v62 = v11[46];
      v73 = *((_WORD *)v11 + 24);
      v78 = v18;
      v80 = v10;
      v100 = BYTE4(*(_QWORD *)(v11 + 23));
      v101 = v24.i8[5];
      v102 = v24.i8[6];
      v91 = WORD2(v17);
      v92 = BYTE6(v17);
      v61 = *((_WORD *)v11 + 25);
      v18.i16[0] = v18.u8[12];
      v18.i16[1] = v18.u8[13];
      v18.i16[2] = v18.u8[14];
      v18.i16[3] = v18.u8[15];
      *(int8x8_t *)v18.i8 = vmovn_s16((int16x8_t)v18);
      v93 = v18.i32[0];
      v25 = v19;
      v94 = v19;
      v26 = v20;
      v95 = v20;
      v65 = v21;
      v96 = v21;
      v63 = v22;
      v97 = v22;
      v98 = v23;
      v66 = v24;
      v99 = vmovn_s16((int16x8_t)vzip1q_s8(v24, v18)).u32[0];
      v27 = v12;
      v89[0] = v12;
      v28 = v13;
      v89[1] = v13;
      OUTLINED_FUNCTION_12_10(v14, v15, v16);
      v30 = v29;
      v89[7] = v29;
      v32 = v31;
      v89[8] = v31;
      v77 = v33.i64[0];
      v90 = vmovn_s16((int16x8_t)vzip1q_s8(v33, v34)).u32[0];
      if ((OUTLINED_FUNCTION_26_5(&v93, v89) & 0x80000000) != 0)
        __asm { BR              X8 }
      v35 = v84;
      v36 = v85;
      v82 = v9;
      v83 = v30;
      v84 = v8;
      v37 = v25;
      v38 = v26;
      v39 = v65;
      v41 = v23;
      v40 = v63;
      v85 = v62;
      v42 = v61;
      v10 = v80;
      v43 = v78;
      v44 = v66;
      v45 = v77;
      v47 = v75;
      v46 = v76;
      v103 = v9;
      v48 = *(_QWORD *)(v9 + 16);
      v49 = v70;
      v51 = v86;
      v50 = v87;
      v52 = v69;
      v53 = v88;
      if (v48 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        v79 = v80;
        v81 = v66;
        v59 = v35;
        v60 = v36;
        v67 = v63;
        v64 = v43;
        sub_24974DDBC();
        v43 = v64;
        v35 = v59;
        v36 = v60;
        v52 = v69;
        v49 = v70;
        v51 = v86;
        v50 = v87;
        v53 = v88;
        v42 = v61;
        v47 = v75;
        v46 = v76;
        v41 = v23;
        v40 = v67;
        v39 = v65;
        v38 = v26;
        v37 = v25;
        v45 = v77;
        v10 = v79;
        v44 = v81;
        v9 = v103;
      }
      *(_QWORD *)(v9 + 16) = v48 + 1;
      v54 = v9 + 80 * v48;
      *(_BYTE *)(v54 + 32) = v27;
      *(_BYTE *)(v54 + 33) = v28;
      *(_BYTE *)(v54 + 34) = v35;
      *(_BYTE *)(v54 + 35) = v36;
      *(_BYTE *)(v54 + 36) = v23;
      *(_BYTE *)(v54 + 37) = v82;
      *(_BYTE *)(v54 + 38) = v8;
      *(_BYTE *)(v54 + 39) = v83;
      *(_BYTE *)(v54 + 40) = v32;
      *(_BYTE *)(v54 + 49) = v46;
      *(_BYTE *)(v54 + 50) = v47;
      *(_BYTE *)(v54 + 51) = v74;
      *(_BYTE *)(v54 + 68) = v37;
      *(_BYTE *)(v54 + 69) = v38;
      *(_BYTE *)(v54 + 70) = v39;
      *(_BYTE *)(v54 + 71) = v40;
      *(_BYTE *)(v54 + 72) = v41;
      *(_BYTE *)(v54 + 89) = v53;
      *(_BYTE *)(v54 + 90) = v50;
      *(_BYTE *)(v54 + 91) = v51;
      *(_BYTE *)(v54 + 92) = v72;
      *(_BYTE *)(v54 + 93) = v71;
      *(_BYTE *)(v54 + 94) = v49;
      *(_BYTE *)(v54 + 95) = v52;
      *(_BYTE *)(v54 + 96) = v62;
      *(_WORD *)(v54 + 98) = v73;
      *(_WORD *)(v54 + 100) = v42;
      *(_QWORD *)(v54 + 41) = v45;
      *(int8x16_t *)(v54 + 52) = v43;
      *(int8x16_t *)(v54 + 73) = v44;
      *(_QWORD *)(v54 + 104) = v58;
      v11 += 70;
      --v8;
    }
    while (v68 != 1);
    v7 = v56;
    a2 = v57;
  }
  sub_249744FF0(v9);
  result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t UniversalControlConfiguration.removingLinks(where:)@<X0>(uint64_t (*a1)(__int32 *)@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double Current;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v4 = UniversalControlConfiguration.links()();
  v5 = sub_2497EB530(v4, a1);
  OUTLINED_FUNCTION_1();
  Current = CFAbsoluteTimeGetCurrent();
  sub_24975E378(Current);
  v7 = sub_2497E80D4();
  v8 = sub_2497EA4B8(0, v5);
  sub_249744DB8(v8);
  OUTLINED_FUNCTION_23_1();
  result = swift_bridgeObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t UniversalControlConfiguration.merging(_:)@<X0>(_QWORD **a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  double v4;
  _QWORD *v5;
  uint64_t result;

  v3 = *a1;
  v4 = OUTLINED_FUNCTION_75_3();
  sub_24975E378(v4);
  v5 = sub_2497E80D4();
  result = sub_24974603C(v3);
  *a2 = v5;
  return result;
}

uint64_t UniversalControlConfiguration.replacing(links:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  double v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char *v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  int8x16_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  int8x16_t v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  int8x16_t v33;
  int8x16_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  __int16 v43;
  int8x16_t v44;
  int8x16_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  unint64_t v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t result;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  char v64;
  __int16 v65;
  uint64_t v66;
  char v67;
  char v68;
  int8x16_t v69;
  int8x16_t v70;
  uint64_t v71;
  char v72;
  char v73;
  char v74;
  char v75;
  __int16 v76;
  char v77;
  char v78;
  char v79;
  uint64_t v80;
  int8x16_t v81;
  __int128 v82;
  __int128 v83;
  int8x16_t v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  _BYTE v90[9];
  unsigned __int32 v91;
  __int16 v92;
  char v93;
  __int32 v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  unsigned __int32 v100;
  char v101;
  __int8 v102;
  __int8 v103;
  uint64_t v104;
  uint64_t v105;

  v105 = *MEMORY[0x24BDAC8D0];
  v4 = OUTLINED_FUNCTION_75_3();
  sub_24975E378(v4);
  v62 = v5;
  v6 = sub_2497E80D4();
  v7 = v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v60 = v6;
    v61 = a2;
    v104 = MEMORY[0x24BEE4AF8];
    sub_24974DDBC();
    v9 = v104;
    v11 = (char *)(a1 + 50);
    do
    {
      v71 = v8;
      v12 = *(v11 - 18);
      v13 = *(v11 - 17);
      v14 = *(v11 - 14);
      v15 = *(v11 - 13);
      v16 = *(v11 - 12);
      v17 = *(_QWORD *)(v11 - 9);
      v78 = *v11;
      v79 = *(v11 - 1);
      v77 = v11[1];
      v18 = *(int8x16_t *)(v11 + 2);
      v19 = v11[18];
      v20 = v11[19];
      v21 = v11[20];
      v22 = v11[21];
      v23 = v11[22];
      v24 = *(int8x16_t *)(v11 + 23);
      v88 = v11[40];
      v89 = v11[39];
      v87 = v11[41];
      v74 = v11[43];
      v75 = v11[42];
      v72 = v11[45];
      v73 = v11[44];
      v66 = v11[46];
      v76 = *((_WORD *)v11 + 24);
      v81 = v18;
      v83 = v10;
      v101 = BYTE4(*(_QWORD *)(v11 + 23));
      v102 = v24.i8[5];
      v103 = v24.i8[6];
      v92 = WORD2(v17);
      v93 = BYTE6(v17);
      v65 = *((_WORD *)v11 + 25);
      v18.i16[0] = v18.u8[12];
      v18.i16[1] = v18.u8[13];
      v18.i16[2] = v18.u8[14];
      v18.i16[3] = v18.u8[15];
      *(int8x8_t *)v18.i8 = vmovn_s16((int16x8_t)v18);
      v94 = v18.i32[0];
      v25 = v19;
      v95 = v19;
      v26 = v20;
      v96 = v20;
      v67 = v22;
      v68 = v21;
      v97 = v21;
      v98 = v22;
      v99 = v23;
      v69 = v24;
      v100 = vmovn_s16((int16x8_t)vzip1q_s8(v24, v18)).u32[0];
      v27 = v12;
      v90[0] = v12;
      v28 = v13;
      v90[1] = v13;
      OUTLINED_FUNCTION_12_10(v14, v15, v16);
      v30 = v29;
      v90[7] = v29;
      v32 = v31;
      v90[8] = v31;
      v80 = v33.i64[0];
      v91 = vmovn_s16((int16x8_t)vzip1q_s8(v33, v34)).u32[0];
      if ((OUTLINED_FUNCTION_26_5(&v94, v90) & 0x80000000) != 0)
        __asm { BR              X8 }
      v35 = v28;
      v36 = v85;
      v37 = v86;
      v85 = v9;
      v38 = v25;
      v39 = v26;
      v41 = v67;
      v40 = v68;
      v42 = v23;
      v86 = v66;
      v43 = v65;
      v10 = v83;
      v44 = v81;
      v45 = v69;
      v46 = v80;
      v48 = v78;
      v47 = v79;
      v49 = v74;
      v104 = v9;
      v50 = *(_QWORD *)(v9 + 16);
      v51 = v73;
      v53 = v87;
      v52 = v88;
      v54 = v89;
      v55 = v36;
      if (v50 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        v82 = v83;
        v84 = v69;
        v57 = v38;
        v64 = v37;
        v63 = v35;
        v70 = v44;
        sub_24974DDBC();
        v44 = v70;
        v35 = v63;
        v51 = v73;
        v49 = v74;
        v53 = v87;
        v52 = v88;
        v54 = v89;
        v43 = v65;
        v48 = v78;
        v47 = v79;
        v42 = v23;
        v41 = v67;
        v40 = v68;
        v37 = v64;
        v39 = v26;
        v38 = v57;
        v46 = v80;
        v10 = v82;
        v45 = v84;
        v9 = v104;
      }
      *(_QWORD *)(v9 + 16) = v50 + 1;
      v56 = v9 + 80 * v50;
      *(_BYTE *)(v56 + 32) = v27;
      *(_BYTE *)(v56 + 33) = v35;
      *(_BYTE *)(v56 + 34) = v55;
      *(_BYTE *)(v56 + 35) = v37;
      *(_BYTE *)(v56 + 36) = v23;
      *(_BYTE *)(v56 + 37) = v8;
      *(_BYTE *)(v56 + 38) = v85;
      *(_BYTE *)(v56 + 39) = v30;
      *(_BYTE *)(v56 + 40) = v32;
      *(_BYTE *)(v56 + 49) = v47;
      *(_BYTE *)(v56 + 50) = v48;
      *(_BYTE *)(v56 + 51) = v77;
      *(_BYTE *)(v56 + 68) = v38;
      *(_BYTE *)(v56 + 69) = v39;
      *(_BYTE *)(v56 + 70) = v40;
      *(_BYTE *)(v56 + 71) = v41;
      *(_BYTE *)(v56 + 72) = v42;
      *(_BYTE *)(v56 + 89) = v54;
      *(_BYTE *)(v56 + 90) = v52;
      *(_BYTE *)(v56 + 91) = v53;
      *(_BYTE *)(v56 + 92) = v75;
      *(_BYTE *)(v56 + 93) = v49;
      *(_BYTE *)(v56 + 94) = v51;
      *(_BYTE *)(v56 + 95) = v72;
      *(_BYTE *)(v56 + 96) = v66;
      *(_WORD *)(v56 + 98) = v76;
      *(_WORD *)(v56 + 100) = v43;
      *(_QWORD *)(v56 + 41) = v46;
      *(int8x16_t *)(v56 + 52) = v44;
      *(int8x16_t *)(v56 + 73) = v45;
      *(_QWORD *)(v56 + 104) = v62;
      v11 += 70;
      --v8;
    }
    while (v71 != 1);
    v7 = v60;
    a2 = v61;
  }
  v58 = sub_2497EA4B8(0, v9);
  sub_249744DB8(v58);
  OUTLINED_FUNCTION_42();
  result = OUTLINED_FUNCTION_36_5();
  *a2 = v7;
  return result;
}

void UniversalControlConfiguration.reachableDevices(from:)()
{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  int8x16_t v8;
  uint64_t v9;
  _QWORD *v10;
  unsigned __int32 v11;
  int v12;
  int v13;
  __int32 v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  __int32 v21;
  int v22;
  int v23;
  int v24;
  char v25;
  char v26;
  char v27;
  __int32 v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned __int8 v36;
  char v37;
  char v38;
  __int16 v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  __n128 v55;
  __n128 v56;
  __n128 v57;
  unint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  unsigned __int8 v67;
  unsigned __int8 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  __int128 v74;
  int8x16_t v75;
  __int16 *v76;
  _QWORD *v77;
  unsigned __int32 v78;
  char v79;
  char v80;
  __int32 v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  int v89;
  uint64_t v90;
  int v91;
  int v92;
  int v93;
  int v94;
  __int16 *v95;
  uint64_t v96;
  char v97;
  unint64_t v98;
  char v99;
  char v100;
  __int16 v101;
  uint64_t v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __n128 v115;
  __n128 v116;
  __n128 v117;
  __n128 v118;
  unint64_t v119;
  unint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE v137[20];
  int v138;
  __int128 v139;
  int8x16_t v140;
  __int8 *v141;
  __int16 *v142;
  __int16 *v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  unint64_t v148;
  char v149;
  unint64_t v150;
  char v151;
  unint64_t v152;
  char v153;
  unint64_t v154;
  char v155;
  unint64_t v156;
  char v157;
  unint64_t v158;
  char v159;
  unint64_t v160;
  char v161;
  unint64_t v162;
  char v163;
  unint64_t v164;
  char v165;
  unint64_t v166;
  char v167;
  unint64_t v168;
  char v169;
  unint64_t v170;
  char v171;
  char v172;
  char v173;
  uint64_t v174;
  int v175;
  int v176;
  char v177;
  char v178;
  char v179;
  char v180;
  char v181;
  char v182;
  char v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  char v190;
  char v191;
  __n128 v192;
  __n128 v193;
  int8x16_t v194;
  __n128 v195;
  __int128 v196;
  __int128 v197;
  __n128 v198;
  int8x16_t v199;
  __n128 v200;
  __int128 v201;
  char __s2;
  char v203;
  char v204;
  char v205;
  char v206;
  char v207;
  char v208;
  char v209;
  char v210;
  char v211;
  char v212;
  char v213;
  char v214;
  char v215;
  char v216;
  char v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char v221;
  unsigned __int32 v222;
  __int16 v223;
  __int8 v224;
  unsigned __int8 v225;
  unsigned __int8 v226;
  unsigned __int8 v227;
  unsigned __int8 v228;
  unsigned __int8 v229;
  unsigned __int8 v230;
  unsigned __int8 v231;
  unsigned __int8 v232;
  unsigned __int8 v233;
  unsigned __int8 v234;
  unsigned __int8 v235;
  unsigned __int8 v236;
  unsigned __int8 v237;
  unsigned __int8 v238;
  unsigned __int8 v239;
  unsigned __int8 v240;
  uint64_t v241;
  char v242;
  unsigned __int32 v243;
  __int16 v244;
  __int8 v245;
  uint64_t v246;

  OUTLINED_FUNCTION_36_7();
  v2 = v1;
  v4 = v3;
  v246 = *MEMORY[0x24BDAC8D0];
  v5 = *v0;
  v219 = MEMORY[0x24BEE4B08];
  v124 = v5;
  v241 = v5;
  v6 = UniversalControlConfiguration.links()();
  v9 = *(_QWORD *)(v6 + 16);
  v125 = v6;
  if (v9)
  {
    v170 = HIBYTE(v2);
    v128 = MEMORY[0x24BEE4AF8];
    v10 = (_QWORD *)(v6 + 104);
    v166 = v2 >> 40;
    v168 = HIWORD(v2);
    v162 = v2 >> 24;
    v164 = HIDWORD(v2);
    v158 = v2 >> 8;
    v160 = v2 >> 16;
    v154 = HIWORD(v4);
    v156 = HIBYTE(v4);
    v150 = HIDWORD(v4);
    v152 = v4 >> 40;
    v146 = v4 >> 16;
    v148 = v4 >> 24;
    v145 = v4 >> 8;
    v172 = v4;
    v174 = v2;
    do
    {
      v144 = v9;
      v11 = *((unsigned __int8 *)v10 - 70);
      v12 = *((unsigned __int8 *)v10 - 69);
      v13 = *((unsigned __int8 *)v10 - 68);
      v14 = *((unsigned __int8 *)v10 - 67);
      v15 = *((unsigned __int8 *)v10 - 66);
      v16 = *((unsigned __int8 *)v10 - 65);
      v17 = *((unsigned __int8 *)v10 - 64);
      v8.i64[0] = *(_QWORD *)((char *)v10 - 63);
      v192.n128_u32[0] = *((unsigned __int8 *)v10 - 55);
      v190 = *((_BYTE *)v10 - 54);
      v188 = *((_BYTE *)v10 - 53);
      v196 = *(_OWORD *)((char *)v10 - 52);
      v198 = v7;
      *(_DWORD *)&v137[8] = *((unsigned __int8 *)v10 - 35);
      *(_DWORD *)&v137[12] = *((unsigned __int8 *)v10 - 36);
      *(_DWORD *)&v137[4] = *((unsigned __int8 *)v10 - 34);
      HIDWORD(v135) = *((unsigned __int8 *)v10 - 32);
      LODWORD(v136) = *((unsigned __int8 *)v10 - 33);
      v140 = *(int8x16_t *)((char *)v10 - 31);
      v18 = *((unsigned __int8 *)v10 - 15);
      v186 = *((_BYTE *)v10 - 14);
      v19 = *((unsigned __int8 *)v10 - 13);
      v184 = *((_BYTE *)v10 - 12);
      v182 = *((_BYTE *)v10 - 11);
      v180 = *((_BYTE *)v10 - 10);
      v178 = *((_BYTE *)v10 - 9);
      v134 = *((unsigned __int8 *)v10 - 8);
      v176 = *((unsigned __int16 *)v10 - 3);
      HIDWORD(v133) = *((unsigned __int16 *)v10 - 2);
      v20 = *v10;
      *(_DWORD *)&v137[16] = *((unsigned __int8 *)v10 - 72);
      v138 = *((unsigned __int8 *)v10 - 71);
      LOBYTE(v241) = *((_BYTE *)v10 - 72);
      BYTE1(v241) = v138;
      v193.n128_u32[0] = v11;
      BYTE2(v241) = v11;
      LODWORD(v139) = v12;
      BYTE3(v241) = v12;
      BYTE4(v241) = v13;
      BYTE5(v241) = v14;
      BYTE6(v241) = v15;
      HIBYTE(v241) = v16;
      v242 = v17;
      v243 = vmovn_s16((int16x8_t)vzip1q_s8(v8, v140)).u32[0];
      v143 = &v244;
      v244 = v8.i16[2];
      v141 = &v245;
      v142 = (__int16 *)((char *)&v244 + 1);
      v194 = v8;
      v245 = v8.i8[6];
      LOBYTE(v220) = v4;
      BYTE1(v220) = v145;
      BYTE2(v220) = v146;
      BYTE3(v220) = v148;
      BYTE4(v220) = v150;
      BYTE5(v220) = v152;
      BYTE6(v220) = v154;
      HIBYTE(v220) = v156;
      v221 = v2;
      LOBYTE(v222) = v158;
      BYTE1(v222) = v160;
      BYTE2(v222) = v162;
      HIBYTE(v222) = v164;
      LOBYTE(v223) = v166;
      HIBYTE(v223) = v168;
      v224 = v170;
      if (OUTLINED_FUNCTION_26_5(&v241, &v220))
        __asm { BR              X8 }
      v132 = __PAIR64__(v18, v19);
      v21 = v14;
      v22 = v15;
      v23 = v16;
      v24 = v17;
      v131 = *(_QWORD *)&v137[8];
      v130 = __PAIR64__(*(unsigned int *)&v137[4], v136);
      LODWORD(v133) = HIDWORD(v135);
      v129 = v196;
      v25 = v137[16];
      v26 = v139;
      LODWORD(v141) = v176;
      LODWORD(v143) = v134;
      v195 = v198;
      v199 = v140;
      LOBYTE(v241) = v137[16];
      BYTE1(v241) = v138;
      BYTE2(v241) = v193.n128_u8[0];
      BYTE3(v241) = v139;
      LODWORD(v142) = v13;
      BYTE4(v241) = v13;
      BYTE5(v241) = v21;
      BYTE6(v241) = v15;
      HIBYTE(v241) = v16;
      v242 = v24;
      v243 = vmovn_s16((int16x8_t)vzip1q_s8(v194, v140)).u32[0];
      v244 = v194.i16[2];
      v245 = v194.i8[6];
      LOBYTE(v220) = v172;
      BYTE1(v220) = v145;
      BYTE2(v220) = v146;
      BYTE3(v220) = v148;
      BYTE4(v220) = v150;
      BYTE5(v220) = v152;
      BYTE6(v220) = v154;
      HIBYTE(v220) = v156;
      v221 = v174;
      LOBYTE(v222) = v158;
      BYTE1(v222) = v160;
      BYTE2(v222) = v162;
      HIBYTE(v222) = v164;
      LOBYTE(v223) = v166;
      HIBYTE(v223) = v168;
      v224 = v170;
      v27 = v138;
      v28 = v21;
      v29 = v22;
      v30 = v23;
      v31 = v24;
      if (!memcmp(&v241, &v220, 0x10uLL))
      {
        *(_DWORD *)&v137[16] = v31;
        v138 = v30;
        LODWORD(v139) = v29;
        v140.i32[0] = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v32 = v128;
        else
          OUTLINED_FUNCTION_29_3();
        v33 = *(_QWORD *)(v32 + 16);
        v7 = (__n128)v199;
        v35 = v18;
        v34 = BYTE4(v135);
        v36 = v192.n128_u8[0];
        v37 = v190;
        v38 = v188;
        v39 = WORD2(v133);
        v40 = v194.i64[0];
        v41 = v186;
        v42 = v19;
        v43 = v184;
        v44 = v182;
        v45 = v180;
        v46 = v178;
        if (v33 >= *(_QWORD *)(v32 + 24) >> 1)
        {
          sub_249752EF4();
          v46 = v178;
          v45 = v180;
          v44 = v182;
          v43 = v184;
          v42 = v19;
          v35 = v18;
          v41 = v186;
          v40 = v194.i64[0];
          v39 = WORD2(v133);
          v38 = v188;
          v37 = v190;
          v36 = v192.n128_u8[0];
          v34 = BYTE4(v135);
          v7 = (__n128)v199;
        }
        *(_QWORD *)(v32 + 16) = v33 + 1;
        v128 = v32;
        v47 = v32 + 80 * v33;
        *(_BYTE *)(v47 + 32) = v25;
        *(_BYTE *)(v47 + 33) = v27;
        *(_BYTE *)(v47 + 34) = v193.n128_u8[0];
        *(_BYTE *)(v47 + 35) = v26;
        *(_BYTE *)(v47 + 36) = (_BYTE)v142;
        *(_BYTE *)(v47 + 37) = v28;
        *(_BYTE *)(v47 + 38) = v29;
        *(_BYTE *)(v47 + 39) = v30;
        *(_BYTE *)(v47 + 40) = v137[16];
        *(_QWORD *)(v47 + 41) = v40;
        *(_BYTE *)(v47 + 49) = v36;
        *(_BYTE *)(v47 + 50) = v37;
        *(_BYTE *)(v47 + 51) = v38;
        v8.i64[1] = *((_QWORD *)&v129 + 1);
        *(_OWORD *)(v47 + 52) = v129;
        *(_BYTE *)(v47 + 68) = v137[12];
        *(_BYTE *)(v47 + 69) = v137[8];
        *(_BYTE *)(v47 + 70) = v137[4];
        *(_BYTE *)(v47 + 71) = v136;
        *(_BYTE *)(v47 + 72) = v34;
        *(__n128 *)(v47 + 73) = v7;
        *(_BYTE *)(v47 + 89) = v35;
        *(_BYTE *)(v47 + 90) = v41;
        *(_BYTE *)(v47 + 91) = v42;
        *(_BYTE *)(v47 + 92) = v43;
        *(_BYTE *)(v47 + 93) = v44;
        *(_BYTE *)(v47 + 94) = v45;
        *(_BYTE *)(v47 + 95) = v46;
        *(_BYTE *)(v47 + 96) = v134;
        *(_WORD *)(v47 + 98) = v176;
        *(_WORD *)(v47 + 100) = v39;
        *(_QWORD *)(v47 + 104) = v20;
      }
      v10 += 10;
      v9 = v144 - 1;
      LOBYTE(v4) = v172;
      LOBYTE(v2) = v174;
    }
    while (v144 != 1);
  }
  else
  {
    v128 = MEMORY[0x24BEE4AF8];
  }
  OUTLINED_FUNCTION_70_1();
  v48 = *(_QWORD *)(v128 + 16);
  if (v48)
  {
    v241 = MEMORY[0x24BEE4AF8];
    v49 = OUTLINED_FUNCTION_35_5();
    sub_24974E400(v49, v50, v51);
    v52 = v241;
    v53 = v128 + 100;
    do
    {
      v54 = OUTLINED_FUNCTION_17_11();
      v241 = v52;
      v59 = *(_QWORD *)(v52 + 16);
      v58 = *(_QWORD *)(v52 + 24);
      if (v59 >= v58 >> 1)
      {
        v60 = OUTLINED_FUNCTION_80(v58);
        OUTLINED_FUNCTION_49_4(v60, v59 + 1);
        v57 = v192;
        v56 = v193;
        v55 = (__n128)v194;
        v54 = v195;
        v52 = v241;
      }
      v53 += 80;
      *(_QWORD *)(v52 + 16) = v59 + 1;
      OUTLINED_FUNCTION_45_5((__n128 *)(v52 + 70 * v59), v54, v55, v56, v57);
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v52 = MEMORY[0x24BEE4AF8];
  }
  v61 = sub_2497A12C0(v52);
  v218 = v61;
  if (*(_QWORD *)(v61 + 16))
  {
    v126 = xmmword_24983AE70;
    do
    {
      v62 = sub_2497CC8E0(v61);
      v64 = v63;
      v66 = v65 & 1;
      sub_24980B2E8(v62, v63, (uint64_t)&v220);
      sub_249783CBC(v62, v64, v66);
      v67 = v232;
      v68 = v240;
      sub_2497C219C((uint64_t)&v220, v225 | ((unint64_t)v226 << 8) | ((unint64_t)v227 << 16) | ((unint64_t)v228 << 24) | ((unint64_t)v229 << 32) | ((unint64_t)v230 << 40) | ((unint64_t)v231 << 48) | ((unint64_t)v232 << 56), v233 | ((unint64_t)v234 << 8) | ((unint64_t)v235 << 16) | ((unint64_t)v236 << 24) | ((unint64_t)v237 << 32) | ((unint64_t)v238 << 40) | ((unint64_t)v239 << 48) | ((unint64_t)v240 << 56), v238, v239, v69, v70, v71, v124, v125, v126, *((uint64_t *)&v126 + 1), v127, v128, v129, *((uint64_t *)&v129 + 1), v130, v131, v132,
        v133,
        v134,
        v135,
        v136,
        *(uint64_t *)v137,
        v137[8],
        *(__int16 *)&v137[10],
        v137[12],
        v137[13],
        v137[14],
        v137[15],
        v137[16],
        v137[17],
        v137[18],
        v137[19],
        v138,
        SBYTE1(v138),
        SBYTE2(v138),
        SHIBYTE(v138),
        v139,
        v140.i64[0],
        v140.i64[1],
        (uint64_t)v141,
        (uint64_t)v142,
        (uint64_t)v143,
        v144,
        v145,
        v239,
        v238,
        v237,
        v236,
        v235,
        v234,
        v233,
        v231,
        v230,
        v229,
        v228,
        v227,
        v226,
        v225,
        v174);
      if ((v72 & 1) != 0)
      {
        v220 = v124;
        v73 = UniversalControlConfiguration.links()();
        v76 = *(__int16 **)(v73 + 16);
        v125 = v73;
        if (v76)
        {
          LODWORD(v145) = v67;
          LODWORD(v144) = v68;
          v77 = (_QWORD *)(v73 + 104);
          v128 = MEMORY[0x24BEE4AF8];
          do
          {
            v143 = v76;
            v78 = *((unsigned __int8 *)v77 - 71);
            v79 = *((_BYTE *)v77 - 70);
            v80 = *((_BYTE *)v77 - 69);
            v81 = *((unsigned __int8 *)v77 - 68);
            v82 = *((unsigned __int8 *)v77 - 67);
            v83 = *((unsigned __int8 *)v77 - 66);
            v84 = *((unsigned __int8 *)v77 - 65);
            v85 = *((unsigned __int8 *)v77 - 64);
            v75.i64[0] = *(_QWORD *)((char *)v77 - 63);
            v177 = *((_BYTE *)v77 - 55);
            v187 = *((_BYTE *)v77 - 54);
            v185 = *((_BYTE *)v77 - 53);
            v197 = *(_OWORD *)((char *)v77 - 52);
            v200 = (__n128)v74;
            *(_DWORD *)&v137[16] = *((unsigned __int8 *)v77 - 35);
            v138 = *((unsigned __int8 *)v77 - 36);
            *(_DWORD *)&v137[8] = *((unsigned __int8 *)v77 - 33);
            *(_DWORD *)&v137[12] = *((unsigned __int8 *)v77 - 34);
            *(_DWORD *)&v137[4] = *((unsigned __int8 *)v77 - 32);
            v139 = *(_OWORD *)((char *)v77 - 31);
            v86 = *((unsigned __int8 *)v77 - 15);
            v87 = *((unsigned __int8 *)v77 - 14);
            v88 = *((unsigned __int8 *)v77 - 13);
            v89 = *((unsigned __int8 *)v77 - 12);
            v183 = *((_BYTE *)v77 - 11);
            v181 = *((_BYTE *)v77 - 10);
            v179 = *((_BYTE *)v77 - 9);
            v136 = *((unsigned __int8 *)v77 - 8);
            v175 = *((unsigned __int16 *)v77 - 3);
            HIDWORD(v135) = *((unsigned __int16 *)v77 - 2);
            v90 = *v77;
            v193.n128_u32[0] = *((unsigned __int8 *)v77 - 72);
            LOBYTE(v220) = *((_BYTE *)v77 - 72);
            v192.n128_u32[0] = v78;
            BYTE1(v220) = v78;
            v191 = v79;
            BYTE2(v220) = v79;
            v189 = v80;
            BYTE3(v220) = v80;
            BYTE4(v220) = v81;
            BYTE5(v220) = v82;
            BYTE6(v220) = v83;
            HIBYTE(v220) = v84;
            v221 = v85;
            v222 = vmovn_s16((int16x8_t)vzip1q_s8(v75, (int8x16_t)v139)).u32[0];
            v142 = &v223;
            v223 = v75.i16[2];
            v141 = (char *)&v223 + 1;
            v140.i64[0] = (uint64_t)&v224;
            v194 = v75;
            v224 = v75.i8[6];
            __s2 = v173;
            v203 = v171;
            v204 = v169;
            v205 = v167;
            v206 = v165;
            v207 = v163;
            v208 = v161;
            v209 = v145;
            v210 = v159;
            v211 = v157;
            v212 = v155;
            v213 = v153;
            v214 = v151;
            v215 = v149;
            v216 = v147;
            v217 = v144;
            if (OUTLINED_FUNCTION_26_5(&v220, &__s2))
              __asm { BR              X8 }
            HIDWORD(v132) = v89;
            v133 = __PAIR64__(v87, v88);
            LODWORD(v134) = v86;
            v91 = v84;
            v92 = v85;
            LODWORD(v132) = v138;
            v131 = *(_QWORD *)&v137[12];
            v130 = *(_QWORD *)&v137[4];
            v93 = v175;
            LODWORD(v174) = HIDWORD(v135);
            v129 = v197;
            LODWORD(v141) = v93;
            LODWORD(v142) = v136;
            v195 = v200;
            v201 = v139;
            LOBYTE(v220) = v193.n128_u8[0];
            BYTE1(v220) = v192.n128_u8[0];
            BYTE2(v220) = v191;
            BYTE3(v220) = v189;
            BYTE4(v220) = v81;
            BYTE5(v220) = v82;
            BYTE6(v220) = v83;
            HIBYTE(v220) = v91;
            v221 = v85;
            v222 = vmovn_s16((int16x8_t)vzip1q_s8(v194, (int8x16_t)v139)).u32[0];
            v223 = v194.i16[2];
            v224 = v194.i8[6];
            __s2 = v173;
            v203 = v171;
            v204 = v169;
            v205 = v167;
            v206 = v165;
            v207 = v163;
            v208 = v161;
            v209 = v145;
            v210 = v159;
            v211 = v157;
            v212 = v155;
            v213 = v153;
            v214 = v151;
            v215 = v149;
            v216 = v147;
            v217 = v144;
            v94 = v91;
            if (!memcmp(&v220, &__s2, 0x10uLL))
            {
              *(_DWORD *)&v137[12] = v92;
              *(_DWORD *)&v137[16] = v94;
              v138 = v83;
              LODWORD(v139) = v82;
              v140.i32[0] = v81;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                v96 = v128;
              else
                OUTLINED_FUNCTION_29_3();
              v97 = v92;
              v95 = v143;
              v98 = *(_QWORD *)(v96 + 16);
              v74 = v201;
              v99 = v187;
              v100 = v185;
              v101 = WORD2(v135);
              v102 = v194.i64[0];
              v104 = v87;
              v103 = v134;
              v106 = BYTE4(v132);
              v105 = v88;
              v107 = v183;
              v108 = v181;
              v109 = v179;
              if (v98 >= *(_QWORD *)(v96 + 24) >> 1)
              {
                sub_249752EF4();
                v109 = v179;
                v108 = v181;
                v107 = v183;
                v106 = BYTE4(v132);
                v105 = v88;
                v104 = v87;
                v103 = v134;
                v102 = v194.i64[0];
                v101 = WORD2(v135);
                v100 = v185;
                v99 = v187;
                v74 = v201;
              }
              *(_QWORD *)(v96 + 16) = v98 + 1;
              v128 = v96;
              v110 = v96 + 80 * v98;
              *(_BYTE *)(v110 + 32) = v193.n128_u8[0];
              *(_BYTE *)(v110 + 33) = v192.n128_u8[0];
              *(_BYTE *)(v110 + 34) = v191;
              *(_BYTE *)(v110 + 35) = v189;
              *(_BYTE *)(v110 + 36) = v81;
              *(_BYTE *)(v110 + 37) = v82;
              *(_BYTE *)(v110 + 38) = v83;
              *(_BYTE *)(v110 + 39) = v94;
              *(_BYTE *)(v110 + 40) = v97;
              *(_QWORD *)(v110 + 41) = v102;
              *(_BYTE *)(v110 + 49) = v177;
              *(_BYTE *)(v110 + 50) = v99;
              *(_BYTE *)(v110 + 51) = v100;
              v75.i64[1] = *((_QWORD *)&v129 + 1);
              *(_OWORD *)(v110 + 52) = v129;
              *(_BYTE *)(v110 + 68) = v132;
              *(_BYTE *)(v110 + 69) = BYTE4(v131);
              *(_BYTE *)(v110 + 70) = v131;
              *(_BYTE *)(v110 + 71) = v137[8];
              *(_BYTE *)(v110 + 72) = v137[4];
              *(_OWORD *)(v110 + 73) = v74;
              *(_BYTE *)(v110 + 89) = v103;
              *(_BYTE *)(v110 + 90) = v104;
              *(_BYTE *)(v110 + 91) = v105;
              *(_BYTE *)(v110 + 92) = v106;
              *(_BYTE *)(v110 + 93) = v107;
              *(_BYTE *)(v110 + 94) = v108;
              *(_BYTE *)(v110 + 95) = v109;
              *(_BYTE *)(v110 + 96) = v136;
              *(_WORD *)(v110 + 98) = (_WORD)v141;
              *(_WORD *)(v110 + 100) = v101;
              *(_QWORD *)(v110 + 104) = v90;
            }
            else
            {
              v95 = v143;
            }
            v77 += 10;
            v76 = (__int16 *)((char *)v95 - 1);
          }
          while (v76);
        }
        else
        {
          v128 = MEMORY[0x24BEE4AF8];
        }
        OUTLINED_FUNCTION_70_1();
        v111 = *(_QWORD *)(v128 + 16);
        if (v111)
        {
          v220 = MEMORY[0x24BEE4AF8];
          sub_24974E400(0, v111, 0);
          v112 = v220;
          v113 = v128 + 100;
          do
          {
            v115 = OUTLINED_FUNCTION_17_11();
            v220 = v112;
            v120 = *(_QWORD *)(v112 + 16);
            v119 = *(_QWORD *)(v112 + 24);
            if (v120 >= v119 >> 1)
            {
              v121 = OUTLINED_FUNCTION_80(v119);
              OUTLINED_FUNCTION_49_4(v121, v120 + 1);
              v118 = v192;
              v117 = v193;
              v116 = (__n128)v194;
              v115 = v195;
              v114 = 70;
              v112 = v220;
            }
            v113 += 80;
            *(_QWORD *)(v112 + 16) = v120 + 1;
            OUTLINED_FUNCTION_45_5((__n128 *)(v112 + v120 * v114), v115, v116, v117, v118);
            --v111;
          }
          while (v111);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v112 = MEMORY[0x24BEE4AF8];
        }
        v122 = *(_QWORD *)(v112 + 16);
        if (v122)
        {
          v123 = v112 + 32;
          do
          {
            OUTLINED_FUNCTION_9_15(&v241);
            sub_2497C29B8((char *)&v220, &v241);
            v123 += 70;
            --v122;
          }
          while (v122);
        }
        OUTLINED_FUNCTION_42();
      }
      v61 = v218;
    }
    while (*(_QWORD *)(v218 + 16));
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_10();
}

void UniversalControlConfiguration.links(for:where:)()
{
  uint64_t *v0;
  uint64_t (*v1)(uint64_t *);
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  __int16 v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  __int16 v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  int v107;
  unint64_t v108;
  char v109;
  int v110;
  unint64_t v111;
  char v112;
  int v113;
  unint64_t v114;
  char v115;
  int v116;
  unint64_t v117;
  char v118;
  int v119;
  unint64_t v120;
  char v121;
  int v122;
  unint64_t v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  unsigned int v133;
  __int16 v134;
  __int16 v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  char v139;
  unsigned int v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  unsigned int v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  unsigned int v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  char v167;
  unsigned int v168;
  char v169;
  char v170;
  char v171;
  char v172;
  char v173;
  char v174;
  __int16 v175;
  __int16 v176;
  char v177;
  char v178;
  char v179;
  char v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  char v190;
  char v191;
  char v192;
  char v193;
  char v194;
  char v195;
  char v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  char v202;
  char v203;
  char v204;
  char v205;
  char v206;
  char v207;
  char v208;
  char v209;
  char v210;
  char v211;
  char v212;
  char v213;
  char v214;
  char v215;
  char v216;
  char v217;
  char v218;
  char v219;
  char v220;
  char v221;
  char v222;
  char v223;
  char v224;
  char v225;
  char v226;
  char v227;
  char v228;
  char v229;
  char v230;
  char v231;
  char v232;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  char v238;
  char v239;
  char v240;
  __int16 v241;
  __int16 v242;
  uint64_t v243;
  uint64_t v244;

  OUTLINED_FUNCTION_36_7();
  v55 = v1;
  v57 = v2;
  v4 = v3;
  v6 = v5;
  v244 = *MEMORY[0x24BDAC8D0];
  v183 = *v0;
  v7 = UniversalControlConfiguration.links()();
  v8 = *(_QWORD *)(v7 + 16);
  v53 = v7;
  if (v8)
  {
    v9 = v7 + 52;
    v120 = HIWORD(v4);
    v123 = HIBYTE(v4);
    v59 = MEMORY[0x24BEE4AF8];
    v114 = HIDWORD(v4);
    v117 = v4 >> 40;
    v108 = v4 >> 16;
    v111 = v4 >> 24;
    v103 = HIBYTE(v6);
    v105 = v4 >> 8;
    v99 = v6 >> 40;
    v101 = HIWORD(v6);
    v95 = v6 >> 24;
    v97 = HIDWORD(v6);
    v91 = v6 >> 8;
    v93 = v6 >> 16;
    v125 = v4;
    do
    {
      v83 = v8;
      v10 = *(_BYTE *)(v9 - 19);
      v11 = *(_BYTE *)(v9 - 18);
      v12 = *(_BYTE *)(v9 - 17);
      v13 = *(_BYTE *)(v9 - 16);
      v14 = *(_BYTE *)(v9 - 15);
      v15 = *(_BYTE *)(v9 - 14);
      v16 = *(_BYTE *)(v9 - 13);
      v17 = *(_BYTE *)(v9 - 12);
      v18 = *(_BYTE *)(v9 - 11);
      v19 = *(_BYTE *)(v9 - 10);
      v20 = *(_BYTE *)(v9 - 9);
      v21 = *(_BYTE *)(v9 - 8);
      v22 = *(_BYTE *)(v9 - 7);
      v23 = *(_BYTE *)(v9 - 6);
      v24 = *(_BYTE *)(v9 - 5);
      v153 = *(_BYTE *)(v9 - 4);
      v152 = *(unsigned __int8 *)(v9 - 3);
      v151 = *(_BYTE *)(v9 - 2);
      v150 = *(_BYTE *)(v9 - 1);
      v148 = *(_BYTE *)v9;
      v147 = *(_BYTE *)(v9 + 1);
      v146 = *(_BYTE *)(v9 + 2);
      v144 = *(_BYTE *)(v9 + 3);
      v143 = *(_BYTE *)(v9 + 4);
      v141 = *(_BYTE *)(v9 + 5);
      v140 = *(unsigned __int8 *)(v9 + 6);
      HIDWORD(v137) = *(unsigned __int8 *)(v9 + 7);
      LODWORD(v137) = *(unsigned __int8 *)(v9 + 8);
      HIDWORD(v136) = *(unsigned __int8 *)(v9 + 9);
      LODWORD(v136) = *(unsigned __int8 *)(v9 + 10);
      v25 = *(_QWORD *)(v9 + 52);
      v133 = *(unsigned __int8 *)(v9 + 11);
      HIDWORD(v67) = *(unsigned __int8 *)(v9 + 12);
      LODWORD(v69) = *(unsigned __int8 *)(v9 + 13);
      HIDWORD(v77) = *(unsigned __int8 *)(v9 + 14);
      LODWORD(v79) = *(unsigned __int8 *)(v9 + 15);
      HIDWORD(v79) = *(unsigned __int8 *)(v9 + 16);
      LODWORD(v81) = *(unsigned __int8 *)(v9 + 17);
      HIDWORD(v81) = *(unsigned __int8 *)(v9 + 18);
      v26 = v4;
      v174 = *(_BYTE *)(v9 + 19);
      HIDWORD(v69) = *(unsigned __int8 *)(v9 + 20);
      LODWORD(v71) = *(unsigned __int8 *)(v9 + 21);
      HIDWORD(v71) = *(unsigned __int8 *)(v9 + 22);
      v168 = *(unsigned __int8 *)(v9 + 23);
      v158 = *(unsigned __int8 *)(v9 + 24);
      v169 = *(_BYTE *)(v9 + 25);
      v159 = *(_BYTE *)(v9 + 26);
      v170 = *(_BYTE *)(v9 + 27);
      v160 = *(_BYTE *)(v9 + 28);
      v161 = *(_BYTE *)(v9 + 29);
      v162 = *(_BYTE *)(v9 + 30);
      v163 = *(_BYTE *)(v9 + 31);
      LODWORD(v73) = *(unsigned __int8 *)(v9 + 32);
      v167 = *(_BYTE *)(v9 + 33);
      v164 = *(_BYTE *)(v9 + 34);
      HIDWORD(v73) = *(unsigned __int8 *)(v9 + 35);
      v173 = *(_BYTE *)(v9 + 36);
      LODWORD(v75) = *(unsigned __int8 *)(v9 + 37);
      v165 = *(_BYTE *)(v9 + 38);
      HIDWORD(v75) = *(unsigned __int8 *)(v9 + 39);
      LODWORD(v77) = *(unsigned __int8 *)(v9 + 40);
      v171 = *(_BYTE *)(v9 + 41);
      v166 = *(_BYTE *)(v9 + 42);
      v172 = *(_BYTE *)(v9 + 43);
      v181 = *(unsigned __int8 *)(v9 + 44);
      v134 = *(_WORD *)(v9 + 46);
      v175 = *(_WORD *)(v9 + 48);
      v27 = *(_BYTE *)(v9 - 20);
      LOBYTE(v183) = v27;
      v28 = v10;
      BYTE1(v183) = v10;
      v29 = v11;
      BYTE2(v183) = v11;
      v30 = v12;
      BYTE3(v183) = v12;
      v131 = v13;
      BYTE4(v183) = v13;
      v129 = v14;
      BYTE5(v183) = v14;
      v127 = v15;
      BYTE6(v183) = v15;
      v157 = v16;
      HIBYTE(v183) = v16;
      v31 = v17;
      v184 = v17;
      v32 = v18;
      v185 = v18;
      v33 = v19;
      v186 = v19;
      v34 = v20;
      v187 = v20;
      v35 = v21;
      v188 = v21;
      v156 = v22;
      v189 = v22;
      v155 = v23;
      v190 = v23;
      v154 = v24;
      v191 = v24;
      if (OUTLINED_FUNCTION_2_23(v26, v53, (uint64_t)v55, v57, v59, v61, v63, v64, v65, v66, v67, v69, v71, v73, v75, v77, v79, v81, v83,
                           v86,
                           v87,
                           v88,
                           v90,
                           v91,
                           v93,
                           v95,
                           v97,
                           v99,
                           v101,
                           v103,
                           v105,
                           SHIDWORD(v105),
                           v108,
                           SHIDWORD(v108),
                           v111,
                           SHIDWORD(v111),
                           v114,
                           SHIDWORD(v114),
                           v117,
                           SHIDWORD(v117),
                           v120,
                           SHIDWORD(v120),
                           v123))
        __asm { BR              X8 }
      v179 = v131;
      v180 = v129;
      v178 = v127;
      v177 = v35;
      v36 = v27;
      v37 = v148;
      v38 = v144;
      v126 = v141;
      v89 = v137;
      v132 = BYTE4(v80);
      v130 = v82;
      v128 = BYTE4(v82);
      LODWORD(v68) = HIDWORD(v70);
      v149 = v74;
      v145 = BYTE4(v74);
      v142 = v76;
      v139 = BYTE4(v76);
      v138 = v78;
      v39 = v134;
      v135 = v175;
      v176 = v39;
      v182 = v36;
      LOBYTE(v183) = v36;
      BYTE1(v183) = v28;
      BYTE2(v183) = v29;
      BYTE3(v183) = v30;
      BYTE4(v183) = v179;
      BYTE5(v183) = v180;
      BYTE6(v183) = v178;
      HIBYTE(v183) = v157;
      v184 = v31;
      v185 = v32;
      v186 = v33;
      v187 = v34;
      OUTLINED_FUNCTION_23_7();
      if (!OUTLINED_FUNCTION_2_23(v125, v54, v56, v58, v60, v62, __SPAIR64__(v70, HIDWORD(v78)), __SPAIR64__(v80, HIDWORD(v68)), __SPAIR64__(v168, v158), __SPAIR64__(v72, HIDWORD(v72)), v68, v70, v72, v74, v76, v78, v80, v82, v84,
                            __SPAIR64__(v181, v133),
                            v136,
                            v89,
                            __SPAIR64__(v152, v140),
                            v92,
                            v94,
                            v96,
                            v98,
                            v100,
                            v102,
                            v104,
                            v106,
                            v107,
                            v109,
                            v110,
                            v112,
                            v113,
                            v115,
                            v116,
                            v118,
                            v119,
                            v121,
                            v122,
                            v124))
      {
        LOBYTE(v183) = v182;
        BYTE1(v183) = v28;
        BYTE2(v183) = v29;
        BYTE3(v183) = v30;
        BYTE4(v183) = v179;
        BYTE5(v183) = v180;
        BYTE6(v183) = v178;
        HIBYTE(v183) = v157;
        v184 = v31;
        v185 = v32;
        v186 = v33;
        v187 = v34;
        OUTLINED_FUNCTION_23_7();
        v192 = v153;
        v193 = BYTE4(v90);
        v194 = v151;
        v195 = v150;
        v196 = v37;
        v197 = v147;
        v198 = v146;
        v199 = v38;
        v200 = v143;
        v201 = v126;
        v202 = v90;
        v203 = BYTE4(v88);
        v204 = v88;
        v205 = BYTE4(v87);
        v206 = v87;
        v207 = v86;
        v208 = v64;
        v209 = BYTE4(v63);
        v210 = v63;
        v211 = BYTE4(v64);
        v212 = v132;
        v213 = v130;
        v214 = v128;
        v215 = v174;
        v216 = v67;
        v217 = BYTE4(v66);
        v218 = v66;
        v219 = BYTE4(v65);
        v220 = v65;
        v221 = v169;
        v222 = v159;
        v223 = v170;
        v224 = v160;
        v225 = v161;
        v226 = v162;
        v227 = v163;
        v228 = v149;
        v229 = v167;
        v230 = v164;
        v231 = v145;
        v232 = v173;
        v233 = v142;
        v234 = v165;
        v235 = v139;
        v236 = v138;
        v237 = v171;
        v238 = v166;
        v239 = v172;
        v240 = BYTE4(v86);
        v241 = v176;
        v242 = v135;
        v243 = v25;
        if ((v55(&v183) & 1) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_29_3();
            v59 = v51;
          }
          v41 = *(_QWORD *)(v59 + 16);
          v40 = *(_QWORD *)(v59 + 24);
          v42 = v179;
          v43 = v180;
          v44 = v178;
          v45 = v157;
          v46 = v126;
          v47 = v176;
          if (v41 >= v40 >> 1)
          {
            OUTLINED_FUNCTION_80(v40);
            sub_249752EF4();
            v47 = v176;
            v46 = v126;
            v49 = v32;
            v48 = v31;
            v44 = v178;
            v45 = v157;
            v42 = v179;
            v43 = v180;
            v59 = v52;
          }
          else
          {
            v48 = v31;
            v49 = v32;
          }
          *(_QWORD *)(v59 + 16) = v41 + 1;
          v50 = v59 + 80 * v41;
          *(_BYTE *)(v50 + 32) = v182;
          *(_BYTE *)(v50 + 33) = v28;
          *(_BYTE *)(v50 + 34) = v29;
          *(_BYTE *)(v50 + 35) = v30;
          *(_BYTE *)(v50 + 36) = v42;
          *(_BYTE *)(v50 + 37) = v43;
          *(_BYTE *)(v50 + 38) = v44;
          *(_BYTE *)(v50 + 39) = v45;
          *(_BYTE *)(v50 + 40) = v48;
          *(_BYTE *)(v50 + 41) = v49;
          *(_BYTE *)(v50 + 42) = v33;
          *(_BYTE *)(v50 + 43) = v34;
          *(_BYTE *)(v50 + 44) = v177;
          *(_BYTE *)(v50 + 45) = v156;
          *(_BYTE *)(v50 + 46) = v155;
          *(_BYTE *)(v50 + 47) = v154;
          *(_BYTE *)(v50 + 48) = v153;
          *(_BYTE *)(v50 + 49) = BYTE4(v90);
          *(_BYTE *)(v50 + 50) = v151;
          *(_BYTE *)(v50 + 51) = v150;
          *(_BYTE *)(v50 + 52) = v37;
          *(_BYTE *)(v50 + 53) = v147;
          *(_BYTE *)(v50 + 54) = v146;
          *(_BYTE *)(v50 + 55) = v38;
          *(_BYTE *)(v50 + 56) = v143;
          *(_BYTE *)(v50 + 57) = v46;
          *(_BYTE *)(v50 + 58) = v90;
          *(_BYTE *)(v50 + 59) = BYTE4(v88);
          *(_BYTE *)(v50 + 60) = v88;
          *(_BYTE *)(v50 + 61) = BYTE4(v87);
          *(_BYTE *)(v50 + 62) = v87;
          *(_BYTE *)(v50 + 63) = v86;
          *(_BYTE *)(v50 + 64) = v64;
          *(_BYTE *)(v50 + 65) = BYTE4(v63);
          *(_BYTE *)(v50 + 66) = v63;
          *(_BYTE *)(v50 + 67) = BYTE4(v64);
          *(_BYTE *)(v50 + 68) = v132;
          *(_BYTE *)(v50 + 69) = v130;
          *(_BYTE *)(v50 + 70) = v128;
          *(_BYTE *)(v50 + 71) = v174;
          *(_BYTE *)(v50 + 72) = v67;
          *(_BYTE *)(v50 + 73) = BYTE4(v66);
          *(_BYTE *)(v50 + 74) = v66;
          *(_BYTE *)(v50 + 75) = BYTE4(v65);
          *(_BYTE *)(v50 + 76) = v65;
          *(_BYTE *)(v50 + 77) = v169;
          *(_BYTE *)(v50 + 78) = v159;
          *(_BYTE *)(v50 + 79) = v170;
          *(_BYTE *)(v50 + 80) = v160;
          *(_BYTE *)(v50 + 81) = v161;
          *(_BYTE *)(v50 + 82) = v162;
          *(_BYTE *)(v50 + 83) = v163;
          *(_BYTE *)(v50 + 84) = v149;
          *(_BYTE *)(v50 + 85) = v167;
          *(_BYTE *)(v50 + 86) = v164;
          *(_BYTE *)(v50 + 87) = v145;
          *(_BYTE *)(v50 + 88) = v173;
          *(_BYTE *)(v50 + 89) = v142;
          *(_BYTE *)(v50 + 90) = v165;
          *(_BYTE *)(v50 + 91) = v139;
          *(_BYTE *)(v50 + 92) = v138;
          *(_BYTE *)(v50 + 93) = v171;
          *(_BYTE *)(v50 + 94) = v166;
          *(_BYTE *)(v50 + 95) = v172;
          *(_BYTE *)(v50 + 96) = BYTE4(v86);
          *(_WORD *)(v50 + 98) = v47;
          *(_WORD *)(v50 + 100) = v135;
          *(_QWORD *)(v50 + 104) = v25;
        }
      }
      LOBYTE(v4) = v125;
      v9 += 80;
      v8 = v85 - 1;
    }
    while (v85 != 1);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_10();
}

uint64_t UniversalControlConfiguration.recentLink(between:and:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  unint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  uint64_t v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  unint64_t v159;
  unint64_t v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  char v167;
  char v168;
  char v169;
  char v170;
  char v171;
  char v172;
  char v173;
  char v174;
  char v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  char v193;
  char v194;
  char v195;
  char v196;
  char v197;
  char v198;
  char v199;
  char v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char v228;
  char v229;
  char v230;
  char v231;
  char v232;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  char v238;
  char v239;
  char v240;
  char v241;
  char v242;
  char v243;
  char v244;
  char v245;
  char v246;
  char v247;
  char v248;
  char v249;
  char v250;
  char v251;
  char v252;
  char v253;
  char v254;
  char v255;
  char v256;
  char v257;
  char v258;
  char v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;

  OUTLINED_FUNCTION_36_7();
  v261 = v1;
  v262 = v2;
  v4 = v3;
  v6 = v5;
  v159 = v8;
  v160 = v7;
  v130 = v9;
  v260 = *MEMORY[0x24BDAC8D0];
  v10 = (_QWORD *)*v0;
  v131 = *v0 + 40;
  result = OUTLINED_FUNCTION_16();
  v12 = v10[5];
  if (*(_QWORD *)(v12 + 16))
  {
    v14 = v10[3];
    v13 = v10[4];
    swift_bridgeObjectRetain();
    sub_249748BCC(v14, v13);
    v15 = sub_2497F22B8();
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v15);
      swift_retain();
      v18 = v160 >> 8;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_55_4();
      v140 = *(_QWORD *)(v17 + 40);
      swift_bridgeObjectRetain();
      swift_release();
      v19 = OUTLINED_FUNCTION_57_4(v6, v4);
      if (v19 == -1)
        v20 = v6;
      else
        v20 = v160;
      v176 = v20;
      v21 = BYTE1(v6);
      if (v19 != -1)
        v21 = BYTE1(v160);
      v175 = v21;
      if (v19 == -1)
        v22 = BYTE2(v6);
      else
        v22 = BYTE2(v160);
      v174 = v22;
      if (v19 == -1)
        v23 = BYTE3(v6);
      else
        v23 = BYTE3(v160);
      v173 = v23;
      if (v19 == -1)
        v24 = BYTE4(v6);
      else
        v24 = BYTE4(v160);
      v172 = v24;
      if (v19 == -1)
        v25 = BYTE5(v6);
      else
        v25 = BYTE5(v160);
      v26 = v6 >> 40;
      v171 = v25;
      if (v19 == -1)
        v27 = BYTE6(v6);
      else
        v27 = BYTE6(v160);
      v170 = v27;
      v28 = HIBYTE(v6);
      if (v19 != -1)
        v28 = HIBYTE(v160);
      v169 = v28;
      if (v19 == -1)
        v29 = v4;
      else
        v29 = v159;
      v168 = v29;
      if (v19 == -1)
        v30 = BYTE1(v4);
      else
        v30 = BYTE1(v159);
      v167 = v30;
      if (v19 == -1)
        v31 = BYTE2(v4);
      else
        v31 = BYTE2(v159);
      v166 = v31;
      if (v19 == -1)
        v32 = BYTE3(v4);
      else
        v32 = BYTE3(v159);
      v165 = v32;
      if (v19 == -1)
        v33 = BYTE4(v4);
      else
        v33 = BYTE4(v159);
      v164 = v33;
      if (v19 == -1)
        v34 = BYTE5(v4);
      else
        v34 = BYTE5(v159);
      v163 = v34;
      if (v19 == -1)
        v35 = BYTE6(v4);
      else
        v35 = BYTE6(v159);
      v162 = v35;
      if (v19 == -1)
        v36 = HIBYTE(v4);
      else
        v36 = HIBYTE(v159);
      v161 = v36;
      if (OUTLINED_FUNCTION_57_4(v6, v4) == -1)
      {
        v49 = v131;
        v38 = v160 >> 24;
        v37 = v160 >> 16;
        v40 = HIWORD(v160);
        v39 = HIDWORD(v160);
        LOBYTE(v26) = BYTE5(v160);
        v41 = HIBYTE(v160);
        v43 = v159 >> 16;
        v42 = v159 >> 8;
        v45 = HIDWORD(v159);
        v44 = v159 >> 24;
        v46 = HIWORD(v159);
        v47 = v159 >> 40;
        v48 = HIBYTE(v159);
      }
      else
      {
        LOBYTE(v160) = v6;
        v37 = v6 >> 16;
        v18 = v6 >> 8;
        v38 = v6 >> 24;
        v39 = HIDWORD(v6);
        v41 = HIBYTE(v6);
        v40 = HIWORD(v6);
        LOBYTE(v159) = v4;
        v43 = v4 >> 16;
        v42 = v4 >> 8;
        v45 = HIDWORD(v4);
        v44 = v4 >> 24;
        v46 = HIWORD(v4);
        v47 = v4 >> 40;
        v48 = HIBYTE(v4);
        v49 = v131;
      }
      v50 = v140;
      v141 = *(_QWORD *)(v140 + 16);
      if (v141)
      {
        v154 = v42;
        v134 = 0;
        v135 = 0;
        v136 = 0;
        v137 = 0;
        v132 = 0;
        v133 = 0;
        v138 = 0;
        v139 = 0;
        v51 = 0;
        v143 = 0;
        v144 = 4;
        v145 = v18;
        v146 = v26;
        v157 = v38;
        v158 = v37;
        v155 = v40;
        v156 = v39;
        v147 = v41;
        v148 = v48;
        v152 = v44;
        v153 = v43;
        v150 = v47;
        v151 = v45;
        v149 = v46;
        do
        {
          if (v51 >= *(_QWORD *)(v50 + 16))
            __break(1u);
          v52 = *(_QWORD *)v49;
          if (*(_QWORD *)(*(_QWORD *)v49 + 16))
          {
            v142 = v51;
            OUTLINED_FUNCTION_51_5(*(_QWORD *)(v140 + 32 + 16 * v51));
            swift_bridgeObjectRetain();
            v53 = sub_2497F22B8();
            if ((v54 & 1) != 0)
            {
              v55 = *(_QWORD *)(*(_QWORD *)(v52 + 56) + 8 * v53);
              swift_retain();
              swift_bridgeObjectRelease();
              v56 = *(_QWORD *)(v55 + 32);
              v57 = *(_QWORD *)(v56 + 16);
              if (v57)
              {
                swift_bridgeObjectRetain();
                v58 = 0;
                v177 = v56;
                do
                {
                  v203 = v57;
                  v202 = v58;
                  v59 = v56 + v58;
                  v213 = *(unsigned __int8 *)(v59 + 32);
                  v212 = *(unsigned __int8 *)(v59 + 33);
                  v211 = *(unsigned __int8 *)(v59 + 34);
                  v226 = *(unsigned __int8 *)(v59 + 35);
                  v227 = *(unsigned __int8 *)(v59 + 36);
                  v60 = *(unsigned __int8 *)(v59 + 37);
                  v61 = *(unsigned __int8 *)(v59 + 38);
                  v62 = *(unsigned __int8 *)(v59 + 39);
                  v63 = *(unsigned __int8 *)(v59 + 40);
                  v64 = *(unsigned __int8 *)(v59 + 41);
                  v65 = *(unsigned __int8 *)(v59 + 42);
                  v66 = *(unsigned __int8 *)(v59 + 43);
                  v67 = *(unsigned __int8 *)(v59 + 44);
                  v68 = *(unsigned __int8 *)(v59 + 45);
                  v69 = *(unsigned __int8 *)(v59 + 46);
                  v70 = *(unsigned __int8 *)(v59 + 47);
                  v183 = *(_QWORD *)(v59 + 56);
                  v184 = *(_QWORD *)(v59 + 48);
                  v71 = *(unsigned __int8 *)(v59 + 66);
                  v72 = *(unsigned __int8 *)(v59 + 67);
                  v73 = *(unsigned __int8 *)(v59 + 68);
                  v74 = *(unsigned __int8 *)(v59 + 69);
                  v75 = *(unsigned __int8 *)(v59 + 70);
                  v76 = *(unsigned __int8 *)(v59 + 71);
                  v77 = *(unsigned __int8 *)(v59 + 72);
                  v78 = *(unsigned __int8 *)(v59 + 73);
                  v79 = *(unsigned __int8 *)(v59 + 74);
                  v80 = *(unsigned __int8 *)(v59 + 75);
                  v81 = *(unsigned __int8 *)(v59 + 76);
                  v82 = *(unsigned __int8 *)(v59 + 77);
                  v83 = *(unsigned __int8 *)(v59 + 78);
                  v84 = *(unsigned __int8 *)(v59 + 79);
                  v181 = *(_QWORD *)(v59 + 80);
                  v180 = *(_QWORD *)(v59 + 88);
                  v179 = *(unsigned __int8 *)(v59 + 96);
                  v178 = *(unsigned __int16 *)(v59 + 98);
                  v182 = *(unsigned __int16 *)(v59 + 100);
                  v185 = *(_QWORD *)(v59 + 104);
                  v222 = *(unsigned __int8 *)(v59 + 65);
                  v223 = *(unsigned __int8 *)(v59 + 64);
                  v244 = *(_BYTE *)(v59 + 64);
                  v245 = v222;
                  v85 = v71;
                  v246 = v71;
                  v220 = v74;
                  v221 = v72;
                  v247 = v72;
                  v86 = v73;
                  v248 = v73;
                  v249 = v74;
                  v87 = v76;
                  v219 = v75;
                  v250 = v75;
                  v88 = v78;
                  v251 = v76;
                  v206 = v77;
                  v252 = v77;
                  v253 = v78;
                  v205 = v79;
                  v254 = v79;
                  v255 = v80;
                  v204 = v81;
                  v256 = v81;
                  v257 = v82;
                  v258 = v83;
                  v259 = v84;
                  v228 = v213;
                  v229 = v212;
                  v230 = v211;
                  v231 = v226;
                  v232 = v227;
                  v217 = v61;
                  v218 = v60;
                  v233 = v60;
                  v234 = v61;
                  v216 = v62;
                  v235 = v62;
                  v225 = v63;
                  v236 = v63;
                  v210 = v64;
                  v237 = v64;
                  v209 = v65;
                  v238 = v65;
                  v215 = v66;
                  v239 = v66;
                  v208 = v67;
                  v240 = v67;
                  v214 = v68;
                  v241 = v68;
                  v224 = v69;
                  v242 = v69;
                  v207 = v70;
                  v243 = v70;
                  v190 = v73;
                  v191 = v71;
                  v188 = v78;
                  v189 = v76;
                  v186 = v82;
                  v187 = v80;
                  if ((OUTLINED_FUNCTION_26_5(&v244, &v228) & 0x80000000) != 0)
                  {
                    v90 = v222;
                    v89 = v223;
                    v91 = v85;
                    v93 = v220;
                    v92 = v221;
                    v94 = v86;
                    v95 = v219;
                    v96 = v87;
                    v97 = v77;
                    v98 = v88;
                    v99 = v79;
                    v100 = v80;
                    v101 = v81;
                    v102 = v82;
                    v103 = v83;
                    v104 = v83;
                    v105 = v84;
                    v200 = v213;
                    v199 = v212;
                    v198 = v211;
                    v197 = v226;
                    v196 = v227;
                    v195 = v218;
                    v194 = v217;
                    v193 = v216;
                    v192 = v225;
                    v106 = v210;
                    v107 = v209;
                    v108 = v215;
                    v109 = v208;
                    v110 = v214;
                    v111 = v224;
                    v112 = v207;
                  }
                  else
                  {
                    v89 = v213;
                    v90 = v212;
                    v91 = v211;
                    v92 = v226;
                    v94 = v227;
                    v95 = v217;
                    v93 = v218;
                    v96 = v216;
                    v104 = v224;
                    v97 = v225;
                    v98 = v210;
                    v99 = v209;
                    v100 = v215;
                    v101 = v208;
                    v102 = v214;
                    v105 = v207;
                    v200 = v223;
                    v199 = v222;
                    v198 = v85;
                    v197 = v221;
                    v196 = v86;
                    v195 = v220;
                    v194 = v219;
                    v193 = v87;
                    v192 = v77;
                    v106 = v88;
                    v107 = v79;
                    v108 = v80;
                    v109 = v204;
                    v110 = v82;
                    v103 = v83;
                    v111 = v83;
                    v112 = v84;
                  }
                  v244 = v89;
                  v245 = v90;
                  v246 = v91;
                  v247 = v92;
                  v248 = v94;
                  v249 = v93;
                  v250 = v95;
                  v251 = v96;
                  v252 = v97;
                  v253 = v98;
                  v254 = v99;
                  v255 = v100;
                  v256 = v101;
                  v257 = v102;
                  v258 = v104;
                  v259 = v105;
                  v228 = v176;
                  v229 = v175;
                  v230 = v174;
                  v231 = v173;
                  v232 = v172;
                  v233 = v171;
                  v234 = v170;
                  v235 = v169;
                  v236 = v168;
                  v237 = v167;
                  v238 = v166;
                  v239 = v165;
                  v240 = v164;
                  v241 = v163;
                  v242 = v162;
                  v243 = v161;
                  if (OUTLINED_FUNCTION_26_5(&v244, &v228))
                    goto LABEL_65;
                  v244 = v200;
                  v245 = v199;
                  v246 = v198;
                  v247 = v197;
                  v248 = v196;
                  v249 = v195;
                  v250 = v194;
                  v251 = v193;
                  v252 = v192;
                  v253 = v106;
                  v254 = v107;
                  v255 = v108;
                  v256 = v109;
                  v257 = v110;
                  v258 = v111;
                  v259 = v112;
                  v228 = v160;
                  v229 = v145;
                  v230 = v158;
                  v231 = v157;
                  v232 = v156;
                  v233 = v146;
                  v234 = v155;
                  v235 = v147;
                  v236 = v159;
                  v237 = v154;
                  v238 = v153;
                  v239 = v152;
                  v240 = v151;
                  v241 = v150;
                  v242 = v149;
                  v243 = v148;
                  if (OUTLINED_FUNCTION_26_5(&v244, &v228))
                  {
LABEL_65:
                    v56 = v177;
                  }
                  else
                  {
                    v113 = v143;
                    v56 = v177;
                    v115 = v224;
                    v114 = v225;
                    v116 = v214;
                    v118 = v222;
                    v117 = v223;
                    v119 = v190;
                    v120 = v191;
                    v121 = v220;
                    v122 = v221;
                    v123 = v219;
                    v125 = v188;
                    v124 = v189;
                    v127 = v186;
                    v126 = v187;
                    v128 = v103;
                    v129 = v185;
                    if (v144 == 4)
                    {
                      if (qword_25787F6A0 != -1)
                      {
                        v201 = v128;
                        swift_once();
                        v128 = v201;
                        v127 = v186;
                        v126 = v187;
                        v125 = v188;
                        v124 = v189;
                        v123 = v219;
                        v121 = v220;
                        v119 = v190;
                        v120 = v191;
                        v122 = v221;
                        v118 = v222;
                        v117 = v223;
                        v115 = v224;
                        v116 = v214;
                        v129 = v185;
                        v114 = v225;
                      }
                      v113 = qword_2578907F0;
                    }
                    if ((double)v113 / 1000.0 < (double)v129 / 1000.0)
                    {
                      v138 = v114 | (v210 << 8) | (v209 << 16) | (v215 << 24) | (v208 << 32) | (v116 << 40) | (v115 << 48) | (v207 << 56);
                      v139 = v213 | (v212 << 8) | (v211 << 16) | (v226 << 24) | (v227 << 32) | (v218 << 40) | (v217 << 48) | (v216 << 56);
                      v136 = v206 | (v125 << 8) | (v205 << 16) | (v126 << 24) | (v204 << 32) | (v127 << 40) | (v128 << 48) | (v84 << 56);
                      v137 = v117 | (v118 << 8) | (v120 << 16) | (v122 << 24) | (v119 << 32) | (v121 << 40) | (v123 << 48) | (v124 << 56);
                      v134 = v181;
                      v135 = v180;
                      v132 = v184;
                      v133 = v183;
                      v143 = v129;
                      v144 = v179 | (v178 << 16) | (v182 << 32);
                    }
                  }
                  v58 = v202 + 80;
                  v57 = v203 - 1;
                }
                while (v203 != 1);
                OUTLINED_FUNCTION_36_5();
                OUTLINED_FUNCTION_0_0();
                swift_release();
                v49 = v131;
              }
              else
              {
                OUTLINED_FUNCTION_0_0();
                swift_release();
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_0_0();
            }
            v50 = v140;
            v51 = v142;
          }
          ++v51;
        }
        while (v51 != v141);
        result = swift_bridgeObjectRelease();
        if (v144 != 4)
        {
          *(_QWORD *)v130 = v139;
          *(_QWORD *)(v130 + 8) = v138;
          *(_QWORD *)(v130 + 16) = v132;
          *(_QWORD *)(v130 + 24) = v133;
          *(_QWORD *)(v130 + 32) = v137;
          *(_QWORD *)(v130 + 40) = v136;
          *(_QWORD *)(v130 + 48) = v134;
          *(_QWORD *)(v130 + 56) = v135;
          *(_WORD *)(v130 + 68) = WORD2(v144);
          *(_DWORD *)(v130 + 64) = v144 & 0xFFFF00FF;
          return result;
        }
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
    }
    else
    {
      OUTLINED_FUNCTION_1();
      result = OUTLINED_FUNCTION_55_4();
    }
  }
  *(_OWORD *)(v130 + 32) = 0u;
  *(_OWORD *)(v130 + 48) = 0u;
  *(_OWORD *)v130 = 0u;
  *(_OWORD *)(v130 + 16) = 0u;
  *(_WORD *)(v130 + 68) = 0;
  *(_DWORD *)(v130 + 64) = 4;
  return result;
}

Swift::String __swiftcall UniversalControlConfiguration.prettyPrint()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  sub_2497E9230();
  OUTLINED_FUNCTION_27();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall UniversalControlConfiguration.prettyPrint(depth:)(Swift::Int depth)
{
  uint64_t v1;
  void *v2;
  Swift::String result;

  sub_2497E9230();
  OUTLINED_FUNCTION_27();
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

uint64_t UniversalControlConfiguration.GradedLink.display1.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UniversalControlConfiguration.GradedLink.display2.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

double UniversalControlConfiguration.GradedLink.flipped()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  double result;
  unsigned int v4;
  __int128 v5;
  __int128 v6;

  HIDWORD(v2) = *(_DWORD *)(v1 + 66);
  LODWORD(v2) = HIDWORD(v2);
  result = *(double *)(v1 + 72);
  v4 = 0x1000302u >> (8 * *(_BYTE *)(v1 + 64));
  v5 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 66) = v2 >> 16;
  *(double *)(a1 + 72) = result;
  return result;
}

BOOL UniversalControlConfiguration.GradedLink.isNormalized.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = static UniversalControlUUID.compare(lhs:rhs:)(v0[4], v0[5], *v0, v0[1]);
  return OUTLINED_FUNCTION_62_2(v1);
}

uint64_t UniversalControlConfiguration.GradedLink.description.getter()
{
  OUTLINED_FUNCTION_19_13();
  return UniversalControlLink.description.getter();
}

uint64_t static UniversalControlConfiguration.GradedLink.== infix(_:_:)(uint64_t a1, __int128 *a2)
{
  char v2;
  int v3;
  double v4;
  char v5;
  int v6;
  double v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  unsigned __int8 v14;
  _OWORD v16[4];
  char v17;
  int v18;
  _OWORD v19[4];
  char v20;
  int v21;

  v2 = *(_BYTE *)(a1 + 64);
  v3 = *(_DWORD *)(a1 + 66);
  v4 = *(double *)(a1 + 72);
  v5 = *((_BYTE *)a2 + 64);
  v6 = *(_DWORD *)((char *)a2 + 66);
  v7 = *((double *)a2 + 9);
  v8 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v10 = *a2;
  v11 = a2[1];
  v12 = a2[2];
  v13 = a2[3];
  v19[2] = *(_OWORD *)(a1 + 32);
  v19[3] = v9;
  v20 = v2;
  v21 = v3;
  v16[0] = v10;
  v16[1] = v11;
  v16[2] = v12;
  v16[3] = v13;
  v17 = v5;
  v18 = v6;
  static UniversalControlLink.== infix(_:_:)((unsigned __int8 *)v19, (uint64_t)v16);
  return v14 & (v4 == v7);
}

uint64_t UniversalControlConfiguration.GradedLink.hash(into:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_13();
  UniversalControlLink.hash(into:)(v0);
  return sub_2498376D8();
}

void UniversalControlConfiguration.GradedLink.hashValue.getter()
{
  OUTLINED_FUNCTION_8_17();
  sub_249837690();
  OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_34_8();
  sub_2498376E4();
  OUTLINED_FUNCTION_28_8();
}

void sub_2497F10B4()
{
  OUTLINED_FUNCTION_8_17();
  sub_249837690();
  OUTLINED_FUNCTION_4_20();
  OUTLINED_FUNCTION_34_8();
  sub_2498376E4();
  OUTLINED_FUNCTION_28_8();
}

uint64_t static UniversalControlConfiguration.GradedLink.< infix(_:_:)(double *a1, uint64_t a2)
{
  double v4;
  double v5;
  _BYTE v7[70];
  _BYTE v8[70];

  OUTLINED_FUNCTION_87(v7, a1);
  v4 = a1[9];
  OUTLINED_FUNCTION_9_15(v8);
  v5 = *(double *)(a2 + 72);
  if (v5 < v4)
    return 1;
  if (v4 >= v5)
    return sub_2497F1164(v7) & 1;
  return 0;
}

uint64_t sub_2497F1164(const void *a1)
{
  char v2;
  char v4;
  unsigned __int8 v5[70];
  unsigned __int8 v6[70];
  unsigned __int8 v7[70];
  unsigned __int8 v8[70];

  OUTLINED_FUNCTION_87(v8, a1);
  OUTLINED_FUNCTION_9_15(v7);
  static UniversalControlLink.< infix(_:_:)(v8, v7);
  if ((v2 & 1) != 0)
    return 1;
  OUTLINED_FUNCTION_87(v6, a1);
  OUTLINED_FUNCTION_9_15(v5);
  static UniversalControlLink.< infix(_:_:)(v5, v6);
  if ((v4 & 1) != 0)
    return 0;
  else
    return 2;
}

uint64_t sub_2497F11F0(void *__src, const void *a2)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE v11[80];
  double __dst[10];

  memcpy(v11, __src, sizeof(v11));
  memcpy(__dst, a2, sizeof(__dst));
  sub_24975E6D8((uint64_t)v11, __dst, v3, v4, v5, v6, v7, v8);
  return v9 & 1;
}

BOOL sub_2497F1244(void *__src, const void *a2)
{
  double v4[10];
  double __dst[10];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_2497EC634(v4, __dst);
}

uint64_t sub_2497F1298(void *__src, const void *a2)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE v11[80];
  double __dst[10];

  memcpy(v11, __src, sizeof(v11));
  memcpy(__dst, a2, sizeof(__dst));
  sub_249771354((uint64_t)v11, __dst, v3, v4, v5, v6, v7, v8);
  return v9 & 1;
}

uint64_t sub_2497F12EC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_BYTE *)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t result;
  uint64_t v17;
  unsigned int v19;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unint64_t v66;
  unsigned int v67;
  unint64_t v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  uint64_t v83;
  _BYTE v84[66];
  __int16 v85;
  __int16 v86;
  uint64_t v87;

  v46 = a1[7];
  v37 = a1[16];
  v35 = a1[17];
  v36 = a1[18];
  v38 = a1[19];
  v40 = a1[20];
  v39 = a1[21];
  v5 = *((_QWORD *)a1 + 9);
  v52 = a1[1];
  v53 = *a1;
  v50 = a1[3];
  v51 = a1[2];
  v48 = a1[5];
  v49 = a1[4];
  v47 = a1[6];
  v44 = a1[10];
  v45 = a1[8];
  v32 = a1[11];
  v33 = a1[9];
  v42 = a1[13];
  v43 = a1[12];
  v41 = a1[14];
  v6 = a1[15];
  v7 = a1[22];
  v8 = a1[23];
  v9 = a1[24];
  v30 = a1[25];
  v10 = a1[26];
  v11 = a1[27];
  v12 = a1[28];
  v34 = a1[29];
  v13 = a1[30];
  v14 = a1[31];
  v70 = a1[33];
  v21 = a1[32];
  v22 = a1[34];
  v24 = a1[35];
  v54 = a1[36];
  v75 = a1[37];
  v55 = a1[38];
  v77 = a1[39];
  v56 = a1[40];
  v79 = a1[41];
  v57 = a1[42];
  v81 = a1[43];
  v58 = a1[44];
  v69 = a1[45];
  v59 = a1[46];
  v72 = a1[47];
  v60 = a1[48];
  v61 = a1[49];
  v62 = a1[50];
  v63 = a1[52];
  v23 = a1[53];
  v73 = a1[54];
  v64 = a1[55];
  v65 = a1[56];
  v67 = a1[57];
  v78 = a1[58];
  v71 = a1[59];
  v76 = a1[60];
  v80 = a1[61];
  v25 = a1[63];
  v26 = a1[62];
  v83 = a1[64];
  v29 = *((unsigned __int16 *)a1 + 33);
  v82 = *((unsigned __int16 *)a1 + 34);
  if (static UniversalControlUUID.compare(lhs:rhs:)(v53 | (v52 << 8) | (v51 << 16) | (v50 << 24) | (v49 << 32) | (v48 << 40) | (v47 << 48) | (v46 << 56), v45 | (v33 << 8) | (v44 << 16) | (v32 << 24) | (v43 << 32) | (v42 << 40) | (v41 << 48) | (v6 << 56), a2, a3))
  {
    __asm { BR              X8 }
  }
  v15 = v30;
  v17 = v73;
  v19 = v65;
  v31 = v67;
  v74 = v15;
  v66 = v45 | ((unint64_t)v33 << 8) | ((unint64_t)v44 << 16) | ((unint64_t)v32 << 24) | (v43 << 32) | (v42 << 40) | (v41 << 48) | (v6 << 56);
  v68 = v53 | ((unint64_t)v52 << 8) | ((unint64_t)v51 << 16) | ((unint64_t)v50 << 24) | (v49 << 32) | (v48 << 40) | (v47 << 48) | (v46 << 56);
  result = static UniversalControlUUID.compare(lhs:rhs:)(v68, v66, a2, a3);
  if (result)
    goto LABEL_6;
  v84[0] = v53;
  v84[1] = v52;
  v84[2] = v51;
  v84[3] = v50;
  v84[4] = v49;
  v84[5] = v48;
  v84[6] = v47;
  v84[7] = v46;
  v84[8] = v45;
  v84[9] = v33;
  v84[10] = v44;
  v84[11] = v32;
  v84[12] = v43;
  v84[13] = v42;
  v84[14] = v41;
  v84[15] = v6;
  v84[16] = v37;
  v84[17] = v35;
  v84[18] = v36;
  v84[19] = v38;
  v84[20] = v40;
  v84[21] = v39;
  v84[22] = v7;
  v84[23] = v8;
  v84[24] = v9;
  v84[25] = v74;
  v84[26] = v10;
  v84[27] = v11;
  v84[28] = v12;
  v84[29] = v34;
  v84[30] = v13;
  v84[31] = v14;
  v84[32] = v21;
  v84[33] = v70;
  v84[34] = v22;
  v84[35] = v24;
  v84[36] = v54;
  v84[37] = v75;
  v84[38] = v55;
  v84[39] = v77;
  v84[40] = v56;
  v84[41] = v79;
  v84[42] = v57;
  v84[43] = v81;
  v84[44] = v58;
  v84[45] = v69;
  v84[46] = v59;
  v84[47] = v72;
  v84[48] = v60;
  v84[49] = v61;
  v84[50] = v62;
  v84[51] = v35;
  v84[52] = v63;
  v84[53] = v23;
  v84[54] = v17;
  v84[55] = v64;
  v84[56] = v19;
  v84[57] = v31;
  v84[58] = v78;
  v84[59] = v71;
  v84[60] = v76;
  v84[61] = v80;
  v84[62] = v26;
  v84[63] = v25;
  v84[64] = v83;
  v85 = v29;
  v86 = v82;
  v87 = v5;
  result = a4(v84);
  if ((result & 1) == 0)
  {
LABEL_6:
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(_OWORD *)(a5 + 64) = xmmword_24983B6C0;
  }
  else
  {
    *(_QWORD *)a5 = v68;
    *(_QWORD *)(a5 + 8) = v66;
    *(_QWORD *)(a5 + 16) = v37 | ((unint64_t)v35 << 8) | ((unint64_t)v36 << 16) | ((unint64_t)v38 << 24) | (v40 << 32) | (v39 << 40) | (v7 << 48) | (v8 << 56);
    *(_QWORD *)(a5 + 24) = v9 | ((unint64_t)v74 << 8) | ((unint64_t)v10 << 16) | ((unint64_t)v11 << 24) | (v12 << 32) | (v34 << 40) | (v13 << 48) | (v14 << 56);
    *(_QWORD *)(a5 + 32) = v21 | ((unint64_t)v70 << 8) | ((unint64_t)v22 << 16) | ((unint64_t)v24 << 24) | ((unint64_t)v54 << 32) | ((unint64_t)v75 << 40) | ((unint64_t)v55 << 48) | ((unint64_t)v77 << 56);
    *(_QWORD *)(a5 + 40) = v56 | ((unint64_t)v79 << 8) | ((unint64_t)v57 << 16) | ((unint64_t)v81 << 24) | ((unint64_t)v58 << 32) | ((unint64_t)v69 << 40) | ((unint64_t)v59 << 48) | ((unint64_t)v72 << 56);
    *(_QWORD *)(a5 + 48) = v60 | ((unint64_t)v61 << 8) | ((unint64_t)v62 << 16) | ((unint64_t)v35 << 24) | ((unint64_t)v63 << 32) | ((unint64_t)v23 << 40) | (v17 << 48) | ((unint64_t)v64 << 56);
    *(_QWORD *)(a5 + 56) = v19 | ((unint64_t)v31 << 8) | ((unint64_t)v78 << 16) | ((unint64_t)v71 << 24) | ((unint64_t)v76 << 32) | ((unint64_t)v80 << 40) | ((unint64_t)v26 << 48) | ((unint64_t)v25 << 56);
    *(_QWORD *)(a5 + 64) = v83 | ((unint64_t)v29 << 16) | ((unint64_t)v82 << 32);
    *(_QWORD *)(a5 + 72) = v5;
  }
  return result;
}

unint64_t sub_2497F1F1C()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;

  sub_249837690();
  sub_24983769C();
  sub_2498376E4();
  v0 = OUTLINED_FUNCTION_39_6();
  return sub_2497F2688(v0, v1, v2);
}

unint64_t sub_2497F2068(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_249837690();
  sub_24983769C();
  sub_24983769C();
  v8 = sub_2498376E4();
  return sub_2497F2830(a1, a2, a3, a4, v8);
}

uint64_t sub_2497F22B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_26_8();
  OUTLINED_FUNCTION_51_5(v0);
  sub_24983694C();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_33();
  v1 = OUTLINED_FUNCTION_39_6();
  return sub_2497F2A88(v1, v2, v3);
}

uint64_t sub_2497F2308@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2497F12EC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(_BYTE *))(v2 + 32), a2);
}

unint64_t sub_2497F2324()
{
  unint64_t result;

  result = qword_2578820D8;
  if (!qword_2578820D8)
  {
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2578820D8);
  }
  return result;
}

unint64_t sub_2497F2360()
{
  unint64_t result;

  result = qword_2578820E0;
  if (!qword_2578820E0)
  {
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2578820E0);
  }
  return result;
}

unint64_t sub_2497F239C(__int128 *a1)
{
  uint64_t v2;

  sub_249837690();
  sub_24983769C();
  sub_24983769C();
  sub_2498376A8();
  sub_24983769C();
  sub_24983769C();
  sub_2498376A8();
  v2 = sub_2498376E4();
  return sub_2497F35EC(a1, v2);
}

unint64_t sub_2497F24CC(__int128 *a1)
{
  uint64_t v2;

  sub_249837690();
  sub_24983769C();
  sub_24983769C();
  sub_2498376A8();
  v2 = sub_2498376E4();
  return sub_2497F37AC(a1, v2);
}

unint64_t sub_2497F2594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_26_8();
  sub_249836D84();
  OUTLINED_FUNCTION_33();
  v0 = OUTLINED_FUNCTION_39_6();
  return sub_2497F38D4(v0, v1, v2);
}

unint64_t sub_2497F25D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_249837684();
  return sub_2497F39B4(a1, v2);
}

unint64_t sub_2497F2608(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_249837054();
  return sub_2497F3A50(a1, v2);
}

unint64_t sub_2497F2638(unsigned __int8 a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_69_3();
  sub_2498376A8();
  v2 = OUTLINED_FUNCTION_33();
  return sub_2497F3B68(a1, v2);
}

unint64_t sub_2497F2688(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _BYTE __s2[16];
  __int128 __s1;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  v25 = v3 + 64;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = a2;
    v7 = a1;
    v16 = ~v4;
    v23 = *(_QWORD *)(v3 + 48);
    v24 = HIBYTE(a2);
    v21 = a2 >> 40;
    v22 = HIWORD(a2);
    v19 = a2 >> 24;
    v20 = HIDWORD(a2);
    v17 = a2 >> 8;
    v18 = a2 >> 16;
    v8 = HIBYTE(a1);
    v9 = HIWORD(a1);
    v10 = a1 >> 40;
    v11 = HIDWORD(a1);
    v12 = a1 >> 24;
    v13 = a1 >> 16;
    v14 = a1 >> 8;
    do
    {
      __s1 = *(_OWORD *)(v23 + 16 * v5);
      __s2[0] = v7;
      __s2[1] = v14;
      __s2[2] = v13;
      __s2[3] = v12;
      __s2[4] = v11;
      __s2[5] = v10;
      __s2[6] = v9;
      __s2[7] = v8;
      __s2[8] = v6;
      __s2[9] = v17;
      __s2[10] = v18;
      __s2[11] = v19;
      __s2[12] = v20;
      __s2[13] = v21;
      __s2[14] = v22;
      __s2[15] = v24;
      if (!memcmp(&__s1, __s2, 0x10uLL))
        break;
      v5 = (v5 + 1) & v16;
    }
    while (((*(_QWORD *)(v25 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_2497F2830(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t __s2;
  uint64_t v33;
  __int128 __s1;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v6 = -1 << *(_BYTE *)(v5 + 32);
  v7 = a5 & ~v6;
  v30 = v5 + 64;
  if (((*(_QWORD *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v10 = a2;
    v11 = a1;
    v19 = ~v6;
    v28 = *(_QWORD *)(v5 + 48);
    v29 = HIBYTE(a2);
    v26 = a2 >> 40;
    v27 = HIWORD(a2);
    v24 = a2 >> 24;
    v25 = HIDWORD(a2);
    v22 = a2 >> 8;
    v23 = a2 >> 16;
    v20 = HIWORD(a1);
    v21 = HIBYTE(a1);
    v12 = a1 >> 40;
    v13 = HIDWORD(a1);
    v14 = a1 >> 24;
    v15 = a1 >> 16;
    v16 = a1 >> 8;
    do
    {
      v17 = (__int128 *)(v28 + 32 * v7);
      v31 = v17[1];
      __s1 = *v17;
      LOBYTE(__s2) = v11;
      BYTE1(__s2) = v16;
      BYTE2(__s2) = v15;
      BYTE3(__s2) = v14;
      BYTE4(__s2) = v13;
      BYTE5(__s2) = v12;
      BYTE6(__s2) = v20;
      HIBYTE(__s2) = v21;
      LOBYTE(v33) = v10;
      BYTE1(v33) = v22;
      BYTE2(v33) = v23;
      BYTE3(v33) = v24;
      BYTE4(v33) = v25;
      BYTE5(v33) = v26;
      BYTE6(v33) = v27;
      HIBYTE(v33) = v29;
      if (!memcmp(&__s1, &__s2, 0x10uLL))
      {
        __s1 = v31;
        __s2 = a3;
        v33 = a4;
        if (!memcmp(&__s1, &__s2, 0x10uLL))
          break;
      }
      v7 = (v7 + 1) & v19;
    }
    while (((*(_QWORD *)(v30 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

uint64_t sub_2497F2A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a3 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X8 }
  return a3 & ~v4;
}

unint64_t sub_2497F35EC(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v7;
  int v8;
  __int128 *v9;
  uint64_t v10;
  __int128 *v11;
  int v12;
  int v13;
  __int128 v14;
  __int128 v15;
  int v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 __s2;
  __int128 __s1;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    v7 = a1[1];
    v25 = *a1;
    v26 = v7;
    v8 = *((unsigned __int8 *)a1 + 32);
    v27 = v25;
    v9 = (__int128 *)((char *)a1 + 33);
    v10 = *(_QWORD *)(v2 + 48);
    v17 = *((unsigned __int8 *)a1 + 65);
    do
    {
      v11 = (__int128 *)(v10 + 66 * v5);
      v12 = *((unsigned __int8 *)v11 + 32);
      v18 = *(__int128 *)((char *)v11 + 49);
      v19 = *(__int128 *)((char *)v11 + 33);
      v13 = *((unsigned __int8 *)v11 + 65);
      v14 = v11[1];
      __s1 = *v11;
      v20 = v14;
      __s2 = v27;
      if (!memcmp(&__s1, &__s2, 0x10uLL))
      {
        __s2 = v26;
        __s1 = v20;
        if (!memcmp(&__s1, &__s2, 0x10uLL) && v12 == v8)
        {
          v15 = v9[1];
          v23 = *v9;
          v24 = v15;
          __s2 = v23;
          __s1 = v19;
          if (!memcmp(&__s1, &__s2, 0x10uLL))
          {
            __s2 = v24;
            __s1 = v18;
            if (!memcmp(&__s1, &__s2, 0x10uLL) && v13 == v17)
              break;
          }
        }
      }
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_2497F37AC(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 *v9;
  int v10;
  __int128 *v11;
  int v12;
  __int128 v13;
  __int128 v15;
  __int128 __s2;
  __int128 __s1;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v7 = ~v4;
    v8 = *(_QWORD *)(v2 + 48);
    v9 = a1 + 1;
    v10 = *((unsigned __int8 *)a1 + 32);
    do
    {
      v11 = (__int128 *)(v8 + 33 * v5);
      v12 = *((unsigned __int8 *)v11 + 32);
      v13 = v11[1];
      __s1 = *v11;
      v15 = v13;
      __s2 = *a1;
      if (!memcmp(&__s1, &__s2, 0x10uLL))
      {
        __s2 = *v9;
        __s1 = v15;
        if (!memcmp(&__s1, &__s2, 0x10uLL) && v12 == v10)
          break;
      }
      v5 = (v5 + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_2497F38D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2498375C4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2498375C4() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2497F39B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_2497F3A50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_249783D14(0, &qword_2578805B0);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_249837060();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_249837060();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_2497F3B68(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

char *sub_2497F3C08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  char *result;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  __int8 v16;
  __int8 v17;
  __int8 v18;
  __int8 v19;
  __int8 v20;
  __int8 v21;
  __int8 v22;
  __int8 v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  __int8 v31;
  __int8 v32;
  __int8 v33;
  __int8 v34;
  __int8 v35;
  __int8 v36;
  __int8 v37;
  __int8 v38;
  char v39;
  char v40;
  __int8 v41;
  __int8 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int8 v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  __int8 v56;
  __int8 v57;
  __int8 v58;
  __int8 v59;
  __int8 v60;
  __int8 v61;
  __int8 v62;
  __int8 v63;
  char v64;
  char v65;
  __int8 v66;
  __int8 v67;
  __int8 v68;
  __int8 v69;
  __int8 v70;
  __int8 v71;
  char v72;
  char v73;
  uint64_t v74;
  double v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  int v83;
  uint64_t v84;
  double v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char v91;
  char v92;
  char v93;
  __int8 v94;
  char v95;
  __int8 v96;
  __int8 v97;
  __int8 v98;
  __int8 v99;
  __int8 v100;
  __int8 v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  __int8 v110;
  __int8 v111;
  __int8 v112;
  __int8 v113;
  __int8 v114;
  __int8 v115;
  __int8 v116;
  __int8 v117;
  char v118;
  char v119;
  char v120;
  double v121;
  double v122;
  uint64_t v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  uint64_t v132;
  int8x8_t v133;
  int8x8_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  char *v139;
  char *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  BOOL v152;
  unint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  BOOL v162;
  uint64_t v163;
  char v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  BOOL v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  unint64_t v186;
  char *v187;
  uint64_t v188;
  unint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  char *v199;
  uint64_t v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  unsigned int v207;
  unsigned int v208;
  _QWORD *v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unint64_t v219;
  unsigned int v220;
  unint64_t v221;
  unint64_t v222;
  unsigned int v223;
  unint64_t v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unint64_t v229;
  unsigned int v230;
  char v231;
  unint64_t v232;
  char v233;
  char v234;
  unsigned int v235;
  char v236;
  char v237;
  unsigned int v238;
  uint64_t v239;
  char v240;
  uint64_t v241;
  uint64_t v242;
  char v243;
  char v244;
  char v245;
  char v246;
  char v247;
  char v248;
  char v249;
  __int8 v250;
  __int8 v251;
  char v252;
  __int8 v253;
  __int8 v254;
  char v255;
  __int8 v256;
  __int8 v257;
  __int8 v258;
  __int8 v259;
  __int8 v260;
  __int8 v261;
  __int8 v262;
  __int8 v263;
  __int8 v264;
  __int8 v265;
  __int8 v266;
  __int8 v267;
  __int8 v268;
  __int8 v269;
  __int8 v270;
  __int8 v271;
  __int8 v272;
  __int8 v273;
  char v274;
  char v275;
  __int8 v276;
  char v277;
  char v278;
  __int8 v279;
  char v280;
  char v281;
  char v282;
  char v283;
  char v284;
  char v285;
  __int8 v286;
  char v287;
  char v288;
  __int8 v289;
  char v290;
  __int8 v291;
  __int8 v292;
  char v293;
  __int8 v294;
  __int8 v295;
  char v296;
  __int8 v297;
  __int8 v298;
  __int8 v299;
  __int8 v300;
  __int8 v301;
  __int8 v302;
  __int8 v303;
  __int8 v304;
  __int8 v305;
  __int8 v306;
  __int8 v307;
  __int8 v308;
  __int8 v309;
  char v310;
  __int8 v311;
  __int8 v312;
  char v313;
  __int8 v314;
  char v315;
  char v316;
  __int8 v317;
  char v318;
  char v319;
  __int8 v320;
  char v321;
  char v322;
  char v323;
  char v324;
  char v325;
  char v326;
  char v327;
  char v328;
  char v329;
  char v330;
  char v331;
  char v332;
  char v333;
  char v334;
  char v335;
  char v336;
  char v337;
  char v338;
  uint64_t v339;
  char v340;
  char v341;
  char v342;
  char v343;
  char v344;
  char v345;
  char v346;
  __int8 v347;
  __int8 v348;
  char v349;
  __int8 v350;
  __int8 v351;
  char v352;
  __int8 v353;
  __int8 v354;
  __int8 v355;
  __int8 v356;
  __int8 v357;
  __int8 v358;
  __int8 v359;
  __int8 v360;
  __int8 v361;
  __int8 v362;
  __int8 v363;
  __int8 v364;
  __int8 v365;
  __int8 v366;
  __int8 v367;
  __int8 v368;
  __int8 v369;
  __int8 v370;
  char v371;
  char v372;
  __int8 v373;
  char v374;
  char v375;
  __int8 v376;
  char v377;
  char v378;
  char v379;
  char v380;
  char v381;
  char v382;
  __int8 v383;
  char v384;
  char v385;
  __int8 v386;
  char v387;
  __int8 v388;
  __int8 v389;
  char v390;
  __int8 v391;
  __int8 v392;
  char v393;
  __int8 v394;
  __int8 v395;
  char v396;
  __int8 v397;
  __int8 v398;
  char v399;
  __int8 v400;
  __int8 v401;
  char v402;
  __int8 v403;
  __int8 v404;
  char v405;
  __int8 v406;
  char v407;
  char v408;
  __int8 v409;
  char v410;
  char v411;
  char v412;
  char v413;
  __int8 v414;
  char v415;
  char v416;
  __int8 v417;
  char v418;
  char v419;
  char v420;
  char v421;
  char v422;
  char v423;
  char v424;
  int v425;
  __int8 v426;
  char v427;
  __int8 v428;
  char v429;
  char v430;
  __int8 v431;
  __int8 v432;
  char v433;
  char v434;
  char v435;
  char v436;
  __int8 v437;
  char v438;
  char v439;
  __int8 v440;
  char v441;
  char v442;
  __int8 v443;
  char v444;
  char v445;
  char v446;
  char v447;
  char v448;
  char v449;
  __int8 v450;
  char v451;
  __int8 v452;
  __int8 v453;
  char v454;
  __int8 v455;
  __int8 v456;
  char v457;
  __int8 v458;
  __int8 v459;
  char v460;
  __int8 v461;
  __int8 v462;
  char v463;
  __int8 v464;
  __int8 v465;
  char v466;
  __int8 v467;
  __int8 v468;
  __int8 v469;
  int8x8_t v470;
  __int8 v471;
  __int8 v472;
  char v473;
  char v474;
  char v475;
  char v476;
  char v477;
  char v478;
  char v479;
  char v480;
  __int8 v481;
  char v482;
  __int8 v483;
  __int8 v484;
  char v485;
  __int8 v486;
  __int8 v487;
  char v488;
  __int16 v489;
  __int8 v490;
  __int8 v491;
  char v492;
  int v493;
  __int8 __src;
  __int8 __srca;
  __int8 v496;
  __int8 v497;
  uint64_t v498;
  __int8 v499;
  char v500;
  char v501;
  __int8 v502;
  __int8 v503;
  char v504;
  __int8 v505;
  __int128 v506;
  __int8 v507;
  char v508;
  __int8 v509;
  char v510;
  char v511;
  __int8 v512;
  char v513;
  __int8 v514;
  char v515;
  char v516;
  __int8 v517;
  char v518;
  __int8 v519;
  __int8 v520;
  char v521;
  __int8 v522;
  __int8 v523;
  char v524;
  __int8 v525;
  __int8 v526;
  char v527;
  __int8 v528;
  __int8 v529;
  char v530;
  __int8 v531;
  char v532;
  char v533;
  __int8 v534;
  char v535;
  __int8 v536;
  __int8 v537;
  char v538;
  char v539;
  char v540;
  char v541;
  char v542;
  char v543;
  char v544;
  char v545;
  char v546;
  char v547;
  char v548;
  __int8 v549;
  char v550;
  char v551;
  char v552;
  __int8 v553;
  __int8 v554;
  char v555;
  char v556;
  __int8 v557;
  uint64_t v558;
  __int8 v559;
  char v560;
  __int8 v561;
  __int8 v562;
  __int8 v563;
  char v564;
  __int8 v565;
  __int8 v566;
  __int8 v567;
  char v568;
  __int8 v569;
  __int8 v570;
  char v571;
  __int8 v572;
  __int8 v573;
  __int8 v574;
  char v575;
  __int8 v576;
  __int8 v577;
  __int8 v578;
  char v579;
  __int8 v580;
  char v581;
  __int8 v582;
  __int8 v583;
  char v584;
  char v585;
  char v586;
  char v587;
  char v588;
  char v589;
  char v590;
  uint64_t v591;
  char v592;
  char v593;
  char v594;
  __int128 v595;
  char v596;
  char v597;
  char v598;
  __int128 v599;
  char v600;
  char v601;
  char v602;
  __int128 v603;
  char v604;
  char v605;
  char v606;
  __int128 v607;
  char v608;
  char __s2;
  char v610;
  char v611;
  char v612;
  char v613;
  char v614;
  int8x8_t v615;
  char v616;
  char v617;
  char __s1;
  char v619;
  char v620;
  char v621;
  char v622;
  char v623;
  int8x8_t v624;
  char v625;
  char v626;
  uint64_t v627;

  v627 = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  result = (char *)sub_249837534();
  if ((uint64_t)result < v3)
  {
    v5 = result;
    v212 = v1;
    sub_24974CF88(v3 / 2);
    v200 = v6;
    v211 = v7;
    v205 = v3;
    v198 = a1;
    if (v3 <= 0)
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v138 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      goto LABEL_173;
    }
    v199 = v5;
    v8 = 0;
    v9 = *a1;
    v196 = *a1 + 72;
    v197 = *a1 + 36;
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v339 = *a1;
LABEL_4:
    v11 = v8 + 1;
    v206 = v10;
    v210 = v8;
    if (v8 + 1 >= v3)
    {
      v43 = v212;
      goto LABEL_69;
    }
    v239 = v8 + 1;
    v12 = v9 + 80 * v11;
    v13 = *(_BYTE *)v12;
    v14 = *(_BYTE *)(v12 + 1);
    v15 = *(_BYTE *)(v12 + 2);
    v605 = *(_BYTE *)(v12 + 3);
    v601 = *(_BYTE *)(v12 + 4);
    v597 = *(_BYTE *)(v12 + 5);
    v16 = *(_BYTE *)(v12 + 6);
    v17 = *(_BYTE *)(v12 + 7);
    v18 = *(_BYTE *)(v12 + 8);
    v19 = *(_BYTE *)(v12 + 9);
    v20 = *(_BYTE *)(v12 + 10);
    v21 = *(_BYTE *)(v12 + 11);
    v22 = *(_BYTE *)(v12 + 12);
    v23 = *(_BYTE *)(v12 + 13);
    v24 = *(_BYTE *)(v12 + 14);
    v593 = *(_BYTE *)(v12 + 15);
    v427 = *(_BYTE *)(v12 + 16);
    v424 = *(_BYTE *)(v12 + 17);
    v421 = *(_BYTE *)(v12 + 18);
    v418 = *(_BYTE *)(v12 + 19);
    v415 = *(_BYTE *)(v12 + 20);
    v412 = *(_BYTE *)(v12 + 21);
    v409 = *(_BYTE *)(v12 + 22);
    v406 = *(_BYTE *)(v12 + 23);
    v403 = *(_BYTE *)(v12 + 24);
    v400 = *(_BYTE *)(v12 + 25);
    v397 = *(_BYTE *)(v12 + 26);
    v394 = *(_BYTE *)(v12 + 27);
    v391 = *(_BYTE *)(v12 + 28);
    v388 = *(_BYTE *)(v12 + 29);
    v385 = *(_BYTE *)(v12 + 30);
    v382 = *(_BYTE *)(v12 + 31);
    v524 = *(_BYTE *)(v12 + 32);
    v521 = *(_BYTE *)(v12 + 33);
    v518 = *(_BYTE *)(v12 + 34);
    v515 = *(_BYTE *)(v12 + 35);
    v513 = *(_BYTE *)(v12 + 36);
    v510 = *(_BYTE *)(v12 + 37);
    v507 = *(_BYTE *)(v12 + 38);
    v503 = *(_BYTE *)(v12 + 39);
    v499 = *(_BYTE *)(v12 + 40);
    v496 = *(_BYTE *)(v12 + 41);
    __src = *(_BYTE *)(v12 + 42);
    v490 = *(_BYTE *)(v12 + 43);
    v486 = *(_BYTE *)(v12 + 44);
    v483 = *(_BYTE *)(v12 + 45);
    v480 = *(_BYTE *)(v12 + 46);
    v477 = *(_BYTE *)(v12 + 47);
    v330 = *(_BYTE *)(v12 + 48);
    v327 = *(_BYTE *)(v12 + 49);
    v324 = *(_BYTE *)(v12 + 50);
    v321 = *(_BYTE *)(v12 + 51);
    v318 = *(_BYTE *)(v12 + 52);
    v315 = *(_BYTE *)(v12 + 53);
    v312 = *(_BYTE *)(v12 + 54);
    v309 = *(_BYTE *)(v12 + 55);
    v306 = *(_BYTE *)(v12 + 56);
    v303 = *(_BYTE *)(v12 + 57);
    v300 = *(_BYTE *)(v12 + 58);
    v297 = *(_BYTE *)(v12 + 59);
    v294 = *(_BYTE *)(v12 + 60);
    v291 = *(_BYTE *)(v12 + 61);
    v288 = *(_BYTE *)(v12 + 62);
    v285 = *(_BYTE *)(v12 + 63);
    v230 = *(unsigned __int8 *)(v12 + 64);
    v218 = *(unsigned __int16 *)(v12 + 66);
    v207 = *(unsigned __int16 *)(v12 + 68);
    v224 = *(_QWORD *)(v12 + 72);
    v25 = v9 + 80 * v8;
    v26 = *(_BYTE *)v25;
    v27 = *(_BYTE *)(v25 + 1);
    v28 = *(_BYTE *)(v25 + 2);
    v29 = *(_BYTE *)(v25 + 3);
    v589 = *(_BYTE *)(v25 + 4);
    v30 = *(_BYTE *)(v25 + 5);
    v31 = *(_BYTE *)(v25 + 6);
    v32 = *(_BYTE *)(v25 + 7);
    v33 = *(_BYTE *)(v25 + 8);
    v34 = *(_BYTE *)(v25 + 9);
    v35 = *(_BYTE *)(v25 + 10);
    v36 = *(_BYTE *)(v25 + 11);
    v37 = *(_BYTE *)(v25 + 12);
    v38 = *(_BYTE *)(v25 + 13);
    v39 = *(_BYTE *)(v25 + 14);
    v40 = *(_BYTE *)(v25 + 15);
    v346 = *(_BYTE *)(v25 + 16);
    v343 = *(_BYTE *)(v25 + 17);
    v340 = *(_BYTE *)(v25 + 18);
    v336 = *(_BYTE *)(v25 + 19);
    v333 = *(_BYTE *)(v25 + 20);
    v379 = *(_BYTE *)(v25 + 21);
    v376 = *(_BYTE *)(v25 + 22);
    v373 = *(_BYTE *)(v25 + 23);
    v370 = *(_BYTE *)(v25 + 24);
    v367 = *(_BYTE *)(v25 + 25);
    v364 = *(_BYTE *)(v25 + 26);
    v361 = *(_BYTE *)(v25 + 27);
    v358 = *(_BYTE *)(v25 + 28);
    v355 = *(_BYTE *)(v25 + 29);
    v352 = *(_BYTE *)(v25 + 30);
    v349 = *(_BYTE *)(v25 + 31);
    v441 = *(_BYTE *)(v25 + 32);
    v438 = *(_BYTE *)(v25 + 33);
    v435 = *(_BYTE *)(v25 + 34);
    v433 = *(_BYTE *)(v25 + 35);
    v430 = *(_BYTE *)(v25 + 36);
    v474 = *(_BYTE *)(v25 + 37);
    v471 = *(_BYTE *)(v25 + 38);
    v468 = *(_BYTE *)(v25 + 39);
    v465 = *(_BYTE *)(v25 + 40);
    v462 = *(_BYTE *)(v25 + 41);
    v459 = *(_BYTE *)(v25 + 42);
    v456 = *(_BYTE *)(v25 + 43);
    v453 = *(_BYTE *)(v25 + 44);
    v450 = *(_BYTE *)(v25 + 45);
    v447 = *(_BYTE *)(v25 + 46);
    v444 = *(_BYTE *)(v25 + 47);
    v249 = *(_BYTE *)(v25 + 48);
    v246 = *(_BYTE *)(v25 + 49);
    v243 = *(_BYTE *)(v25 + 50);
    v236 = *(_BYTE *)(v25 + 51);
    v233 = *(_BYTE *)(v25 + 52);
    v282 = *(_BYTE *)(v25 + 53);
    v279 = *(_BYTE *)(v25 + 54);
    v276 = *(_BYTE *)(v25 + 55);
    v273 = *(_BYTE *)(v25 + 56);
    v270 = *(_BYTE *)(v25 + 57);
    v267 = *(_BYTE *)(v25 + 58);
    v264 = *(_BYTE *)(v25 + 59);
    v261 = *(_BYTE *)(v25 + 60);
    v258 = *(_BYTE *)(v25 + 61);
    v255 = *(_BYTE *)(v25 + 62);
    v252 = *(_BYTE *)(v25 + 63);
    v227 = *(unsigned __int8 *)(v25 + 64);
    v215 = *(unsigned __int16 *)(v25 + 66);
    v202 = *(unsigned __int16 *)(v25 + 68);
    v221 = *(_QWORD *)(v25 + 72);
    v585 = v13;
    __s1 = v13;
    v619 = v14;
    v576 = v16;
    v620 = v15;
    v621 = v605;
    v622 = v601;
    v623 = v597;
    v624.i8[0] = v16;
    v569 = v18;
    v572 = v17;
    v624.i8[1] = v17;
    v624.i8[2] = v18;
    v561 = v20;
    v565 = v19;
    v624.i8[3] = v19;
    v624.i8[4] = v20;
    v557 = v21;
    v624.i8[5] = v21;
    v553 = v22;
    v624.i8[6] = v22;
    v549 = v23;
    v624.i8[7] = v23;
    v625 = v24;
    v626 = v593;
    v527 = v26;
    __s2 = v26;
    v544 = v27;
    v610 = v27;
    v541 = v28;
    v611 = v28;
    v539 = v29;
    v612 = v29;
    v41 = v37;
    v613 = v589;
    v614 = v30;
    v615.i8[0] = v31;
    v615.i8[1] = v32;
    v615.i8[2] = v33;
    v615.i8[3] = v34;
    v42 = v35;
    v615.i8[4] = v35;
    v615.i8[5] = v36;
    v615.i8[6] = v37;
    v536 = v38;
    v615.i8[7] = v38;
    v533 = v39;
    v616 = v39;
    v530 = v40;
    v617 = v40;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
    {
      v425 = 1;
LABEL_10:
      v43 = v212;
      v3 = v205;
      v10 = v206;
      v44 = v239;
      goto LABEL_11;
    }
    __s1 = v527;
    v619 = v544;
    v620 = v541;
    v621 = v539;
    v622 = v589;
    v623 = v30;
    v624.i8[0] = v31;
    v624.i8[1] = v32;
    v624.i8[2] = v33;
    v624.i8[3] = v34;
    v624.i8[4] = v42;
    v624.i8[5] = v36;
    v624.i8[6] = v41;
    v624.i8[7] = v536;
    v625 = v533;
    v626 = v530;
    __s2 = v585;
    v610 = v14;
    v611 = v15;
    v612 = v605;
    v613 = v601;
    v614 = v597;
    v615.i8[0] = v576;
    v615.i8[1] = v572;
    v615.i8[2] = v569;
    v615.i8[3] = v565;
    v615.i8[4] = v561;
    v615.i8[5] = v557;
    v615.i8[6] = v553;
    v615.i8[7] = v549;
    v616 = v24;
    v617 = v593;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
    {
      v425 = 0;
      goto LABEL_10;
    }
    __s1 = v524;
    v619 = v521;
    v620 = v518;
    v621 = v515;
    v622 = v513;
    v623 = v510;
    v624.i8[0] = v507;
    v624.i8[1] = v503;
    v624.i8[2] = v499;
    v624.i8[3] = v496;
    v624.i8[4] = __src;
    v624.i8[5] = v490;
    v624.i8[6] = v486;
    v624.i8[7] = v483;
    v625 = v480;
    v626 = v477;
    __s2 = v441;
    v610 = v438;
    v611 = v435;
    v612 = v433;
    v613 = v430;
    v614 = v474;
    v615.i8[0] = v471;
    v615.i8[1] = v468;
    v615.i8[2] = v465;
    v615.i8[3] = v462;
    v615.i8[4] = v459;
    v615.i8[5] = v456;
    v615.i8[6] = v453;
    v615.i8[7] = v450;
    v616 = v447;
    v617 = v444;
    v43 = v212;
    v3 = v205;
    v10 = v206;
    v44 = v239;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      goto LABEL_40;
    __s1 = v441;
    v619 = v438;
    v620 = v435;
    v621 = v433;
    v622 = v430;
    v623 = v474;
    v624.i8[0] = v471;
    v624.i8[1] = v468;
    v624.i8[2] = v465;
    v624.i8[3] = v462;
    v624.i8[4] = v459;
    v624.i8[5] = v456;
    v624.i8[6] = v453;
    v624.i8[7] = v450;
    v625 = v447;
    v626 = v444;
    __s2 = v524;
    v610 = v521;
    v611 = v518;
    v612 = v515;
    v613 = v513;
    v614 = v510;
    v615.i8[0] = v507;
    v615.i8[1] = v503;
    v615.i8[2] = v499;
    v615.i8[3] = v496;
    v615.i8[4] = __src;
    v615.i8[5] = v490;
    v615.i8[6] = v486;
    v615.i8[7] = v483;
    v616 = v480;
    v617 = v477;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
    {
LABEL_55:
      v425 = 0;
LABEL_11:
      v45 = v210 + 2;
      v9 = v339;
      if (v210 + 2 >= v3)
        goto LABEL_41;
      goto LABEL_12;
    }
    __s1 = v427;
    v619 = v424;
    v620 = v421;
    v621 = v418;
    v622 = v415;
    v623 = v412;
    v624.i8[0] = v409;
    v624.i8[1] = v406;
    v624.i8[2] = v403;
    v624.i8[3] = v400;
    v624.i8[4] = v397;
    v624.i8[5] = v394;
    v624.i8[6] = v391;
    v624.i8[7] = v388;
    v625 = v385;
    v626 = v382;
    __s2 = v346;
    v610 = v343;
    v611 = v340;
    v612 = v336;
    v613 = v333;
    v614 = v379;
    v615.i8[0] = v376;
    v615.i8[1] = v373;
    v615.i8[2] = v370;
    v615.i8[3] = v367;
    v615.i8[4] = v364;
    v615.i8[5] = v361;
    v615.i8[6] = v358;
    v615.i8[7] = v355;
    v616 = v352;
    v617 = v349;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      goto LABEL_40;
    __s1 = v346;
    v619 = v343;
    v620 = v340;
    v621 = v336;
    v622 = v333;
    v623 = v379;
    v624.i8[0] = v376;
    v624.i8[1] = v373;
    v624.i8[2] = v370;
    v624.i8[3] = v367;
    v624.i8[4] = v364;
    v624.i8[5] = v361;
    v624.i8[6] = v358;
    v624.i8[7] = v355;
    v625 = v352;
    v626 = v349;
    __s2 = v427;
    v610 = v424;
    v611 = v421;
    v612 = v418;
    v613 = v415;
    v614 = v412;
    v615.i8[0] = v409;
    v615.i8[1] = v406;
    v615.i8[2] = v403;
    v615.i8[3] = v400;
    v615.i8[4] = v397;
    v615.i8[5] = v394;
    v615.i8[6] = v391;
    v615.i8[7] = v388;
    v616 = v385;
    v617 = v382;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      goto LABEL_55;
    __s1 = v330;
    v619 = v327;
    v620 = v324;
    v621 = v321;
    v622 = v318;
    v623 = v315;
    v624.i8[0] = v312;
    v624.i8[1] = v309;
    v624.i8[2] = v306;
    v624.i8[3] = v303;
    v624.i8[4] = v300;
    v624.i8[5] = v297;
    v624.i8[6] = v294;
    v624.i8[7] = v291;
    v625 = v288;
    v626 = v285;
    __s2 = v249;
    v610 = v246;
    v611 = v243;
    v612 = v236;
    v613 = v233;
    v614 = v282;
    v615.i8[0] = v279;
    v615.i8[1] = v276;
    v615.i8[2] = v273;
    v615.i8[3] = v270;
    v615.i8[4] = v267;
    v615.i8[5] = v264;
    v615.i8[6] = v261;
    v615.i8[7] = v258;
    v616 = v255;
    v617 = v252;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
    {
LABEL_40:
      v425 = 1;
      goto LABEL_11;
    }
    __s1 = v249;
    v619 = v246;
    v620 = v243;
    v621 = v236;
    v622 = v233;
    v623 = v282;
    v624.i8[0] = v279;
    v624.i8[1] = v276;
    v624.i8[2] = v273;
    v624.i8[3] = v270;
    v624.i8[4] = v267;
    v624.i8[5] = v264;
    v624.i8[6] = v261;
    v624.i8[7] = v258;
    v625 = v255;
    v626 = v252;
    __s2 = v330;
    v610 = v327;
    v611 = v324;
    v612 = v321;
    v613 = v318;
    v614 = v315;
    v615.i8[0] = v312;
    v615.i8[1] = v309;
    v615.i8[2] = v306;
    v615.i8[3] = v303;
    v615.i8[4] = v300;
    v615.i8[5] = v297;
    v615.i8[6] = v294;
    v615.i8[7] = v291;
    v616 = v288;
    v617 = v285;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
    {
      v45 = v210 + 2;
      v9 = v339;
      if (v210 + 2 >= v205)
        goto LABEL_68;
      goto LABEL_60;
    }
    v9 = v339;
    if (v230 < v227)
      goto LABEL_64;
    if (v227 < v230)
      goto LABEL_67;
    v85 = (double)v221 / 1000.0;
    v86 = (double)v224 / 1000.0;
    if (v85 < v86)
    {
LABEL_64:
      v45 = v210 + 2;
      if (v210 + 2 < v205)
      {
        v425 = 1;
        goto LABEL_12;
      }
LABEL_168:
      v77 = v210;
      goto LABEL_43;
    }
    if (v86 < v85)
    {
LABEL_67:
      v45 = v210 + 2;
      if (v210 + 2 >= v205)
        goto LABEL_68;
LABEL_60:
      v425 = 0;
LABEL_12:
      v46 = v197 + 80 * v45;
      while (1)
      {
        v213 = v43;
        v47 = v9 + 80 * v44;
        v606 = *(_BYTE *)v47;
        v602 = *(_BYTE *)(v47 + 1);
        v558 = v45;
        v598 = *(_BYTE *)(v47 + 2);
        v594 = *(_BYTE *)(v47 + 3);
        v586 = *(_BYTE *)(v47 + 5);
        v590 = *(_BYTE *)(v47 + 4);
        v580 = *(_BYTE *)(v47 + 7);
        v582 = *(_BYTE *)(v47 + 6);
        v573 = *(_BYTE *)(v47 + 9);
        v577 = *(_BYTE *)(v47 + 8);
        v566 = *(_BYTE *)(v47 + 11);
        v570 = *(_BYTE *)(v47 + 10);
        v562 = *(_BYTE *)(v47 + 12);
        v48 = *(_BYTE *)(v47 + 13);
        v49 = *(_BYTE *)(v47 + 14);
        v50 = *(_BYTE *)(v47 + 15);
        v422 = *(_BYTE *)(v47 + 16);
        v419 = *(_BYTE *)(v47 + 17);
        v416 = *(_BYTE *)(v47 + 18);
        v413 = *(_BYTE *)(v47 + 19);
        v410 = *(_BYTE *)(v47 + 20);
        v407 = *(_BYTE *)(v47 + 21);
        v404 = *(_BYTE *)(v47 + 22);
        v401 = *(_BYTE *)(v47 + 23);
        v398 = *(_BYTE *)(v47 + 24);
        v395 = *(_BYTE *)(v47 + 25);
        v392 = *(_BYTE *)(v47 + 26);
        v389 = *(_BYTE *)(v47 + 27);
        v386 = *(_BYTE *)(v47 + 28);
        v383 = *(_BYTE *)(v47 + 29);
        v380 = *(_BYTE *)(v47 + 30);
        v377 = *(_BYTE *)(v47 + 31);
        v448 = *(_BYTE *)(v47 + 32);
        v445 = *(_BYTE *)(v47 + 33);
        v442 = *(_BYTE *)(v47 + 34);
        v439 = *(_BYTE *)(v47 + 35);
        v436 = *(_BYTE *)(v47 + 36);
        v434 = *(_BYTE *)(v47 + 37);
        v431 = *(_BYTE *)(v47 + 38);
        v428 = *(_BYTE *)(v47 + 39);
        v497 = *(_BYTE *)(v47 + 40);
        __srca = *(_BYTE *)(v47 + 41);
        v491 = *(_BYTE *)(v47 + 42);
        v487 = *(_BYTE *)(v47 + 43);
        v484 = *(_BYTE *)(v47 + 44);
        v481 = *(_BYTE *)(v47 + 45);
        v478 = *(_BYTE *)(v47 + 46);
        v475 = *(_BYTE *)(v47 + 47);
        v325 = *(_BYTE *)(v47 + 48);
        v322 = *(_BYTE *)(v47 + 49);
        v319 = *(_BYTE *)(v47 + 50);
        v316 = *(_BYTE *)(v47 + 51);
        v313 = *(_BYTE *)(v47 + 52);
        v310 = *(_BYTE *)(v47 + 53);
        v307 = *(_BYTE *)(v47 + 54);
        v304 = *(_BYTE *)(v47 + 55);
        v301 = *(_BYTE *)(v47 + 56);
        v298 = *(_BYTE *)(v47 + 57);
        v295 = *(_BYTE *)(v47 + 58);
        v292 = *(_BYTE *)(v47 + 59);
        v289 = *(_BYTE *)(v47 + 60);
        v283 = *(_BYTE *)(v47 + 62);
        v286 = *(_BYTE *)(v47 + 61);
        v280 = *(_BYTE *)(v47 + 63);
        v228 = *(unsigned __int8 *)(v47 + 64);
        v216 = *(unsigned __int16 *)(v47 + 66);
        v203 = *(unsigned __int16 *)(v47 + 68);
        v222 = *(_QWORD *)(v47 + 72);
        v51 = *(_BYTE *)(v46 - 35);
        v52 = *(_BYTE *)(v46 - 34);
        v53 = *(_BYTE *)(v46 - 33);
        v54 = *(_BYTE *)(v46 - 32);
        v55 = *(_BYTE *)(v46 - 31);
        v56 = *(_BYTE *)(v46 - 30);
        v57 = *(_BYTE *)(v46 - 29);
        v58 = *(_BYTE *)(v46 - 28);
        v59 = *(_BYTE *)(v46 - 27);
        v60 = *(_BYTE *)(v46 - 26);
        v61 = *(_BYTE *)(v46 - 25);
        v62 = *(_BYTE *)(v46 - 24);
        v63 = *(_BYTE *)(v46 - 23);
        v64 = *(_BYTE *)(v46 - 22);
        v65 = *(_BYTE *)(v46 - 21);
        v328 = *(_BYTE *)(v46 - 20);
        v331 = *(_BYTE *)(v46 - 19);
        v334 = *(_BYTE *)(v46 - 18);
        v337 = *(_BYTE *)(v46 - 17);
        v341 = *(_BYTE *)(v46 - 16);
        v344 = *(_BYTE *)(v46 - 15);
        v347 = *(_BYTE *)(v46 - 14);
        v350 = *(_BYTE *)(v46 - 13);
        v353 = *(_BYTE *)(v46 - 12);
        v356 = *(_BYTE *)(v46 - 11);
        v359 = *(_BYTE *)(v46 - 10);
        v362 = *(_BYTE *)(v46 - 9);
        v365 = *(_BYTE *)(v46 - 8);
        v368 = *(_BYTE *)(v46 - 7);
        v371 = *(_BYTE *)(v46 - 6);
        v374 = *(_BYTE *)(v46 - 5);
        v451 = *(_BYTE *)(v46 - 4);
        v454 = *(_BYTE *)(v46 - 3);
        v457 = *(_BYTE *)(v46 - 2);
        v460 = *(_BYTE *)(v46 - 1);
        v463 = *(_BYTE *)v46;
        v466 = *(_BYTE *)(v46 + 1);
        v469 = *(_BYTE *)(v46 + 2);
        v472 = *(_BYTE *)(v46 + 3);
        v66 = *(_BYTE *)(v46 + 4);
        v67 = *(_BYTE *)(v46 + 5);
        v68 = *(_BYTE *)(v46 + 6);
        v69 = *(_BYTE *)(v46 + 7);
        v70 = *(_BYTE *)(v46 + 8);
        v71 = *(_BYTE *)(v46 + 9);
        v72 = *(_BYTE *)(v46 + 10);
        v73 = *(_BYTE *)(v46 + 11);
        v231 = *(_BYTE *)(v46 + 12);
        v234 = *(_BYTE *)(v46 + 13);
        v237 = *(_BYTE *)(v46 + 14);
        v240 = *(_BYTE *)(v46 + 15);
        v244 = *(_BYTE *)(v46 + 16);
        v247 = *(_BYTE *)(v46 + 17);
        v250 = *(_BYTE *)(v46 + 18);
        v253 = *(_BYTE *)(v46 + 19);
        v256 = *(_BYTE *)(v46 + 20);
        v259 = *(_BYTE *)(v46 + 21);
        v262 = *(_BYTE *)(v46 + 22);
        v265 = *(_BYTE *)(v46 + 23);
        v268 = *(_BYTE *)(v46 + 24);
        v271 = *(_BYTE *)(v46 + 25);
        v274 = *(_BYTE *)(v46 + 26);
        v277 = *(_BYTE *)(v46 + 27);
        v225 = *(unsigned __int8 *)(v46 + 28);
        v208 = *(unsigned __int16 *)(v46 + 30);
        v201 = *(unsigned __int16 *)(v46 + 32);
        v219 = *(_QWORD *)(v46 + 36);
        v504 = *(_BYTE *)(v46 - 36);
        __s1 = v504;
        v500 = v51;
        v619 = v51;
        v508 = v52;
        v620 = v52;
        v511 = v53;
        v621 = v53;
        v622 = v54;
        v516 = v55;
        v623 = v55;
        v519 = v56;
        v624.i8[0] = v56;
        v522 = v57;
        v624.i8[1] = v57;
        v525 = v58;
        v624.i8[2] = v58;
        v528 = v59;
        v624.i8[3] = v59;
        v531 = v60;
        v624.i8[4] = v60;
        v534 = v61;
        v624.i8[5] = v61;
        v537 = v62;
        v624.i8[6] = v62;
        v624.i8[7] = v63;
        v542 = v64;
        v625 = v64;
        v545 = v65;
        v626 = v65;
        __s2 = v606;
        v610 = v602;
        v611 = v598;
        v612 = v594;
        v613 = v590;
        v614 = v586;
        v615.i8[0] = v582;
        v615.i8[1] = v580;
        v615.i8[2] = v577;
        v615.i8[3] = v573;
        v615.i8[4] = v570;
        v615.i8[5] = v566;
        v615.i8[6] = v562;
        v554 = v48;
        v615.i8[7] = v48;
        v550 = v49;
        v616 = v49;
        v547 = v50;
        v617 = v50;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_14;
        __s1 = v606;
        v619 = v602;
        v620 = v598;
        v621 = v594;
        v622 = v590;
        v623 = v586;
        v624.i8[0] = v582;
        v624.i8[1] = v580;
        v624.i8[2] = v577;
        v624.i8[3] = v573;
        v624.i8[4] = v570;
        v624.i8[5] = v566;
        v624.i8[6] = v562;
        v624.i8[7] = v554;
        v625 = v550;
        v626 = v547;
        __s2 = v504;
        v610 = v500;
        v611 = v508;
        v612 = v511;
        v613 = v54;
        v614 = v516;
        v615.i8[0] = v519;
        v615.i8[1] = v522;
        v615.i8[2] = v525;
        v615.i8[3] = v528;
        v615.i8[4] = v531;
        v615.i8[5] = v534;
        v615.i8[6] = v537;
        v615.i8[7] = v63;
        v616 = v542;
        v617 = v545;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_18;
        __s1 = v451;
        v619 = v454;
        v620 = v457;
        v621 = v460;
        v622 = v463;
        v623 = v466;
        v624.i8[0] = v469;
        v624.i8[1] = v472;
        v624.i8[2] = v66;
        v624.i8[3] = v67;
        v624.i8[4] = v68;
        v624.i8[5] = v69;
        v624.i8[6] = v70;
        v624.i8[7] = v71;
        v625 = v72;
        v626 = v73;
        __s2 = v448;
        v610 = v445;
        v611 = v442;
        v612 = v439;
        v613 = v436;
        v614 = v434;
        v615.i8[0] = v431;
        v615.i8[1] = v428;
        v615.i8[2] = v497;
        v615.i8[3] = __srca;
        v615.i8[4] = v491;
        v615.i8[5] = v487;
        v615.i8[6] = v484;
        v615.i8[7] = v481;
        v616 = v478;
        v617 = v475;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_14;
        __s1 = v448;
        v619 = v445;
        v620 = v442;
        v621 = v439;
        v622 = v436;
        v623 = v434;
        v624.i8[0] = v431;
        v624.i8[1] = v428;
        v624.i8[2] = v497;
        v624.i8[3] = __srca;
        v624.i8[4] = v491;
        v624.i8[5] = v487;
        v624.i8[6] = v484;
        v624.i8[7] = v481;
        v625 = v478;
        v626 = v475;
        __s2 = v451;
        v610 = v454;
        v611 = v457;
        v612 = v460;
        v613 = v463;
        v614 = v466;
        v615.i8[0] = v469;
        v615.i8[1] = v472;
        v615.i8[2] = v66;
        v615.i8[3] = v67;
        v615.i8[4] = v68;
        v615.i8[5] = v69;
        v615.i8[6] = v70;
        v615.i8[7] = v71;
        v616 = v72;
        v617 = v73;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_18;
        __s1 = v328;
        v619 = v331;
        v620 = v334;
        v621 = v337;
        v622 = v341;
        v623 = v344;
        v624.i8[0] = v347;
        v624.i8[1] = v350;
        v624.i8[2] = v353;
        v624.i8[3] = v356;
        v624.i8[4] = v359;
        v624.i8[5] = v362;
        v624.i8[6] = v365;
        v624.i8[7] = v368;
        v625 = v371;
        v626 = v374;
        __s2 = v422;
        v610 = v419;
        v611 = v416;
        v612 = v413;
        v613 = v410;
        v614 = v407;
        v615.i8[0] = v404;
        v615.i8[1] = v401;
        v615.i8[2] = v398;
        v615.i8[3] = v395;
        v615.i8[4] = v392;
        v615.i8[5] = v389;
        v615.i8[6] = v386;
        v615.i8[7] = v383;
        v616 = v380;
        v617 = v377;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_14;
        __s1 = v422;
        v619 = v419;
        v620 = v416;
        v621 = v413;
        v622 = v410;
        v623 = v407;
        v624.i8[0] = v404;
        v624.i8[1] = v401;
        v624.i8[2] = v398;
        v624.i8[3] = v395;
        v624.i8[4] = v392;
        v624.i8[5] = v389;
        v624.i8[6] = v386;
        v624.i8[7] = v383;
        v625 = v380;
        v626 = v377;
        __s2 = v328;
        v610 = v331;
        v611 = v334;
        v612 = v337;
        v613 = v341;
        v614 = v344;
        v615.i8[0] = v347;
        v615.i8[1] = v350;
        v615.i8[2] = v353;
        v615.i8[3] = v356;
        v615.i8[4] = v359;
        v615.i8[5] = v362;
        v615.i8[6] = v365;
        v615.i8[7] = v368;
        v616 = v371;
        v617 = v374;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_18;
        __s1 = v231;
        v619 = v234;
        v620 = v237;
        v621 = v240;
        v622 = v244;
        v623 = v247;
        v624.i8[0] = v250;
        v624.i8[1] = v253;
        v624.i8[2] = v256;
        v624.i8[3] = v259;
        v624.i8[4] = v262;
        v624.i8[5] = v265;
        v624.i8[6] = v268;
        v624.i8[7] = v271;
        v625 = v274;
        v626 = v277;
        __s2 = v325;
        v610 = v322;
        v611 = v319;
        v612 = v316;
        v613 = v313;
        v614 = v310;
        v615.i8[0] = v307;
        v615.i8[1] = v304;
        v615.i8[2] = v301;
        v615.i8[3] = v298;
        v615.i8[4] = v295;
        v615.i8[5] = v292;
        v615.i8[6] = v289;
        v615.i8[7] = v286;
        v616 = v283;
        v617 = v280;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        {
LABEL_14:
          v43 = v213;
          v10 = v206;
          v9 = v339;
        }
        else
        {
          __s1 = v325;
          v619 = v322;
          v620 = v319;
          v621 = v316;
          v622 = v313;
          v623 = v310;
          v624.i8[0] = v307;
          v624.i8[1] = v304;
          v624.i8[2] = v301;
          v624.i8[3] = v298;
          v624.i8[4] = v295;
          v624.i8[5] = v292;
          v624.i8[6] = v289;
          v624.i8[7] = v286;
          v625 = v283;
          v626 = v280;
          __s2 = v231;
          v610 = v234;
          v611 = v237;
          v612 = v240;
          v613 = v244;
          v614 = v247;
          v615.i8[0] = v250;
          v615.i8[1] = v253;
          v615.i8[2] = v256;
          v615.i8[3] = v259;
          v615.i8[4] = v262;
          v615.i8[5] = v265;
          v615.i8[6] = v268;
          v615.i8[7] = v271;
          v616 = v274;
          v617 = v277;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          {
LABEL_18:
            v43 = v213;
            v10 = v206;
            v9 = v339;
            v74 = v558;
            if ((v425 & 1) != 0)
              goto LABEL_56;
            goto LABEL_19;
          }
          v43 = v213;
          v10 = v206;
          v9 = v339;
          if (v225 >= v228)
          {
            v74 = v558;
            if (v228 < v225
              || (v75 = (double)v222 / 1000.0, v76 = (double)v219 / 1000.0, v75 >= v76)
              && (v76 < v75 || v208 >= v216 && (v216 < v208 || v201 >= v203)))
            {
              if ((v425 & 1) != 0)
              {
LABEL_56:
                v3 = v205;
LABEL_42:
                v45 = v74;
                v77 = v210;
                if (v74 >= v210)
                {
LABEL_43:
                  if (v77 < v45)
                  {
                    v78 = 80 * v45;
                    v79 = 80 * v77;
                    v591 = v45;
                    v80 = v45;
                    do
                    {
                      if (v77 != --v80)
                      {
                        if (!v9)
                          goto LABEL_218;
                        v81 = v9 + v78;
                        v82 = *(_BYTE *)(v9 + v79 + 64);
                        v83 = *(_DWORD *)(v9 + v79 + 66);
                        v84 = *(_QWORD *)(v9 + v79 + 72);
                        v603 = *(_OWORD *)(v9 + v79 + 16);
                        v607 = *(_OWORD *)(v9 + v79);
                        v595 = *(_OWORD *)(v9 + v79 + 48);
                        v599 = *(_OWORD *)(v9 + v79 + 32);
                        memmove((void *)(v9 + v79), (const void *)(v9 + v78 - 80), 0x50uLL);
                        v9 = v339;
                        *(_OWORD *)(v81 - 80) = v607;
                        *(_OWORD *)(v81 - 64) = v603;
                        *(_OWORD *)(v81 - 48) = v599;
                        *(_OWORD *)(v81 - 32) = v595;
                        *(_BYTE *)(v81 - 16) = v82;
                        *(_DWORD *)(v81 - 14) = v83;
                        *(_QWORD *)(v81 - 8) = v84;
                        v10 = v206;
                      }
                      ++v77;
                      v78 -= 80;
                      v79 += 80;
                    }
                    while (v77 < v80);
                    v11 = v591;
LABEL_51:
                    v3 = v205;
                    goto LABEL_69;
                  }
LABEL_68:
                  v11 = v45;
                  goto LABEL_69;
                }
LABEL_214:
                __break(1u);
LABEL_215:
                __break(1u);
LABEL_216:
                __break(1u);
LABEL_217:
                __break(1u);
LABEL_218:
                __break(1u);
LABEL_219:
                __break(1u);
              }
            }
            else if ((v425 & 1) == 0)
            {
LABEL_50:
              v11 = v74;
              goto LABEL_51;
            }
            goto LABEL_19;
          }
        }
        v74 = v558;
        if ((v425 & 1) == 0)
          goto LABEL_50;
LABEL_19:
        v46 += 80;
        v45 = v74 + 1;
        v44 = v74;
        if (v74 + 1 >= v205)
        {
          v3 = v205;
LABEL_41:
          v74 = v45;
          v11 = v45;
          if (v425)
            goto LABEL_42;
LABEL_69:
          if (v11 >= v3)
            goto LABEL_103;
          if (__OFSUB__(v11, v210))
            goto LABEL_209;
          if (v11 - v210 >= (uint64_t)v199)
          {
LABEL_103:
            v87 = v210;
          }
          else
          {
            v87 = v210;
            if (__OFADD__(v210, v199))
              goto LABEL_212;
            if ((uint64_t)&v199[v210] >= v3)
              v88 = v3;
            else
              v88 = (uint64_t)&v199[v210];
            if (v88 < v210)
            {
LABEL_213:
              __break(1u);
              goto LABEL_214;
            }
            if (v11 != v88)
            {
              v214 = v43;
              v89 = (_QWORD *)(v196 + 80 * v11);
              v204 = v88;
              do
              {
                v90 = v9 + 80 * v11;
                v608 = *(_BYTE *)v90;
                v604 = *(_BYTE *)(v90 + 1);
                v600 = *(_BYTE *)(v90 + 2);
                v91 = *(_BYTE *)(v90 + 3);
                v92 = *(_BYTE *)(v90 + 4);
                v93 = *(_BYTE *)(v90 + 5);
                v94 = *(_BYTE *)(v90 + 6);
                v95 = *(_BYTE *)(v90 + 7);
                v96 = *(_BYTE *)(v90 + 8);
                v97 = *(_BYTE *)(v90 + 9);
                v98 = *(_BYTE *)(v90 + 10);
                v99 = *(_BYTE *)(v90 + 11);
                v100 = *(_BYTE *)(v90 + 12);
                v101 = *(_BYTE *)(v90 + 13);
                v102 = *(_BYTE *)(v90 + 14);
                v103 = *(_BYTE *)(v90 + 15);
                v546 = *(_BYTE *)(v90 + 16);
                v543 = *(_BYTE *)(v90 + 17);
                v540 = *(_BYTE *)(v90 + 18);
                v538 = *(_BYTE *)(v90 + 19);
                v535 = *(_BYTE *)(v90 + 20);
                v532 = *(_BYTE *)(v90 + 21);
                v529 = *(_BYTE *)(v90 + 22);
                v526 = *(_BYTE *)(v90 + 23);
                v523 = *(_BYTE *)(v90 + 24);
                v520 = *(_BYTE *)(v90 + 25);
                v517 = *(_BYTE *)(v90 + 26);
                v514 = *(_BYTE *)(v90 + 27);
                v512 = *(_BYTE *)(v90 + 28);
                v509 = *(_BYTE *)(v90 + 29);
                v470 = *(int8x8_t *)(v90 + 38);
                v390 = *(_BYTE *)(v90 + 30);
                v393 = *(_BYTE *)(v90 + 31);
                v473 = *(_BYTE *)(v90 + 32);
                v476 = *(_BYTE *)(v90 + 33);
                v479 = *(_BYTE *)(v90 + 34);
                v482 = *(_BYTE *)(v90 + 35);
                v485 = *(_BYTE *)(v90 + 36);
                v548 = *(_BYTE *)(v90 + 37);
                v492 = *(_BYTE *)(v90 + 46);
                v488 = *(_BYTE *)(v90 + 47);
                v338 = *(_BYTE *)(v90 + 48);
                v209 = v89;
                v241 = v11;
                while (1)
                {
                  v498 = v87;
                  v335 = *((_BYTE *)v89 - 23);
                  v332 = *((_BYTE *)v89 - 22);
                  v329 = *((_BYTE *)v89 - 21);
                  v326 = *((_BYTE *)v89 - 20);
                  v323 = *((_BYTE *)v89 - 19);
                  v320 = *((_BYTE *)v89 - 18);
                  v317 = *((_BYTE *)v89 - 17);
                  v314 = *((_BYTE *)v89 - 16);
                  v311 = *((_BYTE *)v89 - 15);
                  v308 = *((_BYTE *)v89 - 14);
                  v305 = *((_BYTE *)v89 - 13);
                  v302 = *((_BYTE *)v89 - 12);
                  v299 = *((_BYTE *)v89 - 11);
                  v296 = *((_BYTE *)v89 - 10);
                  v293 = *((_BYTE *)v89 - 9);
                  v238 = *((unsigned __int8 *)v89 - 8);
                  v226 = *((unsigned __int16 *)v89 - 3);
                  v220 = *((unsigned __int16 *)v89 - 2);
                  v232 = *v89;
                  v104 = *((_BYTE *)v89 - 152);
                  v105 = *((_BYTE *)v89 - 151);
                  v106 = *((_BYTE *)v89 - 150);
                  v107 = *((_BYTE *)v89 - 149);
                  v108 = *((_BYTE *)v89 - 148);
                  v109 = *((_BYTE *)v89 - 147);
                  v110 = *((_BYTE *)v89 - 146);
                  v111 = v95;
                  v112 = *((_BYTE *)v89 - 145);
                  v113 = *((_BYTE *)v89 - 144);
                  v114 = *((_BYTE *)v89 - 143);
                  v115 = *((_BYTE *)v89 - 142);
                  v116 = *((_BYTE *)v89 - 141);
                  v505 = *((_BYTE *)v89 - 140);
                  v117 = *((_BYTE *)v89 - 139);
                  v501 = *((_BYTE *)v89 - 138);
                  v118 = *((_BYTE *)v89 - 137);
                  v387 = *((_BYTE *)v89 - 136);
                  v384 = *((_BYTE *)v89 - 135);
                  v381 = *((_BYTE *)v89 - 134);
                  v378 = *((_BYTE *)v89 - 133);
                  v375 = *((_BYTE *)v89 - 132);
                  v372 = *((_BYTE *)v89 - 131);
                  v369 = *((_BYTE *)v89 - 130);
                  v366 = *((_BYTE *)v89 - 129);
                  v363 = *((_BYTE *)v89 - 128);
                  v360 = *((_BYTE *)v89 - 127);
                  v357 = *((_BYTE *)v89 - 126);
                  v354 = *((_BYTE *)v89 - 125);
                  v351 = *((_BYTE *)v89 - 124);
                  v348 = *((_BYTE *)v89 - 123);
                  v345 = *((_BYTE *)v89 - 122);
                  v342 = *((_BYTE *)v89 - 121);
                  v396 = *((_BYTE *)v89 - 120);
                  v399 = *((_BYTE *)v89 - 119);
                  v402 = *((_BYTE *)v89 - 118);
                  v405 = *((_BYTE *)v89 - 117);
                  v408 = *((_BYTE *)v89 - 116);
                  v411 = *((_BYTE *)v89 - 115);
                  v414 = *((_BYTE *)v89 - 114);
                  v417 = *((_BYTE *)v89 - 113);
                  v467 = *((_BYTE *)v89 - 112);
                  v464 = *((_BYTE *)v89 - 111);
                  v461 = *((_BYTE *)v89 - 110);
                  v458 = *((_BYTE *)v89 - 109);
                  v455 = *((_BYTE *)v89 - 108);
                  v452 = *((_BYTE *)v89 - 107);
                  v449 = *((_BYTE *)v89 - 106);
                  v446 = *((_BYTE *)v89 - 105);
                  v290 = *((_BYTE *)v89 - 104);
                  v287 = *((_BYTE *)v89 - 103);
                  v284 = *((_BYTE *)v89 - 102);
                  v281 = *((_BYTE *)v89 - 101);
                  v278 = *((_BYTE *)v89 - 100);
                  v275 = *((_BYTE *)v89 - 99);
                  v272 = *((_BYTE *)v89 - 98);
                  v269 = *((_BYTE *)v89 - 97);
                  v266 = *((_BYTE *)v89 - 96);
                  v263 = *((_BYTE *)v89 - 95);
                  v260 = *((_BYTE *)v89 - 94);
                  v257 = *((_BYTE *)v89 - 93);
                  v254 = *((_BYTE *)v89 - 92);
                  v251 = *((_BYTE *)v89 - 91);
                  v248 = *((_BYTE *)v89 - 90);
                  v245 = *((_BYTE *)v89 - 89);
                  v235 = *((unsigned __int8 *)v89 - 88);
                  v223 = *((unsigned __int16 *)v89 - 43);
                  v217 = *((unsigned __int16 *)v89 - 42);
                  v229 = *(v89 - 10);
                  __s1 = v608;
                  v619 = v604;
                  v620 = v600;
                  v621 = v91;
                  v587 = v93;
                  v622 = v92;
                  v623 = v93;
                  v583 = v94;
                  v624.i8[0] = v94;
                  v624.i8[1] = v111;
                  v574 = v97;
                  v578 = v96;
                  v624.i8[2] = v96;
                  v624.i8[3] = v97;
                  v567 = v99;
                  v624.i8[4] = v98;
                  v624.i8[5] = v99;
                  v563 = v100;
                  v624.i8[6] = v100;
                  v559 = v101;
                  v624.i8[7] = v101;
                  v555 = v102;
                  v625 = v102;
                  v551 = v103;
                  v626 = v103;
                  v119 = v104;
                  __s2 = v104;
                  v120 = v105;
                  v610 = v105;
                  v611 = v106;
                  v420 = v107;
                  v612 = v107;
                  v423 = v108;
                  v613 = v108;
                  v429 = v109;
                  v614 = v109;
                  v426 = v110;
                  v615.i8[0] = v110;
                  v432 = v112;
                  v615.i8[1] = v112;
                  v443 = v113;
                  v615.i8[2] = v113;
                  v440 = v114;
                  v615.i8[3] = v114;
                  v437 = v115;
                  v615.i8[4] = v115;
                  v615.i8[5] = v116;
                  v615.i8[6] = v505;
                  v615.i8[7] = v117;
                  v616 = v501;
                  v617 = v118;
                  if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                  {
                    __s1 = v119;
                    v619 = v120;
                    v620 = v106;
                    v621 = v420;
                    v622 = v423;
                    v623 = v429;
                    v624.i8[0] = v426;
                    v624.i8[1] = v432;
                    v624.i8[2] = v443;
                    v624.i8[3] = v440;
                    v624.i8[4] = v437;
                    v624.i8[5] = v116;
                    v624.i8[6] = v505;
                    v624.i8[7] = v117;
                    v625 = v501;
                    v626 = v118;
                    __s2 = v608;
                    v610 = v604;
                    v611 = v600;
                    v612 = v91;
                    v613 = v92;
                    v614 = v587;
                    v615.i8[0] = v583;
                    v615.i8[1] = v111;
                    v615.i8[2] = v578;
                    v615.i8[3] = v574;
                    v615.i8[4] = v98;
                    v615.i8[5] = v567;
                    v615.i8[6] = v563;
                    v615.i8[7] = v559;
                    v616 = v555;
                    v617 = v551;
                    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                      break;
                    __s1 = v473;
                    v619 = v476;
                    v620 = v479;
                    v621 = v482;
                    v622 = v485;
                    v623 = v548;
                    v624 = v470;
                    v625 = v492;
                    v626 = v488;
                    __s2 = v396;
                    v610 = v399;
                    v611 = v402;
                    v612 = v405;
                    v613 = v408;
                    v614 = v411;
                    v615.i8[0] = v414;
                    v615.i8[1] = v417;
                    v615.i8[2] = v467;
                    v615.i8[3] = v464;
                    v615.i8[4] = v461;
                    v615.i8[5] = v458;
                    v615.i8[6] = v455;
                    v615.i8[7] = v452;
                    v616 = v449;
                    v617 = v446;
                    if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                    {
                      __s1 = v396;
                      v619 = v399;
                      v620 = v402;
                      v621 = v405;
                      v622 = v408;
                      v623 = v411;
                      v624.i8[0] = v414;
                      v624.i8[1] = v417;
                      v624.i8[2] = v467;
                      v624.i8[3] = v464;
                      v624.i8[4] = v461;
                      v624.i8[5] = v458;
                      v624.i8[6] = v455;
                      v624.i8[7] = v452;
                      v625 = v449;
                      v626 = v446;
                      __s2 = v473;
                      v610 = v476;
                      v611 = v479;
                      v612 = v482;
                      v613 = v485;
                      v614 = v548;
                      v615 = v470;
                      v616 = v492;
                      v617 = v488;
                      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                        break;
                      __s1 = v546;
                      v619 = v543;
                      v620 = v540;
                      v621 = v538;
                      v622 = v535;
                      v623 = v532;
                      v624.i8[0] = v529;
                      v624.i8[1] = v526;
                      v624.i8[2] = v523;
                      v624.i8[3] = v520;
                      v624.i8[4] = v517;
                      v624.i8[5] = v514;
                      v624.i8[6] = v512;
                      v624.i8[7] = v509;
                      v625 = v390;
                      v626 = v393;
                      __s2 = v387;
                      v610 = v384;
                      v611 = v381;
                      v612 = v378;
                      v613 = v375;
                      v614 = v372;
                      v615.i8[0] = v369;
                      v615.i8[1] = v366;
                      v615.i8[2] = v363;
                      v615.i8[3] = v360;
                      v615.i8[4] = v357;
                      v615.i8[5] = v354;
                      v615.i8[6] = v351;
                      v615.i8[7] = v348;
                      v616 = v345;
                      v617 = v342;
                      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                      {
                        __s1 = v387;
                        v619 = v384;
                        v620 = v381;
                        v621 = v378;
                        v622 = v375;
                        v623 = v372;
                        v624.i8[0] = v369;
                        v624.i8[1] = v366;
                        v624.i8[2] = v363;
                        v624.i8[3] = v360;
                        v624.i8[4] = v357;
                        v624.i8[5] = v354;
                        v624.i8[6] = v351;
                        v624.i8[7] = v348;
                        v625 = v345;
                        v626 = v342;
                        __s2 = v546;
                        v610 = v543;
                        v611 = v540;
                        v612 = v538;
                        v613 = v535;
                        v614 = v532;
                        v615.i8[0] = v529;
                        v615.i8[1] = v526;
                        v615.i8[2] = v523;
                        v615.i8[3] = v520;
                        v615.i8[4] = v517;
                        v615.i8[5] = v514;
                        v615.i8[6] = v512;
                        v615.i8[7] = v509;
                        v616 = v390;
                        v617 = v393;
                        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                          break;
                        __s1 = v338;
                        v619 = v335;
                        v620 = v332;
                        v621 = v329;
                        v622 = v326;
                        v623 = v323;
                        v624.i8[0] = v320;
                        v624.i8[1] = v317;
                        v624.i8[2] = v314;
                        v624.i8[3] = v311;
                        v624.i8[4] = v308;
                        v624.i8[5] = v305;
                        v624.i8[6] = v302;
                        v624.i8[7] = v299;
                        v625 = v296;
                        v626 = v293;
                        __s2 = v290;
                        v610 = v287;
                        v611 = v284;
                        v612 = v281;
                        v613 = v278;
                        v614 = v275;
                        v615.i8[0] = v272;
                        v615.i8[1] = v269;
                        v615.i8[2] = v266;
                        v615.i8[3] = v263;
                        v615.i8[4] = v260;
                        v615.i8[5] = v257;
                        v615.i8[6] = v254;
                        v615.i8[7] = v251;
                        v616 = v248;
                        v617 = v245;
                        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                        {
                          __s1 = v290;
                          v619 = v287;
                          v620 = v284;
                          v621 = v281;
                          v622 = v278;
                          v623 = v275;
                          v624.i8[0] = v272;
                          v624.i8[1] = v269;
                          v624.i8[2] = v266;
                          v624.i8[3] = v263;
                          v624.i8[4] = v260;
                          v624.i8[5] = v257;
                          v624.i8[6] = v254;
                          v624.i8[7] = v251;
                          v625 = v248;
                          v626 = v245;
                          __s2 = v338;
                          v610 = v335;
                          v611 = v332;
                          v612 = v329;
                          v613 = v326;
                          v614 = v323;
                          v615.i8[0] = v320;
                          v615.i8[1] = v317;
                          v615.i8[2] = v314;
                          v615.i8[3] = v311;
                          v615.i8[4] = v308;
                          v615.i8[5] = v305;
                          v615.i8[6] = v302;
                          v615.i8[7] = v299;
                          v616 = v296;
                          v617 = v293;
                          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                            break;
                          if (v238 >= v235)
                          {
                            if (v235 < v238)
                              break;
                            v121 = (double)v229 / 1000.0;
                            v122 = (double)v232 / 1000.0;
                            if (v121 >= v122)
                            {
                              if (v122 < v121)
                                break;
                              if (v226 >= v223 && (v223 < v226 || v220 >= v217))
                                break;
                            }
                          }
                        }
                      }
                    }
                  }
                  if (!v339)
                    goto LABEL_216;
                  v608 = *((_BYTE *)v89 - 72);
                  v604 = *((_BYTE *)v89 - 71);
                  v600 = *((_BYTE *)v89 - 70);
                  v596 = *((_BYTE *)v89 - 69);
                  v588 = *((_BYTE *)v89 - 67);
                  v592 = *((_BYTE *)v89 - 68);
                  v581 = *((_BYTE *)v89 - 65);
                  v584 = *((_BYTE *)v89 - 66);
                  v575 = *((_BYTE *)v89 - 63);
                  v579 = *((_BYTE *)v89 - 64);
                  v568 = *((_BYTE *)v89 - 61);
                  v571 = *((_BYTE *)v89 - 62);
                  v564 = *((_BYTE *)v89 - 60);
                  v560 = *((_BYTE *)v89 - 59);
                  v556 = *((_BYTE *)v89 - 58);
                  v552 = *((_BYTE *)v89 - 57);
                  v546 = *((_BYTE *)v89 - 56);
                  v543 = *((_BYTE *)v89 - 55);
                  v540 = *((_BYTE *)v89 - 54);
                  v538 = *((_BYTE *)v89 - 53);
                  v535 = *((_BYTE *)v89 - 52);
                  v532 = *((_BYTE *)v89 - 51);
                  v529 = *((_BYTE *)v89 - 50);
                  v526 = *((_BYTE *)v89 - 49);
                  v523 = *((_BYTE *)v89 - 48);
                  v520 = *((_BYTE *)v89 - 47);
                  v517 = *((_BYTE *)v89 - 46);
                  v514 = *((_BYTE *)v89 - 45);
                  v512 = *((_BYTE *)v89 - 44);
                  v509 = *((_BYTE *)v89 - 43);
                  v506 = *(_OWORD *)((char *)v89 - 33);
                  v124 = *(_QWORD *)((char *)v89 - 17);
                  v125 = *((_BYTE *)v89 - 42);
                  v126 = *((_BYTE *)v89 - 41);
                  v127 = *((_BYTE *)v89 - 40);
                  v128 = *((_BYTE *)v89 - 39);
                  v129 = *((_BYTE *)v89 - 38);
                  v130 = *((_BYTE *)v89 - 37);
                  v131 = *((_BYTE *)v89 - 36);
                  v548 = *((_BYTE *)v89 - 35);
                  v502 = *((_BYTE *)v89 - 34);
                  v489 = *(_WORD *)((char *)v89 - 9);
                  v493 = *(_DWORD *)((char *)v89 - 6);
                  v132 = *v89;
                  memcpy(v89 - 9, v89 - 19, 0x50uLL);
                  v103 = v552;
                  v102 = v556;
                  v101 = v560;
                  v100 = v564;
                  v99 = v568;
                  v98 = v571;
                  v97 = v575;
                  v96 = v579;
                  v95 = v581;
                  *(v89 - 10) = v132;
                  v89 -= 10;
                  *((_BYTE *)v89 - 72) = v608;
                  *((_BYTE *)v89 - 71) = v604;
                  *((_BYTE *)v89 - 70) = v600;
                  *((_BYTE *)v89 - 69) = v596;
                  *((_BYTE *)v89 - 68) = v592;
                  *((_BYTE *)v89 - 67) = v588;
                  *((_BYTE *)v89 - 66) = v584;
                  *((_BYTE *)v89 - 65) = v581;
                  *((_BYTE *)v89 - 64) = v579;
                  *((_BYTE *)v89 - 63) = v575;
                  *((_BYTE *)v89 - 62) = v571;
                  *((_BYTE *)v89 - 61) = v568;
                  *((_BYTE *)v89 - 60) = v564;
                  *((_BYTE *)v89 - 59) = v560;
                  *((_BYTE *)v89 - 58) = v556;
                  *((_BYTE *)v89 - 57) = v552;
                  *((_BYTE *)v89 - 56) = v546;
                  *((_BYTE *)v89 - 55) = v543;
                  *((_BYTE *)v89 - 54) = v540;
                  *((_BYTE *)v89 - 53) = v538;
                  *((_BYTE *)v89 - 52) = v535;
                  *((_BYTE *)v89 - 51) = v532;
                  *((_BYTE *)v89 - 50) = v529;
                  *((_BYTE *)v89 - 49) = v526;
                  *((_BYTE *)v89 - 48) = v523;
                  *((_BYTE *)v89 - 47) = v520;
                  *((_BYTE *)v89 - 46) = v517;
                  *((_BYTE *)v89 - 45) = v514;
                  *((_BYTE *)v89 - 44) = v512;
                  *((_BYTE *)v89 - 43) = v509;
                  v390 = v125;
                  *((_BYTE *)v89 - 42) = v125;
                  v94 = v584;
                  v393 = v126;
                  *((_BYTE *)v89 - 41) = v126;
                  v93 = v588;
                  v473 = v127;
                  *((_BYTE *)v89 - 40) = v127;
                  v476 = v128;
                  *((_BYTE *)v89 - 39) = v128;
                  v91 = v596;
                  v479 = v129;
                  *((_BYTE *)v89 - 38) = v129;
                  v482 = v130;
                  *((_BYTE *)v89 - 37) = v130;
                  v92 = v592;
                  v485 = v131;
                  *((_BYTE *)v89 - 36) = v131;
                  *((_BYTE *)v89 - 35) = v548;
                  *((_BYTE *)v89 - 34) = v502;
                  *(_OWORD *)((char *)v89 - 33) = v506;
                  *(_QWORD *)((char *)v89 - 17) = v124;
                  *(_WORD *)((char *)v89 - 9) = v489;
                  *(_DWORD *)((char *)v89 - 6) = v493;
                  v492 = BYTE7(v506);
                  v488 = BYTE8(v506);
                  v134 = vext_s8(v133, *(int8x8_t *)&v506, 7uLL);
                  v87 = v498 + 1;
                  v134.i8[0] = v502;
                  v470 = v134;
                  v338 = BYTE9(v506);
                  v135 = v241;
                  if (v241 == v498 + 1)
                    goto LABEL_101;
                }
                v135 = v241;
LABEL_101:
                v11 = v135 + 1;
                v87 = v210;
                v89 = v209 + 10;
                v9 = v339;
              }
              while (v11 != v204);
              v11 = v204;
              v43 = v214;
              v10 = v206;
            }
          }
          if (v11 < v87)
            goto LABEL_208;
          v242 = v11;
          v212 = v43;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v10 = sub_24975DAF4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
          v137 = *((_QWORD *)v10 + 2);
          v136 = *((_QWORD *)v10 + 3);
          v138 = v137 + 1;
          v9 = v339;
          if (v137 >= v136 >> 1)
          {
            v187 = sub_24975DAF4((char *)(v136 > 1), v137 + 1, 1, v10);
            v9 = v339;
            v10 = v187;
          }
          *((_QWORD *)v10 + 2) = v138;
          v139 = v10 + 32;
          v140 = &v10[16 * v137 + 32];
          *(_QWORD *)v140 = v210;
          *((_QWORD *)v140 + 1) = v242;
          if (v137)
          {
            while (2)
            {
              v141 = v138 - 1;
              if (v138 >= 4)
              {
                v146 = &v139[16 * v138];
                v147 = *((_QWORD *)v146 - 8);
                v148 = *((_QWORD *)v146 - 7);
                v152 = __OFSUB__(v148, v147);
                v149 = v148 - v147;
                if (v152)
                  goto LABEL_193;
                v151 = *((_QWORD *)v146 - 6);
                v150 = *((_QWORD *)v146 - 5);
                v152 = __OFSUB__(v150, v151);
                v144 = v150 - v151;
                v145 = v152;
                if (v152)
                  goto LABEL_194;
                v153 = v138 - 2;
                v154 = &v139[16 * v138 - 32];
                v156 = *(_QWORD *)v154;
                v155 = *((_QWORD *)v154 + 1);
                v152 = __OFSUB__(v155, v156);
                v157 = v155 - v156;
                if (v152)
                  goto LABEL_195;
                v152 = __OFADD__(v144, v157);
                v158 = v144 + v157;
                if (v152)
                  goto LABEL_197;
                if (v158 >= v149)
                {
                  v176 = &v139[16 * v141];
                  v178 = *(_QWORD *)v176;
                  v177 = *((_QWORD *)v176 + 1);
                  v152 = __OFSUB__(v177, v178);
                  v179 = v177 - v178;
                  if (v152)
                    goto LABEL_203;
                  v169 = v144 < v179;
                }
                else
                {
LABEL_123:
                  if ((v145 & 1) != 0)
                    goto LABEL_196;
                  v153 = v138 - 2;
                  v159 = &v139[16 * v138 - 32];
                  v161 = *(_QWORD *)v159;
                  v160 = *((_QWORD *)v159 + 1);
                  v162 = __OFSUB__(v160, v161);
                  v163 = v160 - v161;
                  v164 = v162;
                  if (v162)
                    goto LABEL_198;
                  v165 = &v139[16 * v141];
                  v167 = *(_QWORD *)v165;
                  v166 = *((_QWORD *)v165 + 1);
                  v152 = __OFSUB__(v166, v167);
                  v168 = v166 - v167;
                  if (v152)
                    goto LABEL_200;
                  if (__OFADD__(v163, v168))
                    goto LABEL_202;
                  if (v163 + v168 < v144)
                    goto LABEL_135;
                  v169 = v144 < v168;
                }
                if (v169)
                  v141 = v153;
              }
              else
              {
                if (v138 == 3)
                {
                  v143 = *((_QWORD *)v10 + 4);
                  v142 = *((_QWORD *)v10 + 5);
                  v152 = __OFSUB__(v142, v143);
                  v144 = v142 - v143;
                  v145 = v152;
                  goto LABEL_123;
                }
                v170 = *((_QWORD *)v10 + 4);
                v171 = *((_QWORD *)v10 + 5);
                v152 = __OFSUB__(v171, v170);
                v163 = v171 - v170;
                v164 = v152;
LABEL_135:
                if ((v164 & 1) != 0)
                  goto LABEL_199;
                v172 = &v139[16 * v141];
                v174 = *(_QWORD *)v172;
                v173 = *((_QWORD *)v172 + 1);
                v152 = __OFSUB__(v173, v174);
                v175 = v173 - v174;
                if (v152)
                  goto LABEL_201;
                if (v175 < v163)
                  goto LABEL_152;
              }
              v180 = v141 - 1;
              if (v141 - 1 >= v138)
              {
                __break(1u);
LABEL_190:
                __break(1u);
LABEL_191:
                __break(1u);
LABEL_192:
                __break(1u);
LABEL_193:
                __break(1u);
LABEL_194:
                __break(1u);
LABEL_195:
                __break(1u);
LABEL_196:
                __break(1u);
LABEL_197:
                __break(1u);
LABEL_198:
                __break(1u);
LABEL_199:
                __break(1u);
LABEL_200:
                __break(1u);
LABEL_201:
                __break(1u);
LABEL_202:
                __break(1u);
LABEL_203:
                __break(1u);
LABEL_204:
                __break(1u);
LABEL_205:
                __break(1u);
LABEL_206:
                __break(1u);
LABEL_207:
                __break(1u);
LABEL_208:
                __break(1u);
LABEL_209:
                __break(1u);
LABEL_210:
                __break(1u);
                goto LABEL_211;
              }
              if (!v9)
                goto LABEL_217;
              v181 = v10;
              v182 = &v139[16 * v180];
              v183 = *(_QWORD *)v182;
              v184 = &v139[16 * v141];
              v185 = *((_QWORD *)v184 + 1);
              sub_249801AE8((char *)(v9 + 80 * *(_QWORD *)v182), (char *)(v9 + 80 * *(_QWORD *)v184), v9 + 80 * v185, v211);
              if (v212)
              {
LABEL_186:
                swift_bridgeObjectRelease();
                if (v205 >= -1)
                {
                  *(_QWORD *)(v200 + 16) = 0;
                  return (char *)swift_bridgeObjectRelease();
                }
LABEL_211:
                __break(1u);
LABEL_212:
                __break(1u);
                goto LABEL_213;
              }
              if (v185 < v183)
                goto LABEL_190;
              if (v141 > *((_QWORD *)v181 + 2))
                goto LABEL_191;
              *(_QWORD *)v182 = v183;
              *(_QWORD *)&v139[16 * v180 + 8] = v185;
              v186 = *((_QWORD *)v181 + 2);
              if (v141 >= v186)
                goto LABEL_192;
              v10 = v181;
              v212 = 0;
              v138 = v186 - 1;
              memmove(&v139[16 * v141], v184 + 16, 16 * (v186 - 1 - v141));
              *((_QWORD *)v181 + 2) = v186 - 1;
              v9 = v339;
              if (v186 <= 2)
                goto LABEL_152;
              continue;
            }
          }
          v138 = 1;
LABEL_152:
          v3 = v205;
          v8 = v242;
          if (v242 >= v205)
          {
LABEL_173:
            if (v138 >= 2)
            {
              v188 = *v198;
              do
              {
                v189 = v138 - 2;
                if (v138 < 2)
                  goto LABEL_204;
                if (!v188)
                  goto LABEL_219;
                v190 = v10;
                v191 = v10 + 32;
                v192 = *(_QWORD *)&v10[16 * v189 + 32];
                v193 = *(_QWORD *)&v10[16 * v138 + 24];
                sub_249801AE8((char *)(v188 + 80 * v192), (char *)(v188 + 80 * *(_QWORD *)&v191[16 * v138 - 16]), v188 + 80 * v193, v211);
                if (v212)
                  goto LABEL_186;
                if (v193 < v192)
                  goto LABEL_205;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v190 = sub_24975DBE8();
                if (v189 >= *((_QWORD *)v190 + 2))
                  goto LABEL_206;
                v194 = &v190[16 * v189 + 32];
                *(_QWORD *)v194 = v192;
                *((_QWORD *)v194 + 1) = v193;
                v195 = *((_QWORD *)v190 + 2);
                if (v138 > v195)
                  goto LABEL_207;
                v10 = v190;
                memmove(&v190[16 * v138 + 16], &v190[16 * v138 + 32], 16 * (v195 - v138));
                *((_QWORD *)v190 + 2) = v195 - 1;
                v138 = v195 - 1;
              }
              while (v195 > 2);
            }
            swift_bridgeObjectRelease();
            if (v205 >= -1)
            {
              *(_QWORD *)(v200 + 16) = 0;
              return (char *)swift_bridgeObjectRelease();
            }
            goto LABEL_215;
          }
          goto LABEL_4;
        }
      }
    }
    if (v218 < v215)
    {
      v45 = v210 + 2;
      if (v210 + 2 >= v205)
        goto LABEL_168;
      v425 = 1;
LABEL_164:
      v44 = v239;
      goto LABEL_12;
    }
    if (v215 >= v218)
    {
      v45 = v210 + 2;
      if (v207 < v202)
      {
        if (v45 >= v205)
        {
          v43 = v212;
          v3 = v205;
          v10 = v206;
          v9 = v339;
          goto LABEL_168;
        }
        v425 = 1;
        goto LABEL_163;
      }
      if (v45 < v205)
      {
LABEL_159:
        v425 = 0;
LABEL_163:
        v43 = v212;
        v9 = v339;
        goto LABEL_164;
      }
    }
    else
    {
      v45 = v210 + 2;
      if (v210 + 2 < v205)
        goto LABEL_159;
    }
    v11 = v45;
    v43 = v212;
    v3 = v205;
    v10 = v206;
    v9 = v339;
    goto LABEL_69;
  }
  if (v3 < 0)
    goto LABEL_210;
  if (v3)
    return sub_2497FD644(0, (char *)v3, (char *)1, a1);
  return result;
}

void sub_2497F6C6C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  double v14;
  double *v15;
  double v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  char v31;
  char v32;
  char v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  unsigned __int8 *v45;
  uint64_t v46;
  double v47;
  double *v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  double *v73;
  uint64_t v74;
  int8x8_t v75;
  unsigned __int8 v76;
  unsigned __int8 v77;
  unsigned __int8 v78;
  double *v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int8x16_t v84;
  int8x16_t v85;
  uint64x2_t v86;
  int8x16_t v87;
  int64x2_t v88;
  unint64_t v89;
  uint64x2_t v90;
  int8x16_t v91;
  int64x2_t v92;
  unint64_t v93;
  uint64x2_t v94;
  int8x16_t v95;
  int64x2_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  int8x16_t v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  unsigned __int8 v107;
  char v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  char *v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  BOOL v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  BOOL v138;
  uint64_t v139;
  char v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  BOOL v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  unsigned __int8 *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  double *v185;
  char *v186;
  char v187;
  char v188;
  char v189;
  char v190;
  unsigned __int8 v191;
  char v192;
  unsigned __int8 v193;
  char v194;
  unsigned __int8 v195;
  char v196;
  unsigned __int8 v197;
  unsigned __int8 v198;
  unsigned __int8 v199;
  unsigned __int8 v200;
  unsigned __int8 v201;
  unsigned __int8 v202;
  uint64_t v203;
  unsigned __int8 v204;
  uint64_t v205;
  char v206;
  char v207;
  __int16 v208;
  __int16 v209;
  uint64_t v210;
  char v211;
  char v212;
  char v213;
  char v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  char v218;
  char v219;
  char v220;
  char v221;
  char v222;
  char v223;
  uint64_t v224;
  char v225;
  uint64_t v226;
  char v227;
  uint64_t v228;
  char v229;
  int v230;
  uint64_t v231;
  char v232;
  int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unsigned int v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  __int16 v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  __int16 v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t __src;
  unint64_t __srca;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  unsigned __int8 v304;
  uint64_t v305;
  unsigned __int8 v306;
  uint64_t v307;
  unsigned __int8 v308;
  uint64_t v309;
  unsigned __int8 v310;
  uint64_t v311;
  unsigned __int8 v312;
  uint64_t v313;
  unsigned __int8 v314;
  uint64_t v315;
  unsigned __int8 v316;
  uint64_t v317;
  unsigned __int8 v318;
  uint64_t v319;
  unsigned __int8 v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  unsigned __int8 v324;
  uint64_t v325;
  unsigned __int8 v326;
  uint64_t v327;
  unsigned __int8 v328;
  uint64_t v329;
  unsigned __int8 v330;
  uint64_t v331;
  unsigned __int8 v332;
  char v333;
  uint64_t v334;
  unsigned __int8 v335;
  char v336;
  uint64_t v337;
  unsigned __int8 v338;
  char v339;
  uint64_t v340;
  unsigned __int8 v341;
  char v342;
  uint64_t v343;
  unsigned __int8 v344;
  char v345;
  uint64_t v346;
  unsigned __int8 v347;
  char v348;
  uint64_t v349;
  unsigned __int8 v350;
  char v351;
  uint64_t v352;
  unsigned __int8 v353;
  char v354;
  uint64_t v355;
  unsigned __int8 v356;
  char v357;
  uint64_t v358;
  int v359;
  char v360;
  uint64_t v361;
  uint64_t v362;
  char v363;
  uint64_t v364;
  uint64_t v365;
  char v366;
  uint64_t v367;
  uint64_t v368;
  char v369;
  uint64_t v370;
  uint64_t v371;
  char v372;
  uint64_t v373;
  uint64_t v374;
  char v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  char v393;
  uint64_t v394;
  uint64_t v395;
  char v396;
  uint64_t v397;
  uint64_t v398;
  char v399;
  uint64_t v400;
  uint64_t v401;
  char v402;
  uint64_t v403;
  uint64_t v404;
  char v405;
  uint64_t v406;
  uint64_t v407;
  char v408;
  uint64_t v409;
  uint64_t v410;
  char v411;
  uint64_t v412;
  uint64_t v413;
  char v414;
  uint64_t v415;
  uint64_t v416;
  char v417;
  uint64_t v418;
  uint64_t v419;
  char v420;
  uint64_t v421;
  uint64_t v422;
  char v423;
  uint64_t v424;
  uint64_t v425;
  char v426;
  uint64_t v427;
  uint64_t v428;
  char v429;
  uint64_t v430;
  uint64_t v431;
  char v432;
  int v433;
  uint64_t v434;
  char v435;
  int v436;
  uint64_t v437;
  char v438;
  uint64_t v439;
  uint64_t v440;
  __int16 v441;
  uint64_t v442;
  __int16 v443;
  uint64_t v444;
  uint64_t v445;
  int v446;
  uint64_t v447;
  uint64_t v448;
  unsigned __int8 v449;
  uint64_t v450;
  unsigned __int8 v451;
  uint64_t v452;
  unsigned __int8 v453;
  uint64_t v454;
  uint64_t v455;
  char v456;
  uint64_t v457;
  unsigned __int8 v458;
  uint64_t v459;
  char v460;
  uint64_t v461;
  char v462;
  uint64_t v463;
  char v464;
  uint64_t v465;
  char v466;
  uint64_t v467;
  char v468;
  uint64_t v469;
  char v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  unsigned __int8 v523;
  uint64_t v524;
  uint64_t v525;
  unsigned __int8 v526;
  uint64_t v527;
  uint64_t v528;
  unsigned __int8 v529;
  uint64_t v530;
  int v531;
  uint64_t v532;
  unsigned __int8 v533;
  uint64_t v534;
  __int128 v535;
  uint64_t v536;
  unsigned __int8 v537;
  uint64_t v538;
  __int8 v539;
  uint64_t v540;
  unsigned __int8 v541;
  uint64_t v542;
  int v543;
  uint64_t v544;
  unsigned __int8 v545;
  uint64_t v546;
  __int16 v547;
  uint64_t v548;
  unsigned __int8 v549;
  uint64_t v550;
  uint64_t v551;
  unsigned __int8 v552;
  char v553;
  uint64_t v554;
  unsigned __int8 v555;
  char v556;
  uint64_t v557;
  unsigned __int8 v558;
  char v559;
  uint64_t v560;
  unsigned __int8 v561;
  char v562;
  uint64_t v563;
  unsigned __int8 v564;
  char v565;
  uint64_t v566;
  unsigned __int8 v567;
  char v568;
  uint64_t v569;
  unsigned __int8 v570;
  char v571;
  uint64_t v572;
  unsigned __int8 v573;
  __int128 v574;
  char v575;
  uint64_t v576;
  uint64_t v577;
  __int128 v578;
  char v579;
  unsigned int v580;
  uint64_t v581;
  uint64_t v582;
  __int128 v583;
  char v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  __int128 v588;
  __int128 v589;
  unsigned __int8 __s2;
  char v591;
  char v592;
  char v593;
  char v594;
  char v595;
  char v596;
  char v597;
  char v598;
  char v599;
  char v600;
  char v601;
  char v602;
  char v603;
  char v604;
  char v605;
  char v606;
  char v607;
  char v608;
  char v609;
  char v610;
  char v611;
  char v612;
  char v613;
  char v614;
  char v615;
  char v616;
  char v617;
  char v618;
  char v619;
  char v620;
  char v621;
  char v622;
  char v623;
  char v624;
  char v625;
  char v626;
  char v627;
  char v628;
  char v629;
  char v630;
  char v631;
  char v632;
  char v633;
  char v634;
  char v635;
  char v636;
  char v637;
  char v638;
  char v639;
  char v640;
  char v641;
  char v642;
  char v643;
  char v644;
  char v645;
  char v646;
  char v647;
  char v648;
  char v649;
  char v650;
  char v651;
  char v652;
  char v653;
  char v654;
  __int16 v655;
  __int16 v656;
  __int128 __s1;
  char v658;
  char v659;
  char v660;
  char v661;
  char v662;
  char v663;
  char v664;
  char v665;
  char v666;
  char v667;
  char v668;
  char v669;
  char v670;
  char v671;
  char v672;
  char v673;
  unsigned __int8 v674;
  char v675;
  uint64_t v676;
  unsigned __int8 v677;
  unsigned __int8 v678;
  unsigned __int8 v679;
  char v680;
  char v681;
  char v682;
  char v683;
  char v684;
  char v685;
  char v686;
  char v687;
  char v688;
  char v689;
  char v690;
  char v691;
  char v692;
  char v693;
  char v694;
  char v695;
  char v696;
  char v697;
  char v698;
  char v699;
  __int16 v700;
  __int16 v701;
  int8x16_t v702;
  char v703;
  char v704;
  char v705;
  char v706;
  char v707;
  char v708;
  char v709;
  char v710;
  char v711;
  char v712;
  char v713;
  char v714;
  char v715;
  char v716;
  char v717;
  char v718;
  char v719;
  __int16 v720;
  _BYTE v721[34];
  __int16 v722;
  __int128 v723;
  char v724;
  char v725;
  char v726;
  char v727;
  char v728;
  char v729;
  char v730;
  char v731;
  char v732;
  char v733;
  char v734;
  char v735;
  char v736;
  char v737;
  char v738;
  char v739;
  char v740;
  __int16 v741;
  _BYTE v742[34];
  __int16 v743;
  _BYTE v744[34];
  __int16 v745;
  _BYTE v746[34];
  __int16 v747;
  _BYTE v748[34];
  __int16 v749;
  _BYTE v750[34];
  __int16 v751;
  _BYTE v752[34];
  __int16 v753;
  _BYTE v754[34];
  __int16 v755;
  uint64_t v756;

  v2 = v1;
  v756 = *MEMORY[0x24BDAC8D0];
  v4 = a1[1];
  v5 = sub_249837534();
  if (v5 < v4)
  {
    v6 = v5;
    sub_24974CFE8(v4 / 2);
    v173 = v7;
    v186 = v8;
    v181 = v4;
    v171 = a1;
    if (v4 <= 0)
      goto LABEL_170;
    v172 = v6;
    v9 = 0;
    v298 = *a1;
    v169 = *a1 + 72;
    v170 = *a1 + 36;
    v10 = (char *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v183 = v10;
      v11 = v9 + 1;
      v184 = v9;
      if (v9 + 1 >= v4)
      {
        v17 = v9 + 1;
LABEL_9:
        v10 = v183;
        v12 = v298;
        goto LABEL_86;
      }
      v12 = v298;
      v13 = (double *)(v298 + 80 * v11);
      v14 = v13[9];
      v15 = (double *)(v298 + 80 * v9);
      v16 = v15[9];
      if (v16 < v14)
      {
        v17 = v9 + 2;
        if (v9 + 2 >= v4)
        {
          v10 = v183;
          goto LABEL_79;
        }
        v18 = 1;
        goto LABEL_44;
      }
      if (v14 < v16)
      {
        v17 = v9 + 2;
        if (v9 + 2 >= v4)
          goto LABEL_75;
        v18 = 0;
        goto LABEL_44;
      }
      v522 = *(unsigned __int8 *)v13;
      v519 = *((unsigned __int8 *)v13 + 1);
      v516 = *((unsigned __int8 *)v13 + 2);
      v19 = *((unsigned __int8 *)v13 + 3);
      v20 = *((unsigned __int8 *)v13 + 4);
      v21 = *((unsigned __int8 *)v13 + 5);
      v22 = *((unsigned __int8 *)v13 + 6);
      v343 = *((unsigned __int8 *)v13 + 7);
      v340 = *((unsigned __int8 *)v13 + 8);
      v337 = *((unsigned __int8 *)v13 + 9);
      v513 = *((unsigned __int8 *)v13 + 10);
      v510 = *((unsigned __int8 *)v13 + 11);
      v334 = *((unsigned __int8 *)v13 + 12);
      v331 = *((unsigned __int8 *)v13 + 13);
      v329 = *((unsigned __int8 *)v13 + 14);
      v327 = *((unsigned __int8 *)v13 + 15);
      v325 = *((unsigned __int8 *)v13 + 16);
      v323 = *((unsigned __int8 *)v13 + 17);
      v321 = *((unsigned __int8 *)v13 + 18);
      v319 = *((unsigned __int8 *)v13 + 19);
      v317 = *((unsigned __int8 *)v13 + 20);
      v315 = *((unsigned __int8 *)v13 + 21);
      v313 = *((unsigned __int8 *)v13 + 22);
      v311 = *((unsigned __int8 *)v13 + 23);
      v309 = *((unsigned __int8 *)v13 + 24);
      v307 = *((unsigned __int8 *)v13 + 25);
      v305 = *((unsigned __int8 *)v13 + 26);
      v303 = *((unsigned __int8 *)v13 + 27);
      v301 = *((unsigned __int8 *)v13 + 28);
      __src = *((unsigned __int8 *)v13 + 29);
      v295 = *((unsigned __int8 *)v13 + 30);
      v290 = *((unsigned __int8 *)v13 + 31);
      v286 = *((unsigned __int8 *)v13 + 33);
      v284 = *((unsigned __int8 *)v13 + 34);
      v282 = *((unsigned __int8 *)v13 + 35);
      v280 = *((unsigned __int8 *)v13 + 36);
      v278 = *((unsigned __int8 *)v13 + 37);
      v275 = *((unsigned __int8 *)v13 + 38);
      v274 = *((unsigned __int8 *)v13 + 39);
      v273 = *((unsigned __int8 *)v13 + 40);
      v272 = *((unsigned __int8 *)v13 + 41);
      v271 = *((unsigned __int8 *)v13 + 42);
      v270 = *((unsigned __int8 *)v13 + 43);
      v269 = *((unsigned __int8 *)v13 + 44);
      v267 = *((unsigned __int8 *)v13 + 45);
      v266 = *((unsigned __int8 *)v13 + 46);
      v265 = *((unsigned __int8 *)v13 + 47);
      v263 = *((unsigned __int8 *)v13 + 48);
      v262 = *((unsigned __int8 *)v13 + 49);
      v261 = *((unsigned __int8 *)v13 + 50);
      v260 = *((unsigned __int8 *)v13 + 51);
      v259 = *((unsigned __int8 *)v13 + 52);
      v258 = *((unsigned __int8 *)v13 + 53);
      v257 = *((unsigned __int8 *)v13 + 54);
      v256 = *((unsigned __int8 *)v13 + 55);
      v255 = *((unsigned __int8 *)v13 + 56);
      v254 = *((unsigned __int8 *)v13 + 57);
      v253 = *((unsigned __int8 *)v13 + 58);
      v252 = *((unsigned __int8 *)v13 + 59);
      v251 = *((unsigned __int8 *)v13 + 60);
      v250 = *((unsigned __int8 *)v13 + 61);
      v249 = *((unsigned __int8 *)v13 + 62);
      v248 = *((unsigned __int8 *)v13 + 63);
      v215 = *((unsigned __int8 *)v13 + 64);
      v233 = *((unsigned __int16 *)v13 + 33);
      v230 = *((unsigned __int16 *)v13 + 34);
      v507 = *(unsigned __int8 *)v15;
      v504 = *((unsigned __int8 *)v15 + 1);
      v501 = *((unsigned __int8 *)v15 + 2);
      v498 = *((unsigned __int8 *)v15 + 3);
      v495 = *((unsigned __int8 *)v15 + 4);
      v492 = *((unsigned __int8 *)v15 + 5);
      v489 = *((unsigned __int8 *)v15 + 6);
      v486 = *((unsigned __int8 *)v15 + 7);
      v246 = *((unsigned __int8 *)v15 + 8);
      v245 = *((unsigned __int8 *)v15 + 9);
      v244 = *((unsigned __int8 *)v15 + 10);
      v243 = *((unsigned __int8 *)v15 + 11);
      v242 = *((unsigned __int8 *)v15 + 12);
      v241 = *((unsigned __int8 *)v15 + 13);
      v239 = *((unsigned __int8 *)v15 + 14);
      v237 = *((unsigned __int8 *)v15 + 15);
      v235 = *((unsigned __int8 *)v15 + 16);
      v247 = *((unsigned __int8 *)v15 + 17);
      v346 = *((unsigned __int8 *)v15 + 18);
      v349 = *((unsigned __int8 *)v15 + 19);
      v352 = *((unsigned __int8 *)v15 + 20);
      v355 = *((unsigned __int8 *)v15 + 21);
      v358 = *((unsigned __int8 *)v15 + 22);
      v361 = *((unsigned __int8 *)v15 + 23);
      v364 = *((unsigned __int8 *)v15 + 24);
      v367 = *((unsigned __int8 *)v15 + 25);
      v370 = *((unsigned __int8 *)v15 + 26);
      v373 = *((unsigned __int8 *)v15 + 27);
      v376 = *((unsigned __int8 *)v15 + 28);
      v379 = *((unsigned __int8 *)v15 + 29);
      v382 = *((unsigned __int8 *)v15 + 30);
      v385 = *((unsigned __int8 *)v15 + 31);
      v576 = *((unsigned __int8 *)v15 + 32);
      v572 = *((unsigned __int8 *)v15 + 33);
      v569 = *((unsigned __int8 *)v15 + 34);
      v566 = *((unsigned __int8 *)v15 + 35);
      v563 = *((unsigned __int8 *)v15 + 36);
      v560 = *((unsigned __int8 *)v15 + 37);
      v557 = *((unsigned __int8 *)v15 + 38);
      v554 = *((unsigned __int8 *)v15 + 39);
      v551 = *((unsigned __int8 *)v15 + 40);
      v548 = *((unsigned __int8 *)v15 + 41);
      v544 = *((unsigned __int8 *)v15 + 42);
      v540 = *((unsigned __int8 *)v15 + 43);
      v536 = *((unsigned __int8 *)v15 + 44);
      v532 = *((unsigned __int8 *)v15 + 45);
      v528 = *((unsigned __int8 *)v15 + 46);
      v525 = *((unsigned __int8 *)v15 + 47);
      v388 = *((unsigned __int8 *)v15 + 48);
      v391 = *((unsigned __int8 *)v15 + 49);
      v394 = *((unsigned __int8 *)v15 + 50);
      v397 = *((unsigned __int8 *)v15 + 51);
      v400 = *((unsigned __int8 *)v15 + 52);
      v403 = *((unsigned __int8 *)v15 + 53);
      v406 = *((unsigned __int8 *)v15 + 54);
      v409 = *((unsigned __int8 *)v15 + 55);
      v412 = *((unsigned __int8 *)v15 + 56);
      v415 = *((unsigned __int8 *)v15 + 57);
      v418 = *((unsigned __int8 *)v15 + 58);
      v421 = *((unsigned __int8 *)v15 + 59);
      v424 = *((unsigned __int8 *)v15 + 60);
      v427 = *((unsigned __int8 *)v15 + 61);
      v430 = *((unsigned __int8 *)v15 + 62);
      v439 = *((unsigned __int8 *)v15 + 63);
      v217 = *((unsigned __int8 *)v15 + 64);
      v436 = *((unsigned __int16 *)v15 + 33);
      v433 = *((unsigned __int16 *)v15 + 34);
      LOBYTE(__s1) = *((_BYTE *)v13 + 32);
      v288 = __s1;
      BYTE1(__s1) = v286;
      BYTE2(__s1) = v284;
      BYTE3(__s1) = v282;
      BYTE4(__s1) = v280;
      BYTE5(__s1) = v278;
      BYTE6(__s1) = v275;
      BYTE7(__s1) = v274;
      BYTE8(__s1) = v273;
      BYTE9(__s1) = v272;
      BYTE10(__s1) = v271;
      BYTE11(__s1) = v270;
      BYTE12(__s1) = v269;
      BYTE13(__s1) = v267;
      BYTE14(__s1) = v266;
      HIBYTE(__s1) = v265;
      __s2 = v522;
      v591 = v519;
      v592 = v516;
      v593 = v19;
      v594 = v20;
      v595 = v21;
      v596 = v22;
      v597 = v343;
      v598 = v340;
      v599 = v337;
      v600 = v513;
      v601 = v510;
      v602 = v334;
      v603 = v331;
      v604 = v329;
      v605 = v327;
      v196 = v19;
      v194 = v20;
      v192 = v21;
      v190 = v22;
      v473 = v22;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X8 }
      v178 = v2;
      LOBYTE(__s1) = v576;
      BYTE1(__s1) = v572;
      BYTE2(__s1) = v569;
      BYTE3(__s1) = v566;
      BYTE4(__s1) = v563;
      BYTE5(__s1) = v560;
      BYTE6(__s1) = v557;
      BYTE7(__s1) = v554;
      BYTE8(__s1) = v551;
      BYTE9(__s1) = v548;
      BYTE10(__s1) = v544;
      BYTE11(__s1) = v540;
      BYTE12(__s1) = v536;
      BYTE13(__s1) = v532;
      BYTE14(__s1) = v528;
      HIBYTE(__s1) = v525;
      __s2 = v507;
      v591 = v504;
      v592 = v501;
      v593 = v498;
      v594 = v495;
      v595 = v492;
      v596 = v489;
      v597 = v486;
      v598 = v246;
      v599 = v245;
      v600 = v244;
      v601 = v243;
      v602 = v242;
      v603 = v241;
      v604 = v239;
      v605 = v237;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X8 }
      LOBYTE(__s1) = v522;
      BYTE1(__s1) = v519;
      BYTE2(__s1) = v516;
      BYTE3(__s1) = v19;
      BYTE4(__s1) = v20;
      BYTE5(__s1) = v21;
      BYTE6(__s1) = v22;
      BYTE7(__s1) = v343;
      BYTE8(__s1) = v340;
      BYTE9(__s1) = v337;
      BYTE10(__s1) = v513;
      BYTE11(__s1) = v510;
      BYTE12(__s1) = v334;
      BYTE13(__s1) = v331;
      BYTE14(__s1) = v329;
      HIBYTE(__s1) = v327;
      __s2 = v507;
      v591 = v504;
      v592 = v501;
      v593 = v498;
      v594 = v495;
      v595 = v492;
      v596 = v489;
      v597 = v486;
      v598 = v246;
      v599 = v245;
      v600 = v244;
      v601 = v243;
      v602 = v242;
      v603 = v241;
      v604 = v239;
      v605 = v237;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        v23 = v507 | (v504 << 8) | (v501 << 16) | (v498 << 24) | (v495 << 32) | (v492 << 40) | (v489 << 48) | (v486 << 56);
        v24 = v522 | (v519 << 8) | (v516 << 16) | (v19 << 24) | (v20 << 32) | (v21 << 40) | (v473 << 48) | (v343 << 56);
        v25 = v246 | (v245 << 8) | (v244 << 16) | (v243 << 24) | (v242 << 32) | (v241 << 40) | (v239 << 48) | (v237 << 56);
        v26 = v340 | (v337 << 8) | (v513 << 16) | (v510 << 24) | (v334 << 32) | (v331 << 40) | (v329 << 48) | (v327 << 56);
        v27 = v235 | (v247 << 8);
        v28 = v364 | (v367 << 8);
        v29 = v325 | (v323 << 8);
        v585 = v309 | (v307 << 8);
        v30 = v217 | (v436 << 16);
        v580 = v215 | (v233 << 16);
        if (static UniversalControlUUID.compare(lhs:rhs:)(v23, v25, v24, v26) == -1
          || ((sub_249772148(v24, v26, v23, v25), v31 == 2)
           && (sub_249772148(v29 | (v321 << 16) | (v319 << 24) | (v317 << 32) | (v315 << 40) | (v313 << 48) | (v311 << 56), v585 | (v305 << 16) | (v303 << 24) | (v301 << 32) | (__src << 40) | (v295 << 48) | (v290 << 56), v27 | (v346 << 16) | (v349 << 24) | (v352 << 32) | (v355 << 40) | (v358 << 48) | (v361 << 56), v28 | (v370 << 16) | (v373 << 24) | (v376 << 32) | (v379 << 40) | (v382 << 48) | (v385 << 56)), v31 == 2)|| (v31 & 1) == 0)&& (((sub_249772148(v23, v25, v24, v26), v32 != 2)|| (sub_249772148(v27 | (v346 << 16) | (v349 << 24) | (v352 << 32) | (v355 << 40) | (v358 << 48) | (v361 << 56), v28 | (v370 << 16) | (v373 << 24) | (v376 << 32) | (v379 << 40) | (v382 << 48) | (v385 << 56), v29 | (v321 << 16) | (v319 << 24) | (v317 << 32) | (v315 << 40) | (v313 << 48) | (v311 << 56), v585 | (v305 << 16) | (v303 << 24) | (v301 << 32) | (__src << 40) | (v295 << 48) | (v290 << 56)), v32 != 2))&& (v32 & 1) != 0|| (sub_24978B990(v580, v30) & 1) == 0))
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v23, v25, v24, v26) == -1)
            goto LABEL_41;
          if (static UniversalControlUUID.compare(lhs:rhs:)(v24, v26, v23, v25) != -1)
          {
            v33 = sub_24978B8C8(v23, v25, v27 | (v346 << 16) | (v349 << 24) | (v352 << 32) | (v355 << 40) | (v358 << 48) | (v361 << 56), v28 | (v370 << 16) | (v373 << 24) | (v376 << 32) | (v379 << 40) | (v382 << 48) | (v385 << 56), v24, v26, v29 | (v321 << 16) | (v319 << 24) | (v317 << 32) | (v315 << 40) | (v313 << 48) | (v311 << 56), v585 | (v305 << 16) | (v303 << 24) | (v301 << 32) | (__src << 40) | (v295 << 48) | (v290 << 56));
            if (v33 != 2 || (v33 = sub_24978B990(v30, v580), v33 != 2))
            {
              if ((v33 & 1) != 0)
                goto LABEL_41;
            }
          }
          v34 = dword_24983AE80[(char)v215];
          v35 = dword_24983AE80[(char)v217];
          v36 = v288 | (v286 << 8) | (v284 << 16) | (v282 << 24) | (v280 << 32) | (v278 << 40) | (v275 << 48) | (v274 << 56);
          v37 = v273 | (v272 << 8) | (v271 << 16) | (v270 << 24) | (v269 << 32) | (v267 << 40) | (v266 << 48) | (v265 << 56);
          v38 = v576 | (v572 << 8) | (v569 << 16) | (v566 << 24) | (v563 << 32) | (v560 << 40) | (v557 << 48) | (v554 << 56);
          v39 = v551 | (v548 << 8) | (v544 << 16) | (v540 << 24) | (v536 << 32) | (v532 << 40) | (v528 << 48) | (v525 << 56);
          v40 = sub_24978B870(v36, v37, v38, v39);
          v581 = v263 | (v262 << 8);
          v586 = v255 | (v254 << 8);
          v41 = v388 | (v391 << 8);
          v42 = v412 | (v415 << 8);
          v43 = v34 | (v230 << 16);
          v44 = v35 | (v433 << 16);
          if (v40 == 2)
          {
            v40 = sub_24978B8C8(v36, v37, v581 | (v261 << 16) | (v260 << 24) | (v259 << 32) | (v258 << 40) | (v257 << 48) | (v256 << 56), v586 | (v253 << 16) | (v252 << 24) | (v251 << 32) | (v250 << 40) | (v249 << 48) | (v248 << 56), v38, v39, v41 | (v394 << 16) | (v397 << 24) | (v400 << 32) | (v403 << 40) | (v406 << 48) | (v409 << 56), v42 | (v418 << 16) | (v421 << 24) | (v424 << 32) | (v427 << 40) | (v430 << 48) | (v439 << 56));
            if (v40 == 2)
            {
              v40 = sub_24978B990(v43, v44);
              if (v40 == 2)
                break;
            }
          }
          if ((v40 & 1) == 0)
            break;
        }
      }
      v9 = v184;
      v17 = v184 + 2;
      v4 = v181;
      v2 = v178;
      if (v184 + 2 >= v181)
      {
        v10 = v183;
        v12 = v298;
        goto LABEL_79;
      }
      v18 = 1;
LABEL_43:
      v12 = v298;
LABEL_44:
      v45 = (unsigned __int8 *)(v170 + 80 * v17);
      v174 = v18;
      do
      {
        v46 = v17;
        v47 = *(double *)(v45 + 36);
        v48 = (double *)(v12 + 80 * v11);
        v49 = v48[9];
        if (v49 >= v47)
        {
          if (v47 < v49)
            goto LABEL_69;
          v176 = v17;
          v179 = v2;
          v514 = *(unsigned __int8 *)v48;
          v238 = *((unsigned __int8 *)v48 + 1);
          v236 = *((unsigned __int8 *)v48 + 2);
          v234 = *((unsigned __int8 *)v48 + 3);
          v289 = *((unsigned __int8 *)v48 + 4);
          v231 = *((unsigned __int8 *)v48 + 5);
          v587 = *((unsigned __int8 *)v48 + 6);
          v582 = *((unsigned __int8 *)v48 + 7);
          v577 = *((unsigned __int8 *)v48 + 8);
          v511 = *((unsigned __int8 *)v48 + 9);
          v508 = *((unsigned __int8 *)v48 + 10);
          v487 = *((unsigned __int8 *)v48 + 11);
          v520 = *((unsigned __int8 *)v48 + 12);
          v484 = *((unsigned __int8 *)v48 + 13);
          __srca = *((unsigned __int8 *)v48 + 14);
          v228 = *((unsigned __int8 *)v48 + 15);
          v285 = *((unsigned __int8 *)v48 + 16);
          v205 = *((unsigned __int8 *)v48 + 17);
          v401 = *((unsigned __int8 *)v48 + 18);
          v398 = *((unsigned __int8 *)v48 + 19);
          v395 = *((unsigned __int8 *)v48 + 20);
          v392 = *((unsigned __int8 *)v48 + 21);
          v389 = *((unsigned __int8 *)v48 + 22);
          v386 = *((unsigned __int8 *)v48 + 23);
          v383 = *((unsigned __int8 *)v48 + 24);
          v380 = *((unsigned __int8 *)v48 + 25);
          v377 = *((unsigned __int8 *)v48 + 26);
          v374 = *((unsigned __int8 *)v48 + 27);
          v371 = *((unsigned __int8 *)v48 + 28);
          v368 = *((unsigned __int8 *)v48 + 29);
          v365 = *((unsigned __int8 *)v48 + 30);
          v362 = *((unsigned __int8 *)v48 + 31);
          v523 = *((_BYTE *)v48 + 32);
          v526 = *((_BYTE *)v48 + 33);
          v529 = *((_BYTE *)v48 + 34);
          v533 = *((_BYTE *)v48 + 35);
          v537 = *((_BYTE *)v48 + 36);
          v541 = *((_BYTE *)v48 + 37);
          v545 = *((_BYTE *)v48 + 38);
          v549 = *((_BYTE *)v48 + 39);
          v552 = *((_BYTE *)v48 + 40);
          v555 = *((_BYTE *)v48 + 41);
          v558 = *((_BYTE *)v48 + 42);
          v561 = *((_BYTE *)v48 + 43);
          v564 = *((_BYTE *)v48 + 44);
          v567 = *((_BYTE *)v48 + 45);
          v570 = *((_BYTE *)v48 + 46);
          v573 = *((_BYTE *)v48 + 47);
          v335 = *((_BYTE *)v48 + 48);
          v338 = *((_BYTE *)v48 + 49);
          v310 = *((_BYTE *)v48 + 50);
          v341 = *((_BYTE *)v48 + 51);
          v312 = *((_BYTE *)v48 + 52);
          v344 = *((_BYTE *)v48 + 53);
          v314 = *((_BYTE *)v48 + 54);
          v347 = *((_BYTE *)v48 + 55);
          v316 = *((_BYTE *)v48 + 56);
          v350 = *((_BYTE *)v48 + 57);
          v318 = *((_BYTE *)v48 + 58);
          v353 = *((_BYTE *)v48 + 59);
          v320 = *((_BYTE *)v48 + 60);
          v356 = *((_BYTE *)v48 + 61);
          v201 = *((_BYTE *)v48 + 62);
          v202 = *((_BYTE *)v48 + 63);
          v283 = *((unsigned __int8 *)v48 + 64);
          v359 = *((unsigned __int16 *)v48 + 33);
          v296 = *((_WORD *)v48 + 34);
          v490 = *(v45 - 36);
          v50 = *(v45 - 35);
          v51 = *(v45 - 34);
          v240 = *(v45 - 33);
          v493 = *(v45 - 32);
          v502 = *(v45 - 31);
          v505 = *(v45 - 30);
          v496 = *(v45 - 29);
          v52 = *(v45 - 28);
          v53 = *(v45 - 27);
          v54 = *(v45 - 26);
          v448 = *(v45 - 25);
          v322 = *(v45 - 24);
          v499 = *(v45 - 23);
          v450 = *(v45 - 22);
          v517 = *(v45 - 21);
          v404 = *(v45 - 20);
          v407 = *(v45 - 19);
          v410 = *(v45 - 18);
          v413 = *(v45 - 17);
          v416 = *(v45 - 16);
          v419 = *(v45 - 15);
          v422 = *(v45 - 14);
          v425 = *(v45 - 13);
          v428 = *(v45 - 12);
          v431 = *(v45 - 11);
          v434 = *(v45 - 10);
          v437 = *(v45 - 9);
          v440 = *(v45 - 8);
          v442 = *(v45 - 7);
          v302 = *(v45 - 6);
          v444 = *(v45 - 5);
          v454 = *(v45 - 3);
          v476 = *(v45 - 2);
          v478 = *(v45 - 1);
          v455 = *v45;
          v480 = v45[1];
          v482 = v45[2];
          v457 = v45[3];
          v459 = v45[4];
          v461 = v45[5];
          v463 = v45[6];
          v465 = v45[7];
          v467 = v45[8];
          v469 = v45[9];
          v471 = v45[10];
          v474 = v45[11];
          v324 = v45[12];
          v326 = v45[13];
          v328 = v45[14];
          v304 = v45[15];
          v330 = v45[16];
          v306 = v45[17];
          v308 = v45[18];
          v332 = v45[19];
          v191 = v45[20];
          v193 = v45[21];
          v195 = v45[22];
          v197 = v45[23];
          v198 = v45[24];
          v199 = v45[25];
          v200 = v45[26];
          v204 = v45[27];
          v281 = v45[28];
          v446 = *((unsigned __int16 *)v45 + 15);
          v175 = v45;
          v291 = *((_WORD *)v45 + 16);
          LOBYTE(__s1) = *(v45 - 4);
          v452 = __s1;
          BYTE1(__s1) = v454;
          BYTE2(__s1) = v476;
          BYTE3(__s1) = v478;
          BYTE4(__s1) = v455;
          BYTE5(__s1) = v480;
          BYTE6(__s1) = v482;
          BYTE7(__s1) = v457;
          BYTE8(__s1) = v459;
          BYTE9(__s1) = v461;
          BYTE10(__s1) = v463;
          BYTE11(__s1) = v465;
          BYTE12(__s1) = v467;
          BYTE13(__s1) = v469;
          BYTE14(__s1) = v471;
          HIBYTE(__s1) = v474;
          __s2 = v490;
          v591 = v50;
          v592 = v51;
          v593 = v240;
          v594 = v493;
          v595 = v502;
          v596 = v505;
          v597 = v496;
          v598 = v52;
          v599 = v53;
          v600 = v54;
          v601 = v448;
          v602 = v322;
          v603 = v499;
          v604 = v450;
          v605 = v517;
          v224 = v50;
          v276 = v50;
          v226 = v52;
          v268 = v52;
          v287 = v53;
          v264 = v54;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            __asm { BR              X8 }
          v177 = v54;
          LOBYTE(__s1) = v523;
          BYTE1(__s1) = v526;
          BYTE2(__s1) = v529;
          BYTE3(__s1) = v533;
          BYTE4(__s1) = v537;
          BYTE5(__s1) = v541;
          BYTE6(__s1) = v545;
          BYTE7(__s1) = v549;
          BYTE8(__s1) = v552;
          BYTE9(__s1) = v555;
          BYTE10(__s1) = v558;
          BYTE11(__s1) = v561;
          BYTE12(__s1) = v564;
          BYTE13(__s1) = v567;
          BYTE14(__s1) = v570;
          HIBYTE(__s1) = v573;
          __s2 = v514;
          v591 = v238;
          v592 = v236;
          v593 = v234;
          v594 = v289;
          v595 = v231;
          v596 = v587;
          v597 = v582;
          v598 = v577;
          v599 = v511;
          v600 = v508;
          v601 = v487;
          v602 = v520;
          v603 = v484;
          v604 = __srca;
          v605 = v228;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            __asm { BR              X2 }
          v55 = v490 | (v50 << 8) | (v51 << 16) | (v240 << 24) | (v493 << 32) | (v502 << 40) | (v505 << 48) | (v496 << 56);
          v56 = v52 | (v53 << 8) | (v54 << 16) | (v448 << 24) | (v322 << 32) | (v499 << 40) | (v450 << 48) | (v517 << 56);
          v57 = v514 | (v238 << 8) | (v236 << 16) | (v234 << 24) | (v289 << 32) | (v231 << 40) | (v587 << 48) | (v582 << 56);
          v58 = v577 | (v511 << 8) | (v508 << 16) | (v487 << 24) | (v520 << 32) | (v484 << 40) | (__srca << 48) | (v228 << 56);
          v59 = sub_24978B870(v490 | (v276 << 8) | (v51 << 16) | (v240 << 24) | (v493 << 32) | (v502 << 40) | (v505 << 48) | (v496 << 56), v268 | (v53 << 8) | (v264 << 16) | (v448 << 24) | (v322 << 32) | (v499 << 40) | (v450 << 48) | (v517 << 56), v57, v58);
          v60 = v404 | (v407 << 8);
          v279 = v428 | (v431 << 8);
          v61 = v285 | (v205 << 8);
          v62 = v383 | (v380 << 8);
          v277 = v281 | (v446 << 16);
          v63 = v283 | (v359 << 16);
          if (v59 == 2
            && (v59 = sub_24978B8C8(v55, v56, v60 | (v410 << 16) | (v413 << 24) | (v416 << 32) | (v419 << 40) | (v422 << 48) | (v425 << 56), v279 | (v434 << 16) | (v437 << 24) | (v440 << 32) | (v442 << 40) | (v302 << 48) | (v444 << 56), v57, v58, v61 | (v401 << 16) | (v398 << 24) | (v395 << 32) | (v392 << 40) | (v389 << 48) | (v386 << 56), v62 | (v377 << 16) | (v374 << 24) | (v371 << 32) | (v368 << 40) | (v365 << 48) | (v362 << 56)), v59 == 2)&& (v59 = sub_24978B990(v277, v63), v59 == 2)|| (v59 & 1) == 0)
          {
            v64 = sub_24978B870(v57, v58, v55, v56);
            if (v64 != 2
              || (v64 = sub_24978B8C8(v57, v58, v61 | (v401 << 16) | (v398 << 24) | (v395 << 32) | (v392 << 40) | (v389 << 48) | (v386 << 56), v62 | (v377 << 16) | (v374 << 24) | (v371 << 32) | (v368 << 40) | (v365 << 48) | (v362 << 56), v55, v56, v60 | (v410 << 16) | (v413 << 24) | (v416 << 32) | (v419 << 40) | (v422 << 48) | (v425 << 56), v279 | (v434 << 16) | (v437 << 24) | (v440 << 32) | (v442 << 40) | (v302 << 48) | (v444 << 56)), v64 != 2)|| (v64 = sub_24978B990(v63, v277), v64 != 2))
            {
              if ((v64 & 1) != 0)
                goto LABEL_60;
            }
            v752[0] = v452;
            v752[1] = v454;
            v752[2] = v476;
            v752[3] = v478;
            v752[4] = v455;
            v752[5] = v480;
            v752[6] = v482;
            v752[7] = v457;
            v752[8] = v459;
            v752[9] = v461;
            v752[10] = v463;
            v752[11] = v465;
            v752[12] = v467;
            v752[13] = v469;
            v752[14] = v471;
            v752[15] = v474;
            v752[16] = v324;
            v752[17] = v326;
            v752[18] = v328;
            v752[19] = v304;
            v752[20] = v330;
            v752[21] = v306;
            v752[22] = v308;
            v752[23] = v332;
            v752[24] = v191;
            v752[25] = v193;
            v752[26] = v195;
            v752[27] = v197;
            v752[28] = v198;
            v752[29] = v199;
            v752[30] = v200;
            v752[31] = v204;
            v753 = v291;
            v754[0] = v523;
            v754[1] = v526;
            v754[2] = v529;
            v754[3] = v533;
            v752[32] = 0x1000302u >> (8 * v281);
            v754[4] = v537;
            v754[5] = v541;
            v754[6] = v545;
            v754[7] = v549;
            v754[8] = v552;
            v754[9] = v555;
            v754[10] = v558;
            v754[11] = v561;
            v754[12] = v564;
            v754[13] = v567;
            v754[14] = v570;
            v754[15] = v573;
            v754[16] = v335;
            v754[17] = v338;
            v754[18] = v310;
            v754[19] = v341;
            v754[20] = v312;
            v754[21] = v344;
            v754[22] = v314;
            v754[23] = v347;
            v754[24] = v316;
            v754[25] = v350;
            v754[26] = v318;
            v754[27] = v353;
            v754[28] = v320;
            v754[29] = v356;
            v754[30] = v201;
            v754[31] = v202;
            v754[32] = 0x1000302u >> (8 * v283);
            v755 = v296;
            if ((sub_24978CDCC((uint64_t)v752, (uint64_t)v754) & 1) == 0)
            {
LABEL_60:
              LOBYTE(__s1) = v523;
              BYTE1(__s1) = v526;
              BYTE2(__s1) = v529;
              BYTE3(__s1) = v533;
              BYTE4(__s1) = v537;
              BYTE5(__s1) = v541;
              BYTE6(__s1) = v545;
              BYTE7(__s1) = v549;
              BYTE8(__s1) = v552;
              BYTE9(__s1) = v555;
              BYTE10(__s1) = v558;
              BYTE11(__s1) = v561;
              BYTE12(__s1) = v564;
              BYTE13(__s1) = v567;
              BYTE14(__s1) = v570;
              HIBYTE(__s1) = v573;
              __s2 = v514;
              v591 = v238;
              v592 = v236;
              v593 = v234;
              v594 = v289;
              v595 = v231;
              v596 = v587;
              v597 = v582;
              v598 = v577;
              v599 = v511;
              v600 = v508;
              v601 = v487;
              v602 = v520;
              v603 = v484;
              v604 = __srca;
              v605 = v228;
              if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                __asm { BR              X8 }
              if (static UniversalControlUUID.compare(lhs:rhs:)(v452 | (v454 << 8) | (v476 << 16) | (v478 << 24) | (v455 << 32) | (v480 << 40) | (v482 << 48) | (v457 << 56), v459 | (v461 << 8) | (v463 << 16) | (v465 << 24) | (v467 << 32) | (v469 << 40) | (v471 << 48) | (v474 << 56), v490 | (v224 << 8) | (v51 << 16) | (v240 << 24) | (v493 << 32) | (v502 << 40) | (v505 << 48) | (v496 << 56), v226 | (v287 << 8) | (v177 << 16) | (v448 << 24) | (v322 << 32) | (v499 << 40) | (v450 << 48) | (v517 << 56)) == -1)
                __asm { BR              X14 }
              v748[0] = v514;
              v748[1] = v238;
              v748[2] = v236;
              v748[3] = v234;
              v748[4] = v289;
              v748[5] = v231;
              v748[6] = v587;
              v748[7] = v582;
              v748[8] = v577;
              v748[9] = v511;
              v748[10] = v508;
              v748[11] = v487;
              v748[12] = v520;
              v748[13] = v484;
              v748[14] = __srca;
              v748[15] = v228;
              v748[16] = v285;
              v748[17] = v205;
              v748[18] = v401;
              v748[19] = v398;
              v748[20] = v395;
              v748[21] = v392;
              v748[22] = v389;
              v748[23] = v386;
              v748[24] = v383;
              v748[25] = v380;
              v748[26] = v377;
              v748[27] = v374;
              v748[28] = v371;
              v748[29] = v368;
              v748[30] = v365;
              v748[31] = v362;
              v749 = v359;
              v750[0] = v490;
              v750[1] = v224;
              v748[32] = v283;
              v750[2] = v51;
              v750[3] = v240;
              v750[4] = v493;
              v750[5] = v502;
              v750[6] = v505;
              v750[7] = v496;
              v750[8] = v226;
              v750[9] = v287;
              v750[10] = v177;
              v750[11] = v448;
              v750[12] = v322;
              v750[13] = v499;
              v750[14] = v450;
              v750[15] = v517;
              v750[16] = v404;
              v750[17] = v407;
              v750[18] = v410;
              v750[19] = v413;
              v750[20] = v416;
              v750[21] = v419;
              v750[22] = v422;
              v750[23] = v425;
              v750[24] = v428;
              v750[25] = v431;
              v750[26] = v434;
              v750[27] = v437;
              v750[28] = v440;
              v750[29] = v442;
              v750[30] = v302;
              v750[31] = v444;
              v750[32] = v281;
              v751 = v446;
              if (sub_24978CDCC((uint64_t)v748, (uint64_t)v750) == 2)
              {
                v744[0] = v523;
                v744[1] = v526;
                v744[2] = v529;
                v744[3] = v533;
                v744[4] = v537;
                v744[5] = v541;
                v744[6] = v545;
                v744[7] = v549;
                v744[8] = v552;
                v744[9] = v555;
                v744[10] = v558;
                v744[11] = v561;
                v744[12] = v564;
                v744[13] = v567;
                v744[14] = v570;
                v744[15] = v573;
                v744[16] = v335;
                v744[17] = v338;
                v744[18] = v310;
                v744[19] = v341;
                v744[20] = v312;
                v744[21] = v344;
                v744[22] = v314;
                v744[23] = v347;
                v744[24] = v316;
                v744[25] = v350;
                v744[26] = v318;
                v744[27] = v353;
                v744[28] = v320;
                v744[29] = v356;
                v744[30] = v201;
                v744[31] = v202;
                v745 = v296;
                v746[0] = v452;
                v746[1] = v454;
                v746[2] = v476;
                v746[3] = v478;
                v744[32] = 0x1000302u >> (8 * v283);
                v746[4] = v455;
                v746[5] = v480;
                v746[6] = v482;
                v746[7] = v457;
                v746[8] = v459;
                v746[9] = v461;
                v746[10] = v463;
                v746[11] = v465;
                v746[12] = v467;
                v746[13] = v469;
                v746[14] = v471;
                v746[15] = v474;
                v746[16] = v324;
                v746[17] = v326;
                v746[18] = v328;
                v746[19] = v304;
                v746[20] = v330;
                v746[21] = v306;
                v746[22] = v308;
                v746[23] = v332;
                v746[24] = v191;
                v746[25] = v193;
                v746[26] = v195;
                v746[27] = v197;
                v746[28] = v198;
                v746[29] = v199;
                v746[30] = v200;
                v746[31] = v204;
                v746[32] = 0x1000302u >> (8 * v281);
                v747 = v291;
                sub_24978CDCC((uint64_t)v744, (uint64_t)v746);
              }
              v2 = v179;
              v4 = v181;
              v12 = v298;
              v9 = v184;
              v18 = v174;
              v45 = v175;
              v46 = v176;
LABEL_69:
              if ((v18 & 1) != 0)
              {
                v17 = v46;
                v10 = v183;
                goto LABEL_78;
              }
              goto LABEL_70;
            }
          }
          v2 = v179;
          v4 = v181;
          v12 = v298;
          v9 = v184;
          v18 = v174;
          v45 = v175;
          v46 = v176;
        }
        if ((v18 & 1) == 0)
        {
          v17 = v46;
LABEL_75:
          v10 = v183;
          goto LABEL_86;
        }
LABEL_70:
        v17 = v46 + 1;
        v45 += 80;
        v11 = v46;
      }
      while (v46 + 1 < v4);
      v10 = v183;
      if (!v18)
        goto LABEL_86;
LABEL_78:
      if (v17 < v9)
        goto LABEL_207;
LABEL_79:
      if (v9 < v17)
      {
        v65 = 80 * v17;
        v66 = v17;
        v67 = 80 * v9;
        v292 = v66;
        do
        {
          if (v9 != --v66)
          {
            if (!v12)
              goto LABEL_213;
            v68 = v12 + v65;
            v69 = *(_BYTE *)(v12 + v67 + 64);
            v70 = *(_DWORD *)(v12 + v67 + 66);
            v71 = *(_QWORD *)(v12 + v67 + 72);
            v588 = *(_OWORD *)(v12 + v67);
            v583 = *(_OWORD *)(v12 + v67 + 16);
            v578 = *(_OWORD *)(v12 + v67 + 32);
            v574 = *(_OWORD *)(v12 + v67 + 48);
            memmove((void *)(v12 + v67), (const void *)(v12 + v65 - 80), 0x50uLL);
            *(_OWORD *)(v68 - 80) = v588;
            *(_OWORD *)(v68 - 64) = v583;
            *(_OWORD *)(v68 - 48) = v578;
            *(_OWORD *)(v68 - 32) = v574;
            *(_BYTE *)(v68 - 16) = v69;
            *(_DWORD *)(v68 - 14) = v70;
            *(_QWORD *)(v68 - 8) = v71;
            v10 = v183;
          }
          ++v9;
          v65 -= 80;
          v67 += 80;
        }
        while (v9 < v66);
        v4 = v181;
        v9 = v184;
        v17 = v292;
      }
LABEL_86:
      if (v17 < v4)
      {
        if (__OFSUB__(v17, v9))
          goto LABEL_205;
        if (v17 - v9 < v172)
        {
          if (__OFADD__(v9, v172))
            goto LABEL_208;
          if (v9 + v172 >= v4)
            v72 = v4;
          else
            v72 = v9 + v172;
          if (v72 < v9)
          {
LABEL_209:
            __break(1u);
            goto LABEL_210;
          }
          if (v17 != v72)
          {
            v180 = v2;
            v73 = (double *)(v169 + 80 * v17);
            v182 = v72;
            do
            {
              v74 = v12 + 80 * v17;
              v589 = *(_OWORD *)v74;
              v584 = *(_BYTE *)(v74 + 16);
              v579 = *(_BYTE *)(v74 + 17);
              v575 = *(_BYTE *)(v74 + 18);
              v556 = *(_BYTE *)(v74 + 19);
              v571 = *(_BYTE *)(v74 + 20);
              v568 = *(_BYTE *)(v74 + 21);
              v565 = *(_BYTE *)(v74 + 22);
              v562 = *(_BYTE *)(v74 + 23);
              v559 = *(_BYTE *)(v74 + 24);
              v470 = *(_BYTE *)(v74 + 25);
              v468 = *(_BYTE *)(v74 + 26);
              v466 = *(_BYTE *)(v74 + 27);
              v553 = *(_BYTE *)(v74 + 28);
              v464 = *(_BYTE *)(v74 + 29);
              v462 = *(_BYTE *)(v74 + 30);
              v460 = *(_BYTE *)(v74 + 31);
              v458 = *(_BYTE *)(v74 + 32);
              v456 = *(_BYTE *)(v74 + 33);
              v75 = *(int8x8_t *)(v74 + 34);
              v76 = *(_BYTE *)(v74 + 42);
              v77 = *(_BYTE *)(v74 + 43);
              v185 = v73;
              v78 = *(_BYTE *)(v74 + 44);
              v293 = v17;
              while (1)
              {
                v449 = v78;
                v451 = v77;
                v453 = v76;
                v550 = v9;
                v79 = v73 - 19;
                v546 = *((unsigned __int8 *)v73 - 152);
                v80 = *(v73 - 10);
                if (v80 >= *v73)
                {
                  if (*v73 < v80)
                    goto LABEL_111;
                  v81 = *((unsigned __int8 *)v73 - 27);
                  v82 = *((unsigned __int8 *)v73 - 26);
                  v83 = *((unsigned __int8 *)v73 - 25);
                  v206 = *((_BYTE *)v73 - 24);
                  v232 = *((_BYTE *)v73 - 23);
                  v229 = *((_BYTE *)v73 - 22);
                  v227 = *((_BYTE *)v73 - 21);
                  v225 = *((_BYTE *)v73 - 20);
                  v223 = *((_BYTE *)v73 - 19);
                  v222 = *((_BYTE *)v73 - 18);
                  v221 = *((_BYTE *)v73 - 17);
                  v220 = *((_BYTE *)v73 - 16);
                  v219 = *((_BYTE *)v73 - 15);
                  v218 = *((_BYTE *)v73 - 14);
                  v216 = *((_BYTE *)v73 - 13);
                  v214 = *((_BYTE *)v73 - 12);
                  v213 = *((_BYTE *)v73 - 11);
                  v212 = *((_BYTE *)v73 - 10);
                  v211 = *((_BYTE *)v73 - 9);
                  v210 = *((unsigned __int8 *)v73 - 8);
                  v209 = *((_WORD *)v73 - 3);
                  v208 = *((_WORD *)v73 - 2);
                  v447 = *((unsigned __int8 *)v73 - 151);
                  v445 = *((unsigned __int8 *)v73 - 150);
                  v84.i64[0] = v75.u8[1];
                  v84.i64[1] = v75.u8[2];
                  v85.i64[0] = 255;
                  v85.i64[1] = 255;
                  v86 = (uint64x2_t)vandq_s8(v84, v85);
                  v84.i64[0] = v456;
                  v84.i64[1] = v75.u8[0];
                  v87 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v84, v85), (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64(v86, (uint64x2_t)xmmword_24983AE40));
                  *(int8x8_t *)v87.i8 = vorr_s8(*(int8x8_t *)v87.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v87, v87, 8uLL));
                  v84.i64[0] = v75.u8[3];
                  v84.i64[1] = v75.u8[4];
                  v87.i64[1] = (unint64_t)v75.u8[5] << 56;
                  v88 = (int64x2_t)vorrq_s8(v87, (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v84, v85), (uint64x2_t)xmmword_24983AE60));
                  v89 = vorrq_s8((int8x16_t)v88, (int8x16_t)vdupq_laneq_s64(v88, 1)).u64[0] | v458;
                  v84.i64[0] = BYTE1(v589);
                  v84.i64[1] = BYTE2(v589);
                  v90 = (uint64x2_t)vandq_s8(v84, v85);
                  v84.i64[0] = BYTE3(v589);
                  v84.i64[1] = BYTE4(v589);
                  v91 = vorrq_s8((int8x16_t)vshlq_u64(v90, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v84, v85), (uint64x2_t)xmmword_24983AE40));
                  *(int8x8_t *)v91.i8 = vorr_s8(*(int8x8_t *)v91.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v91, v91, 8uLL));
                  v84.i64[0] = BYTE5(v589);
                  v84.i64[1] = BYTE6(v589);
                  v91.i64[1] = (unint64_t)BYTE7(v589) << 56;
                  v92 = (int64x2_t)vorrq_s8(v91, (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v84, v85), (uint64x2_t)xmmword_24983AE60));
                  v93 = vorrq_s8((int8x16_t)v92, (int8x16_t)vdupq_laneq_s64(v92, 1)).u64[0] | v589;
                  v84.i64[0] = BYTE9(v589);
                  v84.i64[1] = BYTE10(v589);
                  v94 = (uint64x2_t)vandq_s8(v84, v85);
                  v84.i64[0] = BYTE11(v589);
                  v84.i64[1] = BYTE12(v589);
                  v95 = vorrq_s8((int8x16_t)vshlq_u64(v94, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v84, v85), (uint64x2_t)xmmword_24983AE40));
                  *(int8x8_t *)v95.i8 = vorr_s8(*(int8x8_t *)v95.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v95, v95, 8uLL));
                  v84.i64[0] = BYTE13(v589);
                  v84.i64[1] = BYTE14(v589);
                  v95.i64[1] = (unint64_t)HIBYTE(v589) << 56;
                  v96 = (int64x2_t)vorrq_s8(v95, (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v84, v85), (uint64x2_t)xmmword_24983AE60));
                  v387 = *((unsigned __int8 *)v73 - 149);
                  v390 = *((unsigned __int8 *)v73 - 148);
                  v384 = *((unsigned __int8 *)v73 - 147);
                  v381 = *((unsigned __int8 *)v73 - 146);
                  v378 = *((unsigned __int8 *)v73 - 145);
                  v503 = *((unsigned __int8 *)v73 - 144);
                  v500 = *((unsigned __int8 *)v73 - 143);
                  v497 = *((unsigned __int8 *)v73 - 142);
                  v494 = *((unsigned __int8 *)v73 - 141);
                  v491 = *((unsigned __int8 *)v73 - 140);
                  v488 = *((unsigned __int8 *)v73 - 139);
                  v485 = *((unsigned __int8 *)v73 - 138);
                  v483 = *((unsigned __int8 *)v73 - 137);
                  v207 = *((_BYTE *)v73 - 136);
                  v375 = *((_BYTE *)v73 - 135);
                  v372 = *((_BYTE *)v73 - 134);
                  v369 = *((_BYTE *)v73 - 133);
                  v366 = *((_BYTE *)v73 - 132);
                  v363 = *((_BYTE *)v73 - 131);
                  v360 = *((_BYTE *)v73 - 130);
                  v357 = *((_BYTE *)v73 - 129);
                  v354 = *((_BYTE *)v73 - 128);
                  v351 = *((_BYTE *)v73 - 127);
                  v348 = *((_BYTE *)v73 - 126);
                  v345 = *((_BYTE *)v73 - 125);
                  v342 = *((_BYTE *)v73 - 124);
                  v339 = *((_BYTE *)v73 - 123);
                  v336 = *((_BYTE *)v73 - 122);
                  v333 = *((_BYTE *)v73 - 121);
                  v481 = *((unsigned __int8 *)v73 - 120);
                  v479 = *((unsigned __int8 *)v73 - 119);
                  v477 = *((unsigned __int8 *)v73 - 118);
                  v475 = *((unsigned __int8 *)v73 - 117);
                  v506 = *((unsigned __int8 *)v73 - 116);
                  v509 = *((unsigned __int8 *)v73 - 115);
                  v512 = *((unsigned __int8 *)v73 - 114);
                  v515 = *((unsigned __int8 *)v73 - 113);
                  v518 = *((unsigned __int8 *)v73 - 112);
                  v521 = *((unsigned __int8 *)v73 - 111);
                  v524 = *((unsigned __int8 *)v73 - 110);
                  v527 = *((unsigned __int8 *)v73 - 109);
                  v530 = *((unsigned __int8 *)v73 - 108);
                  v534 = *((unsigned __int8 *)v73 - 107);
                  v538 = *((unsigned __int8 *)v73 - 106);
                  v542 = *((unsigned __int8 *)v73 - 105);
                  v393 = *((_BYTE *)v73 - 104);
                  v396 = *((_BYTE *)v73 - 103);
                  v399 = *((_BYTE *)v73 - 102);
                  v402 = *((_BYTE *)v73 - 101);
                  v405 = *((_BYTE *)v73 - 100);
                  v408 = *((_BYTE *)v73 - 99);
                  v411 = *((_BYTE *)v73 - 98);
                  v414 = *((_BYTE *)v73 - 97);
                  v417 = *((_BYTE *)v73 - 96);
                  v420 = *((_BYTE *)v73 - 95);
                  v423 = *((_BYTE *)v73 - 94);
                  v426 = *((_BYTE *)v73 - 93);
                  v429 = *((_BYTE *)v73 - 92);
                  v432 = *((_BYTE *)v73 - 91);
                  v435 = *((_BYTE *)v73 - 90);
                  v438 = *((_BYTE *)v73 - 89);
                  v297 = *((unsigned __int8 *)v73 - 88);
                  v441 = *((_WORD *)v73 - 43);
                  v443 = *((_WORD *)v73 - 42);
                  v472 = (uint64_t)v75;
                  v189 = *((_BYTE *)v73 - 27);
                  v188 = *((_BYTE *)v73 - 26);
                  v187 = *((_BYTE *)v73 - 25);
                  if (static UniversalControlUUID.compare(lhs:rhs:)(v89, v75.u8[6] | (unint64_t)(unsigned __int16)(v75.u8[7] << 8) | ((unint64_t)v76 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v77 << 24) | ((unint64_t)v78 << 32) | (v81 << 40) | (v82 << 48) | (v83 << 56), v93, vorrq_s8((int8x16_t)v96, (int8x16_t)vdupq_laneq_s64(v96, 1)).u64[0] | BYTE8(v589)) == -1)
                    __asm { BR              X8 }
                  LOBYTE(v97) = v81;
                  BYTE1(v97) = v82;
                  BYTE2(v97) = v83;
                  BYTE3(v97) = v458;
                  BYTE4(v97) = v456;
                  BYTE5(v97) = v453;
                  BYTE6(v97) = v451;
                  HIBYTE(v97) = v449;
                  v203 = v97;
                  if (static UniversalControlUUID.compare(lhs:rhs:)(v481 | (v479 << 8) | (v477 << 16) | (v475 << 24) | (v506 << 32) | (v509 << 40) | (v512 << 48) | (v515 << 56), v518 | (v521 << 8) | (v524 << 16) | (v527 << 24) | (v530 << 32) | (v534 << 40) | (v538 << 48) | (v542 << 56), v546 | (v447 << 8) | (v445 << 16) | (v387 << 24) | (v390 << 32) | (v384 << 40) | (v381 << 48) | (v378 << 56), v503 | (v500 << 8) | (v497 << 16) | (v494 << 24) | (v491 << 32) | (v488 << 40) | (v485 << 48) | (v483 << 56)) == -1)
                    __asm { BR              X0 }
                  v724 = v584;
                  v725 = v579;
                  v726 = v575;
                  v727 = v556;
                  v728 = v571;
                  v729 = v568;
                  v730 = v565;
                  v731 = v562;
                  v732 = v559;
                  v733 = v470;
                  v734 = v468;
                  v735 = v466;
                  v736 = v553;
                  v737 = v464;
                  v738 = v462;
                  v739 = v460;
                  v741 = v209;
                  v742[0] = v546;
                  v742[1] = v447;
                  v723 = v589;
                  v740 = v210;
                  v742[2] = v445;
                  v742[3] = v387;
                  v742[4] = v390;
                  v742[5] = v384;
                  v742[6] = v381;
                  v742[7] = v378;
                  v742[8] = v503;
                  v742[9] = v500;
                  v742[10] = v497;
                  v742[11] = v494;
                  v742[12] = v491;
                  v742[13] = v488;
                  v742[14] = v485;
                  v742[15] = v483;
                  v742[16] = v207;
                  v742[17] = v375;
                  v742[18] = v372;
                  v742[19] = v369;
                  v742[20] = v366;
                  v742[21] = v363;
                  v742[22] = v360;
                  v742[23] = v357;
                  v742[24] = v354;
                  v742[25] = v351;
                  v742[26] = v348;
                  v742[27] = v345;
                  v742[28] = v342;
                  v742[29] = v339;
                  v742[30] = v336;
                  v742[31] = v333;
                  v742[32] = v297;
                  v743 = v441;
                  v98 = sub_24978CDCC((uint64_t)&v723, (uint64_t)v742);
                  v99 = v472;
                  v79 = v73 - 19;
                  if (v98 == 2)
                  {
                    v703 = v206;
                    v704 = v232;
                    v705 = v229;
                    v706 = v227;
                    v707 = v225;
                    v708 = v223;
                    v709 = v222;
                    v710 = v221;
                    v711 = v220;
                    v712 = v219;
                    v713 = v218;
                    v714 = v216;
                    v715 = v214;
                    v716 = v213;
                    v717 = v212;
                    v718 = v211;
                    v720 = v208;
                    v721[0] = v481;
                    v721[1] = v479;
                    v721[2] = v477;
                    v721[3] = v475;
                    v100.i64[0] = v203;
                    v100.i64[1] = v472;
                    v702 = vqtbl1q_s8(v100, (int8x16_t)xmmword_24983C350);
                    v719 = 0x1000302u >> (8 * v210);
                    v721[4] = v506;
                    v721[5] = v509;
                    v721[6] = v512;
                    v721[7] = v515;
                    v721[8] = v518;
                    v721[9] = v521;
                    v721[10] = v524;
                    v721[11] = v527;
                    v721[12] = v530;
                    v721[13] = v534;
                    v721[14] = v538;
                    v721[15] = v542;
                    v721[16] = v393;
                    v721[17] = v396;
                    v721[18] = v399;
                    v721[19] = v402;
                    v721[20] = v405;
                    v721[21] = v408;
                    v721[22] = v411;
                    v721[23] = v414;
                    v721[24] = v417;
                    v721[25] = v420;
                    v721[26] = v423;
                    v721[27] = v426;
                    v721[28] = v429;
                    v721[29] = v432;
                    v721[30] = v435;
                    v721[31] = v438;
                    v721[32] = 0x1000302u >> (8 * v297);
                    v722 = v443;
                    v98 = sub_24978CDCC((uint64_t)&v702, (uint64_t)v721);
                    v79 = v73 - 19;
                    v99 = v472;
                    if (v98 == 2)
                      break;
                  }
                  if ((v98 & 1) == 0)
                    break;
                }
                if (!v298)
                  goto LABEL_211;
                v589 = *(_OWORD *)(v73 - 9);
                v584 = *((_BYTE *)v73 - 56);
                v579 = *((_BYTE *)v73 - 55);
                v575 = *((_BYTE *)v73 - 54);
                v556 = *((_BYTE *)v73 - 53);
                v571 = *((_BYTE *)v73 - 52);
                v568 = *((_BYTE *)v73 - 51);
                v565 = *((_BYTE *)v73 - 50);
                v562 = *((_BYTE *)v73 - 49);
                v559 = *((_BYTE *)v73 - 48);
                v101 = *((_BYTE *)v73 - 47);
                v102 = *((_BYTE *)v73 - 46);
                v103 = *((_BYTE *)v73 - 45);
                v553 = *((_BYTE *)v73 - 44);
                v104 = *((_BYTE *)v73 - 43);
                v105 = *((_BYTE *)v73 - 42);
                v106 = *((_BYTE *)v73 - 41);
                v107 = *((_BYTE *)v73 - 40);
                v108 = *((_BYTE *)v73 - 39);
                v539 = *((_BYTE *)v73 - 38);
                v547 = *(_WORD *)((char *)v73 - 9);
                v543 = *(_DWORD *)((char *)v73 - 6);
                v109 = *v73;
                v535 = *(_OWORD *)((char *)v73 - 37);
                v110 = *(_QWORD *)((char *)v73 - 21);
                v531 = *(_DWORD *)((char *)v73 - 13);
                memcpy(v73 - 9, v79, 0x50uLL);
                *(v73 - 10) = v109;
                v73 -= 10;
                *(_OWORD *)(v73 - 9) = v589;
                *((_BYTE *)v73 - 56) = v584;
                *((_BYTE *)v73 - 55) = v579;
                *((_BYTE *)v73 - 54) = v575;
                *((_BYTE *)v73 - 53) = v556;
                *((_BYTE *)v73 - 52) = v571;
                *((_BYTE *)v73 - 51) = v568;
                *((_BYTE *)v73 - 50) = v565;
                *((_BYTE *)v73 - 49) = v562;
                *((_BYTE *)v73 - 48) = v559;
                v470 = v101;
                *((_BYTE *)v73 - 47) = v101;
                v468 = v102;
                *((_BYTE *)v73 - 46) = v102;
                v466 = v103;
                *((_BYTE *)v73 - 45) = v103;
                *((_BYTE *)v73 - 44) = v553;
                v464 = v104;
                *((_BYTE *)v73 - 43) = v104;
                v462 = v105;
                *((_BYTE *)v73 - 42) = v105;
                v460 = v106;
                *((_BYTE *)v73 - 41) = v106;
                v458 = v107;
                *((_BYTE *)v73 - 40) = v107;
                v456 = v108;
                *((_BYTE *)v73 - 39) = v108;
                *((_BYTE *)v73 - 38) = v539;
                *(_OWORD *)((char *)v73 - 37) = v535;
                *(_DWORD *)((char *)v73 - 13) = v531;
                *(_WORD *)((char *)v73 - 9) = v547;
                *(_DWORD *)((char *)v73 - 6) = v543;
                v76 = BYTE7(v535);
                v77 = BYTE8(v535);
                v78 = BYTE9(v535);
                *(_QWORD *)((char *)v73 - 21) = v110;
                v75 = vext_s8(*(int8x8_t *)&v535, *(int8x8_t *)&v535, 7uLL);
                v9 = v550 + 1;
                v75.i8[0] = v539;
                v111 = v293;
                if (v293 == v550 + 1)
                  goto LABEL_112;
              }
              __s1 = v589;
              v658 = v584;
              v659 = v579;
              v660 = v575;
              v661 = v556;
              v662 = v571;
              v663 = v568;
              v664 = v565;
              v665 = v562;
              v666 = v559;
              v667 = v470;
              v668 = v468;
              v669 = v466;
              v670 = v553;
              v671 = v464;
              v672 = v462;
              v673 = v460;
              v674 = v458;
              v675 = v456;
              v677 = v453;
              v678 = v451;
              v679 = v449;
              v680 = v189;
              v681 = v188;
              v682 = v187;
              v683 = v206;
              v684 = v232;
              v685 = v229;
              v686 = v227;
              v687 = v225;
              v688 = v223;
              v689 = v222;
              v690 = v221;
              v691 = v220;
              v692 = v219;
              v693 = v218;
              v694 = v216;
              v695 = v214;
              v696 = v213;
              v697 = v212;
              v698 = v211;
              v699 = v210;
              v700 = v209;
              v701 = v208;
              __s2 = v546;
              v591 = v447;
              v592 = v445;
              v593 = v387;
              v594 = v390;
              v595 = v384;
              v596 = v381;
              v597 = v378;
              v598 = v503;
              v599 = v500;
              v600 = v497;
              v601 = v494;
              v602 = v491;
              v603 = v488;
              v604 = v485;
              v605 = v483;
              v606 = v207;
              v607 = v375;
              v608 = v372;
              v609 = v369;
              v610 = v366;
              v611 = v363;
              v612 = v360;
              v613 = v357;
              v614 = v354;
              v615 = v351;
              v616 = v348;
              v617 = v345;
              v618 = v342;
              v619 = v339;
              v620 = v336;
              v621 = v333;
              v622 = v481;
              v623 = v479;
              v624 = v477;
              v625 = v475;
              v676 = v99;
              v626 = v506;
              v627 = v509;
              v628 = v512;
              v629 = v515;
              v630 = v518;
              v631 = v521;
              v632 = v524;
              v633 = v527;
              v634 = v530;
              v635 = v534;
              v636 = v538;
              v637 = v542;
              v638 = v393;
              v639 = v396;
              v640 = v399;
              v641 = v402;
              v642 = v405;
              v643 = v408;
              v644 = v411;
              v645 = v414;
              v646 = v417;
              v647 = v420;
              v648 = v423;
              v649 = v426;
              v650 = v429;
              v651 = v432;
              v652 = v435;
              v653 = v438;
              v654 = v297;
              v655 = v441;
              v656 = v443;
              static UniversalControlLink.< infix(_:_:)(&__s2, (unsigned __int8 *)&__s1);
LABEL_111:
              v111 = v293;
LABEL_112:
              v17 = v111 + 1;
              v73 = v185 + 10;
              v9 = v184;
              v12 = v298;
            }
            while (v17 != v182);
            v17 = v182;
            v2 = v180;
            v10 = v183;
          }
        }
      }
      if (v17 < v9)
        goto LABEL_204;
      v294 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_24975DAF4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v113 = *((_QWORD *)v10 + 2);
      v112 = *((_QWORD *)v10 + 3);
      v114 = v113 + 1;
      if (v113 >= v112 >> 1)
        v10 = sub_24975DAF4((char *)(v112 > 1), v113 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v114;
      v115 = v10 + 32;
      v116 = &v10[16 * v113 + 32];
      *(_QWORD *)v116 = v9;
      *((_QWORD *)v116 + 1) = v294;
      if (v113)
      {
        while (2)
        {
          v117 = v114 - 1;
          if (v114 >= 4)
          {
            v122 = &v115[16 * v114];
            v123 = *((_QWORD *)v122 - 8);
            v124 = *((_QWORD *)v122 - 7);
            v128 = __OFSUB__(v124, v123);
            v125 = v124 - v123;
            if (v128)
              goto LABEL_189;
            v127 = *((_QWORD *)v122 - 6);
            v126 = *((_QWORD *)v122 - 5);
            v128 = __OFSUB__(v126, v127);
            v120 = v126 - v127;
            v121 = v128;
            if (v128)
              goto LABEL_190;
            v129 = v114 - 2;
            v130 = &v115[16 * v114 - 32];
            v132 = *(_QWORD *)v130;
            v131 = *((_QWORD *)v130 + 1);
            v128 = __OFSUB__(v131, v132);
            v133 = v131 - v132;
            if (v128)
              goto LABEL_191;
            v128 = __OFADD__(v120, v133);
            v134 = v120 + v133;
            if (v128)
              goto LABEL_193;
            if (v134 >= v125)
            {
              v152 = &v115[16 * v117];
              v154 = *(_QWORD *)v152;
              v153 = *((_QWORD *)v152 + 1);
              v128 = __OFSUB__(v153, v154);
              v155 = v153 - v154;
              if (v128)
                goto LABEL_199;
              v145 = v120 < v155;
            }
            else
            {
LABEL_133:
              if ((v121 & 1) != 0)
                goto LABEL_192;
              v129 = v114 - 2;
              v135 = &v115[16 * v114 - 32];
              v137 = *(_QWORD *)v135;
              v136 = *((_QWORD *)v135 + 1);
              v138 = __OFSUB__(v136, v137);
              v139 = v136 - v137;
              v140 = v138;
              if (v138)
                goto LABEL_194;
              v141 = &v115[16 * v117];
              v143 = *(_QWORD *)v141;
              v142 = *((_QWORD *)v141 + 1);
              v128 = __OFSUB__(v142, v143);
              v144 = v142 - v143;
              if (v128)
                goto LABEL_196;
              if (__OFADD__(v139, v144))
                goto LABEL_198;
              if (v139 + v144 < v120)
                goto LABEL_145;
              v145 = v120 < v144;
            }
            if (v145)
              v117 = v129;
          }
          else
          {
            if (v114 == 3)
            {
              v119 = *((_QWORD *)v10 + 4);
              v118 = *((_QWORD *)v10 + 5);
              v128 = __OFSUB__(v118, v119);
              v120 = v118 - v119;
              v121 = v128;
              goto LABEL_133;
            }
            v146 = *((_QWORD *)v10 + 4);
            v147 = *((_QWORD *)v10 + 5);
            v128 = __OFSUB__(v147, v146);
            v139 = v147 - v146;
            v140 = v128;
LABEL_145:
            if ((v140 & 1) != 0)
              goto LABEL_195;
            v148 = &v115[16 * v117];
            v150 = *(_QWORD *)v148;
            v149 = *((_QWORD *)v148 + 1);
            v128 = __OFSUB__(v149, v150);
            v151 = v149 - v150;
            if (v128)
              goto LABEL_197;
            if (v151 < v139)
              goto LABEL_162;
          }
          v156 = v117 - 1;
          if (v117 - 1 >= v114)
          {
            __break(1u);
LABEL_186:
            __break(1u);
LABEL_187:
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
LABEL_198:
            __break(1u);
LABEL_199:
            __break(1u);
LABEL_200:
            __break(1u);
LABEL_201:
            __break(1u);
LABEL_202:
            __break(1u);
LABEL_203:
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
            goto LABEL_209;
          }
          if (!v298)
            goto LABEL_212;
          v157 = v10;
          v158 = &v115[16 * v156];
          v159 = *(_QWORD *)v158;
          v160 = &v115[16 * v117];
          v161 = *((_QWORD *)v160 + 1);
          sub_2498035B0((char *)(v298 + 80 * *(_QWORD *)v158), (char *)(v298 + 80 * *(_QWORD *)v160), v298 + 80 * v161, v186);
          if (v2)
          {
LABEL_168:
            swift_bridgeObjectRelease();
            if (v181 >= -1)
              goto LABEL_183;
            __break(1u);
LABEL_170:
            v10 = (char *)MEMORY[0x24BEE4AF8];
            v114 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_171:
            if (v114 >= 2)
            {
              v163 = *v171;
              do
              {
                v164 = v114 - 2;
                if (v114 < 2)
                  goto LABEL_200;
                if (!v163)
                  goto LABEL_214;
                v165 = *(_QWORD *)&v10[16 * v164 + 32];
                v166 = *(_QWORD *)&v10[16 * v114 + 24];
                sub_2498035B0((char *)(v163 + 80 * v165), (char *)(v163 + 80 * *(_QWORD *)&v10[16 * v114 + 16]), v163 + 80 * v166, v186);
                if (v2)
                  goto LABEL_168;
                if (v166 < v165)
                  goto LABEL_201;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v10 = sub_24975DBE8();
                if (v164 >= *((_QWORD *)v10 + 2))
                  goto LABEL_202;
                v167 = &v10[16 * v164 + 32];
                *(_QWORD *)v167 = v165;
                *((_QWORD *)v167 + 1) = v166;
                v168 = *((_QWORD *)v10 + 2);
                if (v114 > v168)
                  goto LABEL_203;
                memmove(&v10[16 * v114 + 16], &v10[16 * v114 + 32], 16 * (v168 - v114));
                *((_QWORD *)v10 + 2) = v168 - 1;
                v114 = v168 - 1;
              }
              while (v168 > 2);
            }
            swift_bridgeObjectRelease();
            if (v181 >= -1)
            {
LABEL_183:
              *(_QWORD *)(v173 + 16) = 0;
              swift_bridgeObjectRelease();
              return;
            }
LABEL_210:
            __break(1u);
LABEL_211:
            __break(1u);
LABEL_212:
            __break(1u);
LABEL_213:
            __break(1u);
LABEL_214:
            __break(1u);
          }
          if (v161 < v159)
            goto LABEL_186;
          if (v117 > *((_QWORD *)v157 + 2))
            goto LABEL_187;
          *(_QWORD *)v158 = v159;
          *(_QWORD *)&v115[16 * v156 + 8] = v161;
          v162 = *((_QWORD *)v157 + 2);
          if (v117 >= v162)
            goto LABEL_188;
          v10 = v157;
          v114 = v162 - 1;
          memmove(&v115[16 * v117], v160 + 16, 16 * (v162 - 1 - v117));
          *((_QWORD *)v10 + 2) = v162 - 1;
          if (v162 <= 2)
            goto LABEL_162;
          continue;
        }
      }
      v114 = 1;
LABEL_162:
      v4 = v181;
      v9 = v294;
      if (v294 >= v181)
        goto LABEL_171;
    }
    if (sub_24978B870(v38, v39, v36, v37) == 2
      && sub_24978B8C8(v38, v39, v41 | (v394 << 16) | (v397 << 24) | (v400 << 32) | (v403 << 40) | (v406 << 48) | (v409 << 56), v42 | (v418 << 16) | (v421 << 24) | (v424 << 32) | (v427 << 40) | (v430 << 48) | (v439 << 56), v36, v37, v581 | (v261 << 16) | (v260 << 24) | (v259 << 32) | (v258 << 40) | (v257 << 48) | (v256 << 56), v586 | (v253 << 16) | (v252 << 24) | (v251 << 32) | (v250 << 40) | (v249 << 48) | (v248 << 56)) == 2)
    {
      sub_24978B990(v44, v43);
    }
LABEL_41:
    LOBYTE(__s1) = v522;
    BYTE1(__s1) = v519;
    BYTE2(__s1) = v516;
    BYTE3(__s1) = v196;
    BYTE4(__s1) = v194;
    BYTE5(__s1) = v192;
    BYTE6(__s1) = v190;
    BYTE7(__s1) = v343;
    BYTE8(__s1) = v340;
    BYTE9(__s1) = v337;
    BYTE10(__s1) = v513;
    BYTE11(__s1) = v510;
    BYTE12(__s1) = v334;
    BYTE13(__s1) = v331;
    BYTE14(__s1) = v329;
    HIBYTE(__s1) = v327;
    v658 = v325;
    v659 = v323;
    v660 = v321;
    v661 = v319;
    v662 = v317;
    v663 = v315;
    v664 = v313;
    v665 = v311;
    v666 = v309;
    v667 = v307;
    v668 = v305;
    v669 = v303;
    v670 = v301;
    v671 = __src;
    v672 = v295;
    v673 = v290;
    v674 = v288;
    v675 = v286;
    LOBYTE(v676) = v284;
    BYTE1(v676) = v282;
    BYTE2(v676) = v280;
    BYTE3(v676) = v278;
    BYTE4(v676) = v275;
    BYTE5(v676) = v274;
    BYTE6(v676) = v273;
    HIBYTE(v676) = v272;
    v677 = v271;
    v678 = v270;
    v679 = v269;
    v680 = v267;
    v681 = v266;
    v682 = v265;
    v683 = v263;
    v684 = v262;
    v685 = v261;
    v686 = v260;
    v687 = v259;
    v688 = v258;
    v689 = v257;
    v690 = v256;
    v691 = v255;
    v692 = v254;
    v693 = v253;
    v694 = v252;
    v695 = v251;
    v696 = v250;
    v697 = v249;
    v698 = v248;
    v699 = v215;
    v700 = v233;
    v701 = v230;
    __s2 = v507;
    v591 = v504;
    v592 = v501;
    v593 = v498;
    v594 = v495;
    v595 = v492;
    v596 = v489;
    v597 = v486;
    v598 = v246;
    v599 = v245;
    v600 = v244;
    v601 = v243;
    v602 = v242;
    v603 = v241;
    v604 = v239;
    v605 = v237;
    v606 = v235;
    v607 = v247;
    v608 = v346;
    v609 = v349;
    v610 = v352;
    v611 = v355;
    v612 = v358;
    v613 = v361;
    v614 = v364;
    v615 = v367;
    v616 = v370;
    v617 = v373;
    v618 = v376;
    v619 = v379;
    v620 = v382;
    v621 = v385;
    v622 = v576;
    v623 = v572;
    v624 = v569;
    v625 = v566;
    v626 = v563;
    v627 = v560;
    v628 = v557;
    v629 = v554;
    v630 = v551;
    v631 = v548;
    v632 = v544;
    v633 = v540;
    v634 = v536;
    v635 = v532;
    v636 = v528;
    v637 = v525;
    v638 = v388;
    v639 = v391;
    v640 = v394;
    v641 = v397;
    v642 = v400;
    v643 = v403;
    v644 = v406;
    v645 = v409;
    v646 = v412;
    v647 = v415;
    v648 = v418;
    v649 = v421;
    v650 = v424;
    v651 = v427;
    v652 = v430;
    v653 = v439;
    v654 = v217;
    v655 = v436;
    v656 = v433;
    static UniversalControlLink.< infix(_:_:)(&__s2, (unsigned __int8 *)&__s1);
    v9 = v184;
    v17 = v184 + 2;
    v4 = v181;
    if (v184 + 2 >= v181)
    {
      v2 = v178;
      goto LABEL_9;
    }
    v18 = 0;
    v2 = v178;
    goto LABEL_43;
  }
  if (v4 < 0)
    goto LABEL_206;
  if (v4)
    sub_2497FE5CC(0, v4, 1, a1);
}

char *sub_2497FD644(char *result, char *a2, char *a3, uint64_t *a4)
{
  _QWORD *v4;
  char *v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  __int8 v12;
  __int8 v13;
  __int8 v14;
  __int8 v15;
  __int8 v16;
  __int8 v17;
  __int8 v18;
  __int8 v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  __int8 v28;
  __int8 v29;
  double v30;
  double v31;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  int8x8_t v42;
  int8x8_t v43;
  char *v45;
  _QWORD *v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  char *v56;
  char v57;
  char v58;
  __int8 v59;
  __int8 v60;
  __int8 v61;
  __int8 v62;
  __int8 v63;
  __int8 v64;
  __int8 v65;
  __int8 v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  __int8 v75;
  __int8 v76;
  __int8 v77;
  __int8 v78;
  __int8 v79;
  __int8 v80;
  __int8 v81;
  __int8 v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  __int8 v91;
  __int8 v92;
  __int8 v93;
  __int8 v94;
  __int8 v95;
  __int8 v96;
  __int8 v97;
  __int8 v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  __int8 v109;
  __int8 v110;
  __int8 v111;
  __int8 v112;
  __int8 v113;
  char v114;
  char v115;
  __int8 v116;
  __int8 v117;
  __int8 v118;
  __int8 v119;
  __int8 v120;
  __int8 v121;
  __int8 v122;
  __int8 v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  int8x8_t v134;
  __int8 v135;
  char v136;
  __int16 v137;
  char v138;
  int v139;
  char v140;
  __int128 v141;
  char *v142;
  __int8 v143;
  __int8 v144;
  __int8 v145;
  __int8 v146;
  __int8 v147;
  __int8 v148;
  __int8 v149;
  __int8 v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  __int8 v160;
  __int8 v161;
  __int8 v162;
  __int8 v163;
  __int8 v164;
  __int8 v165;
  __int8 v166;
  __int8 v167;
  char v168;
  char v169;
  char v170;
  char v171;
  char v172;
  char v173;
  char __s2;
  char v175;
  char v176;
  char v177;
  char v178;
  char v179;
  int8x8_t v180;
  char v181;
  char v182;
  char __s1;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  int8x8_t v189;
  char v190;
  char v191;
  uint64_t v192;

  v45 = result;
  v192 = *MEMORY[0x24BDAC8D0];
  if (a3 != a2)
  {
    v53 = *a4;
    v4 = (_QWORD *)(*a4 + 80 * (_QWORD)a3 + 72);
    do
    {
      v56 = a3;
      v5 = (char *)(v53 + 80 * (_QWORD)a3);
      v172 = v5[1];
      v173 = *v5;
      v170 = v5[3];
      v171 = v5[2];
      v168 = v5[5];
      v169 = v5[4];
      v166 = v5[7];
      v167 = v5[6];
      v164 = v5[9];
      v165 = v5[8];
      v162 = v5[11];
      v163 = v5[10];
      v160 = v5[13];
      v161 = v5[12];
      v158 = v5[15];
      v159 = v5[14];
      v155 = v5[17];
      v156 = v5[16];
      v153 = v5[19];
      v154 = v5[18];
      v151 = v5[21];
      v152 = v5[20];
      v149 = v5[23];
      v150 = v5[22];
      v147 = v5[25];
      v148 = v5[24];
      v146 = v5[26];
      v145 = v5[27];
      v144 = v5[28];
      v143 = v5[29];
      v134 = *(int8x8_t *)(v5 + 38);
      v105 = v5[30];
      v106 = v5[31];
      v129 = v5[32];
      v130 = v5[33];
      v131 = v5[34];
      v132 = v5[35];
      v133 = v5[36];
      v157 = v5[37];
      v138 = v5[46];
      v136 = v5[47];
      v88 = v5[48];
      v142 = v45;
      v46 = v4;
      do
      {
        v86 = *((_BYTE *)v4 - 22);
        v87 = *((_BYTE *)v4 - 23);
        v84 = *((_BYTE *)v4 - 20);
        v85 = *((_BYTE *)v4 - 21);
        v82 = *((_BYTE *)v4 - 18);
        v83 = *((_BYTE *)v4 - 19);
        v80 = *((_BYTE *)v4 - 16);
        v81 = *((_BYTE *)v4 - 17);
        v78 = *((_BYTE *)v4 - 14);
        v79 = *((_BYTE *)v4 - 15);
        v76 = *((_BYTE *)v4 - 12);
        v77 = *((_BYTE *)v4 - 13);
        v74 = *((_BYTE *)v4 - 10);
        v75 = *((_BYTE *)v4 - 11);
        v73 = *((_BYTE *)v4 - 9);
        v55 = *((unsigned __int8 *)v4 - 8);
        v50 = *((unsigned __int16 *)v4 - 3);
        v48 = *((unsigned __int16 *)v4 - 2);
        v52 = *v4;
        v6 = *((_BYTE *)v4 - 152);
        v7 = *((_BYTE *)v4 - 151);
        v8 = *((_BYTE *)v4 - 150);
        v9 = *((_BYTE *)v4 - 149);
        v10 = *((_BYTE *)v4 - 148);
        v11 = *((_BYTE *)v4 - 147);
        v12 = *((_BYTE *)v4 - 146);
        v13 = *((_BYTE *)v4 - 145);
        v14 = *((_BYTE *)v4 - 144);
        v15 = *((_BYTE *)v4 - 143);
        v16 = *((_BYTE *)v4 - 142);
        v17 = *((_BYTE *)v4 - 141);
        v18 = *((_BYTE *)v4 - 140);
        v19 = *((_BYTE *)v4 - 139);
        v20 = *((_BYTE *)v4 - 138);
        v21 = *((_BYTE *)v4 - 137);
        v104 = *((_BYTE *)v4 - 136);
        v103 = *((_BYTE *)v4 - 135);
        v102 = *((_BYTE *)v4 - 134);
        v101 = *((_BYTE *)v4 - 133);
        v100 = *((_BYTE *)v4 - 132);
        v99 = *((_BYTE *)v4 - 131);
        v98 = *((_BYTE *)v4 - 130);
        v97 = *((_BYTE *)v4 - 129);
        v96 = *((_BYTE *)v4 - 128);
        v95 = *((_BYTE *)v4 - 127);
        v94 = *((_BYTE *)v4 - 126);
        v93 = *((_BYTE *)v4 - 125);
        v92 = *((_BYTE *)v4 - 124);
        v91 = *((_BYTE *)v4 - 123);
        v90 = *((_BYTE *)v4 - 122);
        v89 = *((_BYTE *)v4 - 121);
        v140 = *((_BYTE *)v4 - 120);
        v128 = *((_BYTE *)v4 - 119);
        v127 = *((_BYTE *)v4 - 118);
        v126 = *((_BYTE *)v4 - 117);
        v125 = *((_BYTE *)v4 - 116);
        v124 = *((_BYTE *)v4 - 115);
        v123 = *((_BYTE *)v4 - 114);
        v122 = *((_BYTE *)v4 - 113);
        v121 = *((_BYTE *)v4 - 112);
        v120 = *((_BYTE *)v4 - 111);
        v119 = *((_BYTE *)v4 - 110);
        v118 = *((_BYTE *)v4 - 109);
        v117 = *((_BYTE *)v4 - 108);
        v116 = *((_BYTE *)v4 - 107);
        v115 = *((_BYTE *)v4 - 106);
        v114 = *((_BYTE *)v4 - 105);
        v72 = *((_BYTE *)v4 - 104);
        v71 = *((_BYTE *)v4 - 103);
        v70 = *((_BYTE *)v4 - 102);
        v69 = *((_BYTE *)v4 - 101);
        v68 = *((_BYTE *)v4 - 100);
        v67 = *((_BYTE *)v4 - 99);
        v66 = *((_BYTE *)v4 - 98);
        v65 = *((_BYTE *)v4 - 97);
        v64 = *((_BYTE *)v4 - 96);
        v63 = *((_BYTE *)v4 - 95);
        v62 = *((_BYTE *)v4 - 94);
        v61 = *((_BYTE *)v4 - 93);
        v60 = *((_BYTE *)v4 - 92);
        v59 = *((_BYTE *)v4 - 91);
        v58 = *((_BYTE *)v4 - 90);
        v57 = *((_BYTE *)v4 - 89);
        v54 = *((unsigned __int8 *)v4 - 88);
        v49 = *((unsigned __int16 *)v4 - 43);
        v47 = *((unsigned __int16 *)v4 - 42);
        v51 = *(v4 - 10);
        __s1 = v173;
        v184 = v172;
        v185 = v171;
        v186 = v170;
        v187 = v169;
        v188 = v168;
        v189.i8[0] = v167;
        v189.i8[1] = v166;
        v189.i8[2] = v165;
        v189.i8[3] = v164;
        v189.i8[4] = v163;
        v189.i8[5] = v162;
        v189.i8[6] = v161;
        v189.i8[7] = v160;
        v190 = v159;
        v191 = v158;
        v22 = v6;
        __s2 = v6;
        v23 = v7;
        v175 = v7;
        v24 = v8;
        v176 = v8;
        v25 = v9;
        v177 = v9;
        v26 = v10;
        v178 = v10;
        v27 = v11;
        v179 = v11;
        v28 = v12;
        v180.i8[0] = v12;
        v113 = v13;
        v180.i8[1] = v13;
        v29 = v14;
        v180.i8[2] = v14;
        v180.i8[3] = v15;
        v112 = v16;
        v180.i8[4] = v16;
        v111 = v17;
        v180.i8[5] = v17;
        v110 = v18;
        v180.i8[6] = v18;
        v109 = v19;
        v180.i8[7] = v19;
        v108 = v20;
        v181 = v20;
        v107 = v21;
        v182 = v21;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v22;
          v184 = v23;
          v185 = v24;
          v186 = v25;
          v187 = v26;
          v188 = v27;
          v189.i8[0] = v28;
          v189.i8[1] = v113;
          v189.i8[2] = v29;
          v189.i8[3] = v15;
          v189.i8[4] = v112;
          v189.i8[5] = v111;
          v189.i8[6] = v110;
          v189.i8[7] = v109;
          v190 = v108;
          v191 = v107;
          __s2 = v173;
          v175 = v172;
          v176 = v171;
          v177 = v170;
          v178 = v169;
          v179 = v168;
          v180.i8[0] = v167;
          v180.i8[1] = v166;
          v180.i8[2] = v165;
          v180.i8[3] = v164;
          v180.i8[4] = v163;
          v180.i8[5] = v162;
          v180.i8[6] = v161;
          v180.i8[7] = v160;
          v181 = v159;
          v182 = v158;
          result = (char *)memcmp(&__s1, &__s2, 0x10uLL);
          if ((result & 0x80000000) != 0)
            break;
          __s1 = v129;
          v184 = v130;
          v185 = v131;
          v186 = v132;
          v187 = v133;
          v188 = v157;
          v189 = v134;
          v190 = v138;
          v191 = v136;
          __s2 = v140;
          v175 = v128;
          v176 = v127;
          v177 = v126;
          v178 = v125;
          v179 = v124;
          v180.i8[0] = v123;
          v180.i8[1] = v122;
          v180.i8[2] = v121;
          v180.i8[3] = v120;
          v180.i8[4] = v119;
          v180.i8[5] = v118;
          v180.i8[6] = v117;
          v180.i8[7] = v116;
          v181 = v115;
          v182 = v114;
          if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
          {
            __s1 = v140;
            v184 = v128;
            v185 = v127;
            v186 = v126;
            v187 = v125;
            v188 = v124;
            v189.i8[0] = v123;
            v189.i8[1] = v122;
            v189.i8[2] = v121;
            v189.i8[3] = v120;
            v189.i8[4] = v119;
            v189.i8[5] = v118;
            v189.i8[6] = v117;
            v189.i8[7] = v116;
            v190 = v115;
            v191 = v114;
            __s2 = v129;
            v175 = v130;
            v176 = v131;
            v177 = v132;
            v178 = v133;
            v179 = v157;
            v180 = v134;
            v181 = v138;
            v182 = v136;
            result = (char *)memcmp(&__s1, &__s2, 0x10uLL);
            if ((result & 0x80000000) != 0)
              break;
            __s1 = v156;
            v184 = v155;
            v185 = v154;
            v186 = v153;
            v187 = v152;
            v188 = v151;
            v189.i8[0] = v150;
            v189.i8[1] = v149;
            v189.i8[2] = v148;
            v189.i8[3] = v147;
            v189.i8[4] = v146;
            v189.i8[5] = v145;
            v189.i8[6] = v144;
            v189.i8[7] = v143;
            v190 = v105;
            v191 = v106;
            __s2 = v104;
            v175 = v103;
            v176 = v102;
            v177 = v101;
            v178 = v100;
            v179 = v99;
            v180.i8[0] = v98;
            v180.i8[1] = v97;
            v180.i8[2] = v96;
            v180.i8[3] = v95;
            v180.i8[4] = v94;
            v180.i8[5] = v93;
            v180.i8[6] = v92;
            v180.i8[7] = v91;
            v181 = v90;
            v182 = v89;
            if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
            {
              __s1 = v104;
              v184 = v103;
              v185 = v102;
              v186 = v101;
              v187 = v100;
              v188 = v99;
              v189.i8[0] = v98;
              v189.i8[1] = v97;
              v189.i8[2] = v96;
              v189.i8[3] = v95;
              v189.i8[4] = v94;
              v189.i8[5] = v93;
              v189.i8[6] = v92;
              v189.i8[7] = v91;
              v190 = v90;
              v191 = v89;
              __s2 = v156;
              v175 = v155;
              v176 = v154;
              v177 = v153;
              v178 = v152;
              v179 = v151;
              v180.i8[0] = v150;
              v180.i8[1] = v149;
              v180.i8[2] = v148;
              v180.i8[3] = v147;
              v180.i8[4] = v146;
              v180.i8[5] = v145;
              v180.i8[6] = v144;
              v180.i8[7] = v143;
              v181 = v105;
              v182 = v106;
              result = (char *)memcmp(&__s1, &__s2, 0x10uLL);
              if ((result & 0x80000000) != 0)
                break;
              __s1 = v88;
              v184 = v87;
              v185 = v86;
              v186 = v85;
              v187 = v84;
              v188 = v83;
              v189.i8[0] = v82;
              v189.i8[1] = v81;
              v189.i8[2] = v80;
              v189.i8[3] = v79;
              v189.i8[4] = v78;
              v189.i8[5] = v77;
              v189.i8[6] = v76;
              v189.i8[7] = v75;
              v190 = v74;
              v191 = v73;
              __s2 = v72;
              v175 = v71;
              v176 = v70;
              v177 = v69;
              v178 = v68;
              v179 = v67;
              v180.i8[0] = v66;
              v180.i8[1] = v65;
              v180.i8[2] = v64;
              v180.i8[3] = v63;
              v180.i8[4] = v62;
              v180.i8[5] = v61;
              v180.i8[6] = v60;
              v180.i8[7] = v59;
              v181 = v58;
              v182 = v57;
              if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
              {
                __s1 = v72;
                v184 = v71;
                v185 = v70;
                v186 = v69;
                v187 = v68;
                v188 = v67;
                v189.i8[0] = v66;
                v189.i8[1] = v65;
                v189.i8[2] = v64;
                v189.i8[3] = v63;
                v189.i8[4] = v62;
                v189.i8[5] = v61;
                v189.i8[6] = v60;
                v189.i8[7] = v59;
                v190 = v58;
                v191 = v57;
                __s2 = v88;
                v175 = v87;
                v176 = v86;
                v177 = v85;
                v178 = v84;
                v179 = v83;
                v180.i8[0] = v82;
                v180.i8[1] = v81;
                v180.i8[2] = v80;
                v180.i8[3] = v79;
                v180.i8[4] = v78;
                v180.i8[5] = v77;
                v180.i8[6] = v76;
                v180.i8[7] = v75;
                v181 = v74;
                v182 = v73;
                result = (char *)memcmp(&__s1, &__s2, 0x10uLL);
                if ((result & 0x80000000) != 0)
                  break;
                if (v55 >= v54)
                {
                  if (v54 < v55)
                    break;
                  v30 = (double)v51 / 1000.0;
                  v31 = (double)v52 / 1000.0;
                  if (v30 >= v31)
                  {
                    if (v31 < v30)
                      break;
                    if (v50 >= v49 && (v49 < v50 || v48 >= v47))
                      break;
                  }
                }
              }
            }
          }
        }
        if (!v53)
          __break(1u);
        v172 = *((_BYTE *)v4 - 71);
        v173 = *((_BYTE *)v4 - 72);
        v170 = *((_BYTE *)v4 - 69);
        v171 = *((_BYTE *)v4 - 70);
        v168 = *((_BYTE *)v4 - 67);
        v169 = *((_BYTE *)v4 - 68);
        v166 = *((_BYTE *)v4 - 65);
        v167 = *((_BYTE *)v4 - 66);
        v164 = *((_BYTE *)v4 - 63);
        v165 = *((_BYTE *)v4 - 64);
        v162 = *((_BYTE *)v4 - 61);
        v163 = *((_BYTE *)v4 - 62);
        v160 = *((_BYTE *)v4 - 59);
        v161 = *((_BYTE *)v4 - 60);
        v158 = *((_BYTE *)v4 - 57);
        v159 = *((_BYTE *)v4 - 58);
        v155 = *((_BYTE *)v4 - 55);
        v156 = *((_BYTE *)v4 - 56);
        v153 = *((_BYTE *)v4 - 53);
        v154 = *((_BYTE *)v4 - 54);
        v151 = *((_BYTE *)v4 - 51);
        v152 = *((_BYTE *)v4 - 52);
        v149 = *((_BYTE *)v4 - 49);
        v150 = *((_BYTE *)v4 - 50);
        v147 = *((_BYTE *)v4 - 47);
        v148 = *((_BYTE *)v4 - 48);
        v146 = *((_BYTE *)v4 - 46);
        v145 = *((_BYTE *)v4 - 45);
        v144 = *((_BYTE *)v4 - 44);
        v143 = *((_BYTE *)v4 - 43);
        v141 = *(_OWORD *)((char *)v4 - 33);
        v33 = *(_QWORD *)((char *)v4 - 17);
        v34 = *((_BYTE *)v4 - 42);
        v35 = *((_BYTE *)v4 - 41);
        v36 = *((_BYTE *)v4 - 40);
        v37 = *((_BYTE *)v4 - 39);
        v38 = *((_BYTE *)v4 - 38);
        v39 = *((_BYTE *)v4 - 37);
        v40 = *((_BYTE *)v4 - 36);
        v157 = *((_BYTE *)v4 - 35);
        v135 = *((_BYTE *)v4 - 34);
        v137 = *(_WORD *)((char *)v4 - 9);
        v139 = *(_DWORD *)((char *)v4 - 6);
        v41 = *v4;
        result = (char *)memcpy(v4 - 9, v4 - 19, 0x50uLL);
        *(v4 - 10) = v41;
        v4 -= 10;
        *((_BYTE *)v4 - 72) = v173;
        *((_BYTE *)v4 - 71) = v172;
        *((_BYTE *)v4 - 70) = v171;
        *((_BYTE *)v4 - 69) = v170;
        *((_BYTE *)v4 - 68) = v169;
        *((_BYTE *)v4 - 67) = v168;
        *((_BYTE *)v4 - 66) = v167;
        *((_BYTE *)v4 - 65) = v166;
        *((_BYTE *)v4 - 64) = v165;
        *((_BYTE *)v4 - 63) = v164;
        *((_BYTE *)v4 - 62) = v163;
        *((_BYTE *)v4 - 61) = v162;
        *((_BYTE *)v4 - 60) = v161;
        *((_BYTE *)v4 - 59) = v160;
        *((_BYTE *)v4 - 58) = v159;
        *((_BYTE *)v4 - 57) = v158;
        *((_BYTE *)v4 - 56) = v156;
        *((_BYTE *)v4 - 55) = v155;
        *((_BYTE *)v4 - 54) = v154;
        *((_BYTE *)v4 - 53) = v153;
        *((_BYTE *)v4 - 52) = v152;
        *((_BYTE *)v4 - 51) = v151;
        *((_BYTE *)v4 - 50) = v150;
        *((_BYTE *)v4 - 49) = v149;
        *((_BYTE *)v4 - 48) = v148;
        *((_BYTE *)v4 - 47) = v147;
        *((_BYTE *)v4 - 46) = v146;
        *((_BYTE *)v4 - 45) = v145;
        *((_BYTE *)v4 - 44) = v144;
        *((_BYTE *)v4 - 43) = v143;
        v105 = v34;
        *((_BYTE *)v4 - 42) = v34;
        v106 = v35;
        *((_BYTE *)v4 - 41) = v35;
        v129 = v36;
        *((_BYTE *)v4 - 40) = v36;
        v130 = v37;
        *((_BYTE *)v4 - 39) = v37;
        v131 = v38;
        *((_BYTE *)v4 - 38) = v38;
        v132 = v39;
        *((_BYTE *)v4 - 37) = v39;
        v133 = v40;
        *((_BYTE *)v4 - 36) = v40;
        *((_BYTE *)v4 - 35) = v157;
        *((_BYTE *)v4 - 34) = v135;
        *(_OWORD *)((char *)v4 - 33) = v141;
        *(_QWORD *)((char *)v4 - 17) = v33;
        *(_WORD *)((char *)v4 - 9) = v137;
        *(_DWORD *)((char *)v4 - 6) = v139;
        v138 = BYTE7(v141);
        v136 = BYTE8(v141);
        v43 = vext_s8(v42, *(int8x8_t *)&v141, 7uLL);
        v43.i8[0] = v135;
        v134 = v43;
        v88 = BYTE9(v141);
        ++v142;
      }
      while (v56 != v142);
      a3 = v56 + 1;
      v4 = v46 + 10;
    }
    while (v56 + 1 != a2);
  }
  return result;
}

void sub_2497FE5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  double *v4;
  __int128 v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  unsigned __int8 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  char v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint16x8_t v34;
  char v35;
  int v36;
  int16x8_t v37;
  int16x8_t v38;
  int16x8_t v39;
  uint64_t v40;
  int v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  int v52;
  uint64_t v53;
  unsigned __int8 v54;
  char v55;
  char v56;
  char v57;
  char v58;
  uint64x2_t v59;
  int8x16_t v60;
  uint64x2_t v61;
  int8x16_t v62;
  unint64_t v63;
  uint32x4_t v64;
  uint64x2_t v65;
  int8x16_t v66;
  unint64_t v67;
  char v68;
  char v69;
  char v70;
  unsigned __int8 v71;
  char v72;
  uint32x4_t v73;
  uint64x2_t v74;
  uint64x2_t v75;
  int8x16_t v76;
  uint64_t v77;
  uint32x4_t v78;
  uint64x2_t v79;
  int8x16_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64x2_t v93;
  int8x16_t v94;
  uint64x2_t v95;
  int8x16_t v96;
  unint64_t v97;
  uint32x4_t v98;
  uint64x2_t v99;
  int8x16_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64x2_t v105;
  int8x16_t v106;
  uint64x2_t v107;
  int8x16_t v108;
  unint64_t v109;
  uint32x4_t v110;
  uint64x2_t v111;
  int8x16_t v112;
  unint64_t v113;
  char v115;
  uint64_t v116;
  unsigned __int8 v117;
  __int16 v118;
  double v119;
  uint64_t v120;
  int v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;
  int v127;
  int v128;
  int v129;
  int v130;
  uint32x4_t v132;
  uint64x2_t v133;
  uint64x2_t v134;
  int8x16_t v135;
  unint64_t v136;
  uint32x4_t v137;
  uint64x2_t v138;
  int8x16_t v139;
  double *v142;
  int16x8_t v143;
  int16x8_t v144;
  int16x8_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unsigned __int8 v149;
  unsigned __int8 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int16x8_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int v175;
  unsigned int v176;
  uint64_t v177;
  unsigned __int8 v178;
  unsigned __int8 v179;
  unsigned __int8 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char v198;
  unsigned __int8 v199;
  unsigned __int8 v200;
  char v201;
  char v202;
  char v203;
  char v204;
  char v205;
  char v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unsigned int v221;
  unsigned int v222;
  uint64_t v223;
  uint64_t v224;
  __int16 v225;
  __int128 v226;
  char v227;
  uint64_t v228;
  unsigned __int8 v229;
  unsigned __int8 v230;
  __int16 v231;
  unsigned __int8 v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  char v238;
  char v239;
  char v240;
  unsigned __int8 v241;
  char v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char v256;
  char v257;
  unsigned __int8 v258;
  unsigned __int8 v259;
  char v260;
  char v261;
  unsigned __int8 v262;
  char v263;
  char v264;
  unsigned int v265;
  __int128 v266;
  uint64_t v267;
  unsigned int v268;
  int v269;
  uint64_t v270;
  __int128 v271;
  uint64_t v272;
  char v273;
  uint64_t v274;
  int v275;
  char v276;
  char v277;
  char v278;
  char v279;
  char v280;
  char v281;
  unsigned __int8 v282;
  unsigned __int8 v283;
  char v284;
  char v285;
  unsigned __int8 v286;
  char v287;
  char v288;
  char v289;
  char v290;
  unsigned __int8 __s2;
  char v292;
  unsigned __int8 v293;
  unsigned __int32 v294;
  __int16 v295;
  unsigned __int32 v296;
  unsigned __int8 v297;
  unsigned __int8 v298;
  char v299;
  char v300;
  char v301;
  char v302;
  char v303;
  char v304;
  char v305;
  char v306;
  char v307;
  char v308;
  char v309;
  char v310;
  char v311;
  char v312;
  char v313;
  char v314;
  char v315;
  char v316;
  char v317;
  char v318;
  char v319;
  char v320;
  char v321;
  char v322;
  char v323;
  char v324;
  char v325;
  char v326;
  char v327;
  char v328;
  char v329;
  char v330;
  char v331;
  char v332;
  char v333;
  char v334;
  char v335;
  char v336;
  char v337;
  char v338;
  char v339;
  char v340;
  char v341;
  char v342;
  char v343;
  char v344;
  char v345;
  char v346;
  char v347;
  char v348;
  __int16 v349;
  __int16 v350;
  unsigned __int8 __s1;
  char v352;
  unsigned __int8 v353;
  _BYTE v354[6];
  unsigned __int32 v355;
  unsigned __int8 v356;
  unsigned __int8 v357;
  char v358;
  char v359;
  char v360;
  unsigned __int8 v361;
  char v362;
  uint64_t v363;
  char v364;
  unsigned __int8 v365;
  unsigned __int8 v366;
  char v367;
  char v368;
  char v369;
  char v370;
  char v371;
  char v372;
  char v373;
  char v374;
  char v375;
  char v376;
  char v377;
  char v378;
  char v379;
  char v380;
  char v381;
  char v382;
  char v383;
  char v384;
  char v385;
  unsigned __int8 v386;
  unsigned __int8 v387;
  __int8 v388;
  __int8 v389;
  __int8 v390;
  __int8 v391;
  unsigned __int8 v392;
  char v393;
  char v394;
  char v395;
  char v396;
  unsigned __int8 v397;
  unsigned __int8 v398;
  char v399;
  char v400;
  __int16 v401;
  __int16 v402;
  uint64_t v403;

  v403 = *MEMORY[0x24BDAC8D0];
  if (a3 == a2)
    return;
  v173 = *a4;
  v4 = (double *)(*a4 + 80 * a3 + 72);
  *((_QWORD *)&v5 + 1) = 48;
  do
  {
    v174 = a3;
    v6 = v173 + 80 * a3;
    v7 = *(_BYTE *)v6;
    v8 = *(_BYTE *)(v6 + 1);
    v9 = *(_BYTE *)(v6 + 2);
    v10 = *(_BYTE *)(v6 + 3);
    v256 = *(_BYTE *)(v6 + 4);
    v278 = *(_BYTE *)(v6 + 5);
    v277 = *(_BYTE *)(v6 + 6);
    v279 = *(_BYTE *)(v6 + 7);
    v11 = *(_BYTE *)(v6 + 8);
    v12 = *(_BYTE *)(v6 + 9);
    v276 = *(_BYTE *)(v6 + 10);
    v13 = *(_BYTE *)(v6 + 11);
    v14 = *(_BYTE *)(v6 + 12);
    v15 = *(_BYTE *)(v6 + 13);
    v16 = *(_BYTE *)(v6 + 14);
    v17 = *(_BYTE *)(v6 + 15);
    v228 = *(unsigned __int8 *)(v6 + 16);
    v267 = *(unsigned __int8 *)(v6 + 17);
    v232 = *(_BYTE *)(v6 + 18);
    v231 = *(unsigned __int8 *)(v6 + 19);
    *(_QWORD *)&v5 = *(_QWORD *)(v6 + 20);
    v226 = v5;
    v225 = *(unsigned __int8 *)(v6 + 28);
    v230 = *(_BYTE *)(v6 + 29);
    v255 = a1;
    v142 = v4;
    v229 = *(_BYTE *)(v6 + 30);
    while (1)
    {
      v257 = v17;
      v258 = v16;
      v259 = v15;
      v260 = v14;
      v287 = v13;
      v289 = v11;
      v280 = v10;
      v282 = v9;
      v284 = v8;
      v18 = *v4;
      v262 = *((_BYTE *)v4 - 152);
      v19 = *(v4 - 10);
      if (v19 < *v4)
        goto LABEL_46;
      if (v18 < v19)
        goto LABEL_65;
      v167 = *((unsigned __int8 *)v4 - 41);
      v20 = *((unsigned __int8 *)v4 - 39);
      v21 = *((unsigned __int8 *)v4 - 38);
      v22 = *((unsigned __int8 *)v4 - 37);
      v23 = *((unsigned __int8 *)v4 - 36);
      v24 = *((unsigned __int8 *)v4 - 35);
      v25 = *((unsigned __int8 *)v4 - 34);
      v26 = *((unsigned __int8 *)v4 - 33);
      v27 = *((unsigned __int8 *)v4 - 32);
      v28 = *((unsigned __int8 *)v4 - 31);
      v29 = *((unsigned __int8 *)v4 - 30);
      v30 = *((unsigned __int8 *)v4 - 29);
      v31 = *((unsigned __int8 *)v4 - 28);
      v32 = *((unsigned __int8 *)v4 - 27);
      v33 = *((unsigned __int8 *)v4 - 26);
      v224 = *((unsigned __int8 *)v4 - 25);
      v152 = *((unsigned __int8 *)v4 - 24);
      v151 = *((unsigned __int8 *)v4 - 23);
      v150 = *((_BYTE *)v4 - 22);
      v149 = *((_BYTE *)v4 - 21);
      LODWORD(v18) = *((_DWORD *)v4 - 5);
      v34 = vmovl_u8(*(uint8x8_t *)&v18);
      v168 = (int16x8_t)v34;
      v180 = *((_BYTE *)v4 - 16);
      v34.i32[0] = *(_DWORD *)((char *)v4 - 15);
      v169 = vmovl_u8(*(uint8x8_t *)v34.i8).u64[0];
      v179 = *((_BYTE *)v4 - 11);
      v178 = *((_BYTE *)v4 - 10);
      v177 = *((unsigned __int8 *)v4 - 9);
      v148 = *((unsigned __int8 *)v4 - 8);
      v176 = *((unsigned __int16 *)v4 - 3);
      v175 = *((unsigned __int16 *)v4 - 2);
      v242 = *((_BYTE *)v4 - 151);
      v241 = *((_BYTE *)v4 - 150);
      v240 = *((_BYTE *)v4 - 149);
      v239 = *((_BYTE *)v4 - 148);
      v238 = *((_BYTE *)v4 - 147);
      v237 = *((_BYTE *)v4 - 146);
      v206 = *((_BYTE *)v4 - 145);
      v205 = *((_BYTE *)v4 - 144);
      v204 = *((_BYTE *)v4 - 143);
      v203 = *((_BYTE *)v4 - 142);
      v202 = *((_BYTE *)v4 - 141);
      v201 = *((_BYTE *)v4 - 140);
      v200 = *((_BYTE *)v4 - 139);
      v199 = *((_BYTE *)v4 - 138);
      v198 = *((_BYTE *)v4 - 137);
      v197 = *((unsigned __int8 *)v4 - 136);
      v196 = *((unsigned __int8 *)v4 - 135);
      v195 = *((unsigned __int8 *)v4 - 134);
      v194 = *((unsigned __int8 *)v4 - 133);
      v193 = *((unsigned __int8 *)v4 - 132);
      v192 = *((unsigned __int8 *)v4 - 131);
      v191 = *((unsigned __int8 *)v4 - 130);
      v190 = *((unsigned __int8 *)v4 - 129);
      v189 = *((unsigned __int8 *)v4 - 128);
      v188 = *((unsigned __int8 *)v4 - 127);
      v187 = *((unsigned __int8 *)v4 - 126);
      v186 = *((unsigned __int8 *)v4 - 125);
      v185 = *((unsigned __int8 *)v4 - 124);
      v184 = *((unsigned __int8 *)v4 - 123);
      v183 = *((unsigned __int8 *)v4 - 122);
      v182 = *((unsigned __int8 *)v4 - 121);
      v236 = *((unsigned __int8 *)v4 - 120);
      v235 = *((unsigned __int8 *)v4 - 119);
      v234 = *((unsigned __int8 *)v4 - 118);
      v233 = *((unsigned __int8 *)v4 - 117);
      v254 = *((unsigned __int8 *)v4 - 116);
      v253 = *((unsigned __int8 *)v4 - 115);
      v252 = *((unsigned __int8 *)v4 - 114);
      v251 = *((unsigned __int8 *)v4 - 113);
      v250 = *((unsigned __int8 *)v4 - 112);
      v249 = *((unsigned __int8 *)v4 - 111);
      v248 = *((unsigned __int8 *)v4 - 110);
      v247 = *((unsigned __int8 *)v4 - 109);
      v246 = *((unsigned __int8 *)v4 - 108);
      v245 = *((unsigned __int8 *)v4 - 107);
      v244 = *((unsigned __int8 *)v4 - 106);
      v243 = *((unsigned __int8 *)v4 - 105);
      v170 = *((unsigned __int8 *)v4 - 104);
      v207 = *((unsigned __int8 *)v4 - 103);
      v208 = *((unsigned __int8 *)v4 - 102);
      v209 = *((unsigned __int8 *)v4 - 101);
      v210 = *((unsigned __int8 *)v4 - 100);
      v211 = *((unsigned __int8 *)v4 - 99);
      v212 = *((unsigned __int8 *)v4 - 98);
      v213 = *((unsigned __int8 *)v4 - 97);
      v214 = *((unsigned __int8 *)v4 - 96);
      v215 = *((unsigned __int8 *)v4 - 95);
      v216 = *((unsigned __int8 *)v4 - 94);
      v217 = *((unsigned __int8 *)v4 - 93);
      v218 = *((unsigned __int8 *)v4 - 92);
      v219 = *((unsigned __int8 *)v4 - 91);
      v220 = *((unsigned __int8 *)v4 - 90);
      v223 = *((unsigned __int8 *)v4 - 89);
      v181 = *((unsigned __int8 *)v4 - 88);
      v222 = *((unsigned __int16 *)v4 - 43);
      v221 = *((unsigned __int16 *)v4 - 42);
      v166 = *((unsigned __int8 *)v4 - 40);
      __s1 = *((_BYTE *)v4 - 40);
      v165 = v20;
      v352 = v20;
      v164 = v21;
      v353 = v21;
      v163 = v22;
      v354[0] = v22;
      v162 = v23;
      v354[1] = v23;
      v161 = v24;
      v354[2] = v24;
      v160 = v25;
      v354[3] = v25;
      v159 = v26;
      v354[4] = v26;
      v158 = v27;
      v354[5] = v27;
      v157 = v28;
      LOBYTE(v355) = v28;
      v156 = v29;
      BYTE1(v355) = v29;
      v155 = v30;
      BYTE2(v355) = v30;
      v154 = v31;
      HIBYTE(v355) = v31;
      v153 = v32;
      v356 = v32;
      v357 = v33;
      v358 = v224;
      __s2 = v7;
      v292 = v8;
      v293 = v9;
      LOBYTE(v294) = v10;
      BYTE1(v294) = v256;
      BYTE2(v294) = v278;
      HIBYTE(v294) = v277;
      LOBYTE(v295) = v279;
      HIBYTE(v295) = v11;
      LOBYTE(v296) = v12;
      BYTE1(v296) = v276;
      BYTE2(v296) = v13;
      HIBYTE(v296) = v260;
      v297 = v259;
      v298 = v258;
      v299 = v257;
      v35 = v12;
      v36 = memcmp(&__s1, &__s2, 0x10uLL);
      v39.i64[1] = *((_QWORD *)&v226 + 1);
      LOWORD(v40) = BYTE5(v226);
      WORD1(v40) = BYTE6(v226);
      WORD2(v40) = BYTE7(v226);
      HIWORD(v40) = v225;
      if (v36 < 0)
        __asm { BR              X8 }
      v39.i16[0] = v231;
      v39.i16[1] = v226;
      v227 = v35;
      v39.i16[2] = BYTE1(v226);
      v39.i16[3] = BYTE2(v226);
      v144 = v39;
      v38.i64[0] = v169;
      v37.i64[0] = v40;
      v145 = v37;
      v143 = v38;
      v263 = v35;
      __s1 = v236;
      v352 = v235;
      v353 = v234;
      v354[0] = v233;
      v354[1] = v254;
      v354[2] = v253;
      v354[3] = v252;
      v354[4] = v251;
      v354[5] = v250;
      LOBYTE(v355) = v249;
      BYTE1(v355) = v248;
      BYTE2(v355) = v247;
      HIBYTE(v355) = v246;
      v356 = v245;
      v357 = v244;
      v358 = v243;
      __s2 = v262;
      v292 = v242;
      v293 = v241;
      LOBYTE(v294) = v240;
      BYTE1(v294) = v239;
      BYTE2(v294) = v238;
      HIBYTE(v294) = v237;
      LOBYTE(v295) = v206;
      HIBYTE(v295) = v205;
      LOBYTE(v296) = v204;
      BYTE1(v296) = v203;
      BYTE2(v296) = v202;
      HIBYTE(v296) = v201;
      v297 = v200;
      v298 = v199;
      v299 = v198;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X8 }
      __s1 = v7;
      v352 = v284;
      v353 = v282;
      v354[0] = v280;
      v354[1] = v256;
      v354[2] = v278;
      v354[3] = v277;
      v354[4] = v279;
      v354[5] = v289;
      LOBYTE(v355) = v35;
      BYTE1(v355) = v276;
      BYTE2(v355) = v287;
      HIBYTE(v355) = v260;
      v356 = v259;
      v357 = v258;
      v358 = v257;
      __s2 = v262;
      v292 = v242;
      v293 = v241;
      LOBYTE(v294) = v240;
      BYTE1(v294) = v239;
      BYTE2(v294) = v238;
      HIBYTE(v294) = v237;
      LOBYTE(v295) = v206;
      HIBYTE(v295) = v205;
      LOBYTE(v296) = v204;
      BYTE1(v296) = v203;
      BYTE2(v296) = v202;
      HIBYTE(v296) = v201;
      v297 = v200;
      v298 = v199;
      v299 = v198;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_46;
      __s1 = v262;
      v352 = v242;
      v353 = v241;
      v354[0] = v240;
      v354[1] = v239;
      v354[2] = v238;
      v354[3] = v237;
      v354[4] = v206;
      v354[5] = v205;
      LOBYTE(v355) = v204;
      BYTE1(v355) = v203;
      BYTE2(v355) = v202;
      HIBYTE(v355) = v201;
      v356 = v200;
      v357 = v199;
      v358 = v198;
      __s2 = v7;
      v292 = v284;
      v293 = v282;
      LOBYTE(v294) = v280;
      BYTE1(v294) = v256;
      BYTE2(v294) = v278;
      HIBYTE(v294) = v277;
      LOBYTE(v295) = v279;
      HIBYTE(v295) = v289;
      LOBYTE(v296) = v35;
      BYTE1(v296) = v276;
      BYTE2(v296) = v287;
      HIBYTE(v296) = v260;
      v297 = v259;
      v298 = v258;
      v299 = v257;
      v41 = memcmp(&__s1, &__s2, 0x10uLL);
      v42 = v203;
      v43 = v204;
      v44 = v202;
      v45 = v206;
      v46 = v201;
      if ((v41 & 0x80000000) == 0)
      {
        __s1 = v7;
        v352 = v284;
        v353 = v282;
        v354[0] = v280;
        v354[1] = v256;
        v354[2] = v278;
        v354[3] = v277;
        v354[4] = v279;
        v354[5] = v289;
        LOBYTE(v355) = v35;
        BYTE1(v355) = v276;
        BYTE2(v355) = v287;
        HIBYTE(v355) = v260;
        v356 = v259;
        v357 = v258;
        v358 = v257;
        __s2 = v262;
        v292 = v242;
        v293 = v241;
        LOBYTE(v294) = v240;
        BYTE1(v294) = v239;
        BYTE2(v294) = v238;
        HIBYTE(v294) = v237;
        LOBYTE(v295) = v206;
        HIBYTE(v295) = v205;
        LOBYTE(v296) = v204;
        BYTE1(v296) = v203;
        BYTE2(v296) = v202;
        HIBYTE(v296) = v201;
        v297 = v200;
        v298 = v199;
        v299 = v198;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_46;
        __s1 = v262;
        v352 = v242;
        v353 = v241;
        v354[0] = v240;
        v354[1] = v239;
        v354[2] = v238;
        v354[3] = v237;
        v354[4] = v206;
        v354[5] = v205;
        LOBYTE(v355) = v204;
        BYTE1(v355) = v203;
        BYTE2(v355) = v202;
        HIBYTE(v355) = v201;
        v356 = v200;
        v357 = v199;
        v358 = v198;
        __s2 = v7;
        v292 = v284;
        v293 = v282;
        LOBYTE(v294) = v280;
        BYTE1(v294) = v256;
        BYTE2(v294) = v278;
        HIBYTE(v294) = v277;
        LOBYTE(v295) = v279;
        HIBYTE(v295) = v289;
        LOBYTE(v296) = v35;
        BYTE1(v296) = v276;
        BYTE2(v296) = v287;
        HIBYTE(v296) = v260;
        v297 = v259;
        v298 = v258;
        v299 = v257;
        v121 = memcmp(&__s1, &__s2, 0x10uLL);
        v122 = v203;
        v123 = v204;
        v124 = v202;
        v125 = v206;
        v126 = v201;
        if ((v121 & 0x80000000) == 0)
        {
          __s1 = v228;
          v352 = v267;
          v353 = v232;
          *(_DWORD *)v354 = vmovn_s16(v144).u32[0];
          *(_WORD *)&v354[4] = *(_WORD *)((char *)&v226 + 3);
          v355 = vmovn_s16(v145).u32[0];
          v356 = v230;
          v357 = v229;
          v358 = v167;
          __s2 = v197;
          v292 = v196;
          v293 = v195;
          LOBYTE(v294) = v194;
          BYTE1(v294) = v193;
          BYTE2(v294) = v192;
          HIBYTE(v294) = v191;
          LOBYTE(v295) = v190;
          HIBYTE(v295) = v189;
          LOBYTE(v296) = v188;
          BYTE1(v296) = v187;
          BYTE2(v296) = v186;
          HIBYTE(v296) = v185;
          v297 = v184;
          v298 = v183;
          v299 = v182;
          v127 = memcmp(&__s1, &__s2, 0x10uLL);
          v122 = v203;
          v123 = v204;
          v124 = v202;
          v125 = v206;
          v126 = v201;
          if (v127 < 0)
            goto LABEL_46;
        }
        __s1 = v262;
        v352 = v242;
        v353 = v241;
        v354[0] = v240;
        v354[1] = v239;
        v354[2] = v238;
        v354[3] = v237;
        v354[4] = v125;
        v354[5] = v205;
        LOBYTE(v355) = v123;
        BYTE1(v355) = v122;
        BYTE2(v355) = v124;
        HIBYTE(v355) = v126;
        v356 = v200;
        v357 = v199;
        v358 = v198;
        __s2 = v7;
        v292 = v284;
        v293 = v282;
        LOBYTE(v294) = v280;
        BYTE1(v294) = v256;
        BYTE2(v294) = v278;
        HIBYTE(v294) = v277;
        LOBYTE(v295) = v279;
        HIBYTE(v295) = v289;
        LOBYTE(v296) = v35;
        BYTE1(v296) = v276;
        BYTE2(v296) = v287;
        HIBYTE(v296) = v260;
        v297 = v259;
        v298 = v258;
        v299 = v257;
        v128 = memcmp(&__s1, &__s2, 0x10uLL);
        v42 = v203;
        v43 = v204;
        v44 = v202;
        v45 = v206;
        v46 = v201;
        if ((v128 & 0x80000000) == 0)
        {
          __s1 = v7;
          v352 = v284;
          v353 = v282;
          v354[0] = v280;
          v354[1] = v256;
          v354[2] = v278;
          v354[3] = v277;
          v354[4] = v279;
          v354[5] = v289;
          LOBYTE(v355) = v35;
          BYTE1(v355) = v276;
          BYTE2(v355) = v287;
          HIBYTE(v355) = v260;
          v356 = v259;
          v357 = v258;
          v358 = v257;
          __s2 = v262;
          v292 = v242;
          v293 = v241;
          LOBYTE(v294) = v240;
          BYTE1(v294) = v239;
          BYTE2(v294) = v238;
          HIBYTE(v294) = v237;
          LOBYTE(v295) = v206;
          HIBYTE(v295) = v205;
          LOBYTE(v296) = v204;
          BYTE1(v296) = v203;
          BYTE2(v296) = v202;
          HIBYTE(v296) = v201;
          v297 = v200;
          v298 = v199;
          v299 = v198;
          v129 = memcmp(&__s1, &__s2, 0x10uLL);
          v42 = v203;
          v43 = v204;
          v44 = v202;
          v45 = v206;
          v46 = v201;
          if (v129 < 0)
            goto LABEL_58;
          __s1 = v197;
          v352 = v196;
          v353 = v195;
          v354[0] = v194;
          v354[1] = v193;
          v354[2] = v192;
          v354[3] = v191;
          v354[4] = v190;
          v354[5] = v189;
          LOBYTE(v355) = v188;
          BYTE1(v355) = v187;
          BYTE2(v355) = v186;
          HIBYTE(v355) = v185;
          v356 = v184;
          v357 = v183;
          v358 = v182;
          __s2 = v228;
          v292 = v267;
          v293 = v232;
          v294 = vmovn_s16(v144).u32[0];
          v295 = *(_WORD *)((char *)&v226 + 3);
          v296 = vmovn_s16(v145).u32[0];
          v297 = v230;
          v298 = v229;
          v299 = v167;
          v130 = memcmp(&__s1, &__s2, 0x10uLL);
          v42 = v203;
          v43 = v204;
          v44 = v202;
          v45 = v206;
          v46 = v201;
          if ((v130 & 0x80000000) == 0)
          {
LABEL_58:
            if (v148 < v181)
              goto LABEL_46;
            if (v181 >= v148 && v176 < v222)
              goto LABEL_46;
          }
        }
      }
      __s1 = v262;
      v352 = v242;
      v353 = v241;
      v354[0] = v240;
      v354[1] = v239;
      v354[2] = v238;
      v354[3] = v237;
      v354[4] = v45;
      v354[5] = v205;
      LOBYTE(v355) = v43;
      BYTE1(v355) = v42;
      BYTE2(v355) = v44;
      HIBYTE(v355) = v46;
      v356 = v200;
      v357 = v199;
      v358 = v198;
      v47 = v277;
      __s2 = v7;
      v292 = v284;
      v293 = v282;
      LOBYTE(v294) = v280;
      BYTE1(v294) = v256;
      BYTE2(v294) = v278;
      HIBYTE(v294) = v277;
      LOBYTE(v295) = v279;
      HIBYTE(v295) = v289;
      LOBYTE(v296) = v35;
      BYTE1(v296) = v276;
      BYTE2(v296) = v287;
      HIBYTE(v296) = v260;
      v297 = v259;
      v298 = v258;
      v299 = v257;
      v48 = v45;
      v49 = v44;
      v50 = v43;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_64;
      __s1 = v7;
      v352 = v284;
      v353 = v282;
      v354[0] = v280;
      v354[1] = v256;
      v354[2] = v278;
      v354[3] = v277;
      v354[4] = v279;
      v354[5] = v289;
      LOBYTE(v355) = v227;
      BYTE1(v355) = v276;
      BYTE2(v355) = v287;
      HIBYTE(v355) = v260;
      v356 = v259;
      v357 = v258;
      v358 = v257;
      __s2 = v262;
      v292 = v242;
      v293 = v241;
      LOBYTE(v294) = v240;
      BYTE1(v294) = v239;
      BYTE2(v294) = v238;
      HIBYTE(v294) = v237;
      LOBYTE(v295) = v48;
      HIBYTE(v295) = v205;
      LOBYTE(v296) = v50;
      BYTE1(v296) = v42;
      BYTE2(v296) = v49;
      HIBYTE(v296) = v201;
      v297 = v200;
      v298 = v199;
      v299 = v198;
      v261 = v49;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v262;
        v352 = v242;
        v353 = v241;
        v354[0] = v240;
        v354[1] = v239;
        v354[2] = v238;
        v354[3] = v237;
        v354[4] = v48;
        v354[5] = v205;
        LOBYTE(v355) = v204;
        BYTE1(v355) = v203;
        BYTE2(v355) = v49;
        HIBYTE(v355) = v201;
        v356 = v200;
        v357 = v199;
        v358 = v198;
        __s2 = v7;
        v292 = v284;
        v293 = v282;
        LOBYTE(v294) = v280;
        BYTE1(v294) = v256;
        BYTE2(v294) = v278;
        HIBYTE(v294) = v277;
        LOBYTE(v295) = v279;
        HIBYTE(v295) = v289;
        LOBYTE(v296) = v227;
        BYTE1(v296) = v276;
        BYTE2(v296) = v287;
        HIBYTE(v296) = v260;
        v297 = v259;
        v298 = v258;
        v299 = v257;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_64;
        __s1 = v7;
        v352 = v284;
        v353 = v282;
        v354[0] = v280;
        v354[1] = v256;
        v354[2] = v278;
        v354[3] = v277;
        v354[4] = v279;
        v51 = v289;
        v354[5] = v289;
        LOBYTE(v355) = v227;
        BYTE1(v355) = v276;
        BYTE2(v355) = v287;
        HIBYTE(v355) = v260;
        v356 = v259;
        v357 = v258;
        v358 = v257;
        __s2 = v262;
        v292 = v242;
        v293 = v241;
        LOBYTE(v294) = v240;
        BYTE1(v294) = v239;
        BYTE2(v294) = v238;
        HIBYTE(v294) = v237;
        LOBYTE(v295) = v48;
        HIBYTE(v295) = v205;
        LOBYTE(v296) = v204;
        BYTE1(v296) = v203;
        BYTE2(v296) = v261;
        HIBYTE(v296) = v201;
        v297 = v200;
        v298 = v199;
        v299 = v198;
        v52 = memcmp(&__s1, &__s2, 0x10uLL);
        v147 = v167 << 56;
        v53 = v145.i64[0] & 0xFF00FF00FF00FFLL;
        v171 = v197 | (v196 << 8);
        v172 = v189 | (v188 << 8);
        v54 = v282;
        v55 = v280;
        v56 = v256;
        v57 = v278;
        v58 = v279;
        v146 = v145.i64[0] & 0xFF00FF00FF00FFLL;
        if ((v52 & 0x80000000) == 0)
        {
          v59.i64[0] = v144.u16[1];
          v59.i64[1] = v144.u16[2];
          v60.i64[0] = 255;
          v60.i64[1] = 255;
          v61 = (uint64x2_t)vandq_s8((int8x16_t)v59, v60);
          v59.i64[0] = (char)v232;
          v59.i64[1] = v144.u16[0];
          v62 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v59, v60), (uint64x2_t)xmmword_24983B690), (int8x16_t)vshlq_u64(v61, (uint64x2_t)xmmword_24983B680));
          v63 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v62.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v62, v62, 8uLL)) | (v267 << 8) | ((unint64_t)BYTE3(v226) << 56) | ((unint64_t)v144.u8[6] << 48) | v228;
          v64 = vmovl_u16((uint16x4_t)v53);
          v59.i64[0] = v64.u32[0];
          v59.i64[1] = v64.u32[1];
          v65 = v59;
          v59.i64[0] = v64.u32[2];
          v59.i64[1] = v64.u32[3];
          v66 = vorrq_s8((int8x16_t)vshlq_u64(v65, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64(v59, (uint64x2_t)xmmword_24983AE40));
          v67 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v66.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v66, v66, 8uLL)) | ((unint64_t)v230 << 40) | v147 | ((unint64_t)v229 << 48) | BYTE4(v226);
          if (static UniversalControlUUID.compare(lhs:rhs:)(v171 | (v195 << 16) | (v194 << 24) | (v193 << 32) | (v192 << 40) | (v191 << 48) | (v190 << 56), v172 | (v187 << 16) | (v186 << 24) | (v185 << 32) | (v184 << 40) | (v183 << 48) | (v182 << 56), v63, v67) == -1)goto LABEL_64;
          static UniversalControlUUID.compare(lhs:rhs:)(v63, v67, v171 | (v195 << 16) | (v194 << 24) | (v193 << 32) | (v192 << 40) | (v191 << 48) | (v190 << 56), v172 | (v187 << 16) | (v186 << 24) | (v185 << 32) | (v184 << 40) | (v183 << 48) | (v182 << 56));
          v54 = v282;
          v55 = v280;
          v56 = v256;
          v57 = v278;
          v47 = v277;
          v58 = v279;
          v51 = v289;
        }
        __s1 = v7;
        v352 = v284;
        v353 = v54;
        v354[0] = v55;
        v354[1] = v56;
        v354[2] = v57;
        v354[3] = v47;
        v354[4] = v58;
        v354[5] = v51;
        LOBYTE(v355) = v227;
        BYTE1(v355) = v276;
        BYTE2(v355) = v287;
        HIBYTE(v355) = v260;
        v356 = v259;
        v357 = v258;
        v358 = v257;
        __s2 = v262;
        v292 = v242;
        v293 = v241;
        LOBYTE(v294) = v240;
        BYTE1(v294) = v239;
        BYTE2(v294) = v238;
        HIBYTE(v294) = v237;
        LOBYTE(v295) = v48;
        HIBYTE(v295) = v205;
        LOBYTE(v296) = v204;
        BYTE1(v296) = v203;
        BYTE2(v296) = v261;
        HIBYTE(v296) = v201;
        v297 = v200;
        v298 = v199;
        v299 = v198;
        v68 = v51;
        v69 = v47;
        v70 = v58;
        v71 = v54;
        v72 = v55;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v262;
          v352 = v242;
          v353 = v241;
          v354[0] = v240;
          v354[1] = v239;
          v354[2] = v238;
          v354[3] = v237;
          v354[4] = v48;
          v354[5] = v205;
          LOBYTE(v355) = v204;
          BYTE1(v355) = v203;
          BYTE2(v355) = v261;
          HIBYTE(v355) = v201;
          v356 = v200;
          v357 = v199;
          v358 = v198;
          __s2 = v7;
          v292 = v284;
          v293 = v71;
          LOBYTE(v294) = v72;
          BYTE1(v294) = v56;
          BYTE2(v294) = v57;
          HIBYTE(v294) = v69;
          LOBYTE(v295) = v70;
          HIBYTE(v295) = v68;
          LOBYTE(v296) = v227;
          BYTE1(v296) = v276;
          BYTE2(v296) = v287;
          HIBYTE(v296) = v260;
          v297 = v259;
          v298 = v258;
          v299 = v257;
          if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
          {
            v73 = vmovl_u16((uint16x4_t)(v144.i64[0] & 0xFF00FF00FF00FFLL));
            v74.i64[0] = v73.u32[0];
            v74.i64[1] = v73.u32[1];
            v75 = v74;
            v74.i64[0] = v73.u32[2];
            v74.i64[1] = v73.u32[3];
            v76 = vorrq_s8((int8x16_t)vshlq_u64(v75, (uint64x2_t)xmmword_24983AE40), (int8x16_t)vshlq_u64(v74, (uint64x2_t)xmmword_24983AE60));
            v77 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v76.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v76, v76, 8uLL)) | (v267 << 8);
            v78 = vmovl_u16((uint16x4_t)v146);
            v74.i64[0] = v78.u32[0];
            v74.i64[1] = v78.u32[1];
            v79 = v74;
            v74.i64[0] = v78.u32[2];
            v74.i64[1] = v78.u32[3];
            v80 = vorrq_s8((int8x16_t)vshlq_u64(v79, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64(v74, (uint64x2_t)xmmword_24983AE40));
            v81 = v77 | ((unint64_t)BYTE3(v226) << 56) | ((unint64_t)v232 << 16) | v228;
            v82 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v80.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v80, v80, 8uLL)) | ((unint64_t)v230 << 40) | v147 | ((unint64_t)v229 << 48) | BYTE4(v226);
            if (static UniversalControlUUID.compare(lhs:rhs:)(v81, v82, v171 | (v195 << 16) | (v194 << 24) | (v193 << 32) | (v192 << 40) | (v191 << 48) | (v190 << 56), v172 | (v187 << 16) | (v186 << 24) | (v185 << 32) | (v184 << 40) | (v183 << 48) | (v182 << 56)) == -1)goto LABEL_28;
            static UniversalControlUUID.compare(lhs:rhs:)(v171 | (v195 << 16) | (v194 << 24) | (v193 << 32) | (v192 << 40) | (v191 << 48) | (v190 << 56), v172 | (v187 << 16) | (v186 << 24) | (v185 << 32) | (v184 << 40) | (v183 << 48) | (v182 << 56), v81, v82);
          }
          if (v181 < v148)
            goto LABEL_64;
          if (v148 >= v181 && v222 < v176)
            goto LABEL_64;
        }
      }
LABEL_28:
      __s1 = v166;
      v352 = v165;
      v353 = v164;
      v354[0] = v163;
      v354[1] = v162;
      v354[2] = v161;
      v354[3] = v160;
      v354[4] = v159;
      v354[5] = v158;
      LOBYTE(v355) = v157;
      BYTE1(v355) = v156;
      BYTE2(v355) = v155;
      HIBYTE(v355) = v154;
      v356 = v153;
      v357 = v33;
      v358 = v224;
      __s2 = v236;
      v292 = v235;
      v293 = v234;
      LOBYTE(v294) = v233;
      BYTE1(v294) = v254;
      BYTE2(v294) = v253;
      HIBYTE(v294) = v252;
      LOBYTE(v295) = v251;
      HIBYTE(v295) = v250;
      LOBYTE(v296) = v249;
      BYTE1(v296) = v248;
      BYTE2(v296) = v247;
      HIBYTE(v296) = v246;
      v297 = v245;
      v298 = v244;
      v299 = v243;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_46;
      __s1 = v236;
      v352 = v235;
      v268 = 0x1000302u >> (8 * v148);
      v353 = v234;
      v354[0] = v233;
      v265 = 0x1000302u >> (8 * v181);
      v354[1] = v254;
      v354[2] = v253;
      v354[3] = v252;
      v354[4] = v251;
      v354[5] = v250;
      LOBYTE(v355) = v249;
      BYTE1(v355) = v248;
      BYTE2(v355) = v247;
      HIBYTE(v355) = v246;
      v356 = v245;
      v357 = v244;
      v358 = v243;
      __s2 = v166;
      v292 = v165;
      v293 = v164;
      LOBYTE(v294) = v163;
      BYTE1(v294) = v162;
      BYTE2(v294) = v161;
      HIBYTE(v294) = v160;
      LOBYTE(v295) = v159;
      HIBYTE(v295) = v158;
      LOBYTE(v296) = v157;
      BYTE1(v296) = v156;
      BYTE2(v296) = v155;
      HIBYTE(v296) = v154;
      v297 = v153;
      v298 = v33;
      v299 = v224;
      v270 = v170 | (v207 << 8);
      v272 = v214 | (v215 << 8);
      v84 = v143.i64[0] & 0xFF00FF00FF00FFLL;
      v274 = v177 << 56;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        break;
      __s1 = v166;
      v352 = v165;
      v353 = v164;
      v354[0] = v163;
      v354[1] = v162;
      v354[2] = v161;
      v354[3] = v160;
      v354[4] = v159;
      v354[5] = v158;
      LOBYTE(v355) = v157;
      BYTE1(v355) = v156;
      BYTE2(v355) = v155;
      HIBYTE(v355) = v154;
      v356 = v153;
      v357 = v33;
      v358 = v224;
      __s2 = v236;
      v292 = v235;
      v293 = v234;
      LOBYTE(v294) = v233;
      BYTE1(v294) = v254;
      BYTE2(v294) = v253;
      HIBYTE(v294) = v252;
      LOBYTE(v295) = v251;
      HIBYTE(v295) = v250;
      LOBYTE(v296) = v249;
      BYTE1(v296) = v248;
      BYTE2(v296) = v247;
      HIBYTE(v296) = v246;
      v297 = v245;
      v298 = v244;
      v299 = v243;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v236;
        v352 = v235;
        v354[5] = v250;
        LOBYTE(v355) = v249;
        __s2 = v166;
        v292 = v165;
        HIBYTE(v295) = v158;
        LOBYTE(v296) = v157;
        v85 = v234;
        v353 = v234;
        v86 = v233;
        v354[0] = v233;
        v87 = v254;
        v354[1] = v254;
        v88 = v253;
        v354[2] = v253;
        v89 = v252;
        v354[3] = v252;
        v90 = v251;
        v354[4] = v251;
        v91 = v248;
        BYTE1(v355) = v248;
        BYTE2(v355) = v247;
        v92 = v246;
        HIBYTE(v355) = v246;
        v356 = v245;
        v357 = v244;
        v358 = v243;
        v293 = v164;
        LOBYTE(v294) = v163;
        BYTE1(v294) = v162;
        BYTE2(v294) = v161;
        HIBYTE(v294) = v160;
        LOBYTE(v295) = v159;
        BYTE1(v296) = v156;
        BYTE2(v296) = v155;
        HIBYTE(v296) = v154;
        v297 = v153;
        v298 = v33;
        v299 = v224;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v152;
          v352 = v151;
          v353 = v150;
          v354[0] = v149;
          *(_DWORD *)&v354[1] = vmovn_s16(v168).u32[0];
          v354[5] = v180;
          v355 = vmovn_s16(v143).u32[0];
          v356 = v179;
          v357 = v178;
          v358 = v177;
          __s2 = v170;
          v292 = v207;
          v293 = v208;
          LOBYTE(v294) = v209;
          BYTE1(v294) = v210;
          BYTE2(v294) = v211;
          HIBYTE(v294) = v212;
          LOBYTE(v295) = v213;
          HIBYTE(v295) = v214;
          LOBYTE(v296) = v215;
          BYTE1(v296) = v216;
          BYTE2(v296) = v217;
          HIBYTE(v296) = v218;
          v297 = v219;
          v298 = v220;
          v299 = v223;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_46;
          v93.i64[0] = v168.u16[1];
          v93.i64[1] = v168.u16[2];
          v94.i64[0] = 255;
          v94.i64[1] = 255;
          v95 = (uint64x2_t)vandq_s8((int8x16_t)v93, v94);
          v93.i64[0] = (char)v149;
          v93.i64[1] = v168.u16[0];
          v96 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v93, v94), (uint64x2_t)xmmword_24983AE40), (int8x16_t)vshlq_u64(v95, (uint64x2_t)xmmword_24983AE60));
          v97 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v96.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v96, v96, 8uLL)) | (v151 << 8) | ((unint64_t)v168.u16[3] << 56) | ((unint64_t)v150 << 16) | v152;
          v98 = vmovl_u16((uint16x4_t)v84);
          v93.i64[0] = v98.u32[0];
          v93.i64[1] = v98.u32[1];
          v99 = v93;
          v93.i64[0] = v98.u32[2];
          v93.i64[1] = v98.u32[3];
          v100 = vorrq_s8((int8x16_t)vshlq_u64(v99, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64(v93, (uint64x2_t)xmmword_24983AE40));
          static UniversalControlUUID.compare(lhs:rhs:)(v270 | (v208 << 16) | (v209 << 24) | (v210 << 32) | (v211 << 40) | (v212 << 48) | (v213 << 56), v272 | (v216 << 16) | (v217 << 24) | (v218 << 32) | (v219 << 40) | (v220 << 48) | (v223 << 56), v97, *(_QWORD *)&vorr_s8(*(int8x8_t *)v100.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v100, v100, 8uLL)) | ((unint64_t)v179 << 40) | v274 | ((unint64_t)v178 << 48) | v180);
          v85 = v234;
          v86 = v233;
          v87 = v254;
          v88 = v253;
          v89 = v252;
          v90 = v251;
          v91 = v248;
          v92 = v246;
        }
        v101 = v236 | (v235 << 8) | (v85 << 16) | (v86 << 24) | (v87 << 32) | (v88 << 40) | (v89 << 48) | (v90 << 56);
        v102 = v250 | (v249 << 8) | (v91 << 16) | (v247 << 24) | (v92 << 32) | (v245 << 40) | (v244 << 48) | (v243 << 56);
        v103 = v166 | (v165 << 8) | (v164 << 16) | (v163 << 24) | (v162 << 32) | (v161 << 40) | (v160 << 48) | (v159 << 56);
        v104 = v158 | (v157 << 8) | (v156 << 16) | (v155 << 24) | (v154 << 32) | (v153 << 40) | (v33 << 48) | (v224 << 56);
        if (static UniversalControlUUID.compare(lhs:rhs:)(v101, v102, v103, v104) == -1)
          goto LABEL_61;
        if (static UniversalControlUUID.compare(lhs:rhs:)(v103, v104, v101, v102) != -1)
        {
          v105.i64[0] = v168.u16[1];
          v105.i64[1] = v168.u16[2];
          v106.i64[0] = 255;
          v106.i64[1] = 255;
          v107 = (uint64x2_t)vandq_s8((int8x16_t)v105, v106);
          v105.i64[0] = (char)v149;
          v105.i64[1] = v168.u16[0];
          v108 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8((int8x16_t)v105, v106), (uint64x2_t)xmmword_24983AE40), (int8x16_t)vshlq_u64(v107, (uint64x2_t)xmmword_24983AE60));
          v109 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v108.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v108, v108, 8uLL)) | (v151 << 8) | ((unint64_t)v168.u16[3] << 56) | ((unint64_t)v150 << 16) | v152;
          v110 = vmovl_u16((uint16x4_t)v84);
          v105.i64[0] = v110.u32[0];
          v105.i64[1] = v110.u32[1];
          v111 = v105;
          v105.i64[0] = v110.u32[2];
          v105.i64[1] = v110.u32[3];
          v112 = vorrq_s8((int8x16_t)vshlq_u64(v111, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64(v105, (uint64x2_t)xmmword_24983AE40));
          v113 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v112.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v112, v112, 8uLL)) | ((unint64_t)v179 << 40) | v274 | ((unint64_t)v178 << 48) | v180;
          if (static UniversalControlUUID.compare(lhs:rhs:)(v270 | (v208 << 16) | (v209 << 24) | (v210 << 32) | (v211 << 40) | (v212 << 48) | (v213 << 56), v272 | (v216 << 16) | (v217 << 24) | (v218 << 32) | (v219 << 40) | (v220 << 48) | (v223 << 56), v109, v113) == -1)goto LABEL_61;
          static UniversalControlUUID.compare(lhs:rhs:)(v109, v113, v270 | (v208 << 16) | (v209 << 24) | (v210 << 32) | (v211 << 40) | (v212 << 48) | (v213 << 56), v272 | (v216 << 16) | (v217 << 24) | (v218 << 32) | (v219 << 40) | (v220 << 48) | (v223 << 56));
        }
        if (v268 >= v265
          && (v265 < v268 || v175 >= v221))
        {
          goto LABEL_61;
        }
      }
LABEL_46:
      if (!v173)
        __break(1u);
      v286 = *((_BYTE *)v4 - 72);
      v285 = *((_BYTE *)v4 - 71);
      v283 = *((_BYTE *)v4 - 70);
      v281 = *((_BYTE *)v4 - 69);
      v115 = *((_BYTE *)v4 - 68);
      v278 = *((_BYTE *)v4 - 67);
      v277 = *((_BYTE *)v4 - 66);
      v279 = *((_BYTE *)v4 - 65);
      v290 = *((_BYTE *)v4 - 64);
      v264 = *((_BYTE *)v4 - 63);
      v276 = *((_BYTE *)v4 - 62);
      v288 = *((_BYTE *)v4 - 61);
      v14 = *((_BYTE *)v4 - 60);
      v15 = *((_BYTE *)v4 - 59);
      v16 = *((_BYTE *)v4 - 58);
      v17 = *((_BYTE *)v4 - 57);
      v116 = *((unsigned __int8 *)v4 - 56);
      v267 = *((unsigned __int8 *)v4 - 55);
      v117 = *((_BYTE *)v4 - 54);
      v118 = *((unsigned __int8 *)v4 - 53);
      v273 = *((_BYTE *)v4 - 52);
      v275 = *(_DWORD *)((char *)v4 - 6);
      v119 = *v4;
      v266 = *(_OWORD *)((char *)v4 - 51);
      v271 = *(_OWORD *)((char *)v4 - 35);
      v120 = *(_QWORD *)((char *)v4 - 19);
      v269 = *(_DWORD *)((char *)v4 - 11);
      memcpy(v4 - 9, v4 - 19, 0x50uLL);
      v10 = v281;
      v9 = v283;
      v8 = v285;
      v7 = v286;
      v13 = v288;
      v11 = v290;
      *(v4 - 10) = v119;
      v4 -= 10;
      *((_BYTE *)v4 - 72) = v286;
      *((_BYTE *)v4 - 71) = v285;
      *((_BYTE *)v4 - 70) = v283;
      *((_BYTE *)v4 - 69) = v281;
      v256 = v115;
      *((_BYTE *)v4 - 68) = v115;
      v12 = v264;
      *((_BYTE *)v4 - 67) = v278;
      *((_BYTE *)v4 - 66) = v277;
      *((_BYTE *)v4 - 65) = v279;
      *((_BYTE *)v4 - 64) = v290;
      *((_BYTE *)v4 - 63) = v264;
      *((_BYTE *)v4 - 62) = v276;
      *((_BYTE *)v4 - 61) = v288;
      *((_BYTE *)v4 - 60) = v14;
      *((_BYTE *)v4 - 59) = v15;
      *((_BYTE *)v4 - 58) = v16;
      *((_BYTE *)v4 - 57) = v17;
      v228 = v116;
      *((_BYTE *)v4 - 56) = v116;
      *((_BYTE *)v4 - 55) = v267;
      v232 = v117;
      *((_BYTE *)v4 - 54) = v117;
      v231 = v118;
      *((_BYTE *)v4 - 53) = v118;
      *((_BYTE *)v4 - 52) = v273;
      v5 = v266;
      *(_OWORD *)((char *)v4 - 51) = v266;
      *(_OWORD *)((char *)v4 - 35) = v271;
      *(_DWORD *)((char *)v4 - 11) = v269;
      *(_DWORD *)((char *)v4 - 6) = v275;
      v225 = BYTE7(v266);
      v230 = BYTE8(v266);
      v229 = BYTE9(v266);
      *(_QWORD *)((char *)v4 - 19) = v120;
      *(int8x8_t *)&v5 = vext_s8(*(int8x8_t *)&v5, *(int8x8_t *)&v5, 7uLL);
      LOBYTE(v5) = v273;
      v226 = v5;
      if (v174 == ++v255)
        goto LABEL_65;
    }
    v101 = v236 | (v235 << 8) | (v234 << 16) | (v233 << 24) | (v254 << 32) | (v253 << 40) | (v252 << 48) | (v251 << 56);
    v102 = v250 | (v249 << 8) | (v248 << 16) | (v247 << 24) | (v246 << 32) | (v245 << 40) | (v244 << 48) | (v243 << 56);
    v103 = v166 | (v165 << 8) | (v164 << 16) | (v163 << 24) | (v162 << 32) | (v161 << 40) | (v160 << 48) | (v159 << 56);
    v104 = v158 | (v157 << 8) | (v156 << 16) | (v155 << 24) | (v154 << 32) | (v153 << 40) | (v33 << 48) | (v224 << 56);
LABEL_61:
    if (sub_24978B870(v101, v102, v103, v104) == 2)
    {
      v132 = vmovl_u16((uint16x4_t)(v168.i64[0] & 0xFF00FF00FF00FFLL));
      v133.i64[0] = v132.u32[0];
      v133.i64[1] = v132.u32[1];
      v134 = v133;
      v133.i64[0] = v132.u32[2];
      v133.i64[1] = v132.u32[3];
      v135 = vorrq_s8((int8x16_t)vshlq_u64(v134, (uint64x2_t)xmmword_24983B680), (int8x16_t)vshlq_u64(v133, (uint64x2_t)xmmword_24983B670));
      v136 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v135.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v135, v135, 8uLL)) | (v151 << 8) | ((unint64_t)v149 << 24) | ((unint64_t)v150 << 16) | v152;
      v137 = vmovl_u16((uint16x4_t)v84);
      v133.i64[0] = v137.u32[0];
      v133.i64[1] = v137.u32[1];
      v138 = v133;
      v133.i64[0] = v137.u32[2];
      v133.i64[1] = v137.u32[3];
      v139 = vorrq_s8((int8x16_t)vshlq_u64(v138, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64(v133, (uint64x2_t)xmmword_24983AE40));
      if (sub_24978B8C8(v101, v102, v270 | (v208 << 16) | (v209 << 24) | (v210 << 32) | (v211 << 40) | (v212 << 48) | (v213 << 56), v272 | (v216 << 16) | (v217 << 24) | (v218 << 32) | (v219 << 40) | (v220 << 48) | (v223 << 56), v103, v104, v136, *(_QWORD *)&vorr_s8(*(int8x8_t *)v139.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v139, v139, 8uLL)) | ((unint64_t)v179 << 40) | v274 | ((unint64_t)v178 << 48) | v180) == 2)sub_24978B990((0x1000302u >> (8 * v181)) & 3 | (v221 << 16), (0x1000302u >> (8 * v148)) & 3 | (v175 << 16));
    }
LABEL_64:
    __s1 = v7;
    v352 = v284;
    v353 = v282;
    v354[0] = v280;
    v354[1] = v256;
    v354[2] = v278;
    v354[3] = v277;
    v354[4] = v279;
    v354[5] = v289;
    LOBYTE(v355) = v263;
    BYTE1(v355) = v276;
    BYTE2(v355) = v287;
    HIBYTE(v355) = v260;
    v356 = v259;
    v357 = v258;
    v358 = v257;
    v359 = v228;
    v360 = v267;
    v361 = v232;
    v362 = v231;
    v364 = v225;
    v365 = v230;
    v366 = v229;
    v367 = v167;
    v368 = v166;
    v369 = v165;
    v370 = v164;
    v371 = v163;
    v372 = v162;
    v373 = v161;
    v374 = v160;
    v375 = v159;
    v376 = v158;
    v377 = v157;
    v378 = v156;
    v379 = v155;
    v380 = v154;
    v381 = v153;
    v382 = v33;
    v383 = v224;
    v384 = v152;
    v385 = v151;
    v386 = v150;
    v387 = v149;
    v392 = v180;
    v397 = v179;
    v398 = v178;
    v399 = v177;
    v400 = v148;
    v401 = v176;
    v402 = v175;
    __s2 = v262;
    v292 = v242;
    v293 = v241;
    LOBYTE(v294) = v240;
    BYTE1(v294) = v239;
    BYTE2(v294) = v238;
    HIBYTE(v294) = v237;
    LOBYTE(v295) = v206;
    HIBYTE(v295) = v205;
    LOBYTE(v296) = v204;
    BYTE1(v296) = v203;
    BYTE2(v296) = v202;
    HIBYTE(v296) = v201;
    v297 = v200;
    v298 = v199;
    v299 = v198;
    v300 = v197;
    v301 = v196;
    v302 = v195;
    v303 = v194;
    v304 = v193;
    v305 = v192;
    v306 = v191;
    v307 = v190;
    v308 = v189;
    v309 = v188;
    v310 = v187;
    v311 = v186;
    v312 = v185;
    v313 = v184;
    v314 = v183;
    v315 = v182;
    v316 = v236;
    v317 = v235;
    v318 = v234;
    v319 = v233;
    v388 = v168.i8[0];
    v389 = v168.i8[2];
    v390 = v168.i8[4];
    v391 = v168.i8[6];
    v393 = v169;
    v394 = BYTE2(v169);
    v395 = BYTE4(v169);
    v396 = BYTE6(v169);
    v363 = v226;
    v320 = v254;
    v321 = v253;
    v322 = v252;
    v323 = v251;
    v324 = v250;
    v325 = v249;
    v326 = v248;
    v327 = v247;
    v328 = v246;
    v329 = v245;
    v330 = v244;
    v331 = v243;
    v332 = v170;
    v333 = v207;
    v334 = v208;
    v335 = v209;
    v336 = v210;
    v337 = v211;
    v338 = v212;
    v339 = v213;
    v340 = v214;
    v341 = v215;
    v342 = v216;
    v343 = v217;
    v344 = v218;
    v345 = v219;
    v346 = v220;
    v347 = v223;
    v348 = v181;
    v349 = v222;
    v350 = v221;
    static UniversalControlLink.< infix(_:_:)(&__s2, &__s1);
LABEL_65:
    a3 = v174 + 1;
    v4 = v142 + 10;
  }
  while (v174 + 1 != a2);
}

uint64_t sub_249801AE8(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v15;
  char *v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char *v43;
  BOOL v44;
  BOOL v46;
  double v47;
  double v48;
  BOOL v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char *v77;
  char *v78;
  BOOL v79;
  double v82;
  double v83;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unint64_t v91;
  unsigned int v92;
  unint64_t v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unint64_t v98;
  char v99;
  unint64_t v100;
  char v101;
  unsigned int v102;
  char v103;
  unsigned int v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  char v167;
  char v168;
  char v169;
  unint64_t v170;
  char v171;
  char v172;
  char v173;
  char v174;
  char v175;
  char v176;
  char v177;
  char v178;
  char v179;
  char v180;
  char v181;
  char v182;
  char v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  char v190;
  char v191;
  char v192;
  char v193;
  char v194;
  char v195;
  char v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  char v202;
  char v203;
  char v204;
  char v205;
  char v206;
  char v207;
  char v208;
  char v209;
  char v210;
  char v211;
  char v212;
  char v213;
  char v214;
  char v215;
  char v216;
  char v217;
  char v218;
  char v219;
  char v220;
  char v221;
  char v222;
  char v223;
  char v224;
  char v225;
  char v226;
  char v227;
  char v228;
  char v229;
  char v230;
  char v231;
  char v232;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  char v238;
  char v239;
  char v240;
  char v241;
  char v242;
  char v243;
  char v244;
  char v245;
  char v246;
  char v247;
  char v248;
  char v249;
  char v250;
  char v251;
  char v252;
  char v253;
  char v254;
  char v255;
  char v256;
  char v257;
  char v258;
  char v259;
  char v260;
  char v261;
  char v262;
  char v263;
  char v264;
  char v265;
  char v266;
  char v267;
  char v268;
  char v269;
  char v270;
  char v271;
  char v272;
  char v273;
  char v274;
  char v275;
  char v276;
  char v277;
  char v278;
  char v279;
  char v280;
  char v281;
  char v282;
  char v283;
  char v284;
  char v285;
  char v286;
  char v287;
  char v288;
  char v289;
  char v290;
  char v291;
  char v292;
  char v293;
  char v294;
  char v295;
  char v296;
  char v297;
  char v298;
  char v299;
  char v300;
  char v301;
  char v302;
  char v303;
  char v304;
  char v305;
  char v306;
  char v307;
  char v308;
  char v309;
  char v310;
  char v311;
  char v312;
  char v313;
  char v314;
  char v315;
  char v316;
  char v317;
  char v318;
  char v319;
  char v320;
  char v321;
  char v322;
  char v323;
  char *v324;
  char v325;
  char v326;
  char v327;
  char v328;
  char v329;
  char v330;
  char v331;
  char v332;
  char v333;
  char v334;
  char v335;
  char v336;
  char v337;
  char v338;
  char v339;
  char v340;
  char v341;
  char v342;
  char *v343;
  char v344;
  unint64_t v345;
  char *v346;
  char *v347;
  char *v348;
  char __s2;
  char v350;
  char v351;
  char v352;
  char v353;
  char v354;
  char v355;
  char v356;
  char v357;
  char v358;
  char v359;
  char v360;
  char v361;
  char v362;
  char v363;
  char v364;
  char __s1;
  char v366;
  char v367;
  char v368;
  char v369;
  char v370;
  char v371;
  char v372;
  char v373;
  char v374;
  char v375;
  char v376;
  char v377;
  char v378;
  char v379;
  char v380;
  uint64_t v381;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v381 = *MEMORY[0x24BDAC8D0];
  v8 = a2 - a1;
  v9 = (a2 - a1) / 80;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 80;
  if (v9 >= v11)
  {
    sub_2497AC03C(a2, (uint64_t)(a3 - (_QWORD)a2) / 80, a4);
    v12 = &v4[80 * v11];
    if (v10 < 80 || v7 >= v6)
      goto LABEL_80;
    v15 = (char *)(a3 - 80);
    v347 = v7;
    while (1)
    {
      v345 = (unint64_t)v12;
      v16 = v12 - 80;
      v339 = *(v12 - 79);
      v341 = *(v12 - 80);
      v335 = *(v12 - 77);
      v337 = *(v12 - 78);
      v331 = *(v12 - 75);
      v333 = *(v12 - 76);
      v327 = *(v12 - 73);
      v329 = *(v12 - 74);
      v325 = *(v12 - 72);
      v17 = *(v12 - 71);
      v18 = *(v12 - 70);
      v19 = *(v12 - 69);
      v20 = *(v12 - 68);
      v21 = *(v12 - 67);
      v22 = *(v12 - 66);
      v23 = *(v12 - 65);
      v225 = *(v12 - 64);
      v223 = *(v12 - 63);
      v221 = *(v12 - 62);
      v219 = *(v12 - 61);
      v217 = *(v12 - 60);
      v215 = *(v12 - 59);
      v213 = *(v12 - 58);
      v211 = *(v12 - 57);
      v209 = *(v12 - 56);
      v207 = *(v12 - 55);
      v205 = *(v12 - 54);
      v203 = *(v12 - 53);
      v201 = *(v12 - 52);
      v199 = *(v12 - 51);
      v197 = *(v12 - 50);
      v195 = *(v12 - 49);
      v289 = *(v12 - 48);
      v287 = *(v12 - 47);
      v285 = *(v12 - 46);
      v283 = *(v12 - 45);
      v281 = *(v12 - 44);
      v279 = *(v12 - 43);
      v277 = *(v12 - 42);
      v275 = *(v12 - 41);
      v273 = *(v12 - 40);
      v271 = *(v12 - 39);
      v269 = *(v12 - 38);
      v267 = *(v12 - 37);
      v265 = *(v12 - 36);
      v263 = *(v12 - 35);
      v261 = *(v12 - 34);
      v259 = *(v12 - 33);
      v159 = *(v12 - 31);
      v161 = *(v12 - 32);
      v155 = *(v12 - 29);
      v157 = *(v12 - 30);
      v151 = *(v12 - 27);
      v153 = *(v12 - 28);
      v147 = *(v12 - 25);
      v149 = *(v12 - 26);
      v143 = *(v12 - 23);
      v145 = *(v12 - 24);
      v139 = *(v12 - 21);
      v141 = *(v12 - 22);
      v135 = *(v12 - 19);
      v137 = *(v12 - 20);
      v131 = *(v12 - 17);
      v133 = *(v12 - 18);
      v97 = *(v12 - 16);
      v89 = *((unsigned __int16 *)v12 - 7);
      v87 = *((unsigned __int16 *)v12 - 6);
      v93 = *((_QWORD *)v12 - 1);
      v25 = v6 - 80;
      v24 = *(v6 - 80);
      v26 = *(v6 - 79);
      v27 = *(v6 - 78);
      v28 = *(v6 - 77);
      v29 = *(v6 - 76);
      v30 = *(v6 - 75);
      v31 = *(v6 - 74);
      v32 = *(v6 - 73);
      v33 = *(v6 - 72);
      v34 = *(v6 - 71);
      v35 = *(v6 - 70);
      v36 = *(v6 - 69);
      v37 = *(v6 - 68);
      v38 = *(v6 - 67);
      v39 = *(v6 - 66);
      v40 = *(v6 - 65);
      v193 = *(v6 - 64);
      v191 = *(v6 - 63);
      v189 = *(v6 - 62);
      v187 = *(v6 - 61);
      v185 = *(v6 - 60);
      v183 = *(v6 - 59);
      v181 = *(v6 - 58);
      v179 = *(v6 - 57);
      v177 = *(v6 - 56);
      v175 = *(v6 - 55);
      v173 = *(v6 - 54);
      v171 = *(v6 - 53);
      v169 = *(v6 - 52);
      v167 = *(v6 - 51);
      v165 = *(v6 - 50);
      v163 = *(v6 - 49);
      v257 = *(v6 - 48);
      v255 = *(v6 - 47);
      v253 = *(v6 - 46);
      v251 = *(v6 - 45);
      v249 = *(v6 - 44);
      v247 = *(v6 - 43);
      v245 = *(v6 - 42);
      v243 = *(v6 - 41);
      v241 = *(v6 - 40);
      v239 = *(v6 - 39);
      v237 = *(v6 - 38);
      v235 = *(v6 - 37);
      v233 = *(v6 - 36);
      v231 = *(v6 - 35);
      v229 = *(v6 - 34);
      v227 = *(v6 - 33);
      v129 = *(v6 - 32);
      v127 = *(v6 - 31);
      v125 = *(v6 - 30);
      v123 = *(v6 - 29);
      v121 = *(v6 - 28);
      v119 = *(v6 - 27);
      v117 = *(v6 - 26);
      v115 = *(v6 - 25);
      v113 = *(v6 - 24);
      v111 = *(v6 - 23);
      v109 = *(v6 - 22);
      v107 = *(v6 - 21);
      v105 = *(v6 - 20);
      v103 = *(v6 - 19);
      v101 = *(v6 - 18);
      v99 = *(v6 - 17);
      v95 = *(v6 - 16);
      v88 = *((unsigned __int16 *)v6 - 7);
      v86 = *((unsigned __int16 *)v6 - 6);
      v91 = *((_QWORD *)v6 - 1);
      __s1 = v341;
      v366 = v339;
      v367 = v337;
      v368 = v335;
      v369 = v333;
      v370 = v331;
      v371 = v329;
      v372 = v327;
      v373 = v325;
      v320 = v18;
      v322 = v17;
      v374 = v17;
      v375 = v18;
      v316 = v20;
      v318 = v19;
      v376 = v19;
      v377 = v20;
      v312 = v22;
      v314 = v21;
      v378 = v21;
      v379 = v22;
      v310 = v23;
      v380 = v23;
      v306 = v28;
      v308 = v24;
      __s2 = v24;
      v303 = v34;
      v350 = v26;
      v351 = v27;
      v352 = v28;
      v41 = v32;
      v353 = v29;
      v42 = v30;
      v354 = v30;
      v355 = v31;
      v356 = v32;
      v357 = v33;
      v358 = v34;
      v299 = v36;
      v301 = v35;
      v359 = v35;
      v360 = v36;
      v297 = v37;
      v361 = v37;
      v295 = v38;
      v362 = v38;
      v293 = v39;
      v363 = v39;
      v291 = v40;
      v364 = v40;
      v343 = v15;
      v324 = v15 + 80;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_14;
      __s1 = v308;
      v366 = v26;
      v367 = v27;
      v368 = v306;
      v369 = v29;
      v370 = v42;
      v371 = v31;
      v372 = v41;
      v373 = v33;
      v374 = v303;
      v375 = v301;
      v376 = v299;
      v377 = v297;
      v378 = v295;
      v379 = v293;
      v380 = v291;
      __s2 = v341;
      v350 = v339;
      v351 = v337;
      v352 = v335;
      v353 = v333;
      v354 = v331;
      v355 = v329;
      v356 = v327;
      v357 = v325;
      v358 = v322;
      v359 = v320;
      v360 = v318;
      v361 = v316;
      v362 = v314;
      v363 = v312;
      v364 = v310;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_26;
      __s1 = v289;
      v366 = v287;
      v367 = v285;
      v368 = v283;
      v369 = v281;
      v370 = v279;
      v371 = v277;
      v372 = v275;
      v373 = v273;
      v374 = v271;
      v375 = v269;
      v376 = v267;
      v377 = v265;
      v378 = v263;
      v379 = v261;
      v380 = v259;
      __s2 = v257;
      v350 = v255;
      v351 = v253;
      v352 = v251;
      v353 = v249;
      v354 = v247;
      v355 = v245;
      v356 = v243;
      v357 = v241;
      v358 = v239;
      v359 = v237;
      v360 = v235;
      v361 = v233;
      v362 = v231;
      v363 = v229;
      v364 = v227;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_14;
      __s1 = v257;
      v366 = v255;
      v367 = v253;
      v368 = v251;
      v369 = v249;
      v370 = v247;
      v371 = v245;
      v372 = v243;
      v373 = v241;
      v374 = v239;
      v375 = v237;
      v376 = v235;
      v377 = v233;
      v378 = v231;
      v379 = v229;
      v380 = v227;
      __s2 = v289;
      v350 = v287;
      v351 = v285;
      v352 = v283;
      v353 = v281;
      v354 = v279;
      v355 = v277;
      v356 = v275;
      v357 = v273;
      v358 = v271;
      v359 = v269;
      v360 = v267;
      v361 = v265;
      v362 = v263;
      v363 = v261;
      v364 = v259;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_26;
      __s1 = v225;
      v366 = v223;
      v367 = v221;
      v368 = v219;
      v369 = v217;
      v370 = v215;
      v371 = v213;
      v372 = v211;
      v373 = v209;
      v374 = v207;
      v375 = v205;
      v376 = v203;
      v377 = v201;
      v378 = v199;
      v379 = v197;
      v380 = v195;
      __s2 = v193;
      v350 = v191;
      v351 = v189;
      v352 = v187;
      v353 = v185;
      v354 = v183;
      v355 = v181;
      v356 = v179;
      v357 = v177;
      v358 = v175;
      v359 = v173;
      v360 = v171;
      v361 = v169;
      v362 = v167;
      v363 = v165;
      v364 = v163;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_14;
      __s1 = v193;
      v366 = v191;
      v367 = v189;
      v368 = v187;
      v369 = v185;
      v370 = v183;
      v371 = v181;
      v372 = v179;
      v373 = v177;
      v374 = v175;
      v375 = v173;
      v376 = v171;
      v377 = v169;
      v378 = v167;
      v379 = v165;
      v380 = v163;
      __s2 = v225;
      v350 = v223;
      v351 = v221;
      v352 = v219;
      v353 = v217;
      v354 = v215;
      v355 = v213;
      v356 = v211;
      v357 = v209;
      v358 = v207;
      v359 = v205;
      v360 = v203;
      v361 = v201;
      v362 = v199;
      v363 = v197;
      v364 = v195;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_26;
      __s1 = v161;
      v366 = v159;
      v367 = v157;
      v368 = v155;
      v369 = v153;
      v370 = v151;
      v371 = v149;
      v372 = v147;
      v373 = v145;
      v374 = v143;
      v375 = v141;
      v376 = v139;
      v377 = v137;
      v378 = v135;
      v379 = v133;
      v380 = v131;
      __s2 = v129;
      v350 = v127;
      v351 = v125;
      v352 = v123;
      v353 = v121;
      v354 = v119;
      v355 = v117;
      v356 = v115;
      v357 = v113;
      v358 = v111;
      v359 = v109;
      v360 = v107;
      v361 = v105;
      v362 = v103;
      v363 = v101;
      v364 = v99;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_14;
      __s1 = v129;
      v366 = v127;
      v367 = v125;
      v368 = v123;
      v369 = v121;
      v370 = v119;
      v371 = v117;
      v372 = v115;
      v373 = v113;
      v374 = v111;
      v375 = v109;
      v376 = v107;
      v377 = v105;
      v378 = v103;
      v379 = v101;
      v380 = v99;
      __s2 = v161;
      v350 = v159;
      v351 = v157;
      v352 = v155;
      v353 = v153;
      v354 = v151;
      v355 = v149;
      v356 = v147;
      v357 = v145;
      v358 = v143;
      v359 = v141;
      v360 = v139;
      v361 = v137;
      v362 = v135;
      v363 = v133;
      v364 = v131;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0
        || v97 >= v95
        && (v95 < v97
         || (v47 = (double)v91 / 1000.0, v48 = (double)v93 / 1000.0, v47 >= v48)
         && (v48 < v47 || v89 >= v88 && (v88 >= v89 ? (v49 = v87 >= v86) : (v49 = 1), v49))))
      {
LABEL_26:
        v43 = v343;
        v46 = v324 != (char *)v345 || (unint64_t)v343 >= v345;
        v25 = v16;
        v12 = v16;
        if (!v46)
          goto LABEL_20;
      }
      else
      {
LABEL_14:
        v43 = v343;
        v12 = (char *)v345;
        v44 = v324 != v6 || v343 >= v6;
        v6 -= 80;
        if (!v44)
          goto LABEL_20;
      }
      memmove(v343, v25, 0x50uLL);
      v43 = v343;
LABEL_20:
      v15 = v43 - 80;
      if (v12 <= v4 || v6 <= v347)
        goto LABEL_80;
    }
  }
  sub_2497AC03C(a1, (a2 - a1) / 80, a4);
  v12 = &v4[80 * v9];
  if (v8 >= 80 && (unint64_t)v6 < a3)
  {
    v346 = &v4[80 * v9];
    v170 = a3;
    while (1)
    {
      v348 = v7;
      v342 = v6[3];
      v344 = v6[2];
      v338 = v6[5];
      v340 = v6[4];
      v50 = v6[6];
      v51 = v6[7];
      v52 = v6[8];
      v53 = v6[9];
      v54 = v6[10];
      v55 = v6[11];
      v56 = v6[12];
      v57 = v6[13];
      v58 = v6[14];
      v59 = v6[15];
      v60 = *v4;
      v61 = v4[1];
      v62 = v4[2];
      v63 = v4[3];
      v64 = v4[4];
      v65 = v4[5];
      v66 = v4[6];
      v67 = v4[7];
      v68 = v4[8];
      v69 = v4[9];
      v70 = v4[10];
      v71 = v4[11];
      v72 = v4[12];
      v73 = v4[13];
      v74 = v4[14];
      v334 = v6[1];
      v336 = *v6;
      __s1 = *v6;
      v366 = v334;
      v367 = v344;
      v368 = v342;
      v369 = v340;
      v370 = v338;
      v330 = v51;
      v332 = v50;
      v371 = v50;
      v372 = v51;
      v326 = v53;
      v328 = v52;
      v373 = v52;
      v374 = v53;
      v323 = v55;
      v375 = v54;
      v376 = v55;
      v319 = v57;
      v321 = v56;
      v377 = v56;
      v378 = v57;
      v315 = v59;
      v317 = v58;
      v379 = v58;
      v75 = v4[15];
      v380 = v59;
      v311 = v61;
      v313 = v60;
      __s2 = v60;
      v350 = v61;
      v309 = v62;
      v351 = v62;
      v352 = v63;
      v305 = v65;
      v307 = v64;
      v353 = v64;
      v76 = v69;
      v354 = v65;
      v302 = v67;
      v304 = v66;
      v355 = v66;
      v356 = v67;
      v300 = v68;
      v357 = v68;
      v358 = v69;
      v359 = v70;
      v360 = v71;
      v361 = v72;
      v362 = v73;
      v363 = v74;
      v364 = v75;
      v204 = v6[16];
      v206 = v6[17];
      v208 = v6[18];
      v210 = v6[19];
      v212 = v6[20];
      v214 = v6[21];
      v216 = v6[22];
      v218 = v6[23];
      v220 = v6[24];
      v222 = v6[25];
      v224 = v6[26];
      v226 = v6[27];
      v228 = v6[28];
      v230 = v6[29];
      v232 = v6[30];
      v234 = v6[31];
      v268 = v6[32];
      v270 = v6[33];
      v272 = v6[34];
      v274 = v6[35];
      v276 = v6[36];
      v278 = v6[37];
      v280 = v6[38];
      v282 = v6[39];
      v284 = v6[40];
      v286 = v6[41];
      v288 = v6[42];
      v290 = v6[43];
      v292 = v6[44];
      v294 = v6[45];
      v296 = v6[46];
      v298 = v6[47];
      v138 = v6[48];
      v140 = v6[49];
      v142 = v6[50];
      v144 = v6[51];
      v146 = v6[52];
      v148 = v6[53];
      v150 = v6[54];
      v152 = v6[55];
      v154 = v6[56];
      v156 = v6[57];
      v158 = v6[58];
      v160 = v6[59];
      v162 = v6[60];
      v164 = v6[61];
      v166 = v6[62];
      v168 = v6[63];
      v104 = v6[64];
      v96 = *((unsigned __int16 *)v6 + 33);
      v92 = *((unsigned __int16 *)v6 + 34);
      v100 = *((_QWORD *)v6 + 9);
      v172 = v4[16];
      v174 = v4[17];
      v176 = v4[18];
      v178 = v4[19];
      v180 = v4[20];
      v182 = v4[21];
      v184 = v4[22];
      v186 = v4[23];
      v188 = v4[24];
      v190 = v4[25];
      v192 = v4[26];
      v194 = v4[27];
      v196 = v4[28];
      v198 = v4[29];
      v200 = v4[30];
      v202 = v4[31];
      v236 = v4[32];
      v238 = v4[33];
      v240 = v4[34];
      v242 = v4[35];
      v244 = v4[36];
      v246 = v4[37];
      v248 = v4[38];
      v250 = v4[39];
      v252 = v4[40];
      v254 = v4[41];
      v256 = v4[42];
      v258 = v4[43];
      v260 = v4[44];
      v262 = v4[45];
      v264 = v4[46];
      v266 = v4[47];
      v106 = v4[48];
      v108 = v4[49];
      v110 = v4[50];
      v112 = v4[51];
      v114 = v4[52];
      v116 = v4[53];
      v118 = v4[54];
      v120 = v4[55];
      v122 = v4[56];
      v124 = v4[57];
      v126 = v4[58];
      v128 = v4[59];
      v130 = v4[60];
      v132 = v4[61];
      v134 = v4[62];
      v136 = v4[63];
      v102 = v4[64];
      v94 = *((unsigned __int16 *)v4 + 33);
      v90 = *((unsigned __int16 *)v4 + 34);
      v98 = *((_QWORD *)v4 + 9);
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v313;
        v366 = v311;
        v367 = v309;
        v368 = v63;
        v369 = v307;
        v370 = v305;
        v371 = v304;
        v372 = v302;
        v373 = v300;
        v374 = v76;
        v375 = v70;
        v376 = v71;
        v377 = v72;
        v378 = v73;
        v379 = v74;
        v380 = v75;
        __s2 = v336;
        v350 = v334;
        v351 = v344;
        v352 = v342;
        v353 = v340;
        v354 = v338;
        v355 = v332;
        v356 = v330;
        v357 = v328;
        v358 = v326;
        v359 = v54;
        v360 = v323;
        v361 = v321;
        v362 = v319;
        v363 = v317;
        v364 = v315;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          break;
        __s1 = v268;
        v366 = v270;
        v367 = v272;
        v368 = v274;
        v369 = v276;
        v370 = v278;
        v371 = v280;
        v372 = v282;
        v373 = v284;
        v374 = v286;
        v375 = v288;
        v376 = v290;
        v377 = v292;
        v378 = v294;
        v379 = v296;
        v380 = v298;
        __s2 = v236;
        v350 = v238;
        v351 = v240;
        v352 = v242;
        v353 = v244;
        v354 = v246;
        v355 = v248;
        v356 = v250;
        v357 = v252;
        v358 = v254;
        v359 = v256;
        v360 = v258;
        v361 = v260;
        v362 = v262;
        v363 = v264;
        v364 = v266;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v236;
          v366 = v238;
          v367 = v240;
          v368 = v242;
          v369 = v244;
          v370 = v246;
          v371 = v248;
          v372 = v250;
          v373 = v252;
          v374 = v254;
          v375 = v256;
          v376 = v258;
          v377 = v260;
          v378 = v262;
          v379 = v264;
          v380 = v266;
          __s2 = v268;
          v350 = v270;
          v351 = v272;
          v352 = v274;
          v353 = v276;
          v354 = v278;
          v355 = v280;
          v356 = v282;
          v357 = v284;
          v358 = v286;
          v359 = v288;
          v360 = v290;
          v361 = v292;
          v362 = v294;
          v363 = v296;
          v364 = v298;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            break;
          __s1 = v204;
          v366 = v206;
          v367 = v208;
          v368 = v210;
          v369 = v212;
          v370 = v214;
          v371 = v216;
          v372 = v218;
          v373 = v220;
          v374 = v222;
          v375 = v224;
          v376 = v226;
          v377 = v228;
          v378 = v230;
          v379 = v232;
          v380 = v234;
          __s2 = v172;
          v350 = v174;
          v351 = v176;
          v352 = v178;
          v353 = v180;
          v354 = v182;
          v355 = v184;
          v356 = v186;
          v357 = v188;
          v358 = v190;
          v359 = v192;
          v360 = v194;
          v361 = v196;
          v362 = v198;
          v363 = v200;
          v364 = v202;
          if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
          {
            __s1 = v172;
            v366 = v174;
            v367 = v176;
            v368 = v178;
            v369 = v180;
            v370 = v182;
            v371 = v184;
            v372 = v186;
            v373 = v188;
            v374 = v190;
            v375 = v192;
            v376 = v194;
            v377 = v196;
            v378 = v198;
            v379 = v200;
            v380 = v202;
            __s2 = v204;
            v350 = v206;
            v351 = v208;
            v352 = v210;
            v353 = v212;
            v354 = v214;
            v355 = v216;
            v356 = v218;
            v357 = v220;
            v358 = v222;
            v359 = v224;
            v360 = v226;
            v361 = v228;
            v362 = v230;
            v363 = v232;
            v364 = v234;
            if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
              break;
            __s1 = v138;
            v366 = v140;
            v367 = v142;
            v368 = v144;
            v369 = v146;
            v370 = v148;
            v371 = v150;
            v372 = v152;
            v373 = v154;
            v374 = v156;
            v375 = v158;
            v376 = v160;
            v377 = v162;
            v378 = v164;
            v379 = v166;
            v380 = v168;
            __s2 = v106;
            v350 = v108;
            v351 = v110;
            v352 = v112;
            v353 = v114;
            v354 = v116;
            v355 = v118;
            v356 = v120;
            v357 = v122;
            v358 = v124;
            v359 = v126;
            v360 = v128;
            v361 = v130;
            v362 = v132;
            v363 = v134;
            v364 = v136;
            if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
            {
              __s1 = v106;
              v366 = v108;
              v367 = v110;
              v368 = v112;
              v369 = v114;
              v370 = v116;
              v371 = v118;
              v372 = v120;
              v373 = v122;
              v374 = v124;
              v375 = v126;
              v376 = v128;
              v377 = v130;
              v378 = v132;
              v379 = v134;
              v380 = v136;
              __s2 = v138;
              v350 = v140;
              v351 = v142;
              v352 = v144;
              v353 = v146;
              v354 = v148;
              v355 = v150;
              v356 = v152;
              v357 = v154;
              v358 = v156;
              v359 = v158;
              v360 = v160;
              v361 = v162;
              v362 = v164;
              v363 = v166;
              v364 = v168;
              if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                break;
              if (v104 >= v102)
              {
                if (v102 < v104)
                  break;
                v82 = (double)v98 / 1000.0;
                v83 = (double)v100 / 1000.0;
                if (v82 >= v83)
                {
                  if (v83 < v82)
                    break;
                  if (v96 >= v94 && (v94 < v96 || v92 >= v90))
                    break;
                }
              }
            }
          }
        }
      }
      v77 = v6;
      v78 = v348;
      v79 = v348 == v6;
      v6 += 80;
      if (!v79)
        goto LABEL_50;
LABEL_51:
      v7 = v78 + 80;
      v12 = v346;
      if (v4 >= v346 || (unint64_t)v6 >= v170)
      {
        v6 = v7;
        goto LABEL_80;
      }
    }
    v78 = v348;
    v79 = v348 == v4;
    v77 = v4;
    v4 += 80;
    if (v79 && v348 < v4)
      goto LABEL_51;
LABEL_50:
    memmove(v78, v77, 0x50uLL);
    goto LABEL_51;
  }
  v6 = v7;
LABEL_80:
  sub_2497AC03C(v4, (v12 - v4) / 80, v6);
  return 1;
}

uint64_t sub_2498035B0(char *a1, char *a2, unint64_t a3, char *a4)
{
  double *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned __int8 *v14;
  unsigned int v15;
  double v16;
  unsigned __int8 *v17;
  double v18;
  BOOL v19;
  BOOL v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  unsigned __int8 v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  int v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  double v75;
  double v76;
  double *v77;
  char *v78;
  BOOL v79;
  unsigned __int8 *v81;
  double *v82;
  BOOL v83;
  char v84;
  unsigned __int8 v85;
  unsigned __int8 v86;
  unsigned __int8 v87;
  unsigned __int8 v88;
  unsigned __int8 v89;
  unsigned __int8 v90;
  unsigned __int8 v91;
  unsigned __int8 v92;
  unsigned __int8 v93;
  unsigned __int8 v94;
  unsigned __int8 v95;
  unsigned __int8 v96;
  unsigned __int8 v97;
  unsigned __int8 v98;
  unsigned __int8 v99;
  unsigned __int8 v100;
  unsigned __int8 v101;
  uint64_t v102;
  unsigned __int8 v103;
  unsigned __int8 v104;
  unsigned __int8 v105;
  unsigned __int8 v106;
  double *v107;
  uint64_t v108;
  unsigned __int8 v109;
  char v110;
  char v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  char v117;
  int v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  unsigned int v126;
  unsigned int v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int v135;
  char v136;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned __int8 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unsigned __int8 *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unsigned int v187;
  uint64_t v188;
  unsigned int v189;
  int v190;
  uint64_t v191;
  int v192;
  uint64_t v193;
  uint64_t v194;
  char v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  char v201;
  uint64_t v202;
  char v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned __int8 *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  uint64_t v225;
  int v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  int v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  int v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  int v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  int v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  unint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  unsigned int v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  unsigned int v441;
  uint64_t v442;
  uint64_t v443;
  unsigned int v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  double *v455;
  double *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  unint64_t v461;
  unint64_t v462;
  unint64_t v463;
  double *v464;
  double *v465;
  unsigned __int8 *v466;
  uint64_t v467;
  char __s2;
  unsigned __int8 v469;
  unsigned __int8 v470;
  unsigned __int8 v471;
  unsigned __int8 v472;
  unsigned __int8 v473;
  unsigned __int8 v474;
  unsigned __int8 v475;
  unsigned __int8 v476;
  unsigned __int8 v477;
  unsigned __int8 v478;
  unsigned __int8 v479;
  unsigned __int8 v480;
  unsigned __int8 v481;
  char v482;
  unsigned __int8 v483;
  unsigned __int8 __s1;
  unsigned __int8 v485;
  unsigned __int8 v486;
  unsigned __int8 v487;
  unsigned __int8 v488;
  unsigned __int8 v489;
  unsigned __int8 v490;
  unsigned __int8 v491;
  unsigned __int8 v492;
  unsigned __int8 v493;
  unsigned __int8 v494;
  unsigned __int8 v495;
  unsigned __int8 v496;
  unsigned __int8 v497;
  unsigned __int8 v498;
  unsigned __int8 v499;
  char v500;
  char v501;
  char v502;
  char v503;
  char v504;
  char v505;
  char v506;
  char v507;
  char v508;
  char v509;
  char v510;
  char v511;
  char v512;
  char v513;
  char v514;
  char v515;
  char v516;
  char v517;
  char v518;
  char v519;
  char v520;
  char v521;
  char v522;
  char v523;
  char v524;
  char v525;
  char v526;
  char v527;
  char v528;
  char v529;
  char v530;
  char v531;
  char v532;
  __int16 v533;
  char v534;
  char v535;
  char v536;
  char v537;
  char v538;
  char v539;
  char v540;
  char v541;
  unsigned __int8 v542;
  char v543;
  unsigned __int8 v544;
  char v545;
  char v546;
  char v547;
  char v548;
  char v549;
  char v550;
  char v551;
  char v552;
  char v553;
  char v554;
  char v555;
  char v556;
  char v557;
  char v558;
  char v559;
  char v560;
  char v561;
  char v562;
  char v563;
  char v564;
  char v565;
  char v566;
  __int16 v567;
  uint64_t v568;

  v465 = (double *)a4;
  v5 = (double *)a2;
  v6 = a1;
  v568 = *MEMORY[0x24BDAC8D0];
  v7 = a2 - a1;
  v8 = (a2 - a1) / 80;
  v9 = a3 - (_QWORD)a2;
  v10 = (uint64_t)(a3 - (_QWORD)a2) / 80;
  if (v8 >= v10)
  {
    sub_2497AC03C(a2, (uint64_t)(a3 - (_QWORD)a2) / 80, a4);
    v11 = (unsigned __int8 *)&v465[10 * v10];
    if (v9 < 80 || v6 >= (char *)v5)
      goto LABEL_129;
    v466 = (unsigned __int8 *)(a3 - 80);
    v463 = (unint64_t)v6;
    while (1)
    {
      v14 = v466 + 80;
      v461 = (unint64_t)v11;
      v15 = *(v11 - 80);
      v11 -= 80;
      v457 = v15;
      v16 = *((double *)v11 + 9);
      v17 = (unsigned __int8 *)(v5 - 10);
      v459 = *((unsigned __int8 *)v5 - 80);
      v18 = *(v5 - 1);
      if (v18 < v16)
        break;
      if (v16 >= v18)
      {
        v455 = v5;
        v368 = v11[1];
        v407 = v11[2];
        v22 = v11[3];
        v23 = v11;
        v415 = v11[4];
        v413 = v11[5];
        v411 = v11[6];
        v409 = v11[7];
        v24 = v11[8];
        v25 = v11[9];
        v26 = v11[10];
        v27 = v23[11];
        v28 = v23[12];
        v29 = v23[13];
        v30 = v23[14];
        v31 = v23[15];
        v319 = v23[16];
        v317 = v23[17];
        v315 = v23[18];
        v313 = v23[19];
        v311 = v23[20];
        v309 = v23[21];
        v307 = v23[22];
        v305 = v23[23];
        v303 = v23[24];
        v301 = v23[25];
        v299 = v23[26];
        v297 = v23[27];
        v295 = v23[28];
        v293 = v23[29];
        v291 = v23[30];
        v289 = v23[31];
        v32 = v23[33];
        v343 = v32;
        v33 = v23[34];
        v341 = v33;
        v34 = v23[35];
        v345 = v34;
        v35 = v23[36];
        v347 = v35;
        v36 = v23[37];
        v349 = v36;
        v37 = v23[38];
        v351 = v37;
        v38 = v23[39];
        v353 = v38;
        v39 = v23[40];
        v355 = v39;
        v40 = v23[41];
        v357 = v40;
        v41 = v23[42];
        v42 = v23[43];
        v360 = v42;
        v43 = v23[44];
        v362 = v43;
        v44 = v23[45];
        v363 = v44;
        v45 = v23[46];
        v365 = v45;
        v46 = v23[47];
        v370 = v46;
        v238 = v23[48];
        v239 = v23[49];
        v241 = v23[50];
        v243 = v23[51];
        v245 = v23[52];
        v247 = v23[53];
        v166 = v23[54];
        v249 = v23[55];
        v168 = v23[56];
        v251 = v23[57];
        v253 = v23[58];
        v174 = v23[59];
        v176 = v23[60];
        v178 = v23[61];
        v337 = v23[62];
        v339 = v23[63];
        v221 = v23[64];
        v287 = *((unsigned __int16 *)v23 + 33);
        v150 = v23;
        v226 = *((unsigned __int16 *)v23 + 34);
        v384 = v17[1];
        v382 = v17[2];
        v380 = v17[3];
        v378 = v17[4];
        v376 = v17[5];
        v374 = v17[6];
        v212 = v17[7];
        v209 = v17[8];
        v207 = v17[9];
        v205 = v17[10];
        v202 = v17[11];
        v200 = v17[12];
        v198 = v17[13];
        v196 = v17[14];
        v194 = v17[15];
        v285 = v17[16];
        v283 = v17[17];
        v281 = v17[18];
        v279 = v17[19];
        v277 = v17[20];
        v275 = v17[21];
        v274 = v17[22];
        v273 = v17[23];
        v271 = v17[24];
        v269 = v17[25];
        v267 = v17[26];
        v265 = v17[27];
        v263 = v17[28];
        v261 = v17[29];
        v259 = v17[30];
        v257 = v17[31];
        v417 = v17[32];
        v419 = v17[33];
        v421 = v17[34];
        v423 = v17[35];
        v425 = v17[36];
        v427 = v17[37];
        v429 = v17[38];
        v432 = v17[39];
        v435 = v17[40];
        v438 = v17[41];
        v440 = v17[42];
        v443 = v17[43];
        v446 = v17[44];
        v449 = v17[45];
        v372 = v17[46];
        v452 = v17[47];
        v234 = v17[48];
        v321 = v17[49];
        v323 = v17[50];
        v325 = v17[51];
        v327 = v17[52];
        v329 = v17[53];
        v331 = v17[54];
        v333 = v17[55];
        v335 = v17[56];
        v224 = v17[57];
        v218 = v17[58];
        v172 = v17[59];
        v158 = v17[60];
        v160 = v17[61];
        v162 = v17[62];
        v164 = v17[63];
        v215 = v17[64];
        v255 = *((unsigned __int16 *)v17 + 33);
        v213 = v17;
        v236 = *((unsigned __int16 *)v17 + 34);
        __s1 = v23[32];
        v228 = __s1;
        v485 = v32;
        v486 = v33;
        v487 = v34;
        v488 = v35;
        v489 = v36;
        v490 = v37;
        v491 = v38;
        v492 = v39;
        v493 = v40;
        v494 = v41;
        v495 = v42;
        v496 = v43;
        v497 = v44;
        v498 = v45;
        v499 = v46;
        __s2 = v457;
        v469 = v368;
        v470 = v407;
        v471 = v22;
        v472 = v415;
        v473 = v413;
        v474 = v411;
        v475 = v409;
        v476 = v24;
        v477 = v25;
        v478 = v26;
        v479 = v27;
        v480 = v28;
        v481 = v29;
        v482 = v30;
        v483 = v31;
        v170 = v22;
        v230 = v25;
        v400 = v27;
        v399 = v28;
        v398 = v29;
        v397 = v30;
        v153 = v27;
        v152 = v29;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          __asm { BR              X8 }
        v149 = v24;
        v144 = v31;
        v145 = v30;
        v146 = v28;
        v147 = v26;
        v148 = v25;
        __s1 = v417;
        v485 = v419;
        v486 = v421;
        v487 = v423;
        v488 = v425;
        v489 = v427;
        v490 = v429;
        v491 = v432;
        v492 = v435;
        v493 = v438;
        v494 = v440;
        v495 = v443;
        v496 = v446;
        v497 = v449;
        v498 = v372;
        v499 = v452;
        __s2 = v459;
        v469 = v384;
        v470 = v382;
        v471 = v380;
        v472 = v378;
        v473 = v376;
        v474 = v374;
        v475 = v212;
        v476 = v209;
        v477 = v207;
        v478 = v205;
        v479 = v202;
        v480 = v200;
        v481 = v198;
        v482 = v196;
        v483 = v194;
        v5 = v455;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          __asm { BR              X8 }
        __s1 = v457;
        v485 = v368;
        v486 = v407;
        v487 = v22;
        v488 = v415;
        v489 = v413;
        v490 = v411;
        v491 = v409;
        v492 = v24;
        v493 = v25;
        v494 = v26;
        v495 = v27;
        v496 = v399;
        v497 = v29;
        v498 = v30;
        v499 = v31;
        __s2 = v459;
        v469 = v384;
        v470 = v382;
        v471 = v380;
        v472 = v378;
        v473 = v376;
        v474 = v374;
        v475 = v212;
        v476 = v209;
        v477 = v207;
        v478 = v205;
        v479 = v202;
        v480 = v200;
        v481 = v198;
        v482 = v196;
        v483 = v194;
        v47 = memcmp(&__s1, &__s2, 0x10uLL);
        v14 = v466 + 80;
        v17 = v213;
        if (v47 < 0)
          break;
        __s1 = v459;
        v485 = v384;
        v486 = v382;
        v487 = v380;
        v488 = v378;
        v489 = v376;
        v490 = v374;
        v491 = v212;
        v492 = v209;
        v493 = v207;
        v494 = v205;
        v495 = v202;
        v496 = v200;
        v497 = v198;
        v498 = v196;
        v499 = v194;
        __s2 = v457;
        v469 = v368;
        v470 = v407;
        v471 = v22;
        v472 = v415;
        v473 = v413;
        v474 = v411;
        v475 = v409;
        v476 = v24;
        v477 = v25;
        v478 = v26;
        v479 = v27;
        v480 = v399;
        v481 = v29;
        v482 = v30;
        v483 = v31;
        v143 = v285 | (v283 << 8);
        v183 = v271 | (v269 << 8);
        v191 = v319 | (v317 << 8);
        v193 = v303 | (v301 << 8);
        v189 = v215 | (v255 << 16);
        v187 = v221 | (v287 << 16);
        v48 = v457 | (v368 << 8);
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        {
          v49 = v459 | (v384 << 8) | (v382 << 16) | (v380 << 24) | (v378 << 32) | (v376 << 40) | (v374 << 48) | (v212 << 56);
          v50 = v209 | (v207 << 8) | (v205 << 16) | (v202 << 24) | (v200 << 32) | (v198 << 40) | (v196 << 48) | (v194 << 56);
          v51 = v48 | (v407 << 16) | (v22 << 24) | (v415 << 32) | (v413 << 40) | (v411 << 48) | (v409 << 56);
          v52 = v24 | (v230 << 8) | (v26 << 16) | (v400 << 24) | (v399 << 32) | (v29 << 40) | (v397 << 48) | (v31 << 56);
        }
        else
        {
          v185 = v24 | (v25 << 8);
          __s1 = v457;
          v485 = v368;
          v492 = v24;
          v493 = v25;
          __s2 = v459;
          v469 = v384;
          v476 = v209;
          v477 = v207;
          v486 = v407;
          v487 = v22;
          v488 = v415;
          v489 = v413;
          v490 = v411;
          v491 = v409;
          v494 = v26;
          v495 = v27;
          v496 = v399;
          v497 = v29;
          v498 = v397;
          v499 = v31;
          v470 = v382;
          v471 = v380;
          v472 = v378;
          v473 = v376;
          v474 = v374;
          v475 = v212;
          v478 = v205;
          v479 = v202;
          v480 = v200;
          v481 = v198;
          v482 = v196;
          v483 = v194;
          v64 = memcmp(&__s1, &__s2, 0x10uLL);
          v14 = v466 + 80;
          v17 = v213;
          if (v64 < 0)
            break;
          v49 = v459 | (v384 << 8) | (v382 << 16) | (v380 << 24) | (v378 << 32) | (v376 << 40) | (v374 << 48) | (v212 << 56);
          v50 = v209 | (v207 << 8) | (v205 << 16) | (v202 << 24) | (v200 << 32) | (v198 << 40) | (v196 << 48) | (v194 << 56);
          v51 = v48 | (v407 << 16) | (v22 << 24) | (v415 << 32) | (v413 << 40) | (v411 << 48) | (v409 << 56);
          v52 = v185 | (v26 << 16) | (v400 << 24) | (v399 << 32) | (v29 << 40) | (v397 << 48) | (v31 << 56);
          if (static UniversalControlUUID.compare(lhs:rhs:)(v49, v50, v51, v185 | (v26 << 16) | (v400 << 24) | (v399 << 32) | (v398 << 40) | (v397 << 48) | (v31 << 56)) != -1)
          {
            sub_249772148(v191 | (v315 << 16) | (v313 << 24) | (v311 << 32) | (v309 << 40) | (v307 << 48) | (v305 << 56), v193 | (v299 << 16) | (v297 << 24) | (v295 << 32) | (v293 << 40) | (v291 << 48) | (v289 << 56), v143 | (v281 << 16) | (v279 << 24) | (v277 << 32) | (v275 << 40) | (v274 << 48) | (v273 << 56), v183 | (v267 << 16) | (v265 << 24) | (v263 << 32) | (v261 << 40) | (v259 << 48) | (v257 << 56));
            v17 = v213;
            v14 = v466 + 80;
            if ((v65 & 1) != 0)
              break;
          }
          if ((sub_249772148(v49, v50, v51, v52), v66 == 2)
            && (sub_249772148(v143 | (v281 << 16) | (v279 << 24) | (v277 << 32) | (v275 << 40) | (v274 << 48) | (v273 << 56), v183 | (v267 << 16) | (v265 << 24) | (v263 << 32) | (v261 << 40) | (v259 << 48) | (v257 << 56), v191 | (v315 << 16) | (v313 << 24) | (v311 << 32) | (v309 << 40) | (v307 << 48) | (v305 << 56), v193 | (v299 << 16) | (v297 << 24) | (v295 << 32) | (v293 << 40) | (v291 << 48) | (v289 << 56)), v66 == 2)|| (v66 & 1) == 0)
          {
            v67 = sub_24978B990(v187, v189);
            v14 = v466 + 80;
            v17 = v213;
            if ((v67 & 1) != 0)
              break;
          }
        }
        if (static UniversalControlUUID.compare(lhs:rhs:)(v49, v50, v51, v52) != -1)
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v51, v52, v49, v50) == -1
            || (v53 = sub_24978B8C8(v49, v50, v143 | (v281 << 16) | (v279 << 24) | (v277 << 32) | (v275 << 40) | (v274 << 48) | (v273 << 56), v183 | (v267 << 16) | (v265 << 24) | (v263 << 32) | (v261 << 40) | (v259 << 48) | (v257 << 56), v51, v52, v191 | (v315 << 16) | (v313 << 24) | (v311 << 32) | (v309 << 40) | (v307 << 48) | (v305 << 56), v193 | (v299 << 16) | (v297 << 24) | (v295 << 32) | (v293 << 40) | (v291 << 48) | (v289 << 56)), v53 == 2)&& (v53 = sub_24978B990(v189, v187), v53 == 2)|| (v53 & 1) == 0)
          {
            v54 = dword_24983AE80[(char)v221];
            v55 = dword_24983AE80[(char)v215];
            v56 = v228 | (v343 << 8) | (v341 << 16) | (v345 << 24) | (v347 << 32) | (v349 << 40) | (v351 << 48) | (v353 << 56);
            v57 = v355 | (v357 << 8) | ((unint64_t)v41 << 16) | (v360 << 24) | (v362 << 32) | (v363 << 40) | (v365 << 48) | (v370 << 56);
            v58 = v417 | (v419 << 8) | (v421 << 16) | (v423 << 24) | (v425 << 32) | (v427 << 40) | (v429 << 48) | (v432 << 56);
            v59 = v435 | (v438 << 8) | (v440 << 16) | (v443 << 24) | (v446 << 32) | (v449 << 40) | (v372 << 48) | (v452 << 56);
            v60 = sub_24978B870(v56, v57, v58, v59);
            v405 = v238 | (v239 << 8);
            v61 = v168 | (v251 << 8);
            v401 = v234 | (v321 << 8);
            v403 = v335 | (v224 << 8);
            v62 = v54 | (v226 << 16);
            v63 = v55 | (v236 << 16);
            v14 = v466 + 80;
            v17 = v213;
            if (v60 != 2
              || (v60 = sub_24978B8C8(v56, v57, v405 | (v241 << 16) | (v243 << 24) | (v245 << 32) | (v247 << 40) | (v166 << 48) | (v249 << 56), v61 | (v253 << 16) | (v174 << 24) | (v176 << 32) | (v178 << 40) | (v337 << 48) | (v339 << 56), v58, v59, v401 | (v323 << 16) | (v325 << 24) | (v327 << 32) | (v329 << 40) | (v331 << 48) | (v333 << 56), v403 | (v218 << 16) | (v172 << 24) | (v158 << 32) | (v160 << 40) | (v162 << 48) | (v164 << 56)), v17 = v213, v14 = v466 + 80, v60 != 2)|| (v60 = sub_24978B990(v62, v63), v17 = v213, v14 = v466 + 80, v60 != 2))
            {
              if ((v60 & 1) != 0)
                break;
            }
            if (sub_24978B870(v58, v59, v56, v57) == 2
              && sub_24978B8C8(v58, v59, v401 | (v323 << 16) | (v325 << 24) | (v327 << 32) | (v329 << 40) | (v331 << 48) | (v333 << 56), v403 | (v218 << 16) | (v172 << 24) | (v158 << 32) | (v160 << 40) | (v162 << 48) | (v164 << 56), v56, v57, v405 | (v241 << 16) | (v243 << 24) | (v245 << 32) | (v247 << 40) | (v166 << 48) | (v249 << 56), v61 | (v253 << 16) | (v174 << 24) | (v176 << 32) | (v178 << 40) | (v337 << 48) | (v339 << 56)) == 2)
            {
              sub_24978B990(v63, v62);
            }
          }
        }
        __s1 = v417;
        v485 = v419;
        v486 = v421;
        v487 = v423;
        v488 = v425;
        v489 = v427;
        v490 = v429;
        v491 = v432;
        v492 = v435;
        v493 = v438;
        v494 = v440;
        v495 = v443;
        v496 = v446;
        v497 = v449;
        v498 = v372;
        v499 = v452;
        __s2 = v459;
        v469 = v384;
        v470 = v382;
        v471 = v380;
        v472 = v378;
        v473 = v376;
        v474 = v374;
        v475 = v212;
        v476 = v209;
        v477 = v207;
        v478 = v205;
        v479 = v202;
        v480 = v200;
        v481 = v198;
        v482 = v196;
        v483 = v194;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          __asm { BR              X8 }
        v396 = v205;
        v394 = v202;
        v393 = v200;
        v391 = v198;
        v388 = v194;
        v206 = v440;
        v203 = v443;
        v201 = v446;
        v199 = v449;
        v195 = v452;
        __s1 = v228;
        v485 = v343;
        v486 = v341;
        v487 = v345;
        v488 = v347;
        v489 = v349;
        v490 = v351;
        v491 = v353;
        v492 = v355;
        v493 = v357;
        v494 = v41;
        v495 = v360;
        v496 = v362;
        v497 = v363;
        v498 = v365;
        v499 = v370;
        __s2 = v457;
        v469 = v368;
        v470 = v407;
        v471 = v170;
        v472 = v415;
        v473 = v413;
        v474 = v411;
        v475 = v409;
        v476 = v149;
        v477 = v148;
        v478 = v147;
        v479 = v153;
        v480 = v146;
        v481 = v152;
        v482 = v145;
        v483 = v144;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          __asm { BR              X5 }
        v68 = v459 | (v384 << 8) | (v382 << 16) | (v380 << 24) | (v378 << 32) | (v376 << 40) | (v374 << 48) | (v212 << 56);
        v69 = v209 | (v207 << 8) | (v396 << 16) | (v394 << 24) | (v393 << 32) | (v391 << 40) | (v196 << 48) | (v388 << 56);
        v70 = v457 | (v368 << 8) | (v407 << 16) | (v170 << 24) | (v415 << 32) | (v413 << 40) | (v411 << 48) | (v409 << 56);
        v71 = v149 | (v148 << 8) | (v147 << 16) | (v153 << 24) | (v146 << 32) | (v152 << 40) | (v145 << 48) | (v144 << 56);
        v72 = sub_24978B870(v68, v69, v70, v71);
        v450 = v285 | (v283 << 8);
        v453 = v271 | (v269 << 8);
        v73 = v319 | (v317 << 8);
        v447 = v303 | (v301 << 8);
        v444 = v215 | (v255 << 16);
        v441 = v221 | (v287 << 16);
        v14 = v466 + 80;
        v11 = v150;
        if (v72 == 2
          && (v72 = sub_24978B8C8(v68, v69, v450 | (v281 << 16) | (v279 << 24) | (v277 << 32) | (v275 << 40) | (v274 << 48) | (v273 << 56), v453 | (v267 << 16) | (v265 << 24) | (v263 << 32) | (v261 << 40) | (v259 << 48) | (v257 << 56), v70, v71, v73 | (v315 << 16) | (v313 << 24) | (v311 << 32) | (v309 << 40) | (v307 << 48) | (v305 << 56), v447 | (v299 << 16) | (v297 << 24) | (v295 << 32) | (v293 << 40) | (v291 << 48) | (v289 << 56)), v11 = v150, v14 = v466 + 80, v72 == 2)&& (v72 = sub_24978B990(v444, v441), v11 = v150, v14 = v466 + 80, v72 == 2)|| (v72 & 1) == 0)
        {
          v74 = sub_24978B870(v70, v71, v68, v69);
          v11 = v150;
          v14 = v466 + 80;
          if (v74 == 2)
          {
            v74 = sub_24978B8C8(v70, v71, v73 | (v315 << 16) | (v313 << 24) | (v311 << 32) | (v309 << 40) | (v307 << 48) | (v305 << 56), v447 | (v299 << 16) | (v297 << 24) | (v295 << 32) | (v293 << 40) | (v291 << 48) | (v289 << 56), v68, v69, v450 | (v281 << 16) | (v279 << 24) | (v277 << 32) | (v275 << 40) | (v274 << 48) | (v273 << 56), v453 | (v267 << 16) | (v265 << 24) | (v263 << 32) | (v261 << 40) | (v259 << 48) | (v257 << 56));
            v11 = v150;
            v14 = v466 + 80;
            if (v74 == 2)
            {
              v74 = sub_24978B990(v441, v444);
              v11 = v150;
              v14 = v466 + 80;
              if (v74 == 2)
                goto LABEL_70;
            }
          }
          if ((v74 & 1) == 0)
          {
LABEL_70:
            v500 = v417;
            v501 = v419;
            v502 = v421;
            v503 = v423;
            v504 = v425;
            v505 = v427;
            v506 = v429;
            v507 = v432;
            v508 = v435;
            v509 = v438;
            v510 = v206;
            v511 = v203;
            v512 = v201;
            v513 = v199;
            v514 = v372;
            v515 = v195;
            v516 = v234;
            v517 = v321;
            v518 = v323;
            v519 = v325;
            v520 = v327;
            v521 = v329;
            v522 = v331;
            v523 = v333;
            v524 = v335;
            v525 = v224;
            v526 = v218;
            v527 = v172;
            v528 = v158;
            v529 = v160;
            v530 = v162;
            v531 = v164;
            v533 = v236;
            v534 = v228;
            v535 = v343;
            v536 = v341;
            v537 = v345;
            v532 = 0x1000302u >> (8 * v215);
            v538 = v347;
            v539 = v349;
            v540 = v351;
            v541 = v353;
            v542 = v355;
            v543 = v357;
            v544 = v41;
            v545 = v360;
            v546 = v362;
            v547 = v363;
            v548 = v365;
            v549 = v370;
            v550 = v238;
            v551 = v239;
            v552 = v241;
            v553 = v243;
            v554 = v245;
            v555 = v247;
            v556 = v166;
            v557 = v249;
            v558 = v168;
            v559 = v251;
            v560 = v253;
            v561 = v174;
            v562 = v176;
            v563 = v178;
            v564 = v337;
            v565 = v339;
            v566 = 0x1000302u >> (8 * v221);
            v567 = v226;
            sub_24978CDCC((uint64_t)&v500, (uint64_t)&v534);
            v11 = v150;
            v14 = v466 + 80;
          }
        }
      }
      v21 = v14 != (unsigned __int8 *)v461 || (unint64_t)v466 >= v461;
      v17 = v11;
      if (!v21)
        goto LABEL_20;
LABEL_19:
      memmove(v466, v17, 0x50uLL);
LABEL_20:
      v466 -= 80;
      if (v11 <= (unsigned __int8 *)v465 || (unint64_t)v5 <= v463)
        goto LABEL_129;
    }
    v19 = v14 != (unsigned __int8 *)v5 || v466 >= (unsigned __int8 *)v5;
    v5 = (double *)v17;
    v11 = (unsigned __int8 *)v461;
    if (!v19)
      goto LABEL_20;
    goto LABEL_19;
  }
  sub_2497AC03C(a1, (a2 - a1) / 80, a4);
  v11 = (unsigned __int8 *)&v465[10 * v8];
  if (v7 >= 80 && (unint64_t)v5 < a3)
  {
    v462 = (unint64_t)v11;
    v395 = a3;
    while (1)
    {
      v464 = (double *)v6;
      v75 = v5[9];
      v76 = v465[9];
      if (v76 >= v75)
      {
        v81 = (unsigned __int8 *)v465;
        if (v75 < v76)
          goto LABEL_81;
        v84 = *(_BYTE *)v5;
        v364 = *(unsigned __int8 *)v5;
        v85 = *((_BYTE *)v5 + 1);
        v386 = v85;
        v86 = *((_BYTE *)v5 + 2);
        v385 = v86;
        v87 = *((_BYTE *)v5 + 3);
        v258 = v87;
        v88 = *((_BYTE *)v5 + 4);
        v369 = v88;
        v89 = *((_BYTE *)v5 + 5);
        v367 = v89;
        v90 = *((_BYTE *)v5 + 6);
        v366 = v90;
        v91 = *((_BYTE *)v5 + 7);
        v92 = *((_BYTE *)v5 + 8);
        v237 = v92;
        v93 = *((_BYTE *)v5 + 9);
        v235 = v93;
        v94 = *((_BYTE *)v5 + 10);
        v233 = v94;
        v95 = *((_BYTE *)v5 + 33);
        v244 = v95;
        v96 = *((_BYTE *)v5 + 34);
        v246 = v96;
        v97 = *((_BYTE *)v5 + 35);
        v240 = v97;
        v98 = *((_BYTE *)v5 + 36);
        v248 = v98;
        v99 = *((_BYTE *)v5 + 37);
        v250 = v99;
        v100 = *((_BYTE *)v5 + 38);
        v252 = v100;
        v101 = *((_BYTE *)v5 + 39);
        v254 = v101;
        v102 = *((unsigned __int8 *)v5 + 40);
        v103 = *((_BYTE *)v5 + 41);
        v256 = v103;
        v467 = *(unsigned __int8 *)v465;
        v460 = *((unsigned __int8 *)v465 + 1);
        v458 = *((unsigned __int8 *)v465 + 2);
        v454 = *((unsigned __int8 *)v465 + 3);
        v451 = *((unsigned __int8 *)v465 + 4);
        v448 = *((unsigned __int8 *)v465 + 5);
        v445 = *((unsigned __int8 *)v465 + 6);
        v232 = *((unsigned __int8 *)v465 + 7);
        v231 = *((unsigned __int8 *)v465 + 8);
        v229 = *((unsigned __int8 *)v465 + 9);
        __s1 = *((_BYTE *)v5 + 32);
        v242 = __s1;
        v485 = v95;
        v486 = v96;
        v487 = v97;
        v488 = v98;
        v489 = v99;
        v490 = v100;
        v491 = v101;
        v492 = v102;
        v493 = v103;
        v227 = *((unsigned __int8 *)v465 + 10);
        v494 = *((_BYTE *)v5 + 42);
        v371 = v494;
        v104 = *((_BYTE *)v5 + 11);
        v276 = v104;
        v225 = *((unsigned __int8 *)v465 + 11);
        v495 = *((_BYTE *)v5 + 43);
        v373 = v495;
        v105 = *((_BYTE *)v5 + 12);
        v280 = v105;
        v222 = *((unsigned __int8 *)v465 + 12);
        v496 = *((_BYTE *)v5 + 44);
        v375 = v496;
        v106 = *((_BYTE *)v5 + 13);
        v278 = v106;
        v219 = *((unsigned __int8 *)v465 + 13);
        v497 = *((_BYTE *)v5 + 45);
        v377 = v497;
        v107 = v5;
        v108 = *((unsigned __int8 *)v5 + 14);
        v216 = *((unsigned __int8 *)v465 + 14);
        v498 = *((_BYTE *)v107 + 46);
        v379 = v498;
        v109 = *((_BYTE *)v107 + 15);
        v383 = v109;
        v214 = *((unsigned __int8 *)v465 + 15);
        v499 = *((_BYTE *)v107 + 47);
        v381 = v499;
        __s2 = v84;
        v469 = v85;
        v470 = v86;
        v471 = v87;
        v472 = v88;
        v473 = v89;
        v474 = v90;
        v475 = v91;
        v476 = v92;
        v477 = v93;
        v478 = v94;
        v479 = v104;
        v480 = v105;
        v481 = v106;
        v482 = v108;
        v483 = v109;
        v322 = *((unsigned __int8 *)v107 + 17);
        v324 = *((unsigned __int8 *)v107 + 18);
        v326 = *((unsigned __int8 *)v107 + 19);
        v328 = *((unsigned __int8 *)v107 + 20);
        v330 = *((unsigned __int8 *)v107 + 21);
        v332 = *((unsigned __int8 *)v107 + 22);
        v334 = *((unsigned __int8 *)v107 + 24);
        v336 = *((unsigned __int8 *)v107 + 25);
        v338 = *((unsigned __int8 *)v107 + 31);
        v302 = *((unsigned __int8 *)v107 + 48);
        v304 = *((unsigned __int8 *)v107 + 49);
        v264 = *((unsigned __int8 *)v107 + 50);
        v350 = *((unsigned __int8 *)v107 + 51);
        v352 = *((unsigned __int8 *)v107 + 52);
        v354 = *((unsigned __int8 *)v107 + 53);
        v306 = *((unsigned __int8 *)v107 + 54);
        v356 = *((unsigned __int8 *)v107 + 55);
        v358 = *((unsigned __int8 *)v107 + 56);
        v359 = *((unsigned __int8 *)v107 + 57);
        v361 = *((unsigned __int8 *)v107 + 58);
        v266 = *((unsigned __int8 *)v107 + 59);
        v167 = *((unsigned __int8 *)v107 + 60);
        v169 = *((unsigned __int8 *)v107 + 61);
        v171 = *((unsigned __int8 *)v107 + 62);
        v173 = *((unsigned __int8 *)v107 + 63);
        v262 = *((unsigned __int8 *)v107 + 64);
        v340 = *((unsigned __int16 *)v107 + 33);
        v456 = v107;
        v272 = *((unsigned __int16 *)v107 + 34);
        v188 = *((unsigned __int8 *)v465 + 16);
        v186 = *((unsigned __int8 *)v465 + 17);
        v184 = *((unsigned __int8 *)v465 + 18);
        v182 = *((unsigned __int8 *)v465 + 19);
        v181 = *((unsigned __int8 *)v465 + 20);
        v180 = *((unsigned __int8 *)v465 + 21);
        v179 = *((unsigned __int8 *)v465 + 22);
        v177 = *((unsigned __int8 *)v465 + 23);
        v175 = *((unsigned __int8 *)v465 + 24);
        v320 = *((unsigned __int8 *)v465 + 25);
        v318 = *((unsigned __int8 *)v465 + 26);
        v316 = *((unsigned __int8 *)v465 + 27);
        v314 = *((unsigned __int8 *)v465 + 28);
        v312 = *((unsigned __int8 *)v465 + 29);
        v310 = *((unsigned __int8 *)v465 + 30);
        v308 = *((unsigned __int8 *)v465 + 31);
        v406 = *((unsigned __int8 *)v465 + 32);
        v408 = *((unsigned __int8 *)v465 + 33);
        v410 = *((unsigned __int8 *)v465 + 34);
        v412 = *((unsigned __int8 *)v465 + 35);
        v414 = *((unsigned __int8 *)v465 + 36);
        v416 = *((unsigned __int8 *)v465 + 37);
        v418 = *((unsigned __int8 *)v465 + 38);
        v420 = *((unsigned __int8 *)v465 + 39);
        v422 = *((unsigned __int8 *)v465 + 40);
        v424 = *((unsigned __int8 *)v465 + 41);
        v426 = *((unsigned __int8 *)v465 + 42);
        v428 = *((unsigned __int8 *)v465 + 43);
        v430 = *((unsigned __int8 *)v465 + 44);
        v433 = *((unsigned __int8 *)v465 + 45);
        v436 = *((unsigned __int8 *)v465 + 46);
        v439 = *((unsigned __int8 *)v465 + 47);
        v282 = *((unsigned __int8 *)v465 + 48);
        v284 = *((unsigned __int8 *)v465 + 49);
        v286 = *((unsigned __int8 *)v465 + 50);
        v288 = *((unsigned __int8 *)v465 + 51);
        v290 = *((unsigned __int8 *)v465 + 52);
        v292 = *((unsigned __int8 *)v465 + 53);
        v294 = *((unsigned __int8 *)v465 + 54);
        v342 = *((unsigned __int8 *)v465 + 55);
        v296 = *((unsigned __int8 *)v465 + 56);
        v344 = *((unsigned __int8 *)v465 + 57);
        v298 = *((unsigned __int8 *)v465 + 58);
        v300 = *((unsigned __int8 *)v465 + 59);
        v346 = *((unsigned __int8 *)v465 + 60);
        v348 = *((unsigned __int8 *)v465 + 61);
        v268 = *((unsigned __int8 *)v465 + 62);
        v270 = *((unsigned __int8 *)v465 + 63);
        v260 = *((unsigned __int8 *)v465 + 64);
        v190 = *((unsigned __int16 *)v465 + 33);
        v192 = *((unsigned __int16 *)v465 + 34);
        v387 = v108;
        v155 = *((unsigned __int8 *)v107 + 16);
        v156 = *((unsigned __int8 *)v107 + 23);
        v157 = *((unsigned __int8 *)v107 + 26);
        v159 = *((unsigned __int8 *)v107 + 27);
        v161 = *((unsigned __int8 *)v107 + 28);
        v163 = *((unsigned __int8 *)v107 + 29);
        v165 = *((unsigned __int8 *)v107 + 30);
        v151 = v102;
        v154 = v108;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          __asm { BR              X8 }
        v142 = v102;
        __s1 = v406;
        v485 = v408;
        v486 = v410;
        v487 = v412;
        v488 = v414;
        v489 = v416;
        v490 = v418;
        v491 = v420;
        v492 = v422;
        v493 = v424;
        v494 = v426;
        v495 = v428;
        v496 = v430;
        v497 = v433;
        v498 = v436;
        v499 = v439;
        __s2 = v467;
        v469 = v460;
        v470 = v458;
        v471 = v454;
        v472 = v451;
        v473 = v448;
        v474 = v445;
        v475 = v232;
        v476 = v231;
        v477 = v229;
        v478 = v227;
        v479 = v225;
        v480 = v222;
        v481 = v219;
        v482 = v216;
        v483 = v214;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          __asm { BR              X8 }
        __s1 = v364;
        v485 = v386;
        v486 = v385;
        v487 = v258;
        v488 = v369;
        v489 = v367;
        v490 = v366;
        v491 = v91;
        v492 = v237;
        v493 = v235;
        v494 = v233;
        v495 = v276;
        v496 = v280;
        v497 = v278;
        v498 = v108;
        v499 = v383;
        __s2 = v467;
        v469 = v460;
        v470 = v458;
        v471 = v454;
        v472 = v451;
        v473 = v448;
        v474 = v445;
        v475 = v232;
        v476 = v231;
        v477 = v229;
        v478 = v227;
        v479 = v225;
        v480 = v222;
        v481 = v219;
        v482 = v216;
        v483 = v214;
        v5 = v456;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v467;
          v485 = v460;
          v486 = v458;
          v487 = v454;
          v488 = v451;
          v489 = v448;
          v490 = v445;
          v491 = v232;
          v492 = v231;
          v493 = v229;
          v494 = v227;
          v495 = v225;
          v496 = v222;
          v497 = v219;
          v498 = v216;
          v499 = v214;
          __s2 = v364;
          v469 = v386;
          v470 = v385;
          v471 = v258;
          v472 = v369;
          v473 = v367;
          v474 = v366;
          v475 = v91;
          v476 = v237;
          v477 = v235;
          v478 = v233;
          v479 = v276;
          v480 = v280;
          v481 = v278;
          v482 = v387;
          v483 = v383;
          v138 = v364 | (v386 << 8);
          v139 = v237 | (v235 << 8);
          v140 = v467 | (v460 << 8);
          v141 = v231 | (v229 << 8);
          v204 = v155 | (v322 << 8);
          v208 = v334 | (v336 << 8);
          v210 = v188 | (v186 << 8);
          v211 = v175 | (v320 << 8);
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_114;
          __s1 = v364;
          v485 = v386;
          v486 = v385;
          v487 = v258;
          v488 = v369;
          v489 = v367;
          v490 = v366;
          v491 = v91;
          v492 = v237;
          v493 = v235;
          v494 = v233;
          v495 = v276;
          v496 = v280;
          v497 = v278;
          v498 = v387;
          v499 = v383;
          __s2 = v467;
          v469 = v460;
          v470 = v458;
          v471 = v454;
          v472 = v451;
          v473 = v448;
          v474 = v445;
          v475 = v232;
          v476 = v231;
          v477 = v229;
          v478 = v227;
          v479 = v225;
          v480 = v222;
          v481 = v219;
          v482 = v216;
          v483 = v214;
          if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
          {
            v197 = v139 | (v233 << 16) | (v276 << 24) | (v280 << 32) | (v278 << 40) | (v387 << 48) | (v383 << 56);
            if (static UniversalControlUUID.compare(lhs:rhs:)(v140 | (v458 << 16) | (v454 << 24) | (v451 << 32) | (v448 << 40) | (v445 << 48) | (v232 << 56), v141 | (v227 << 16) | (v225 << 24) | (v222 << 32) | (v219 << 40) | (v216 << 48) | (v214 << 56), v138 | (v385 << 16) | (v258 << 24) | (v369 << 32) | (v367 << 40) | (v366 << 48) | ((unint64_t)v91 << 56), v197) == -1|| (sub_249772148(v204 | (v324 << 16) | (v326 << 24) | (v328 << 32) | (v330 << 40) | (v332 << 48) | (v156 << 56), v208 | (v157 << 16) | (v159 << 24) | (v161 << 32) | (v163 << 40) | (v165 << 48) | (v338 << 56), v210 | (v184 << 16) | (v182 << 24) | (v181 << 32) | (v180 << 40) | (v179 << 48) | (v177 << 56), v211 | (v318 << 16) | (v316 << 24) | (v314 << 32) | (v312 << 40) | (v310 << 48) | (v308 << 56)), (v110 & 1) == 0))
            {
              if (((sub_249772148(v140 | (v458 << 16) | (v454 << 24) | (v451 << 32) | (v448 << 40) | (v445 << 48) | (v232 << 56), v141 | (v227 << 16) | (v225 << 24) | (v222 << 32) | (v219 << 40) | (v216 << 48) | (v214 << 56), v138 | (v385 << 16) | (v258 << 24) | (v369 << 32) | (v367 << 40) | (v366 << 48) | ((unint64_t)v91 << 56), v197), v111 != 2)|| (sub_249772148(v210 | (v184 << 16) | (v182 << 24) | (v181 << 32) | (v180 << 40) | (v179 << 48) | (v177 << 56), v211 | (v318 << 16) | (v316 << 24) | (v314 << 32) | (v312 << 40) | (v310 << 48) | (v308 << 56), v204 | (v324 << 16) | (v326 << 24) | (v328 << 32) | (v330 << 40) | (v332 << 48) | (v156 << 56), v208 | (v157 << 16) | (v159 << 24) | (v161 << 32) | (v163 << 40) | (v165 << 48) | (v338 << 56)), v111 != 2))&& (v111 & 1) != 0|| (sub_24978B990(v262 | (v340 << 16), v260 | (v190 << 16)) & 1) == 0)
              {
LABEL_114:
                __s1 = v467;
                v485 = v460;
                v492 = v231;
                v493 = v229;
                __s2 = v364;
                v469 = v386;
                v476 = v237;
                v477 = v235;
                v486 = v458;
                v487 = v454;
                v488 = v451;
                v489 = v448;
                v490 = v445;
                v491 = v232;
                v494 = v227;
                v495 = v225;
                v496 = v222;
                v497 = v219;
                v498 = v216;
                v499 = v214;
                v470 = v385;
                v471 = v258;
                v472 = v369;
                v473 = v367;
                v474 = v366;
                v475 = v91;
                v478 = v233;
                v479 = v276;
                v480 = v280;
                v481 = v278;
                v482 = v387;
                v483 = v383;
                v5 = v456;
                if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                  goto LABEL_93;
                v112 = v138 | (v385 << 16) | (v258 << 24) | (v369 << 32) | (v367 << 40) | (v366 << 48) | ((unint64_t)v91 << 56);
                v113 = v139 | (v233 << 16) | (v276 << 24) | (v280 << 32) | (v278 << 40) | (v387 << 48) | (v383 << 56);
                v114 = v140 | (v458 << 16) | (v454 << 24) | (v451 << 32) | (v448 << 40) | (v445 << 48) | (v232 << 56);
                v115 = v141 | (v227 << 16) | (v225 << 24) | (v222 << 32) | (v219 << 40) | (v216 << 48) | (v214 << 56);
                if (static UniversalControlUUID.compare(lhs:rhs:)(v112, v113, v114, v115) != -1)
                {
                  sub_249772148(v114, v115, v112, v113);
                  if (v116 != 2
                    || (sub_249772148(v210 | (v184 << 16) | (v182 << 24) | (v181 << 32) | (v180 << 40) | (v179 << 48) | (v177 << 56), v211 | (v318 << 16) | (v316 << 24) | (v314 << 32) | (v312 << 40) | (v310 << 48) | (v308 << 56), v204 | (v324 << 16) | (v326 << 24) | (v328 << 32) | (v330 << 40) | (v332 << 48) | (v156 << 56), v208 | (v157 << 16) | (v159 << 24) | (v161 << 32) | (v163 << 40) | (v165 << 48) | (v338 << 56)), v116 != 2))
                  {
                    if ((v116 & 1) != 0)
                      goto LABEL_93;
                  }
                  if ((sub_249772148(v112, v113, v114, v115), v117 == 2)
                    && (sub_249772148(v204 | (v324 << 16) | (v326 << 24) | (v328 << 32) | (v330 << 40) | (v332 << 48) | (v156 << 56), v208 | (v157 << 16) | (v159 << 24) | (v161 << 32) | (v163 << 40) | (v165 << 48) | (v338 << 56), v210 | (v184 << 16) | (v182 << 24) | (v181 << 32) | (v180 << 40) | (v179 << 48) | (v177 << 56), v211 | (v318 << 16) | (v316 << 24) | (v314 << 32) | (v312 << 40) | (v310 << 48) | (v308 << 56)), v117 == 2)|| (v117 & 1) == 0)
                  {
                    if ((sub_24978B990(v260 | (v190 << 16), v262 | (v340 << 16)) & 1) != 0)
                      goto LABEL_93;
                  }
                }
                v118 = dword_24983AE80[(char)v262];
                v119 = dword_24983AE80[(char)v260];
                v120 = v242 | (v244 << 8) | (v246 << 16) | (v240 << 24) | (v248 << 32) | (v250 << 40) | (v252 << 48) | (v254 << 56);
                v121 = v102 | (v256 << 8) | (v371 << 16) | (v373 << 24) | (v375 << 32) | (v377 << 40) | (v379 << 48) | (v381 << 56);
                v122 = v406 | (v408 << 8) | (v410 << 16) | (v412 << 24) | (v414 << 32) | (v416 << 40) | (v418 << 48) | (v420 << 56);
                v123 = v422 | (v424 << 8) | (v426 << 16) | (v428 << 24) | (v430 << 32) | (v433 << 40) | (v436 << 48) | (v439 << 56);
                v124 = sub_24978B870(v120, v151 | (v256 << 8) | (v371 << 16) | (v373 << 24) | (v375 << 32) | (v377 << 40) | (v379 << 48) | (v381 << 56), v122, v123);
                v404 = v302 | (v304 << 8);
                v442 = v358 | (v359 << 8);
                v125 = v282 | (v284 << 8);
                v402 = v296 | (v344 << 8);
                v126 = v118 | (v272 << 16);
                v127 = v119 | (v192 << 16);
                if (v124 == 2)
                {
                  v124 = sub_24978B8C8(v120, v121, v404 | (v264 << 16) | (v350 << 24) | (v352 << 32) | (v354 << 40) | (v306 << 48) | (v356 << 56), v442 | (v361 << 16) | (v266 << 24) | (v167 << 32) | (v169 << 40) | (v171 << 48) | (v173 << 56), v122, v123, v125 | (v286 << 16) | (v288 << 24) | (v290 << 32) | (v292 << 40) | (v294 << 48) | (v342 << 56), v402 | (v298 << 16) | (v300 << 24) | (v346 << 32) | (v348 << 40) | (v268 << 48) | (v270 << 56));
                  if (v124 == 2)
                  {
                    v124 = sub_24978B990(v126, v127);
                    if (v124 == 2)
                      break;
                  }
                }
                if ((v124 & 1) == 0)
                  break;
              }
            }
          }
        }
      }
      v77 = v5;
      v78 = (char *)v464;
      v79 = v464 == v5;
      v5 += 10;
      if (!v79)
        goto LABEL_73;
LABEL_74:
      v6 = v78 + 80;
      v11 = (unsigned __int8 *)v462;
      if ((unint64_t)v465 >= v462 || (unint64_t)v5 >= v395)
      {
        v5 = (double *)v6;
        goto LABEL_129;
      }
    }
    if (sub_24978B870(v122, v123, v120, v121) == 2
      && sub_24978B8C8(v122, v123, v125 | (v286 << 16) | (v288 << 24) | (v290 << 32) | (v292 << 40) | (v294 << 48) | (v342 << 56), v402 | (v298 << 16) | (v300 << 24) | (v346 << 32) | (v348 << 40) | (v268 << 48) | (v270 << 56), v120, v121, v404 | (v264 << 16) | (v350 << 24) | (v352 << 32) | (v354 << 40) | (v306 << 48) | (v356 << 56), v442 | (v361 << 16) | (v266 << 24) | (v167 << 32) | (v169 << 40) | (v171 << 48) | (v173 << 56)) == 2)
    {
      sub_24978B990(v127, v126);
    }
LABEL_93:
    __s1 = v406;
    v485 = v408;
    v486 = v410;
    v487 = v412;
    v488 = v414;
    v489 = v416;
    v490 = v418;
    v491 = v420;
    v492 = v422;
    v493 = v424;
    v494 = v426;
    v495 = v428;
    v496 = v430;
    v497 = v433;
    v498 = v436;
    v499 = v439;
    __s2 = v467;
    v469 = v460;
    v470 = v458;
    v471 = v454;
    v472 = v451;
    v473 = v448;
    v474 = v445;
    v475 = v232;
    v476 = v231;
    v477 = v229;
    v478 = v227;
    v479 = v225;
    v480 = v222;
    v481 = v219;
    v482 = v216;
    v483 = v214;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      __asm { BR              X8 }
    v392 = v222;
    v390 = v219;
    v389 = v216;
    v223 = v430;
    v220 = v433;
    v217 = v436;
    __s1 = v242;
    v485 = v244;
    v486 = v246;
    v487 = v240;
    v488 = v248;
    v489 = v250;
    v490 = v252;
    v491 = v254;
    v492 = v142;
    v493 = v256;
    v494 = v371;
    v495 = v373;
    v496 = v375;
    v497 = v377;
    v498 = v379;
    v499 = v381;
    __s2 = v364;
    v469 = v386;
    v470 = v385;
    v471 = v258;
    v472 = v369;
    v473 = v367;
    v474 = v366;
    v475 = v91;
    v476 = v237;
    v477 = v235;
    v478 = v233;
    v479 = v276;
    v480 = v280;
    v481 = v278;
    v482 = v154;
    v483 = v383;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      __asm { BR              X21 }
    v81 = (unsigned __int8 *)v465;
    v5 = v456;
    v128 = v467 | (v460 << 8) | (v458 << 16) | (v454 << 24) | (v451 << 32) | (v448 << 40) | (v445 << 48) | (v232 << 56);
    v129 = v231 | (v229 << 8) | (v227 << 16) | (v225 << 24) | (v392 << 32) | (v390 << 40) | (v389 << 48) | (v214 << 56);
    v130 = v364 | (v386 << 8) | (v385 << 16) | (v258 << 24) | (v369 << 32) | (v367 << 40) | (v366 << 48) | ((unint64_t)v91 << 56);
    v131 = v237 | (v235 << 8) | (v233 << 16) | (v276 << 24) | (v280 << 32) | (v278 << 40) | (v154 << 48) | (v383 << 56);
    v132 = sub_24978B870(v128, v129, v130, v131);
    v434 = v188 | (v186 << 8);
    v437 = v175 | (v320 << 8);
    v133 = v155 | (v322 << 8);
    v134 = v334 | (v336 << 8);
    v431 = v260 | (v190 << 16);
    v135 = v262 | (v340 << 16);
    if (v132 == 2
      && (v132 = sub_24978B8C8(v128, v129, v434 | (v184 << 16) | (v182 << 24) | (v181 << 32) | (v180 << 40) | (v179 << 48) | (v177 << 56), v437 | (v318 << 16) | (v316 << 24) | (v314 << 32) | (v312 << 40) | (v310 << 48) | (v308 << 56), v130, v131, v133 | (v324 << 16) | (v326 << 24) | (v328 << 32) | (v330 << 40) | (v332 << 48) | (v156 << 56), v134 | (v157 << 16) | (v159 << 24) | (v161 << 32) | (v163 << 40) | (v165 << 48) | (v338 << 56)), v132 == 2)&& (v132 = sub_24978B990(v431, v135), v132 == 2)|| (v132 & 1) == 0)
    {
      v136 = sub_24978B870(v130, v131, v128, v129);
      if (v136 == 2
        && (v136 = sub_24978B8C8(v130, v131, v133 | (v324 << 16) | (v326 << 24) | (v328 << 32) | (v330 << 40) | (v332 << 48) | (v156 << 56), v134 | (v157 << 16) | (v159 << 24) | (v161 << 32) | (v163 << 40) | (v165 << 48) | (v338 << 56), v128, v129, v434 | (v184 << 16) | (v182 << 24) | (v181 << 32) | (v180 << 40) | (v179 << 48) | (v177 << 56), v437 | (v318 << 16) | (v316 << 24) | (v314 << 32) | (v312 << 40) | (v310 << 48) | (v308 << 56)), v136 == 2)&& (v136 = sub_24978B990(v135, v431), v136 == 2)|| (v136 & 1) == 0)
      {
        v500 = v406;
        v501 = v408;
        v502 = v410;
        v503 = v412;
        v504 = v414;
        v505 = v416;
        v506 = v418;
        v507 = v420;
        v508 = v422;
        v509 = v424;
        v510 = v426;
        v511 = v428;
        v512 = v223;
        v513 = v220;
        v514 = v217;
        v515 = v439;
        v516 = v282;
        v517 = v284;
        v518 = v286;
        v519 = v288;
        v520 = v290;
        v521 = v292;
        v522 = v294;
        v523 = v342;
        v524 = v296;
        v525 = v344;
        v526 = v298;
        v527 = v300;
        v528 = v346;
        v529 = v348;
        v530 = v268;
        v531 = v270;
        v533 = v192;
        v534 = v242;
        v535 = v244;
        v536 = v246;
        v537 = v240;
        v532 = 0x1000302u >> (8 * v260);
        v538 = v248;
        v539 = v250;
        v540 = v252;
        v541 = v254;
        v542 = v142;
        v543 = v256;
        v544 = v371;
        v545 = v373;
        v546 = v375;
        v547 = v377;
        v548 = v379;
        v549 = v381;
        v550 = v302;
        v551 = v304;
        v552 = v264;
        v553 = v350;
        v554 = v352;
        v555 = v354;
        v556 = v306;
        v557 = v356;
        v558 = v358;
        v559 = v359;
        v560 = v361;
        v561 = v266;
        v562 = v167;
        v563 = v169;
        v564 = v171;
        v565 = v173;
        v566 = 0x1000302u >> (8 * v262);
        v567 = v272;
        sub_24978CDCC((uint64_t)&v500, (uint64_t)&v534);
      }
    }
LABEL_81:
    v78 = (char *)v464;
    v79 = v464 == (double *)v81;
    v77 = (double *)v81;
    v82 = (double *)(v81 + 80);
    v83 = !v79 || v464 >= v82;
    v465 = v82;
    if (!v83)
      goto LABEL_74;
LABEL_73:
    memmove(v78, v77, 0x50uLL);
    goto LABEL_74;
  }
  v5 = (double *)v6;
LABEL_129:
  sub_2497AC03C((char *)v465, (v11 - (unsigned __int8 *)v465) / 80, (char *)v5);
  return 1;
}

void sub_249809840()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  BOOL v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  OUTLINED_FUNCTION_20_11();
  v7 = v6 & ~v5;
  if (((1 << v7) & *(_QWORD *)(v1 + 8 * (v7 >> 6))) != 0)
  {
    OUTLINED_FUNCTION_67_3();
    v8 = OUTLINED_FUNCTION_48_5();
    if ((*(_QWORD *)(v1 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v9 = (v8 + 1) & v3;
      do
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16 * v7);
        OUTLINED_FUNCTION_69_3();
        OUTLINED_FUNCTION_66_5(v10);
        sub_24983694C();
        v11 = OUTLINED_FUNCTION_33();
        OUTLINED_FUNCTION_96(v10);
        v12 = v11 & v3;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_15:
            v15 = *(_QWORD *)(v0 + 48);
            v16 = (_OWORD *)(v15 + 16 * v2);
            v17 = (_OWORD *)(v15 + 16 * v7);
            v18 = v2 != v7 || v16 >= v17 + 1;
            v2 = v7;
            if (v18)
            {
              *v16 = *v17;
              v2 = v7;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_15;
        }
        v7 = (v7 + 1) & v3;
      }
      while (((*(_QWORD *)(v1 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    OUTLINED_FUNCTION_5_14();
  }
  else
  {
    OUTLINED_FUNCTION_22_11(v4);
  }
  v19 = *(_QWORD *)(v0 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_61_4(v21);
    OUTLINED_FUNCTION_64_2();
  }
}

void sub_24980996C()
{
  uint64_t *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char *v23;
  char *v24;
  BOOL v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  _BYTE v90[16];
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  uint64_t v107;

  OUTLINED_FUNCTION_20_2();
  v2 = v1;
  v107 = *MEMORY[0x24BDAC8D0];
  v3 = *v0;
  v4 = *v0 + 56;
  v5 = -1 << *(_BYTE *)(*v0 + 32);
  v6 = (v1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_249837108();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v31 = v4;
      v32 = v3;
      v29 = (v8 + 1) & v7;
      v30 = v7;
      do
      {
        v44 = v6;
        v45 = v2;
        v9 = (char *)(*(_QWORD *)(v3 + 48) + 80 * v6);
        v82 = v9[1];
        v79 = v9[2];
        v80 = *v9;
        v78 = v9[3];
        v77 = v9[4];
        v76 = v9[5];
        v75 = v9[6];
        v81 = v9[7];
        v74 = v9[8];
        v88 = v9[11];
        v89 = v9[9];
        v84 = v9[12];
        v85 = v9[10];
        v83 = v9[14];
        v86 = v9[15];
        v87 = v9[13];
        v59 = v9[16];
        v58 = v9[17];
        v68 = v9[18];
        v67 = v9[19];
        v66 = v9[20];
        v65 = v9[21];
        v64 = v9[22];
        v69 = v9[23];
        v60 = v9[24];
        v61 = v9[25];
        v62 = v9[26];
        v70 = v9[27];
        v71 = v9[28];
        v72 = v9[29];
        v63 = v9[30];
        v73 = v9[31];
        v52 = v9[32];
        v53 = v9[33];
        v54 = v9[34];
        v56 = v9[35];
        v55 = v9[36];
        v57 = v9[37];
        v10 = v9[38];
        v11 = v9[39];
        v12 = v9[40];
        v13 = v9[41];
        v14 = v9[42];
        v15 = v9[43];
        v16 = v9[44];
        v17 = v9[45];
        v18 = v9[46];
        v19 = v9[47];
        v43 = v9[49];
        v33 = v9[48];
        v34 = v9[50];
        v42 = v9[51];
        v51 = v9[53];
        v35 = v9[52];
        v36 = v9[54];
        v50 = v9[55];
        v37 = v9[56];
        v38 = v9[57];
        v47 = v9[59];
        v39 = v9[58];
        v40 = v9[60];
        v48 = v9[61];
        v41 = v9[62];
        v49 = v9[63];
        v46 = v9[64];
        sub_249837690();
        v91 = v52;
        v92 = v53;
        v93 = v54;
        v94 = v56;
        v95 = v55;
        v96 = v57;
        v97 = v10;
        v98 = v11;
        v99 = v12;
        v100 = v13;
        v101 = v14;
        v102 = v15;
        v103 = v16;
        v104 = v17;
        v105 = v18;
        v106 = v19;
        v90[0] = v80;
        v90[1] = v82;
        v90[2] = v79;
        v90[3] = v78;
        v90[4] = v77;
        v90[5] = v76;
        v90[6] = v75;
        v90[7] = v81;
        v90[8] = v74;
        v90[9] = v89;
        v90[10] = v85;
        v90[11] = v88;
        v90[12] = v84;
        v90[13] = v87;
        v90[14] = v83;
        v90[15] = v86;
        if ((OUTLINED_FUNCTION_26_5(&v91, v90) & 0x80000000) != 0)
          __asm { BR              X15 }
        v91 = v80;
        v92 = v82;
        v93 = v79;
        v94 = v78;
        v95 = v77;
        v96 = v76;
        v97 = v75;
        v98 = v81;
        v99 = v74;
        v100 = v89;
        v101 = v85;
        v102 = v88;
        v103 = v84;
        v104 = v87;
        v105 = v83;
        v106 = v86;
        sub_24983769C();
        v91 = v80;
        v92 = v82;
        v93 = v79;
        v94 = v78;
        v95 = v77;
        v96 = v76;
        v97 = v75;
        v98 = v81;
        v99 = v74;
        v100 = v89;
        v101 = v85;
        v102 = v88;
        v103 = v84;
        v104 = v87;
        v105 = v83;
        v106 = v86;
        OUTLINED_FUNCTION_36_4();
        v91 = v59;
        v92 = v58;
        v93 = v68;
        v94 = v67;
        v95 = v66;
        v96 = v65;
        v97 = v64;
        v98 = v69;
        v99 = v60;
        v100 = v61;
        v101 = v62;
        v102 = v70;
        v103 = v71;
        v104 = v72;
        v105 = v63;
        v106 = v73;
        OUTLINED_FUNCTION_36_4();
        sub_2498376A8();
        sub_2498376C0();
        v91 = v52;
        v92 = v53;
        v93 = v54;
        v94 = v56;
        v95 = v55;
        v96 = v57;
        v97 = v10;
        v98 = v11;
        OUTLINED_FUNCTION_3_17();
        sub_24983769C();
        v91 = v52;
        v92 = v53;
        v93 = v54;
        v94 = v56;
        v95 = v55;
        v96 = v57;
        v97 = v10;
        v98 = v11;
        OUTLINED_FUNCTION_3_17();
        OUTLINED_FUNCTION_36_4();
        v91 = v33;
        v92 = v43;
        v93 = v34;
        v94 = v42;
        v95 = v35;
        v96 = v51;
        v97 = v36;
        v98 = v50;
        v99 = v37;
        v100 = v38;
        v101 = v39;
        v102 = v47;
        v103 = v40;
        v104 = v48;
        v105 = v41;
        v106 = v49;
        OUTLINED_FUNCTION_36_4();
        sub_2498376A8();
        sub_2498376C0();
        sub_2498376D8();
        v20 = sub_2498376E4() & v30;
        v2 = v45;
        if (v45 >= (uint64_t)v29)
          v21 = v20 < v29 || v45 < v20;
        else
          v21 = v20 < v29 && v45 < v20;
        v4 = v31;
        v3 = v32;
        if (!v21)
        {
          v22 = *(_QWORD *)(v32 + 48);
          v23 = (char *)(v22 + 80 * v45);
          v24 = (char *)(v22 + 80 * v44);
          v25 = v45 != v44 || v23 >= v24 + 80;
          v2 = v44;
          if (v25)
          {
            memmove(v23, v24, 0x50uLL);
            v2 = v44;
          }
        }
        v6 = (v44 + 1) & v30;
      }
      while (((*(_QWORD *)(v31 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((v1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v1) - 1;
  }
  v26 = *(_QWORD *)(v3 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
    __break(1u);
  *(_QWORD *)(v3 + 16) = v28;
  ++*(_DWORD *)(v3 + 36);
  OUTLINED_FUNCTION_3_5();
}

void sub_24980A4F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  OUTLINED_FUNCTION_20_11();
  v5 = v4 & ~v3;
  if (((1 << v5) & *(_QWORD *)(v1 + 8 * (v5 >> 6))) != 0)
  {
    OUTLINED_FUNCTION_67_3();
    OUTLINED_FUNCTION_48_5();
    if ((*(_QWORD *)(v1 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 48) + v5);
      OUTLINED_FUNCTION_69_3();
      __asm { BR              X8 }
    }
    OUTLINED_FUNCTION_5_14();
  }
  else
  {
    OUTLINED_FUNCTION_22_11(v2);
  }
  v7 = *(_QWORD *)(v0 + 16);
  v8 = __OFSUB__(v7, 1);
  v9 = v7 - 1;
  if (v8)
  {
    __break(1u);
    JUMPOUT(0x24980A6A4);
  }
  OUTLINED_FUNCTION_61_4(v9);
  OUTLINED_FUNCTION_64_2();
}

unint64_t sub_24980A6C0(unint64_t result)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char *v23;
  char *v24;
  BOOL v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  _BYTE __s2[16];
  char __s1;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  uint64_t v107;

  v2 = result;
  v107 = *MEMORY[0x24BDAC8D0];
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_249837108();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v31 = v4;
      v32 = v3;
      v29 = (v8 + 1) & v7;
      v30 = v7;
      do
      {
        v44 = v6;
        v45 = v2;
        v9 = (char *)(*(_QWORD *)(v3 + 48) + 70 * v6);
        v79 = *v9;
        v82 = v9[1];
        v78 = v9[2];
        v81 = v9[3];
        v77 = v9[4];
        v76 = v9[5];
        v75 = v9[6];
        v80 = v9[7];
        v74 = v9[8];
        v85 = v9[10];
        v86 = v9[9];
        v88 = v9[13];
        v89 = v9[11];
        v83 = v9[14];
        v84 = v9[12];
        v87 = v9[15];
        v68 = v9[16];
        v67 = v9[17];
        v66 = v9[18];
        v65 = v9[19];
        v64 = v9[20];
        v58 = v9[21];
        v59 = v9[22];
        v69 = v9[23];
        v60 = v9[24];
        v61 = v9[25];
        v62 = v9[26];
        v70 = v9[27];
        v71 = v9[28];
        v72 = v9[29];
        v63 = v9[30];
        v73 = v9[31];
        v52 = v9[32];
        v53 = v9[33];
        v54 = v9[34];
        v56 = v9[35];
        v55 = v9[36];
        v57 = v9[37];
        v10 = v9[38];
        v11 = v9[39];
        v12 = v9[40];
        v13 = v9[41];
        v14 = v9[42];
        v15 = v9[43];
        v16 = v9[44];
        v17 = v9[45];
        v18 = v9[46];
        v19 = v9[47];
        v43 = v9[49];
        v33 = v9[48];
        v34 = v9[50];
        v42 = v9[51];
        v51 = v9[53];
        v35 = v9[52];
        v36 = v9[54];
        v37 = v9[55];
        v38 = v9[56];
        v47 = v9[57];
        v48 = v9[59];
        v39 = v9[58];
        v40 = v9[60];
        v49 = v9[61];
        v41 = v9[62];
        v50 = v9[63];
        v46 = v9[64];
        sub_249837690();
        __s1 = v52;
        v92 = v53;
        v93 = v54;
        v94 = v56;
        v95 = v55;
        v96 = v57;
        v97 = v10;
        v98 = v11;
        v99 = v12;
        v100 = v13;
        v101 = v14;
        v102 = v15;
        v103 = v16;
        v104 = v17;
        v105 = v18;
        v106 = v19;
        __s2[0] = v79;
        __s2[1] = v82;
        __s2[2] = v78;
        __s2[3] = v81;
        __s2[4] = v77;
        __s2[5] = v76;
        __s2[6] = v75;
        __s2[7] = v80;
        __s2[8] = v74;
        __s2[9] = v86;
        __s2[10] = v85;
        __s2[11] = v89;
        __s2[12] = v84;
        __s2[13] = v88;
        __s2[14] = v83;
        __s2[15] = v87;
        if (memcmp(&__s1, __s2, 0x10uLL) < 0)
          __asm { BR              X15 }
        __s1 = v79;
        v92 = v82;
        v93 = v78;
        v94 = v81;
        v95 = v77;
        v96 = v76;
        v97 = v75;
        v98 = v80;
        v99 = v74;
        v100 = v86;
        v101 = v85;
        v102 = v89;
        v103 = v84;
        v104 = v88;
        v105 = v83;
        v106 = v87;
        sub_24983769C();
        __s1 = v79;
        v92 = v82;
        v93 = v78;
        v94 = v81;
        v95 = v77;
        v96 = v76;
        v97 = v75;
        v98 = v80;
        v99 = v74;
        v100 = v86;
        v101 = v85;
        v102 = v89;
        v103 = v84;
        v104 = v88;
        v105 = v83;
        v106 = v87;
        sub_24983769C();
        __s1 = v68;
        v92 = v67;
        v93 = v66;
        v94 = v65;
        v95 = v64;
        v96 = v58;
        v97 = v59;
        v98 = v69;
        v99 = v60;
        v100 = v61;
        v101 = v62;
        v102 = v70;
        v103 = v71;
        v104 = v72;
        v105 = v63;
        v106 = v73;
        sub_24983769C();
        sub_2498376A8();
        sub_2498376C0();
        __s1 = v52;
        v92 = v53;
        v93 = v54;
        v94 = v56;
        v95 = v55;
        v96 = v57;
        v97 = v10;
        v98 = v11;
        v99 = v12;
        v100 = v13;
        v101 = v14;
        v102 = v15;
        v103 = v16;
        v104 = v17;
        v105 = v18;
        v106 = v19;
        sub_24983769C();
        __s1 = v52;
        v92 = v53;
        v93 = v54;
        v94 = v56;
        v95 = v55;
        v96 = v57;
        v97 = v10;
        v98 = v11;
        v99 = v12;
        v100 = v13;
        v101 = v14;
        v102 = v15;
        v103 = v16;
        v104 = v17;
        v105 = v18;
        v106 = v19;
        sub_24983769C();
        __s1 = v33;
        v92 = v43;
        v93 = v34;
        v94 = v42;
        v95 = v35;
        v96 = v51;
        v97 = v36;
        v98 = v37;
        v99 = v38;
        v100 = v47;
        v101 = v39;
        v102 = v48;
        v103 = v40;
        v104 = v49;
        v105 = v41;
        v106 = v50;
        sub_24983769C();
        sub_2498376A8();
        sub_2498376C0();
        v20 = sub_2498376E4() & v30;
        v2 = v45;
        if (v45 >= (uint64_t)v29)
          v21 = v20 < v29 || v45 < v20;
        else
          v21 = v20 < v29 && v45 < v20;
        v4 = v31;
        v3 = v32;
        if (!v21)
        {
          v22 = *(_QWORD *)(v32 + 48);
          v23 = (char *)(v22 + 70 * v45);
          v24 = (char *)(v22 + 70 * v44);
          v25 = v45 != v44 || v23 >= v24 + 70;
          v2 = v44;
          if (v25)
          {
            memmove(v23, v24, 0x46uLL);
            v2 = v44;
          }
        }
        v6 = (v44 + 1) & v30;
      }
      while (((*(_QWORD *)(v31 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v26 = *(_QWORD *)(v3 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
    __break(1u);
  *(_QWORD *)(v3 + 16) = v28;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_24980B2E8@<X0>(unint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v17;

  v4 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a1 & 0x8000000000000000) != 0 || (v9 = *v4, 1 << *(_BYTE *)(*v4 + 32) <= (uint64_t)a1))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (((*(_QWORD *)(v9 + ((a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(_DWORD *)(v9 + 36) != a2)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v17 = *v4;
  *v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
LABEL_10:
    sub_2497C6264();
    v9 = v17;
  }
  v10 = *(_QWORD *)(v9 + 48) + 70 * a1;
  v11 = *(_BYTE *)(v10 + 64);
  v12 = *(_DWORD *)(v10 + 66);
  v13 = *(_OWORD *)(v10 + 16);
  v14 = *(_OWORD *)(v10 + 32);
  v15 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)a3 = *(_OWORD *)v10;
  *(_OWORD *)(a3 + 16) = v13;
  *(_OWORD *)(a3 + 32) = v14;
  *(_OWORD *)(a3 + 48) = v15;
  *(_BYTE *)(a3 + 64) = v11;
  *(_DWORD *)(a3 + 66) = v12;
  sub_24980A6C0(a1);
  *v4 = v17;
  return swift_bridgeObjectRelease();
}

unint64_t sub_24980B3DC()
{
  unint64_t result;

  result = qword_2578820E8;
  if (!qword_2578820E8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlConfiguration, &type metadata for UniversalControlConfiguration);
    atomic_store(result, (unint64_t *)&qword_2578820E8);
  }
  return result;
}

unint64_t sub_24980B41C()
{
  unint64_t result;

  result = qword_2578820F0;
  if (!qword_2578820F0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlConfiguration.GradedLink, &type metadata for UniversalControlConfiguration.GradedLink);
    atomic_store(result, (unint64_t *)&qword_2578820F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlConfiguration()
{
  return &type metadata for UniversalControlConfiguration;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t getEnumTagSinglePayload for UVC1Link(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 80))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 64);
      v4 = v3 >= 4;
      v2 = v3 - 4;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UVC1Link(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlConfiguration.GradedLink()
{
  return &type metadata for UniversalControlConfiguration.GradedLink;
}

unint64_t sub_24980B514()
{
  unint64_t result;

  result = qword_2578820F8;
  if (!qword_2578820F8)
  {
    result = MEMORY[0x24BCF8F94](&unk_249838960, &type metadata for LinkDevices);
    atomic_store(result, (unint64_t *)&qword_2578820F8);
  }
  return result;
}

unint64_t sub_24980B550()
{
  unint64_t result;

  result = qword_257882100;
  if (!qword_257882100)
  {
    result = MEMORY[0x24BCF8F94](&unk_249838920, &type metadata for LinkAnchors);
    atomic_store(result, (unint64_t *)&qword_257882100);
  }
  return result;
}

uint64_t sub_24980B58C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UVC1Digester();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void OUTLINED_FUNCTION_0_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a65;
  int a66;
  uint64_t v66;

  *(_DWORD *)(v66 - 216) = a65;
  *(_DWORD *)(v66 - 220) = a60;
  *(_DWORD *)(v66 - 224) = a66;
}

uint64_t OUTLINED_FUNCTION_2_23@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,int a32,char a33,int a34,char a35,int a36,char a37,int a38,char a39,int a40,char a41,int a42,char a43)
{
  uint64_t v43;

  *(_BYTE *)(v43 - 200) = a1;
  *(_BYTE *)(v43 - 199) = a31;
  *(_BYTE *)(v43 - 198) = a33;
  *(_BYTE *)(v43 - 197) = a35;
  *(_BYTE *)(v43 - 196) = a37;
  *(_BYTE *)(v43 - 195) = a39;
  *(_BYTE *)(v43 - 194) = a41;
  *(_BYTE *)(v43 - 193) = a43;
  return memcmp((const void *)(v43 - 192), (const void *)(v43 - 208), 0x10uLL);
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 176) = v0;
  *(_BYTE *)(v1 - 175) = *(_DWORD *)(v1 - 204);
  *(_BYTE *)(v1 - 174) = *(_DWORD *)(v1 - 220);
  *(_BYTE *)(v1 - 173) = *(_DWORD *)(v1 - 208);
  *(_BYTE *)(v1 - 172) = *(_DWORD *)(v1 - 224);
  *(_BYTE *)(v1 - 171) = *(_DWORD *)(v1 - 212);
  *(_BYTE *)(v1 - 170) = *(_DWORD *)(v1 - 228);
  *(_BYTE *)(v1 - 169) = *(_DWORD *)(v1 - 216);
  return v1 - 184;
}

uint64_t OUTLINED_FUNCTION_4_20()
{
  uint64_t v0;

  return UniversalControlLink.hash(into:)(v0 - 120);
}

uint64_t OUTLINED_FUNCTION_5_14()
{
  uint64_t v0;
  unint64_t v1;

  *(_QWORD *)(v0 + ((v1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v1) - 1;
  return swift_release();
}

__n128 OUTLINED_FUNCTION_8_17()
{
  __n128 *v0;

  return v0[3];
}

void *OUTLINED_FUNCTION_9_15(void *a1)
{
  const void *v1;

  return memcpy(a1, v1, 0x46uLL);
}

void OUTLINED_FUNCTION_11_11(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a69;
  int v69;
  int v70;
  uint64_t v71;

  *(_DWORD *)(v71 - 172) = v70;
  *(_DWORD *)(v71 - 180) = v69;
  *(_DWORD *)(v71 - 176) = a69;
  *(_DWORD *)(v71 - 184) = a2;
}

uint64_t OUTLINED_FUNCTION_12_10(uint64_t result, char a2, char a3)
{
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(v5 - 160) = v4;
  *(_DWORD *)(v5 - 156) = v3;
  *(_BYTE *)(v5 - 134) = v4;
  *(_BYTE *)(v5 - 133) = v3;
  *(_BYTE *)(v5 - 132) = result;
  *(_BYTE *)(v5 - 131) = a2;
  *(_BYTE *)(v5 - 130) = a3;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_10()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748C10(v1, v0);
}

__n128 OUTLINED_FUNCTION_17_11()
{
  uint64_t v0;

  return *(__n128 *)(v0 - 68);
}

__n128 OUTLINED_FUNCTION_19_13()
{
  __n128 *v0;

  return v0[2];
}

uint64_t OUTLINED_FUNCTION_21_10()
{
  return _s16UniversalControl12UVC1DigesterV6update13bufferPointerySW_tF_0();
}

void OUTLINED_FUNCTION_22_11(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  *(_QWORD *)(v1 + ((v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (a1 << v2) - 1;
}

void OUTLINED_FUNCTION_23_7()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 180) = v0;
  *(_BYTE *)(v1 - 179) = *(_DWORD *)(v1 - 216);
  *(_BYTE *)(v1 - 178) = *(_DWORD *)(v1 - 220);
  *(_BYTE *)(v1 - 177) = *(_DWORD *)(v1 - 224);
}

uint64_t OUTLINED_FUNCTION_26_8()
{
  return sub_249837690();
}

uint64_t OUTLINED_FUNCTION_29_5()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748C10(v1, v0);
}

uint64_t OUTLINED_FUNCTION_33_9()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748BCC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_34_8()
{
  return sub_2498376D8();
}

uint64_t OUTLINED_FUNCTION_35_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_39_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_42_3()
{
  return type metadata accessor for UVC1Config();
}

void OUTLINED_FUNCTION_45_5(__n128 *a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>, __n128 a4@<Q2>, __n128 a5@<Q3>)
{
  unsigned __int8 v5;
  unsigned __int16 v6;
  unsigned __int16 v7;

  a1[2] = a2;
  a1[3] = a3;
  a1[4] = a4;
  a1[5] = a5;
  a1[6].n128_u8[0] = v5;
  a1[6].n128_u16[1] = v6;
  a1[6].n128_u16[2] = v7;
}

uint64_t OUTLINED_FUNCTION_48_5()
{
  return sub_249837108();
}

void OUTLINED_FUNCTION_49_4(char a1, uint64_t a2)
{
  sub_24974E400(a1, a2, 1);
}

uint64_t OUTLINED_FUNCTION_51_5(uint64_t a1)
{
  unint64_t v1;

  return sub_249748BCC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_55_4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748C10(v1, v0);
}

uint64_t OUTLINED_FUNCTION_56_4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748BCC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_57_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_58_4()
{
  return sub_2497E4B64();
}

void OUTLINED_FUNCTION_61_4(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  ++*(_DWORD *)(v1 + 36);
}

BOOL OUTLINED_FUNCTION_62_2(uint64_t a1)
{
  return a1 != -1;
}

uint64_t OUTLINED_FUNCTION_64_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_66_5(uint64_t a1)
{
  unint64_t v1;

  return sub_249748BCC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_67_3()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_68_4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t OUTLINED_FUNCTION_70_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_71_5()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t OUTLINED_FUNCTION_74_4()
{
  return sub_249836CA0();
}

double OUTLINED_FUNCTION_75_3()
{
  return CFAbsoluteTimeGetCurrent();
}

uint64_t sub_24980BA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int16 v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v11 = a1;
  v12 = a2;
  v13 = BYTE2(a2);
  v14 = BYTE3(a2);
  v15 = BYTE4(a2);
  v16 = BYTE5(a2);
  sub_249748BCC(a4, a5);
  sub_24975DF18((uint64_t)&v11, (uint64_t)&v17, a3, a4, a5);
  v9 = v8;
  sub_249748C10(a4, a5);
  return v9;
}

void static UVC1Digest.< infix(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

BOOL sub_24980BB78()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_24();
  return OUTLINED_FUNCTION_3_18(v0, v1 & 0xFFFFFFFFFFFFLL, BYTE6(v1)) == -1;
}

uint64_t UVC1Digest.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[4];

  v2 = sub_249836C7C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_249836C40();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v17 - v11;
  sub_249836C70();
  sub_249836C58();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  OUTLINED_FUNCTION_6_11();
  v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v10, v6);
  v14 = v17[2];
  v15 = v17[3];
  result = ((uint64_t (*)(char *, uint64_t))v13)(v12, v6);
  *a1 = v14;
  a1[1] = v15;
  return result;
}

double UVC1Digester.finalize()@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double result;
  uint64_t v7;
  __int128 v8;

  v2 = sub_249836C40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249836C58();
  OUTLINED_FUNCTION_6_11();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  result = *(double *)&v8;
  *a1 = v8;
  return result;
}

void static UVC1Digest.== infix(_:_:)()
{
  JUMPOUT(0x24BCF78FCLL);
}

void UVC1Digest.description.getter()
{
  sub_24980C6C8();
}

void UVC1Digest.init(data:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_24980BEC4()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_249836C64();
  if (BYTE6(v1) != result)
  {
    result = sub_249748C10(v2, v1);
    v2 = 0;
    v1 = 0xF000000000000000;
  }
  *v0 = v2;
  v0[1] = v1;
  return result;
}

uint64_t UVC1Digest.data.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_1_21(*v0);
  return v1;
}

uint64_t sub_24980BF64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_24980DEF8(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t UVC1Digest.init(stringValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  unsigned __int8 v24;
  int v25;
  char v26;
  unsigned __int8 v27;
  uint64_t v28;
  char v29;
  int v30;
  unsigned __int8 v31;
  uint64_t v32;
  char v33;
  int v34;
  __int16 v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t result;
  uint64_t v39;
  unint64_t v40;

  v6 = sub_249836D90();
  v7 = sub_249836C64();
  if (v7 + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_68;
  }
  if (v6 / 2 != 2 * v7 || (v6 & 1) != 0)
    goto LABEL_65;
  sub_249836C64();
  v8 = sub_249836970();
  v39 = v8;
  v40 = v9;
  v10 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v10 = a1 & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    v11 = OUTLINED_FUNCTION_18_10();
    v13 = v12;
    OUTLINED_FUNCTION_9_16();
    v14 = OUTLINED_FUNCTION_18_10();
    v16 = v15;
    OUTLINED_FUNCTION_9_16();
    v17 = HIBYTE(v13) & 0xF;
    v18 = v11 & 0xFFFFFFFFFFFFLL;
    if ((v13 & 0x2000000000000000) != 0)
      v19 = HIBYTE(v13) & 0xF;
    else
      v19 = v11 & 0xFFFFFFFFFFFFLL;
    if (v19)
    {
      if ((v13 & 0x1000000000000000) == 0)
      {
        if ((v13 & 0x2000000000000000) == 0)
        {
          if ((v11 & 0x1000000000000000) != 0)
            v20 = (unsigned __int8 *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v20 = (unsigned __int8 *)sub_2498371C8();
          v21 = (sub_24980D638(v20, v18, 16) >> 8) & 1;
LABEL_55:
          OUTLINED_FUNCTION_72_3();
          if (!v21)
          {
LABEL_56:
            if ((sub_24980C370(v14, v16, 0x10uLL) & 0x100) == 0)
              __asm { BR              X10 }
            sub_249748C10(v39, v40);
            goto LABEL_65;
          }
          goto LABEL_64;
        }
        if (v11 == 43)
        {
          if (v17)
          {
            if (v17 != 1)
            {
              v27 = 0;
              while (1)
              {
                OUTLINED_FUNCTION_14_11();
                if (v26)
                {
                  if ((v30 - 65) < 6)
                  {
                    v29 = v30 - 55;
                  }
                  else
                  {
                    if ((v30 - 97) > 5)
                      goto LABEL_54;
                    v29 = v30 - 87;
                  }
                }
                if (v27 > 0xFu)
                  break;
                v27 = v29 + 16 * v27;
                if (v28 == 1)
                {
LABEL_53:
                  v21 = 0;
                  goto LABEL_55;
                }
              }
            }
            goto LABEL_54;
          }
LABEL_69:
          __break(1u);
        }
        if (v11 != 45)
        {
          if (v17)
          {
            v31 = 0;
            while (1)
            {
              OUTLINED_FUNCTION_14_11();
              if (v26)
              {
                if ((v34 - 65) < 6)
                {
                  v33 = v34 - 55;
                }
                else
                {
                  if ((v34 - 97) > 5)
                    goto LABEL_54;
                  v33 = v34 - 87;
                }
              }
              if (v31 > 0xFu)
                break;
              v31 = v33 + 16 * v31;
              if (v32 == 1)
                goto LABEL_53;
            }
          }
          goto LABEL_54;
        }
        if (v17)
        {
          if (v17 != 1)
          {
            LOBYTE(v22) = 0;
            while (1)
            {
              OUTLINED_FUNCTION_14_11();
              if (v26)
              {
                if ((v25 - 65) < 6)
                {
                  v24 = v25 - 55;
                }
                else
                {
                  if ((v25 - 97) > 5)
                    break;
                  v24 = v25 - 87;
                }
              }
              if (v22 > 0xFu)
                break;
              v22 = 16 * (v22 & 0xF) - v24;
              if ((v22 & 0xFFFFFF00) != 0)
                break;
              if (v23 == 1)
                goto LABEL_53;
            }
          }
LABEL_54:
          v21 = 1;
          goto LABEL_55;
        }
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      v35 = sub_24980D0DC(v11, v13, 16);
      OUTLINED_FUNCTION_72_3();
      if ((v35 & 0x100) == 0)
        goto LABEL_56;
    }
    else
    {
      OUTLINED_FUNCTION_72_3();
    }
LABEL_64:
    sub_249748C10(v39, v40);
    swift_bridgeObjectRelease();
LABEL_65:
    result = OUTLINED_FUNCTION_16_0();
    v36 = 0;
    v37 = 0xF000000000000000;
    goto LABEL_66;
  }
  v36 = v8;
  v37 = v9;
  result = OUTLINED_FUNCTION_16_0();
LABEL_66:
  *a3 = v36;
  a3[1] = v37;
  return result;
}

uint64_t sub_24980C370(uint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v8;
  unsigned int v9;
  int v10;
  unsigned __int8 v11;
  uint64_t v12;
  unsigned int v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 *v17;
  unsigned int v18;
  char v19;
  __int16 v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 *v25;
  unsigned int v26;
  char v27;
  __int16 v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 *v32;
  unsigned int v33;
  char v34;
  __int16 v35;
  _QWORD v36[3];

  if (a3 - 37 < 0xFFFFFFFFFFFFFFDDLL)
  {
    __break(1u);
LABEL_76:
    swift_bridgeObjectRelease();
    v11 = 0;
    v10 = 1;
    return v11 | (v10 << 8);
  }
  v4 = HIBYTE(a2) & 0xF;
  v5 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v6 = v4;
  else
    v6 = result & 0xFFFFFFFFFFFFLL;
  if (!v6)
    goto LABEL_76;
  if ((a2 & 0x1000000000000000) != 0)
  {
    v9 = sub_24980D0DC(result, a2, a3);
    swift_bridgeObjectRelease();
    v10 = (v9 >> 8) & 1;
LABEL_12:
    if (v10)
      v11 = 0;
    else
      v11 = v9;
    return v11 | (v10 << 8);
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_2498371C8();
    v9 = sub_24980D638(v8, v5, a3);
    v10 = (v9 >> 8) & 1;
    goto LABEL_11;
  }
  v36[0] = result;
  v36[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (v4)
    {
      v21 = v4 - 1;
      if (v21)
      {
        LOBYTE(v13) = 0;
        v22 = a3 + 48;
        v23 = a3 + 55;
        v24 = a3 + 87;
        if (a3 > 0xA)
        {
          v22 = 58;
        }
        else
        {
          v24 = 97;
          v23 = 65;
        }
        v25 = (unsigned __int8 *)v36 + 1;
        v10 = 1;
        do
        {
          v26 = *v25;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              LOBYTE(v9) = 0;
              if (v26 < 0x61 || v26 >= v24)
                goto LABEL_11;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v13 * a3;
          if ((v28 & 0xFF00) != 0)
            goto LABEL_74;
          v13 = v28 + (v26 + v27);
          if (((v13 >> 8) & 1) != 0)
            goto LABEL_74;
          ++v25;
          --v21;
        }
        while (v21);
LABEL_73:
        v10 = 0;
        LOBYTE(v9) = v13;
        goto LABEL_11;
      }
      goto LABEL_74;
    }
  }
  else
  {
    if (result != 45)
    {
      if (v4)
      {
        LOBYTE(v13) = 0;
        v29 = a3 + 48;
        v30 = a3 + 55;
        v31 = a3 + 87;
        if (a3 > 0xA)
        {
          v29 = 58;
        }
        else
        {
          v31 = 97;
          v30 = 65;
        }
        v32 = (unsigned __int8 *)v36;
        v10 = 1;
        while (1)
        {
          v33 = *v32;
          if (v33 < 0x30 || v33 >= v29)
          {
            if (v33 < 0x41 || v33 >= v30)
            {
              LOBYTE(v9) = 0;
              if (v33 < 0x61 || v33 >= v31)
                goto LABEL_11;
              v34 = -87;
            }
            else
            {
              v34 = -55;
            }
          }
          else
          {
            v34 = -48;
          }
          v35 = v13 * a3;
          if ((v35 & 0xFF00) != 0)
            goto LABEL_74;
          v13 = v35 + (v33 + v34);
          if (((v13 >> 8) & 1) != 0)
            goto LABEL_74;
          ++v32;
          if (!--v4)
            goto LABEL_73;
        }
      }
      goto LABEL_74;
    }
    if (v4)
    {
      v12 = v4 - 1;
      if (v12)
      {
        LOBYTE(v13) = 0;
        v14 = a3 + 48;
        v15 = a3 + 55;
        v16 = a3 + 87;
        if (a3 > 0xA)
        {
          v14 = 58;
        }
        else
        {
          v16 = 97;
          v15 = 65;
        }
        v17 = (unsigned __int8 *)v36 + 1;
        v10 = 1;
        while (1)
        {
          v18 = *v17;
          if (v18 < 0x30 || v18 >= v14)
          {
            if (v18 < 0x41 || v18 >= v15)
            {
              LOBYTE(v9) = 0;
              if (v18 < 0x61 || v18 >= v16)
                goto LABEL_11;
              v19 = -87;
            }
            else
            {
              v19 = -55;
            }
          }
          else
          {
            v19 = -48;
          }
          v20 = v13 * a3;
          if ((v20 & 0xFF00) != 0)
            break;
          v13 = v20 - (v18 + v19);
          if ((v13 & 0xFFFFFF00) != 0)
            break;
          ++v17;
          if (!--v12)
            goto LABEL_73;
        }
      }
LABEL_74:
      LOBYTE(v9) = 0;
      v10 = 1;
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_24980C6C8()
{
  __asm { BR              X9 }
}

uint64_t sub_24980C730@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v8 = 0;
  v9 = v1;
  if (!v1)
    return 0;
  v17 = v1;
  v19 = v2;
  do
  {
    if (v8 >= v9)
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      JUMPOUT(0x24980C980);
    }
    if (v6)
    {
      if (v6 == 1)
      {
        if (v8 < v19 || v8 >= a1)
          goto LABEL_28;
        if (!sub_249836820())
        {
          __break(1u);
LABEL_35:
          __break(1u);
        }
        v12 = OUTLINED_FUNCTION_26_9();
        v13 = v8 - v12;
        if (__OFSUB__(v8, v12))
          goto LABEL_31;
      }
      else
      {
        if (v8 < *(_QWORD *)(v4 + 16))
          goto LABEL_30;
        if (v8 >= *(_QWORD *)(v4 + 24))
          goto LABEL_32;
        if (!sub_249836820())
          goto LABEL_35;
        v15 = OUTLINED_FUNCTION_26_9();
        v13 = v8 - v15;
        if (__OFSUB__(v8, v15))
          goto LABEL_33;
      }
      v14 = *(_BYTE *)(v3 + v13);
    }
    else
    {
      if (v8 >= v17)
        goto LABEL_29;
      v20 = v4;
      LOWORD(v21) = v5;
      BYTE2(v21) = BYTE2(v5);
      BYTE3(v21) = BYTE3(v5);
      BYTE4(v21) = BYTE4(v5);
      BYTE5(v21) = BYTE5(v5);
      v14 = *((_BYTE *)&v20 + v8);
    }
    LOBYTE(v20) = v14;
    sub_24980DDA0();
    sub_249836E20();
    v3 = v16;
    if (sub_249836D90() <= 1)
    {
      v20 = 48;
      v21 = 0xE100000000000000;
      OUTLINED_FUNCTION_15_9();
      OUTLINED_FUNCTION_16_0();
      v3 = v21;
    }
    ++v8;
    OUTLINED_FUNCTION_15_9();
    OUTLINED_FUNCTION_16_0();
  }
  while (v9 != v8);
  return *(_QWORD *)(v7 - 112);
}

uint64_t UVC1Digest.hash(into:)()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *v0;
  v1 = v0[1];
  OUTLINED_FUNCTION_0_24();
  sub_24983694C();
  return sub_249748C10(v2, v1);
}

void UVC1Digest.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_249837690();
  OUTLINED_FUNCTION_1_21(v1);
  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_1_4();
  sub_2498376E4();
  OUTLINED_FUNCTION_2_5();
}

void sub_24980CA2C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_249837690();
  OUTLINED_FUNCTION_1_21(v1);
  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_1_4();
  sub_2498376E4();
  OUTLINED_FUNCTION_2_5();
}

uint64_t UVC1Digest.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  _QWORD v5[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249837714();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_2497F2324();
    sub_2498375DC();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t UVC1Digest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249837738();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  sub_2497F2360();
  v1 = sub_249837600();
  return OUTLINED_FUNCTION_9_3(v1, v2, v3);
}

uint64_t sub_24980CCE0(_QWORD *a1)
{
  return UVC1Digest.init(from:)(a1);
}

uint64_t sub_24980CCF4(_QWORD *a1)
{
  return UVC1Digest.encode(to:)(a1);
}

void static UVC1Digest.compare(lhs:rhs:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_24980CD48()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_24();
  return OUTLINED_FUNCTION_3_18(v0, v1 & 0xFFFFFFFFFFFFLL, BYTE6(v1));
}

BOOL sub_24980CE34(uint64_t *a1, uint64_t *a2)
{
  return sub_24975E958(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_24980CE48(uint64_t *a1)
{
  return sub_2497EC8C8(*a1, a1[1]);
}

BOOL sub_24980CE5C(uint64_t *a1, uint64_t *a2)
{
  return sub_249771118(*a1, a1[1], *a2, a2[1]);
}

_QWORD *sub_24980CE74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578806D8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24980CED8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v6 = sub_249836E08();
    OUTLINED_FUNCTION_10_10(v6);
    return v7 | 4;
  }
  else
  {
    v3 = MEMORY[0x24BCF7DAC](15, a1 >> 16);
    OUTLINED_FUNCTION_10_10(v3);
    return v4 | 8;
  }
}

void sub_24980CF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!sub_249836820() || !__OFSUB__(a1, sub_249836838()))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_24983682C();
      __asm { BR              X10 }
    }
    __break(1u);
  }
  __break(1u);
  JUMPOUT(0x24980D0ACLL);
}

uint64_t sub_24980D0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int16 v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_249836E38();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_24980D8E0();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_2498371C8();
  }
LABEL_7:
  v11 = (unsigned __int16)sub_24980D638(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 & 0x1FF;
}

unint64_t sub_24980D1BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257882120;
  if (!qword_257882120)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257882118);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BDD06A0], v1);
    atomic_store(result, (unint64_t *)&qword_257882120);
  }
  return result;
}

unint64_t sub_24980D204()
{
  unint64_t result;

  result = qword_257882128;
  if (!qword_257882128)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UVC1Digest, &type metadata for UVC1Digest);
    atomic_store(result, (unint64_t *)&qword_257882128);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for UVC1Digester(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249836C7C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for UVC1Digester(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_249836C7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for UVC1Digester(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249836C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for UVC1Digester(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249836C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for UVC1Digester(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249836C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for UVC1Digester(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_249836C7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UVC1Digester()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24980D3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_13_11();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for UVC1Digester()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24980D400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_13_11();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata accessor for UVC1Digester()
{
  uint64_t result;

  result = qword_257882188;
  if (!qword_257882188)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24980D464()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249836C7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for UVC1Digest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_249748BCC(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for UVC1Digest(uint64_t a1)
{
  return sub_249748C10(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for UVC1Digest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_249748BCC(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_249748C10(v5, v6);
  return a1;
}

uint64_t *assignWithTake for UVC1Digest(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_249748C10(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UVC1Digest(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for UVC1Digest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UVC1Digest()
{
  return &type metadata for UVC1Digest;
}

unsigned __int8 *sub_24980D638(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned __int8 v12;
  int v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned int v24;
  unsigned int v25;
  char v26;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v14 = a2 - 1;
      if (a2 != 1)
      {
        v15 = a3 + 87;
        if (a3 > 10)
        {
          v16 = a3 + 55;
        }
        else
        {
          v15 = 97;
          v16 = 65;
        }
        if (a3 <= 10)
          v17 = a3 + 48;
        else
          v17 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v18 = result + 1;
          do
          {
            v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                v12 = 0;
                v13 = 1;
                if (v19 < 0x61 || v19 >= v15)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v20 = -87;
              }
              else
              {
                v20 = -55;
              }
            }
            else
            {
              v20 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) + (v19 + v20);
            if (((v8 >> 8) & 1) != 0)
              goto LABEL_72;
            ++v18;
            --v14;
          }
          while (v14);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 8));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v21 = a3 + 87;
        if (a3 > 10)
        {
          v22 = a3 + 55;
        }
        else
        {
          v21 = 97;
          v22 = 65;
        }
        if (a3 <= 10)
          v23 = a3 + 48;
        else
          v23 = 58;
        if (result)
        {
          LOBYTE(v24) = 0;
          do
          {
            v25 = *result;
            if (v25 < 0x30 || v25 >= v23)
            {
              if (v25 < 0x41 || v25 >= v22)
              {
                v12 = 0;
                v13 = 1;
                if (v25 < 0x61 || v25 >= v21)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v26 = -87;
              }
              else
              {
                v26 = -55;
              }
            }
            else
            {
              v26 = -48;
            }
            if (((v24 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v24 = (v24 * a3) + (v25 + v26);
            if (((v24 >> 8) & 1) != 0)
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v24;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          LOBYTE(v8) = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            if (((v8 * (unsigned __int16)a3) & 0xFF00) != 0)
              goto LABEL_72;
            v8 = (v8 * a3) - (v10 + v11);
            if ((v8 & 0xFFFFFF00) != 0)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24980D8E0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_24980D93C();
  v4 = sub_24980D970(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24980D93C()
{
  return sub_249836E44();
}

uint64_t sub_24980D970(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_24980DAB4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_24980CE74(v9, 0);
      v12 = sub_24980DBA0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x24BCF7D40](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x24BCF7D40);
LABEL_9:
      sub_2498371C8();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24BCF7D40]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_24980DAB4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_24980CED8(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_24980CED8(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_249836DF0();
  }
  __break(1u);
  return result;
}

unint64_t sub_24980DBA0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
    goto LABEL_38;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_35:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    result = v12;
    if ((v12 & 0xC) == v15)
      result = sub_24980CED8(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_249836DFC();
      v19 = result;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_2498371C8();
        v19 = *(_BYTE *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      result = sub_24980CED8(v12, a6, a7);
      v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16)
      goto LABEL_37;
    v12 = sub_249836DD8();
LABEL_31:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_35;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_24980DDA0()
{
  unint64_t result;

  result = qword_2578821C0;
  if (!qword_2578821C0)
  {
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE4298], MEMORY[0x24BEE4260]);
    atomic_store(result, (unint64_t *)&qword_2578821C0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_24()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748BCC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_21(uint64_t a1)
{
  unint64_t v1;

  return sub_249748BCC(a1, v1);
}

void OUTLINED_FUNCTION_2_24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_24980CF30(a1, a2, a3, v4, v3);
}

uint64_t OUTLINED_FUNCTION_3_18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;

  return sub_24980BA18(a1, a2, a3, v4, v3);
}

uint64_t OUTLINED_FUNCTION_4_21()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t OUTLINED_FUNCTION_6_11()
{
  return sub_249836C34();
}

uint64_t OUTLINED_FUNCTION_7_17(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  const void *v4;

  return sub_24975DE7C(a1, a2, a3, v4, v3);
}

uint64_t OUTLINED_FUNCTION_8_18()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t OUTLINED_FUNCTION_9_16()
{
  return sub_249836D9C();
}

unint64_t OUTLINED_FUNCTION_10_10(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t OUTLINED_FUNCTION_11_12()
{
  return sub_24983694C();
}

uint64_t OUTLINED_FUNCTION_13_11()
{
  return sub_249836C7C();
}

uint64_t OUTLINED_FUNCTION_15_9()
{
  return sub_249836DB4();
}

uint64_t OUTLINED_FUNCTION_18_10()
{
  return sub_249836E2C();
}

uint64_t OUTLINED_FUNCTION_20_12()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_21_11()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748BCC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_26_9()
{
  return sub_249836838();
}

ValueMetadata *type metadata accessor for UVC1Link()
{
  return &type metadata for UVC1Link;
}

uint64_t sub_24980DEF8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = MEMORY[0x24BEE0F88];
  v8[4] = MEMORY[0x24BDCFB90];
  v8[0] = a1;
  v8[1] = a2;
  v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x24BEE0F88]);
  v3 = *v2;
  if (*v2 && (v4 = v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      v6 = sub_2498368B0();
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      v6 = MEMORY[0x24BCF7890]();
    }
    else
    {
      v6 = MEMORY[0x24BCF78A8]();
    }
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  return v6;
}

uint64_t sub_24980DFB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD v12[5];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578821C8);
  v12[3] = v8;
  v12[4] = sub_24980F67C();
  v9 = (_QWORD *)swift_allocObject();
  v12[0] = v9;
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  __swift_project_boxed_opaque_existential_1(v12, v8);
  sub_249837678();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v11;
}

uint64_t sub_24980E084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)(swift_allocObject() + 16) = a4;
  *(_QWORD *)(swift_allocObject() + 16) = a4;
  *(_QWORD *)(swift_allocObject() + 16) = a4;
  _s16UniversalControl12UVC1DigesterV6update13bufferPointerySW_tF_0();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24980E21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD v26[18];
  char *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  char *v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  char *v61;
  int v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  v1 = sub_249836A18();
  v2 = *(_QWORD *)(v1 - 8);
  v66 = v1;
  v67 = v2;
  v65 = *(_QWORD *)(v2 + 64);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v27 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v44 = (char *)v26 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v61 = (char *)v26 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v64 = (char *)v26 - v9;
  v63 = *(_QWORD *)(v0 + 8);
  v10 = *(unsigned __int8 *)(v0 + 16);
  v59 = *(unsigned __int8 *)(v0 + 17);
  v60 = v10;
  v11 = *(unsigned __int8 *)(v0 + 18);
  v57 = *(unsigned __int8 *)(v0 + 19);
  v58 = v11;
  v12 = *(unsigned __int8 *)(v0 + 20);
  v55 = *(unsigned __int8 *)(v0 + 21);
  v56 = v12;
  v13 = *(unsigned __int8 *)(v0 + 22);
  v53 = *(unsigned __int8 *)(v0 + 23);
  v54 = v13;
  v14 = *(unsigned __int8 *)(v0 + 24);
  v51 = *(unsigned __int8 *)(v0 + 25);
  v52 = v14;
  v15 = *(unsigned __int8 *)(v0 + 26);
  v49 = *(unsigned __int8 *)(v0 + 27);
  v50 = v15;
  v16 = *(unsigned __int8 *)(v0 + 28);
  v47 = *(unsigned __int8 *)(v0 + 29);
  v48 = v16;
  v17 = *(unsigned __int8 *)(v0 + 30);
  v45 = *(unsigned __int8 *)(v0 + 31);
  v46 = v17;
  v18 = *(unsigned __int8 *)(v0 + 32);
  v42 = *(unsigned __int8 *)(v0 + 33);
  v43 = v18;
  v19 = *(unsigned __int8 *)(v0 + 34);
  v40 = *(unsigned __int8 *)(v0 + 35);
  v41 = v19;
  v39 = *(unsigned __int8 *)(v0 + 36);
  v38 = *(unsigned __int8 *)(v0 + 37);
  v37 = *(unsigned __int8 *)(v0 + 38);
  v36 = *(unsigned __int8 *)(v0 + 39);
  v35 = *(unsigned __int8 *)(v0 + 40);
  v34 = *(unsigned __int8 *)(v0 + 41);
  v33 = *(unsigned __int8 *)(v0 + 42);
  v32 = *(unsigned __int8 *)(v0 + 43);
  v31 = *(unsigned __int8 *)(v0 + 44);
  v20 = (double)*(unint64_t *)(v0 + 72);
  v30 = *(unsigned __int8 *)(v0 + 45);
  v29 = *(unsigned __int8 *)(v0 + 46);
  v28 = *(unsigned __int8 *)(v0 + 47);
  v26[10] = *(unsigned __int8 *)(v0 + 48);
  v26[11] = *(unsigned __int8 *)(v0 + 49);
  v26[12] = *(unsigned __int8 *)(v0 + 50);
  v26[13] = *(unsigned __int8 *)(v0 + 51);
  v26[14] = *(unsigned __int8 *)(v0 + 52);
  v26[15] = *(unsigned __int8 *)(v0 + 53);
  v26[16] = *(unsigned __int8 *)(v0 + 54);
  v26[17] = *(unsigned __int8 *)(v0 + 55);
  v26[9] = *(unsigned __int8 *)(v0 + 56);
  v26[8] = *(unsigned __int8 *)(v0 + 57);
  v26[7] = *(unsigned __int8 *)(v0 + 58);
  v26[6] = *(unsigned __int8 *)(v0 + 59);
  v26[5] = *(unsigned __int8 *)(v0 + 60);
  v26[4] = *(unsigned __int8 *)(v0 + 61);
  v26[3] = *(unsigned __int8 *)(v0 + 62);
  v26[2] = *(unsigned __int8 *)(v0 + 63);
  *(_QWORD *)&v21 = *(unsigned __int8 *)(v0 + 64);
  v26[0] = *(unsigned __int16 *)(v0 + 66);
  v26[1] = *(unsigned __int16 *)(v0 + 68);
  v62 = *(unsigned __int8 *)(v0 + 7);
  v68 = v20 / 1000.0;
  OUTLINED_FUNCTION_17_12();
  v68 = v21;
  OUTLINED_FUNCTION_17_12();
  v22 = (uint64_t)v64;
  v23 = v65;
  sub_2498369E8();
  sub_24980DEF8(v22, v22 + v23);
  v25 = v24;
  OUTLINED_FUNCTION_7_18();
  __asm { BR              X10 }
}

void sub_24980E5B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_24980F528(v1, v2 & 0xFFFFFFFFFFFFFFLL, v0);
  OUTLINED_FUNCTION_4_12();
  sub_2498369E8();
  OUTLINED_FUNCTION_3_19();
  v4 = v3;
  OUTLINED_FUNCTION_7_18();
  __asm { BR              X10 }
}

void sub_24980E6B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_19_14(v0, v1 & 0xFFFFFFFFFFFFFFLL);
  OUTLINED_FUNCTION_4_12();
  sub_2498369E8();
  OUTLINED_FUNCTION_3_19();
  v3 = v2;
  OUTLINED_FUNCTION_7_18();
  __asm { BR              X10 }
}

void sub_24980E7FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_19_14(v0, v1 & 0xFFFFFFFFFFFFFFLL);
  OUTLINED_FUNCTION_31();
  v5 = *(_QWORD *)(v4 - 312);
  sub_2498369E8();
  OUTLINED_FUNCTION_3_19();
  v7 = v6;
  v3(v5, v2);
  __asm { BR              X10 }
}

uint64_t sub_24980E96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_19_14(v0, v1 & 0xFFFFFFFFFFFFFFLL);
  OUTLINED_FUNCTION_10();
  *(_WORD *)(v2 - 104) = *(_DWORD *)(v2 - 384);
  OUTLINED_FUNCTION_18_11();
  *(_WORD *)(v2 - 104) = *(_DWORD *)(v2 - 380);
  return OUTLINED_FUNCTION_18_11();
}

uint64_t sub_24980EAA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint8x8_t v3;
  Swift::Int v6;
  UniversalControl::UniversalControlEdge_optional v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  UniversalControl::UniversalControlEdge value;
  __int16 v12;
  __int16 v13;
  __int16 v14;
  unsigned __int8 v16;
  unsigned __int8 v17;
  int8x16_t v18;
  int8x16_t v19;
  uint64x2_t v20;
  uint64_t v21;
  int8x16_t v22;
  int64x2_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int16x8_t v31;
  __int16 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[9];
  __int32 v37;
  __int16 v38;
  unsigned __int8 v39;
  _BYTE v40[24];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_5_5();
  sub_249837708();
  if (!v2)
  {
    OUTLINED_FUNCTION_8_19();
    sub_24977C964();
    sub_249837564();
    OUTLINED_FUNCTION_8_19();
    OUTLINED_FUNCTION_5_5();
    v6 = sub_249837558();
    v7.value = UniversalControlEdge.init(intValue:)(v6).value;
    if (v7.value == UniversalControl_UniversalControlEdge_unknownDefault)
    {
      v8 = sub_2498371BC();
      swift_allocError();
      v10 = v9;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      OUTLINED_FUNCTION_20_13();
      sub_2498376FC();
      sub_2498371B0();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v10, *MEMORY[0x24BEE26D8], v8);
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    }
    else
    {
      value = v7.value;
      OUTLINED_FUNCTION_13_12();
      sub_24977266C();
      sub_249837564();
      OUTLINED_FUNCTION_9_17();
      sub_2497726A8();
      OUTLINED_FUNCTION_10_11();
      v3.i32[0] = v37;
      OUTLINED_FUNCTION_9_17();
      OUTLINED_FUNCTION_10_11();
      OUTLINED_FUNCTION_16_11();
      sub_249837564();
      OUTLINED_FUNCTION_16_11();
      OUTLINED_FUNCTION_20_13();
      v12 = sub_249837570();
      v13 = v12;
      OUTLINED_FUNCTION_13_12();
      v14 = sub_249837570();
      v32 = v14;
      OUTLINED_FUNCTION_26_10();
      v31 = (int16x8_t)vmovl_u8(v3);
      OUTLINED_FUNCTION_26_10();
      v18.i64[0] = v16;
      v18.i64[1] = v17;
      v22.i64[1] = v21;
      v23 = (int64x2_t)vorrq_s8(v22, (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v18, v19), v20));
      v27 = static UniversalControlUUID.compare(lhs:rhs:)(v25, v26, vorrq_s8((int8x16_t)v23, (int8x16_t)vdupq_laneq_s64(v23, 1)).u64[0] | v36[0], v24 | ((unint64_t)v37 << 8) | ((unint64_t)BYTE1(v37) << 16) | ((unint64_t)BYTE2(v37) << 24) | ((unint64_t)HIBYTE(v37) << 32) | ((unint64_t)v38 << 40) | ((unint64_t)HIBYTE(v38) << 48) | ((unint64_t)v39 << 56));
      *(_QWORD *)&v28 = *(_QWORD *)&v36[1];
      DWORD2(v28) = v37;
      WORD6(v28) = v38;
      BYTE14(v28) = v39;
      HIBYTE(v28) = v36[0];
      *(_QWORD *)&v29 = *(_QWORD *)&v36[1];
      DWORD2(v29) = v37;
      WORD6(v29) = v38;
      BYTE14(v29) = v39;
      HIBYTE(v29) = v36[0];
      if (v27 == -1)
        __asm { BR              X10 }
      *(_QWORD *)&v30 = *(_QWORD *)&v36[1];
      DWORD2(v30) = vmovn_s16(v31).u32[0];
      WORD6(v30) = v38;
      BYTE14(v30) = v39;
      HIBYTE(v30) = v36[0];
      v34 = v28;
      v35 = v29;
      v33 = v30;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
      *(_BYTE *)a2 = v36[0];
      *(_OWORD *)(a2 + 1) = v34;
      *(_OWORD *)(a2 + 17) = v33;
      *(_OWORD *)(a2 + 33) = v35;
      *(_QWORD *)(a2 + 49) = *(_QWORD *)&v36[1];
      *(_DWORD *)(a2 + 57) = v37;
      *(_WORD *)(a2 + 61) = v38;
      *(_BYTE *)(a2 + 63) = v39;
      *(_BYTE *)(a2 + 64) = value;
      *(_WORD *)(a2 + 66) = v13;
      *(_WORD *)(a2 + 68) = v32;
      *(_QWORD *)(a2 + 72) = *(_QWORD *)v36;
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_24980F1F0(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115[8];
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v85 = v1[1];
  v94 = *v1;
  v61 = v1[3];
  v74 = v1[2];
  v3 = *((_QWORD *)v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_20_13();
  v4 = sub_24983772C();
  OUTLINED_FUNCTION_1_22(v4, v5, v6, v7, v8, v9, v10, v11, v61, *((uint64_t *)&v61 + 1), v74, *((uint64_t *)&v74 + 1), v85, *((uint64_t *)&v85 + 1), v94, *((uint64_t *)&v94 + 1), v3, v106, v110,
    v115[0],
    v116,
    v117,
    v118);
  sub_24977C8B0();
  v12 = OUTLINED_FUNCTION_12_11();
  if (!v2)
  {
    OUTLINED_FUNCTION_1_22(v12, v13, v14, v15, v16, v17, v18, v19, v62, v68, v75, v81, v86, v90, v95, v99, v103, v107, v111,
      v115[0],
      v116,
      v117,
      v118);
    v20 = sub_249837588();
    OUTLINED_FUNCTION_1_22(v20, v21, v22, v23, v24, v25, v26, v27, v63, v69, v76, v82, v87, v91, v96, v100, v96, v100, v112,
      v115[0],
      v116,
      v117,
      v118);
    sub_2497726E4();
    v28 = OUTLINED_FUNCTION_12_11();
    OUTLINED_FUNCTION_5_15(v28, v29, v30, v31, v32, v33, v34, v35, v64, v70, v77, v83, v88, v92, v97, v101, v104, v108, v113,
      v115[0],
      v116,
      v117,
      v118);
    sub_249772720();
    v36 = OUTLINED_FUNCTION_11_13();
    OUTLINED_FUNCTION_5_15(v36, v37, v38, v39, v40, v41, v42, v43, v65, v71, v78, v84, v89, v93, v98, v102, v105, v109, v114,
      v115[0],
      v116,
      v117,
      v118);
    v44 = OUTLINED_FUNCTION_11_13();
    OUTLINED_FUNCTION_22_12(v44, v45, v46, v47, v48, v49, v50, v51, v66, v72, v79);
    v52 = sub_249837594();
    OUTLINED_FUNCTION_22_12(v52, v53, v54, v55, v56, v57, v58, v59, v67, v73, v80);
    sub_2498375A0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v115, v118);
    sub_2498375A0();
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v115);
}

BOOL sub_24980F3E8(uint64_t a1, __int128 *a2)
{
  char v2;
  int v3;
  unint64_t v4;
  char v5;
  int v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _OWORD v16[4];
  char v17;
  int v18;
  _OWORD v19[4];
  char v20;
  int v21;

  v2 = *(_BYTE *)(a1 + 64);
  v3 = *(_DWORD *)(a1 + 66);
  v4 = *(_QWORD *)(a1 + 72);
  v5 = *((_BYTE *)a2 + 64);
  v6 = *(_DWORD *)((char *)a2 + 66);
  v7 = *((_QWORD *)a2 + 9);
  v8 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v8;
  v9 = *(_OWORD *)(a1 + 48);
  v10 = *a2;
  v11 = a2[1];
  v12 = a2[2];
  v13 = a2[3];
  v19[2] = *(_OWORD *)(a1 + 32);
  v19[3] = v9;
  v20 = v2;
  v21 = v3;
  v16[0] = v10;
  v16[1] = v11;
  v16[2] = v12;
  v16[3] = v13;
  v17 = v5;
  v18 = v6;
  static UniversalControlLink.== infix(_:_:)((unsigned __int8 *)v19, (uint64_t)v16);
  return (v14 & 1) != 0 && (double)v4 / 1000.0 == (double)v7 / 1000.0;
}

uint64_t sub_24980F488@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24980EAA4(a1, a2);
}

uint64_t sub_24980F49C(_QWORD *a1)
{
  return sub_24980F1F0(a1);
}

uint64_t sub_24980F4B4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = sub_2498368B0();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = MEMORY[0x24BCF7890]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = MEMORY[0x24BCF78A8]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24980F528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)(swift_allocObject() + 16) = a3;
  sub_24980E084(a1, a2 & 0xFFFFFFFFFFFFLL, BYTE6(a2), a3);
  return swift_release();
}

uint64_t sub_24980F5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  *(_QWORD *)(swift_allocObject() + 16) = a4;
  result = sub_249836820();
  if (!result || (result = sub_249836838(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_24983682C();
      _s16UniversalControl12UVC1DigesterV6update13bufferPointerySW_tF_0();
      return swift_release();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_24980F67C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2578821D0;
  if (!qword_2578821D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578821C8);
    v2 = MEMORY[0x24BDCFB90];
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BDD0790], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2578821D0);
  }
  return result;
}

uint64_t sub_24980F6D8()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_0_25()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_1_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&a20, a23);
}

uint64_t OUTLINED_FUNCTION_3_19()
{
  uint64_t v0;
  uint64_t v1;

  return sub_24980DEF8(v0, v0 + v1);
}

uint64_t OUTLINED_FUNCTION_4_22(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_24980F5AC(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_5_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&a20, a23);
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748BCC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_7_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_8_19()
{
  uint64_t v0;

  return __swift_mutable_project_boxed_opaque_existential_1(v0 - 128, *(_QWORD *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_9_17()
{
  uint64_t v0;

  return __swift_mutable_project_boxed_opaque_existential_1(v0 - 128, *(_QWORD *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_10_11()
{
  return sub_249837564();
}

uint64_t OUTLINED_FUNCTION_11_13()
{
  return sub_249837594();
}

uint64_t OUTLINED_FUNCTION_12_11()
{
  return sub_249837594();
}

uint64_t OUTLINED_FUNCTION_13_12()
{
  uint64_t v0;

  return __swift_mutable_project_boxed_opaque_existential_1(v0 - 128, *(_QWORD *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_16_11()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_mutable_project_boxed_opaque_existential_1(v1 - 128, v0);
}

uint64_t OUTLINED_FUNCTION_17_12()
{
  return _s16UniversalControl12UVC1DigesterV6update13bufferPointerySW_tF_0();
}

uint64_t OUTLINED_FUNCTION_18_11()
{
  return _s16UniversalControl12UVC1DigesterV6update13bufferPointerySW_tF_0();
}

uint64_t OUTLINED_FUNCTION_19_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24980F528(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_20_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_22_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  return __swift_mutable_project_boxed_opaque_existential_1((uint64_t)va, v11);
}

uint64_t OUTLINED_FUNCTION_24_11(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_24980F5AC(a1, a2, a3, v3);
}

void sub_24980F818(uint64_t (*a1)(void), uint64_t a2, NSObject *a3, void *a4)
{
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v7 = (void *)sub_249836898();
  v8 = objc_msgSend(v7, sel_localizedDescription);
  _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();

  v9 = a1();
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    v13 = v7;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_73_0();
    v14 = a3;
    sub_249836AFC();
    v15 = OUTLINED_FUNCTION_12_12();
    if (OUTLINED_FUNCTION_11_14(v15))
    {
      v16 = OUTLINED_FUNCTION_12();
      v41 = OUTLINED_FUNCTION_12();
      *(_DWORD *)v16 = 136446979;
      swift_bridgeObjectRetain();
      sub_24976A748(v11, v12, &v41);
      OUTLINED_FUNCTION_14_12();
      v17 = OUTLINED_FUNCTION_5_16();
      *(_WORD *)(v16 + 12) = 2082;
      v18 = OUTLINED_FUNCTION_6_13(v17, sel_domain);
      v19 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
      v21 = v20;

      sub_24976A748(v19, v21, &v41);
      OUTLINED_FUNCTION_14_12();

      v22 = swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 22) = 2048;
      OUTLINED_FUNCTION_6_13(v22, sel_code);

      OUTLINED_FUNCTION_15_10();
      *(_WORD *)(v16 + 32) = 2081;
      v23 = OUTLINED_FUNCTION_73_0();
      OUTLINED_FUNCTION_17_13(v23, v24, v25, v26, v27);
      OUTLINED_FUNCTION_15_10();
      OUTLINED_FUNCTION_5_16();
      _os_log_impl(&dword_249741000, v14, (os_log_type_t)a1, "%{public}s: %{public}s (%ld) %{private}s", (uint8_t *)v16, 0x2Au);
      OUTLINED_FUNCTION_18_12();
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_151();
  }
  else
  {
    v13 = v7;
    OUTLINED_FUNCTION_73_0();
    v14 = a3;
    sub_249836AFC();
    v28 = OUTLINED_FUNCTION_12_12();
    if (OUTLINED_FUNCTION_11_14(v28))
    {
      v29 = OUTLINED_FUNCTION_12();
      v30 = OUTLINED_FUNCTION_12();
      v41 = v30;
      *(_DWORD *)v29 = 136446723;
      v31 = OUTLINED_FUNCTION_6_13(v30, sel_domain);
      v32 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
      v34 = v33;

      sub_24976A748(v32, v34, &v41);
      OUTLINED_FUNCTION_4_23();

      v35 = swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2048;
      OUTLINED_FUNCTION_6_13(v35, sel_code);

      OUTLINED_FUNCTION_4_23();
      *(_WORD *)(v29 + 22) = 2081;
      v36 = OUTLINED_FUNCTION_73_0();
      OUTLINED_FUNCTION_17_13(v36, v37, v38, v39, v40);
      OUTLINED_FUNCTION_4_23();
      OUTLINED_FUNCTION_5_16();
      _os_log_impl(&dword_249741000, v14, (os_log_type_t)a1, "%{public}s (%ld) %{private}s", (uint8_t *)v29, 0x20u);
      swift_arrayDestroy();
LABEL_6:
      OUTLINED_FUNCTION_3();
    }
  }
  OUTLINED_FUNCTION_151();

}

void sub_24980FC04(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(void))
{
  NSObject *v3;
  NSObject *v4;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  id v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  id v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  uint64_t v184;

  v4 = v3;
  v6 = (void *)a3();
  v7 = (void *)sub_249836898();

  v9 = OUTLINED_FUNCTION_6_13(v8, sel_localizedDescription);
  v10 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  v12 = v11;

  v13 = a1();
  if (v14)
  {
    v15 = v13;
    v16 = v14;
    v169 = v7;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_74();
    v17 = v4;
    sub_249836AFC();
    v18 = OUTLINED_FUNCTION_12_12();
    if (OUTLINED_FUNCTION_18_4(v18))
    {
      v19 = OUTLINED_FUNCTION_12();
      v155 = OUTLINED_FUNCTION_12();
      v184 = v155;
      *(_DWORD *)v19 = 136446979;
      swift_bridgeObjectRetain();
      sub_24976A748(v15, v16, &v184);
      sub_2498370CC();
      v20 = OUTLINED_FUNCTION_5_16();
      *(_WORD *)(v19 + 12) = 2082;
      v27 = OUTLINED_FUNCTION_8_20(v20, sel_domain, v21, v22, v23, v24, v25, v26, v155, v169);
      v28 = v10;
      v29 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
      v31 = v30;

      sub_24976A748(v29, v31, &v184);
      v32 = sub_2498370CC();
      OUTLINED_FUNCTION_3_0(v32, v33, v34, v35, v36, v37, v38, v39, v156, v170);
      OUTLINED_FUNCTION_3_0(v40, v41, v42, v43, v44, v45, v46, v47, v157, v171);
      v48 = swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2048;
      v55 = OUTLINED_FUNCTION_8_20(v48, sel_code, v49, v50, v51, v52, v53, v54, v158, v172);
      OUTLINED_FUNCTION_3_0(v55, v56, v57, v58, v59, v60, v61, v62, v159, v173);
      v63 = OUTLINED_FUNCTION_9_18();
      OUTLINED_FUNCTION_3_0(v63, v64, v65, v66, v67, v68, v69, v70, v160, v174);
      *(_WORD *)(v19 + 32) = 2081;
      OUTLINED_FUNCTION_74();
      sub_24976A748(v28, v12, &v184);
      OUTLINED_FUNCTION_9_18();
      OUTLINED_FUNCTION_5_16();
      _os_log_impl(&dword_249741000, v17, (os_log_type_t)v7, "%{public}s: %{public}s (%ld) %{private}s", (uint8_t *)v19, 0x2Au);
      OUTLINED_FUNCTION_18_12();
      goto LABEL_6;
    }
    OUTLINED_FUNCTION_151();
  }
  else
  {
    v169 = v7;
    OUTLINED_FUNCTION_74();
    v17 = v4;
    sub_249836AFC();
    v71 = OUTLINED_FUNCTION_12_12();
    if (OUTLINED_FUNCTION_18_4(v71))
    {
      v72 = OUTLINED_FUNCTION_12();
      v73 = OUTLINED_FUNCTION_12();
      v184 = v73;
      *(_DWORD *)v72 = 136446723;
      v80 = OUTLINED_FUNCTION_8_20(v73, sel_domain, v74, v75, v76, v77, v78, v79, v154, v169);
      v81 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
      v83 = v82;

      sub_24976A748(v81, v83, &v184);
      v84 = OUTLINED_FUNCTION_3_20();
      OUTLINED_FUNCTION_3_0(v84, v85, v86, v87, v88, v89, v90, v91, v161, v175);
      OUTLINED_FUNCTION_3_0(v92, v93, v94, v95, v96, v97, v98, v99, v162, v176);
      v100 = swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2048;
      LODWORD(v81) = OUTLINED_FUNCTION_8_20(v100, sel_code, v101, v102, v103, v104, v105, v106, v163, v177);
      OUTLINED_FUNCTION_3_0(v81, v107, v108, v109, v110, v111, v112, v113, v164, v178);
      v114 = OUTLINED_FUNCTION_3_20();
      OUTLINED_FUNCTION_3_0(v114, v115, v116, v117, v118, v119, v120, v121, v165, v179);
      *(_WORD *)(v72 + 22) = 2081;
      OUTLINED_FUNCTION_74();
      sub_24976A748(v10, v12, &v184);
      OUTLINED_FUNCTION_3_20();
      OUTLINED_FUNCTION_5_16();
      _os_log_impl(&dword_249741000, v17, (os_log_type_t)v7, "%{public}s (%ld) %{private}s", (uint8_t *)v72, 0x20u);
      swift_arrayDestroy();
LABEL_6:
      OUTLINED_FUNCTION_3();
    }
  }
  OUTLINED_FUNCTION_151();

  OUTLINED_FUNCTION_3_0(v122, v123, v124, v125, v126, v127, v128, v129, v154, v169);
  OUTLINED_FUNCTION_3_0(v130, v131, v132, v133, v134, v135, v136, v137, v166, v180);
  OUTLINED_FUNCTION_3_0(v138, v139, v140, v141, v142, v143, v144, v145, v167, v181);
  OUTLINED_FUNCTION_3_0(v146, v147, v148, v149, v150, v151, v152, v153, v168, v182);

}

uint64_t OUTLINED_FUNCTION_3_20()
{
  return sub_2498370CC();
}

uint64_t OUTLINED_FUNCTION_4_23()
{
  return sub_2498370CC();
}

uint64_t OUTLINED_FUNCTION_5_16()
{
  return swift_bridgeObjectRelease_n();
}

id OUTLINED_FUNCTION_6_13(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

id OUTLINED_FUNCTION_8_20(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  return objc_msgSend(a10, a2);
}

uint64_t OUTLINED_FUNCTION_9_18()
{
  return sub_2498370CC();
}

BOOL OUTLINED_FUNCTION_11_14(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_12_12()
{
  return sub_249836FAC();
}

uint64_t OUTLINED_FUNCTION_14_12()
{
  return sub_2498370CC();
}

uint64_t OUTLINED_FUNCTION_15_10()
{
  return sub_2498370CC();
}

uint64_t OUTLINED_FUNCTION_17_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  unint64_t v5;
  va_list va;

  va_start(va, a5);
  return sub_24976A748(a3, v5, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_18_12()
{
  return swift_arrayDestroy();
}

uint64_t sub_2498100B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD v6[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_24974BBA8((_OWORD *)a1, v6);
    sub_24974B424(v6, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_24978917C(a1);
    sub_24976B89C(v6);
    swift_bridgeObjectRelease();
    return sub_24978917C((uint64_t)v6);
  }
}

unint64_t UniversalControlErrorDomain.getter()
{
  return 0xD00000000000001BLL;
}

UniversalControl::UniveralControlErrorCode_optional __swiftcall UniveralControlErrorCode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == -201)
    v2 = 1;
  else
    v2 = 2;
  if (rawValue == -200)
    v2 = 0;
  *v1 = v2;
  return (UniversalControl::UniveralControlErrorCode_optional)rawValue;
}

uint64_t UniveralControlErrorCode.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return -201;
  else
    return -200;
}

uint64_t sub_249810180(unsigned __int8 *a1, char *a2)
{
  return sub_2497A07F8(*a1, *a2);
}

void sub_24981018C()
{
  sub_24975E32C();
}

uint64_t sub_249810194()
{
  return sub_2497716C0();
}

void sub_24981019C()
{
  sub_2497A0DFC();
}

UniversalControl::UniveralControlErrorCode_optional sub_2498101A4(Swift::Int *a1)
{
  return UniveralControlErrorCode.init(rawValue:)(*a1);
}

uint64_t sub_2498101AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = UniveralControlErrorCode.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t *sub_2498101D0()
{
  uint64_t v0;
  uint64_t *result;

  type metadata accessor for ErrorProvider();
  v0 = OUTLINED_FUNCTION_18_1();
  result = sub_249810350();
  qword_2578821D8 = v0;
  return result;
}

uint64_t static ErrorProvider.shared.getter()
{
  if (qword_25787F6E0 != -1)
    swift_once();
  return swift_retain();
}

id sub_249810244()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for ErrorProvider();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_2578821E0 = (uint64_t)result;
  return result;
}

void sub_249810294()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_25787F6E8 != -1)
    swift_once();
  v0 = (void *)qword_2578821E0;
  v1 = (void *)sub_249836D18();
  v2 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, 0, 0);

  v3 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  v5 = v4;

  qword_2578821E8 = v3;
  unk_2578821F0 = v5;
}

uint64_t *sub_249810350()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v7[6];

  v1 = *v0;
  v2 = (void *)objc_opt_self();
  v3 = (void *)OUTLINED_FUNCTION_0_26();
  v4 = OUTLINED_FUNCTION_18_1();
  *(_QWORD *)(v4 + 16) = v1;
  v7[4] = sub_249810E30;
  v7[5] = v4;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2498108A0;
  v7[3] = &block_descriptor_2;
  v5 = _Block_copy(v7);
  swift_release();
  objc_msgSend(v2, sel_setUserInfoValueProviderForDomain_provider_, v3, v5);
  _Block_release(v5);

  return v0;
}

void sub_249810424(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v6;
  id v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;

  v6 = (void *)sub_249836898();
  v7 = objc_msgSend(v6, sel_userInfo);
  v8 = sub_249836C94();

  sub_2497A080C(v8, &v23);
  swift_bridgeObjectRelease();
  if (v24)
  {
    v9 = swift_dynamicCast();
    if (v9)
      v10 = v21;
    else
      v10 = 0;
    if (v9)
      v11 = v22;
    else
      v11 = 0;
  }
  else
  {
    sub_24978917C((uint64_t)&v23);
    v10 = 0;
    v11 = 0;
  }
  if (_sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0() == a1 && v12 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = sub_2498375C4();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      if (_sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0() == a1 && v15 == a2)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v17 = sub_2498375C4();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          *(_OWORD *)a3 = 0u;
          *(_OWORD *)(a3 + 16) = 0u;

          swift_bridgeObjectRelease();
          return;
        }
      }
    }
  }
  LOBYTE(v23) = objc_msgSend(v6, sel_code) == (id)-201;
  v18 = sub_2498106BC(&v23, v10, v11);
  v20 = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE0D00];

  *(_QWORD *)a3 = v18;
  *(_QWORD *)(a3 + 8) = v20;
}

uint64_t sub_2498106BC(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  if ((*a1 & 1) != 0)
  {
    if (qword_25787F6E8 != -1)
      swift_once();
    v5 = (void *)qword_2578821E0;
    v6 = (void *)sub_249836D18();
    v7 = OUTLINED_FUNCTION_3_21(v5, sel_localizedStringForKey_value_table_, (uint64_t)v6);

    _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
    OUTLINED_FUNCTION_2_25();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578814F0);
    v8 = OUTLINED_FUNCTION_18_1();
    *(_OWORD *)(v8 + 16) = xmmword_249838510;
    *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v8 + 64) = sub_249810E50();
    if (a3)
    {
      *(_QWORD *)(v8 + 32) = a2;
      *(_QWORD *)(v8 + 40) = a3;
    }
    else
    {
      if (qword_25787F6F0 != -1)
        swift_once();
      v14 = unk_2578821F0;
      *(_QWORD *)(v8 + 32) = qword_2578821E8;
      *(_QWORD *)(v8 + 40) = v14;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    v15 = sub_249836D48();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    if (qword_25787F6E8 != -1)
      swift_once();
    v9 = (void *)qword_2578821E0;
    v10 = (void *)sub_249836D18();
    v11 = OUTLINED_FUNCTION_3_21(v9, sel_localizedStringForKey_value_table_, (uint64_t)v10);

    v12 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
    return v12;
  }
}

id sub_2498108A0(uint64_t a1, void *a2)
{
  void (*v3)(_QWORD *__return_ptr);
  id v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  _QWORD v12[3];
  uint64_t v13;

  v3 = *(void (**)(_QWORD *__return_ptr))(a1 + 32);
  _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  swift_retain();
  v4 = a2;
  v3(v12);
  swift_release();

  swift_bridgeObjectRelease();
  v5 = v13;
  if (!v13)
    return 0;
  v6 = __swift_project_boxed_opaque_existential_1(v12, v13);
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  v10 = (void *)sub_2498375B8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v10;
}

id sub_2498109AC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  char v6;
  id v7;
  id v8;
  unsigned __int8 v10;

  v4 = (void *)sub_249836898();
  v5 = objc_msgSend(v4, sel_domain);
  _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  OUTLINED_FUNCTION_2_25();
  if (v2 == 0xD00000000000001BLL && v1 == 0x80000002498417F0)
  {

    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = sub_2498375C4();

    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      sub_2497E8DB4();
      v10 = 0;
      v8 = a1;
      return NSError.init(ucErrorCode:associatedDeviceName:underlyingError:)(&v10, 0, 0, a1);
    }
  }
  v7 = a1;
  return a1;
}

id NSError.init(ucErrorCode:associatedDeviceName:underlyingError:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3, void *a4)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v7 = *a1;
  v8 = MEMORY[0x24BEE0D00];
  v22 = sub_249836CA0();
  v9 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  v11 = v10;
  if (a4)
  {
    swift_getErrorValue();
    *((_QWORD *)&v21 + 1) = v19;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v20);
    (*(void (**)(uint64_t *))(*(_QWORD *)(v19 - 8) + 16))(boxed_opaque_existential_0);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_2498100B4((uint64_t)&v20, v9, v11);
  if (a3)
  {
    *((_QWORD *)&v21 + 1) = v8;
    *(_QWORD *)&v20 = a2;
    *((_QWORD *)&v20 + 1) = a3;
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_2498100B4((uint64_t)&v20, 0xD00000000000002CLL, 0x8000000249841810);
  v13 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v14 = OUTLINED_FUNCTION_0_26();
  v15 = (void *)v14;
  if (v7)
    v16 = -201;
  else
    v16 = -200;
  v17 = sub_249810C4C(v14, v16, v22, v13);

  return v17;
}

uint64_t ErrorProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ErrorProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_249810C4C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v7;
  id v8;

  v7 = (void *)sub_249836C88();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(a4, sel_initWithDomain_code_userInfo_, a1, a2, v7);

  return v8;
}

unint64_t sub_249810CE0()
{
  unint64_t result;

  result = qword_2578821F8;
  if (!qword_2578821F8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniveralControlErrorCode, &type metadata for UniveralControlErrorCode);
    atomic_store(result, (unint64_t *)&qword_2578821F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UniveralControlErrorCode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249810D68 + 4 * byte_24983C805[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249810D9C + 4 * byte_24983C800[v4]))();
}

uint64_t sub_249810D9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249810DA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249810DACLL);
  return result;
}

uint64_t sub_249810DB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249810DC0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249810DC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249810DCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UniveralControlErrorCode()
{
  return &type metadata for UniveralControlErrorCode;
}

uint64_t type metadata accessor for ErrorProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ErrorProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ErrorProvider.userVisibleError(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_249810E20()
{
  return swift_deallocObject();
}

void sub_249810E30(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_249810424(a1, a2, a3);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t sub_249810E50()
{
  unint64_t result;

  result = qword_2578822A0;
  if (!qword_2578822A0)
  {
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2578822A0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_26()
{
  return sub_249836D18();
}

void OUTLINED_FUNCTION_2_25()
{
  void *v0;

}

id OUTLINED_FUNCTION_3_21(id a1, SEL a2, uint64_t a3)
{
  return objc_msgSend(a1, a2, a3, 0, 0);
}

double UniversalControlAnchor.offset.getter(double a1)
{
  uint64_t v1;

  LOWORD(a1) = *(_WORD *)(v1 + 2);
  return (double)*(unint64_t *)&a1 / 65535.0;
}

BOOL static UniversalControlAnchor.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((unsigned __int16 *)a1 + 1) == *((unsigned __int16 *)a2 + 1);
}

uint64_t UniversalControlAnchor.init(edge:offset:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  double v3;
  BOOL v4;
  double v5;

  v3 = 65535.0;
  if (a3 <= 1.0)
    v3 = a3 * 65535.0;
  v4 = a3 > 0.0;
  v5 = 0.0;
  if (v4)
    v5 = v3;
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v5 <= -1.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v5 < 65536.0)
  {
    *(_BYTE *)a2 = result;
    *(_WORD *)(a2 + 2) = (int)v5;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t UniversalControlAnchor.edge.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t UniversalControlAnchor.edge.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*UniversalControlAnchor.edge.modify())(void)
{
  return nullsub_1;
}

void sub_249810F88()
{
  qword_257890830 = (uint64_t)&unk_251AB0818;
}

void sub_249810F9C(double *a1@<X8>, double a2@<D0>)
{
  *a1 = UniversalControlAnchor.offset.getter(a2);
}

void UniversalControlAnchor.offset.setter(double a1)
{
  uint64_t v1;
  double v2;
  BOOL v3;
  double v4;

  v2 = 65535.0;
  if (a1 <= 1.0)
    v2 = a1 * 65535.0;
  v3 = a1 > 0.0;
  v4 = 0.0;
  if (v3)
    v4 = v2;
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v4 <= -1.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v4 < 65536.0)
  {
    *(_WORD *)(v1 + 2) = (int)v4;
    return;
  }
LABEL_12:
  __break(1u);
}

void (*UniversalControlAnchor.offset.modify(uint64_t a1, double a2))(double *a1)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 8) = v2;
  LOWORD(a2) = *(_WORD *)(v2 + 2);
  *(double *)a1 = (double)*(unint64_t *)&a2 / 65535.0;
  return sub_249811070;
}

void sub_249811070(double *a1)
{
  UniversalControlAnchor.offset.setter(*a1);
}

uint64_t sub_249811094(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701274725 && a2 == 0xE400000000000000;
  if (v2 || (sub_2498375C4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2498375C4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249811168(char a1)
{
  if ((a1 & 1) != 0)
    return 0x74657366666FLL;
  else
    return 1701274725;
}

uint64_t sub_249811194()
{
  char *v0;

  return sub_249811168(*v0);
}

uint64_t sub_24981119C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249811094(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498111C0()
{
  sub_249811340();
  return sub_249837750();
}

uint64_t sub_2498111E8()
{
  sub_249811340();
  return sub_24983775C();
}

void UniversalControlAnchor.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578822A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = *((unsigned __int16 *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249811340();
  sub_249837744();
  v13 = v8;
  v12 = 0;
  sub_249759A9C();
  sub_2498374F8();
  if (!v2)
  {
    v11 = 1;
    sub_2498374D4();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_10_6();
}

unint64_t sub_249811340()
{
  unint64_t result;

  result = qword_2578822B0;
  if (!qword_2578822B0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983CAFC, &type metadata for UniversalControlAnchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578822B0);
  }
  return result;
}

void UniversalControlAnchor.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  double v6;
  double v7;
  BOOL v8;
  double v9;
  int v10;
  char v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578822B8);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249811340();
  sub_249837720();
  if (v2)
    goto LABEL_14;
  sub_249759954();
  sub_249837438();
  sub_249837414();
  v7 = v6 * 65535.0;
  if (v6 > 1.0)
    v7 = 65535.0;
  v8 = v6 > 0.0;
  v9 = 0.0;
  if (v8)
    v9 = v7;
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v9 <= -1.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v9 < 65536.0)
  {
    v10 = (int)v9;
    if ((double)(int)v9 / 65535.0 <= 1.0)
    {
      OUTLINED_FUNCTION_1_23();
      *(_BYTE *)a2 = v11;
      *(_WORD *)(a2 + 2) = v10;
    }
    else
    {
      sub_2498371BC();
      swift_allocError();
      sub_24981158C();
      sub_2498371A4();
      swift_willThrow();
      OUTLINED_FUNCTION_1_23();
    }
LABEL_14:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    OUTLINED_FUNCTION_10_6();
    return;
  }
LABEL_18:
  __break(1u);
}

unint64_t sub_24981158C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578822C0;
  if (!qword_2578822C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578822B8);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE33F8], v1);
    atomic_store(result, (unint64_t *)&qword_2578822C0);
  }
  return result;
}

void sub_2498115D0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  UniversalControlAnchor.init(from:)(a1, a2);
}

void sub_2498115E4(_QWORD *a1)
{
  UniversalControlAnchor.encode(to:)(a1);
}

BOOL static UniversalControlAnchor.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 < v3)
    return 1;
  return v3 >= v2 && *((unsigned __int16 *)a1 + 1) < *((unsigned __int16 *)a2 + 1);
}

uint64_t sub_24981162C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_249811650(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))sub_24975E87C);
}

uint64_t sub_249811638(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_249811650(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))sub_2497EC7F4);
}

uint64_t sub_249811644(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_249811650(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))sub_249771208);
}

uint64_t sub_249811650(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD))
{
  return a5(*a1 | (*((unsigned __int16 *)a1 + 1) << 16), *a2 | (*((unsigned __int16 *)a2 + 1) << 16));
}

uint64_t UniversalControlAnchor.hash(into:)()
{
  sub_2498376A8();
  return sub_2498376C0();
}

uint64_t UniversalControlAnchor.hashValue.getter()
{
  sub_249837690();
  sub_2498376A8();
  sub_2498376C0();
  return sub_2498376E4();
}

uint64_t sub_249811710()
{
  sub_249837690();
  sub_2498376A8();
  sub_2498376C0();
  return sub_2498376E4();
}

unint64_t sub_24981176C()
{
  unint64_t result;

  result = qword_2578822C8;
  if (!qword_2578822C8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlAnchor, &type metadata for UniversalControlAnchor);
    atomic_store(result, (unint64_t *)&qword_2578822C8);
  }
  return result;
}

void sub_2498117AC(double *a1)
{
  UniversalControlAnchor.offset.setter(*a1);
}

_DWORD *__swift_memcpy4_2(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for UniversalControlAnchor(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFD && a1[4])
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 4;
      v2 = v3 - 4;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlAnchor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlAnchor()
{
  return &type metadata for UniversalControlAnchor;
}

uint64_t storeEnumTagSinglePayload for UniversalControlAnchor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2498118B4 + 4 * byte_24983C905[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2498118E8 + 4 * byte_24983C900[v4]))();
}

uint64_t sub_2498118E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498118F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2498118F8);
  return result;
}

uint64_t sub_249811904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24981190CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249811910(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249811918(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlAnchor.CodingKeys()
{
  return &type metadata for UniversalControlAnchor.CodingKeys;
}

unint64_t sub_249811938()
{
  unint64_t result;

  result = qword_2578822D0;
  if (!qword_2578822D0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983CAD4, &type metadata for UniversalControlAnchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578822D0);
  }
  return result;
}

unint64_t sub_249811978()
{
  unint64_t result;

  result = qword_2578822D8;
  if (!qword_2578822D8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983CA44, &type metadata for UniversalControlAnchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578822D8);
  }
  return result;
}

unint64_t sub_2498119B8()
{
  unint64_t result;

  result = qword_2578822E0;
  if (!qword_2578822E0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983CA6C, &type metadata for UniversalControlAnchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578822E0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t HIDReport.startIndex.getter(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_249811A14 + *((int *)qword_249811A48 + (a2 >> 62))))();
}

uint64_t sub_249811A28()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_8_21();
  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x249811A48);
  }
  return j__OUTLINED_FUNCTION_56_5(v0);
}

uint64_t HIDReport.storage.getter(uint64_t a1, unint64_t a2)
{
  OUTLINED_FUNCTION_20_14(a1, a2);
  return OUTLINED_FUNCTION_33_3();
}

uint64_t HIDReport.storage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_249748C10(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*HIDReport.storage.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDReport.data.getter(uint64_t a1, unint64_t a2)
{
  OUTLINED_FUNCTION_20_14(a1, a2);
  return OUTLINED_FUNCTION_33_3();
}

uint64_t HIDReport.init(bitCount:id:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  if ((a1 & 7) != 0)
    v2 = (a1 >> 3) + 1;
  else
    v2 = a1 >> 3;
  v5[0] = MEMORY[0x24BCF7920](v2);
  v5[1] = v3;
  sub_249814670((uint64_t)v5);
  result = v5[0];
  if (a1 >= 8)
  {
    sub_249836904();
    return v5[0];
  }
  return result;
}

uint64_t HIDReport.reportID.setter()
{
  return sub_249836904();
}

void HIDReport.init<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  OUTLINED_FUNCTION_36_8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v1, v0);
  sub_24983697C();
  v6 = OUTLINED_FUNCTION_34_9();
  v7(v6);
  OUTLINED_FUNCTION_10_0();
}

void HIDReport.initialize(from:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_249811C30()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_249811C68 + dword_249811D5C[*(_QWORD *)(v0 + 8) >> 62]))();
}

uint64_t sub_249811C78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __int16 v6;
  __int16 v7;
  __int16 v8;
  __int16 v9;
  uint64_t result;

  if (a1 < BYTE6(v5))
    return 0;
  OUTLINED_FUNCTION_6_14();
  sub_249815840(v3, v1);
  v7 = v6;
  OUTLINED_FUNCTION_50_4(v3);
  sub_249748BCC(v4, v5);
  sub_249815840(v4, v5);
  v9 = v8;
  OUTLINED_FUNCTION_49_5();
  if ((v7 & 0x100) != 0)
  {
    if ((v9 & 0x100) != 0)
    {
LABEL_7:
      OUTLINED_FUNCTION_6_14();
      OUTLINED_FUNCTION_49_5();
      *v2 = v3;
      v2[1] = v1;
      return 1;
    }
    return 0;
  }
  result = 0;
  if ((v9 & 0x100) == 0 && v7 == v9)
    goto LABEL_7;
  return result;
}

uint64_t HIDReport.reportID.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;

  OUTLINED_FUNCTION_20_14(a1, a2);
  v3 = OUTLINED_FUNCTION_33_3();
  sub_249815840(v3, v4);
  v6 = v5;
  OUTLINED_FUNCTION_50_4(v2);
  if ((v6 & 0x100) != 0)
    return 0;
  else
    return v6;
}

uint64_t sub_249811DAC@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = HIDReport.reportID.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  *a2 = result;
  return result;
}

void HIDReport.reportID.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  __int16 v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  *(_QWORD *)a1 = v1;
  v3 = OUTLINED_FUNCTION_34_9();
  sub_249748BCC(v3, v4);
  v5 = OUTLINED_FUNCTION_34_9();
  sub_249815840(v5, v6);
  v8 = v7;
  v9 = OUTLINED_FUNCTION_34_9();
  sub_249748C10(v9, v10);
  if ((v8 & 0x100) != 0)
    v11 = 0;
  else
    v11 = v8;
  *(_BYTE *)(a1 + 8) = v11;
  OUTLINED_FUNCTION_81();
}

void sub_249811E30()
{
  sub_249836904();
  OUTLINED_FUNCTION_27();
}

uint64_t HIDReport.withUnsafeBytes<A>(_:)()
{
  return sub_249836910();
}

uint64_t sub_249811E68()
{
  return HIDReport.withUnsafeBytes<A>(_:)();
}

uint64_t HIDReport.withUnsafeMutableBytes<A>(_:)()
{
  return sub_249836928();
}

void static HIDReport.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_249811EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_14();
  return sub_249814A54(v1, v3 & 0xFFFFFFFFFFFFFFLL, v2, v0) & 1;
}

void sub_249811FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_249812024(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t __s2, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _BYTE *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  uint64_t result;
  BOOL v29;
  char v30;
  char v31;
  uint64_t v32;
  __int16 v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v32 = v24;
  v33 = v26;
  v34 = BYTE2(v26);
  v35 = BYTE3(v26);
  v36 = BYTE4(v26);
  v37 = BYTE5(v26);
  if (!v23)
  {
    __break(1u);
    JUMPOUT(0x2498121E0);
  }
  if (BYTE6(v26) >= v25 - (uint64_t)v23)
    v27 = v25 - (_QWORD)v23;
  else
    v27 = BYTE6(v26);
  result = memcmp(v23, &v32, v27);
  if ((_DWORD)result)
    v29 = 0;
  else
    v29 = v25 - (uint64_t)v23 < BYTE6(v26);
  v30 = v29;
  if ((int)result >= 0)
    v31 = v30;
  else
    v31 = 1;
  *v22 = v31 & 1;
  return result;
}

uint64_t sub_249812218@<X0>(uint64_t __s2@<X0>, void *__s1@<X2>, uint64_t a3@<X1>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  BOOL v9;
  char v10;
  char v11;

  if (!__s2)
  {
    if (__s1)
    {
LABEL_18:
      __break(1u);
      return __s2;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!__s1)
    goto LABEL_17;
  v6 = a4 - (_QWORD)__s1;
  v7 = a3 - __s2;
  if (a3 - __s2 >= a4 - (uint64_t)__s1)
    v8 = a4 - (_QWORD)__s1;
  else
    v8 = a3 - __s2;
  __s2 = memcmp(__s1, (const void *)__s2, v8);
  if ((_DWORD)__s2)
    v9 = 0;
  else
    v9 = v6 < v7;
  v10 = v9;
  if ((int)__s2 >= 0)
    v11 = v10;
  else
    v11 = 1;
  *a5 = v11;
  return __s2;
}

void sub_249812298(uint64_t *a1)
{
  static HIDReport.< infix(_:_:)(*a1, a1[1]);
}

void sub_2498122AC()
{
  sub_249815FA8();
}

void sub_2498122C0(uint64_t *a1)
{
  sub_2498160D0(*a1, a1[1]);
}

void sub_2498122D4()
{
  sub_2498161F0();
}

void HIDReport.description.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_249812314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_8_21();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x2498123A8);
  }
  if (v2 < 32)
  {
    HIDReport.debugDescription.getter(v0, v1);
  }
  else
  {
    HIDReport.count.getter(v0, v1);
    sub_249837540();
    sub_249836DB4();
  }
}

void HIDReport.debugDescription.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_249812414()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_8_21();
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x249812514);
  }
  v4 = 8 * v2;
  if (8 * v2 < 1)
    return 0;
  v5 = 0;
  do
  {
    if (__OFADD__(v5, 8))
      v6 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v6 = v5 + 8;
    sub_24981252C(v5, v1, v0);
    sub_24980DDA0();
    sub_249836E20();
    if (sub_249836D90() <= 1)
    {
      OUTLINED_FUNCTION_41_5();
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_41_5();
    swift_bridgeObjectRelease();
    v5 = v6;
  }
  while (v6 < v4);
  return v8;
}

void sub_24981252C(char a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;

  v3 = a3 >> 62;
  if ((a1 & 7) != 0)
    __asm { BR              X13 }
  __asm { BR              X12 }
}

uint64_t sub_249812850@<X0>(unsigned int a1@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 16);
  if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x24981286CLL);
  }
  if (__OFADD__(8 * v4, v2))
  {
    __break(1u);
    JUMPOUT(0x249812904);
  }
  return ((uint64_t (*)(void))((char *)&loc_2498126CC + *((int *)qword_2498129A8 + a1)))();
}

uint64_t sub_2498129B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;

  OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_22_13(v38, v39);
  OUTLINED_FUNCTION_2_26();
  v43 = HIWORD(v42);
  v44 = HIBYTE(v37);
  v45 = v36 >> 8;
  v46 = v36 >> 16;
  v47 = v36 >> 24;
  v48 = HIDWORD(v36);
  v49 = v36 >> 40;
  if ((v40 & 7) == 0)
    return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_249812CD8 + dword_249812F3C[v41]))(v40, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  LODWORD(a28) = 1;
  return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_249812A44 + dword_249812F1C[v41]))(v40, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_249812F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;

  OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_21_12(v38, v39);
  OUTLINED_FUNCTION_2_26();
  v43 = HIWORD(v42);
  v44 = HIBYTE(v37);
  v45 = v36 >> 8;
  v46 = v36 >> 16;
  v47 = v36 >> 24;
  v48 = HIDWORD(v36);
  v49 = v36 >> 40;
  if ((v40 & 7) != 0)
    return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_249812FE0 + dword_24981349C[v41]))(v40, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  else
    return ((uint64_t (*)(uint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&loc_249813264 + dword_2498134BC[v41]))(v40, v43, v44, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
}

void sub_2498134DC()
{
  uint64_t *v0;

  HIDReport.debugDescription.getter(*v0, v0[1]);
}

void sub_2498134E4()
{
  uint64_t *v0;

  HIDReport.description.getter(*v0, v0[1]);
}

void sub_2498134F0(_QWORD *a1, _QWORD *a2)
{
  static HIDReport.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t HIDReport.hash(into:)()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;

  OUTLINED_FUNCTION_36_8();
  sub_249748BCC(v0, v1);
  OUTLINED_FUNCTION_34_9();
  sub_24983694C();
  v2 = OUTLINED_FUNCTION_33_3();
  return sub_249748C10(v2, v3);
}

uint64_t HIDReport.hashValue.getter(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  sub_249837690();
  v2 = OUTLINED_FUNCTION_33_3();
  sub_249748BCC(v2, v3);
  sub_24983694C();
  OUTLINED_FUNCTION_50_4(a1);
  return sub_2498376E4();
}

uint64_t sub_2498135A0()
{
  uint64_t *v0;

  return HIDReport.hashValue.getter(*v0);
}

uint64_t sub_2498135A8()
{
  return HIDReport.hash(into:)();
}

uint64_t sub_2498135B0()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_249837690();
  sub_249748BCC(v1, v2);
  sub_24983694C();
  sub_249748C10(v1, v2);
  return sub_2498376E4();
}

Swift::Int HIDReport.subscript.getter(Swift::Int a1, Swift::Int a2)
{
  Swift::Int v3;
  Swift::Int result;

  v3 = HIDReport.offset(for:)(a1);
  result = HIDReport.offset(for:)(a2);
  if (result >= v3)
    return sub_2498368F8();
  __break(1u);
  return result;
}

Swift::Int sub_249813674@<X0>(Swift::Int *a1@<X1>, Swift::Int *a2@<X8>)
{
  Swift::Int result;
  Swift::Int v4;

  result = HIDReport.subscript.getter(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

Swift::Int sub_2498136A0(uint64_t *a1, uint64_t a2, Swift::Int *a3)
{
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a3;
  v4 = a3[1];
  v5 = *a1;
  v6 = a1[1];
  sub_249748BCC(*a1, v6);
  return HIDReport.subscript.setter(v5, v6, v3, v4);
}

Swift::Int HIDReport.subscript.setter(uint64_t a1, unint64_t a2, Swift::Int a3, Swift::Int a4)
{
  Swift::Int v7;
  Swift::Int result;

  v7 = OUTLINED_FUNCTION_40_4(a3);
  result = OUTLINED_FUNCTION_40_4(a4);
  if (result < v7)
  {
    __break(1u);
  }
  else
  {
    sub_249814B50(a1, a2);
    return sub_249748C10(a1, a2);
  }
  return result;
}

Swift::Int __swiftcall HIDReport.offset(for:)(Swift::Int a1)
{
  unint64_t v1;

  return ((uint64_t (*)(Swift::Int))((char *)&loc_249813790 + dword_2498137BC[v1 >> 62]))(a1);
}

uint64_t sub_2498137A0(uint64_t a1, int a2)
{
  BOOL v2;
  uint64_t result;

  v2 = __OFADD__(a2, a1 >> 3);
  result = a2 + (a1 >> 3);
  if (v2)
  {
    __break(1u);
    JUMPOUT(0x2498137BCLL);
  }
  return result;
}

void HIDReport.subscript.modify(_QWORD *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v3;
  _QWORD *v7;
  Swift::Int v8;
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = OUTLINED_FUNCTION_55_5(a2);
  if (OUTLINED_FUNCTION_55_5(a3) < v8)
  {
    __break(1u);
  }
  else
  {
    *v7 = sub_2498368F8();
    v7[1] = v9;
    OUTLINED_FUNCTION_10_0();
  }
}

void sub_249813854(uint64_t **a1, char a2)
{
  uint64_t *v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  Swift::Int v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *a1;
  v4 = (*a1)[3];
  v5 = (*a1)[1];
  v6 = **a1;
  v7 = OUTLINED_FUNCTION_44_5((*a1)[2]);
  v8 = OUTLINED_FUNCTION_44_5(v4);
  if ((a2 & 1) != 0)
  {
    if (v8 >= v7)
    {
      OUTLINED_FUNCTION_45_6(v6);
      OUTLINED_FUNCTION_28_9(v6, v5);
      OUTLINED_FUNCTION_51_6();
      v9 = *v3;
      v10 = v3[1];
LABEL_6:
      sub_249748C10(v9, v10);
      free(v3);
      return;
    }
    __break(1u);
  }
  else if (v8 >= v7)
  {
    OUTLINED_FUNCTION_28_9(v6, v5);
    v9 = v6;
    v10 = v5;
    goto LABEL_6;
  }
  __break(1u);
}

Swift::Int __swiftcall HIDReport.shift(for:)(Swift::Int a1)
{
  return a1 & 7;
}

Swift::UInt8 __swiftcall HIDReport.mask(for:)(Swift::Int a1)
{
  return 1 << (a1 & 7);
}

BOOL HIDReport.subscript.getter()
{
  char v0;
  Swift::Int v1;

  OUTLINED_FUNCTION_36_8();
  HIDReport.offset(for:)(v1);
  return (sub_249836988() & (1 << (v0 & 7))) != 0;
}

BOOL sub_249813978@<W0>(_BOOL8 *a1@<X8>)
{
  _BOOL8 result;

  result = HIDReport.subscript.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2498139A8(uint64_t *a1, uint64_t a2, Swift::Int *a3)
{
  return HIDReport.subscript.setter(*a1, *a3);
}

uint64_t HIDReport.subscript.setter(uint64_t a1, Swift::Int a2)
{
  OUTLINED_FUNCTION_14_13(a2);
  OUTLINED_FUNCTION_15_11();
  return sub_249836904();
}

void HIDReport.subscript.modify(_QWORD *a1, Swift::Int a2)
{
  uint64_t v2;
  char v3;

  v3 = a2;
  a1[1] = a2;
  a1[2] = v2;
  HIDReport.offset(for:)(a2);
  *a1 = (sub_249836988() & (1 << (v3 & 7))) != 0;
  OUTLINED_FUNCTION_81();
}

void sub_249813A9C(uint64_t *a1)
{
  HIDReport.subscript.setter(*a1, a1[1]);
  OUTLINED_FUNCTION_27();
}

Swift::Int __swiftcall HIDReport.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

uint64_t HIDReport.endIndex.getter(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_249813ADC + *((int *)qword_249813B18 + (a2 >> 62))))();
}

uint64_t sub_249813AEC()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_8_21();
  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x249813B18);
  }
  return OUTLINED_FUNCTION_56_5(v0);
}

uint64_t HIDReport.indices.getter(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(_QWORD))((char *)&loc_249813B3C + *((int *)qword_249813BB8 + (a2 >> 62))))(0);
}

void sub_249813B50()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_8_21();
  if (!v2)
  {
    __break(1u);
LABEL_4:
    __break(1u);
    JUMPOUT(0x249813BB4);
  }
  if (8 * v1 < v0)
    goto LABEL_4;
}

Swift::Void __swiftcall HIDReport.swapAt(_:_:)(Swift::Int a1, Swift::Int a2)
{
  _BOOL8 v4;
  _BOOL8 v5;

  OUTLINED_FUNCTION_14_13(a1);
  v4 = (OUTLINED_FUNCTION_15_11() & (1 << (a1 & 7))) != 0;
  OUTLINED_FUNCTION_14_13(a2);
  v5 = (OUTLINED_FUNCTION_15_11() & (1 << (a2 & 7))) != 0;
  HIDReport.subscript.setter(v5, a1);
  HIDReport.subscript.setter(v4, a2);
}

uint64_t sub_249813C4C(uint64_t *a1, Swift::Int *a2)
{
  return HIDReport.subscript.setter(*a1, *a2);
}

void (*sub_249813C58(_QWORD *a1, uint64_t *a2))(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *a2;
  a1[1] = v2;
  a1[2] = v4;
  *a1 = HIDReport.subscript.getter();
  return sub_249813C94;
}

void sub_249813C94(uint64_t *a1)
{
  HIDReport.subscript.setter(*a1, a1[2]);
  OUTLINED_FUNCTION_27();
}

Swift::Int sub_249813CB4(uint64_t a1, Swift::Int *a2)
{
  return HIDReport.subscript.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *a2, a2[1]);
}

void (*sub_249813CC8(_QWORD *a1, Swift::Int *a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  Swift::Int v6;
  Swift::Int v7;
  uint64_t v8;

  v5 = malloc(0x28uLL);
  *a1 = v5;
  v6 = *a2;
  v7 = a2[1];
  v5[2] = v2;
  v5[3] = v6;
  v5[4] = v7;
  *v5 = HIDReport.subscript.getter(v6, v7);
  v5[1] = v8;
  return sub_249813D24;
}

void sub_249813D24(uint64_t **a1, char a2)
{
  uint64_t *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_45_6(**a1);
    OUTLINED_FUNCTION_16_12();
    sub_249748C10(*v2, v2[1]);
  }
  else
  {
    OUTLINED_FUNCTION_16_12();
  }
  free(v2);
}

void sub_249813D80(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_249813DA8();
  if (!v1)
    *a1 = v3;
}

void sub_249813DA8()
{
  sub_249814DF0();
}

void sub_249813DBC(Swift::Int *a1, Swift::Int *a2)
{
  HIDReport.swapAt(_:_:)(*a1, *a2);
}

uint64_t sub_249813DC8()
{
  return sub_249836CF4();
}

uint64_t sub_249813DE8()
{
  return sub_249836CE8();
}

uint64_t sub_249813E08(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4;
  uint64_t v5;

  v4 = __OFADD__(a1, a2);
  v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x249813E98);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_249813E20 + dword_249813EA4[a4 >> 62]))(v5);
}

uint64_t sub_249813EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;

  sub_249813F3C(a1, a3, a4, a5);
  if (a2 < 1)
  {
    if (v9 <= 0 && v9 > a2)
      return 0;
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_249813E08(a1, a2, a4, a5);
}

void sub_249813F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X9 }
}

void sub_249813F88()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v5 = HIDReport.endIndex.getter(v2, v1);
  if (v0 >= 8 * v4)
  {
    v7 = __OFSUB__(v5, v0);
    v6 = v5 - v0 < 0;
  }
  else
  {
    v7 = 0;
    v6 = 1;
  }
  if (v6 == v7)
    __asm { BR              X10 }
  __break(1u);
  JUMPOUT(0x249814044);
}

uint64_t sub_24981406C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = HIDReport.startIndex.getter(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *a1 = result;
  return result;
}

uint64_t sub_249814094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = HIDReport.endIndex.getter(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *a1 = result;
  return result;
}

uint64_t (*sub_2498140BC(_QWORD *a1, Swift::Int *a2))(void)
{
  Swift::Int v3;

  v3 = *a2;
  HIDReport.offset(for:)(*a2);
  LOBYTE(v3) = HIDReport.mask(for:)(v3);
  *a1 = (sub_249836988() & v3) != 0;
  return nullsub_1;
}

Swift::Int sub_24981413C@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;
  Swift::Int v4;

  result = HIDReport.subscript.getter(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_24981416C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = HIDReport.indices.getter(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_249814194()
{
  uint64_t v0;

  return sub_24981419C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_24981419C(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_2498141AC + *((int *)qword_249814220 + (a2 >> 62))))();
}

BOOL sub_2498141C0(uint64_t a1, uint64_t a2)
{
  if (((unint64_t)BYTE6(a2) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x24981421CLL);
  }
  return 8 * BYTE6(a2) == 0;
}

uint64_t sub_249814230()
{
  _QWORD *v0;

  return HIDReport.count.getter(*v0, v0[1]);
}

void sub_249814238(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_249814248(uint64_t *a1, uint64_t *a2)
{
  return sub_24981425C(*a1, *a2, a2[1]);
}

uint64_t sub_24981425C(uint64_t result, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  BOOL v4;

  if (result >= a2)
  {
    v4 = __OFSUB__(result, a3);
    v3 = result - a3 < 0;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  if (v3 == v4)
    __break(1u);
  return result;
}

uint64_t sub_249814270(uint64_t *a1, uint64_t *a2)
{
  return sub_249814284(*a1, *a2, a2[1]);
}

uint64_t sub_249814284(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result)
    __break(1u);
  return result;
}

uint64_t sub_249814298(uint64_t *a1, uint64_t *a2)
{
  return sub_2498142B0(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_2498142B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < a3 || a4 < a2)
    __break(1u);
  return result;
}

Swift::Int sub_2498142C4@<X0>(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  Swift::Int result;

  result = HIDReport.index(after:)(*a1);
  *a2 = result;
  return result;
}

_QWORD *sub_2498142EC(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

uint64_t sub_249814304@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_249814330(*a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_249814330(uint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t v4;

  v3 = __OFSUB__(a1, 1);
  v4 = a1 - 1;
  if (v3)
  {
    __break(1u);
    JUMPOUT(0x2498143C0);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_249814348 + dword_2498143CC[a3 >> 62]))(v4);
}

uint64_t sub_2498143DC(_QWORD *a1)
{
  uint64_t v1;

  if (__OFSUB__(*a1, 1))
  {
    __break(1u);
    JUMPOUT(0x249814478);
  }
  return ((uint64_t (*)(void))((char *)&loc_2498143FC + dword_249814484[*(_QWORD *)(v1 + 8) >> 62]))();
}

uint64_t sub_249814494@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_249813E08(*a1, a2, *(_QWORD *)v3, *(_QWORD *)(v3 + 8));
  *a3 = result;
  return result;
}

void sub_2498144C0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char v6;

  *(_QWORD *)a4 = sub_249813EB8(*a1, a2, *a3, *(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  *(_BYTE *)(a4 + 8) = v6 & 1;
  OUTLINED_FUNCTION_27();
}

void sub_2498144F4(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;

  sub_249813F3C(*a1, *a2, *v2, v2[1]);
}

uint64_t sub_249814504()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_249814518 + dword_24981455C[*(_QWORD *)(v0 + 8) >> 62]))();
}

void sub_249814528(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v1;
  a1[1] = v2;
  a1[2] = 8 * v3;
}

void sub_249814538(_QWORD *a1@<X8>)
{
  int v1;

  if ((unint64_t)(v1 - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x24981455CLL);
  }
  sub_249814528(a1);
}

uint64_t sub_24981456C()
{
  uint64_t v0;

  return _s9HIDReportAAV5countSivg_0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t _s9HIDReportAAV5countSivg_0(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_249814594 + dword_2498145EC[a2 >> 62]))();
}

uint64_t sub_2498145A4()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_8_21();
  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x2498145E4);
  }
  return OUTLINED_FUNCTION_56_5(v0);
}

uint64_t sub_2498145FC()
{
  uint64_t v0;

  return sub_249814604(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

uint64_t sub_249814604(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_24981536C(a1, a2);
  v5 = v4;
  sub_249748C10(a1, a2);
  return v5;
}

uint64_t sub_249814644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_24981464C(a1, a2, a3, *v3, v3[1]);
}

uint64_t sub_249814650()
{
  return sub_249836E74();
}

void sub_249814670(uint64_t a1)
{
  __asm { BR              X13 }
}

void *sub_2498146CC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t __b, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  void *result;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;

  v30 = v25;
  LOWORD(v31) = v24;
  BYTE2(v31) = BYTE2(v24);
  HIBYTE(v31) = BYTE3(v24);
  v32 = BYTE4(v24);
  v33 = BYTE5(v24);
  v34 = BYTE6(v24);
  result = memset(&v30, v27, BYTE6(v24));
  v29 = v31 | ((unint64_t)v32 << 32) | ((unint64_t)v33 << 40) | ((unint64_t)v34 << 48);
  *v26 = v30;
  v26[1] = v29;
  return result;
}

char *sub_249814858(int *a1, int a2)
{
  char *result;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  size_t v11;

  result = (char *)sub_2498368D4();
  v5 = *a1;
  v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = (char *)sub_249836820();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v7 = result;
  result = (char *)sub_249836838();
  v8 = v5 - (_QWORD)result;
  if (__OFSUB__(v5, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = v6 - v5;
  v10 = sub_24983682C();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  return (char *)memset(&v7[v8], a2, v11);
}

uint64_t sub_2498148D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_249836820();
  v11 = result;
  if (result)
  {
    result = sub_249836838();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_24983682C();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_249811FC4(v11, v17, a4, a5);
  sub_249748C10(a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

uint64_t sub_2498149A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_249836820();
  v11 = result;
  if (result)
  {
    result = sub_249836838();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_24983682C();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_249812218(v11, a4, v17, a5, &v19);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

uint64_t sub_249814A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v9;
  uint64_t v10;
  __int16 v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v10 = a1;
  v11 = a2;
  v12 = BYTE2(a2);
  v13 = BYTE3(a2);
  v14 = BYTE4(a2);
  v15 = BYTE5(a2);
  sub_249811FC4((uint64_t)&v10, (uint64_t)&v10 + BYTE6(a2), a3, a4);
  v5 = OUTLINED_FUNCTION_33_3();
  sub_249748C10(v5, v6);
  if (!v4)
    v7 = v9;
  return v7 & 1;
}

void sub_249814B50(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_249814BB8()
{
  return sub_2498368EC();
}

uint64_t sub_249814D4C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_249836820();
  if (!result || (result = sub_249836838(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_24983682C();
      return sub_2498368EC();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_249814DF0()
{
  __asm { BR              X12 }
}

uint64_t sub_249814E50()
{
  uint64_t v0;

  if (((unint64_t)BYTE6(v0) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x249815308);
  }
  if (8 * BYTE6(v0) > 0)
    __asm { BR              X9 }
  return 0;
}

void sub_24981536C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

_QWORD *sub_2498153B0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8[11];

  if (((unint64_t)BYTE6(v0) - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = 8 * BYTE6(v0);
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882350);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v3[2] = v2;
    v3[3] = 2 * ((uint64_t)(v4 - 32) / 8);
  }
  sub_249748BCC(v1, v0);
  sub_2498154C4((uint64_t)v8, (uint64_t)(v3 + 4), v2, v1, v0);
  v6 = v5;
  sub_249748C10(v8[0], v8[1]);
  if (v6 != v2)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x2498154ACLL);
  }
  return v3;
}

void sub_2498154C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

uint64_t sub_249815520@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2)
  {
    if (a3)
    {
      if ((a3 & 0x8000000000000000) == 0)
        __asm { BR              X11 }
      __break(1u);
      JUMPOUT(0x2498157A0);
    }
  }
  else
  {
    a3 = 0;
  }
  *a1 = v6;
  a1[1] = v5;
  a1[2] = v4;
  return a3;
}

void sub_249815840(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

uint64_t sub_249815888(unsigned __int8 a1, uint64_t a2)
{
  unsigned __int8 v2;

  if ((a2 & 0xFF000000000000) != 0)
    v2 = a1;
  else
    v2 = 0;
  return v2 | (((a2 & 0xFF000000000000) == 0) << 8);
}

unint64_t sub_249815988()
{
  unint64_t result;

  result = qword_2578822E8;
  if (!qword_2578822E8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_2578822E8);
  }
  return result;
}

unint64_t sub_2498159C8()
{
  unint64_t result;

  result = qword_2578822F0;
  if (!qword_2578822F0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_2578822F0);
  }
  return result;
}

unint64_t sub_249815A08()
{
  unint64_t result;

  result = qword_2578822F8;
  if (!qword_2578822F8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_2578822F8);
  }
  return result;
}

unint64_t sub_249815A48()
{
  unint64_t result;

  result = qword_257882300;
  if (!qword_257882300)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_257882300);
  }
  return result;
}

uint64_t sub_249815A84()
{
  return sub_249815BB8(&qword_257882308, MEMORY[0x24BEE1BD0]);
}

unint64_t sub_249815AA8()
{
  unint64_t result;

  result = qword_257882318;
  if (!qword_257882318)
  {
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_257882318);
  }
  return result;
}

unint64_t sub_249815AE8()
{
  unint64_t result;

  result = qword_257882320;
  if (!qword_257882320)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_257882320);
  }
  return result;
}

unint64_t sub_249815B28()
{
  unint64_t result;

  result = qword_257882328;
  if (!qword_257882328)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDReport, &type metadata for HIDReport);
    atomic_store(result, (unint64_t *)&qword_257882328);
  }
  return result;
}

uint64_t sub_249815B64()
{
  return MEMORY[0x24BEE1780];
}

uint64_t sub_249815B70()
{
  return sub_249815BB8(&qword_257882330, MEMORY[0x24BEE1BD8]);
}

uint64_t sub_249815B94()
{
  return sub_249815BB8(&qword_257882338, MEMORY[0x24BEE1BA8]);
}

uint64_t sub_249815BB8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257882310);
    v6 = sub_249815AA8();
    v7[0] = MEMORY[0x24BEE17A8];
    v7[1] = v6;
    result = MEMORY[0x24BCF8F94](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249815C28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257882340;
  if (!qword_257882340)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257882348);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE2C18], v1);
    atomic_store(result, (unint64_t *)&qword_257882340);
  }
  return result;
}

void sub_249815C70()
{
  HIDReport.reportID.setter();
  OUTLINED_FUNCTION_27();
}

ValueMetadata *type metadata accessor for HIDReport()
{
  return &type metadata for HIDReport;
}

uint64_t OUTLINED_FUNCTION_0_27()
{
  return sub_249836838();
}

void OUTLINED_FUNCTION_2_26()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
}

uint64_t OUTLINED_FUNCTION_4_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return a13;
}

uint64_t OUTLINED_FUNCTION_5_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return a12;
}

uint64_t OUTLINED_FUNCTION_6_14()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748BCC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_11_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_12_13()
{
  uint64_t v0;

  return v0;
}

Swift::Int OUTLINED_FUNCTION_14_13(Swift::Int a1)
{
  return HIDReport.offset(for:)(a1);
}

uint64_t OUTLINED_FUNCTION_15_11()
{
  return sub_249836988();
}

Swift::Int OUTLINED_FUNCTION_16_12()
{
  uint64_t v0;
  unint64_t v1;
  Swift::Int v2;
  Swift::Int v3;

  return HIDReport.subscript.setter(v0, v1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_20_14(uint64_t a1, unint64_t a2)
{
  return sub_249748BCC(a1, a2);
}

void OUTLINED_FUNCTION_21_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = a2 >> 32;
}

void OUTLINED_FUNCTION_22_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = a2 >> 32;
}

uint64_t OUTLINED_FUNCTION_23_8()
{
  return sub_249836838();
}

uint64_t OUTLINED_FUNCTION_24_12()
{
  return sub_249836838();
}

uint64_t OUTLINED_FUNCTION_25_8()
{
  return sub_249836820();
}

uint64_t OUTLINED_FUNCTION_26_11()
{
  return sub_249836820();
}

uint64_t OUTLINED_FUNCTION_27_6(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;

  return sub_2498148D8(a1, a2, a3, v4, v3);
}

void OUTLINED_FUNCTION_28_9(uint64_t a1, uint64_t a2)
{
  sub_249814B50(a1, a2);
}

uint64_t OUTLINED_FUNCTION_30_6()
{
  return sub_249836820();
}

uint64_t OUTLINED_FUNCTION_33_10()
{
  return sub_249836820();
}

uint64_t OUTLINED_FUNCTION_34_9()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_35_6()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = v0;
}

uint64_t OUTLINED_FUNCTION_37_6()
{
  return sub_249836820();
}

uint64_t OUTLINED_FUNCTION_38_5()
{
  return sub_249836820();
}

Swift::Int OUTLINED_FUNCTION_40_4(Swift::Int a1)
{
  return HIDReport.offset(for:)(a1);
}

uint64_t OUTLINED_FUNCTION_41_5()
{
  return sub_249836DB4();
}

void OUTLINED_FUNCTION_43_6()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = v0;
}

Swift::Int OUTLINED_FUNCTION_44_5(Swift::Int a1)
{
  return HIDReport.offset(for:)(a1);
}

uint64_t OUTLINED_FUNCTION_45_6(uint64_t a1)
{
  unint64_t v1;

  return sub_249748BCC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_47_5()
{
  return sub_249836838();
}

void OUTLINED_FUNCTION_48_6()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = v0;
}

uint64_t OUTLINED_FUNCTION_49_5()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t OUTLINED_FUNCTION_50_4(uint64_t a1)
{
  unint64_t v1;

  return sub_249748C10(a1, v1);
}

uint64_t OUTLINED_FUNCTION_51_6()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t OUTLINED_FUNCTION_53_3()
{
  return sub_249836820();
}

uint64_t OUTLINED_FUNCTION_54_4()
{
  return sub_249836820();
}

Swift::Int OUTLINED_FUNCTION_55_5(Swift::Int a1)
{
  return HIDReport.offset(for:)(a1);
}

uint64_t OUTLINED_FUNCTION_56_5@<X0>(uint64_t a1@<X8>)
{
  return 8 * a1;
}

uint64_t OUTLINED_FUNCTION_57_5()
{
  return 0;
}

void sub_249815FA8()
{
  OUTLINED_FUNCTION_8_22();
  __asm { BR              X10 }
}

void sub_249815FE0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_7_19(v0, v1 & 0xFFFFFFFFFFFFFFLL);
  OUTLINED_FUNCTION_13_10();
}

BOOL sub_249816098(unsigned int a1, unsigned int a2)
{
  return (unsigned __int16)a1 < (unsigned __int16)a2 || HIWORD(a2) >= HIWORD(a1);
}

BOOL sub_2498160B4(unsigned int a1, unsigned int a2)
{
  return (unsigned __int16)a2 < (unsigned __int16)a1 || HIWORD(a1) >= HIWORD(a2);
}

void sub_2498160D0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_249816118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_14();
  sub_249814A54(v1, v3 & 0xFFFFFFFFFFFFFFLL, v2, v0);
  OUTLINED_FUNCTION_13_10();
}

void sub_2498161F0()
{
  OUTLINED_FUNCTION_8_22();
  __asm { BR              X10 }
}

void sub_249816228()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_24();
  OUTLINED_FUNCTION_7_19(v0, v1 & 0xFFFFFFFFFFFFFFLL);
  OUTLINED_FUNCTION_13_10();
}

BOOL sub_2498162DC(unsigned int a1, unsigned int a2)
{
  return (unsigned __int16)a1 >= (unsigned __int16)a2 && HIWORD(a2) < HIWORD(a1);
}

uint64_t sub_2498162F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return HIDUsageProtocol.init<A>(_:)(a1, a4, a2, a5, a3, a6);
}

uint64_t HIDUsageProtocol.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v22 = a6;
  v11 = sub_2498370A8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v21 - v13;
  v15 = OUTLINED_FUNCTION_13_14(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16));
  v16 = OUTLINED_FUNCTION_13_14(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 32))(v15, v16, a2, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v17 = 1;
    v18 = v22;
  }
  else
  {
    v19 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v22, v14, a2);
    v17 = 0;
    v18 = v19;
  }
  return __swift_storeEnumTagSinglePayload(v18, v17, 1, a2);
}

uint64_t HIDUsage._usage.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t HIDUsage.page.getter(uint64_t result)
{
  return (unsigned __int16)result;
}

uint64_t HIDUsage.usage.getter(unsigned int a1)
{
  return HIWORD(a1);
}

uint64_t HIDUsage.init(page:usage:)(unsigned __int16 a1, unsigned __int16 a2)
{
  return a1 | (a2 << 16);
}

uint64_t HIDUsage.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned __int16 v6;

  v3 = a3;
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  LOWORD(v3) = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(a2, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v6 | ((unsigned __int16)v3 << 16);
}

uint64_t HIDUsage.hash(into:)()
{
  sub_2498376C0();
  return sub_2498376C0();
}

BOOL static HIDUsage.== infix(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

uint64_t sub_24981652C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x656761705FLL && a2 == 0xE500000000000000;
  if (v2 || (sub_2498375C4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676173755FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2498375C4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_249816608(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65676173755FLL;
  else
    return 0x656761705FLL;
}

uint64_t sub_249816638()
{
  char *v0;

  return sub_249816608(*v0);
}

uint64_t sub_249816640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24981652C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249816664()
{
  sub_2498167B0();
  return sub_249837750();
}

uint64_t sub_24981668C()
{
  sub_2498167B0();
  return sub_24983775C();
}

uint64_t HIDUsage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882358);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2498167B0();
  sub_249837744();
  v8[15] = 0;
  OUTLINED_FUNCTION_5_18();
  if (!v1)
  {
    v8[14] = 1;
    OUTLINED_FUNCTION_5_18();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2498167B0()
{
  unint64_t result;

  result = qword_257882360;
  if (!qword_257882360)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983D130, &type metadata for HIDUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882360);
  }
  return result;
}

uint64_t HIDUsage.hashValue.getter()
{
  sub_249837690();
  sub_2498376C0();
  sub_2498376C0();
  return sub_2498376E4();
}

uint64_t HIDUsage.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 v5;
  unsigned __int16 v6;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882368);
  MEMORY[0x24BDAC7A8](v3);
  v4 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  sub_2498167B0();
  sub_249837720();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v5 = OUTLINED_FUNCTION_11_16();
    v6 = OUTLINED_FUNCTION_11_16();
    OUTLINED_FUNCTION_6_15();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v5 | (v6 << 16);
  }
  return v4;
}

uint64_t sub_249816968()
{
  unsigned int *v0;

  return HIDUsage.page.getter(*v0);
}

uint64_t sub_249816970()
{
  unsigned int *v0;

  return HIDUsage.usage.getter(*v0);
}

uint64_t sub_249816978@<X0>(unsigned __int16 a1@<W0>, unsigned __int16 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = HIDUsage.init(page:usage:)(a1, a2);
  *(_DWORD *)a3 = result;
  *(_BYTE *)(a3 + 4) = 0;
  return result;
}

uint64_t sub_2498169A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  result = HIDUsage.init<A>(_:)(a1, a2, a3);
  *(_DWORD *)a4 = result;
  *(_BYTE *)(a4 + 4) = 0;
  return result;
}

uint64_t sub_2498169C8@<X0>(_QWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = HIDUsage.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2498169F0(_QWORD *a1)
{
  return HIDUsage.encode(to:)(a1);
}

uint64_t sub_249816A08()
{
  return HIDUsage.hashValue.getter();
}

uint64_t sub_249816A10()
{
  return HIDUsage.hash(into:)();
}

uint64_t sub_249816A18()
{
  sub_249837690();
  sub_2498376C0();
  sub_2498376C0();
  return sub_2498376E4();
}

BOOL sub_249816A70(int *a1, int *a2)
{
  return static HIDUsage.== infix(_:_:)(*a1, *a2);
}

uint64_t HIDUsage.description.getter()
{
  uint64_t v0;

  sub_249816B14();
  v0 = OUTLINED_FUNCTION_4_25();
  OUTLINED_FUNCTION_4_25();
  sub_249836DB4();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_249816B14()
{
  unint64_t result;

  result = qword_257882370;
  if (!qword_257882370)
  {
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE17B0], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_257882370);
  }
  return result;
}

uint64_t sub_249816B50()
{
  return HIDUsage.description.getter();
}

BOOL static HIDUsage.< infix(_:_:)(unsigned int a1, unsigned int a2)
{
  return (unsigned __int16)a2 >= (unsigned __int16)a1 && HIWORD(a1) < HIWORD(a2);
}

unint64_t sub_249816B74(uint64_t a1)
{
  unint64_t result;

  result = sub_249816B98();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_249816B98()
{
  unint64_t result;

  result = qword_257882378;
  if (!qword_257882378)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDUsage, &type metadata for HIDUsage);
    atomic_store(result, (unint64_t *)&qword_257882378);
  }
  return result;
}

unint64_t sub_249816BD8()
{
  unint64_t result;

  result = qword_257882380;
  if (!qword_257882380)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDUsage, &type metadata for HIDUsage);
    atomic_store(result, (unint64_t *)&qword_257882380);
  }
  return result;
}

BOOL sub_249816C14(unsigned int *a1, unsigned int *a2)
{
  return static HIDUsage.< infix(_:_:)(*a1, *a2);
}

BOOL sub_249816C20(unsigned int *a1, unsigned int *a2)
{
  return sub_249816098(*a1, *a2);
}

BOOL sub_249816C2C(unsigned int *a1, unsigned int *a2)
{
  return sub_2498160B4(*a1, *a2);
}

BOOL sub_249816C38(unsigned int *a1, unsigned int *a2)
{
  return sub_2498162DC(*a1, *a2);
}

uint64_t dispatch thunk of HIDUsageProtocol.page.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HIDUsageProtocol.usage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDUsageProtocol.init(page:usage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of HIDUsageProtocol.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t getEnumTagSinglePayload for HIDUsage(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HIDUsage(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 4) = v3;
  return result;
}

ValueMetadata *type metadata accessor for HIDUsage()
{
  return &type metadata for HIDUsage;
}

uint64_t storeEnumTagSinglePayload for HIDUsage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249816D08 + 4 * byte_24983CEF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249816D3C + 4 * asc_24983CEF0[v4]))();
}

uint64_t sub_249816D3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249816D44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249816D4CLL);
  return result;
}

uint64_t sub_249816D58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249816D60);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249816D64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249816D6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HIDUsage.CodingKeys()
{
  return &type metadata for HIDUsage.CodingKeys;
}

unint64_t sub_249816D8C()
{
  unint64_t result;

  result = qword_257882388;
  if (!qword_257882388)
  {
    result = MEMORY[0x24BCF8F94]("ـ'\btl", &type metadata for HIDUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882388);
  }
  return result;
}

unint64_t sub_249816DCC()
{
  unint64_t result;

  result = qword_257882390;
  if (!qword_257882390)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983D078, &type metadata for HIDUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882390);
  }
  return result;
}

unint64_t sub_249816E0C()
{
  unint64_t result;

  result = qword_257882398;
  if (!qword_257882398)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983D0A0, &type metadata for HIDUsage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882398);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_27(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;

  return sub_2498148D8(a1, a2, a3, v4, v3);
}

uint64_t OUTLINED_FUNCTION_4_25()
{
  return sub_249836E20();
}

uint64_t OUTLINED_FUNCTION_5_18()
{
  return sub_249837504();
}

uint64_t OUTLINED_FUNCTION_6_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_7_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_249814A54(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_11_16()
{
  return sub_249837444();
}

uint64_t OUTLINED_FUNCTION_13_14@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t HIDScrollMomentum.rawValue.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDScrollMomentum.rawValue.modify())(void)
{
  return nullsub_1;
}

void *static HIDScrollMomentum.allCases.getter()
{
  return &unk_251AB5278;
}

unint64_t HIDScrollMomentum.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || result >= 0x100)
  {
    OUTLINED_FUNCTION_0_2();
    result = sub_249837300();
    __break(1u);
  }
  return result;
}

uint64_t static HIDScrollMomentum.start.getter()
{
  return 2;
}

uint64_t static HIDScrollMomentum.continue.getter()
{
  return 1;
}

uint64_t static HIDScrollMomentum.end.getter()
{
  return 4;
}

uint64_t static HIDScrollMomentum.interrupted.getter()
{
  return 16;
}

_BYTE *sub_249816FB0@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_249816FBC(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AB5278;
}

void sub_249816FCC(_BYTE *a1@<X8>)
{
  *a1 = j__PlatformIsBeta();
  OUTLINED_FUNCTION_27();
}

uint64_t sub_249816FEC()
{
  return 0;
}

uint64_t sub_249816FF8(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return sub_24981BB60(*a1, *v1);
}

uint64_t sub_249817004@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t result;

  result = j__OUTLINED_FUNCTION_3_30(*a1, *v2);
  *a2 = result;
  return result;
}

void sub_249817030(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;

  *a2 = j__OUTLINED_FUNCTION_8_23(*a1, *v2);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_249817058(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

void sub_249817064(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;

  *a2 = j__OUTLINED_FUNCTION_54_5(*a1, *v2);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24981708C(uint64_t a1, unsigned __int8 *a2)
{
  return sub_24981BB2C(a1, *a2);
}

uint64_t sub_249817094@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_2498329E4(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_2498170C4@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_249832A54(*a1);
  *a2 = result;
  a2[1] = BYTE1(result) & 1;
  return result;
}

uint64_t sub_2498170F4(unsigned __int8 *a1)
{
  return sub_24981BBBC(*a1);
}

uint64_t sub_2498170FC(unsigned __int8 *a1)
{
  return sub_249817124(*a1);
}

uint64_t sub_249817104(uint64_t result)
{
  _QWORD *v1;

  *v1 &= result;
  return result;
}

uint64_t sub_249817114(uint64_t result)
{
  _DWORD *v1;

  *v1 &= result;
  return result;
}

uint64_t sub_249817124(uint64_t result)
{
  _BYTE *v1;

  *v1 &= result;
  return result;
}

uint64_t sub_249817134(unsigned __int8 *a1)
{
  return sub_24981BB40(*a1);
}

uint64_t sub_24981713C@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t result;

  result = sub_249835CD4(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_249817168(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return sub_24981BB68(*a1, *v1);
}

uint64_t sub_249817174(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return sub_249835CD8(*a1, *v1);
}

BOOL sub_249817180()
{
  char *v0;

  return sub_249817194(*v0);
}

BOOL sub_249817188(int a1)
{
  return a1 == 0;
}

BOOL sub_249817194(char a1)
{
  return a1 == 0;
}

uint64_t sub_2498171A0(unsigned __int8 *a1)
{
  return sub_24981BBC4(*a1);
}

unsigned __int8 *sub_2498171A8@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_2498171B8(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

BOOL sub_2498171C4(int a1, int a2)
{
  return a1 == a2;
}

uint64_t sub_2498171D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_249835404();
  *a1 = result;
  return result;
}

uint64_t HIDScrollMomentum.description.getter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = MEMORY[0x24BEE4AF8];
  v5 = MEMORY[0x24BEE4AF8];
  if ((a1 & 2) != 0)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_249817CB8(0, 1, 1);
    v5 = v21;
    OUTLINED_FUNCTION_15_12();
    if (v10)
    {
      OUTLINED_FUNCTION_3_23(v9);
      v5 = v21;
    }
    *(_QWORD *)(v5 + 16) = v1;
    *(_BYTE *)(v5 + v2 + 32) = 2;
    if ((a1 & 1) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((a1 & 1) == 0)
  {
    goto LABEL_3;
  }
  if ((OUTLINED_FUNCTION_19_15() & 1) == 0)
    OUTLINED_FUNCTION_5_19();
  OUTLINED_FUNCTION_15_12();
  if (v10)
    OUTLINED_FUNCTION_3_23(v11);
  *(_QWORD *)(v5 + 16) = v1;
  *(_BYTE *)(v5 + v2 + 32) = 1;
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 0x10) == 0)
      goto LABEL_5;
    goto LABEL_20;
  }
LABEL_15:
  if ((OUTLINED_FUNCTION_19_15() & 1) == 0)
    OUTLINED_FUNCTION_5_19();
  OUTLINED_FUNCTION_15_12();
  if (v10)
    OUTLINED_FUNCTION_3_23(v12);
  *(_QWORD *)(v5 + 16) = v1;
  *(_BYTE *)(v5 + v2 + 32) = 4;
  if ((a1 & 0x10) == 0)
  {
LABEL_5:
    v6 = *(_QWORD *)(v5 + 16);
    if (!v6)
      goto LABEL_6;
    goto LABEL_25;
  }
LABEL_20:
  if ((OUTLINED_FUNCTION_19_15() & 1) == 0)
    OUTLINED_FUNCTION_5_19();
  v14 = *(_QWORD *)(v5 + 16);
  v13 = *(_QWORD *)(v5 + 24);
  v6 = v14 + 1;
  if (v14 >= v13 >> 1)
    OUTLINED_FUNCTION_3_23(v13);
  *(_QWORD *)(v5 + 16) = v6;
  *(_BYTE *)(v5 + v14 + 32) = 16;
LABEL_25:
  sub_24974DDF0();
  v15 = 0;
  do
  {
    if ((*(_BYTE *)(v5 + v15 + 32) & 2) != 0)
    {
      v18 = 0xE500000000000000;
      v16 = 0x7472617473;
    }
    else if ((*(_BYTE *)(v5 + v15 + 32) & 1) != 0)
    {
      v18 = 0xE800000000000000;
      v16 = 0x65756E69746E6F63;
    }
    else if ((*(_BYTE *)(v5 + v15 + 32) & 4) != 0)
    {
      v18 = 0xE300000000000000;
      v16 = 6581861;
    }
    else if ((*(_BYTE *)(v5 + v15 + 32) & 0x10) != 0)
    {
      v18 = 0xEB00000000646574;
      v16 = 0x7075727265746E69;
    }
    else
    {
      v16 = sub_249837540();
      v18 = v17;
    }
    v19 = *(_QWORD *)(v4 + 16);
    if (v19 >= *(_QWORD *)(v4 + 24) >> 1)
      sub_24974DDF0();
    ++v15;
    *(_QWORD *)(v4 + 16) = v19 + 1;
    v20 = v4 + 16 * v19;
    *(_QWORD *)(v20 + 32) = v16;
    *(_QWORD *)(v20 + 40) = v18;
  }
  while (v6 != v15);
LABEL_6:
  OUTLINED_FUNCTION_12_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FEB8);
  sub_24974DEBC((unint64_t *)&qword_25787FEC0, &qword_25787FEB8, MEMORY[0x24BEE12B0]);
  v7 = sub_249836CDC();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2498174C8()
{
  char *v0;

  return HIDScrollMomentum.description.getter(*v0);
}

char *sub_2498174D0(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_0_2();
    __src = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_249817530(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[4 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_19(a3, result);
  }
  return result;
}

char *sub_249817588(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_249837360();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_249817614(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_249837360();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_249817698(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_19(a3, result);
  }
  return result;
}

char *sub_2498176F8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[144 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_19(a3, result);
  }
  return result;
}

uint64_t sub_249817754(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_249837360();
    __break(1u);
  }
  else if (a3 < a1
         || (result = type metadata accessor for PropertyListNode(),
             a1 + *(_QWORD *)(*(_QWORD *)(result - 8) + 72) * a2 <= a3))
  {
    type metadata accessor for PropertyListNode();
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 != a1)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

void *sub_249817850(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  const void *v4;
  void *v5;
  unint64_t v6;
  BOOL v7;
  BOOL v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_4_1();
  }
  else
  {
    OUTLINED_FUNCTION_10_12();
    if (!v8 && v7)
    {
      v7 = v6 >= v3;
      v8 = v6 == v3;
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    if (v8 || !v7)
      return OUTLINED_FUNCTION_1_1(v5, v4, 4 * v2);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_3_1();
  }
  result = (void *)OUTLINED_FUNCTION_2_1();
  __break(1u);
  return result;
}

uint64_t sub_2498178D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 40 * a2 > a1 ? (v3 = a1 + 40 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_249837360();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882438);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_2498179C4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_249837360();
  __break(1u);
  return result;
}

void *sub_249817A90(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[16 * a2] <= __src || &__src[16 * a2] <= __dst))
    return memcpy(__dst, __src, 16 * a2);
  result = (void *)sub_249837360();
  __break(1u);
  return result;
}

uint64_t sub_249817B58(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for PropertyListNode() - 8) + 72) * a2;
    v6 = a3 + v5;
    v7 = a1 + v5;
    if (v6 <= a1 || v7 <= a3)
      return swift_arrayInitWithCopy();
  }
  result = sub_249837360();
  __break(1u);
  return result;
}

void sub_249817C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_249817F40(a1, a2, a3, *v3, &qword_2578823E8);
  *v3 = v4;
}

void sub_249817C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_249817F40(a1, a2, a3, *v3, &qword_257882400);
  *v3 = v4;
}

void sub_249817C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_249817FF8(a1, a2, a3, *v3, &qword_257882428);
  *v3 = v4;
}

void sub_249817CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_249817FF8(a1, a2, a3, *v3, &qword_257882440);
  *v3 = v4;
}

unint64_t sub_249817CE0()
{
  unint64_t result;

  result = qword_2578823B0;
  if (!qword_2578823B0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDScrollMomentum, &type metadata for HIDScrollMomentum);
    atomic_store(result, (unint64_t *)&qword_2578823B0);
  }
  return result;
}

unint64_t sub_249817D20()
{
  unint64_t result;

  result = qword_2578823B8;
  if (!qword_2578823B8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDScrollMomentum, &type metadata for HIDScrollMomentum);
    atomic_store(result, (unint64_t *)&qword_2578823B8);
  }
  return result;
}

uint64_t sub_249817D5C()
{
  return sub_24974DEBC(&qword_2578823C0, &qword_2578823C8, MEMORY[0x24BEE12E0]);
}

unint64_t sub_249817D8C()
{
  unint64_t result;

  result = qword_2578823D0;
  if (!qword_2578823D0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDScrollMomentum, &type metadata for HIDScrollMomentum);
    atomic_store(result, (unint64_t *)&qword_2578823D0);
  }
  return result;
}

unint64_t sub_249817DCC()
{
  unint64_t result;

  result = qword_2578823D8;
  if (!qword_2578823D8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDScrollMomentum, &type metadata for HIDScrollMomentum);
    atomic_store(result, (unint64_t *)&qword_2578823D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDScrollMomentum()
{
  return &type metadata for HIDScrollMomentum;
}

void type metadata accessor for IOHIDEvent(uint64_t a1)
{
  sub_249748E98(a1, &qword_2578823E0);
}

void sub_249817E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_249817F40(a1, a2, a3, *v3, &qword_2578823F0);
  *v3 = v4;
}

char *sub_249817E50(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_2498180A4(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_249817E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_24981826C(a1, a2, a3, *v3, &qword_257882420, (void (*)(uint64_t, uint64_t, _QWORD *))sub_249817614, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2498179C4);
  *v3 = v4;
}

void sub_249817EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_24981826C(a1, a2, a3, *v3, &qword_257882418, (void (*)(uint64_t, uint64_t, _QWORD *))sub_249817614, (void (*)(uint64_t, uint64_t, _QWORD *))sub_249817A90);
  *v3 = v4;
}

uint64_t sub_249817ED4(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24981818C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_249817EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_24981826C(a1, a2, a3, *v3, &qword_257882408, (void (*)(uint64_t, uint64_t, _QWORD *))sub_249817614, (void (*)(uint64_t, uint64_t, _QWORD *))sub_249817A90);
  *v3 = v4;
}

size_t sub_249817F24(size_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  size_t result;

  result = sub_24981833C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_249817F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  char *v14;

  v6 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v8 != v9)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  else
  {
    v7 = a2;
  }
  v10 = *(_QWORD *)(a4 + 16);
  if (v7 <= v10)
    v11 = *(_QWORD *)(a4 + 16);
  else
    v11 = v7;
  if (v11)
  {
    OUTLINED_FUNCTION_19_1(a1, a2, a3, a4, a5);
    v12 = OUTLINED_FUNCTION_18_1();
    v13 = _swift_stdlib_malloc_size((const void *)v12);
    *(_QWORD *)(v12 + 16) = v10;
    *(_QWORD *)(v12 + 24) = 2 * ((uint64_t)(v13 - 32) / 4);
  }
  else
  {
    v12 = MEMORY[0x24BEE4AF8];
  }
  v14 = (char *)(a4 + 32);
  if ((v6 & 1) != 0)
  {
    sub_249817530(v14, v10, (char *)(v12 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_249817850((uint64_t)v14, v10);
  }
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_81();
}

void sub_249817FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  char v6;
  int64_t v7;
  char v8;
  char v9;
  int64_t v10;
  int64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;

  v6 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v8 != v9)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  else
  {
    v7 = a2;
  }
  v10 = *(_QWORD *)(a4 + 16);
  if (v7 <= v10)
    v11 = *(_QWORD *)(a4 + 16);
  else
    v11 = v7;
  if (v11)
  {
    OUTLINED_FUNCTION_19_1(a1, a2, a3, a4, a5);
    v12 = (char *)OUTLINED_FUNCTION_18_1();
    v13 = _swift_stdlib_malloc_size(v12);
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v12 + 32;
  v15 = (char *)(a4 + 32);
  if ((v6 & 1) != 0)
  {
    sub_2498174D0(v15, v10, v14);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24974D5E4(v15, v10, v14);
  }
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_81();
}

char *sub_2498180A4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882430);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_249817588(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2498178D4((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

uint64_t sub_24981818C(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  char *v12;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882410);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  v12 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_249817530(v12, v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_249817850((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

void sub_24981826C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, _QWORD *), void (*a7)(uint64_t, uint64_t, _QWORD *))
{
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  size_t v17;
  _QWORD *v18;
  uint64_t v19;

  v10 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v12 != v13)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (v15)
  {
    OUTLINED_FUNCTION_19_1(a1, a2, a3, a4, a5);
    v16 = (_QWORD *)OUTLINED_FUNCTION_18_1();
    v17 = _swift_stdlib_malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 16);
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v18 = v16 + 4;
  v19 = a4 + 32;
  if ((v10 & 1) != 0)
  {
    a6(v19, v14, v18);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    a7(v19, v14, v18);
  }
  OUTLINED_FUNCTION_12_1();
}

size_t sub_24981833C(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578823F8);
  v10 = *(_QWORD *)(type metadata accessor for PropertyListNode() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_24;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PropertyListNode() - 8) + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (unint64_t)v13 + v16;
  v18 = a4 + v16;
  if ((v5 & 1) != 0)
  {
    sub_249817754(v18, v8, v17);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_249817B58(v18, v8, v17);
  }
  swift_release();
  return (size_t)v13;
}

void type metadata accessor for CFNumber(uint64_t a1)
{
  sub_249748E98(a1, &qword_257882448);
}

void OUTLINED_FUNCTION_3_23(unint64_t a1@<X8>)
{
  uint64_t v1;

  sub_249817CB8(a1 > 1, v1, 1);
}

void OUTLINED_FUNCTION_5_19()
{
  uint64_t v0;

  sub_249817CB8(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

uint64_t OUTLINED_FUNCTION_8_23(unsigned int a1, int a2)
{
  return a2 & a1;
}

uint64_t OUTLINED_FUNCTION_19_15()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t HIDEventPhase.rawValue.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDEventPhase.rawValue.modify())(void)
{
  return nullsub_1;
}

void *static HIDEventPhase.allCases.getter()
{
  return &unk_251AB52A0;
}

unint64_t HIDEventPhase.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || result >= 0x100)
  {
    OUTLINED_FUNCTION_0_2();
    result = OUTLINED_FUNCTION_1_25();
    __break(1u);
  }
  return result;
}

uint64_t HIDEventPhase.init(_:)(uint64_t result)
{
  if ((unsigned __int16)result >= 0x100u)
  {
    OUTLINED_FUNCTION_0_2();
    result = OUTLINED_FUNCTION_1_25();
    __break(1u);
  }
  return result;
}

uint64_t static HIDEventPhase.began.getter()
{
  return 1;
}

uint64_t static HIDEventPhase.changed.getter()
{
  return 2;
}

uint64_t static HIDEventPhase.ended.getter()
{
  return 4;
}

uint64_t static HIDEventPhase.canceled.getter()
{
  return 8;
}

uint64_t static HIDEventPhase.mayBegin.getter()
{
  return 128;
}

void sub_24981862C(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AB52A0;
}

BOOL sub_24981863C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_249818AC8(a1, *a2);
}

void sub_249818644(char *a1)
{
  sub_249818B04(*a1);
}

void sub_24981864C(char *a1)
{
  sub_249818B1C(*a1);
}

uint64_t sub_249818654@<X0>(unsigned __int8 *a1@<X0>, _BYTE *a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t result;

  result = sub_2498353D8(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_249818680(char *a1)
{
  unsigned __int8 *v1;

  return sub_249818B34(*a1, *v1);
}

BOOL sub_24981868C(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return sub_2498353E8(*a1, *v1);
}

BOOL sub_249818698(unsigned __int8 *a1)
{
  char *v1;

  return sub_249818B50(*a1, *v1);
}

void sub_2498186A4(char *a1)
{
  sub_249818B6C(*a1);
}

uint64_t HIDEventPhase.description.getter(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  char *v5;
  char v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = 5;
  v2 = MEMORY[0x24BEE4AF8];
  v3 = a1;
  v4 = MEMORY[0x24BEE4AF8];
  v5 = &byte_251AB52C0;
  do
  {
    v7 = *v5++;
    v6 = v7;
    if ((v7 & v3) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_249817C94(0, *(_QWORD *)(v4 + 16) + 1, 1);
      v9 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      if (v9 >= v8 >> 1)
        sub_249817C94(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v4 + 16) = v9 + 1;
      *(_BYTE *)(v4 + v9 + 32) = v6;
    }
    --v1;
  }
  while (v1);
  v10 = *(_QWORD *)(v4 + 16);
  if (v10)
  {
    sub_24974DDF0();
    v11 = 0;
    v12 = v2;
    do
    {
      if ((*(_BYTE *)(v4 + v11 + 32) & 1) != 0)
      {
        v15 = 0xE500000000000000;
        v13 = 0x6E61676562;
      }
      else if ((*(_BYTE *)(v4 + v11 + 32) & 2) != 0)
      {
        v15 = 0xE700000000000000;
        v13 = 0x6465676E616863;
      }
      else if ((*(_BYTE *)(v4 + v11 + 32) & 4) != 0)
      {
        v15 = 0xE500000000000000;
        v13 = 0x6465646E65;
      }
      else if ((*(_BYTE *)(v4 + v11 + 32) & 8) != 0)
      {
        v15 = 0xE800000000000000;
        v13 = 0x64656C65636E6163;
      }
      else if ((*(_BYTE *)(v4 + v11 + 32) & 0x80) != 0)
      {
        v15 = 0xE800000000000000;
        v13 = 0x6E6967654279616DLL;
      }
      else
      {
        v13 = sub_249837540();
        v15 = v14;
      }
      v16 = *(_QWORD *)(v12 + 16);
      if (v16 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_24974DDF0();
      ++v11;
      *(_QWORD *)(v12 + 16) = v16 + 1;
      v17 = v12 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v13;
      *(_QWORD *)(v17 + 40) = v15;
    }
    while (v10 != v11);
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FEB8);
  sub_24974DEBC((unint64_t *)&qword_25787FEC0, &qword_25787FEB8, MEMORY[0x24BEE12B0]);
  v18 = sub_249836CDC();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_249818940()
{
  unsigned __int8 *v0;

  return HIDEventPhase.description.getter(*v0);
}

unint64_t sub_24981894C()
{
  unint64_t result;

  result = qword_257882450;
  if (!qword_257882450)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventPhase, &type metadata for HIDEventPhase);
    atomic_store(result, (unint64_t *)&qword_257882450);
  }
  return result;
}

unint64_t sub_24981898C()
{
  unint64_t result;

  result = qword_257882458;
  if (!qword_257882458)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventPhase, &type metadata for HIDEventPhase);
    atomic_store(result, (unint64_t *)&qword_257882458);
  }
  return result;
}

uint64_t sub_2498189C8()
{
  return sub_24974DEBC(&qword_257882460, &qword_257882468, MEMORY[0x24BEE12E0]);
}

unint64_t sub_2498189F8()
{
  unint64_t result;

  result = qword_257882470;
  if (!qword_257882470)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventPhase, &type metadata for HIDEventPhase);
    atomic_store(result, (unint64_t *)&qword_257882470);
  }
  return result;
}

unint64_t sub_249818A38()
{
  unint64_t result;

  result = qword_257882478;
  if (!qword_257882478)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventPhase, &type metadata for HIDEventPhase);
    atomic_store(result, (unint64_t *)&qword_257882478);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDEventPhase()
{
  return &type metadata for HIDEventPhase;
}

uint64_t OUTLINED_FUNCTION_1_25()
{
  return sub_249837300();
}

uint64_t sub_249818A94(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL sub_249818A9C(_DWORD *a1, int a2)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

BOOL sub_249818AC8(unsigned __int8 *a1, unsigned __int8 a2)
{
  _BYTE *v2;
  int v3;

  v3 = (*v2 & a2);
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

void sub_249818AF8(int a1)
{
  _DWORD *v1;

  OUTLINED_FUNCTION_61_5(*v1 | a1);
}

void sub_249818B04(char a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_60_4(*v1 | a1);
}

void sub_249818B10(int a1)
{
  _DWORD *v1;

  OUTLINED_FUNCTION_61_5(*v1 ^ a1);
}

void sub_249818B1C(char a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_60_4(*v1 ^ a1);
}

BOOL sub_249818B28(int a1, int a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_249818B34(char a1, unsigned __int8 a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_249818B44(int a1, int a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_249818B50(unsigned __int8 a1, char a2)
{
  return (a1 & ~a2) == 0;
}

void sub_249818B60(int a1)
{
  _DWORD *v1;

  OUTLINED_FUNCTION_61_5(*v1 & ~a1);
}

void sub_249818B6C(char a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_60_4(*v1 & ~a1);
}

id IOHIDEventRef.bridgedValue.getter()
{
  return OUTLINED_FUNCTION_58_5();
}

uint64_t sub_249818B94(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3) == 11)
  {
    v4 = a1[3];
    v5 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v4);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 352))(v4, v5);
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v6;
}

uint64_t _HIDEventImpl.init(event:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v10;
  uint64_t v11;

  OUTLINED_FUNCTION_56_6(a1);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  if (v10 == (*(unsigned int (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3))
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v11 = OUTLINED_FUNCTION_45_7();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 40))(v11, a2, a3);
    OUTLINED_FUNCTION_44_6(a4, 0);
    return OUTLINED_FUNCTION_35_7((uint64_t)a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return __swift_storeEnumTagSinglePayload(a4, 1, 1, a2);
  }
}

uint64_t sub_249818CF4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 352))(v2, v3);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

uint64_t _HIDEventImpl.init(wrappedValue:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  OUTLINED_FUNCTION_56_6(a1);
  v6 = OUTLINED_FUNCTION_45_7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 40))(v6, a2, a3);
  return OUTLINED_FUNCTION_35_7((uint64_t)a1);
}

void sub_249818DA0(void *a1)
{
  unint64_t v1;

  if (objc_msgSend(a1, sel_children))
  {
    sub_24981AF98();
    OUTLINED_FUNCTION_63_5();
    OUTLINED_FUNCTION_11_0();
    sub_24981A4B4(v1);
    OUTLINED_FUNCTION_55_6();
  }
  OUTLINED_FUNCTION_27();
}

void HIDEventProtocol.children.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = (void *)(*(uint64_t (**)(void))(a2 + 352))();
  v3 = objc_msgSend(v2, sel_children);

  if (v3)
  {
    sub_24981AF98();
    OUTLINED_FUNCTION_63_5();
    OUTLINED_FUNCTION_11_0();
    sub_24981A4B4((unint64_t)v2);
    OUTLINED_FUNCTION_55_6();
  }
  OUTLINED_FUNCTION_27();
}

uint64_t sub_249818E68()
{
  return 2048;
}

uint64_t HIDEventProtocol.eventMask.getter(uint64_t a1, uint64_t a2)
{
  unsigned int v2;

  v2 = (*(uint64_t (**)(void))(a2 + 24))();
  HIDEventType.maskValue.getter(v2);
  return HIDEventType.maskValue.getter(v2);
}

uint64_t sub_249818E9C()
{
  return 11;
}

void _HIDEventImpl.eventType.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 16))();
  OUTLINED_FUNCTION_27();
}

uint64_t sub_249818EC4(void *a1)
{
  id v1;
  uint64_t EventFlags;

  v1 = a1;
  EventFlags = IOHIDEventGetEventFlags();

  return EventFlags;
}

void HIDEventProtocol.flags.getter(uint64_t a1, uint64_t a2)
{
  HIDEventProtocol.__bridgedValue.getter(a1, a2);
  IOHIDEventGetEventFlags();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void sub_249818F1C(int a1, id a2)
{
  id v2;

  v2 = a2;
  IOHIDEventSetEventFlags();

}

void HIDEventProtocol.flags.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;

  OUTLINED_FUNCTION_32_8(a1, a2, a3);
  OUTLINED_FUNCTION_57_6();
  OUTLINED_FUNCTION_0_1(v3);
}

void HIDEventProtocol.flags.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v4 = OUTLINED_FUNCTION_20_15(a1, a2, a3);
  HIDEventProtocol.flags.getter(v4, v5);
  *(_DWORD *)(v3 + 24) = v6;
  OUTLINED_FUNCTION_27();
}

void sub_249818FAC(uint64_t a1)
{
  HIDEventProtocol.flags.setter(*(unsigned int *)(a1 + 24), *(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  OUTLINED_FUNCTION_27();
}

BOOL sub_249818FD0(void *a1)
{
  id v1;
  int IsAbsolute;

  v1 = a1;
  IsAbsolute = IOHIDEventIsAbsolute();

  return IsAbsolute != 0;
}

void HIDEventProtocol.absolute.getter(uint64_t a1, uint64_t a2)
{
  sub_2498196BC(a1, a2, (void (*)(void))MEMORY[0x24BDD82F0]);
}

void sub_249819010(int a1, void *a2)
{
  id v2;

  OUTLINED_FUNCTION_28_10(a1, a2);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  v2 = OUTLINED_FUNCTION_37_7();
  IOHIDEventSetEventFlags();
  OUTLINED_FUNCTION_37_0(v2);
}

void HIDEventProtocol.absolute.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;

  OUTLINED_FUNCTION_9_19(a1, a2, a3);
  OUTLINED_FUNCTION_10_13(v6 & 0xFFFFFFFE | v5 & 1, v4, v3);
}

void HIDEventProtocol.absolute.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = OUTLINED_FUNCTION_20_15(a1, a2, a3);
  HIDEventProtocol.absolute.getter(v4, v5);
  *(_BYTE *)(v3 + 24) = v6 & 1;
  OUTLINED_FUNCTION_27();
}

void sub_2498190A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_19_16(a1);
  HIDEventProtocol.absolute.setter(v1, v2, v3);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2498190C4(void *a1)
{
  id v1;
  unsigned int EventFlags;

  v1 = a1;
  EventFlags = IOHIDEventGetEventFlags();

  return HIWORD(EventFlags) & 1;
}

uint64_t HIDEventProtocol.accelerated.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_41_6(a1, a2) >> 16) & 1;
}

void sub_24981910C(int a1, void *a2)
{
  id v2;

  OUTLINED_FUNCTION_28_10(a1, a2);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  v2 = OUTLINED_FUNCTION_37_7();
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_37_0(v2);
}

void HIDEventProtocol.accelerated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_19(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_33_11(v3 & 0xFFFEFFFF);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void HIDEventProtocol.accelerated.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_8_24(a1, a2, a3) >> 16) & 1;
  OUTLINED_FUNCTION_27();
}

void sub_2498191B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_19_16(a1);
  HIDEventProtocol.accelerated.setter(v1, v2, v3);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2498191CC(void *a1)
{
  id v1;
  unsigned int EventFlags;

  v1 = a1;
  EventFlags = IOHIDEventGetEventFlags();

  return (EventFlags >> 4) & 1;
}

uint64_t HIDEventProtocol.builtin.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_41_6(a1, a2) >> 4) & 1;
}

void sub_249819214(int a1, void *a2)
{
  id v2;

  OUTLINED_FUNCTION_28_10(a1, a2);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  v2 = OUTLINED_FUNCTION_37_7();
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_37_0(v2);
}

void HIDEventProtocol.builtin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_19(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_33_11(v3 & 0xFFFFFFEF);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void HIDEventProtocol.builtin.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_8_24(a1, a2, a3) & 0x10) != 0;
  OUTLINED_FUNCTION_27();
}

void sub_2498192B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_19_16(a1);
  HIDEventProtocol.builtin.setter(v1, v2, v3);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2498192D4(void *a1)
{
  id v1;
  unsigned int EventFlags;

  v1 = a1;
  EventFlags = IOHIDEventGetEventFlags();

  return (EventFlags >> 3) & 1;
}

uint64_t HIDEventProtocol.centerOrigin.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_41_6(a1, a2) >> 3) & 1;
}

void sub_24981931C(int a1, void *a2)
{
  id v2;

  OUTLINED_FUNCTION_28_10(a1, a2);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  v2 = OUTLINED_FUNCTION_37_7();
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_37_0(v2);
}

void HIDEventProtocol.centerOrigin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_19(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_33_11(v3 & 0xFFFFFFF7);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void HIDEventProtocol.centerOrigin.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_8_24(a1, a2, a3) & 8) != 0;
  OUTLINED_FUNCTION_27();
}

void sub_2498193C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_19_16(a1);
  HIDEventProtocol.centerOrigin.setter(v1, v2, v3);
  OUTLINED_FUNCTION_27();
}

uint64_t HIDEventProtocol.collection.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_41_6(a1, a2) >> 1) & 1;
}

void HIDEventProtocol.collection.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_19(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_33_11(v3 & 0xFFFFFFFD);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void HIDEventProtocol.collection.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_8_24(a1, a2, a3) & 2) != 0;
  OUTLINED_FUNCTION_27();
}

void sub_249819450(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_19_16(a1);
  HIDEventProtocol.collection.setter(v1, v2, v3);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24981946C(void *a1)
{
  id v1;
  unsigned int EventFlags;

  v1 = a1;
  EventFlags = IOHIDEventGetEventFlags();

  return (EventFlags >> 5) & 1;
}

uint64_t HIDEventProtocol.interpolated.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_41_6(a1, a2) >> 5) & 1;
}

void sub_2498194B4(int a1, void *a2)
{
  id v2;

  OUTLINED_FUNCTION_28_10(a1, a2);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  v2 = OUTLINED_FUNCTION_37_7();
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_37_0(v2);
}

void HIDEventProtocol.interpolated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_19(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_33_11(v3 & 0xFFFFFFDF);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void HIDEventProtocol.interpolated.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_8_24(a1, a2, a3) & 0x20) != 0;
  OUTLINED_FUNCTION_27();
}

void sub_249819558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_19_16(a1);
  HIDEventProtocol.interpolated.setter(v1, v2, v3);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_249819574(void *a1)
{
  id v1;
  unsigned int EventFlags;

  v1 = a1;
  EventFlags = IOHIDEventGetEventFlags();

  return (EventFlags >> 2) & 1;
}

uint64_t HIDEventProtocol.pixelUnits.getter(uint64_t a1, uint64_t a2)
{
  return (OUTLINED_FUNCTION_41_6(a1, a2) >> 2) & 1;
}

void sub_2498195BC(int a1, void *a2)
{
  id v2;

  OUTLINED_FUNCTION_28_10(a1, a2);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  v2 = OUTLINED_FUNCTION_37_7();
  OUTLINED_FUNCTION_40_5();
  OUTLINED_FUNCTION_37_0(v2);
}

void HIDEventProtocol.pixelUnits.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_9_19(a1, a2, a3);
  v4 = OUTLINED_FUNCTION_33_11(v3 & 0xFFFFFFFB);
  OUTLINED_FUNCTION_10_13(v4, v5, v6);
}

void HIDEventProtocol.pixelUnits.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 24) = (OUTLINED_FUNCTION_8_24(a1, a2, a3) & 4) != 0;
  OUTLINED_FUNCTION_27();
}

void sub_249819660(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_19_16(a1);
  HIDEventProtocol.pixelUnits.setter(v1, v2, v3);
  OUTLINED_FUNCTION_27();
}

BOOL sub_24981967C(void *a1)
{
  id v1;
  int IsRepeat;

  v1 = a1;
  IsRepeat = IOHIDEventIsRepeat();

  return IsRepeat != 0;
}

void HIDEventProtocol.repeat.getter(uint64_t a1, uint64_t a2)
{
  sub_2498196BC(a1, a2, (void (*)(void))MEMORY[0x24BDD82F8]);
}

void sub_2498196BC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v4;
  void *v5;

  HIDEventProtocol.__bridgedValue.getter(a1, a2);
  v5 = v4;
  a3();

  OUTLINED_FUNCTION_27();
}

void sub_2498196F0(char a1, id a2)
{
  id v2;

  if ((a1 & 1) != 0)
  {
    v2 = a2;
    IOHIDEventSetRepeat();

  }
}

void HIDEventProtocol.repeat.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;

  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_32_8(a1, a2, a3);
    v4 = v3;
    IOHIDEventSetRepeat();
    OUTLINED_FUNCTION_49_6(v4);
  }
}

uint64_t (*sub_249819758(uint64_t a1, id a2))()
{
  id v3;
  int IsRepeat;

  *(_QWORD *)a1 = a2;
  v3 = a2;
  IsRepeat = IOHIDEventIsRepeat();

  *(_BYTE *)(a1 + 8) = IsRepeat != 0;
  return sub_2498197B0;
}

void sub_2498197B4(uint64_t a1)
{
  id v1;

  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v1 = *(id *)a1;
    IOHIDEventSetRepeat();
    OUTLINED_FUNCTION_49_6(v1);
  }
}

void HIDEventProtocol.repeat.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = OUTLINED_FUNCTION_20_15(a1, a2, a3);
  HIDEventProtocol.repeat.getter(v4, v5);
  *(_BYTE *)(v3 + 24) = v6 & 1;
  OUTLINED_FUNCTION_27();
}

void sub_249819828(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_19_16(a1);
  HIDEventProtocol.repeat.setter(v1, v2, v3);
  OUTLINED_FUNCTION_27();
}

void sub_249819844(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;

  v1 = a1;
  v2 = (id)IOHIDEventGetParent();

  if (v2)
  {
    OUTLINED_FUNCTION_53_4();
    OUTLINED_FUNCTION_59_3(v3, (uint64_t)&protocol witness table for IOHIDEventRef);
  }
  else
  {
    OUTLINED_FUNCTION_36_9();
  }
  OUTLINED_FUNCTION_81();
}

void HIDEventProtocol.parent.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;

  HIDEventProtocol.__bridgedValue.getter(a1, a2);
  v3 = v2;
  v4 = (id)IOHIDEventGetParent();

  if (v4)
  {
    OUTLINED_FUNCTION_53_4();
    OUTLINED_FUNCTION_59_3(v5, (uint64_t)&protocol witness table for IOHIDEventRef);
  }
  else
  {
    OUTLINED_FUNCTION_36_9();
  }
  OUTLINED_FUNCTION_81();
}

void sub_2498198EC(void *a1)
{
  id v1;

  v1 = a1;
  IOHIDEventGetPhase();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void HIDEventProtocol.phase.getter(uint64_t a1, uint64_t a2)
{
  HIDEventProtocol.__bridgedValue.getter(a1, a2);
  IOHIDEventGetPhase();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void sub_24981993C(int a1, id a2)
{
  id v2;

  v2 = a2;
  IOHIDEventSetPhase();

}

void HIDEventProtocol.phase.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;

  OUTLINED_FUNCTION_32_8(a1, a2, a3);
  v4 = v3;
  IOHIDEventSetPhase();
  OUTLINED_FUNCTION_0_1(v4);
}

void HIDEventProtocol.phase.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = OUTLINED_FUNCTION_20_15(a1, a2, a3);
  HIDEventProtocol.phase.getter(v4, v5);
  *(_BYTE *)(v3 + 24) = v6;
  OUTLINED_FUNCTION_27();
}

void sub_2498199D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_19_16(a1);
  HIDEventProtocol.phase.setter(v1, v2, v3);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2498199F0(void *a1)
{
  id v1;
  uint64_t ScrollMomentum;

  v1 = a1;
  ScrollMomentum = IOHIDEventGetScrollMomentum();

  return ScrollMomentum;
}

void HIDEventProtocol.momentum.getter(uint64_t a1, uint64_t a2)
{
  HIDEventProtocol.__bridgedValue.getter(a1, a2);
  IOHIDEventGetScrollMomentum();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void sub_249819A48(int a1, id a2)
{
  id v2;

  v2 = a2;
  IOHIDEventSetScrollMomentum();

}

void HIDEventProtocol.momentum.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;

  OUTLINED_FUNCTION_32_8(a1, a2, a3);
  v4 = v3;
  IOHIDEventSetScrollMomentum();
  OUTLINED_FUNCTION_0_1(v4);
}

void HIDEventProtocol.momentum.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = OUTLINED_FUNCTION_20_15(a1, a2, a3);
  HIDEventProtocol.momentum.getter(v4, v5);
  *(_BYTE *)(v3 + 24) = v6;
  OUTLINED_FUNCTION_27();
}

void sub_249819AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_19_16(a1);
  HIDEventProtocol.momentum.setter(v1, v2, v3);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_249819AFC(void *a1)
{
  id v1;
  uint64_t SenderID;

  v1 = a1;
  SenderID = IOHIDEventGetSenderID();

  return SenderID;
}

void HIDEventProtocol.sender.getter(uint64_t a1, uint64_t a2)
{
  HIDEventProtocol.__bridgedValue.getter(a1, a2);
  IOHIDEventGetSenderID();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void sub_249819B54(int a1, id a2)
{
  id v2;

  v2 = a2;
  IOHIDEventSetSenderID();

}

void HIDEventProtocol.sender.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_249819C88(a1, a2, a3, (void (*)(void))MEMORY[0x24BDD8340]);
}

void HIDEventProtocol.sender.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_51_7(a1, a2, a3);
  HIDEventProtocol.sender.getter(v4, v5);
  *v3 = v6;
  OUTLINED_FUNCTION_27();
}

void sub_249819BC8(uint64_t *a1)
{
  HIDEventProtocol.sender.setter(*a1, a1[1], a1[2]);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_249819BE8(void *a1)
{
  id v1;
  uint64_t TimeStamp;

  v1 = a1;
  TimeStamp = IOHIDEventGetTimeStamp();

  return TimeStamp;
}

void HIDEventProtocol.time.getter(uint64_t a1, uint64_t a2)
{
  HIDEventProtocol.__bridgedValue.getter(a1, a2);
  IOHIDEventGetTimeStamp();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void sub_249819C40(int a1, id a2)
{
  id v2;

  v2 = a2;
  IOHIDEventSetTimeStamp();

}

void HIDEventProtocol.time.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_249819C88(a1, a2, a3, (void (*)(void))MEMORY[0x24BDD8348]);
}

void sub_249819C88(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  void *v5;
  void *v6;

  OUTLINED_FUNCTION_32_8(a1, a2, a3);
  v6 = v5;
  a4();
  OUTLINED_FUNCTION_37_0(v6);
}

void HIDEventProtocol.time.modify(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_51_7(a1, a2, a3);
  HIDEventProtocol.time.getter(v4, v5);
  *v3 = v6;
  OUTLINED_FUNCTION_27();
}

void sub_249819CEC(uint64_t *a1)
{
  HIDEventProtocol.time.setter(*a1, a1[1], a1[2]);
  OUTLINED_FUNCTION_27();
}

void HIDEventProtocol.append(_:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_249819D94(a1, a2, a3, MEMORY[0x24BDD8148]);
}

void sub_249819D18(_QWORD *a1, id a2, void (*a3)(id, void *, _QWORD))
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;

  v5 = a2;
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  HIDEventProtocol.__bridgedValue.getter(v6, v7);
  v9 = v8;
  a3(v5, v8, 0);

  OUTLINED_FUNCTION_34_10(v9);
}

void HIDEventProtocol.remove(_:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_249819D94(a1, a2, a3, MEMORY[0x24BDD8300]);
}

void sub_249819D94(_QWORD *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, void *, _QWORD))
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;

  OUTLINED_FUNCTION_32_8((uint64_t)a1, a2, a3);
  v7 = v6;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  HIDEventProtocol.__bridgedValue.getter(v8, v9);
  v11 = v10;
  a4(v7, v10, 0);

  OUTLINED_FUNCTION_34_10(v11);
}

void sub_249819E04(int a1, int a2, id a3)
{
  id v3;
  id v4;
  uint64_t v5;

  v3 = a3;
  v4 = (id)IOHIDEventGetEventWithOptions();

  if (v4)
  {
    OUTLINED_FUNCTION_53_4();
    OUTLINED_FUNCTION_59_3(v5, (uint64_t)&protocol witness table for IOHIDEventRef);
  }
  else
  {
    OUTLINED_FUNCTION_36_9();
  }
  OUTLINED_FUNCTION_81();
}

double HIDEventProtocol.first(_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  double result;

  HIDEventProtocol.__bridgedValue.getter(a3, a4);
  v5 = v4;
  v6 = (id)IOHIDEventGetEventWithOptions();

  if (!v6)
    return OUTLINED_FUNCTION_36_9();
  OUTLINED_FUNCTION_53_4();
  OUTLINED_FUNCTION_59_3(v7, (uint64_t)&protocol witness table for IOHIDEventRef);
  return result;
}

void (*sub_249819EF8(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.flags.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_249819F5C(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.absolute.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_249819FC0(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.accelerated.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_24981A024(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.builtin.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_24981A088(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.centerOrigin.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_24981A0EC(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.collection.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_24981A150(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.interpolated.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_24981A1B4(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.pixelUnits.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_24981A218(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.repeat.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_24981A280(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.phase.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_24981A2E4(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.momentum.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_24981A348(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.sender.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void (*sub_24981A3AC(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *)
{
  _QWORD *v6;
  uint64_t v7;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  HIDEventProtocol.time.modify(v6, a2, a3);
  v6[4] = v7;
  return sub_249778590;
}

void HIDEvent.eventType.getter()
{
  OUTLINED_FUNCTION_37_7();
  IOHIDEventGetType();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

id HIDEvent.wrappedValue.getter()
{
  void *v0;

  return v0;
}

void sub_24981A444()
{
  HIDEvent.eventType.getter();
}

void sub_24981A464()
{
  HIDEvent.wrappedValue.getter();
  OUTLINED_FUNCTION_27();
}

void HIDEventProtocol.__bridgedValue.getter(uint64_t a1, uint64_t a2)
{

  OUTLINED_FUNCTION_27();
}

char *sub_24981A4B4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *result;
  unint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char **v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD v17[3];
  unint64_t v18;
  char **v19;
  uint64_t v20;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_249837324();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return (char *)v3;
  v20 = MEMORY[0x24BEE4AF8];
  result = sub_249817E50(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v3 = v20;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)sub_24981B8DC(v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = sub_24981AF98();
      v18 = v8;
      v19 = &protocol witness table for HIDEvent;
      v17[0] = v7;
      v20 = v3;
      v10 = *(_QWORD *)(v3 + 16);
      v9 = *(_QWORD *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_249817E50((char *)(v9 > 1), v10 + 1, 1);
        v11 = v18;
        v12 = v19;
      }
      else
      {
        v11 = v8;
        v12 = &protocol witness table for HIDEvent;
      }
      ++v5;
      v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v11);
      MEMORY[0x24BDAC7A8](v13);
      v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v16 + 16))(v15);
      sub_24981BAB4(v10, (uint64_t)v15, &v20, v11, (uint64_t)v12);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      v3 = v20;
    }
    while (v2 != v5);
    return (char *)v3;
  }
  __break(1u);
  return result;
}

void sub_24981A66C(uint64_t a1@<X1>, uint64_t a2@<X2>, _DWORD *a3@<X8>)
{
  int v4;

  HIDEventProtocol.flags.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_24981A69C(unsigned int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.flags.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_24981A6C8(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  char v4;

  HIDEventProtocol.absolute.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4 & 1;
}

void sub_24981A6FC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.absolute.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_24981A728@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.accelerated.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_24981A75C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.accelerated.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_24981A788@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.builtin.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_24981A7BC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.builtin.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_24981A7E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.centerOrigin.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_24981A81C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.centerOrigin.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_24981A848@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.collection.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_24981A87C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.collection.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_24981A8A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.interpolated.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_24981A8DC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.interpolated.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_24981A908@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = HIDEventProtocol.pixelUnits.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result & 1;
  return result;
}

void sub_24981A93C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.pixelUnits.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_24981A968(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  char v4;

  HIDEventProtocol.repeat.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4 & 1;
}

void sub_24981A99C(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.repeat.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_24981A9C8(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  char v4;

  HIDEventProtocol.phase.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_24981A9F8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.phase.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_24981AA24(uint64_t a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  char v4;

  HIDEventProtocol.momentum.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_24981AA54(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.momentum.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_24981AA80(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  HIDEventProtocol.sender.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_24981AAB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.sender.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void sub_24981AADC(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  HIDEventProtocol.time.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v4;
}

void sub_24981AB0C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDEventProtocol.time.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void HIDEventProtocol.first(where:)(uint64_t (*a1)(uint64_t *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_0;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49[2];
  uint64_t v50[3];
  uint64_t v51;
  uint64_t v52;

  v6 = v5;
  v51 = a3;
  v52 = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v50);
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16);
  v13(boxed_opaque_existential_0, v5, a3);
  v14 = a1(v50);
  v15 = v14;
  OUTLINED_FUNCTION_64_5(v14, v16, v17, v18, v19, v20, v21, v22, v45, v47, *((uint64_t *)&v47 + 1));
  if ((v15 & 1) != 0)
  {
    a5[3] = a3;
    a5[4] = a4;
    v23 = __swift_allocate_boxed_opaque_existential_0(a5);
    v13(v23, v6, a3);
  }
  else
  {
    v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      v26 = v24 + 32;
      while (1)
      {
        sub_24977AEF8(v26, (uint64_t)v50);
        v27 = v51;
        v28 = v52;
        __swift_project_boxed_opaque_existential_1(v50, v51);
        HIDEventProtocol.first(where:)(&v47, a1, a2, v27, v28);
        if (v48)
          break;
        v29 = sub_24981B5A4((uint64_t)&v47);
        OUTLINED_FUNCTION_64_5(v29, v30, v31, v32, v33, v34, v35, v36, v46, v47, *((uint64_t *)&v47 + 1));
        v26 += 40;
        if (!--v25)
          goto LABEL_7;
      }
      swift_bridgeObjectRelease();
      sub_24981B5E4(&v47, (uint64_t)v49);
      v37 = sub_24981B5E4(v49, (uint64_t)a5);
      OUTLINED_FUNCTION_64_5(v37, v38, v39, v40, v41, v42, v43, v44, v46, v47, *((uint64_t *)&v47 + 1));
    }
    else
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_36_9();
    }
  }
}

uint64_t HIDEventProtocol.first<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];
  __int128 v10;
  uint64_t v11;
  _BYTE v12[40];

  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  HIDEventProtocol.first(where:)((uint64_t (*)(uint64_t *))sub_24981B5FC, (uint64_t)v9, a1, a3, (uint64_t *)&v10);
  if (v11)
  {
    sub_24981B5E4(&v10, (uint64_t)v12);
    sub_24977AEF8((uint64_t)v12, (uint64_t)&v10);
    OUTLINED_FUNCTION_47_6((uint64_t)&v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
    v6 = a5;
    v7 = 0;
  }
  else
  {
    sub_24981B5A4((uint64_t)&v10);
    v6 = a5;
    v7 = 1;
  }
  return OUTLINED_FUNCTION_44_6(v6, v7);
}

BOOL sub_24981AD38(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;

  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  return (_DWORD)v7 == (*(unsigned int (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
}

uint64_t HIDEventProtocol.first<A>(_:where:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[8];
  __int128 v12;
  uint64_t v13;
  _BYTE v14[40];

  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a5;
  v11[5] = a6;
  v11[6] = a1;
  v11[7] = a2;
  HIDEventProtocol.first(where:)(sub_24981B608, (uint64_t)v11, a3, a5, (uint64_t *)&v12);
  if (v13)
  {
    sub_24981B5E4(&v12, (uint64_t)v14);
    sub_24977AEF8((uint64_t)v14, (uint64_t)&v12);
    OUTLINED_FUNCTION_47_6((uint64_t)&v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
    v8 = a7;
    v9 = 0;
  }
  else
  {
    sub_24981B5A4((uint64_t)&v12);
    v8 = a7;
    v9 = 1;
  }
  return OUTLINED_FUNCTION_44_6(v8, v9);
}

uint64_t sub_24981AE58(_QWORD *a1, uint64_t (*a2)(_BYTE *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  _BYTE v16[40];

  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  LODWORD(v11) = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 16))(a5, a7);
  sub_24977AEF8((uint64_t)a1, (uint64_t)v16);
  if ((_DWORD)v11 == v13)
    v14 = a2(v16);
  else
    v14 = 0;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  return v14 & 1;
}

uint64_t IOHIDEventRef.eventType.getter()
{
  return IOHIDEventGetType();
}

id IOHIDEventRef.wrappedValue.getter()
{
  return OUTLINED_FUNCTION_58_5();
}

uint64_t sub_24981AF40()
{
  return IOHIDEventRef.eventType.getter();
}

void sub_24981AF60()
{
  IOHIDEventRef.wrappedValue.getter();
  OUTLINED_FUNCTION_27();
}

id IOHIDEventRef.__bridgedValue.getter()
{
  return OUTLINED_FUNCTION_58_5();
}

unint64_t sub_24981AF98()
{
  unint64_t result;

  result = qword_257882480;
  if (!qword_257882480)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257882480);
  }
  return result;
}

void UInt32.stringValue.getter()
{
  id v0;

  v0 = (id)IOHIDEventTypeGetName();
  _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();

  OUTLINED_FUNCTION_81();
}

void sub_24981B014(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_249818CF4(a1);
  OUTLINED_FUNCTION_27();
}

void sub_24981B034()
{
  void **v0;

  sub_249818DA0(*v0);
}

uint64_t sub_24981B04C()
{
  void **v0;

  return sub_249818EC4(*v0);
}

void sub_24981B054(int a1)
{
  id *v1;

  sub_249818F1C(a1, *v1);
}

void sub_24981B05C(void **a1)
{
  void *v1;

  OUTLINED_FUNCTION_43_7(*a1);
  OUTLINED_FUNCTION_57_6();
  OUTLINED_FUNCTION_0_1(v1);
}

BOOL sub_24981B088()
{
  void **v0;

  return sub_249818FD0(*v0);
}

void sub_24981B090(int a1)
{
  void **v1;

  sub_249819010(a1, *v1);
}

void sub_24981B0A8(uint64_t a1)
{
  int v1;
  void *v2;

  v1 = OUTLINED_FUNCTION_42_5(a1);
  sub_249819010(v1, v2);
}

uint64_t sub_24981B0C0()
{
  void **v0;

  return sub_2498190C4(*v0);
}

void sub_24981B0C8(int a1)
{
  void **v1;

  sub_24981910C(a1, *v1);
}

void sub_24981B0E0(uint64_t a1)
{
  int v1;
  void *v2;

  v1 = OUTLINED_FUNCTION_42_5(a1);
  sub_24981910C(v1, v2);
}

uint64_t sub_24981B0F8()
{
  void **v0;

  return sub_2498191CC(*v0);
}

void sub_24981B100(int a1)
{
  void **v1;

  sub_249819214(a1, *v1);
}

void sub_24981B118(uint64_t a1)
{
  int v1;
  void *v2;

  v1 = OUTLINED_FUNCTION_42_5(a1);
  sub_249819214(v1, v2);
}

uint64_t sub_24981B130()
{
  void **v0;

  return sub_2498192D4(*v0);
}

void sub_24981B138(int a1)
{
  void **v1;

  sub_24981931C(a1, *v1);
}

void sub_24981B150(uint64_t a1)
{
  int v1;
  void *v2;

  v1 = OUTLINED_FUNCTION_42_5(a1);
  sub_24981931C(v1, v2);
}

uint64_t sub_24981B168()
{
  void **v0;

  return sub_24981946C(*v0);
}

void sub_24981B170(int a1)
{
  void **v1;

  sub_2498194B4(a1, *v1);
}

void sub_24981B188(uint64_t a1)
{
  int v1;
  void *v2;

  v1 = OUTLINED_FUNCTION_42_5(a1);
  sub_2498194B4(v1, v2);
}

uint64_t sub_24981B1A0()
{
  void **v0;

  return sub_249819574(*v0);
}

void sub_24981B1A8(int a1)
{
  void **v1;

  sub_2498195BC(a1, *v1);
}

void sub_24981B1C0(uint64_t a1)
{
  int v1;
  void *v2;

  v1 = OUTLINED_FUNCTION_42_5(a1);
  sub_2498195BC(v1, v2);
}

BOOL sub_24981B1D8()
{
  void **v0;

  return sub_24981967C(*v0);
}

void sub_24981B1E0(char a1)
{
  id *v1;

  sub_2498196F0(a1, *v1);
}

void sub_24981B1E8()
{
  void **v0;

  sub_249819844(*v0);
}

void sub_24981B200()
{
  void **v0;

  sub_2498198EC(*v0);
}

void sub_24981B218(int a1)
{
  id *v1;

  sub_24981993C(a1, *v1);
}

uint64_t sub_24981B220()
{
  void **v0;

  return sub_2498199F0(*v0);
}

void sub_24981B228(int a1)
{
  id *v1;

  sub_249819A48(a1, *v1);
}

void sub_24981B230(void **a1)
{
  id v1;

  v1 = OUTLINED_FUNCTION_43_7(*a1);
  IOHIDEventSetScrollMomentum();
  OUTLINED_FUNCTION_0_1(v1);
}

uint64_t sub_24981B264()
{
  void **v0;

  return sub_249819AFC(*v0);
}

void sub_24981B26C(int a1)
{
  id *v1;

  sub_249819B54(a1, *v1);
}

uint64_t sub_24981B274()
{
  void **v0;

  return sub_249819BE8(*v0);
}

void sub_24981B27C(int a1)
{
  id *v1;

  sub_249819C40(a1, *v1);
}

void sub_24981B284(uint64_t a1)
{
  id v1;

  v1 = OUTLINED_FUNCTION_43_7(*(void **)(a1 + 8));
  IOHIDEventSetTimeStamp();
  OUTLINED_FUNCTION_0_1(v1);
}

void sub_24981B2B4(_QWORD *a1)
{
  id *v1;

  sub_249819D18(a1, *v1, MEMORY[0x24BDD8148]);
}

void sub_24981B2D4(_QWORD *a1)
{
  id *v1;

  sub_249819D18(a1, *v1, MEMORY[0x24BDD8300]);
}

void sub_24981B2F4(int a1, int a2)
{
  id *v2;

  sub_249819E04(a1, a2, *v2);
}

void sub_24981B30C(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = sub_249818B94(a1);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24981B32C()
{
  return sub_249818E68();
}

uint64_t sub_24981B334()
{
  return sub_249818E9C();
}

void sub_24981B33C(void **a1)
{
  uint64_t v1;
  int v2;

  OUTLINED_FUNCTION_0_28(a1);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  *(_DWORD *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_81();
}

void sub_24981B370(void **a1)
{
  OUTLINED_FUNCTION_0_28(a1);
  OUTLINED_FUNCTION_22_14();
  OUTLINED_FUNCTION_2_28();
  OUTLINED_FUNCTION_13_15();
  OUTLINED_FUNCTION_81();
}

void sub_24981B3A4(void **a1)
{
  OUTLINED_FUNCTION_0_28(a1);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_81();
}

void sub_24981B3D8(void **a1)
{
  OUTLINED_FUNCTION_0_28(a1);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  OUTLINED_FUNCTION_26_12();
  OUTLINED_FUNCTION_81();
}

void sub_24981B40C(void **a1)
{
  OUTLINED_FUNCTION_0_28(a1);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  OUTLINED_FUNCTION_25_9();
  OUTLINED_FUNCTION_81();
}

void sub_24981B440(void **a1)
{
  OUTLINED_FUNCTION_0_28(a1);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  OUTLINED_FUNCTION_30_7();
  OUTLINED_FUNCTION_81();
}

void sub_24981B474(void **a1)
{
  OUTLINED_FUNCTION_0_28(a1);
  OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_2_28();
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_81();
}

void sub_24981B4A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = OUTLINED_FUNCTION_50_1();
  v2 = OUTLINED_FUNCTION_17_14((uint64_t)v1);
  *(_QWORD *)(v0 + 32) = sub_249819758(v2, v3);
  OUTLINED_FUNCTION_81();
}

void sub_24981B4D8(void **a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_6_16(a1);
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_27();
}

void sub_24981B504(void **a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_0_28(a1);
  OUTLINED_FUNCTION_21_13();
  OUTLINED_FUNCTION_2_28();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_81();
}

void sub_24981B538(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_26(a1);
  OUTLINED_FUNCTION_23_9();
  OUTLINED_FUNCTION_2_28();
  *v1 = v2;
  OUTLINED_FUNCTION_81();
}

void sub_24981B570(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_26(a1);
  OUTLINED_FUNCTION_24_13();
  OUTLINED_FUNCTION_2_28();
  *v1 = v2;
  OUTLINED_FUNCTION_81();
}

uint64_t sub_24981B5A4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882488);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24981B5E4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

BOOL sub_24981B5FC(_QWORD *a1)
{
  uint64_t *v1;

  return sub_24981AD38(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24981B608(_QWORD *a1)
{
  uint64_t v1;

  return sub_24981AE58(a1, *(uint64_t (**)(_BYTE *))(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t dispatch thunk of HIDEventProtocol.children.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HIDEventProtocol.eventType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HIDEventProtocol.flags.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HIDEventProtocol.flags.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of HIDEventProtocol.flags.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of HIDEventProtocol.absolute.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of HIDEventProtocol.absolute.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of HIDEventProtocol.absolute.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of HIDEventProtocol.accelerated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HIDEventProtocol.accelerated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of HIDEventProtocol.accelerated.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of HIDEventProtocol.builtin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of HIDEventProtocol.builtin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of HIDEventProtocol.builtin.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of HIDEventProtocol.centerOrigin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of HIDEventProtocol.centerOrigin.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of HIDEventProtocol.centerOrigin.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of HIDEventProtocol.collection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of HIDEventProtocol.collection.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of HIDEventProtocol.collection.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of HIDEventProtocol.interpolated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of HIDEventProtocol.interpolated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of HIDEventProtocol.interpolated.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of HIDEventProtocol.pixelUnits.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of HIDEventProtocol.pixelUnits.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of HIDEventProtocol.pixelUnits.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of HIDEventProtocol.repeat.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of HIDEventProtocol.repeat.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of HIDEventProtocol.repeat.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of HIDEventProtocol.parent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of HIDEventProtocol.phase.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of HIDEventProtocol.phase.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 264))();
}

uint64_t dispatch thunk of HIDEventProtocol.phase.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t dispatch thunk of HIDEventProtocol.momentum.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of HIDEventProtocol.momentum.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

uint64_t dispatch thunk of HIDEventProtocol.momentum.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 296))();
}

uint64_t dispatch thunk of HIDEventProtocol.sender.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of HIDEventProtocol.sender.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 312))();
}

uint64_t dispatch thunk of HIDEventProtocol.sender.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of HIDEventProtocol.time.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of HIDEventProtocol.time.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

uint64_t dispatch thunk of HIDEventProtocol.time.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t dispatch thunk of HIDEventProtocol.wrappedValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of HIDEventProtocol.append(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 360))();
}

uint64_t dispatch thunk of HIDEventProtocol.remove(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 368))();
}

uint64_t dispatch thunk of HIDEventProtocol.first(_:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 376))();
}

uint64_t dispatch thunk of _HIDEventImpl.init(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of _HIDEventImpl.init(wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of _HIDEventImpl.init(_wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

void sub_24981B878(void **a1)
{
  id v1;

  v1 = OUTLINED_FUNCTION_43_7(*a1);
  IOHIDEventSetPhase();
  OUTLINED_FUNCTION_0_1(v1);
}

void sub_24981B8AC(uint64_t a1)
{
  id v1;

  v1 = OUTLINED_FUNCTION_43_7(*(void **)(a1 + 8));
  IOHIDEventSetSenderID();
  OUTLINED_FUNCTION_0_1(v1);
}

uint64_t sub_24981B8DC(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t result;

  sub_24981AF98();
  if (a2 >> 62)
  {
    v4 = sub_249837330();
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
      return v4;
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      objc_opt_self();
      if (!swift_dynamicCastObjCClass())
        goto LABEL_10;
      return v4;
    }
    __break(1u);
  }
LABEL_10:
  sub_249837168();
  sub_249836DB4();
  sub_249837768();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  sub_249836DB4();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_249837768();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  result = sub_249837318();
  __break(1u);
  return result;
}

uint64_t sub_24981BAB4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_24981B5E4(&v12, v10 + 40 * a1 + 32);
}

id OUTLINED_FUNCTION_0_28(void **a1)
{
  void **v1;
  void *v3;

  v3 = *v1;
  *a1 = *v1;
  return v3;
}

void OUTLINED_FUNCTION_2_28()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_3_24()
{
  return IOHIDEventGetEventFlags();
}

id OUTLINED_FUNCTION_4_26(uint64_t a1)
{
  void **v1;
  void *v3;

  v3 = *v1;
  *(_QWORD *)(a1 + 8) = *v1;
  return v3;
}

void OUTLINED_FUNCTION_6_16(void **a1)
{
  void **v1;
  void *v3;

  v3 = *v1;
  *a1 = *v1;
  sub_2498198EC(v3);
}

uint64_t OUTLINED_FUNCTION_8_24(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  a1[1] = a3;
  a1[2] = v3;
  *a1 = a2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
}

void OUTLINED_FUNCTION_9_19(uint64_t a1, uint64_t a2, uint64_t a3)
{
  HIDEventProtocol.flags.getter(a2, a3);
}

void OUTLINED_FUNCTION_10_13(uint64_t a1, uint64_t a2, uint64_t a3)
{
  HIDEventProtocol.flags.setter(a1, a2, a3);
}

void OUTLINED_FUNCTION_13_15()
{
  uint64_t v0;
  int v1;

  *(_BYTE *)(v0 + 8) = v1 != 0;
}

__n128 OUTLINED_FUNCTION_15_13(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_13()
{
  return 16;
}

uint64_t OUTLINED_FUNCTION_17_14(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_19_16(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t OUTLINED_FUNCTION_20_15(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  a1[1] = a3;
  a1[2] = v3;
  *a1 = a2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_21_13()
{
  return IOHIDEventGetScrollMomentum();
}

uint64_t OUTLINED_FUNCTION_22_14()
{
  return IOHIDEventIsAbsolute();
}

uint64_t OUTLINED_FUNCTION_23_9()
{
  return IOHIDEventGetSenderID();
}

uint64_t OUTLINED_FUNCTION_24_13()
{
  return IOHIDEventGetTimeStamp();
}

void OUTLINED_FUNCTION_25_9()
{
  uint64_t v0;
  char v1;

  *(_BYTE *)(v0 + 8) = (v1 & 8) != 0;
}

void OUTLINED_FUNCTION_26_12()
{
  uint64_t v0;
  char v1;

  *(_BYTE *)(v0 + 8) = (v1 & 0x10) != 0;
}

void OUTLINED_FUNCTION_27_7()
{
  uint64_t v0;
  int v1;

  *(_BYTE *)(v0 + 8) = BYTE2(v1) & 1;
}

id OUTLINED_FUNCTION_28_10(int a1, id a2)
{
  return a2;
}

void OUTLINED_FUNCTION_29_7()
{
  uint64_t v0;
  char v1;

  *(_BYTE *)(v0 + 8) = (v1 & 4) != 0;
}

void OUTLINED_FUNCTION_30_7()
{
  uint64_t v0;
  char v1;

  *(_BYTE *)(v0 + 8) = (v1 & 0x20) != 0;
}

void OUTLINED_FUNCTION_32_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  HIDEventProtocol.__bridgedValue.getter(a2, a3);
}

uint64_t OUTLINED_FUNCTION_33_11@<X0>(int a1@<W8>)
{
  unsigned int v1;

  return a1 | v1;
}

void OUTLINED_FUNCTION_34_10(id a1)
{

}

uint64_t OUTLINED_FUNCTION_35_7(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0(a1);
}

double OUTLINED_FUNCTION_36_9()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 32) = 0;
  result = 0.0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

id OUTLINED_FUNCTION_37_7()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_40_5()
{
  return IOHIDEventSetEventFlags();
}

uint64_t OUTLINED_FUNCTION_41_6(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t OUTLINED_FUNCTION_42_5(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

id OUTLINED_FUNCTION_43_7@<X0>(void *a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_44_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 352))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_46_5(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t OUTLINED_FUNCTION_47_6(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

void OUTLINED_FUNCTION_49_6(id a1)
{

}

uint64_t OUTLINED_FUNCTION_51_7(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  return a2;
}

void OUTLINED_FUNCTION_53_4()
{
  type metadata accessor for IOHIDEvent(0);
}

uint64_t OUTLINED_FUNCTION_54_5(unsigned int a1, int a2)
{
  return a2 ^ a1;
}

uint64_t OUTLINED_FUNCTION_55_6()
{
  return swift_bridgeObjectRelease();
}

_QWORD *OUTLINED_FUNCTION_56_6(_QWORD *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, a1[3]);
}

uint64_t OUTLINED_FUNCTION_57_6()
{
  return IOHIDEventSetEventFlags();
}

id OUTLINED_FUNCTION_58_5()
{
  void *v0;

  return __bridge_IOHIDEvent(v0);
}

uint64_t OUTLINED_FUNCTION_59_3@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v2[3] = result;
  v2[4] = a2;
  *v2 = v3;
  return result;
}

void OUTLINED_FUNCTION_60_4(char a1@<W8>)
{
  _BYTE *v1;

  *v1 = a1;
}

void OUTLINED_FUNCTION_61_5(int a1@<W8>)
{
  _DWORD *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_63_5()
{
  return sub_249836EA4();
}

uint64_t OUTLINED_FUNCTION_64_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)va);
}

void sub_24981BE88(unsigned int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unsigned int v19;
  BOOL v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v8 = HIWORD(a1);
  HIDWORD(v45) = (unsigned __int16)a1;
  v9 = v8 - (unsigned __int16)a1;
  if (v8 < (unsigned __int16)a1)
    v10 = -(uint64_t)((unsigned __int16)a1 - HIWORD(a1));
  else
    v10 = v8 - (unsigned __int16)a1;
  if (v10)
  {
    v90 = MEMORY[0x24BEE4AF8];
    sub_249817E6C(0, v10 & ~(v10 >> 63), 0);
    if ((v10 & 0x8000000000000000) == 0)
    {
      v50 = v4;
      v54 = v90;
      v43 = a2;
      swift_beginAccess();
      swift_beginAccess();
      swift_beginAccess();
      swift_beginAccess();
      v52 = (uint64_t *)(a2 + 16);
      swift_beginAccess();
      v11 = HIDWORD(v45);
      v39 = a4;
      v41 = a3;
      while (v10)
      {
        v12 = *v52 + 32;
        if (__OFADD__(*v52, 32))
          goto LABEL_23;
        if (HIDReport.count.getter(a3, a4) < v12)
          goto LABEL_20;
        v18 = v52;
        v19 = sub_249812F5C(*v52, a3, a4, v13, v14, v15, v16, v17, v37, v39, v41, v43, v45, v47, v48, v50, (uint64_t)v52, v54, v56,
                v58,
                v60,
                v62,
                v64,
                v66,
                v68,
                v70,
                v72,
                v74,
                v76,
                v78,
                v80,
                v82,
                v84,
                v86,
                v88,
                v90);
        *v18 = v12;
        v20 = __OFADD__(v12, 16);
        v21 = v12 + 16;
        if (v20)
          goto LABEL_24;
        v22 = v19;
        if (HIDReport.count.getter(a3, a4) < v21)
        {
LABEL_20:
          sub_24981CB4C();
          swift_allocError();
          swift_willThrow();
LABEL_21:
          swift_release();
          swift_release();
          sub_249748C10(a3, a4);
          return;
        }
        v49 = v9;
        v28 = v8;
        v29 = v55;
        v30 = v44;
        v31 = bswap32(sub_2498129B8(*(_QWORD *)(v44 + 16), a3, a4, v23, v24, v25, v26, v27, v38, v40, v42, v44, v46, v10, v49, v51, v53, v55,
                  v57,
                  v59,
                  v61,
                  v63,
                  v65,
                  v67,
                  v69,
                  v71,
                  v73,
                  v75,
                  v77,
                  v79,
                  v81,
                  v83,
                  v85,
                  v87,
                  v89,
                  v91));
        *(_QWORD *)(v30 + 16) = v21;
        swift_retain();
        sub_249748BCC(a3, a4);
        sub_24981C190(v31 & 0xFFFF0000, v30, a3, a4);
        if (v50)
          goto LABEL_21;
        v33 = v32;
        v90 = v29;
        v35 = *(_QWORD *)(v29 + 16);
        v34 = *(_QWORD *)(v29 + 24);
        if (v35 >= v34 >> 1)
        {
          sub_249817E6C(v34 > 1, v35 + 1, 1);
          v54 = v29;
        }
        *(_QWORD *)(v54 + 16) = v35 + 1;
        v36 = v54 + 16 * v35;
        *(double *)(v36 + 32) = (double)(int)bswap32(v22) * 0.0000152587891;
        *(_QWORD *)(v36 + 40) = v33;
        if (v28 < HIDWORD(v45))
          goto LABEL_25;
        v8 = v28;
        if (v11 >= v28)
          goto LABEL_26;
        ++v11;
        v10 = v47 - 1;
        v9 = v48 - 1;
        a4 = v39;
        a3 = v41;
        if (v48 == 1)
          goto LABEL_18;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_release();
    sub_249748C10(a3, a4);
  }
}

void sub_24981C190(unsigned int a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unsigned int v22;
  BOOL v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unsigned int v32;
  unint64_t v33;
  unint64_t v34;
  int64x2_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  float64x2_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v8 = HIWORD(a1);
  HIDWORD(v49) = (unsigned __int16)a1;
  v9 = v8 - (unsigned __int16)a1;
  if (v8 < (unsigned __int16)a1)
    v10 = -(uint64_t)((unsigned __int16)a1 - HIWORD(a1));
  else
    v10 = v8 - (unsigned __int16)a1;
  if (v10)
  {
    v90 = MEMORY[0x24BEE4AF8];
    sub_249817EA0(0, v10 & ~(v10 >> 63), 0);
    if ((v10 & 0x8000000000000000) == 0)
    {
      v36 = v4;
      v38 = a2;
      v11 = v90;
      swift_beginAccess();
      swift_beginAccess();
      swift_beginAccess();
      swift_beginAccess();
      v54 = (uint64_t *)(a2 + 16);
      swift_beginAccess();
      v44 = (float64x2_t)vdupq_n_s64(0x3EF0000000000000uLL);
      v12 = HIDWORD(v49);
      v40 = a3;
      v42 = a4;
      while (v10)
      {
        v13 = *v54 + 32;
        if (__OFADD__(*v54, 32))
          goto LABEL_21;
        v14 = v11;
        v51 = v9;
        v15 = v8;
        if (HIDReport.count.getter(a3, a4) < v13)
          goto LABEL_18;
        v21 = v54;
        v22 = sub_249812F5C(*v54, a3, a4, v16, v17, v18, v19, v20, v36, v38, v40, v42, *(uint64_t *)&v44.f64[0], *(uint64_t *)&v44.f64[1], v47, v49, v51, (uint64_t)v54, v56,
                v58,
                v60,
                v62,
                v64,
                v66,
                v68,
                v70,
                v72,
                v74,
                v76,
                v78,
                v80,
                v82,
                v84,
                v86,
                v88,
                v90);
        *v21 = v13;
        v23 = __OFADD__(v13, 32);
        v24 = v13 + 32;
        if (v23)
          goto LABEL_22;
        v25 = v22;
        if (HIDReport.count.getter(a3, a4) < v24)
        {
LABEL_18:
          sub_24981CB4C();
          swift_allocError();
          swift_willThrow();
          swift_release();
          swift_release();
          sub_249748C10(a3, a4);
          return;
        }
        v31 = v55;
        v32 = sub_249812F5C(*v55, a3, a4, v26, v27, v28, v29, v30, v37, v39, v41, v43, v45, v46, v48, v50, v52, (uint64_t)v55, v57,
                v59,
                v61,
                v63,
                v65,
                v67,
                v69,
                v71,
                v73,
                v75,
                v77,
                v79,
                v81,
                v83,
                v85,
                v87,
                v89,
                v91);
        *v31 = v24;
        v11 = v14;
        v90 = v14;
        v34 = *(_QWORD *)(v14 + 16);
        v33 = *(_QWORD *)(v14 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_249817EA0(v33 > 1, v34 + 1, 1);
          v11 = v14;
        }
        v35.i64[0] = (int)bswap32(v25);
        v35.i64[1] = (int)bswap32(v32);
        *(_QWORD *)(v11 + 16) = v34 + 1;
        *(float64x2_t *)(v11 + 16 * v34 + 32) = vmulq_f64(vcvtq_f64_s64(v35), v44);
        if (v15 < HIDWORD(v49))
          goto LABEL_23;
        v8 = v15;
        if (v12 >= v15)
          goto LABEL_24;
        ++v12;
        --v10;
        v9 = v53 - 1;
        a3 = v40;
        a4 = v42;
        if (v53 == 1)
          goto LABEL_19;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    swift_release();
    sub_249748C10(a3, a4);
  }
}

uint64_t (*HIDAccelerationPoint.x.modify())(void)
{
  return nullsub_1;
}

double HIDAccelerationPoint.y.getter(double a1, double a2)
{
  return a2;
}

void HIDAccelerationPoint.y.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*HIDAccelerationPoint.y.modify())(void)
{
  return nullsub_1;
}

uint64_t (*HIDAccelerationSegment.m.modify())(void)
{
  return nullsub_1;
}

double HIDAccelerationSegment.b.getter(double a1, double a2)
{
  return a2;
}

void HIDAccelerationSegment.b.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*HIDAccelerationSegment.b.modify())(void)
{
  return nullsub_1;
}

double HIDAccelerationSegment.x.getter(double a1, double a2, double a3)
{
  return a3;
}

void HIDAccelerationSegment.x.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*HIDAccelerationSegment.x.modify())(void)
{
  return nullsub_1;
}

uint64_t (*HIDAccelerationTableEntry.accel.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDAccelerationTableEntry.points.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*HIDAccelerationTableEntry.points.modify())(void)
{
  return nullsub_1;
}

uint64_t (*HIDAccelerationTable.scale.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDAccelerationTable.signature.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*HIDAccelerationTable.signature.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDAccelerationTable.entry.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HIDAccelerationTable.entry.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*HIDAccelerationTable.entry.modify())(void)
{
  return nullsub_1;
}

uint64_t static HIDAccelerationTable.appleDefaultAccelerationTableSignature.getter()
{
  return 1077030960;
}

uint64_t static HIDAccelerationTable.appleMultitouchAccelerationTableSignature.getter()
{
  return 1431519786;
}

uint64_t HIDAccelerationTable.init(data:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t result;
  unsigned int v9;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  v5 = ((uint64_t (*)(void))sub_24981C704)();
  v6 = sub_24981C704(v4, a1, a2);
  if (v6 == 1077030960 || v6 == 1431519786)
  {
    v9 = sub_24981C7F4(v4, a1, a2) << 16;
    swift_retain();
    sub_24981BE88(v9, v4, a1, a2);
    OUTLINED_FUNCTION_12_1();
    *(double *)&result = (double)v5 * 0.0000152587891;
  }
  else
  {
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_2_29();
    *(double *)&result = 0.0;
  }
  return result;
}

#error "24981C7B0: call analysis failed (funcsize=59)"

#error "24981C8A0: call analysis failed (funcsize=60)"

uint64_t sub_24981C8E8()
{
  return swift_deallocObject();
}

void type metadata accessor for HIDAccelerationPoint()
{
  OUTLINED_FUNCTION_29_4();
}

uint64_t getEnumTagSinglePayload for HIDAccelerationSegment(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HIDAccelerationSegment(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for HIDAccelerationSegment()
{
  OUTLINED_FUNCTION_29_4();
}

_QWORD *assignWithCopy for HIDAccelerationTableEntry(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for HIDAccelerationTableEntry(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for HIDAccelerationTableEntry()
{
  OUTLINED_FUNCTION_29_4();
}

uint64_t destroy for HIDAccelerationTable()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s8HIDUtils20HIDAccelerationTableVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HIDAccelerationTable(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HIDAccelerationTable(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HIDAccelerationTable(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HIDAccelerationTable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for HIDAccelerationTable()
{
  OUTLINED_FUNCTION_29_4();
}

unint64_t sub_24981CB4C()
{
  unint64_t result;

  result = qword_257882490;
  if (!qword_257882490)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983D714, &type metadata for HIDAccelerationTable.IndexOutOfBounds);
    atomic_store(result, (unint64_t *)&qword_257882490);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDAccelerationTable.IndexOutOfBounds()
{
  return &type metadata for HIDAccelerationTable.IndexOutOfBounds;
}

void OUTLINED_FUNCTION_1_26(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_2_29()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748C10(v1, v0);
}

unint64_t HIDUniversalControlMatchedServiceKey.getter()
{
  return OUTLINED_FUNCTION_166_0();
}

unint64_t HIDUniversalControlVirtualServiceKey.getter()
{
  return OUTLINED_FUNCTION_166_0();
}

unint64_t HIDUniversalControlBuiltInKey.getter()
{
  return 0xD000000000000017;
}

uint64_t HIDServiceProperties.serviceID.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDServiceProperties.serviceID.modify())(void)
{
  return nullsub_1;
}

void HIDServiceProperties.dictionaryRepresentation.getter(uint64_t a1, void *a2)
{
  id v2;
  char *v3;

  v2 = a2;
  v3 = sub_24981CC4C(v2);

  sub_24981D30C((uint64_t)v3, &qword_257882640, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249829218);
  OUTLINED_FUNCTION_12_2();
}

char *sub_24981CC4C(void *a1)
{
  id v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD v17[2];
  _QWORD v18[7];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 *v23;

  v1 = a1;
  v2 = sub_249836F70();

  v22 = v2;
  sub_249836F88();
  sub_24982A300((uint64_t)&unk_257882650);
  sub_2498370C0();
  if (*((_QWORD *)&v19 + 1))
  {
    v3 = (char *)MEMORY[0x24BEE4AF8];
    v23 = &v15;
    do
    {
      v17[0] = *(_OWORD *)&v18[5];
      v17[1] = v19;
      *(_OWORD *)v18 = v20;
      *(_OWORD *)&v18[2] = v21;
      sub_24974BC28((uint64_t)v17, (uint64_t)&v11);
      sub_24974BC28((uint64_t)v18, (uint64_t)v13);
      if (swift_dynamicCast())
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
        v14 = v10;
        sub_24974BC28((uint64_t)v17, (uint64_t)&v11);
        sub_24974BC28((uint64_t)v18, (uint64_t)v13);
        sub_24974BBA8(v13, v23);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v11);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
        v14 = 0u;
        v15 = 0u;
        v16 = 0u;
      }
      sub_2497D5E68((uint64_t)v17, &qword_257882658);
      if (*((_QWORD *)&v14 + 1))
      {
        v11 = v14;
        v12 = v15;
        v13[0] = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_24982804C(0, *((_QWORD *)v3 + 2) + 1, 1, (uint64_t)v3);
        v5 = *((_QWORD *)v3 + 2);
        v4 = *((_QWORD *)v3 + 3);
        if (v5 >= v4 >> 1)
          v3 = sub_24982804C((char *)(v4 > 1), v5 + 1, 1, (uint64_t)v3);
        *((_QWORD *)v3 + 2) = v5 + 1;
        v6 = &v3[48 * v5];
        v7 = v11;
        v8 = v13[0];
        *((_OWORD *)v6 + 3) = v12;
        *((_OWORD *)v6 + 4) = v8;
        *((_OWORD *)v6 + 2) = v7;
      }
      else
      {
        sub_2497D5E68((uint64_t)&v14, &qword_257882660);
      }
      sub_2498370C0();
    }
    while (*((_QWORD *)&v19 + 1));
  }
  else
  {
    v3 = (char *)MEMORY[0x24BEE4AF8];
  }
  swift_release();
  return v3;
}

char *sub_24981CEAC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  _QWORD v11[18];
  _BYTE v12[144];
  uint64_t v13;
  _OWORD v14[2];
  __int128 v15;
  uint64_t v16;
  HIDUtils::HIDServiceProperties::HIDAccelCurve_optional v17;
  _BYTE v18[160];
  NSDictionary v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_48_4();
  v20 = v0;
  v21 = v1;
  v3 = v2;
  v4 = sub_2498368A4();
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_40_2();
  v5 = v3;
  sub_24983703C();

  sub_24982A300((uint64_t)&qword_25787FDE8);
  OUTLINED_FUNCTION_163_0();
  if (v16)
  {
    v6 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_24974BBA8(&v15, v14);
      sub_24974BC28((uint64_t)v14, (uint64_t)&v13);
      sub_249783D14(0, &qword_2578805E0);
      if (swift_dynamicCast())
      {
        HIDServiceProperties.HIDAccelCurve.init(dictionaryRepresentation:)(&v17, v19);
        OUTLINED_FUNCTION_209((uint64_t)&v17, (uint64_t)v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
        OUTLINED_FUNCTION_209((uint64_t)&v17, (uint64_t)v18);
        if (sub_24982A2B8((uint64_t)v18) != 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v6 = OUTLINED_FUNCTION_207(0, *((_QWORD *)v6 + 2) + 1);
          v8 = *((_QWORD *)v6 + 2);
          v7 = *((_QWORD *)v6 + 3);
          if (v8 >= v7 >> 1)
            v6 = OUTLINED_FUNCTION_207((char *)(v7 > 1), v8 + 1);
          OUTLINED_FUNCTION_209((uint64_t)v12, (uint64_t)v11);
          *((_QWORD *)v6 + 2) = v8 + 1;
          memcpy(&v6[144 * v8 + 32], v11, 0x89uLL);
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
      }
      OUTLINED_FUNCTION_163_0();
    }
    while (v16);
  }
  else
  {
    v6 = (char *)MEMORY[0x24BEE4AF8];
  }
  OUTLINED_FUNCTION_32_6(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
  return v6;
}

char *sub_24981D0BC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  char *v6;
  __int16 v7;
  __int16 v8;
  char v9;
  __int16 v10;
  __int16 v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v16;
  _BYTE v17[32];
  _OWORD v18[2];
  __int128 v19;
  uint64_t v20;
  void *v21;

  v2 = sub_2498368A4();
  v16 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = a1;
  sub_24983703C();

  sub_24982A300((uint64_t)&qword_25787FDE8);
  sub_2498370C0();
  if (v20)
  {
    v6 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      sub_24974BBA8(&v19, v18);
      sub_24974BC28((uint64_t)v18, (uint64_t)v17);
      sub_249783D14(0, &qword_2578805E0);
      if (!swift_dynamicCast() || (v7 = sub_24981FA38(v21), (v9 & 1) != 0))
      {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      }
      else
      {
        v10 = v7;
        v11 = v8;
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_249828234(0, *((_QWORD *)v6 + 2) + 1, 1, (uint64_t)v6);
        v13 = *((_QWORD *)v6 + 2);
        v12 = *((_QWORD *)v6 + 3);
        if (v13 >= v12 >> 1)
          v6 = sub_249828234((char *)(v12 > 1), v13 + 1, 1, (uint64_t)v6);
        *((_QWORD *)v6 + 2) = v13 + 1;
        v14 = &v6[4 * v13];
        *((_WORD *)v14 + 16) = v11;
        *((_WORD *)v14 + 17) = v10;
      }
      sub_2498370C0();
    }
    while (v20);
  }
  else
  {
    v6 = (char *)MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v2);
  return v6;
}

void sub_24981D2E4(uint64_t a1)
{
  sub_24981D30C(a1, &qword_257882640, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249829218);
}

void sub_24981D2F8(uint64_t a1)
{
  sub_24981D30C(a1, &qword_257882618, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249829508);
}

void sub_24981D30C(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = sub_249837354();
  }
  else
  {
    v4 = MEMORY[0x24BEE4B00];
  }
  v6 = v4;
  v5 = OUTLINED_FUNCTION_74();
  a3(v5, 1, &v6);
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_12_2();
}

void HIDServiceProperties.subscript.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_42_6();
  v0 = OUTLINED_FUNCTION_20_16();
  v1 = OUTLINED_FUNCTION_89_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_29_0();
  if (v1)
  {
    OUTLINED_FUNCTION_57_7();
    v2 = OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v2, v3, &qword_257881490, v4, v5, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_23_1();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_17_15(v7, &qword_257881490, v8, v9, v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_49_7();
}

{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_42_6();
  v0 = OUTLINED_FUNCTION_20_16();
  v1 = OUTLINED_FUNCTION_89_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_29_0();
  if (v1)
  {
    OUTLINED_FUNCTION_57_7();
    v2 = OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v2, v3, &qword_257881490, v4, v5, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_23_1();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_17_15(v7, &qword_257881490, v8, v9, v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_49_7();
}

{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_42_6();
  v0 = OUTLINED_FUNCTION_20_16();
  v1 = OUTLINED_FUNCTION_89_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_29_0();
  if (v1)
  {
    OUTLINED_FUNCTION_57_7();
    v2 = OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v2, v3, &qword_257881490, v4, v5, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_23_1();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_17_15(v7, &qword_257881490, v8, v9, v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_49_7();
}

{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_42_6();
  v0 = OUTLINED_FUNCTION_20_16();
  v1 = OUTLINED_FUNCTION_89_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_29_0();
  if (v1)
  {
    OUTLINED_FUNCTION_57_7();
    v2 = OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v2, v3, &qword_257881490, v4, v5, v6);
  if (v14)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882498);
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_23_1();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_17_15(v7, &qword_257881490, v8, v9, v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_49_7();
}

void sub_24981D464(_BYTE *a1@<X8>)
{
  char v2;

  HIDServiceProperties.subscript.getter();
  *a1 = v2;
}

void sub_24981D490(char *a1)
{
  char v1;

  v1 = *a1;
  swift_bridgeObjectRetain();
  HIDServiceProperties.subscript.setter(v1);
}

void HIDServiceProperties.subscript.setter(char a1)
{
  void *v1;
  uint64_t v2;

  if (a1 == 2)
    v1 = 0;
  else
    v1 = (void *)sub_249836EE0();
  OUTLINED_FUNCTION_74();
  v2 = OUTLINED_FUNCTION_120_0();
  OUTLINED_FUNCTION_96_1(v2, sel___swift_setObject_forKeyedSubscript_);
  OUTLINED_FUNCTION_23_1();

  OUTLINED_FUNCTION_5_4();
  OUTLINED_FUNCTION_12_2();
}

void HIDServiceProperties.subscript.modify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  OUTLINED_FUNCTION_15_8();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = malloc(0x60uLL);
  *v6 = v7;
  *((_QWORD *)v7 + 4) = v4;
  *((_QWORD *)v7 + 9) = v2;
  *((_QWORD *)v7 + 10) = v0;
  *((_QWORD *)v7 + 8) = v4;
  OUTLINED_FUNCTION_31_9((uint64_t)v7);
  v8 = OUTLINED_FUNCTION_119();
  v9 = OUTLINED_FUNCTION_76_2(v8, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_74_5();
  if (v4)
  {
    OUTLINED_FUNCTION_68_5();
    v10 = OUTLINED_FUNCTION_55_0();
  }
  else
  {
    OUTLINED_FUNCTION_131_0();
  }
  OUTLINED_FUNCTION_69_5(v10, v11, &qword_257881490);
  if (!*((_QWORD *)v7 + 3))
  {
    v13 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_124_0(v13, &qword_257881490);
LABEL_9:
    v12 = 2;
    goto LABEL_10;
  }
  if ((OUTLINED_FUNCTION_8_25() & 1) == 0)
  {
    OUTLINED_FUNCTION_42();
    goto LABEL_9;
  }
  v12 = *((_BYTE *)v7 + 89);
  OUTLINED_FUNCTION_42();
LABEL_10:
  *((_BYTE *)v7 + 88) = v12;
  OUTLINED_FUNCTION_13_1();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_15_8();
  v4 = OUTLINED_FUNCTION_149_0();
  *v2 = v4;
  v4[4] = v3;
  v4[13] = v1;
  v4[14] = v0;
  v4[12] = v3;
  OUTLINED_FUNCTION_31_9((uint64_t)v4);
  v5 = OUTLINED_FUNCTION_119();
  v6 = OUTLINED_FUNCTION_76_2(v5, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_74_5();
  if (v3)
  {
    OUTLINED_FUNCTION_68_5();
    v7 = OUTLINED_FUNCTION_55_0();
  }
  else
  {
    OUTLINED_FUNCTION_131_0();
  }
  OUTLINED_FUNCTION_69_5(v7, v8, &qword_257881490);
  if (v4[3])
  {
    v9 = OUTLINED_FUNCTION_8_25();
    v10 = v4[10];
    v11 = v4[11];
    OUTLINED_FUNCTION_42();
    if (v9)
      v12 = v10;
    else
      v12 = 0;
    v13 = 0xF000000000000000;
    if (v9)
      v13 = v11;
  }
  else
  {
    v14 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_124_0(v14, &qword_257881490);
    v12 = 0;
    v13 = 0xF000000000000000;
  }
  v4[8] = v12;
  v4[9] = v13;
  OUTLINED_FUNCTION_13_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  OUTLINED_FUNCTION_15_8();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = malloc(0x70uLL);
  *v6 = v7;
  v7[4] = v4;
  v7[12] = v2;
  v7[13] = v0;
  v7[11] = v4;
  OUTLINED_FUNCTION_31_9((uint64_t)v7);
  v8 = OUTLINED_FUNCTION_119();
  v9 = OUTLINED_FUNCTION_76_2(v8, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_74_5();
  if (v4)
  {
    OUTLINED_FUNCTION_68_5();
    v10 = OUTLINED_FUNCTION_55_0();
  }
  else
  {
    OUTLINED_FUNCTION_131_0();
  }
  OUTLINED_FUNCTION_69_5(v10, v11, &qword_257881490);
  if (v7[3])
  {
    v12 = OUTLINED_FUNCTION_8_25();
    v13 = v7[10];
    OUTLINED_FUNCTION_42();
    if (v12)
      v14 = v13;
    else
      v14 = 0;
    v15 = v12 ^ 1;
  }
  else
  {
    v16 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_124_0(v16, &qword_257881490);
    v14 = 0;
    v15 = 1;
  }
  v7[8] = v14;
  *((_BYTE *)v7 + 72) = v15;
  OUTLINED_FUNCTION_13_1();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_15_8();
  v4 = OUTLINED_FUNCTION_149_0();
  *v2 = v4;
  v4[4] = v3;
  v4[13] = v1;
  v4[14] = v0;
  v4[12] = v3;
  OUTLINED_FUNCTION_31_9((uint64_t)v4);
  v5 = OUTLINED_FUNCTION_119();
  v6 = OUTLINED_FUNCTION_76_2(v5, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_74_5();
  if (v3)
  {
    OUTLINED_FUNCTION_68_5();
    v7 = OUTLINED_FUNCTION_55_0();
  }
  else
  {
    OUTLINED_FUNCTION_131_0();
  }
  OUTLINED_FUNCTION_69_5(v7, v8, &qword_257881490);
  if (!v4[3])
  {
    v11 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_124_0(v11, &qword_257881490);
LABEL_9:
    v9 = 0;
    v10 = 0;
    goto LABEL_10;
  }
  if ((OUTLINED_FUNCTION_8_25() & 1) == 0)
  {
    OUTLINED_FUNCTION_42();
    goto LABEL_9;
  }
  v9 = v4[10];
  v10 = v4[11];
  OUTLINED_FUNCTION_42();
LABEL_10:
  v4[8] = v9;
  v4[9] = v10;
  OUTLINED_FUNCTION_13_1();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_15_8();
  v4 = OUTLINED_FUNCTION_97_0();
  *v2 = v4;
  v4[4] = v3;
  v4[11] = v1;
  v4[12] = v0;
  v4[10] = v3;
  OUTLINED_FUNCTION_31_9((uint64_t)v4);
  v5 = OUTLINED_FUNCTION_119();
  v6 = OUTLINED_FUNCTION_76_2(v5, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_74_5();
  if (v3)
  {
    OUTLINED_FUNCTION_68_5();
    v7 = OUTLINED_FUNCTION_55_0();
  }
  else
  {
    OUTLINED_FUNCTION_131_0();
  }
  OUTLINED_FUNCTION_69_5(v7, v8, &qword_257881490);
  if (!v4[3])
  {
    v11 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_124_0(v11, &qword_257881490);
LABEL_9:
    v10 = 0;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_69_2(v9, &qword_2578805D8);
  if ((OUTLINED_FUNCTION_8_25() & 1) == 0)
  {
    OUTLINED_FUNCTION_42();
    goto LABEL_9;
  }
  v10 = v4[9];
  OUTLINED_FUNCTION_42();
LABEL_10:
  v4[8] = v10;
  OUTLINED_FUNCTION_13_1();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_15_8();
  v4 = OUTLINED_FUNCTION_97_0();
  *v2 = v4;
  v4[4] = v3;
  v4[11] = v1;
  v4[12] = v0;
  v4[10] = v3;
  OUTLINED_FUNCTION_31_9((uint64_t)v4);
  v5 = OUTLINED_FUNCTION_119();
  v6 = OUTLINED_FUNCTION_76_2(v5, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_74_5();
  if (v3)
  {
    OUTLINED_FUNCTION_68_5();
    v7 = OUTLINED_FUNCTION_55_0();
  }
  else
  {
    OUTLINED_FUNCTION_131_0();
  }
  OUTLINED_FUNCTION_69_5(v7, v8, &qword_257881490);
  if (!v4[3])
  {
    v11 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_124_0(v11, &qword_257881490);
LABEL_9:
    v10 = 0;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_69_2(v9, &qword_2578805E0);
  if ((OUTLINED_FUNCTION_8_25() & 1) == 0)
  {
    OUTLINED_FUNCTION_42();
    goto LABEL_9;
  }
  v10 = v4[9];
  OUTLINED_FUNCTION_42();
LABEL_10:
  v4[8] = v10;
  OUTLINED_FUNCTION_13_1();
}

{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_15_8();
  v4 = OUTLINED_FUNCTION_97_0();
  *v2 = v4;
  v4[4] = v3;
  v4[11] = v1;
  v4[12] = v0;
  v4[10] = v3;
  OUTLINED_FUNCTION_31_9((uint64_t)v4);
  v5 = OUTLINED_FUNCTION_119();
  v6 = OUTLINED_FUNCTION_76_2(v5, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_74_5();
  if (v3)
  {
    OUTLINED_FUNCTION_68_5();
    v7 = OUTLINED_FUNCTION_55_0();
  }
  else
  {
    OUTLINED_FUNCTION_131_0();
  }
  OUTLINED_FUNCTION_69_5(v7, v8, &qword_257881490);
  if (!v4[3])
  {
    v10 = OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_124_0(v10, &qword_257881490);
LABEL_9:
    v9 = 0;
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882498);
  if ((OUTLINED_FUNCTION_8_25() & 1) == 0)
  {
    OUTLINED_FUNCTION_42();
    goto LABEL_9;
  }
  v9 = v4[9];
  OUTLINED_FUNCTION_42();
LABEL_10:
  v4[8] = v9;
  OUTLINED_FUNCTION_13_1();
}

void sub_24981D64C(uint64_t a1)
{
  void *v1;
  char v2;

  v1 = *(void **)a1;
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 88);
  OUTLINED_FUNCTION_73_0();
  HIDServiceProperties.subscript.setter(v2);
  OUTLINED_FUNCTION_7_14(v1);
}

uint64_t sub_24981D760(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a3;
  v4 = a3[1];
  v5 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  sub_249748C6C(v5, v6);
  return HIDServiceProperties.subscript.setter(v5, v6, v3, v4);
}

uint64_t HIDServiceProperties.subscript.setter(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v9;
  void *v10;

  v9 = *(void **)(v4 + 8);
  if (a2 >> 60 == 15)
    v10 = 0;
  else
    v10 = (void *)sub_24983691C();
  OUTLINED_FUNCTION_74();
  objc_msgSend(v9, sel___swift_setObject_forKeyedSubscript_, v10, OUTLINED_FUNCTION_120_0(), a3, a4);
  sub_249748C80(a1, a2);
  OUTLINED_FUNCTION_23_1();

  return OUTLINED_FUNCTION_13_3();
}

void sub_24981D96C()
{
  char v0;
  char v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  OUTLINED_FUNCTION_15_8();
  v1 = v0;
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 64);
  v5 = *(_QWORD *)(*v2 + 72);
  OUTLINED_FUNCTION_34_0();
  if ((v1 & 1) != 0)
  {
    sub_249748C6C(v4, v5);
    OUTLINED_FUNCTION_154_0();
    sub_249748C80(*(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72));
  }
  else
  {
    OUTLINED_FUNCTION_154_0();
  }
  OUTLINED_FUNCTION_8_14((void *)v3);
}

uint64_t HIDServiceProperties.subscript.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_42_6();
  v0 = OUTLINED_FUNCTION_20_16();
  v1 = OUTLINED_FUNCTION_89_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_29_0();
  if (v1)
  {
    OUTLINED_FUNCTION_57_7();
    v2 = OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v2, v3, &qword_257881490, v4, v5, v6);
  if (v17)
  {
    if (OUTLINED_FUNCTION_0_29())
      v7 = v16;
    else
      v7 = 0;
    OUTLINED_FUNCTION_23_1();
  }
  else
  {
    v8 = OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
    return 0;
  }
  return v7;
}

uint64_t sub_24981DAAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = HIDServiceProperties.subscript.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_24981DAE0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a3;
  v4 = a3[1];
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  swift_bridgeObjectRetain();
  HIDServiceProperties.subscript.setter(v5, v6, v3, v4);
}

void HIDServiceProperties.subscript.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v7;
  void *v8;

  v7 = *(void **)(v4 + 8);
  if ((a2 & 1) != 0)
    v8 = 0;
  else
    v8 = (void *)sub_249836F58();
  OUTLINED_FUNCTION_74();
  objc_msgSend(v7, sel___swift_setObject_forKeyedSubscript_, v8, OUTLINED_FUNCTION_120_0(), a3, a4);
  OUTLINED_FUNCTION_23_1();

  OUTLINED_FUNCTION_5_4();
  OUTLINED_FUNCTION_12_2();
}

void sub_24981DCB4(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 72);
  OUTLINED_FUNCTION_73_0();
  HIDServiceProperties.subscript.setter(v4, v5, v3, v2);
  OUTLINED_FUNCTION_7_14(v1);
}

void sub_24981DDCC(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, _QWORD)@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;

  *a5 = a4(*a2, a2[1], a3, *(_QWORD *)(a1 + 8));
  a5[1] = v6;
  OUTLINED_FUNCTION_27();
}

void sub_24981DDF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  HIDServiceProperties.subscript.setter(v1, v2);
}

void HIDServiceProperties.subscript.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;

  if (a2)
  {
    v2 = (void *)sub_249836D18();
    OUTLINED_FUNCTION_78();
  }
  else
  {
    v2 = 0;
  }
  OUTLINED_FUNCTION_74();
  v3 = OUTLINED_FUNCTION_120_0();
  OUTLINED_FUNCTION_96_1(v3, sel___swift_setObject_forKeyedSubscript_);
  OUTLINED_FUNCTION_23_1();

  OUTLINED_FUNCTION_5_4();
  OUTLINED_FUNCTION_2_4();
}

void sub_24981DFB8(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_138();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_155_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_155_0();
  }
  OUTLINED_FUNCTION_7_14(v2);
}

uint64_t HIDServiceProperties.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_24981E178(a1, a2, a3, a4, &qword_2578805D8);
}

{
  return sub_24981E178(a1, a2, a3, a4, &qword_2578805E0);
}

uint64_t sub_24981E028@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = HIDServiceProperties.subscript.getter(*a2, a2[1], a3, *(void **)(a1 + 8));
  *a4 = result;
  return result;
}

void sub_24981E158()
{
  sub_24981E450();
}

uint64_t sub_24981E178(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_42_6();
  v7 = objc_msgSend(a4, sel___swift_objectForKeyedSubscript_, OUTLINED_FUNCTION_20_16());
  OUTLINED_FUNCTION_55_0();
  if (v7)
  {
    sub_2498370E4();
    v8 = OUTLINED_FUNCTION_5_4();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v8, v9, &qword_257881490, v10, v11, v12);
  if (!v23)
  {
    v14 = OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_17_15(v14, &qword_257881490, v15, v16, v17, v18, v19, v20);
    return 0;
  }
  sub_249783D14(0, a5);
  if (!OUTLINED_FUNCTION_0_29())
  {
    OUTLINED_FUNCTION_23_1();
    return 0;
  }
  v13 = v22;
  OUTLINED_FUNCTION_23_1();
  return v13;
}

uint64_t sub_24981E274@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = HIDServiceProperties.subscript.getter(*a2, a2[1], a3, *(void **)(a1 + 8));
  *a4 = result;
  return result;
}

void sub_24981E2A0(id *a1, uint64_t a2, uint64_t *a3, uint64_t a4, void (*a5)(id, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;

  v6 = *a3;
  v7 = a3[1];
  v8 = *a1;
  v9 = *a1;
  OUTLINED_FUNCTION_138();
  a5(v8, v6, v7);
  OUTLINED_FUNCTION_10_0();
}

void _s8HIDUtils20HIDServicePropertiesVySo7NSArrayCSgAA0B11PropertyKeyVcis_0(void *a1)
{
  uint64_t v2;

  swift_bridgeObjectRetain();
  v2 = OUTLINED_FUNCTION_120_0();
  OUTLINED_FUNCTION_96_1(v2, sel___swift_setObject_forKeyedSubscript_);
  OUTLINED_FUNCTION_23_1();

  OUTLINED_FUNCTION_5_4();
  OUTLINED_FUNCTION_12_2();
}

void sub_24981E444()
{
  sub_24981E450();
}

void sub_24981E450()
{
  uint64_t v0;
  void *v1;
  id *v2;
  char v3;
  id v4;

  OUTLINED_FUNCTION_15_8();
  v1 = *(void **)v0;
  v2 = (id *)(*(_QWORD *)v0 + 64);
  if ((v3 & 1) != 0)
  {
    v4 = *(id *)(*(_QWORD *)v0 + 64);
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_170_0();

  }
  else
  {
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_170_0();
  }
  OUTLINED_FUNCTION_8_14(v1);
}

void sub_24981E578(_QWORD *a1@<X8>)
{
  uint64_t v2;

  HIDServiceProperties.subscript.getter();
  *a1 = v2;
}

void sub_24981E5A4(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  HIDServiceProperties.subscript.setter(v1);
}

void HIDServiceProperties.subscript.setter(uint64_t a1)
{
  uint64_t v1;

  if (a1)
  {
    sub_249836C88();
    OUTLINED_FUNCTION_78();
  }
  OUTLINED_FUNCTION_74();
  v1 = OUTLINED_FUNCTION_120_0();
  OUTLINED_FUNCTION_96_1(v1, sel___swift_setObject_forKeyedSubscript_);
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_5_4();
  OUTLINED_FUNCTION_2_4();
}

void sub_24981E778(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_138();
    OUTLINED_FUNCTION_181_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_138();
    OUTLINED_FUNCTION_181_0();
  }
  OUTLINED_FUNCTION_7_14(v2);
}

void HIDServiceProperties.accelParametricCurves.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_123_0();
  v3 = OUTLINED_FUNCTION_130_0();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_69_2(v10, &qword_2578805D8);
    if ((OUTLINED_FUNCTION_0_29() & 1) != 0)
    {
      OUTLINED_FUNCTION_182_0();
      OUTLINED_FUNCTION_216();
    }
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_49_7();
}

void sub_24981E898(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  HIDServiceProperties.accelParametricCurves.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

uint64_t sub_24981E8C0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return HIDServiceProperties.accelParametricCurves.setter(v0);
}

uint64_t HIDServiceProperties.accelParametricCurves.setter(uint64_t a1)
{
  return sub_249821948(a1, 0x6C65636341444948, 0xEE00736576727543);
}

void __swiftcall HIDServiceProperties.HIDAccelCurve.init(dictionaryRepresentation:)(HIDUtils::HIDServiceProperties::HIDAccelCurve_optional *__return_ptr retstr, NSDictionary dictionaryRepresentation)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  int v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  id v159;
  uint64_t v160;
  char v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  unint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  char v372;
  uint64_t v373;
  char v374;
  uint64_t v375;
  char v376;
  uint64_t v377;
  char v378;
  uint64_t v379;
  char v380;
  uint64_t v381;
  char v382;
  uint64_t v383;
  char v384;
  _BYTE v385[24];
  uint64_t v386;

  OUTLINED_FUNCTION_67_4();
  v367 = 0xD000000000000011;
  v368 = v4;
  OUTLINED_FUNCTION_99_0();
  v5 = OUTLINED_FUNCTION_70_2(dictionaryRepresentation.super.isa, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_41_7();
  if (v2)
  {
    OUTLINED_FUNCTION_61_6();
    v6 = OUTLINED_FUNCTION_29_0();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
  }
  OUTLINED_FUNCTION_60_5(v6, v7, &qword_257881490, v8, v9, v10, v11, v12, v163, v172, v181, v191, v201, v210, v220, v229, v239, v248, v258,
    v267,
    (uint64_t)retstr,
    v286,
    v295,
    v304,
    v313,
    v322,
    v331,
    v340,
    v349,
    v358,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_8_25();
    OUTLINED_FUNCTION_80_1();
    v269 = v20;
    v22 = v21 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_111_1(v13, &qword_257881490, v14, v15, v16, v17, v18, v19, v164, v173, v182, v192, v202, v211, v221, v230, v240, v249, v259,
      v268,
      v278,
      v287,
      v296,
      v305,
      v314,
      v323,
      v332,
      v341,
      v350,
      v359,
      v367);
    v269 = 0;
    v22 = 1;
  }
  HIDWORD(v259) = v22;
  OUTLINED_FUNCTION_79_2();
  v23 = OUTLINED_FUNCTION_99_0();
  v24 = OUTLINED_FUNCTION_28_11(v23);
  OUTLINED_FUNCTION_41_7();
  if (v2)
  {
    OUTLINED_FUNCTION_61_6();
    v25 = OUTLINED_FUNCTION_29_0();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
  }
  OUTLINED_FUNCTION_60_5(v25, v26, &qword_257881490, v27, v28, v29, v30, v31, v164, v173, v182, v192, v202, v211, v221, v230, v240, v249, v259,
    v269,
    v278,
    v287,
    v296,
    v305,
    v314,
    v323,
    v332,
    v341,
    v350,
    v359,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_8_25();
    OUTLINED_FUNCTION_80_1();
    v251 = v39;
    v41 = v40 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_111_1(v32, &qword_257881490, v33, v34, v35, v36, v37, v38, v165, v174, v183, v193, v203, v212, v222, v231, v241, v250, v260,
      v270,
      v279,
      v288,
      v297,
      v306,
      v315,
      v324,
      v333,
      v342,
      v351,
      v360,
      v367);
    v251 = 0;
    v41 = 1;
  }
  HIDWORD(v241) = v41;
  OUTLINED_FUNCTION_79_2();
  v42 = OUTLINED_FUNCTION_99_0();
  v43 = OUTLINED_FUNCTION_28_11(v42);
  OUTLINED_FUNCTION_41_7();
  if (v2)
  {
    OUTLINED_FUNCTION_61_6();
    v44 = OUTLINED_FUNCTION_29_0();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
  }
  OUTLINED_FUNCTION_60_5(v44, v45, &qword_257881490, v46, v47, v48, v49, v50, v165, v174, v183, v193, v203, v212, v222, v231, v241, v251, v260,
    v270,
    v279,
    v288,
    v297,
    v306,
    v315,
    v324,
    v333,
    v342,
    v351,
    v360,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_8_25();
    OUTLINED_FUNCTION_80_1();
    v233 = v58;
    v60 = v59 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_111_1(v51, &qword_257881490, v52, v53, v54, v55, v56, v57, v166, v175, v184, v194, v204, v213, v223, v232, v242, v252, v261,
      v271,
      v280,
      v289,
      v298,
      v307,
      v316,
      v325,
      v334,
      v343,
      v352,
      v361,
      v367);
    v233 = 0;
    v60 = 1;
  }
  HIDWORD(v223) = v60;
  OUTLINED_FUNCTION_79_2();
  v61 = OUTLINED_FUNCTION_99_0();
  v62 = OUTLINED_FUNCTION_28_11(v61);
  OUTLINED_FUNCTION_41_7();
  if (v2)
  {
    OUTLINED_FUNCTION_61_6();
    v63 = OUTLINED_FUNCTION_29_0();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
  }
  OUTLINED_FUNCTION_60_5(v63, v64, &qword_257881490, v65, v66, v67, v68, v69, v166, v175, v184, v194, v204, v213, v223, v233, v242, v252, v261,
    v271,
    v280,
    v289,
    v298,
    v307,
    v316,
    v325,
    v334,
    v343,
    v352,
    v361,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_8_25();
    OUTLINED_FUNCTION_80_1();
    v215 = v77;
    v79 = v78 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_111_1(v70, &qword_257881490, v71, v72, v73, v74, v75, v76, v167, v176, v185, v195, v205, v214, v224, v234, v243, v253, v262,
      v272,
      v281,
      v290,
      v299,
      v308,
      v317,
      v326,
      v335,
      v344,
      v353,
      v362,
      v367);
    v215 = 0;
    v79 = 1;
  }
  HIDWORD(v205) = v79;
  OUTLINED_FUNCTION_43_8();
  v367 = v80;
  v368 = v81;
  v82 = OUTLINED_FUNCTION_99_0();
  v83 = OUTLINED_FUNCTION_28_11(v82);
  OUTLINED_FUNCTION_41_7();
  if (v2)
  {
    OUTLINED_FUNCTION_61_6();
    v84 = OUTLINED_FUNCTION_29_0();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
  }
  OUTLINED_FUNCTION_60_5(v84, v85, &qword_257881490, v86, v87, v88, v89, v90, v167, v176, v185, v195, v205, v215, v224, v234, v243, v253, v262,
    v272,
    v281,
    v290,
    v299,
    v308,
    v317,
    v326,
    v335,
    v344,
    v353,
    v362,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_8_25();
    OUTLINED_FUNCTION_80_1();
    v197 = v98;
    v100 = v99 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_111_1(v91, &qword_257881490, v92, v93, v94, v95, v96, v97, v168, v177, v186, v196, v206, v216, v225, v235, v244, v254, v263,
      v273,
      v282,
      v291,
      v300,
      v309,
      v318,
      v327,
      v336,
      v345,
      v354,
      v363,
      v367);
    v197 = 0;
    v100 = 1;
  }
  OUTLINED_FUNCTION_79_2();
  v101 = OUTLINED_FUNCTION_99_0();
  v102 = OUTLINED_FUNCTION_28_11(v101);
  OUTLINED_FUNCTION_41_7();
  if (v2)
  {
    OUTLINED_FUNCTION_61_6();
    v103 = OUTLINED_FUNCTION_29_0();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
  }
  OUTLINED_FUNCTION_60_5(v103, v104, &qword_257881490, v105, v106, v107, v108, v109, v168, v177, v186, v197, v206, v216, v225, v235, v244, v254, v263,
    v273,
    v282,
    v291,
    v300,
    v309,
    v318,
    v327,
    v336,
    v345,
    v354,
    v363,
    v367);
  if (v370)
  {
    OUTLINED_FUNCTION_8_25();
    OUTLINED_FUNCTION_80_1();
    v188 = v117;
    v119 = v118 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_111_1(v110, &qword_257881490, v111, v112, v113, v114, v115, v116, v169, v178, v187, v198, v207, v217, v226, v236, v245, v255, v264,
      v274,
      v283,
      v292,
      v301,
      v310,
      v319,
      v328,
      v337,
      v346,
      v355,
      v364,
      v367);
    v188 = 0;
    v119 = 1;
  }
  HIDWORD(v178) = v119;
  OUTLINED_FUNCTION_79_2();
  v120 = OUTLINED_FUNCTION_99_0();
  v121 = OUTLINED_FUNCTION_28_11(v120);
  OUTLINED_FUNCTION_41_7();
  if (v2)
  {
    OUTLINED_FUNCTION_61_6();
    v122 = OUTLINED_FUNCTION_29_0();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
  }
  OUTLINED_FUNCTION_60_5(v122, v123, &qword_257881490, v124, v125, v126, v127, v128, v169, v178, v188, v198, v207, v217, v226, v236, v245, v255, v264,
    v274,
    v283,
    v292,
    v301,
    v310,
    v319,
    v328,
    v337,
    v346,
    v355,
    v364,
    v367);
  if (v370)
  {
    v136 = OUTLINED_FUNCTION_8_25();
    if (v136)
      v137 = v293;
    else
      v137 = 0;
    v138 = v136 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_111_1(v129, &qword_257881490, v130, v131, v132, v133, v134, v135, v170, v179, v189, v199, v208, v218, v227, v237, v246, v256, v265,
      v275,
      v284,
      v293,
      v302,
      v311,
      v320,
      v329,
      v338,
      v347,
      v356,
      v365,
      v367);
    v137 = 0;
    v138 = 1;
  }
  OUTLINED_FUNCTION_79_2();
  v139 = OUTLINED_FUNCTION_99_0();
  v140 = OUTLINED_FUNCTION_28_11(v139);
  OUTLINED_FUNCTION_41_7();
  if (v2)
  {
    OUTLINED_FUNCTION_61_6();
    v141 = OUTLINED_FUNCTION_29_0();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
  }
  OUTLINED_FUNCTION_60_5(v141, v142, &qword_257881490, v143, v144, v145, v146, v147, v170, v179, v189, v199, v208, v218, v227, v237, v246, v256, v265,
    v275,
    v284,
    v293,
    v302,
    v311,
    v320,
    v329,
    v338,
    v347,
    v356,
    v365,
    v367);
  if (v370)
  {
    v155 = OUTLINED_FUNCTION_8_25();
    if (v155)
      v156 = v294;
    else
      v156 = 0;
    v157 = v155 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_111_1(v148, &qword_257881490, v149, v150, v151, v152, v153, v154, v171, v180, v190, v200, v209, v219, v228, v238, v247, v257, v266,
      v276,
      v285,
      v294,
      v303,
      v312,
      v321,
      v330,
      v339,
      v348,
      v357,
      v366,
      v367);
    v156 = 0;
    v157 = 1;
  }
  OUTLINED_FUNCTION_79_2();
  v158 = OUTLINED_FUNCTION_99_0();
  v159 = OUTLINED_FUNCTION_28_11(v158);
  OUTLINED_FUNCTION_41_7();
  OUTLINED_FUNCTION_86_1();
  OUTLINED_FUNCTION_29_0();

  sub_249828780((uint64_t)&v367, (uint64_t)v385, &qword_257881490);
  if (v386)
  {
    OUTLINED_FUNCTION_8_25();
    OUTLINED_FUNCTION_80_1();
    v162 = v161 ^ 1;
  }
  else
  {
    sub_2497D5E68((uint64_t)v385, &qword_257881490);
    v160 = 0;
    v162 = 1;
  }
  v367 = v276;
  LOBYTE(v368) = BYTE4(v266);
  v369 = v257;
  LOBYTE(v370) = BYTE4(v247);
  v371 = v238;
  v372 = BYTE4(v228);
  v373 = v219;
  v374 = BYTE4(v209);
  v375 = v200;
  v376 = v100;
  v377 = v190;
  v378 = BYTE4(v180);
  v379 = v137;
  v380 = v138;
  v381 = v156;
  v382 = v157;
  v383 = v160;
  v384 = v162;
  sub_24981F1F0((uint64_t)&v367);
  sub_249828780((uint64_t)&v367, v285, &qword_2578824A0);
}

uint64_t HIDServiceProperties.HIDAccelCurve.dictionaryRepresentation.getter()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];
  _BYTE v24[16];
  _BYTE v25[16];
  _BYTE v26[16];
  _BYTE v27[16];
  _BYTE v28[16];
  _BYTE v29[16];
  _BYTE v30[16];
  _BYTE v31[16];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578824A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24983D760;
  OUTLINED_FUNCTION_67_4();
  *(_QWORD *)(v2 + 32) = 0xD000000000000011;
  *(_QWORD *)(v2 + 40) = v3;
  OUTLINED_FUNCTION_52_4(v0, (uint64_t)v31);
  OUTLINED_FUNCTION_52_4((uint64_t)v31, inited + 48);
  OUTLINED_FUNCTION_67_4();
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v4;
  OUTLINED_FUNCTION_52_4(v0 + 16, (uint64_t)v30);
  OUTLINED_FUNCTION_52_4((uint64_t)v30, inited + 80);
  OUTLINED_FUNCTION_67_4();
  *(_QWORD *)(inited + 96) = v7;
  *(_QWORD *)(inited + 104) = v6;
  OUTLINED_FUNCTION_52_4(v0 + 32, (uint64_t)v29);
  OUTLINED_FUNCTION_52_4((uint64_t)v29, inited + 112);
  OUTLINED_FUNCTION_67_4();
  *(_QWORD *)(inited + 128) = v9;
  *(_QWORD *)(inited + 136) = v8;
  OUTLINED_FUNCTION_52_4(v0 + 48, (uint64_t)v28);
  OUTLINED_FUNCTION_52_4((uint64_t)v28, inited + 144);
  OUTLINED_FUNCTION_43_8();
  *(_QWORD *)(inited + 160) = v10;
  *(_QWORD *)(inited + 168) = v11;
  OUTLINED_FUNCTION_52_4(v0 + 64, (uint64_t)v27);
  OUTLINED_FUNCTION_52_4((uint64_t)v27, inited + 176);
  OUTLINED_FUNCTION_67_4();
  *(_QWORD *)(inited + 192) = v13;
  *(_QWORD *)(inited + 200) = v12;
  OUTLINED_FUNCTION_52_4(v0 + 80, (uint64_t)v26);
  OUTLINED_FUNCTION_52_4((uint64_t)v26, inited + 208);
  OUTLINED_FUNCTION_67_4();
  *(_QWORD *)(inited + 224) = v15;
  *(_QWORD *)(inited + 232) = v14;
  OUTLINED_FUNCTION_52_4(v0 + 96, (uint64_t)v25);
  OUTLINED_FUNCTION_52_4((uint64_t)v25, inited + 240);
  OUTLINED_FUNCTION_67_4();
  *(_QWORD *)(inited + 256) = v17;
  *(_QWORD *)(inited + 264) = v16;
  OUTLINED_FUNCTION_52_4(v0 + 112, (uint64_t)v24);
  OUTLINED_FUNCTION_52_4((uint64_t)v24, inited + 272);
  OUTLINED_FUNCTION_67_4();
  *(_QWORD *)(inited + 288) = v19;
  *(_QWORD *)(inited + 296) = v18;
  OUTLINED_FUNCTION_52_4(v0 + 128, (uint64_t)v23);
  OUTLINED_FUNCTION_52_4((uint64_t)v23, inited + 304);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578824B0);
  v20 = sub_249836CA0();
  sub_2498232FC(v20);
  OUTLINED_FUNCTION_23_1();
  v21 = sub_249836C88();
  OUTLINED_FUNCTION_42();
  return v21;
}

uint64_t sub_24981F1F0(uint64_t result)
{
  *(_BYTE *)(result + 137) = 0;
  return result;
}

void HIDServiceProperties.accelParametricCurves.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_144_0(a1);
  HIDServiceProperties.accelParametricCurves.getter(v2, v3);
  *v1 = v4;
  OUTLINED_FUNCTION_27();
}

void sub_24981F224(uint64_t *a1, char a2)
{
  sub_249821A98(a1, a2, (void (*)(uint64_t))HIDServiceProperties.accelParametricCurves.setter);
}

void HIDServiceProperties.appleVendorSupported.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_91_1();
  OUTLINED_FUNCTION_10_14();
  v1 = OUTLINED_FUNCTION_20_16();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v15)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_65_4();
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_24981F2E0(_BYTE *a1@<X8>)
{
  char v2;

  HIDServiceProperties.appleVendorSupported.getter();
  *a1 = v2;
}

void HIDServiceProperties.appleVendorSupported.setter(char a1)
{
  OUTLINED_FUNCTION_32_9(a1);
}

void HIDServiceProperties.appleVendorSupported.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_47_7(a1);
  HIDServiceProperties.appleVendorSupported.getter();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_27();
}

void sub_24981F34C(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_112_0(a1);
  OUTLINED_FUNCTION_32_9(v1);
  OUTLINED_FUNCTION_27();
}

void HIDServiceProperties.authenticatedDevice.getter(uint64_t a1, uint64_t a2)
{
  sub_24981F43C(a1, a2);
}

void sub_24981F3A0(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.authenticatedDevice.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.authenticatedDevice.setter()
{
  char v0;

  OUTLINED_FUNCTION_151_0();
  HIDServiceProperties.subscript.setter(v0);
}

void HIDServiceProperties.authenticatedDevice.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_47_7(a1);
  HIDServiceProperties.authenticatedDevice.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_27();
}

void sub_24981F404(uint64_t a1)
{
  char v1;

  OUTLINED_FUNCTION_112_0(a1);
  OUTLINED_FUNCTION_151_0();
  HIDServiceProperties.subscript.setter(v1);
  OUTLINED_FUNCTION_27();
}

void HIDServiceProperties.builtIn.getter(uint64_t a1, uint64_t a2)
{
  sub_24981F43C(a1, a2);
}

void sub_24981F43C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_65_4();
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_24981F4E4(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.builtIn.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.builtIn.setter(char a1)
{
  HIDServiceProperties.subscript.setter(a1);
}

void HIDServiceProperties.builtIn.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_47_7(a1);
  HIDServiceProperties.builtIn.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_27();
}

void sub_24981F550(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_112_0(a1);
  HIDServiceProperties.subscript.setter(v1);
  OUTLINED_FUNCTION_27();
}

void HIDServiceProperties.capsLockDelay.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_110_1();
  sub_249820004(v0, v1);
}

void sub_24981F590()
{
  HIDServiceProperties.capsLockDelay.setter();
}

void HIDServiceProperties.capsLockDelay.setter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_110_1();
  HIDServiceProperties.subscript.setter(v0, v1, v2, v3);
}

void HIDServiceProperties.capsLockDelay.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.capsLockDelay.getter();
  OUTLINED_FUNCTION_21_14(v1, v2);
  OUTLINED_FUNCTION_27();
}

void sub_24981F5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_110_1();
  sub_2498229A0(v0, v1, v2, v3);
}

void HIDServiceProperties.capsLockLanguageSwitch.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_65_4();
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_24981F6C4(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.capsLockLanguageSwitch.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.capsLockLanguageSwitch.setter(char a1)
{
  OUTLINED_FUNCTION_32_9(a1);
}

void HIDServiceProperties.capsLockLanguageSwitch.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_47_7(a1);
  HIDServiceProperties.capsLockLanguageSwitch.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_27();
}

void sub_24981F730(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_112_0(a1);
  OUTLINED_FUNCTION_32_9(v1);
  OUTLINED_FUNCTION_27();
}

void HIDServiceProperties.deviceUsagePairs.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  OUTLINED_FUNCTION_178_0();
  OUTLINED_FUNCTION_169();
  v1 = OUTLINED_FUNCTION_130_0();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v16)
  {
    OUTLINED_FUNCTION_69_2(v8, &qword_2578805D8);
    if ((OUTLINED_FUNCTION_0_29() & 1) != 0)
    {
      sub_24981D0BC(v15);
      OUTLINED_FUNCTION_216();
    }
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_49_7();
}

void sub_24981F83C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  HIDServiceProperties.deviceUsagePairs.getter();
  *a1 = v2;
}

uint64_t sub_24981F864()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return HIDServiceProperties.deviceUsagePairs.setter(v0);
}

uint64_t HIDServiceProperties.deviceUsagePairs.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = sub_2498371F8();
    OUTLINED_FUNCTION_69_2(v3, &qword_2578805E0);
    v4 = (unsigned __int16 *)(a1 + 34);
    v5 = MEMORY[0x24BEE0D00];
    v6 = MEMORY[0x24BEE1768];
    do
    {
      v7 = *(v4 - 1);
      v8 = *v4;
      v4 += 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578824B8);
      v9 = OUTLINED_FUNCTION_217();
      *(_OWORD *)(v9 + 16) = xmmword_249838520;
      *(_QWORD *)(v9 + 32) = 0x7355656369766544;
      *(_QWORD *)(v9 + 40) = 0xEB00000000656761;
      *(_QWORD *)(v9 + 56) = v5;
      *(_QWORD *)(v9 + 64) = v8;
      *(_QWORD *)(v9 + 88) = v6;
      *(_QWORD *)(v9 + 96) = 0x7355656369766544;
      *(_QWORD *)(v9 + 104) = 0xEF65676150656761;
      *(_QWORD *)(v9 + 152) = v6;
      *(_QWORD *)(v9 + 120) = v5;
      *(_QWORD *)(v9 + 128) = v7;
      sub_249836F7C();
      sub_2498371D4();
      sub_249837204();
      OUTLINED_FUNCTION_208();
      sub_2498371E0();
      --v2;
    }
    while (v2);
    v10 = swift_bridgeObjectRelease();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_23_1();
  }
  OUTLINED_FUNCTION_69_2(v10, &qword_2578805E0);
  v11 = sub_249836E98();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_218();
  return HIDServiceProperties.subscript.setter(v11, 0xD000000000000010, v12);
}

uint64_t sub_24981FA38(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _BYTE v9[24];
  uint64_t v10;

  *(_QWORD *)&v7 = 0x7355656369766544;
  *((_QWORD *)&v7 + 1) = 0xEB00000000656761;
  v2 = objc_msgSend(a1, sel___swift_objectForKeyedSubscript_, sub_249837624());
  swift_unknownObjectRelease();
  if (v2)
  {
    sub_2498370E4();
    swift_unknownObjectRelease();
  }
  else
  {
    v7 = 0u;
    v8 = 0u;
  }
  sub_249828780((uint64_t)&v7, (uint64_t)v9, &qword_257881490);
  if (!v10)
  {

LABEL_14:
    sub_2497D5E68((uint64_t)v9, &qword_257881490);
    return 0;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = v6;
    *(_QWORD *)&v7 = 0x7355656369766544;
    *((_QWORD *)&v7 + 1) = 0xEF65676150656761;
    v4 = objc_msgSend(a1, sel___swift_objectForKeyedSubscript_, sub_249837624());
    swift_unknownObjectRelease();
    if (v4)
    {
      sub_2498370E4();
      swift_unknownObjectRelease();

    }
    else
    {

      v7 = 0u;
      v8 = 0u;
    }
    sub_249828780((uint64_t)&v7, (uint64_t)v9, &qword_257881490);
    if (v10)
    {
      if ((swift_dynamicCast() & 1) != 0)
        return v3;
      return 0;
    }
    goto LABEL_14;
  }

  return 0;
}

void HIDServiceProperties.deviceUsagePairs.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_144_0(a1);
  HIDServiceProperties.deviceUsagePairs.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_27();
}

void sub_24981FC50(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_74();
    HIDServiceProperties.deviceUsagePairs.setter(v2);
    OUTLINED_FUNCTION_13_4();
  }
  else
  {
    HIDServiceProperties.deviceUsagePairs.setter(*a1);
    OUTLINED_FUNCTION_27();
  }
}

void HIDServiceProperties.eventServiceProperties.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v19)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882498);
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_78_3(v17, v18);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_24981FD48(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  HIDServiceProperties.eventServiceProperties.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void sub_24981FD70()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  HIDServiceProperties.eventServiceProperties.setter(v0);
}

void HIDServiceProperties.eventServiceProperties.setter(uint64_t a1)
{
  HIDServiceProperties.subscript.setter(a1);
}

void HIDServiceProperties.eventServiceProperties.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_144_0(a1);
  HIDServiceProperties.eventServiceProperties.getter(v2, v3);
  *v1 = v4;
  OUTLINED_FUNCTION_27();
}

void sub_24981FDE0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_213(v3);
    OUTLINED_FUNCTION_13_4();
  }
  else
  {
    OUTLINED_FUNCTION_218();
    OUTLINED_FUNCTION_213(v2);
    OUTLINED_FUNCTION_27();
  }
}

void HIDServiceProperties.deviceTypeHint.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_114_0();
  sub_2498202F4(v0, v1);
}

void sub_24981FE44(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.deviceTypeHint.getter();
  *a1 = v2;
  a1[1] = v3;
}

void HIDServiceProperties.deviceTypeHint.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_114_0();
  HIDServiceProperties.subscript.setter(v0, v1);
}

void HIDServiceProperties.deviceTypeHint.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.deviceTypeHint.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_27();
}

void sub_24981FEA8()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_114_0();
  sub_2498221E4(v0, v1);
}

void HIDServiceProperties.fnKeyboardUsageMap.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v26)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_55_7(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_164();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_24981FF70(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  HIDServiceProperties.fnKeyboardUsageMap.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
  a2[1] = v4;
}

void HIDServiceProperties.fnKeyboardUsageMap.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_73_3(a1, a2);
}

void HIDServiceProperties.fnKeyboardUsageMap.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.fnKeyboardUsageMap.getter(v2, v3);
  *v1 = v4;
  v1[1] = v5;
  OUTLINED_FUNCTION_27();
}

void sub_24981FFDC(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_72_4(a1, a2);
}

void HIDServiceProperties.keyboardCountryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_141_0();
  sub_249820004(v0, v1);
}

void sub_249820004(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_2498200A8()
{
  HIDServiceProperties.keyboardCountryCode.setter();
}

void HIDServiceProperties.keyboardCountryCode.setter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_141_0();
  HIDServiceProperties.subscript.setter(v0, v1, v2, v3);
}

void HIDServiceProperties.keyboardCountryCode.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.keyboardCountryCode.getter();
  OUTLINED_FUNCTION_21_14(v1, v2);
  OUTLINED_FUNCTION_27();
}

void sub_249820114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_141_0();
  sub_2498229A0(v0, v1, v2, v3);
}

void HIDServiceProperties.keyboardLanguage.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_178_0();
  OUTLINED_FUNCTION_10_14();
  v1 = OUTLINED_FUNCTION_20_16();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v24)
  {
    v15 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_55_7(v15, v16, v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_164();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_2498201D4(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.keyboardLanguage.getter();
  *a1 = v2;
  a1[1] = v3;
}

void HIDServiceProperties.keyboardLanguage.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_73_3(a1, a2);
}

void HIDServiceProperties.keyboardLanguage.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.keyboardLanguage.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_27();
}

void sub_249820240(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_72_4(a1, a2);
}

void HIDServiceProperties.keyboardStandardType.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_139();
  sub_249820004(v0, v1);
}

void sub_249820268()
{
  HIDServiceProperties.keyboardStandardType.setter();
}

void HIDServiceProperties.keyboardStandardType.setter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_139();
  HIDServiceProperties.subscript.setter(v0, v1, v2, v3);
}

void HIDServiceProperties.keyboardStandardType.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.keyboardStandardType.getter();
  OUTLINED_FUNCTION_21_14(v1, v2);
  OUTLINED_FUNCTION_27();
}

void sub_2498202D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_139();
  sub_2498229A0(v0, v1, v2, v3);
}

void HIDServiceProperties.manufacturer.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_138_0();
  sub_2498202F4(v0, v1);
}

void sub_2498202F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v26)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_55_7(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_164();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_24982039C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.manufacturer.getter();
  *a1 = v2;
  a1[1] = v3;
}

void HIDServiceProperties.manufacturer.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_138_0();
  HIDServiceProperties.subscript.setter(v0, v1);
}

void HIDServiceProperties.manufacturer.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.manufacturer.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_27();
}

void sub_249820400()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_138_0();
  sub_2498221E4(v0, v1);
}

void HIDServiceProperties.mouseAcceleration.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_91_1();
  OUTLINED_FUNCTION_10_14();
  v1 = OUTLINED_FUNCTION_20_16();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_2498204BC(uint64_t a1)
{
  HIDServiceProperties.mouseAcceleration.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.mouseAcceleration.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 20, 0x8000000249841C70);
}

void HIDServiceProperties.mouseAcceleration.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.mouseAcceleration.getter();
  OUTLINED_FUNCTION_21_14(v1, v2);
  OUTLINED_FUNCTION_27();
}

void sub_249820530(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 20, 0x8000000249841C70);
}

void HIDServiceProperties.mouseScrollAcceleration.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_179_0();
  OUTLINED_FUNCTION_10_14();
  v1 = OUTLINED_FUNCTION_20_16();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_2498205F4(uint64_t a1)
{
  HIDServiceProperties.mouseScrollAcceleration.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.mouseScrollAcceleration.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 26, 0x8000000249841C90);
}

void HIDServiceProperties.mouseScrollAcceleration.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.mouseScrollAcceleration.getter();
  OUTLINED_FUNCTION_21_14(v1, v2);
  OUTLINED_FUNCTION_27();
}

void sub_249820668(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 26, 0x8000000249841C90);
}

void HIDServiceProperties.pointerAccelerationMultiplier.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249820734(uint64_t a1)
{
  HIDServiceProperties.pointerAccelerationMultiplier.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.pointerAccelerationMultiplier.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 32, 0x8000000249841CB0);
}

void HIDServiceProperties.pointerAccelerationMultiplier.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.pointerAccelerationMultiplier.getter(v1, v2);
  OUTLINED_FUNCTION_21_14(v3, v4);
  OUTLINED_FUNCTION_27();
}

void sub_2498207A8(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 32, 0x8000000249841CB0);
}

void HIDServiceProperties.pointerAccelerationTable.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v26)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_55_7(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249820880(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  HIDServiceProperties.pointerAccelerationTable.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
  a2[1] = v4;
}

uint64_t sub_2498208A8(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_249748C6C(*a1, v2);
  return HIDServiceProperties.pointerAccelerationTable.setter(v1, v2);
}

uint64_t HIDServiceProperties.pointerAccelerationTable.setter(uint64_t a1, unint64_t a2)
{
  return OUTLINED_FUNCTION_106_0(a1, a2, 27, 0x8000000249841CE0);
}

void HIDServiceProperties.pointerAccelerationTable.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.pointerAccelerationTable.getter(v2, v3);
  *v1 = v4;
  v1[1] = v5;
  OUTLINED_FUNCTION_27();
}

void sub_24982092C(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_105_1(a1, a2);
}

void HIDServiceProperties.pointerAccelerationType.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_179_0();
  OUTLINED_FUNCTION_10_14();
  v1 = OUTLINED_FUNCTION_20_16();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v24)
  {
    v15 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_55_7(v15, v16, v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_164();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_2498209F4(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.pointerAccelerationType.getter();
  *a1 = v2;
  a1[1] = v3;
}

void HIDServiceProperties.pointerAccelerationType.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_73_3(a1, a2);
}

void HIDServiceProperties.pointerAccelerationType.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.pointerAccelerationType.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_27();
}

void sub_249820A60(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_72_4(a1, a2);
}

void HIDServiceProperties.pointerButtonCount.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249820B2C(uint64_t a1)
{
  HIDServiceProperties.pointerButtonCount.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.pointerButtonCount.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 21, 0x8000000249841D20);
}

void HIDServiceProperties.pointerButtonCount.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.pointerButtonCount.getter(v1, v2);
  OUTLINED_FUNCTION_21_14(v3, v4);
  OUTLINED_FUNCTION_27();
}

void sub_249820BA0(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 21, 0x8000000249841D20);
}

void HIDServiceProperties.pointerButtonMode.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_91_1();
  OUTLINED_FUNCTION_10_14();
  v1 = OUTLINED_FUNCTION_20_16();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249820C64(uint64_t a1)
{
  HIDServiceProperties.pointerButtonMode.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.pointerButtonMode.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 20, 0x8000000249841D40);
}

void HIDServiceProperties.pointerButtonMode.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.pointerButtonMode.getter();
  OUTLINED_FUNCTION_21_14(v1, v2);
  OUTLINED_FUNCTION_27();
}

void sub_249820CD8(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 20, 0x8000000249841D40);
}

void HIDServiceProperties.pointerResolution.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_91_1();
  OUTLINED_FUNCTION_10_14();
  v1 = OUTLINED_FUNCTION_20_16();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249820D9C(uint64_t a1)
{
  HIDServiceProperties.pointerResolution.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.pointerResolution.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 20, 0x8000000249841D60);
}

void HIDServiceProperties.pointerResolution.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.pointerResolution.getter();
  OUTLINED_FUNCTION_21_14(v1, v2);
  OUTLINED_FUNCTION_27();
}

void sub_249820E10(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 20, 0x8000000249841D60);
}

void HIDServiceProperties.pointerReportRate.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_91_1();
  OUTLINED_FUNCTION_10_14();
  v1 = OUTLINED_FUNCTION_20_16();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v25)
  {
    v15 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v15, v16, v17, v18, v19, v20, v21, v22, v23, v24);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249820ED4(uint64_t a1)
{
  HIDServiceProperties.pointerReportRate.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.pointerReportRate.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 20, 0x8000000249841D80);
}

void HIDServiceProperties.pointerReportRate.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.pointerReportRate.getter();
  OUTLINED_FUNCTION_21_14(v1, v2);
  OUTLINED_FUNCTION_27();
}

void sub_249820F48(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 20, 0x8000000249841D80);
}

uint64_t HIDServiceProperties.primaryUsagePair.getter(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  unsigned __int16 v18;
  _BYTE v19[24];
  uint64_t v20;

  OUTLINED_FUNCTION_67_4();
  sub_249837624();
  v3 = OUTLINED_FUNCTION_100_0(a2, sel___swift_objectForKeyedSubscript_);
  v4 = OUTLINED_FUNCTION_29_0();
  if (v3)
  {
    sub_2498370E4();
    v4 = OUTLINED_FUNCTION_13_3();
  }
  OUTLINED_FUNCTION_206(v4, v5, &qword_257881490, v6, v7, v8, v9);
  if (v20)
  {
    if ((OUTLINED_FUNCTION_8_25() & 1) != 0)
    {
      OUTLINED_FUNCTION_135_0();
      sub_249837624();
      v10 = OUTLINED_FUNCTION_100_0(a2, sel___swift_objectForKeyedSubscript_);
      v11 = OUTLINED_FUNCTION_29_0();
      if (v10)
      {
        sub_2498370E4();
        v11 = OUTLINED_FUNCTION_106();
      }
      OUTLINED_FUNCTION_206(v11, v12, &qword_257881490, v13, v14, v15, v16);
      if ((OUTLINED_FUNCTION_8_25() & 1) != 0)
        return v18 | (v18 << 16);
    }
  }
  else
  {
    sub_2497D5E68((uint64_t)v19, &qword_257881490);
  }
  result = sub_24983730C();
  __break(1u);
  return result;
}

uint64_t sub_249821128@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = HIDServiceProperties.primaryUsagePair.getter(a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void HIDServiceProperties.primaryUsagePair.setter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 8);
  v2 = (void *)sub_249836F58();
  objc_msgSend(v1, sel___swift_setObject_forKeyedSubscript_, v2, OUTLINED_FUNCTION_198(), 0xD000000000000010, 0x8000000249841DA0);

  OUTLINED_FUNCTION_55_0();
  v3 = (void *)sub_249836F58();
  OUTLINED_FUNCTION_135_0();
  objc_msgSend(v1, sel___swift_setObject_forKeyedSubscript_, v3, OUTLINED_FUNCTION_198(), v4, v5);

  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_2_4();
}

void HIDServiceProperties.primaryUsagePair.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;

  v2 = OUTLINED_FUNCTION_47_7(a1);
  *(_DWORD *)(v1 + 8) = HIDServiceProperties.primaryUsagePair.getter((uint64_t)v2, v3);
  OUTLINED_FUNCTION_27();
}

void sub_249821234()
{
  HIDServiceProperties.primaryUsagePair.setter();
  OUTLINED_FUNCTION_27();
}

void HIDServiceProperties.product.getter(uint64_t a1, uint64_t a2)
{
  sub_2498202F4(a1, a2);
}

void sub_24982126C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  HIDServiceProperties.product.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
  a2[1] = v4;
}

void HIDServiceProperties.product.setter(uint64_t a1, uint64_t a2)
{
  HIDServiceProperties.subscript.setter(a1, a2);
}

void HIDServiceProperties.product.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.product.getter(v2, v3);
  *v1 = v4;
  v1[1] = v5;
  OUTLINED_FUNCTION_27();
}

void sub_2498212D8(uint64_t a1, char a2)
{
  sub_2498221E4(a1, a2);
}

void HIDServiceProperties.productID.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_174_0();
  sub_249820004(v0, v1);
}

void sub_249821300()
{
  HIDServiceProperties.productID.setter();
}

void HIDServiceProperties.productID.setter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_174_0();
  HIDServiceProperties.subscript.setter(v0, v1, v2, v3);
}

void HIDServiceProperties.productID.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.productID.getter();
  OUTLINED_FUNCTION_21_14(v1, v2);
  OUTLINED_FUNCTION_27();
}

void sub_24982136C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_174_0();
  sub_2498229A0(v0, v1, v2, v3);
}

void HIDServiceProperties.reportDescriptor.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_178_0();
  OUTLINED_FUNCTION_10_14();
  v1 = OUTLINED_FUNCTION_20_16();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v24)
  {
    v15 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_55_7(v15, v16, v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249821434(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.reportDescriptor.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_24982145C(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_249748C6C(*a1, v2);
  return HIDServiceProperties.reportDescriptor.setter(v1, v2);
}

uint64_t HIDServiceProperties.reportDescriptor.setter(uint64_t a1, unint64_t a2)
{
  return OUTLINED_FUNCTION_106_0(a1, a2, 16, 0x8000000249841E20);
}

void HIDServiceProperties.reportDescriptor.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.reportDescriptor.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_27();
}

void sub_2498214E0(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_105_1(a1, a2);
}

void HIDServiceProperties.scrollAccelerationTable.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_179_0();
  OUTLINED_FUNCTION_10_14();
  v1 = OUTLINED_FUNCTION_20_16();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v24)
  {
    v15 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_55_7(v15, v16, v17, v18, v19, v20, v21, v22, v23);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_2498215B0(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.scrollAccelerationTable.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2498215D8(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_249748C6C(*a1, v2);
  return HIDServiceProperties.scrollAccelerationTable.setter(v1, v2);
}

uint64_t HIDServiceProperties.scrollAccelerationTable.setter(uint64_t a1, unint64_t a2)
{
  return OUTLINED_FUNCTION_106_0(a1, a2, 26, 0x8000000249841E40);
}

void HIDServiceProperties.scrollAccelerationTable.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.scrollAccelerationTable.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_27();
}

void sub_24982165C(uint64_t *a1, char a2)
{
  OUTLINED_FUNCTION_105_1(a1, a2);
}

void sub_249821674(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_249748C6C(*a1, v3);
    OUTLINED_FUNCTION_156_0();
    sub_249748C80(v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_156_0();
    OUTLINED_FUNCTION_10_0();
  }
}

void HIDServiceProperties.scrollAccelerationType.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v26)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_55_7(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_164();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_24982178C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  HIDServiceProperties.scrollAccelerationType.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
  a2[1] = v4;
}

void HIDServiceProperties.scrollAccelerationType.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_73_3(a1, a2);
}

void HIDServiceProperties.scrollAccelerationType.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.scrollAccelerationType.getter(v2, v3);
  *v1 = v4;
  v1[1] = v5;
  OUTLINED_FUNCTION_27();
}

void sub_2498217F8(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_72_4(a1, a2);
}

void HIDServiceProperties.scrollAccelParametricCurves.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_91_1();
  OUTLINED_FUNCTION_169();
  v1 = OUTLINED_FUNCTION_130_0();
  v2 = OUTLINED_FUNCTION_6_17(v1, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (v0)
  {
    OUTLINED_FUNCTION_5_20();
    v3 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v3, v4, &qword_257881490, v5, v6, v7);
  if (v15)
  {
    OUTLINED_FUNCTION_69_2(v8, &qword_2578805D8);
    if ((OUTLINED_FUNCTION_0_29() & 1) != 0)
    {
      OUTLINED_FUNCTION_182_0();
      OUTLINED_FUNCTION_216();
    }
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v8, &qword_257881490, v9, v10, v11, v12, v13, v14);
  }
  OUTLINED_FUNCTION_49_7();
}

void sub_2498218DC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  HIDServiceProperties.scrollAccelParametricCurves.getter();
  *a1 = v2;
}

uint64_t sub_249821904()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return HIDServiceProperties.scrollAccelParametricCurves.setter(v0);
}

uint64_t HIDServiceProperties.scrollAccelParametricCurves.setter(uint64_t a1)
{
  return sub_249821948(a1, 0xD000000000000014, 0x8000000249841E80);
}

uint64_t sub_249821948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE __dst[137];

  v5 = a1;
  if (a1)
  {
    v6 = *(_QWORD *)(a1 + 16);
    if (v6)
    {
      sub_2498371F8();
      v7 = 32;
      do
      {
        memcpy(__dst, (const void *)(v5 + v7), sizeof(__dst));
        HIDServiceProperties.HIDAccelCurve.dictionaryRepresentation.getter();
        sub_2498371D4();
        sub_249837204();
        OUTLINED_FUNCTION_208();
        sub_2498371E0();
        v7 += 144;
        --v6;
      }
      while (v6);
      v8 = OUTLINED_FUNCTION_78();
    }
    else
    {
      v8 = OUTLINED_FUNCTION_78();
    }
    OUTLINED_FUNCTION_69_2(v8, &qword_2578805E0);
    v5 = sub_249836E98();
    OUTLINED_FUNCTION_1();
  }
  return HIDServiceProperties.subscript.setter(v5, a2, a3);
}

void HIDServiceProperties.scrollAccelParametricCurves.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_144_0(a1);
  HIDServiceProperties.scrollAccelParametricCurves.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_27();
}

void sub_249821A8C(uint64_t *a1, char a2)
{
  sub_249821A98(a1, a2, (void (*)(uint64_t))HIDServiceProperties.scrollAccelParametricCurves.setter);
}

void sub_249821A98(uint64_t *a1, char a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    v4 = OUTLINED_FUNCTION_73_0();
    a3(v4);
    OUTLINED_FUNCTION_128_0();
  }
  else
  {
    a3(*a1);
    OUTLINED_FUNCTION_81();
  }
}

void HIDServiceProperties.scrollReportRate.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249821B8C(uint64_t a1)
{
  HIDServiceProperties.scrollReportRate.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.scrollReportRate.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 19, 0x8000000249841EA0);
}

void HIDServiceProperties.scrollReportRate.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.scrollReportRate.getter(v1, v2);
  OUTLINED_FUNCTION_21_14(v3, v4);
  OUTLINED_FUNCTION_27();
}

void sub_249821C00(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 19, 0x8000000249841EA0);
}

void HIDServiceProperties.scrollResolution.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249821CCC(uint64_t a1)
{
  HIDServiceProperties.scrollResolution.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.scrollResolution.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 19, 0x8000000249841EC0);
}

void HIDServiceProperties.scrollResolution.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.scrollResolution.getter(v1, v2);
  OUTLINED_FUNCTION_21_14(v3, v4);
  OUTLINED_FUNCTION_27();
}

void sub_249821D40(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 19, 0x8000000249841EC0);
}

void HIDServiceProperties.supportsGestureScrolling.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_65_4();
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249821E10(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.supportsGestureScrolling.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.supportsGestureScrolling.setter(char a1)
{
  OUTLINED_FUNCTION_32_9(a1);
}

void HIDServiceProperties.supportsGestureScrolling.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_47_7(a1);
  HIDServiceProperties.supportsGestureScrolling.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_27();
}

void sub_249821E7C(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_112_0(a1);
  OUTLINED_FUNCTION_32_9(v1);
  OUTLINED_FUNCTION_27();
}

void HIDServiceProperties.trackpadAcceleration.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249821F60(uint64_t a1)
{
  HIDServiceProperties.trackpadAcceleration.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.trackpadAcceleration.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 23, 0x8000000249841F00);
}

void HIDServiceProperties.trackpadAcceleration.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.trackpadAcceleration.getter(v1, v2);
  OUTLINED_FUNCTION_21_14(v3, v4);
  OUTLINED_FUNCTION_27();
}

void sub_249821FD4(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 23, 0x8000000249841F00);
}

void HIDServiceProperties.trackpadScrollAcceleration.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_2498220A0(uint64_t a1)
{
  HIDServiceProperties.trackpadScrollAcceleration.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.trackpadScrollAcceleration.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 29, 0x8000000249841F20);
}

void HIDServiceProperties.trackpadScrollAcceleration.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.trackpadScrollAcceleration.getter(v1, v2);
  OUTLINED_FUNCTION_21_14(v3, v4);
  OUTLINED_FUNCTION_27();
}

void sub_249822114(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 29, 0x8000000249841F20);
}

void HIDServiceProperties.transport.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_191_0();
  sub_2498202F4(v0, v1);
}

void sub_24982213C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  HIDServiceProperties.transport.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_249822164(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1;
  v7 = a1[1];
  OUTLINED_FUNCTION_138();
  a5(v6, v7);
  OUTLINED_FUNCTION_81();
}

void HIDServiceProperties.transport.setter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_191_0();
  HIDServiceProperties.subscript.setter(v0, v1);
}

void HIDServiceProperties.transport.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.transport.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_27();
}

void sub_2498221D4()
{
  uint64_t v0;
  char v1;

  OUTLINED_FUNCTION_191_0();
  sub_2498221E4(v0, v1);
}

void sub_2498221E4(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_162_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_162_0();
    OUTLINED_FUNCTION_10_0();
  }
}

void HIDServiceProperties.universalControlBuiltIn.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_65_4();
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_2498222F0(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.universalControlBuiltIn.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.universalControlBuiltIn.setter(char a1)
{
  OUTLINED_FUNCTION_32_9(a1);
}

void HIDServiceProperties.universalControlBuiltIn.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_47_7(a1);
  HIDServiceProperties.universalControlBuiltIn.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_27();
}

void sub_24982235C(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_112_0(a1);
  OUTLINED_FUNCTION_32_9(v1);
  OUTLINED_FUNCTION_27();
}

void HIDServiceProperties.universalControlVirtualService.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_65_4();
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249822444(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.universalControlVirtualService.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.universalControlVirtualService.setter(char a1)
{
  OUTLINED_FUNCTION_32_9(a1);
}

void HIDServiceProperties.universalControlVirtualService.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_47_7(a1);
  HIDServiceProperties.universalControlVirtualService.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_27();
}

void sub_2498224B0(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_112_0(a1);
  OUTLINED_FUNCTION_32_9(v1);
  OUTLINED_FUNCTION_27();
}

void HIDServiceProperties.userDeviceCreateInactive.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_2578823A8 != -1)
    swift_once();
  swift_bridgeObjectRetain_n();
  v0 = OUTLINED_FUNCTION_20_16();
  v1 = OUTLINED_FUNCTION_89_1(v0, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_29_0();
  if (v1)
  {
    OUTLINED_FUNCTION_57_7();
    v2 = OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v2, v3, &qword_257881490, v4, v5, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_23_1();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_17_15(v7, &qword_257881490, v8, v9, v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_49_7();
}

void sub_2498225E4(_BYTE *a1@<X8>)
{
  char v2;

  HIDServiceProperties.userDeviceCreateInactive.getter();
  *a1 = v2;
}

void HIDServiceProperties.userDeviceCreateInactive.setter(char a1)
{
  if (qword_2578823A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_138();
  HIDServiceProperties.subscript.setter(a1);
}

void HIDServiceProperties.userDeviceCreateInactive.modify(_QWORD *a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_47_7(a1);
  HIDServiceProperties.userDeviceCreateInactive.getter();
  *(_BYTE *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_27();
}

void sub_2498226A0(uint64_t a1)
{
  char v1;

  v1 = *(_BYTE *)(a1 + 8);
  if (qword_2578823A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_138();
  HIDServiceProperties.subscript.setter(v1);
  OUTLINED_FUNCTION_81();
}

void HIDServiceProperties.vendorID.getter(uint64_t a1, uint64_t a2)
{
  sub_249820004(a1, a2);
}

void sub_249822724(uint64_t a1)
{
  HIDServiceProperties.vendorID.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.vendorID.setter(uint64_t a1, char a2)
{
  HIDServiceProperties.subscript.setter(a1, a2 & 1, 0x4449726F646E6556, 0xE800000000000000);
}

void HIDServiceProperties.vendorID.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.vendorID.getter(v1, v2);
  OUTLINED_FUNCTION_21_14(v3, v4);
  OUTLINED_FUNCTION_27();
}

void sub_249822798(uint64_t a1, uint64_t a2)
{
  sub_2498229A0(a1, a2, 0x4449726F646E6556, 0xE800000000000000);
}

void HIDServiceProperties.reportInterval.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_115_0();
  sub_249820004(v0, v1);
}

void sub_2498227C0()
{
  HIDServiceProperties.reportInterval.setter();
}

void HIDServiceProperties.reportInterval.setter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_115_0();
  HIDServiceProperties.subscript.setter(v0, v1, v2, v3);
}

void HIDServiceProperties.reportInterval.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.reportInterval.getter();
  OUTLINED_FUNCTION_21_14(v1, v2);
  OUTLINED_FUNCTION_27();
}

void sub_24982282C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_115_0();
  sub_2498229A0(v0, v1, v2, v3);
}

void HIDServiceProperties.subinterfaceID.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v27)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_11_17(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_66_1();
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_2498228F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD))
{
  uint64_t v4;
  char v5;

  v4 = a4(a1, *(_QWORD *)(a1 + 8));
  OUTLINED_FUNCTION_21_14(v4, v5);
  OUTLINED_FUNCTION_27();
}

void sub_249822914(uint64_t a1)
{
  HIDServiceProperties.subinterfaceID.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void HIDServiceProperties.subinterfaceID.setter(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_13_16(a1, a2 & 1, 17, 0x8000000249841F40);
}

void HIDServiceProperties.subinterfaceID.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = OUTLINED_FUNCTION_9_20(a1);
  HIDServiceProperties.subinterfaceID.getter(v1, v2);
  OUTLINED_FUNCTION_21_14(v3, v4);
  OUTLINED_FUNCTION_27();
}

void sub_249822988(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_14_14(a1, a2, 17, 0x8000000249841F40);
}

void sub_2498229A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  HIDServiceProperties.subscript.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a3, a4);
  OUTLINED_FUNCTION_27();
}

uint64_t HIDServiceProperties.surfaceDimensions.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSDictionary dictionaryRepresentation;
  uint64_t v19;

  OUTLINED_FUNCTION_169();
  v3 = OUTLINED_FUNCTION_130_0();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v19)
  {
    OUTLINED_FUNCTION_69_2(v10, &qword_2578805E0);
    if ((OUTLINED_FUNCTION_0_29() & 1) != 0)
      return (unint64_t)HIDServiceProperties.HIDSurfaceDimensions.init(dictionaryRepresentation:)(dictionaryRepresentation);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
  }
  return OUTLINED_FUNCTION_164();
}

uint64_t sub_249822AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;

  result = HIDServiceProperties.surfaceDimensions.getter(a1, *(_QWORD *)(a1 + 8));
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5 & 1;
  return result;
}

uint64_t sub_249822AD4(uint64_t a1)
{
  return HIDServiceProperties.surfaceDimensions.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t HIDServiceProperties.surfaceDimensions.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 1) == 0)
    HIDServiceProperties.HIDSurfaceDimensions.dictionaryRepresentation.getter(a1, a2);
  OUTLINED_FUNCTION_218();
  return HIDServiceProperties.subscript.setter(v3, 0xD000000000000011, v4);
}

HIDUtils::HIDServiceProperties::HIDSurfaceDimensions_optional __swiftcall HIDServiceProperties.HIDSurfaceDimensions.init(dictionaryRepresentation:)(NSDictionary dictionaryRepresentation)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  Swift::Int v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Bool v23;
  Swift::Int v24;
  Swift::Int v25;
  Swift::Int v26;
  uint64_t v27;
  HIDUtils::HIDServiceProperties::HIDSurfaceDimensions_optional result;

  OUTLINED_FUNCTION_143_0();
  v2 = OUTLINED_FUNCTION_130_0();
  v3 = OUTLINED_FUNCTION_100_0(dictionaryRepresentation.super.isa, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_29_0();
  if (v3)
  {
    OUTLINED_FUNCTION_57_7();
    v4 = OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v8 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v4, v5, &qword_257881490, v6, v7, v8);
  if (!v27)
  {

    OUTLINED_FUNCTION_17_15(v16, &qword_257881490, v17, v18, v19, v20, v21, v22);
    goto LABEL_15;
  }
  if ((OUTLINED_FUNCTION_0_29() & 1) == 0)
  {

LABEL_15:
    v24 = 0;
    v9 = 0;
    v23 = 1;
    goto LABEL_16;
  }
  v9 = v26;
  OUTLINED_FUNCTION_142_0();
  OUTLINED_FUNCTION_130_0();
  v10 = OUTLINED_FUNCTION_70_2(dictionaryRepresentation.super.isa, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_41_7();
  if (v2)
  {
    OUTLINED_FUNCTION_86_1();
    OUTLINED_FUNCTION_29_0();

  }
  else
  {

    v15 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v11, v12, &qword_257881490, v13, v14, v15);
  if ((OUTLINED_FUNCTION_0_29() & 1) == 0)
    goto LABEL_15;
  v23 = 0;
  v24 = v26;
LABEL_16:
  v25 = v9;
  result.value.height = v25;
  result.value.width = v24;
  result.is_nil = v23;
  return result;
}

uint64_t HIDServiceProperties.HIDSurfaceDimensions.dictionaryRepresentation.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578824B8);
  v4 = OUTLINED_FUNCTION_217();
  *(_OWORD *)(v4 + 16) = xmmword_249838520;
  v5 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 32) = 0x746867696548;
  *(_QWORD *)(v4 + 40) = 0xE600000000000000;
  v6 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 88) = v6;
  *(_QWORD *)(v4 + 96) = 0x6874646957;
  *(_QWORD *)(v4 + 104) = 0xE500000000000000;
  *(_QWORD *)(v4 + 152) = v6;
  *(_QWORD *)(v4 + 120) = v5;
  *(_QWORD *)(v4 + 128) = a1;
  OUTLINED_FUNCTION_69_2(v4, &qword_2578805E0);
  return sub_249836F7C();
}

void HIDServiceProperties.surfaceDimensions.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)a1 = HIDServiceProperties.surfaceDimensions.getter(a1, *(_QWORD *)(v1 + 8));
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  OUTLINED_FUNCTION_27();
}

void sub_249822D8C(uint64_t a1)
{
  HIDServiceProperties.surfaceDimensions.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  OUTLINED_FUNCTION_27();
}

void HIDServiceProperties.scrollAccelerationSupport.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_65_4();
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249822E6C(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.scrollAccelerationSupport.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.scrollAccelerationSupport.setter(char a1)
{
  OUTLINED_FUNCTION_32_9(a1);
}

void HIDServiceProperties.scrollAccelerationSupport.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_47_7(a1);
  HIDServiceProperties.scrollAccelerationSupport.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_27();
}

void sub_249822ED8(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_112_0(a1);
  OUTLINED_FUNCTION_32_9(v1);
  OUTLINED_FUNCTION_27();
}

void HIDServiceProperties.pointerAccelerationSupport.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_10_14();
  v3 = OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_6_17(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_7_20();
  if (a2)
  {
    OUTLINED_FUNCTION_5_20();
    v5 = OUTLINED_FUNCTION_106();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v17)
  {
    OUTLINED_FUNCTION_0_29();
    OUTLINED_FUNCTION_65_4();
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
  }
  OUTLINED_FUNCTION_2_5();
}

void sub_249822FC0(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  char v3;

  HIDServiceProperties.pointerAccelerationSupport.getter(a1, *(_QWORD *)(a1 + 8));
  *a2 = v3;
}

void HIDServiceProperties.pointerAccelerationSupport.setter(char a1)
{
  OUTLINED_FUNCTION_32_9(a1);
}

void HIDServiceProperties.pointerAccelerationSupport.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;

  v2 = OUTLINED_FUNCTION_47_7(a1);
  HIDServiceProperties.pointerAccelerationSupport.getter((uint64_t)v2, v3);
  *(_BYTE *)(v1 + 8) = v4;
  OUTLINED_FUNCTION_27();
}

void sub_24982302C(uint64_t a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_112_0(a1);
  OUTLINED_FUNCTION_32_9(v1);
  OUTLINED_FUNCTION_27();
}

uint64_t HIDServiceProperties.property(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, _OWORD *a4@<X8>)
{
  _QWORD *v8;
  char v9;
  id v10;
  uint64_t result;
  _OWORD v12[2];

  swift_bridgeObjectRetain();
  v8 = (_QWORD *)static HIDServicePropertyKey.allCases.getter();
  v9 = sub_249823618(a1, a2, v8);
  OUTLINED_FUNCTION_78();
  if ((v9 & 1) != 0)
  {
    *(_QWORD *)&v12[0] = a1;
    *((_QWORD *)&v12[0] + 1) = a2;
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_120_0();
    v10 = OUTLINED_FUNCTION_70_2(a3, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_41_7();
    if (a3)
    {
      OUTLINED_FUNCTION_86_1();
      OUTLINED_FUNCTION_29_0();
    }
    else
    {
      memset(v12, 0, sizeof(v12));
    }
    sub_249828780((uint64_t)v12, (uint64_t)a4, &qword_257881490);
    return OUTLINED_FUNCTION_23_1();
  }
  else
  {
    result = OUTLINED_FUNCTION_23_1();
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainCubic.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainCubic.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.gainCubic.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainLinear.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainLinear.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.gainLinear.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainParabolic.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainParabolic.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.gainParabolic.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainQuartic.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t HIDServiceProperties.HIDAccelCurve.gainQuartic.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = result;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.gainQuartic.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t HIDServiceProperties.HIDAccelCurve.index.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.index.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedCubicRoot.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedCubicRoot.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = result;
  *(_BYTE *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.tangentSpeedCubicRoot.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedLinear.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedLinear.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = result;
  *(_BYTE *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.tangentSpeedLinear.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedParabolicRoot.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedParabolicRoot.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = result;
  *(_BYTE *)(v2 + 120) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.tangentSpeedParabolicRoot.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedQuarticRoot.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 128);
}

uint64_t HIDServiceProperties.HIDAccelCurve.tangentSpeedQuarticRoot.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = result;
  *(_BYTE *)(v2 + 136) = a2 & 1;
  return result;
}

uint64_t (*HIDServiceProperties.HIDAccelCurve.tangentSpeedQuarticRoot.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_2498232CC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2498232FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD v31[5];
  uint64_t v32;

  v1 = MEMORY[0x24BEE4B00];
  v32 = MEMORY[0x24BEE4B00];
  sub_2497C7A24(a1, v31);
  v2 = v31[0];
  v3 = v31[1];
  v4 = v31[3];
  v5 = v31[4];
  v6 = (unint64_t)(v31[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  while (1)
  {
    do
    {
      if (v5)
      {
        v8 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        v9 = v8 | (v4 << 6);
      }
      else
      {
        v10 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_36;
        }
        if (v10 >= v6)
          goto LABEL_34;
        v11 = *(_QWORD *)(v3 + 8 * v10);
        v12 = v4 + 1;
        if (!v11)
        {
          v12 = v4 + 2;
          if (v4 + 2 >= v6)
            goto LABEL_34;
          v11 = *(_QWORD *)(v3 + 8 * v12);
          if (!v11)
          {
            v12 = v4 + 3;
            if (v4 + 3 >= v6)
              goto LABEL_34;
            v11 = *(_QWORD *)(v3 + 8 * v12);
            if (!v11)
            {
              v12 = v4 + 4;
              if (v4 + 4 >= v6)
                goto LABEL_34;
              v11 = *(_QWORD *)(v3 + 8 * v12);
              if (!v11)
              {
                v12 = v4 + 5;
                if (v4 + 5 >= v6)
                  goto LABEL_34;
                v11 = *(_QWORD *)(v3 + 8 * v12);
                if (!v11)
                {
                  v13 = v4 + 6;
                  while (v13 < v6)
                  {
                    v11 = *(_QWORD *)(v3 + 8 * v13++);
                    if (v11)
                    {
                      v12 = v13 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_34:
                  sub_249757AC0();
                  return v1;
                }
              }
            }
          }
        }
LABEL_19:
        v5 = (v11 - 1) & v11;
        v9 = __clz(__rbit64(v11)) + (v12 << 6);
        v4 = v12;
      }
      v14 = *(_QWORD *)(v2 + 56) + 16 * v9;
    }
    while ((*(_BYTE *)(v14 + 8) & 1) != 0);
    v15 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v9);
    v16 = *v15;
    v17 = v15[1];
    v30 = *(_QWORD *)v14;
    v18 = *(_QWORD *)(v1 + 16);
    if (*(_QWORD *)(v1 + 24) <= v18)
    {
      v19 = v18 + 1;
      swift_bridgeObjectRetain();
      sub_249829C20(v19, 1);
      v1 = v32;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    sub_249837690();
    sub_249836D84();
    result = sub_2498376E4();
    v20 = v1 + 64;
    v21 = -1 << *(_BYTE *)(v1 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v1 + 64 + 8 * (v22 >> 6))) == 0)
      break;
    v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v1 + 64 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v24);
    *v29 = v16;
    v29[1] = v17;
    *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v24) = v30;
    ++*(_QWORD *)(v1 + 16);
  }
  v25 = 0;
  v26 = (unint64_t)(63 - v21) >> 6;
  while (++v23 != v26 || (v25 & 1) == 0)
  {
    v27 = v23 == v26;
    if (v23 == v26)
      v23 = 0;
    v25 |= v27;
    v28 = *(_QWORD *)(v20 + 8 * v23);
    if (v28 != -1)
    {
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
      goto LABEL_33;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2498235A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;

  v2 = a1;
  v3 = sub_249823618(a1, a2, qword_251AB52C8);
  swift_bridgeObjectRelease();
  if ((v3 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v2;
}

void *sub_249823608()
{
  return &unk_251AB52C8;
}

uint64_t sub_249823618(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = OUTLINED_FUNCTION_186_0();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (OUTLINED_FUNCTION_186_0() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

void sub_2498236C4(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_249824920(a1, (uint64_t (*)(_QWORD, _QWORD))nullsub_1, a2);
}

uint64_t sub_2498236D0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void *sub_2498236DC@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = sub_249823608();
  *a1 = result;
  return result;
}

uint64_t sub_249823700()
{
  uint64_t *v0;

  return sub_2498232CC(*v0);
}

uint64_t sub_249823708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_2498235A8(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

void sub_24982372C()
{
  sub_249823748();
}

void sub_249823748()
{
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_165_0();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_249823780()
{
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_197_0();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

uint64_t sub_2498237A8()
{
  return sub_2498237C4();
}

uint64_t sub_2498237C4()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_165_0();
  return OUTLINED_FUNCTION_128_0();
}

void sub_2498237FC()
{
  sub_2498376CC();
  OUTLINED_FUNCTION_27();
}

void sub_24982381C()
{
  sub_249823860();
}

void sub_249823834()
{
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_197_0();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_249823860()
{
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_165_0();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

uint64_t sub_249823898()
{
  sub_249827EE4();
  return sub_249837750();
}

uint64_t sub_2498238C0()
{
  sub_249827EE4();
  return sub_24983775C();
}

void HIDServiceProperties.HIDAccelCurve.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  OUTLINED_FUNCTION_48_4();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578824C0);
  OUTLINED_FUNCTION_45_4();
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_249827EE4();
  OUTLINED_FUNCTION_157_0();
  if (v0)
  {
    OUTLINED_FUNCTION_134_0();
  }
  else
  {
    OUTLINED_FUNCTION_67_4();
    v6 = OUTLINED_FUNCTION_25_10();
    v8 = v7;
    v39 = v6;
    v9 = OUTLINED_FUNCTION_18_13(0xD000000000000012);
    v40 = v10;
    v38 = v9;
    v11 = OUTLINED_FUNCTION_18_13(0xD000000000000015);
    v36 = v12;
    v37 = v11;
    v13 = OUTLINED_FUNCTION_18_13(0xD000000000000013);
    v34 = v14;
    v35 = v13;
    OUTLINED_FUNCTION_43_8();
    v15 = OUTLINED_FUNCTION_25_10();
    v32 = v16;
    v33 = v15;
    v17 = OUTLINED_FUNCTION_18_13(0xD00000000000001DLL);
    v30 = v18;
    v31 = v17;
    v19 = OUTLINED_FUNCTION_18_13(0xD00000000000001ALL);
    v28 = v20;
    v29 = v19;
    v21 = OUTLINED_FUNCTION_18_13(0xD000000000000021);
    v26 = v22;
    v27 = v21;
    v23 = OUTLINED_FUNCTION_18_13(0xD00000000000001FLL);
    v25 = v24;
    OUTLINED_FUNCTION_4_18();
    OUTLINED_FUNCTION_134_0();
    *(_QWORD *)v4 = v39;
    *(_BYTE *)(v4 + 8) = v8 & 1;
    *(_QWORD *)(v4 + 16) = v38;
    *(_BYTE *)(v4 + 24) = v40 & 1;
    *(_QWORD *)(v4 + 32) = v37;
    *(_BYTE *)(v4 + 40) = v36 & 1;
    *(_QWORD *)(v4 + 48) = v35;
    *(_BYTE *)(v4 + 56) = v34 & 1;
    *(_QWORD *)(v4 + 64) = v33;
    *(_BYTE *)(v4 + 72) = v32 & 1;
    *(_QWORD *)(v4 + 80) = v31;
    *(_BYTE *)(v4 + 88) = v30 & 1;
    *(_QWORD *)(v4 + 96) = v29;
    *(_BYTE *)(v4 + 104) = v28 & 1;
    *(_QWORD *)(v4 + 112) = v27;
    *(_BYTE *)(v4 + 120) = v26 & 1;
    *(_QWORD *)(v4 + 128) = v23;
    *(_BYTE *)(v4 + 136) = v25 & 1;
  }
  OUTLINED_FUNCTION_10_6();
}

void HIDServiceProperties.HIDAccelCurve.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_48_4();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578824D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_249827EE4();
  sub_249837744();
  OUTLINED_FUNCTION_67_4();
  v10 = 0xD000000000000011;
  v11 = v7;
  OUTLINED_FUNCTION_27_8();
  if (!v0)
  {
    OUTLINED_FUNCTION_19_17(0xD000000000000012);
    OUTLINED_FUNCTION_19_17(0xD000000000000015);
    OUTLINED_FUNCTION_19_17(0xD000000000000013);
    OUTLINED_FUNCTION_43_8();
    v10 = v8;
    v11 = v9;
    OUTLINED_FUNCTION_27_8();
    OUTLINED_FUNCTION_19_17(0xD00000000000001DLL);
    OUTLINED_FUNCTION_19_17(0xD00000000000001ALL);
    OUTLINED_FUNCTION_19_17(0xD000000000000021);
    OUTLINED_FUNCTION_19_17(0xD00000000000001FLL);
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  OUTLINED_FUNCTION_10_6();
}

void HIDServiceProperties.HIDAccelCurve.hash(into:)()
{
  _BYTE *v0;

  if (v0[8] == 1)
  {
    OUTLINED_FUNCTION_103_1();
  }
  else
  {
    OUTLINED_FUNCTION_102_1();
    OUTLINED_FUNCTION_66_4();
  }
  if (v0[24] == 1)
  {
    OUTLINED_FUNCTION_103_1();
  }
  else
  {
    OUTLINED_FUNCTION_102_1();
    OUTLINED_FUNCTION_66_4();
  }
  if (v0[40] == 1)
  {
    OUTLINED_FUNCTION_103_1();
  }
  else
  {
    OUTLINED_FUNCTION_102_1();
    OUTLINED_FUNCTION_66_4();
  }
  if (v0[56] == 1)
  {
    OUTLINED_FUNCTION_103_1();
  }
  else
  {
    OUTLINED_FUNCTION_102_1();
    OUTLINED_FUNCTION_66_4();
  }
  if (v0[72] == 1)
  {
    OUTLINED_FUNCTION_103_1();
  }
  else
  {
    OUTLINED_FUNCTION_102_1();
    OUTLINED_FUNCTION_66_4();
  }
  if (v0[88] == 1)
  {
    OUTLINED_FUNCTION_103_1();
  }
  else
  {
    OUTLINED_FUNCTION_102_1();
    OUTLINED_FUNCTION_66_4();
  }
  if (v0[104] == 1)
  {
    OUTLINED_FUNCTION_103_1();
  }
  else
  {
    OUTLINED_FUNCTION_102_1();
    OUTLINED_FUNCTION_66_4();
  }
  if (v0[120] == 1)
  {
    OUTLINED_FUNCTION_103_1();
  }
  else
  {
    OUTLINED_FUNCTION_102_1();
    OUTLINED_FUNCTION_66_4();
  }
  if (v0[136] == 1)
  {
    OUTLINED_FUNCTION_103_1();
  }
  else
  {
    OUTLINED_FUNCTION_102_1();
    sub_2498376A8();
  }
  OUTLINED_FUNCTION_81();
}

uint64_t static HIDServiceProperties.HIDAccelCurve.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;

  v2 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  v3 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      v3 = 1;
    if ((v3 & 1) != 0)
      return 0;
  }
  v4 = *(_BYTE *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  v5 = *(_BYTE *)(a2 + 56);
  if ((*(_BYTE *)(a1 + 56) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(a2 + 48))
      v5 = 1;
    if ((v5 & 1) != 0)
      return 0;
  }
  v6 = *(_BYTE *)(a2 + 72);
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 72))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
      v6 = 1;
    if ((v6 & 1) != 0)
      return 0;
  }
  v7 = *(_BYTE *)(a2 + 88);
  if ((*(_BYTE *)(a1 + 88) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 88))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 80) != *(_QWORD *)(a2 + 80))
      v7 = 1;
    if ((v7 & 1) != 0)
      return 0;
  }
  v8 = *(_BYTE *)(a2 + 104);
  if ((*(_BYTE *)(a1 + 104) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 104))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 96) != *(_QWORD *)(a2 + 96))
      v8 = 1;
    if ((v8 & 1) != 0)
      return 0;
  }
  v9 = *(_BYTE *)(a2 + 120);
  if ((*(_BYTE *)(a1 + 120) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 120))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 112) != *(_QWORD *)(a2 + 112))
      v9 = 1;
    if ((v9 & 1) != 0)
      return 0;
  }
  v10 = *(_BYTE *)(a2 + 136);
  if ((*(_BYTE *)(a1 + 136) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 136) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 128) != *(_QWORD *)(a2 + 128))
      v10 = 1;
    if ((v10 & 1) != 0)
      return 0;
  }
  return 1;
}

void HIDServiceProperties.HIDAccelCurve.hashValue.getter()
{
  OUTLINED_FUNCTION_3_4();
  HIDServiceProperties.HIDAccelCurve.hash(into:)();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_249824084(void *a1@<X8>)
{
  uint64_t v1;
  _BYTE v3[137];

  HIDServiceProperties.HIDAccelCurve.init(from:)();
  if (!v1)
    memcpy(a1, v3, 0x89uLL);
}

void sub_2498240CC()
{
  HIDServiceProperties.HIDAccelCurve.encode(to:)();
}

uint64_t sub_2498240E8()
{
  sub_249837690();
  HIDServiceProperties.HIDAccelCurve.hash(into:)();
  return sub_2498376E4();
}

uint64_t sub_249824124(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882600);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_2498291DC();
  sub_249837720();
  if (!v1)
  {
    v9 = 0x7355656369766544;
    v10 = 0xEB00000000656761;
    v7 = sub_249837420();
    v9 = 0x7355656369766544;
    v10 = 0xEF65676150656761;
    sub_249837420();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v7;
}

uint64_t sub_24982429C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  unint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882610);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2498291DC();
  sub_249837744();
  v8 = 0x7355656369766544;
  v9 = 0xEB00000000656761;
  sub_2498374E0();
  if (!v1)
  {
    v8 = 0x7355656369766544;
    v9 = 0xEF65676150656761;
    sub_2498374E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_2498243E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v6;
  uint64_t i;
  uint64_t v8;

  v3 = a1;
  if (*(_QWORD *)"DeviceUsage" == a1 && *(_QWORD *)"age" == a2)
    return v3;
  result = sub_2498375C4();
  if ((result & 1) != 0)
    return v3;
  v6 = &unk_251AB53B0;
  for (i = 1; ; ++i)
  {
    v8 = i + 1;
    if (__OFADD__(i, 1))
      break;
    if (*(v6 - 1) == v3 && *v6 == a2)
      return v3;
    result = sub_2498375C4();
    if ((result & 1) != 0)
      return v3;
    v6 += 2;
    if (v8 == 2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

void *sub_2498244B8()
{
  return &unk_251AB5378;
}

uint64_t _s8HIDUtils20HIDServicePropertiesV20HIDSurfaceDimensionsV4hash4intoys6HasherVz_tF_0()
{
  sub_2498376A8();
  return sub_2498376A8();
}

BOOL sub_2498244F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

void sub_249824508(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_249824920(a1, (uint64_t (*)(_QWORD, _QWORD))j_nullsub_1, a2);
}

void *sub_249824514@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = sub_2498244B8();
  *a1 = result;
  return result;
}

uint64_t sub_249824538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_2498243E4(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24982455C()
{
  sub_2498291DC();
  return sub_249837750();
}

uint64_t sub_249824584()
{
  sub_2498291DC();
  return sub_24983775C();
}

uint64_t sub_2498245AC(_QWORD *a1, _QWORD *a2)
{
  return sub_249818494(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_2498245C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_249824A48((uint64_t (*)(void))sub_249824124, a1);
}

uint64_t sub_2498245DC(_QWORD *a1)
{
  return sub_24982429C(a1);
}

void sub_2498245F4()
{
  sub_2498249F4();
}

uint64_t sub_24982460C()
{
  return _s8HIDUtils20HIDServicePropertiesV20HIDSurfaceDimensionsV4hash4intoys6HasherVz_tF_0();
}

BOOL sub_249824618(uint64_t *a1, uint64_t *a2)
{
  return sub_2498244F4(*a1, a1[1], *a2, a2[1]);
}

uint64_t HIDServiceProperties.HIDSurfaceDimensions.width.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDServiceProperties.HIDSurfaceDimensions.width.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDSurfaceDimensions.height.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t HIDServiceProperties.HIDSurfaceDimensions.height.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*HIDServiceProperties.HIDSurfaceDimensions.height.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDServiceProperties.HIDSurfaceDimensions.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578824D8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_40_2();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249827F20();
  sub_249837720();
  OUTLINED_FUNCTION_143_0();
  OUTLINED_FUNCTION_132_0(v3);
  OUTLINED_FUNCTION_142_0();
  v5 = OUTLINED_FUNCTION_132_0(v4);
  OUTLINED_FUNCTION_6_15();
  OUTLINED_FUNCTION_134_0();
  return v5;
}

void HIDServiceProperties.HIDSurfaceDimensions.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_48_4();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578824E8);
  OUTLINED_FUNCTION_45_4();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_249827F20();
  OUTLINED_FUNCTION_152_0();
  OUTLINED_FUNCTION_143_0();
  v12 = v8;
  v13 = v9;
  OUTLINED_FUNCTION_176_0();
  if (!v0)
  {
    OUTLINED_FUNCTION_142_0();
    v12 = v10;
    v13 = v11;
    OUTLINED_FUNCTION_176_0();
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v4);
  OUTLINED_FUNCTION_10_6();
}

uint64_t sub_249824840(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v6;
  uint64_t i;
  uint64_t v8;

  v3 = a1;
  if (*(_QWORD *)"Height" == a1 && a2 == 0xE600000000000000)
    return v3;
  result = sub_2498375C4();
  if ((result & 1) != 0)
    return v3;
  v6 = &unk_251AB53F0;
  for (i = 1; ; ++i)
  {
    v8 = i + 1;
    if (__OFADD__(i, 1))
      break;
    if (*(v6 - 1) == v3 && *v6 == a2)
      return v3;
    result = sub_2498375C4();
    if ((result & 1) != 0)
      return v3;
    v6 += 2;
    if (v8 == 2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

void *sub_249824914()
{
  return &unk_251AB53B8;
}

void sub_249824920(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD, _QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  *a3 = a2(*a1, a1[1]);
  a3[1] = v4;
  OUTLINED_FUNCTION_27();
}

void *sub_249824948@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = sub_249824914();
  *a1 = result;
  return result;
}

uint64_t sub_24982496C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_249824840(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_249824990()
{
  sub_249827F20();
  return sub_249837750();
}

uint64_t sub_2498249B8()
{
  sub_249827F20();
  return sub_24983775C();
}

BOOL static HIDServiceProperties.HIDSurfaceDimensions.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

void sub_2498249F4()
{
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_66_4();
  OUTLINED_FUNCTION_196_0();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_49_7();
}

uint64_t sub_249824A2C@<X0>(uint64_t *a1@<X8>)
{
  return sub_249824A48((uint64_t (*)(void))HIDServiceProperties.HIDSurfaceDimensions.init(from:), a1);
}

uint64_t sub_249824A48@<X0>(uint64_t (*a1)(void)@<X4>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_249824A74()
{
  HIDServiceProperties.HIDSurfaceDimensions.encode(to:)();
}

uint64_t sub_249824A8C()
{
  _QWORD *v0;

  return sub_249824504(*v0, v0[1]);
}

void sub_249824A94()
{
  OUTLINED_FUNCTION_69_3();
  OUTLINED_FUNCTION_196_0();
  OUTLINED_FUNCTION_66_4();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_49_7();
}

BOOL sub_249824AC8(uint64_t *a1, uint64_t *a2)
{
  return static HIDServiceProperties.HIDSurfaceDimensions.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

_QWORD *HIDServiceProperties.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void *v56;
  uint64_t v57;
  char v58;
  void *v59;
  uint64_t v60;
  char v61;
  void *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  void *v70;
  uint64_t v71;
  char v72;
  void *v73;
  uint64_t v74;
  char v75;
  void *v76;
  uint64_t v77;
  char v78;
  void *v79;
  uint64_t v80;
  char v81;
  void *v82;
  uint64_t v83;
  char v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  void *v90;
  uint64_t v91;
  char v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  void *v103;
  uint64_t v104;
  char v105;
  void *v106;
  uint64_t v107;
  char v108;
  void *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  char v117;
  void *v118;
  uint64_t v119;
  char v120;
  void *v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  char v125;
  void *v127;
  uint64_t v128;
  id v129;
  __int16 v130;
  __int16 v131;
  unint64_t v132;
  __int128 v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  id v138;
  id v139;
  uint64_t v140;
  uint64_t v141;

  OUTLINED_FUNCTION_48_4();
  v140 = v1;
  v141 = v2;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578824F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_40_2();
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCED8]), sel_init);
  v138 = v7;
  v8 = __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_249827F5C();
  OUTLINED_FUNCTION_157_0();
  if (v0)
  {
    OUTLINED_FUNCTION_134_0();

  }
  else
  {
    OUTLINED_FUNCTION_150_0();
    *(_QWORD *)&v133 = v9;
    *((_QWORD *)&v133 + 1) = v10;
    v11 = sub_2498373F0();
    if ((v12 & 1) != 0)
      v13 = 0;
    else
      v13 = v11;
    v137 = (_QWORD *)v13;
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_123_0();
    OUTLINED_FUNCTION_193_0((uint64_t)&unk_257882508);
    v15 = v14;
    OUTLINED_FUNCTION_195_0();
    OUTLINED_FUNCTION_71_6();
    v139 = v7;
    OUTLINED_FUNCTION_168_0();
    HIDServiceProperties.accelParametricCurves.setter(v135);
    *(_QWORD *)&v133 = v15;
    *((_QWORD *)&v133 + 1) = 0x8000000249841BB0;
    OUTLINED_FUNCTION_56_7();
    OUTLINED_FUNCTION_9_9();
    if (v16)
      v17 = 0;
    else
      v17 = (void *)OUTLINED_FUNCTION_148_0();
    OUTLINED_FUNCTION_194_0(0x8000000249841BB0);
    v18 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v18, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    strcpy((char *)&v133, "Authenticated");
    HIWORD(v133) = -4864;
    OUTLINED_FUNCTION_56_7();
    OUTLINED_FUNCTION_9_9();
    if (v16)
      v19 = 0;
    else
      v19 = (void *)OUTLINED_FUNCTION_148_0();
    strcpy((char *)&v133, "Authenticated");
    v20 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v20, sel___swift_setObject_forKeyedSubscript_);

    swift_unknownObjectRelease();
    strcpy((char *)&v133, "CapsLockDelay");
    HIWORD(v133) = -4864;
    OUTLINED_FUNCTION_2_30();
    if ((v21 & 1) != 0)
      v22 = 0;
    else
      v22 = (void *)sub_249836F58();
    strcpy((char *)&v133, "CapsLockDelay");
    v23 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v23, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = 0xD000000000000016;
    *((_QWORD *)&v133 + 1) = 0x8000000249841BD0;
    OUTLINED_FUNCTION_56_7();
    OUTLINED_FUNCTION_9_9();
    if (v16)
      v24 = 0;
    else
      v24 = (void *)OUTLINED_FUNCTION_148_0();
    v25 = 0xEE00746E69486570;
    *(_QWORD *)&v133 = 0xD000000000000016;
    *((_QWORD *)&v133 + 1) = 0x8000000249841BD0;
    v26 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v26, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    OUTLINED_FUNCTION_188_0();
    OUTLINED_FUNCTION_29_8();
    if (v27)
    {
      OUTLINED_FUNCTION_125_0();
      OUTLINED_FUNCTION_64_6();
    }
    else
    {
      v24 = 0;
    }
    OUTLINED_FUNCTION_188_0();
    v28 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v28, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_168_0();
    OUTLINED_FUNCTION_67_4();
    *(_QWORD *)&v133 = 0xEE00746E6948656CLL;
    *((_QWORD *)&v133 + 1) = v29;
    OUTLINED_FUNCTION_193_0((uint64_t)&unk_257882520);
    OUTLINED_FUNCTION_195_0();
    OUTLINED_FUNCTION_71_6();
    if (v135)
    {
      v30 = *(_QWORD *)(v135 + 16);
      if (v30)
      {
        *(_QWORD *)&v133 = MEMORY[0x24BEE4AF8];
        sub_249817ED4(0, v30, 0);
        v31 = v133;
        v32 = *(_QWORD *)(v133 + 16);
        v33 = 4 * v32;
        v34 = (uint64_t *)(v135 + 40);
        do
        {
          v35 = *(v34 - 1);
          v36 = *v34;
          *(_QWORD *)&v133 = v31;
          v37 = *(_QWORD *)(v31 + 24);
          v38 = v32 + 1;
          if (v32 >= v37 >> 1)
          {
            v131 = v35;
            v132 = v32 + 1;
            v130 = v36;
            sub_249817ED4(v37 > 1, v32 + 1, 1);
            LOWORD(v36) = v130;
            LOWORD(v35) = v131;
            v38 = v132;
            v31 = v133;
          }
          v34 += 2;
          *(_QWORD *)(v31 + 16) = v38;
          v39 = v31 + v33;
          *(_WORD *)(v39 + 32) = v36;
          *(_WORD *)(v39 + 34) = v35;
          v33 += 4;
          v32 = v38;
          --v30;
        }
        while (v30);
        v25 = v31;
        swift_bridgeObjectRelease();
      }
      else
      {
        OUTLINED_FUNCTION_72_3();
        v25 = MEMORY[0x24BEE4AF8];
      }
      HIDServiceProperties.deviceUsagePairs.setter(v25);
      OUTLINED_FUNCTION_168_0();
    }
    v40 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_257882498);
    OUTLINED_FUNCTION_95_1(v25 + 5);
    sub_2498286F0((uint64_t)&unk_257882530);
    OUTLINED_FUNCTION_195_0();
    OUTLINED_FUNCTION_71_6();
    if (v135)
    {
      sub_249836C88();
      OUTLINED_FUNCTION_64_6();
    }
    else
    {
      v40 = 0;
    }
    OUTLINED_FUNCTION_95_1(0xD000000000000019);
    v41 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v41, sel___swift_setObject_forKeyedSubscript_);
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = 0xD000000000000012;
    *((_QWORD *)&v133 + 1) = 0x8000000249841C30;
    OUTLINED_FUNCTION_29_8();
    if (v42)
    {
      OUTLINED_FUNCTION_125_0();
      OUTLINED_FUNCTION_64_6();
    }
    else
    {
      v40 = 0;
    }
    v43 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v43, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = 0x437972746E756F43;
    *((_QWORD *)&v133 + 1) = 0xEB0000000065646FLL;
    OUTLINED_FUNCTION_2_30();
    if ((v44 & 1) != 0)
      v45 = 0;
    else
      v45 = (void *)sub_249836F58();
    v46 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v46, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = 0xEE00746E6948656CLL;
    *((_QWORD *)&v133 + 1) = 0x8000000249841C50;
    OUTLINED_FUNCTION_29_8();
    if (v47)
    {
      OUTLINED_FUNCTION_125_0();
      OUTLINED_FUNCTION_64_6();
    }
    else
    {
      v45 = 0;
    }
    v48 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v48, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    strcpy((char *)&v133, "StandardType");
    BYTE13(v133) = 0;
    HIWORD(v133) = -5120;
    OUTLINED_FUNCTION_2_30();
    if ((v49 & 1) != 0)
      v50 = 0;
    else
      v50 = (void *)sub_249836F58();
    strcpy((char *)&v133, "StandardType");
    v51 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v51, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    strcpy((char *)&v133, "Manufacturer");
    BYTE13(v133) = 0;
    HIWORD(v133) = -5120;
    OUTLINED_FUNCTION_29_8();
    if (v52)
    {
      OUTLINED_FUNCTION_125_0();
      OUTLINED_FUNCTION_64_6();
    }
    else
    {
      v50 = 0;
    }
    OUTLINED_FUNCTION_205();
    *(_QWORD *)&v133 = v53;
    *((_QWORD *)&v133 + 1) = 0xEC00000072657275;
    v54 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v54, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    OUTLINED_FUNCTION_194_0(0x8000000249841C70);
    OUTLINED_FUNCTION_2_30();
    if ((v55 & 1) != 0)
      v56 = 0;
    else
      v56 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_204();
    v57 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v57, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = "rdLanguage";
    *((_QWORD *)&v133 + 1) = 0x8000000249841C90;
    OUTLINED_FUNCTION_2_30();
    if ((v58 & 1) != 0)
      v59 = 0;
    else
      v59 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_95_1(0xD00000000000001ALL);
    v60 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v60, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = 0xD000000000000020;
    *((_QWORD *)&v133 + 1) = 0x8000000249841CB0;
    OUTLINED_FUNCTION_2_30();
    if ((v61 & 1) != 0)
      v62 = 0;
    else
      v62 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_95_1(0xD000000000000020);
    v63 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v63, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    OUTLINED_FUNCTION_214(0xD00000000000001BLL);
    sub_2497F2324();
    OUTLINED_FUNCTION_133_0();
    OUTLINED_FUNCTION_71_6();
    if (*((_QWORD *)&v133 + 1) >> 60 == 15)
      v64 = 0;
    else
      v64 = (void *)sub_24983691C();
    OUTLINED_FUNCTION_214(0xD00000000000001BLL);
    v65 = (void *)OUTLINED_FUNCTION_81_1();
    OUTLINED_FUNCTION_185_0((uint64_t)v65, sel___swift_setObject_forKeyedSubscript_);
    sub_249748C80(v133, *((unint64_t *)&v133 + 1));

    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_180_0();
    *(_QWORD *)&v133 = v66;
    *((_QWORD *)&v133 + 1) = 0x8000000249841D00;
    OUTLINED_FUNCTION_29_8();
    if (v67)
    {
      OUTLINED_FUNCTION_125_0();
      OUTLINED_FUNCTION_64_6();
    }
    else
    {
      v65 = 0;
    }
    OUTLINED_FUNCTION_95_1(0xD00000000000001ALL);
    v68 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v68, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = 0xD000000000000015;
    *((_QWORD *)&v133 + 1) = 0x8000000249841D20;
    OUTLINED_FUNCTION_2_30();
    if ((v69 & 1) != 0)
      v70 = 0;
    else
      v70 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_95_1(0xD000000000000015);
    v71 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v71, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = 0xD000000000000014;
    *((_QWORD *)&v133 + 1) = 0x8000000249841D40;
    OUTLINED_FUNCTION_2_30();
    if ((v72 & 1) != 0)
      v73 = 0;
    else
      v73 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_203();
    v74 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v74, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = 0xD000000000000014;
    *((_QWORD *)&v133 + 1) = 0x8000000249841D80;
    OUTLINED_FUNCTION_2_30();
    if ((v75 & 1) != 0)
      v76 = 0;
    else
      v76 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_204();
    v77 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v77, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = "HIDPointerResolution";
    *((_QWORD *)&v133 + 1) = 0x8000000249841D60;
    OUTLINED_FUNCTION_2_30();
    if ((v78 & 1) != 0)
      v79 = 0;
    else
      v79 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_194_0(0x8000000249841D60);
    v80 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v80, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    strcpy((char *)&v133, "PrimaryUsage");
    BYTE13(v133) = 0;
    HIWORD(v133) = -5120;
    OUTLINED_FUNCTION_2_30();
    if ((v81 & 1) != 0)
      v82 = 0;
    else
      v82 = (void *)sub_249836F58();
    strcpy((char *)&v133, "PrimaryUsage");
    v83 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v83, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = 0xEE00746E6948656CLL;
    *((_QWORD *)&v133 + 1) = 0x8000000249841DA0;
    OUTLINED_FUNCTION_2_30();
    if ((v84 & 1) != 0)
      v85 = 0;
    else
      v85 = (void *)sub_249836F58();
    v86 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v86, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = 0x746375646F7250;
    *((_QWORD *)&v133 + 1) = 0xE700000000000000;
    OUTLINED_FUNCTION_29_8();
    if (v87)
    {
      OUTLINED_FUNCTION_125_0();
      OUTLINED_FUNCTION_64_6();
    }
    else
    {
      v85 = 0;
    }
    v88 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v88, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    *(_QWORD *)&v133 = 0x49746375646F7250;
    *((_QWORD *)&v133 + 1) = 0xE900000000000044;
    OUTLINED_FUNCTION_2_30();
    if ((v89 & 1) != 0)
      v90 = 0;
    else
      v90 = (void *)sub_249836F58();
    v91 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v91, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    strcpy((char *)&v133, "ReportInterval");
    HIBYTE(v133) = -18;
    OUTLINED_FUNCTION_2_30();
    if ((v92 & 1) != 0)
      v93 = 0;
    else
      v93 = (void *)sub_249836F58();
    strcpy((char *)&v133, "ReportInterval");
    HIBYTE(v133) = -18;
    v94 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v94, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    OUTLINED_FUNCTION_180_0();
    OUTLINED_FUNCTION_214(v95);
    OUTLINED_FUNCTION_133_0();
    OUTLINED_FUNCTION_71_6();
    if (*((_QWORD *)&v133 + 1) >> 60 == 15)
      v96 = 0;
    else
      v96 = (void *)sub_24983691C();
    OUTLINED_FUNCTION_180_0();
    OUTLINED_FUNCTION_214(v97);
    v98 = (void *)OUTLINED_FUNCTION_81_1();
    OUTLINED_FUNCTION_185_0((uint64_t)v98, sel___swift_setObject_forKeyedSubscript_);
    sub_249748C80(v133, *((unint64_t *)&v133 + 1));

    OUTLINED_FUNCTION_13_3();
    *(_QWORD *)&v133 = 0xD000000000000019;
    *((_QWORD *)&v133 + 1) = 0x8000000249841E60;
    OUTLINED_FUNCTION_29_8();
    if (v99)
    {
      OUTLINED_FUNCTION_125_0();
      OUTLINED_FUNCTION_64_6();
    }
    else
    {
      v98 = 0;
    }
    OUTLINED_FUNCTION_95_1(0xD000000000000019);
    v100 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_4_27(v100, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_36_10();
    OUTLINED_FUNCTION_67_4();
    *(_QWORD *)&v133 = 0xD000000000000014;
    *((_QWORD *)&v133 + 1) = v101;
    OUTLINED_FUNCTION_195_0();
    OUTLINED_FUNCTION_71_6();
    HIDServiceProperties.scrollAccelParametricCurves.setter(v135);
    *(_QWORD *)&v133 = 0xD000000000000013;
    *((_QWORD *)&v133 + 1) = 0x8000000249841EA0;
    OUTLINED_FUNCTION_2_30();
    if ((v102 & 1) != 0)
      v103 = 0;
    else
      v103 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_203();
    v104 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_34_11(v104, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_93_0();
    *(_QWORD *)&v133 = 0xD000000000000013;
    *((_QWORD *)&v133 + 1) = 0x8000000249841EC0;
    OUTLINED_FUNCTION_2_30();
    if ((v105 & 1) != 0)
      v106 = 0;
    else
      v106 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_203();
    v107 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_34_11(v107, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_93_0();
    *(_QWORD *)&v133 = 0xD000000000000011;
    *((_QWORD *)&v133 + 1) = 0x8000000249841F40;
    OUTLINED_FUNCTION_2_30();
    if ((v108 & 1) != 0)
      v109 = 0;
    else
      v109 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_203();
    v110 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_34_11(v110, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_93_0();
    *(_QWORD *)&v133 = 0xD000000000000018;
    *((_QWORD *)&v133 + 1) = 0x8000000249841EE0;
    OUTLINED_FUNCTION_56_7();
    OUTLINED_FUNCTION_9_9();
    if (v16)
      v111 = 0;
    else
      v111 = (void *)OUTLINED_FUNCTION_148_0();
    OUTLINED_FUNCTION_95_1(0xD000000000000018);
    v112 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_34_11(v112, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_67_4();
    v135 = 0xD000000000000011;
    v136 = v113;
    sub_249828010();
    OUTLINED_FUNCTION_133_0();
    OUTLINED_FUNCTION_71_6();
    HIDServiceProperties.surfaceDimensions.setter(v133, *((uint64_t *)&v133 + 1), v134);
    OUTLINED_FUNCTION_199();
    OUTLINED_FUNCTION_29_8();
    if (v114)
    {
      v115 = (void *)sub_249836D18();
      swift_bridgeObjectRelease();
    }
    else
    {
      v115 = 0;
    }
    OUTLINED_FUNCTION_199();
    v116 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_34_11(v116, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_93_0();
    *(_QWORD *)&v133 = 0xD000000000000017;
    *((_QWORD *)&v133 + 1) = 0x8000000249841F00;
    OUTLINED_FUNCTION_2_30();
    if ((v117 & 1) != 0)
      v118 = 0;
    else
      v118 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_95_1(0xD000000000000017);
    v119 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_34_11(v119, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_93_0();
    *(_QWORD *)&v133 = 0xD00000000000001DLL;
    *((_QWORD *)&v133 + 1) = 0x8000000249841F20;
    OUTLINED_FUNCTION_2_30();
    if ((v120 & 1) != 0)
      v121 = 0;
    else
      v121 = (void *)sub_249836F58();
    OUTLINED_FUNCTION_95_1(0xD00000000000001DLL);
    v122 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_34_11(v122, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_93_0();
    *(_QWORD *)&v133 = 0xD000000000000017;
    *((_QWORD *)&v133 + 1) = 0x8000000249841B90;
    OUTLINED_FUNCTION_56_7();
    OUTLINED_FUNCTION_9_9();
    if (v16)
      v123 = 0;
    else
      v123 = (void *)OUTLINED_FUNCTION_148_0();
    OUTLINED_FUNCTION_95_1(0xD000000000000017);
    v124 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_34_11(v124, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_93_0();
    *(_QWORD *)&v133 = 0x4449726F646E6556;
    *((_QWORD *)&v133 + 1) = 0xE800000000000000;
    OUTLINED_FUNCTION_2_30();
    if ((v125 & 1) != 0)
      v127 = 0;
    else
      v127 = (void *)sub_249836F58();
    *(_QWORD *)&v133 = 0x4449726F646E6556;
    *((_QWORD *)&v133 + 1) = 0xE800000000000000;
    v128 = OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_34_11(v128, sel___swift_setObject_forKeyedSubscript_);

    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_32_6(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    v8 = v137;
    v129 = v138;
    OUTLINED_FUNCTION_134_0();

  }
  return v8;
}

void HIDServiceProperties.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  unint64_t v55;
  const char *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unsigned __int16 *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  char *v111;
  uint64_t v112;
  HIDUtils::HIDServiceProperties::HIDSurfaceDimensions_optional v113;
  Swift::Bool is_nil;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  const char *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  _OWORD v124[2];
  __int128 v125;
  Swift::Bool v126;
  uint64_t v127;
  void *v128;

  OUTLINED_FUNCTION_48_4();
  v128 = v2;
  v4 = v3;
  v6 = v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882540);
  OUTLINED_FUNCTION_45_4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_249827F5C();
  OUTLINED_FUNCTION_152_0();
  if (!v4 || (OUTLINED_FUNCTION_150_0(), *(_QWORD *)&v125 = v11, *((_QWORD *)&v125 + 1) = v12, sub_24983751C(), !v0))
  {
    strcpy((char *)v124, "HIDAccelCurves");
    HIBYTE(v124[0]) = -18;
    v13 = objc_msgSend(v128, sel___swift_objectForKeyedSubscript_, sub_249837624());
    swift_unknownObjectRelease();
    v122 = v1;
    if (v13)
    {
      OUTLINED_FUNCTION_38_6();
      v14 = OUTLINED_FUNCTION_13_3();
    }
    else
    {
      OUTLINED_FUNCTION_84_0();
    }
    OUTLINED_FUNCTION_37_8(v14, v15, &qword_257881490);
    if (v127)
    {
      OUTLINED_FUNCTION_69_2(v16, &qword_2578805D8);
      if ((OUTLINED_FUNCTION_24_14() & 1) != 0)
      {
        v17 = v123;
        v18 = sub_24981CEAC();

        goto LABEL_12;
      }
    }
    else
    {
      OUTLINED_FUNCTION_82_0(v16, &qword_257881490);
    }
    v18 = 0;
LABEL_12:
    *(_QWORD *)&v124[0] = v18;
    strcpy((char *)&v125, "HIDAccelCurves");
    HIBYTE(v125) = -18;
    v19 = OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_193_0((uint64_t)&unk_257882548);
    v21 = v20;
    OUTLINED_FUNCTION_136_0();
    OUTLINED_FUNCTION_77_3();
    if (v0)
    {
      swift_bridgeObjectRelease();
LABEL_27:
      (*(void (**)(char *, uint64_t))(v122 + 8))(v10, v7);
      goto LABEL_28;
    }
    v121 = v21;
    OUTLINED_FUNCTION_168_0();
    OUTLINED_FUNCTION_72_3();
    *(_QWORD *)&v125 = 0xEE00736576727543;
    *((_QWORD *)&v125 + 1) = 0x8000000249841BB0;
    v22 = OUTLINED_FUNCTION_81_1();
    v23 = OUTLINED_FUNCTION_45_8(v22, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_46_6();
    if (&unk_257882500)
    {
      OUTLINED_FUNCTION_38_6();
      v24 = OUTLINED_FUNCTION_13_3();
    }
    else
    {
      OUTLINED_FUNCTION_84_0();
    }
    OUTLINED_FUNCTION_37_8(v24, v25, &qword_257881490);
    if (v127)
    {
      OUTLINED_FUNCTION_24_14();
      OUTLINED_FUNCTION_90_1();
    }
    else
    {
      OUTLINED_FUNCTION_82_0(v26, &qword_257881490);
    }
    *(_QWORD *)&v125 = 0xEE00736576727543;
    *((_QWORD *)&v125 + 1) = 0x8000000249841BB0;
    OUTLINED_FUNCTION_58_6();
    v120 = v19;
    strcpy((char *)&v125, "Authenticated");
    HIWORD(v125) = -4864;
    v27 = OUTLINED_FUNCTION_81_1();
    v28 = OUTLINED_FUNCTION_45_8(v27, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_46_6();
    if (&unk_257882500)
    {
      OUTLINED_FUNCTION_38_6();
      v29 = OUTLINED_FUNCTION_13_3();
    }
    else
    {
      OUTLINED_FUNCTION_84_0();
    }
    OUTLINED_FUNCTION_37_8(v29, v30, &qword_257881490);
    if (v127)
    {
      OUTLINED_FUNCTION_24_14();
      OUTLINED_FUNCTION_90_1();
    }
    else
    {
      OUTLINED_FUNCTION_82_0(v31, &qword_257881490);
    }
    strcpy((char *)&v125, "Authenticated");
    HIWORD(v125) = -4864;
    OUTLINED_FUNCTION_58_6();
    *(_QWORD *)&v125 = 0x6E492D746C697542;
    *((_QWORD *)&v125 + 1) = 0xE800000000000000;
    v32 = OUTLINED_FUNCTION_81_1();
    v33 = OUTLINED_FUNCTION_45_8(v32, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_46_6();
    if (&unk_257882500)
    {
      OUTLINED_FUNCTION_38_6();
      v34 = OUTLINED_FUNCTION_13_3();
    }
    else
    {
      OUTLINED_FUNCTION_84_0();
    }
    OUTLINED_FUNCTION_37_8(v34, v35, &qword_257881490);
    if (v127)
    {
      OUTLINED_FUNCTION_24_14();
      OUTLINED_FUNCTION_90_1();
    }
    else
    {
      OUTLINED_FUNCTION_82_0(v36, &qword_257881490);
    }
    *(_QWORD *)&v125 = 0xEE00736576727546;
    *((_QWORD *)&v125 + 1) = 0x8000000249841B90;
    OUTLINED_FUNCTION_58_6();
    strcpy((char *)&v125, "CapsLockDelay");
    HIWORD(v125) = -4864;
    v37 = OUTLINED_FUNCTION_81_1();
    v38 = OUTLINED_FUNCTION_45_8(v37, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_46_6();
    if (&unk_257882500)
    {
      OUTLINED_FUNCTION_38_6();
      v39 = OUTLINED_FUNCTION_13_3();
    }
    else
    {
      OUTLINED_FUNCTION_84_0();
    }
    OUTLINED_FUNCTION_37_8(v39, v40, &qword_257881490);
    if (v127)
    {
      v42 = OUTLINED_FUNCTION_24_14();
      OUTLINED_FUNCTION_187_0(v42);
    }
    else
    {
      OUTLINED_FUNCTION_82_0(v41, &qword_257881490);
      OUTLINED_FUNCTION_66_1();
    }
    strcpy((char *)&v125, "CapsLockDelay");
    HIWORD(v125) = -4864;
    OUTLINED_FUNCTION_3_25();
    OUTLINED_FUNCTION_211(0xEE00736576727545);
    v43 = OUTLINED_FUNCTION_81_1();
    v44 = OUTLINED_FUNCTION_45_8(v43, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_46_6();
    if (&unk_257882500)
    {
      OUTLINED_FUNCTION_38_6();
      v45 = OUTLINED_FUNCTION_13_3();
    }
    else
    {
      OUTLINED_FUNCTION_84_0();
    }
    v47 = MEMORY[0x24BEE4AD8];
    OUTLINED_FUNCTION_37_8(v45, v46, &qword_257881490);
    if (v127)
    {
      OUTLINED_FUNCTION_24_14();
      OUTLINED_FUNCTION_90_1();
    }
    else
    {
      OUTLINED_FUNCTION_82_0(v48, &qword_257881490);
    }
    OUTLINED_FUNCTION_211(0xEE00736576727545);
    OUTLINED_FUNCTION_58_6();
    strcpy((char *)&v125, "DeviceTypeHint");
    HIBYTE(v125) = -18;
    v49 = OUTLINED_FUNCTION_81_1();
    v50 = OUTLINED_FUNCTION_45_8(v49, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_46_6();
    if (v47)
    {
      OUTLINED_FUNCTION_38_6();
      v51 = OUTLINED_FUNCTION_13_3();
    }
    else
    {
      OUTLINED_FUNCTION_84_0();
    }
    OUTLINED_FUNCTION_37_8(v51, v52, &qword_257881490);
    if (v127)
    {
      v54 = OUTLINED_FUNCTION_24_14();
      OUTLINED_FUNCTION_78_3(v54, (uint64_t)v123);
    }
    else
    {
      OUTLINED_FUNCTION_82_0(v53, &qword_257881490);
    }
    strcpy((char *)&v125, "DeviceTypeHint");
    HIBYTE(v125) = -18;
    OUTLINED_FUNCTION_39_7();
    OUTLINED_FUNCTION_72_3();
    v55 = 0xEE0073657672753FLL;
    v56 = "CapsLockLanguageSwitch";
    *(_QWORD *)&v124[0] = 0xEE0073657672753FLL;
    *((_QWORD *)&v124[0] + 1) = 0x8000000249841BF0;
    v57 = sub_249837624();
    v58 = OUTLINED_FUNCTION_45_8(v57, sel___swift_objectForKeyedSubscript_);
    OUTLINED_FUNCTION_46_6();
    if (v47)
    {
      OUTLINED_FUNCTION_38_6();
      v59 = OUTLINED_FUNCTION_13_3();
    }
    else
    {
      OUTLINED_FUNCTION_84_0();
    }
    OUTLINED_FUNCTION_37_8(v59, v60, &qword_257881490);
    if (v127)
    {
      OUTLINED_FUNCTION_69_2(v61, &qword_2578805D8);
      if ((OUTLINED_FUNCTION_24_14() & 1) != 0)
      {
        v62 = v123;
        v63 = sub_24981D0BC(v123);

LABEL_61:
        v64 = *((_QWORD *)v63 + 2);
        if (v64)
        {
          v118 = "CapsLockLanguageSwitch";
          v119 = 0xEE0073657672753FLL;
          *(_QWORD *)&v125 = MEMORY[0x24BEE4AF8];
          sub_249817EF0(0, v64, 0);
          v65 = v125;
          v66 = *(_QWORD *)(v125 + 16);
          v67 = 16 * v66;
          v117 = v63;
          v68 = (unsigned __int16 *)(v63 + 34);
          do
          {
            v69 = *(v68 - 1);
            v70 = *v68;
            *(_QWORD *)&v125 = v65;
            v71 = *(_QWORD *)(v65 + 24);
            v72 = v66 + 1;
            if (v66 >= v71 >> 1)
            {
              v115 = v70;
              v116 = v69;
              sub_249817EF0(v71 > 1, v66 + 1, 1);
              v70 = v115;
              v69 = v116;
              v65 = v125;
            }
            v68 += 2;
            *(_QWORD *)(v65 + 16) = v72;
            v73 = v65 + v67;
            *(_QWORD *)(v73 + 32) = v70;
            *(_QWORD *)(v73 + 40) = v69;
            v67 += 16;
            v66 = v72;
            --v64;
          }
          while (v64);
          swift_bridgeObjectRelease();
          v56 = v118;
          v55 = v119;
        }
        else
        {
          swift_bridgeObjectRelease();
          v65 = MEMORY[0x24BEE4AF8];
        }
        *(_QWORD *)&v124[0] = v65;
        *(_QWORD *)&v125 = v55;
        *((_QWORD *)&v125 + 1) = (unint64_t)v56 | 0x8000000000000000;
        OUTLINED_FUNCTION_21_8();
        OUTLINED_FUNCTION_193_0((uint64_t)&unk_257882558);
        OUTLINED_FUNCTION_136_0();
        OUTLINED_FUNCTION_77_3();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_211(0xD000000000000019);
        v74 = OUTLINED_FUNCTION_81_1();
        v75 = OUTLINED_FUNCTION_45_8(v74, sel___swift_objectForKeyedSubscript_);
        OUTLINED_FUNCTION_46_6();
        if (&unk_257882518)
        {
          OUTLINED_FUNCTION_38_6();
          v76 = OUTLINED_FUNCTION_13_3();
        }
        else
        {
          OUTLINED_FUNCTION_84_0();
        }
        OUTLINED_FUNCTION_37_8(v76, v77, &qword_257881490);
        if (v127)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257882498);
          if (OUTLINED_FUNCTION_24_14())
            v79 = v123;
          else
            v79 = 0;
        }
        else
        {
          OUTLINED_FUNCTION_82_0(v78, &qword_257881490);
          v79 = 0;
        }
        *(_QWORD *)&v124[0] = v79;
        OUTLINED_FUNCTION_211(0xD000000000000019);
        v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882498);
        sub_2498286F0((uint64_t)&unk_257882568);
        OUTLINED_FUNCTION_136_0();
        OUTLINED_FUNCTION_77_3();
        OUTLINED_FUNCTION_72_3();
        OUTLINED_FUNCTION_168_0();
        *(_QWORD *)&v125 = 0xD000000000000012;
        *((_QWORD *)&v125 + 1) = 0x8000000249841C30;
        v81 = OUTLINED_FUNCTION_81_1();
        v82 = OUTLINED_FUNCTION_45_8(v81, sel___swift_objectForKeyedSubscript_);
        OUTLINED_FUNCTION_46_6();
        if (v80)
        {
          OUTLINED_FUNCTION_38_6();
          v83 = OUTLINED_FUNCTION_13_3();
        }
        else
        {
          OUTLINED_FUNCTION_84_0();
        }
        OUTLINED_FUNCTION_37_8(v83, v84, &qword_257881490);
        if (v127)
        {
          v86 = OUTLINED_FUNCTION_24_14();
          OUTLINED_FUNCTION_78_3(v86, (uint64_t)v123);
        }
        else
        {
          OUTLINED_FUNCTION_82_0(v85, &qword_257881490);
        }
        *(_QWORD *)&v125 = 0xD000000000000012;
        *((_QWORD *)&v125 + 1) = 0x8000000249841C30;
        OUTLINED_FUNCTION_39_7();
        OUTLINED_FUNCTION_72_3();
        *(_QWORD *)&v125 = 0x437972746E756F43;
        *((_QWORD *)&v125 + 1) = 0xEB0000000065646FLL;
        v87 = OUTLINED_FUNCTION_81_1();
        v88 = OUTLINED_FUNCTION_45_8(v87, sel___swift_objectForKeyedSubscript_);
        OUTLINED_FUNCTION_46_6();
        if (v80)
        {
          OUTLINED_FUNCTION_38_6();
          v89 = OUTLINED_FUNCTION_13_3();
        }
        else
        {
          OUTLINED_FUNCTION_84_0();
        }
        OUTLINED_FUNCTION_37_8(v89, v90, &qword_257881490);
        if (v127)
        {
          v92 = OUTLINED_FUNCTION_24_14();
          OUTLINED_FUNCTION_187_0(v92);
        }
        else
        {
          OUTLINED_FUNCTION_82_0(v91, &qword_257881490);
          OUTLINED_FUNCTION_66_1();
        }
        *(_QWORD *)&v125 = 0x437972746E756F43;
        *((_QWORD *)&v125 + 1) = 0xEB0000000065646FLL;
        OUTLINED_FUNCTION_3_25();
        *(_QWORD *)&v125 = v55;
        *((_QWORD *)&v125 + 1) = 0x8000000249841C50;
        v93 = OUTLINED_FUNCTION_81_1();
        v94 = OUTLINED_FUNCTION_45_8(v93, sel___swift_objectForKeyedSubscript_);
        OUTLINED_FUNCTION_46_6();
        if (v80)
        {
          OUTLINED_FUNCTION_38_6();
          v95 = OUTLINED_FUNCTION_13_3();
        }
        else
        {
          OUTLINED_FUNCTION_84_0();
        }
        OUTLINED_FUNCTION_37_8(v95, v96, &qword_257881490);
        if (v127)
        {
          v98 = OUTLINED_FUNCTION_24_14();
          OUTLINED_FUNCTION_78_3(v98, (uint64_t)v123);
        }
        else
        {
          OUTLINED_FUNCTION_82_0(v97, &qword_257881490);
        }
        *(_QWORD *)&v125 = v55;
        *((_QWORD *)&v125 + 1) = 0x8000000249841C50;
        OUTLINED_FUNCTION_39_7();
        OUTLINED_FUNCTION_72_3();
        OUTLINED_FUNCTION_53_5();
        strcpy((char *)&v125, "StandardType");
        BYTE13(v125) = 0;
        HIWORD(v125) = -5120;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_158_0();
        strcpy((char *)&v125, "Manufacturer");
        BYTE13(v125) = 0;
        HIWORD(v125) = -5120;
        OUTLINED_FUNCTION_39_7();
        OUTLINED_FUNCTION_72_3();
        OUTLINED_FUNCTION_51_8();
        *(_QWORD *)&v125 = v55;
        *((_QWORD *)&v125 + 1) = 0x74636166756E614DLL;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_53_5();
        *(_QWORD *)&v125 = v55 + 6;
        *((_QWORD *)&v125 + 1) = 0x8000000249841C90;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_53_5();
        *(_QWORD *)&v125 = v55 + 12;
        *((_QWORD *)&v125 + 1) = 0x8000000249841CB0;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_145_0();
        v100 = v99;
        *(_QWORD *)&v125 = v99;
        *((_QWORD *)&v125 + 1) = v101;
        *(_QWORD *)&v124[0] = v55 + 7;
        *((_QWORD *)&v124[0] + 1) = 0x8000000249841CB0;
        sub_2497F2360();
        OUTLINED_FUNCTION_183();
        v119 = v102;
        OUTLINED_FUNCTION_77_3();
        OUTLINED_FUNCTION_147_0();
        OUTLINED_FUNCTION_146();
        *(_QWORD *)&v125 = v55 + 6;
        *((_QWORD *)&v125 + 1) = v100;
        OUTLINED_FUNCTION_39_7();
        OUTLINED_FUNCTION_72_3();
        OUTLINED_FUNCTION_53_5();
        *(_QWORD *)&v125 = v55 + 1;
        *((_QWORD *)&v125 + 1) = 0x8000000249841D20;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_51_8();
        *(_QWORD *)&v125 = v55;
        *((_QWORD *)&v125 + 1) = v55 + 1;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_51_8();
        *(_QWORD *)&v125 = v55;
        *((_QWORD *)&v125 + 1) = v55 + 1;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_51_8();
        *(_QWORD *)&v125 = v55;
        *((_QWORD *)&v125 + 1) = v55 + 1;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_53_5();
        strcpy((char *)&v125, "PrimaryUsage");
        BYTE13(v125) = 0;
        HIWORD(v125) = -5120;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_53_5();
        *(_QWORD *)&v125 = v55;
        *((_QWORD *)&v125 + 1) = 0x8000000249841DA0;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_158_0();
        v104 = v103;
        *(_QWORD *)&v125 = 0x746375646F7250;
        *((_QWORD *)&v125 + 1) = 0xE700000000000000;
        OUTLINED_FUNCTION_39_7();
        OUTLINED_FUNCTION_72_3();
        OUTLINED_FUNCTION_53_5();
        *(_QWORD *)&v125 = 0x49746375646F7250;
        *((_QWORD *)&v125 + 1) = 0xE900000000000044;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_53_5();
        strcpy((char *)&v125, "ReportInterval");
        HIBYTE(v125) = -18;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_145_0();
        v106 = v105;
        *(_QWORD *)&v125 = v105;
        *((_QWORD *)&v125 + 1) = v107;
        *(_QWORD *)&v124[0] = v55 + 6;
        *((_QWORD *)&v124[0] + 1) = v104;
        OUTLINED_FUNCTION_183();
        OUTLINED_FUNCTION_77_3();
        OUTLINED_FUNCTION_147_0();
        OUTLINED_FUNCTION_146();
        *(_QWORD *)&v125 = v55 + 5;
        *((_QWORD *)&v125 + 1) = v106;
        OUTLINED_FUNCTION_39_7();
        OUTLINED_FUNCTION_72_3();
        v109 = HIDServiceProperties.subscript.getter(0xD000000000000014, 0x8000000249841E80, v108, v128);
        if (v109)
        {
          v110 = (void *)v109;
          v111 = sub_24981CEAC();

        }
        else
        {
          v111 = 0;
        }
        *(_QWORD *)&v124[0] = v111;
        *(_QWORD *)&v125 = v55;
        *((_QWORD *)&v125 + 1) = 0x8000000249841E80;
        OUTLINED_FUNCTION_136_0();
        OUTLINED_FUNCTION_77_3();
        OUTLINED_FUNCTION_72_3();
        OUTLINED_FUNCTION_53_5();
        *(_QWORD *)&v125 = v55 - 1;
        *((_QWORD *)&v125 + 1) = 0x8000000249841EA0;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_53_5();
        *(_QWORD *)&v125 = v55 - 1;
        *((_QWORD *)&v125 + 1) = 0x8000000249841EC0;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_53_5();
        *(_QWORD *)&v125 = v55 - 3;
        *((_QWORD *)&v125 + 1) = 0x8000000249841F40;
        OUTLINED_FUNCTION_3_25();
        HIDServiceProperties.subscript.getter();
        *(_QWORD *)&v125 = v55 + 4;
        *((_QWORD *)&v125 + 1) = 0x8000000249841EE0;
        OUTLINED_FUNCTION_58_6();
        v113.value.width = HIDServiceProperties.subscript.getter(v55 - 3, 0x8000000249841F60, v112, v128);
        if (v113.value.width)
        {
          v113 = HIDServiceProperties.HIDSurfaceDimensions.init(dictionaryRepresentation:)((NSDictionary)v113.value.width);
          is_nil = v113.is_nil;
        }
        else
        {
          v113.value.height = 0;
          is_nil = 1;
        }
        *(_QWORD *)&v125 = v113.value.width;
        *((_QWORD *)&v125 + 1) = v113.value.height;
        v126 = is_nil;
        *(_QWORD *)&v124[0] = v55 - 3;
        *((_QWORD *)&v124[0] + 1) = 0x8000000249841F60;
        sub_249828744();
        OUTLINED_FUNCTION_183();
        OUTLINED_FUNCTION_77_3();
        OUTLINED_FUNCTION_158_0();
        *(_QWORD *)&v125 = 0x726F70736E617254;
        *((_QWORD *)&v125 + 1) = 0xE900000000000074;
        OUTLINED_FUNCTION_39_7();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_53_5();
        *(_QWORD *)&v125 = v55 + 3;
        *((_QWORD *)&v125 + 1) = 0x8000000249841F00;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_53_5();
        *(_QWORD *)&v125 = v55 + 9;
        *((_QWORD *)&v125 + 1) = 0x8000000249841F20;
        OUTLINED_FUNCTION_3_25();
        OUTLINED_FUNCTION_53_5();
        *(_QWORD *)&v125 = 0x4449726F646E6556;
        *((_QWORD *)&v125 + 1) = 0xE800000000000000;
        OUTLINED_FUNCTION_3_25();
        goto LABEL_27;
      }
    }
    else
    {
      OUTLINED_FUNCTION_82_0(v61, &qword_257881490);
    }
    v63 = (char *)MEMORY[0x24BEE4AF8];
    goto LABEL_61;
  }
  (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v7);
LABEL_28:
  OUTLINED_FUNCTION_10_6();
}

uint64_t sub_249827090(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t result;
  void *v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[24];
  uint64_t v15;
  void *v16;

  *(_QWORD *)&v12 = 0xD000000000000010;
  *((_QWORD *)&v12 + 1) = 0x8000000249841DA0;
  v3 = objc_msgSend(a2, sel___swift_objectForKeyedSubscript_, sub_249837624(), v12);
  swift_unknownObjectRelease();
  if (v3)
  {
    sub_2498370E4();
    swift_unknownObjectRelease();
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  sub_249828780((uint64_t)&v12, (uint64_t)v14, &qword_257881490);
  if (!v15)
  {
    sub_2497D5E68((uint64_t)v14, &qword_257881490);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_249783D14(0, (unint64_t *)&qword_2578805A8);
    v5 = 0xD000000000000022;
    v6 = 0x8000000249842020;
LABEL_17:
    NSError.init(NSPOSIXErrorDomain:debugDescription:__file:__line:)(22, v5, v6);
    return swift_willThrow();
  }
  strcpy((char *)&v12, "PrimaryUsage");
  BYTE13(v12) = 0;
  HIWORD(v12) = -5120;
  v4 = objc_msgSend(a2, sel___swift_objectForKeyedSubscript_, sub_249837624());
  swift_unknownObjectRelease();
  if (v4)
  {
    sub_2498370E4();
    swift_unknownObjectRelease();
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  sub_249828780((uint64_t)&v12, (uint64_t)v14, &qword_257881490);
  if (!v15)
  {
    sub_2497D5E68((uint64_t)v14, &qword_257881490);
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    sub_249783D14(0, (unint64_t *)&qword_2578805A8);
    v5 = 0xD00000000000001DLL;
    v6 = 0x8000000249842050;
    goto LABEL_17;
  }
  *(_QWORD *)&v12 = 0xD000000000000010;
  *((_QWORD *)&v12 + 1) = 0x8000000249841BF0;
  v7 = objc_msgSend(a2, sel___swift_objectForKeyedSubscript_, sub_249837624());
  swift_unknownObjectRelease();
  if (v7)
  {
    sub_2498370E4();
    swift_unknownObjectRelease();
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  sub_249828780((uint64_t)&v12, (uint64_t)v14, &qword_257881490);
  if (v15)
  {
    sub_249783D14(0, &qword_2578805D8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v9 = v16;
      v10 = sub_24981D0BC(v16);

      goto LABEL_25;
    }
  }
  else
  {
    sub_2497D5E68((uint64_t)v14, &qword_257881490);
  }
  v10 = (char *)MEMORY[0x24BEE4AF8];
LABEL_25:
  v11 = *((_QWORD *)v10 + 2);
  result = swift_bridgeObjectRelease();
  if (!v11)
  {
    sub_249783D14(0, (unint64_t *)&qword_2578805A8);
    v5 = 0xD000000000000022;
    v6 = 0x8000000249842070;
    goto LABEL_17;
  }
  return result;
}

uint64_t HIDServiceProperties.init(service:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t);
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  id v31;

  v3 = v2;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCED8]), sel_init);
  ObjectType = swift_getObjectType();
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
  v8 = v5;
  v9 = v7(ObjectType, a2);
  v10 = static HIDServicePropertyKey.allCases.getter();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v26 = v9;
    v31 = v8;
    v12 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 48);
    v13 = (uint64_t *)(v10 + 40);
    do
    {
      v15 = *(v13 - 1);
      v14 = *v13;
      OUTLINED_FUNCTION_138();
      v12(&v27, v15, v14, ObjectType, a2);
      if (v28)
      {
        sub_24974BBA8(&v27, &v29);
        __swift_project_boxed_opaque_existential_1(&v29, v30);
        v16 = sub_2498375B8();
        *(_QWORD *)&v27 = v15;
        *((_QWORD *)&v27 + 1) = v14;
        OUTLINED_FUNCTION_138();
        objc_msgSend(v31, sel___swift_setObject_forKeyedSubscript_, v16, sub_249837624());
        OUTLINED_FUNCTION_93_0();
        v17 = swift_unknownObjectRelease();
        OUTLINED_FUNCTION_201(v17, v18, v19, v20, v21, v22, v23, v24);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_2497D5E68((uint64_t)&v27, &qword_257881490);
      }
      v13 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v8 = v31;
    v9 = v26;
    v3 = v2;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_249827090(v9, v8);

  if (v3)
  OUTLINED_FUNCTION_13_3();
  return v9;
}

id HIDServiceProperties.init(serviceID:properties:)(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v41;
  int64_t v42;
  __int128 v43;
  _OWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  void *v48;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCED8]), sel_init);
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v42 = (unint64_t)(v4 + 63) >> 6;
  result = v3;
  v48 = result;
  v8 = 0;
  v41 = a2 + 64;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
LABEL_6:
      v11 = *(_QWORD *)(a2 + 56);
      v12 = (_QWORD *)(*(_QWORD *)(a2 + 48) + 16 * v10);
      v13 = v12[1];
      *(_QWORD *)&v43 = *v12;
      *((_QWORD *)&v43 + 1) = v13;
      sub_24974BC28(v11 + 32 * v10, (uint64_t)v44);
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      return result;
    }
    if (v14 >= v42)
    {
      v16 = v8;
    }
    else
    {
      v15 = *(_QWORD *)(v41 + 8 * v14);
      if (v15)
        goto LABEL_10;
      v16 = v8 + 1;
      if (v8 + 2 < v42)
      {
        v15 = *(_QWORD *)(v41 + 8 * (v8 + 2));
        if (v15)
        {
          v14 = v8 + 2;
LABEL_10:
          v6 = (v15 - 1) & v15;
          v10 = __clz(__rbit64(v15)) + (v14 << 6);
          v8 = v14;
          goto LABEL_6;
        }
        v16 = v8 + 2;
        if (v8 + 3 < v42)
        {
          v15 = *(_QWORD *)(v41 + 8 * (v8 + 3));
          if (v15)
          {
            v14 = v8 + 3;
            goto LABEL_10;
          }
          v14 = v8 + 4;
          v16 = v8 + 3;
          if (v8 + 4 < v42)
          {
            v15 = *(_QWORD *)(v41 + 8 * v14);
            if (v15)
              goto LABEL_10;
            while (v8 + 5 < v42)
            {
              v15 = *(_QWORD *)(a2 + 104 + 8 * v8++);
              if (v15)
              {
                v14 = v8 + 4;
                goto LABEL_10;
              }
            }
            v16 = v42 - 1;
          }
        }
      }
    }
    v6 = 0;
    memset(v44, 0, sizeof(v44));
    v8 = v16;
    v43 = 0u;
LABEL_13:
    sub_249828780((uint64_t)&v43, (uint64_t)&v45, &qword_257882578);
    v17 = v46;
    if (!v46)
      break;
    v18 = v45;
    sub_24974BBA8(&v47, &v43);
    v19 = (_QWORD *)static HIDServicePropertyKey.allCases.getter();
    v20 = sub_249823618(v18, v17, v19);
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
    {
      __swift_project_boxed_opaque_existential_1(&v43, *((uint64_t *)&v44[0] + 1));
      v21 = sub_2498375B8();
      swift_bridgeObjectRetain();
      objc_msgSend(v48, sel___swift_setObject_forKeyedSubscript_, v21, sub_249837624());
      swift_unknownObjectRelease();
      v22 = OUTLINED_FUNCTION_13_3();
      OUTLINED_FUNCTION_201(v22, v23, v24, v25, v26, v27, v28, v29);
      result = (id)swift_bridgeObjectRelease();
    }
    else
    {
      v30 = swift_bridgeObjectRelease();
      result = (id)OUTLINED_FUNCTION_201(v30, v31, v32, v33, v34, v35, v36, v37);
    }
  }
  swift_release();
  v38 = v48;
  sub_249827090(a1, v48);

  if (v39)
  return (id)a1;
}

void HIDServiceProperties.init(usages:)(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCED8]), sel_init);
  if (*(_QWORD *)(a1 + 16))
  {
    HIDServiceProperties.primaryUsagePair.setter();
    HIDServiceProperties.deviceUsagePairs.setter(a1);
  }
  else
  {
    v3 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_69_2(v3, (unint64_t *)&qword_2578805A8);
    OUTLINED_FUNCTION_218();
    NSError.init(NSPOSIXErrorDomain:debugDescription:__file:__line:)(22, 0xD000000000000022, v4);
    swift_willThrow();

  }
}

_QWORD *sub_249827A10@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  uint64_t v4;

  result = HIDServiceProperties.init(from:)();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

void sub_249827A38()
{
  HIDServiceProperties.encode(to:)();
}

uint64_t static HIDServiceProperties.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a3)
    return 0;
  OUTLINED_FUNCTION_69_2(a1, &qword_257882580);
  return sub_249837060() & 1;
}

uint64_t sub_249827AAC(uint64_t *a1, uint64_t *a2)
{
  return static HIDServiceProperties.== infix(_:_:)(*a1, a1[1], *a2);
}

void HIDServiceProperties.hash(into:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  sub_2498376D8();
  v4 = a3;
  sub_24983706C();

}

void HIDServiceProperties.hashValue.getter(uint64_t a1, void *a2)
{
  id v3;

  OUTLINED_FUNCTION_3_4();
  sub_2498376D8();
  v3 = a2;
  sub_24983706C();

  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_49_7();
}

void sub_249827B58()
{
  uint64_t v0;

  HIDServiceProperties.hashValue.getter(*(_QWORD *)v0, *(void **)(v0 + 8));
}

void sub_249827B60(uint64_t a1)
{
  uint64_t v1;

  HIDServiceProperties.hash(into:)(a1, *(_QWORD *)v1, *(void **)(v1 + 8));
}

uint64_t sub_249827B68()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  sub_249837690();
  sub_2498376D8();
  v2 = v1;
  sub_24983706C();

  return sub_2498376E4();
}

void sub_249827BC8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_249827BD4(uint64_t a1, uint64_t a2)
{
  if (!a2)
    return 0;
  sub_249836DB4();
  sub_249836DB4();
  return 2625692192;
}

uint64_t HIDServiceProperties.description.getter(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;

  v3 = a2;
  HIDDeviceType.init(properties:)(a1, v3);
  sub_249836DB4();
  swift_bridgeObjectRelease();
  sub_249836DB4();
  sub_2498287AC();
  sub_249836E20();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  sub_249836DB4();
  OUTLINED_FUNCTION_20_16();
  v4 = OUTLINED_FUNCTION_70_2(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_5_4();
  if (v4)
  {
    OUTLINED_FUNCTION_57_7();
    v5 = OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v9 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v5, v6, &qword_257881490, v7, v8, v9);
  if (v50)
  {
    v17 = OUTLINED_FUNCTION_0_29();
    v25 = OUTLINED_FUNCTION_55_7(v17, v18, v19, v20, v21, v22, v23, v24, v49);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v10, &qword_257881490, v11, v12, v13, v14, v15, v16);
    v25 = 0;
  }
  OUTLINED_FUNCTION_192_0(v25);
  OUTLINED_FUNCTION_1();
  sub_249836DB4();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_20_16();
  v26 = OUTLINED_FUNCTION_70_2(v3, sel___swift_objectForKeyedSubscript_);
  OUTLINED_FUNCTION_5_4();
  if (v26)
  {
    OUTLINED_FUNCTION_57_7();
    v27 = OUTLINED_FUNCTION_13_3();
  }
  else
  {
    v31 = OUTLINED_FUNCTION_16_14();
  }
  OUTLINED_FUNCTION_1_27(v27, v28, &qword_257881490, v29, v30, v31);
  if (v50)
  {
    v39 = OUTLINED_FUNCTION_0_29();
    v47 = OUTLINED_FUNCTION_55_7(v39, v40, v41, v42, v43, v44, v45, v46, v49);
  }
  else
  {
    OUTLINED_FUNCTION_17_15(v32, &qword_257881490, v33, v34, v35, v36, v37, v38);
    v47 = 0;
  }
  OUTLINED_FUNCTION_192_0(v47);
  OUTLINED_FUNCTION_1();
  sub_249836DB4();
  OUTLINED_FUNCTION_42();
  return 0;
}

uint64_t sub_249827EDC()
{
  uint64_t v0;

  return HIDServiceProperties.description.getter(*(_QWORD *)v0, *(void **)(v0 + 8));
}

unint64_t sub_249827EE4()
{
  unint64_t result;

  result = qword_2578824C8;
  if (!qword_2578824C8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DE2C, &type metadata for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey);
    atomic_store(result, (unint64_t *)&qword_2578824C8);
  }
  return result;
}

unint64_t sub_249827F20()
{
  unint64_t result;

  result = qword_2578824E0;
  if (!qword_2578824E0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DDDC, &type metadata for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey);
    atomic_store(result, (unint64_t *)&qword_2578824E0);
  }
  return result;
}

unint64_t sub_249827F5C()
{
  unint64_t result;

  result = qword_2578824F8;
  if (!qword_2578824F8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServicePropertyKey, &type metadata for HIDServicePropertyKey);
    atomic_store(result, (unint64_t *)&qword_2578824F8);
  }
  return result;
}

unint64_t sub_249827F98()
{
  unint64_t result;

  result = qword_257882510;
  if (!qword_257882510)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServiceProperties.HIDAccelCurve, &type metadata for HIDServiceProperties.HIDAccelCurve);
    atomic_store(result, (unint64_t *)&qword_257882510);
  }
  return result;
}

unint64_t sub_249827FD4()
{
  unint64_t result;

  result = qword_257882528;
  if (!qword_257882528)
  {
    result = MEMORY[0x24BCF8F94]("͉'\b\\c", &type metadata for HIDServiceProperties.HIDDeviceUsagePair);
    atomic_store(result, (unint64_t *)&qword_257882528);
  }
  return result;
}

unint64_t sub_249828010()
{
  unint64_t result;

  result = qword_257882538;
  if (!qword_257882538)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServiceProperties.HIDSurfaceDimensions, &type metadata for HIDServiceProperties.HIDSurfaceDimensions);
    atomic_store(result, (unint64_t *)&qword_257882538);
  }
  return result;
}

char *sub_24982804C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882668);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_249817698((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_249828320(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

char *sub_249828140(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882630);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 144);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_2498176F8((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24982843C(0, v8, v12, a4);
  }
  return v10;
}

char *sub_249828234(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882410);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_249817530((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_249828534(0, v8, v12, a4);
  }
  return v10;
}

uint64_t sub_249828320(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257882648);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_249837360();
  __break(1u);
  return result;
}

char *sub_24982843C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 144 * a1 + 32);
    v6 = 9 * v4;
    v7 = &__dst[16 * v6];
    if (v5 >= v7 || &v5[16 * v6] <= __dst)
    {
      memcpy(__dst, v5, 16 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)sub_249837360();
  __break(1u);
  return result;
}

char *sub_249828534(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_249837360();
  __break(1u);
  return result;
}

unint64_t sub_249828624()
{
  unint64_t result;

  result = qword_257882550;
  if (!qword_257882550)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServiceProperties.HIDAccelCurve, &type metadata for HIDServiceProperties.HIDAccelCurve);
    atomic_store(result, (unint64_t *)&qword_257882550);
  }
  return result;
}

void sub_249828660(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;

  if (!OUTLINED_FUNCTION_215(a1))
  {
    v5 = v4;
    v6 = v3;
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(v2);
    v8 = v6();
    atomic_store(MEMORY[0x24BCF8F94](v5, v7, &v8), v1);
  }
  OUTLINED_FUNCTION_12_2();
}

unint64_t sub_2498286B4()
{
  unint64_t result;

  result = qword_257882560;
  if (!qword_257882560)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DD8C, &type metadata for HIDServiceProperties.HIDDeviceUsagePair);
    atomic_store(result, (unint64_t *)&qword_257882560);
  }
  return result;
}

void sub_2498286F0(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  if (!OUTLINED_FUNCTION_215(a1))
  {
    v5 = v4;
    v6 = v3;
    v7 = v2;
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257882498);
    v9[0] = v7;
    v9[1] = v6;
    atomic_store(MEMORY[0x24BCF8F94](v5, v8, v9), v1);
  }
  OUTLINED_FUNCTION_12_2();
}

unint64_t sub_249828744()
{
  unint64_t result;

  result = qword_257882570;
  if (!qword_257882570)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServiceProperties.HIDSurfaceDimensions, &type metadata for HIDServiceProperties.HIDSurfaceDimensions);
    atomic_store(result, (unint64_t *)&qword_257882570);
  }
  return result;
}

void sub_249828780(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_177_0(a1, a2, a3);
  OUTLINED_FUNCTION_202(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_27();
}

unint64_t sub_2498287AC()
{
  unint64_t result;

  result = qword_257882588;
  if (!qword_257882588)
  {
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE45A0], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_257882588);
  }
  return result;
}

unint64_t sub_2498287EC()
{
  unint64_t result;

  result = qword_257882590;
  if (!qword_257882590)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServiceProperties.HIDAccelCurve, &type metadata for HIDServiceProperties.HIDAccelCurve);
    atomic_store(result, (unint64_t *)&qword_257882590);
  }
  return result;
}

unint64_t sub_24982882C()
{
  unint64_t result;

  result = qword_257882598;
  if (!qword_257882598)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServiceProperties.HIDSurfaceDimensions, &type metadata for HIDServiceProperties.HIDSurfaceDimensions);
    atomic_store(result, (unint64_t *)&qword_257882598);
  }
  return result;
}

unint64_t sub_24982886C()
{
  unint64_t result;

  result = qword_2578825A0;
  if (!qword_2578825A0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServiceProperties, &type metadata for HIDServiceProperties);
    atomic_store(result, (unint64_t *)&qword_2578825A0);
  }
  return result;
}

void sub_2498288B8(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_24981DDCC(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))HIDServiceProperties.subscript.getter, a4);
}

void sub_2498288F0(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_24981DDCC(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))HIDServiceProperties.subscript.getter, a4);
}

void sub_24982891C(id *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_24981E2A0(a1, a2, a3, a4, (void (*)(id, uint64_t, uint64_t))HIDServiceProperties.subscript.setter);
}

void sub_249828944(id *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  sub_24981E2A0(a1, a2, a3, a4, (void (*)(id, uint64_t, uint64_t))HIDServiceProperties.subscript.setter);
}

void sub_249828984(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_107_1(a1);
  HIDServiceProperties.appleVendorSupported.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2498289A4(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_107_1(a1);
  HIDServiceProperties.authenticatedDevice.setter();
  OUTLINED_FUNCTION_27();
}

void sub_2498289C4(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_107_1(a1);
  HIDServiceProperties.builtIn.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2498289E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.capsLockDelay.getter);
}

void sub_249828A04(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_107_1(a1);
  HIDServiceProperties.capsLockLanguageSwitch.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249828A34(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249822164(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))HIDServiceProperties.deviceTypeHint.setter);
}

void sub_249828A54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249822164(a1, a2, a3, a4, HIDServiceProperties.fnKeyboardUsageMap.setter);
}

void sub_249828A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.keyboardCountryCode.getter);
}

void sub_249828A94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249822164(a1, a2, a3, a4, HIDServiceProperties.keyboardLanguage.setter);
}

void sub_249828AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.keyboardStandardType.getter);
}

void sub_249828AD4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249822164(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))HIDServiceProperties.manufacturer.setter);
}

void sub_249828AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.mouseAcceleration.getter);
}

void sub_249828B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.mouseScrollAcceleration.getter);
}

void sub_249828B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.pointerAccelerationMultiplier.getter);
}

void sub_249828B5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249822164(a1, a2, a3, a4, HIDServiceProperties.pointerAccelerationType.setter);
}

void sub_249828B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.pointerButtonCount.getter);
}

void sub_249828B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.pointerButtonMode.getter);
}

void sub_249828BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.pointerResolution.getter);
}

void sub_249828BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.pointerReportRate.getter);
}

void sub_249828BFC()
{
  HIDServiceProperties.primaryUsagePair.setter();
  OUTLINED_FUNCTION_27();
}

void sub_249828C20(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249822164(a1, a2, a3, a4, HIDServiceProperties.product.setter);
}

void sub_249828C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.productID.getter);
}

void sub_249828C70(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249822164(a1, a2, a3, a4, HIDServiceProperties.scrollAccelerationType.setter);
}

void sub_249828C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.scrollReportRate.getter);
}

void sub_249828CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.scrollResolution.getter);
}

void sub_249828CD8(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_107_1(a1);
  HIDServiceProperties.supportsGestureScrolling.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249828CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.trackpadAcceleration.getter);
}

void sub_249828D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.trackpadScrollAcceleration.getter);
}

void sub_249828D38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_249822164(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))HIDServiceProperties.transport.setter);
}

void sub_249828D58(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_107_1(a1);
  HIDServiceProperties.universalControlBuiltIn.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249828D78(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_107_1(a1);
  HIDServiceProperties.universalControlVirtualService.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249828D98(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_107_1(a1);
  HIDServiceProperties.userDeviceCreateInactive.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249828DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.vendorID.getter);
}

void sub_249828DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.reportInterval.getter);
}

void sub_249828DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2498228F0(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD))HIDServiceProperties.subinterfaceID.getter);
}

void sub_249828E20(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_107_1(a1);
  HIDServiceProperties.scrollAccelerationSupport.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249828E40(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_107_1(a1);
  HIDServiceProperties.pointerAccelerationSupport.setter(v1);
  OUTLINED_FUNCTION_27();
}

_QWORD *initializeBufferWithCopyOfBuffer for HIDServiceProperties(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

void destroy for HIDServiceProperties(uint64_t a1)
{

}

_QWORD *assignWithCopy for HIDServiceProperties(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for HIDServiceProperties(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;

  v3 = a2[1];
  v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

void type metadata accessor for HIDServiceProperties()
{
  OUTLINED_FUNCTION_29_4();
}

void *__swift_memcpy137_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x89uLL);
}

uint64_t getEnumTagSinglePayload for HIDServiceProperties.HIDAccelCurve(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 137))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HIDServiceProperties.HIDAccelCurve(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 136) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 137) = v3;
  return result;
}

void type metadata accessor for HIDServiceProperties.HIDAccelCurve()
{
  OUTLINED_FUNCTION_29_4();
}

void type metadata accessor for HIDServiceProperties.HIDSurfaceDimensions()
{
  OUTLINED_FUNCTION_29_4();
}

ValueMetadata *type metadata accessor for HIDServiceProperties.HIDDeviceUsagePair()
{
  return &type metadata for HIDServiceProperties.HIDDeviceUsagePair;
}

ValueMetadata *type metadata accessor for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey()
{
  return &type metadata for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey;
}

ValueMetadata *type metadata accessor for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey()
{
  return &type metadata for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey;
}

unint64_t sub_249828FD8()
{
  unint64_t result;

  result = qword_2578825A8;
  if (!qword_2578825A8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DAD4, &type metadata for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey);
    atomic_store(result, (unint64_t *)&qword_2578825A8);
  }
  return result;
}

void sub_249829014()
{
  sub_24982A3E4((uint64_t)&unk_2578825B0);
}

unint64_t sub_24982903C()
{
  unint64_t result;

  result = qword_2578825C0;
  if (!qword_2578825C0)
  {
    result = MEMORY[0x24BCF8F94]("͋'\b8e", &type metadata for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey);
    atomic_store(result, (unint64_t *)&qword_2578825C0);
  }
  return result;
}

void sub_249829078()
{
  sub_24982A3E4((uint64_t)&unk_2578825C8);
}

unint64_t sub_2498290A0()
{
  unint64_t result;

  result = qword_2578825D8;
  if (!qword_2578825D8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DD24, &type metadata for HIDServiceProperties.HIDDeviceUsagePair);
    atomic_store(result, (unint64_t *)&qword_2578825D8);
  }
  return result;
}

unint64_t sub_2498290E0()
{
  unint64_t result;

  result = qword_2578825E0;
  if (!qword_2578825E0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DC24, &type metadata for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey);
    atomic_store(result, (unint64_t *)&qword_2578825E0);
  }
  return result;
}

unint64_t sub_249829120()
{
  unint64_t result;

  result = qword_2578825E8;
  if (!qword_2578825E8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DC4C, &type metadata for HIDServiceProperties.HIDSurfaceDimensions.HIDSurfaceDimensionsKey);
    atomic_store(result, (unint64_t *)&qword_2578825E8);
  }
  return result;
}

unint64_t sub_249829160()
{
  unint64_t result;

  result = qword_2578825F0;
  if (!qword_2578825F0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DAFC, &type metadata for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey);
    atomic_store(result, (unint64_t *)&qword_2578825F0);
  }
  return result;
}

unint64_t sub_2498291A0()
{
  unint64_t result;

  result = qword_2578825F8;
  if (!qword_2578825F8)
  {
    result = MEMORY[0x24BCF8F94]("Ռ'\b4f", &type metadata for HIDServiceProperties.HIDAccelCurve.HIDAccelCurveKey);
    atomic_store(result, (unint64_t *)&qword_2578825F8);
  }
  return result;
}

unint64_t sub_2498291DC()
{
  unint64_t result;

  result = qword_257882608;
  if (!qword_257882608)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DFC0, &type metadata for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey);
    atomic_store(result, (unint64_t *)&qword_257882608);
  }
  return result;
}

void sub_249829218(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;
  _OWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  id v31;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v6 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_24982A2D4(v6, (uint64_t)&v28, &qword_257882648);
    v8 = v28;
    v7 = v29;
    v26 = v28;
    v27 = v29;
    sub_24974BBA8(&v30, v25);
    v9 = (_QWORD *)*a3;
    v11 = sub_2497F2594();
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_24983763C();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v10;
    if (v9[3] < v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257880690);
      sub_24983727C();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v19 = (_QWORD *)(v18[6] + 16 * v11);
    *v19 = v8;
    v19[1] = v7;
    sub_24974BBA8(v25, (_OWORD *)(v18[7] + 32 * v11));
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v18[2] = v22;
    v6 += 48;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_249829928(v14, a2 & 1);
  v16 = sub_2497F2594();
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v11 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v31 = v23;
  v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257881240);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_249837168();
  sub_249836DB4();
  sub_249837264();
  sub_249836DB4();
  sub_24983730C();
  __break(1u);
}

void sub_249829508(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  void *v33;
  id v34;
  _QWORD v35[3];
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;

  v40 = a3;
  v6 = type metadata accessor for PropertyListNode();
  v39 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882620);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v13 = (_QWORD *)((char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v35[1] = v3;
  v35[2] = a1;
  v38 = (uint64_t)v13 + *(int *)(v10 + 48);
  v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v36 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v37 = v13;
  while (1)
  {
    sub_24982A2D4(v15, (uint64_t)v13, &qword_257882620);
    v16 = *v13;
    v17 = v13[1];
    v43 = *v13;
    v44 = v17;
    v18 = (uint64_t)v8;
    sub_2498298A8(v38, (uint64_t)v8);
    v19 = (_QWORD *)*v40;
    v21 = sub_2497F2594();
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_24983763C();
      __break(1u);
      goto LABEL_20;
    }
    v25 = v20;
    if (v19[3] < v24)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257882628);
      sub_24983727C();
      if ((v25 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v28 = (_QWORD *)*v40;
    *(_QWORD *)(*v40 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    v29 = (_QWORD *)(v28[6] + 16 * v21);
    *v29 = v16;
    v29[1] = v17;
    v8 = (char *)v18;
    sub_2498298A8(v18, v28[7] + *(_QWORD *)(v39 + 72) * v21);
    v30 = v28[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_18;
    v28[2] = v32;
    v13 = v37;
    v15 += v36;
    a2 = 1;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_249829F18(v24, a2 & 1);
  v26 = sub_2497F2594();
  if ((v25 & 1) != (v27 & 1))
    goto LABEL_19;
  v21 = v26;
  if ((v25 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v33 = (void *)swift_allocError();
  swift_willThrow();
  v45 = v33;
  v34 = v33;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257881240);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_2498298EC(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  v41 = 0;
  v42 = 0xE000000000000000;
  sub_249837168();
  sub_249836DB4();
  sub_249837264();
  sub_249836DB4();
  sub_24983730C();
  __break(1u);
}

uint64_t sub_2498298A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PropertyListNode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2498298EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PropertyListNode();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249829928(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882640);
  v6 = sub_249837348();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
      v21 = *v19;
      v20 = v19[1];
      v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * i);
      if ((a2 & 1) != 0)
      {
        sub_24974BBA8(v22, v35);
      }
      else
      {
        sub_24974BC28((uint64_t)v22, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_249837690();
      sub_249836D84();
      result = sub_2498376E4();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6))) == 0)
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          v29 = v25 == v28;
          if (v25 == v28)
            v25 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v25);
          if (v30 != -1)
          {
            v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(_QWORD *)(v11 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      v31 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v26);
      *v31 = v21;
      v31[1] = v20;
      result = (uint64_t)sub_24974BBA8(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v26));
      ++*(_QWORD *)(v7 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_40;
      if (v16 >= v33)
        goto LABEL_33;
      v17 = v34[v16];
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v33)
          goto LABEL_33;
        v17 = v34[v13];
        if (!v17)
        {
          v18 = v16 + 2;
          if (v18 >= v33)
          {
LABEL_33:
            swift_release();
            v3 = v2;
            if ((a2 & 1) != 0)
            {
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                sub_249781B64(0, (unint64_t)(v32 + 63) >> 6, v34);
              else
                *v34 = -1 << v32;
              *(_QWORD *)(v5 + 16) = 0;
            }
            break;
          }
          v17 = v34[v18];
          if (!v17)
          {
            while (1)
            {
              v13 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_41;
              if (v13 >= v33)
                goto LABEL_33;
              v17 = v34[v13];
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          v13 = v18;
        }
      }
LABEL_18:
      v10 = (v17 - 1) & v17;
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249829C20(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882638);
  v37 = a2;
  v6 = sub_249837348();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_249837690();
    sub_249836D84();
    result = sub_2498376E4();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v27);
    *v32 = v22;
    v32[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v27) = v23;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v35)
    {
      swift_release();
      v3 = v34;
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v36 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v35)
        goto LABEL_32;
      v18 = *(_QWORD *)(v36 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v35)
  {
    v18 = *(_QWORD *)(v36 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v35)
          goto LABEL_32;
        v18 = *(_QWORD *)(v36 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v34;
LABEL_34:
  if ((v37 & 1) != 0)
  {
    v33 = 1 << *(_BYTE *)(v5 + 32);
    if (v33 >= 64)
      sub_249781B64(0, (unint64_t)(v33 + 63) >> 6, v17);
    else
      *v17 = -1 << v33;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_249829F18(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for PropertyListNode();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882618);
  v43 = a2;
  v9 = sub_249837348();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  if (!v14)
    goto LABEL_7;
LABEL_6:
  v18 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v22)) + (v17 << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * i);
    v26 = *v24;
    v25 = v24[1];
    v27 = *(_QWORD *)(v42 + 72);
    v28 = *(_QWORD *)(v8 + 56) + v27 * i;
    if ((v43 & 1) != 0)
    {
      sub_2498298A8(v28, (uint64_t)v7);
    }
    else
    {
      sub_24982A274(v28, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_249837690();
    sub_249836D84();
    result = sub_2498376E4();
    v29 = -1 << *(_BYTE *)(v10 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6))) == 0)
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v29) >> 6;
      while (++v31 != v34 || (v33 & 1) == 0)
      {
        v35 = v31 == v34;
        if (v31 == v34)
          v31 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v15 + 8 * v31);
        if (v36 != -1)
        {
          v32 = __clz(__rbit64(~v36)) + (v31 << 6);
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
    *(_QWORD *)(v15 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    v37 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v32);
    *v37 = v26;
    v37[1] = v25;
    result = sub_2498298A8((uint64_t)v7, *(_QWORD *)(v10 + 56) + v27 * v32);
    ++*(_QWORD *)(v10 + 16);
    if (v14)
      goto LABEL_6;
LABEL_7:
    v20 = v17 + 1;
    if (__OFADD__(v17, 1))
      goto LABEL_42;
    if (v20 >= v40)
    {
      swift_release();
      v3 = v39;
      v21 = v41;
      goto LABEL_35;
    }
    v21 = v41;
    v22 = v41[v20];
    ++v17;
    if (!v22)
    {
      v17 = v20 + 1;
      if (v20 + 1 >= v40)
        goto LABEL_33;
      v22 = v41[v17];
      if (!v22)
        break;
    }
LABEL_18:
    v14 = (v22 - 1) & v22;
  }
  v23 = v20 + 2;
  if (v23 < v40)
  {
    v22 = v41[v23];
    if (!v22)
    {
      while (1)
      {
        v17 = v23 + 1;
        if (__OFADD__(v23, 1))
          goto LABEL_43;
        if (v17 >= v40)
          goto LABEL_33;
        v22 = v41[v17];
        ++v23;
        if (v22)
          goto LABEL_18;
      }
    }
    v17 = v23;
    goto LABEL_18;
  }
LABEL_33:
  swift_release();
  v3 = v39;
LABEL_35:
  if ((v43 & 1) != 0)
  {
    v38 = 1 << *(_BYTE *)(v8 + 32);
    if (v38 >= 64)
      sub_249781B64(0, (unint64_t)(v38 + 63) >> 6, v21);
    else
      *v21 = -1 << v38;
    *(_QWORD *)(v8 + 16) = 0;
  }
LABEL_40:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_24982A274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PropertyListNode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24982A2B8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 137))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void sub_24982A2D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_177_0(a1, a2, a3);
  OUTLINED_FUNCTION_202(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_27();
}

void sub_24982A300(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!OUTLINED_FUNCTION_215(a1))
  {
    v4 = v3;
    v5 = v2(255);
    atomic_store(MEMORY[0x24BCF8F94](v4, v5), v1);
  }
  OUTLINED_FUNCTION_27();
}

void _s8HIDUtils20HIDServicePropertiesV20HIDSurfaceDimensionsV23HIDSurfaceDimensionsKeyVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_27();
}

ValueMetadata *type metadata accessor for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey()
{
  return &type metadata for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey;
}

unint64_t sub_24982A384()
{
  unint64_t result;

  result = qword_257882670;
  if (!qword_257882670)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DE98, &type metadata for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey);
    atomic_store(result, (unint64_t *)&qword_257882670);
  }
  return result;
}

void sub_24982A3C0()
{
  sub_24982A3E4((uint64_t)&unk_257882678);
}

void sub_24982A3E4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t *v2;
  uint64_t v3;

  if (!OUTLINED_FUNCTION_215(a1))
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(v2);
    atomic_store(MEMORY[0x24BCF8F94](MEMORY[0x24BEE12E0], v3), v1);
  }
  OUTLINED_FUNCTION_27();
}

unint64_t sub_24982A420()
{
  unint64_t result;

  result = qword_257882688;
  if (!qword_257882688)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DEC0, &type metadata for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey);
    atomic_store(result, (unint64_t *)&qword_257882688);
  }
  return result;
}

unint64_t sub_24982A460()
{
  unint64_t result;

  result = qword_257882690;
  if (!qword_257882690)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983DEE8, &type metadata for HIDServiceProperties.HIDDeviceUsagePair.HIDDeviceUsagePairKey);
    atomic_store(result, (unint64_t *)&qword_257882690);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_29()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_1_27(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;

  va_start(va1, a5);
  va_start(va, a5);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  sub_249828780((uint64_t)va, (uint64_t)va1, a3);
}

uint64_t OUTLINED_FUNCTION_2_30()
{
  return sub_2498373CC();
}

uint64_t OUTLINED_FUNCTION_3_25()
{
  return sub_2498374A4();
}

id OUTLINED_FUNCTION_4_27(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(*(id *)(v4 - 72), a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_5_20()
{
  return sub_2498370E4();
}

id OUTLINED_FUNCTION_6_17(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_7_20()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_25()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_9_20(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_17(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a1)
    return a10;
  else
    return 0;
}

void OUTLINED_FUNCTION_13_16(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  HIDServiceProperties.subscript.setter(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a4);
}

void OUTLINED_FUNCTION_14_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2498229A0(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a4);
}

double OUTLINED_FUNCTION_16_14()
{
  return 0.0;
}

void OUTLINED_FUNCTION_17_15(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2497D5E68((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_18_13@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = a1;
  *(_QWORD *)(v2 - 96) = (v1 - 32) | 0x8000000000000000;
  return sub_2498373CC();
}

uint64_t OUTLINED_FUNCTION_19_17@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1;
  *(_QWORD *)(v2 - 88) = (v1 - 32) | 0x8000000000000000;
  return sub_2498374A4();
}

uint64_t OUTLINED_FUNCTION_20_16()
{
  return sub_249837624();
}

uint64_t OUTLINED_FUNCTION_21_14(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_23_10()
{
  return sub_249837624();
}

uint64_t OUTLINED_FUNCTION_24_14()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_25_10()
{
  return sub_2498373CC();
}

uint64_t OUTLINED_FUNCTION_27_8()
{
  return sub_2498374A4();
}

id OUTLINED_FUNCTION_28_11(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  return objc_msgSend(v1, (SEL)(v2 + 3606), a1);
}

uint64_t OUTLINED_FUNCTION_29_8()
{
  return sub_2498373B4();
}

uint64_t OUTLINED_FUNCTION_31_9(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 40) = v1;
  return swift_bridgeObjectRetain_n();
}

void OUTLINED_FUNCTION_32_9(char a1)
{
  HIDServiceProperties.subscript.setter(a1);
}

id OUTLINED_FUNCTION_34_11(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(*(id *)(v4 - 72), a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_36_10()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_37_8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_249828780(v3 - 144, v3 - 112, a3);
}

uint64_t OUTLINED_FUNCTION_38_6()
{
  return sub_2498370E4();
}

uint64_t OUTLINED_FUNCTION_39_7()
{
  return sub_24983748C();
}

uint64_t OUTLINED_FUNCTION_41_7()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_42_6()
{
  return swift_bridgeObjectRetain_n();
}

id OUTLINED_FUNCTION_45_8(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(*(id *)(v3 - 72), a2, v2);
}

uint64_t OUTLINED_FUNCTION_46_6()
{
  return swift_unknownObjectRelease();
}

_QWORD *OUTLINED_FUNCTION_47_7(_QWORD *result)
{
  uint64_t v1;

  *result = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_51_8()
{
  return HIDServiceProperties.subscript.getter();
}

void OUTLINED_FUNCTION_52_4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_249828780(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_53_5()
{
  return HIDServiceProperties.subscript.getter();
}

uint64_t OUTLINED_FUNCTION_55_7(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a1)
    return a9;
  else
    return 0;
}

uint64_t OUTLINED_FUNCTION_56_7()
{
  return sub_2498373C0();
}

uint64_t OUTLINED_FUNCTION_57_7()
{
  return sub_2498370E4();
}

uint64_t OUTLINED_FUNCTION_58_6()
{
  return sub_249837498();
}

void OUTLINED_FUNCTION_60_5(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  sub_249828780(v31 - 128, (uint64_t)&a31, a3);
}

uint64_t OUTLINED_FUNCTION_61_6()
{
  return sub_2498370E4();
}

uint64_t OUTLINED_FUNCTION_64_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_68_5()
{
  return sub_2498370E4();
}

void OUTLINED_FUNCTION_69_5(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_249828780(v4, v3, a3);
}

id OUTLINED_FUNCTION_70_2(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_71_6()
{
  return sub_2498373D8();
}

void OUTLINED_FUNCTION_72_4(uint64_t a1, char a2)
{
  sub_2498221E4(a1, a2);
}

void OUTLINED_FUNCTION_73_3(uint64_t a1, uint64_t a2)
{
  HIDServiceProperties.subscript.setter(a1, a2);
}

uint64_t OUTLINED_FUNCTION_74_5()
{
  return swift_unknownObjectRelease();
}

id OUTLINED_FUNCTION_76_2(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_77_3()
{
  return sub_2498374B0();
}

uint64_t OUTLINED_FUNCTION_78_3@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  if (a1)
    return a2;
  else
    return 0;
}

uint64_t OUTLINED_FUNCTION_81_1()
{
  return sub_249837624();
}

void OUTLINED_FUNCTION_82_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2497D5E68(v2 - 112, a2);
}

double OUTLINED_FUNCTION_84_0()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_86_1()
{
  return sub_2498370E4();
}

id OUTLINED_FUNCTION_89_1(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_93_0()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_95_1(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = a1;
  *(_QWORD *)(v2 - 128) = v1 | 0x8000000000000000;
}

id OUTLINED_FUNCTION_96_1(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(v2, a2, v3, v4);
}

void *OUTLINED_FUNCTION_97_0()
{
  return malloc(0x68uLL);
}

uint64_t OUTLINED_FUNCTION_99_0()
{
  return sub_249837624();
}

id OUTLINED_FUNCTION_100_0(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_102_1()
{
  return sub_2498376B4();
}

uint64_t OUTLINED_FUNCTION_103_1()
{
  return sub_2498376B4();
}

void OUTLINED_FUNCTION_105_1(uint64_t *a1, char a2)
{
  sub_249821674(a1, a2);
}

uint64_t OUTLINED_FUNCTION_106_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return HIDServiceProperties.subscript.setter(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a4);
}

uint64_t OUTLINED_FUNCTION_107_1(unsigned __int8 *a1)
{
  return *a1;
}

void OUTLINED_FUNCTION_111_1(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  sub_2497D5E68((uint64_t)&a31, a2);
}

uint64_t OUTLINED_FUNCTION_112_0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t OUTLINED_FUNCTION_119()
{
  return sub_249837624();
}

uint64_t OUTLINED_FUNCTION_120_0()
{
  return sub_249837624();
}

double OUTLINED_FUNCTION_121_0()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  *v0 = 0u;
  v0[1] = 0u;
  return result;
}

void OUTLINED_FUNCTION_124_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_2497D5E68(v2, a2);
}

uint64_t OUTLINED_FUNCTION_125_0()
{
  return sub_249836D18();
}

uint64_t OUTLINED_FUNCTION_128_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_130_0()
{
  return sub_249837624();
}

double OUTLINED_FUNCTION_131_0()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  *v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_132_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 80) = a1;
  *(_QWORD *)(v2 - 72) = v1;
  return sub_249837420();
}

uint64_t OUTLINED_FUNCTION_134_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0(v0);
}

uint64_t OUTLINED_FUNCTION_136_0()
{
  uint64_t v0;

  return v0 - 144;
}

uint64_t OUTLINED_FUNCTION_144_0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 8) = v1;
  return result;
}

void OUTLINED_FUNCTION_145_0()
{
  HIDServiceProperties.subscript.getter();
}

void OUTLINED_FUNCTION_146()
{
  HIDServiceProperties.subscript.getter();
}

uint64_t OUTLINED_FUNCTION_147_0()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748C80(v1, v0);
}

uint64_t OUTLINED_FUNCTION_148_0()
{
  return sub_249836EE0();
}

void *OUTLINED_FUNCTION_149_0()
{
  return malloc(0x78uLL);
}

uint64_t OUTLINED_FUNCTION_152_0()
{
  return sub_249837744();
}

uint64_t OUTLINED_FUNCTION_154_0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return HIDServiceProperties.subscript.setter(v0, v1, v3, v2);
}

void OUTLINED_FUNCTION_155_0()
{
  uint64_t v0;
  uint64_t v1;

  HIDServiceProperties.subscript.setter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_156_0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  return HIDServiceProperties.subscript.setter(v1, v2, v3, v0);
}

uint64_t OUTLINED_FUNCTION_157_0()
{
  return sub_249837720();
}

void OUTLINED_FUNCTION_158_0()
{
  HIDServiceProperties.subscript.getter();
}

void OUTLINED_FUNCTION_162_0()
{
  uint64_t v0;
  uint64_t v1;

  HIDServiceProperties.subscript.setter(v1, v0);
}

uint64_t OUTLINED_FUNCTION_163_0()
{
  return sub_2498370C0();
}

uint64_t OUTLINED_FUNCTION_165_0()
{
  return sub_249836D84();
}

unint64_t OUTLINED_FUNCTION_166_0()
{
  return 0xD00000000000001ELL;
}

uint64_t OUTLINED_FUNCTION_170_0()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_176_0()
{
  return sub_2498374E0();
}

uint64_t OUTLINED_FUNCTION_177_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

void OUTLINED_FUNCTION_181_0()
{
  uint64_t v0;

  HIDServiceProperties.subscript.setter(v0);
}

char *OUTLINED_FUNCTION_182_0()
{
  return sub_24981CEAC();
}

uint64_t OUTLINED_FUNCTION_183()
{
  uint64_t v0;

  return v0 - 112;
}

id OUTLINED_FUNCTION_185_0(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return objc_msgSend(*(id *)(v4 - 72), a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_186_0()
{
  return sub_2498375C4();
}

uint64_t OUTLINED_FUNCTION_187_0(int a1)
{
  uint64_t v1;

  if (a1)
    return *(_QWORD *)(v1 - 160);
  else
    return 0;
}

void OUTLINED_FUNCTION_188_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = 0x7954656369766544;
  *(_QWORD *)(v1 - 128) = v0;
}

uint64_t OUTLINED_FUNCTION_192_0(uint64_t a1)
{
  uint64_t v1;

  return sub_249827BD4(a1, v1);
}

void OUTLINED_FUNCTION_193_0(uint64_t a1)
{
  sub_249828660(a1);
}

void OUTLINED_FUNCTION_194_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = 0xD000000000000014;
  *(_QWORD *)(v1 - 128) = a1;
}

uint64_t OUTLINED_FUNCTION_196_0()
{
  return sub_2498376A8();
}

uint64_t OUTLINED_FUNCTION_197_0()
{
  return sub_2498376CC();
}

uint64_t OUTLINED_FUNCTION_198()
{
  return sub_249837624();
}

void OUTLINED_FUNCTION_199()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = v0;
  *(_QWORD *)(v1 - 128) = 0xE900000000000074;
}

uint64_t OUTLINED_FUNCTION_201(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_202@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void OUTLINED_FUNCTION_203()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = v1;
  *(_QWORD *)(v2 - 128) = v0 | 0x8000000000000000;
}

void OUTLINED_FUNCTION_204()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = 0xD000000000000014;
  *(_QWORD *)(v1 - 128) = v0 | 0x8000000000000000;
}

void OUTLINED_FUNCTION_206(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v7 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  sub_249828780((uint64_t)va, (uint64_t)va1, a3);
}

char *OUTLINED_FUNCTION_207(char *a1, int64_t a2)
{
  uint64_t v2;

  return sub_249828140(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_208()
{
  return sub_249837210();
}

void OUTLINED_FUNCTION_209(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_249828780(a1, a2, v2);
}

void OUTLINED_FUNCTION_211(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1 | 0x8000000000000000;
}

void OUTLINED_FUNCTION_213(uint64_t a1)
{
  HIDServiceProperties.subscript.setter(a1);
}

void OUTLINED_FUNCTION_214(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1 | 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_215(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void OUTLINED_FUNCTION_216()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_217()
{
  return swift_allocObject();
}

uint64_t static HIDEventFlags.absolute.getter()
{
  return 1;
}

uint64_t static HIDEventFlags.accelerated.getter()
{
  return 0x10000;
}

uint64_t static HIDEventFlags.builtin.getter()
{
  return 16;
}

uint64_t static HIDEventFlags.centerOrigin.getter()
{
  return 8;
}

uint64_t static HIDEventFlags.collection.getter()
{
  return 2;
}

uint64_t static HIDEventFlags.interpolated.getter()
{
  return 32;
}

uint64_t static HIDEventFlags.pixelUnits.getter()
{
  return 4;
}

uint64_t HIDEventFlags.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDEventFlags.rawValue.modify())(void)
{
  return nullsub_1;
}

void *static HIDEventFlags.allCases.getter()
{
  return &unk_251AB53F8;
}

unint64_t HIDEventFlags.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_0_2();
    result = sub_249837300();
    __break(1u);
  }
  return result;
}

uint64_t static HIDEventFlags.ignore.getter()
{
  return 4026531840;
}

uint64_t static HIDEventFlags.injected.getter()
{
  return 64;
}

uint64_t static HIDEventFlags.zero.getter()
{
  return 0x800000;
}

void sub_24982AFE8(_DWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_2_31(a1);
}

void sub_24982AFF0(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AB53F8;
}

void sub_24982B000(_DWORD *a1@<X8>)
{
  *a1 = j__PlatformIsBeta();
  OUTLINED_FUNCTION_27();
}

BOOL sub_24982B020(int *a1)
{
  int *v1;

  return sub_24981BB64(*a1, *v1);
}

uint64_t sub_24982B02C@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  unsigned int *v2;
  uint64_t result;

  result = j__OUTLINED_FUNCTION_3_30(*a1, *v2);
  *a2 = result;
  return result;
}

void sub_24982B058(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  int *v2;

  *a2 = j__OUTLINED_FUNCTION_8_23(*a1, *v2);
  OUTLINED_FUNCTION_27();
}

void sub_24982B080(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  int *v2;

  *a2 = j__OUTLINED_FUNCTION_54_5(*a1, *v2);
  OUTLINED_FUNCTION_27();
}

BOOL sub_24982B0A8(_DWORD *a1, int *a2)
{
  return sub_249818A9C(a1, *a2);
}

uint64_t sub_24982B0B0@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_249832A10(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_24982B0E0@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_249832A78(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

void sub_24982B110(int *a1)
{
  sub_249818AF8(*a1);
}

uint64_t sub_24982B118(unsigned int *a1)
{
  return sub_249817114(*a1);
}

void sub_24982B120(int *a1)
{
  sub_249818B10(*a1);
}

uint64_t sub_24982B128@<X0>(int *a1@<X0>, _DWORD *a2@<X8>)
{
  int *v2;
  uint64_t result;

  result = sub_2498353D8(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_24982B154(int *a1)
{
  int *v1;

  return sub_249818B28(*a1, *v1);
}

BOOL sub_24982B160(int *a1)
{
  int *v1;

  return sub_2498353F8(*a1, *v1);
}

BOOL sub_24982B16C(int *a1)
{
  int *v1;

  return sub_249818B44(*a1, *v1);
}

BOOL sub_24982B178()
{
  int *v0;

  return sub_249817188(*v0);
}

void sub_24982B180(int *a1)
{
  sub_249818B60(*a1);
}

_DWORD *sub_24982B188@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_24982B198(_DWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_2_31(a1);
}

BOOL sub_24982B1A0(int *a1, int *a2)
{
  return sub_2498171C4(*a1, *a2);
}

uint64_t sub_24982B1AC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = sub_249835448();
  *a1 = result;
  return result;
}

uint64_t HIDEventFlags.momentumMask.getter()
{
  return 7;
}

uint64_t HIDEventFlags.momentumShift.getter()
{
  return 28;
}

uint64_t HIDEventFlags.momentumLowerMask.getter()
{
  return 24;
}

uint64_t HIDEventFlags.momentumLowerShift.getter()
{
  return 6;
}

uint64_t HIDEventFlags.phaseMask.getter()
{
  return 143;
}

uint64_t HIDEventFlags.phaseShift.getter()
{
  return 24;
}

uint64_t HIDEventFlags.init(momentum:)(char a1)
{
  return ((a1 & 0x18) << 6) | ((a1 & 7) << 28);
}

uint64_t HIDEventFlags.momentum.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = *v1 & 0x8FFFF9FF | ((result & 7) << 28) | ((((result & 0x18) >> 3) & 3) << 9);
  return result;
}

uint64_t HIDEventFlags.init(phase:)(int a1)
{
  return (a1 & 0xFFFFFF8F) << 24;
}

uint64_t HIDEventFlags.phase.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = *v1 & 0x70FFFFFF | ((result & 0xFFFFFF8F) << 24);
  return result;
}

uint64_t HIDEventFlags.momentum.getter(unsigned int a1)
{
  return (a1 >> 6) & 0x18 | (a1 >> 28) & 7;
}

void (*HIDEventFlags.momentum.modify(uint64_t a1))(uint64_t a1)
{
  _DWORD *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = (*v1 >> 6) & 0x18 | (*v1 >> 28) & 7;
  return sub_24982B2A0;
}

void sub_24982B2A0(uint64_t a1)
{
  HIDEventFlags.momentum.setter(*(unsigned __int8 *)(a1 + 8));
  OUTLINED_FUNCTION_27();
}

uint64_t HIDEventFlags.phase.getter(unsigned int a1)
{
  return HIBYTE(a1) & 0xFFFFFF8F;
}

void (*HIDEventFlags.phase.modify(uint64_t a1))(_DWORD **a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 3) & 0x8F;
  return sub_24982B2EC;
}

void sub_24982B2EC(_DWORD **a1)
{
  OUTLINED_FUNCTION_2_31(*a1);
}

uint64_t HIDEventFlags.description.getter(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  int *v5;
  int v6;
  int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v1 = 9;
  v2 = MEMORY[0x24BEE4AF8];
  v4 = MEMORY[0x24BEE4AF8];
  v5 = &dword_251AB5418;
  do
  {
    v7 = *v5++;
    v6 = v7;
    if ((v7 & a1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_249817C70(0, *(_QWORD *)(v4 + 16) + 1, 1);
      v9 = *(_QWORD *)(v4 + 16);
      v8 = *(_QWORD *)(v4 + 24);
      if (v9 >= v8 >> 1)
        sub_249817C70(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v4 + 16) = v9 + 1;
      *(_DWORD *)(v4 + 4 * v9 + 32) = v6;
    }
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v4 + 16);
  if (v10)
  {
    v25 = v2;
    sub_24974DDF0();
    v11 = 0;
    v12 = MEMORY[0x24BEE4548];
    do
    {
      v13 = *(_DWORD *)(v4 + 4 * v11 + 32);
      if ((v13 & 1) != 0)
      {
        v18 = 0xE800000000000000;
        v19 = 0x6574756C6F736261;
      }
      else if ((v13 & 0x10000) != 0)
      {
        v18 = 0xEB00000000646574;
        v19 = 0x6172656C65636361;
      }
      else if ((v13 & 0x10) != 0)
      {
        v18 = 0xE700000000000000;
        v19 = 0x6E69746C697562;
      }
      else if ((v13 & 8) != 0)
      {
        v18 = 0xEC0000006E696769;
        v19 = 0x724F7265746E6563;
      }
      else if ((v13 & 2) != 0)
      {
        v19 = 0x697463656C6C6F63;
        v18 = 0xEA00000000006E6FLL;
      }
      else if (v13 >> 28)
      {
        v18 = 0xE600000000000000;
        v19 = 0x65726F6E6769;
      }
      else if ((v13 & 0x20) != 0)
      {
        v18 = 0xEC00000064657461;
        v19 = 0x6C6F707265746E69;
      }
      else if ((v13 & 4) != 0)
      {
        v18 = 0xEA00000000007374;
        v19 = 0x696E556C65786970;
      }
      else if ((v13 & 0x800000) != 0)
      {
        v18 = 0xE400000000000000;
        v19 = 1869768058;
      }
      else
      {
        v14 = v12;
        v15 = (v13 >> 6) & 0x18 | (v13 >> 28);
        if (v15)
        {
          v16 = HIDScrollMomentum.description.getter(v15);
        }
        else
        {
          if ((HIBYTE(v13) & 0xFFFFFF8F) == 0)
          {
            v19 = sub_249837540();
            v12 = v14;
            v18 = v22;
            goto LABEL_34;
          }
          v16 = HIDEventPhase.description.getter(HIBYTE(v13) & 0x8F);
        }
        v19 = v16;
        v18 = v17;
        v12 = v14;
      }
LABEL_34:
      v20 = *(_QWORD *)(v25 + 16);
      if (v20 >= *(_QWORD *)(v25 + 24) >> 1)
      {
        sub_24974DDF0();
        v12 = MEMORY[0x24BEE4548];
      }
      ++v11;
      *(_QWORD *)(v25 + 16) = v20 + 1;
      v21 = v25 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v19;
      *(_QWORD *)(v21 + 40) = v18;
    }
    while (v10 != v11);
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FEB8);
  sub_24974DEBC((unint64_t *)&qword_25787FEC0, &qword_25787FEB8, MEMORY[0x24BEE12B0]);
  v23 = sub_249836CDC();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_24982B6A0()
{
  int *v0;

  return HIDEventFlags.description.getter(*v0);
}

unint64_t sub_24982B6AC()
{
  unint64_t result;

  result = qword_257882698;
  if (!qword_257882698)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventFlags, &type metadata for HIDEventFlags);
    atomic_store(result, (unint64_t *)&qword_257882698);
  }
  return result;
}

unint64_t sub_24982B6EC()
{
  unint64_t result;

  result = qword_2578826A0;
  if (!qword_2578826A0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventFlags, &type metadata for HIDEventFlags);
    atomic_store(result, (unint64_t *)&qword_2578826A0);
  }
  return result;
}

uint64_t sub_24982B728()
{
  return sub_24974DEBC(&qword_2578826A8, &qword_2578826B0, MEMORY[0x24BEE12E0]);
}

unint64_t sub_24982B758()
{
  unint64_t result;

  result = qword_2578826B8;
  if (!qword_2578826B8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventFlags, &type metadata for HIDEventFlags);
    atomic_store(result, (unint64_t *)&qword_2578826B8);
  }
  return result;
}

unint64_t sub_24982B798()
{
  unint64_t result;

  result = qword_2578826C0;
  if (!qword_2578826C0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventFlags, &type metadata for HIDEventFlags);
    atomic_store(result, (unint64_t *)&qword_2578826C0);
  }
  return result;
}

void sub_24982B7D4(unsigned int *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = HIDEventFlags.momentum.getter(*a1);
  OUTLINED_FUNCTION_27();
}

void sub_24982B7F8(unsigned __int8 *a1)
{
  HIDEventFlags.momentum.setter(*a1);
  OUTLINED_FUNCTION_27();
}

void sub_24982B818(unsigned int *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = HIDEventFlags.phase.getter(*a1);
  OUTLINED_FUNCTION_27();
}

void sub_24982B83C(unsigned __int8 *a1)
{
  HIDEventFlags.phase.setter(*a1);
  OUTLINED_FUNCTION_27();
}

ValueMetadata *type metadata accessor for HIDEventFlags()
{
  return &type metadata for HIDEventFlags;
}

void OUTLINED_FUNCTION_2_31(_DWORD *a1@<X8>)
{
  int v1;

  *a1 = v1;
}

float sub_24982B880()
{
  __int128 v0;
  float result;
  mach_timebase_info v2[2];

  v2[1] = *(mach_timebase_info *)MEMORY[0x24BDAC8D0];
  v2[0] = 0;
  mach_timebase_info(v2);
  *(_QWORD *)&v0 = v2[0].numer;
  *((_QWORD *)&v0 + 1) = v2[0].denom;
  result = *(float *)&v2[0].numer;
  xmmword_2578826C8 = v0;
  return result;
}

uint64_t static HIDTime.timebase.getter()
{
  if (qword_2578823A0 != -1)
    swift_once();
  return xmmword_2578826C8;
}

uint64_t static HIDTime.never()()
{
  return -1;
}

void HIDTime.init(nanoseconds:)(double a1)
{
  char v2;
  char v3;
  char v4;

  if (qword_2578823A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_30((double)*((unint64_t *)&xmmword_2578826C8 + 1) * a1, (double)(unint64_t)xmmword_2578826C8);
  if (!v2)
    goto LABEL_7;
  OUTLINED_FUNCTION_1_28();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_2_32();
    if (!(v2 ^ v4 | v3))
    {
LABEL_7:
      OUTLINED_FUNCTION_3_26();
      return;
    }
  }
  __break(1u);
}

void HIDTime.init(nanoseconds:)(unint64_t a1)
{
  double v1;
  char v2;
  char v3;
  char v4;

  v1 = (double)a1;
  if (qword_2578823A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_30(v1 * (double)*((unint64_t *)&xmmword_2578826C8 + 1), (double)(unint64_t)xmmword_2578826C8);
  if (!v2)
    goto LABEL_7;
  OUTLINED_FUNCTION_1_28();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_2_32();
    if (!(v2 ^ v4 | v3))
    {
LABEL_7:
      OUTLINED_FUNCTION_3_26();
      return;
    }
  }
  __break(1u);
}

void HIDTime.nanoseconds.getter(unint64_t a1)
{
  char v2;
  char v3;
  char v4;

  if (qword_2578823A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_30((double)a1 * (double)(unint64_t)xmmword_2578826C8, (double)*((unint64_t *)&xmmword_2578826C8 + 1));
  if (v2)
  {
    OUTLINED_FUNCTION_1_28();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_2_32();
      if (!(v2 ^ v4 | v3))
        return;
    }
    __break(1u);
  }
}

void HIDTime.init(seconds:)(double a1)
{
  double v1;
  char v2;
  char v3;
  char v4;

  v1 = a1 * 1000000000.0;
  if (qword_2578823A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_30(v1 * (double)*((unint64_t *)&xmmword_2578826C8 + 1), (double)(unint64_t)xmmword_2578826C8);
  if (!v2)
    goto LABEL_7;
  OUTLINED_FUNCTION_1_28();
  if (v3)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_2_32();
    if (!(v2 ^ v4 | v3))
    {
LABEL_7:
      OUTLINED_FUNCTION_3_26();
      return;
    }
  }
  __break(1u);
}

void HIDTime.seconds.getter(unint64_t a1)
{
  char v2;
  char v3;
  char v4;

  if (qword_2578823A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_30((double)a1 * (double)(unint64_t)xmmword_2578826C8, (double)*((unint64_t *)&xmmword_2578826C8 + 1));
  if (v2)
  {
    OUTLINED_FUNCTION_1_28();
    if (v3)
    {
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_2_32();
      if (!(v2 ^ v4 | v3))
        return;
    }
    __break(1u);
  }
}

uint64_t static HIDTime.+ infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (__CFADD__(a1, a2))
    return -1;
  else
    return a1 + a2;
}

double static HIDTime.+ infix(_:_:)(unint64_t a1, double a2)
{
  unint64_t v3;
  double result;

  HIDTime.nanoseconds.getter(a1);
  HIDTime.init(nanoseconds:)(((double)v3 * 0.000000001 + a2) * 1000000000.0);
  return result;
}

unint64_t static HIDTime.- infix(_:_:)(unint64_t a1, unint64_t a2)
{
  if (a1 >= a2)
    return a1 - a2;
  else
    return 0;
}

BOOL sub_24982BC48(unint64_t a1, unint64_t a2)
{
  return a2 < a1;
}

void static HIDTime.- infix(_:_:)(unint64_t a1, double a2)
{
  char v4;
  char v5;
  double v6;
  char v7;
  double v8;

  if (qword_2578823A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_30((double)a1 * (double)(unint64_t)xmmword_2578826C8, (double)*((unint64_t *)&xmmword_2578826C8 + 1));
  if (!v4)
  {
    v8 = 1.84467441e10;
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_1_28();
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_2_32();
  if (v4 ^ v7 | v5)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v8 = (double)(unint64_t)v6 * 0.000000001;
LABEL_8:
  if (v8 > a2)
    HIDTime.init(nanoseconds:)((v8 - a2) * 1000000000.0);
}

BOOL static HIDTime.< infix(_:_:)(unint64_t a1, unint64_t a2)
{
  return a1 < a2;
}

BOOL static HIDTime.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

BOOL sub_24982BD44(unint64_t *a1, unint64_t *a2)
{
  return static HIDTime.< infix(_:_:)(*a1, *a2);
}

BOOL sub_24982BD50(unint64_t *a1, unint64_t *a2)
{
  return sub_24982BD5C(*a1, *a2);
}

BOOL sub_24982BD5C(unint64_t a1, unint64_t a2)
{
  return a2 >= a1;
}

BOOL sub_24982BD68(unint64_t *a1, unint64_t *a2)
{
  return sub_24982BD74(*a1, *a2);
}

BOOL sub_24982BD74(unint64_t a1, unint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_24982BD80(unint64_t *a1, unint64_t *a2)
{
  return sub_24982BC48(*a1, *a2);
}

BOOL sub_24982BD8C(uint64_t *a1, uint64_t *a2)
{
  return static HIDTime.== infix(_:_:)(*a1, *a2);
}

uint64_t HIDTime.description.getter(unint64_t a1)
{
  HIDTime.nanoseconds.getter(a1);
  return sub_249837540();
}

uint64_t sub_24982BDD8()
{
  unint64_t *v0;

  return HIDTime.description.getter(*v0);
}

uint64_t HIDTime.hash(into:)()
{
  return sub_2498376D8();
}

uint64_t HIDTime.hashValue.getter()
{
  sub_249837690();
  sub_2498376D8();
  return sub_2498376E4();
}

uint64_t sub_24982BE48()
{
  return HIDTime.hashValue.getter();
}

uint64_t sub_24982BE50()
{
  return HIDTime.hash(into:)();
}

uint64_t sub_24982BE58()
{
  sub_249837690();
  sub_2498376D8();
  return sub_2498376E4();
}

unint64_t sub_24982BE9C()
{
  unint64_t result;

  result = qword_2578826D8;
  if (!qword_2578826D8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDTime, &type metadata for HIDTime);
    atomic_store(result, (unint64_t *)&qword_2578826D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDTime()
{
  return &type metadata for HIDTime;
}

double OUTLINED_FUNCTION_0_30(double a1, double a2)
{
  return round(a1 / a2);
}

uint64_t sub_24982BF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t i;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;

  v4 = v3;
  v16[0] = a1;
  v16[1] = a2;
  v6 = type metadata accessor for PropertyListNode();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (v10)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_249817F24(0, v10, 0);
    v11 = v17;
    for (i = a3 + 32; ; i += 32)
    {
      ((void (*)(uint64_t))v16[0])(i);
      if (v4)
        break;
      v4 = 0;
      v17 = v11;
      v14 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_249817F24(v13 > 1, v14 + 1, 1);
        v11 = v17;
      }
      *(_QWORD *)(v11 + 16) = v14 + 1;
      sub_2498298A8((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v14);
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

void visitNodes(node:parent:visitor:)(uint64_t a1, __int128 *a2, void (*a3)(__int128 *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char *v13;
  __int128 v16;
  char v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578826E0);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_65_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578826E8);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_66_2();
  OUTLINED_FUNCTION_70_3();
  MEMORY[0x24BDAC7A8](v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578826F0);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_56_8();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_74_6();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_56_8();
  MEMORY[0x24BDAC7A8](v11);
  v12 = *((_BYTE *)a2 + 16);
  v16 = *a2;
  v17 = v12;
  a3(&v16, a1);
  OUTLINED_FUNCTION_45_9(a1);
  v13 = (char *)&loc_24982C1FC + dword_24982C57C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24982C20C()
{
  uint64_t v0;

  return sub_249748C10(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
}

void sub_24982C534()
{
  OUTLINED_FUNCTION_13_17();
  OUTLINED_FUNCTION_6_18();
  OUTLINED_FUNCTION_16_15();
}

uint64_t type metadata accessor for PropertyListNode()
{
  uint64_t result;

  result = qword_2578828C8;
  if (!qword_2578828C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PropertyListNode.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = OUTLINED_FUNCTION_33_8();
  sub_24981D2F8(a1);
  *(_QWORD *)(v4 + 16) = v5;
  *a2 = v4;
  OUTLINED_FUNCTION_5_21();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24982C630()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void PropertyListNode.init(dictionaryLiteral:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_38_1();
  sub_24981D2E4(a1);
  OUTLINED_FUNCTION_51_9();
  OUTLINED_FUNCTION_33_8();
  OUTLINED_FUNCTION_37_9();
  OUTLINED_FUNCTION_68_6();
  *(_QWORD *)(v3 + 16) = v1;
  OUTLINED_FUNCTION_50_5();
  OUTLINED_FUNCTION_36_11();
  OUTLINED_FUNCTION_15_14(v2);
  OUTLINED_FUNCTION_50_5();
  OUTLINED_FUNCTION_10_0();
}

uint64_t sub_24982C6DC@<X0>(_QWORD *a1@<X0>, CFTypeID *a2@<X8>)
{
  uint64_t v2;
  const void *v4;
  CFTypeID v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CFTypeID v10;
  const __CFNumber *v12;
  CFNumberType Type;
  id v14;
  CFTypeID v15;
  id v16;
  CFTypeID v17;
  uint64_t v18;
  _OWORD v19[2];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = (const void *)sub_2498375B8();
  v5 = CFGetTypeID(v4);
  if (CFDictionaryGetTypeID() == v5)
  {
    OUTLINED_FUNCTION_33_8();
    OUTLINED_FUNCTION_57_8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882A00);
    v6 = OUTLINED_FUNCTION_17_16();
    MEMORY[0x24BDAC7A8](v6);
    OUTLINED_FUNCTION_69_6();
    sub_24982FA38((void (*)(_BYTE *))sub_24983186C, v7, v18);
    OUTLINED_FUNCTION_78_4();
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(v5 + 16) = v2;
    *a2 = v5;
    OUTLINED_FUNCTION_5_21();
    OUTLINED_FUNCTION_25_11();
    return swift_storeEnumTagMultiPayload();
  }
  if (CFArrayGetTypeID() == v5)
  {
    OUTLINED_FUNCTION_33_8();
    OUTLINED_FUNCTION_57_8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578829F8);
    v8 = OUTLINED_FUNCTION_17_16();
    MEMORY[0x24BDAC7A8](v8);
    OUTLINED_FUNCTION_69_6();
    sub_24982BF24((uint64_t)sub_24983186C, v9, v18);
    OUTLINED_FUNCTION_78_4();
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(v5 + 16) = v2;
    *a2 = v5;
    OUTLINED_FUNCTION_5_21();
    OUTLINED_FUNCTION_25_11();
    return swift_storeEnumTagMultiPayload();
  }
  if (CFStringGetTypeID() == v5)
  {
    OUTLINED_FUNCTION_27_9();
    v10 = *((_QWORD *)&v19[0] + 1);
    *a2 = *(_QWORD *)&v19[0];
    a2[1] = v10;
    OUTLINED_FUNCTION_5_21();
    OUTLINED_FUNCTION_25_11();
    return swift_storeEnumTagMultiPayload();
  }
  if (CFDateGetTypeID() == v5)
  {
    *(_QWORD *)&v19[0] = v4;
    OUTLINED_FUNCTION_47_8();
    OUTLINED_FUNCTION_27_9();
    OUTLINED_FUNCTION_5_21();
    OUTLINED_FUNCTION_25_11();
    return swift_storeEnumTagMultiPayload();
  }
  if (CFDataGetTypeID() == v5)
  {
    OUTLINED_FUNCTION_27_9();
    *(_OWORD *)a2 = v19[0];
    OUTLINED_FUNCTION_5_21();
    OUTLINED_FUNCTION_25_11();
    return swift_storeEnumTagMultiPayload();
  }
  if (CFBooleanGetTypeID() == v5)
  {
    *(_QWORD *)&v19[0] = v4;
    OUTLINED_FUNCTION_17_16();
    *(_BYTE *)a2 = v18;
    OUTLINED_FUNCTION_5_21();
    OUTLINED_FUNCTION_25_11();
    return swift_storeEnumTagMultiPayload();
  }
  if (CFNumberGetTypeID() != v5)
  {
    OUTLINED_FUNCTION_77_4();
    sub_249837168();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_41_8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578829F0);
    OUTLINED_FUNCTION_82_1();
    sub_249836DB4();
    OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_13_17();
LABEL_27:
    OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_16_15();
  }
  type metadata accessor for CFNumber(0);
  swift_unknownObjectRetain();
  v12 = (const __CFNumber *)swift_dynamicCastUnknownClassUnconditional();
  Type = CFNumberGetType(v12);
  if ((unint64_t)Type > kCFNumberCGFloatType)
    goto LABEL_25;
  if (((1 << Type) & 0xCF9E) == 0)
  {
    if (((1 << Type) & 0x13060) != 0)
    {
      v16 = OUTLINED_FUNCTION_61_7(1);
      MEMORY[0x24BCF7ECC](v16, v19);
      if ((BYTE8(v19[0]) & 1) == 0)
      {
        v17 = *(_QWORD *)&v19[0];

        OUTLINED_FUNCTION_5_4();
        *a2 = v17;
        OUTLINED_FUNCTION_5_21();
        OUTLINED_FUNCTION_25_11();
        return swift_storeEnumTagMultiPayload();
      }
      goto LABEL_24;
    }
LABEL_25:
    OUTLINED_FUNCTION_77_4();
    sub_249837168();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_41_8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578829F0);
    OUTLINED_FUNCTION_82_1();
    sub_249836DB4();
    OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_13_17();
    goto LABEL_27;
  }
  v14 = OUTLINED_FUNCTION_61_7(1);
  MEMORY[0x24BCF86B8](v14, v19);
  if ((BYTE8(v19[0]) & 1) != 0)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v15 = *(_QWORD *)&v19[0];

  OUTLINED_FUNCTION_5_4();
  *a2 = v15;
  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_25_11();
  return swift_storeEnumTagMultiPayload();
}

void PropertyListNode.init(dictionary:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_51_9();
  OUTLINED_FUNCTION_33_8();
  OUTLINED_FUNCTION_37_9();
  OUTLINED_FUNCTION_68_6();
  *(_QWORD *)(v2 + 16) = v0;
  OUTLINED_FUNCTION_50_5();
  OUTLINED_FUNCTION_36_11();
  OUTLINED_FUNCTION_15_14(v1);
  OUTLINED_FUNCTION_50_5();
  OUTLINED_FUNCTION_10_0();
}

void PropertyListNode.init(wrapping:)(_QWORD *a1@<X0>, CFTypeID *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_37_2();
  swift_storeEnumTagMultiPayload();
  sub_24982C6DC(a1, a2);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  sub_2498298EC(v2);
  OUTLINED_FUNCTION_81();
}

void PropertyListNode.asDictionary()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0_31(v1, v2);
  if (OUTLINED_FUNCTION_11_18() != 7)
  {
    OUTLINED_FUNCTION_12_14();
    OUTLINED_FUNCTION_13_17();
    OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_16_15();
  }
  OUTLINED_FUNCTION_46_7();
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_81();
}

void PropertyListNode.asArray()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0_31(v1, v2);
  if (OUTLINED_FUNCTION_11_18() != 6)
  {
    OUTLINED_FUNCTION_12_14();
    OUTLINED_FUNCTION_13_17();
    OUTLINED_FUNCTION_44_7();
    OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_16_15();
  }
  OUTLINED_FUNCTION_46_7();
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_81();
}

void PropertyListNode.asDate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0;
  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_126();
  v5 = v4 - v3;
  sub_24982A274(v1, v4 - v3);
  OUTLINED_FUNCTION_81_2();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2498298EC(v5);
    OUTLINED_FUNCTION_13_17();
    OUTLINED_FUNCTION_32_10();
    OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_16_15();
  }
  v6 = OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_26_13(v6);
  OUTLINED_FUNCTION_81();
}

void PropertyListNode.asData()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0_31(v1, v2);
  if (OUTLINED_FUNCTION_11_18())
  {
    OUTLINED_FUNCTION_12_14();
    OUTLINED_FUNCTION_13_17();
    OUTLINED_FUNCTION_32_10();
    OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_16_15();
  }
  OUTLINED_FUNCTION_81();
}

Swift::Bool __swiftcall PropertyListNode.asBool()()
{
  Swift::Bool *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0_31(v2, v4);
  if (OUTLINED_FUNCTION_11_18() != 3)
  {
    OUTLINED_FUNCTION_12_14();
    OUTLINED_FUNCTION_13_17();
    OUTLINED_FUNCTION_20_17();
    OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_16_15();
  }
  return *v0;
}

Swift::String __swiftcall PropertyListNode.asString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;
  uint64_t v5;

  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0_31(v1, v5);
  if (OUTLINED_FUNCTION_11_18() != 2)
  {
    OUTLINED_FUNCTION_12_14();
    OUTLINED_FUNCTION_13_17();
    OUTLINED_FUNCTION_20_17();
    OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_16_15();
  }
  OUTLINED_FUNCTION_81();
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::UInt64 __swiftcall PropertyListNode.asUInt64()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::UInt64 result;
  uint64_t v3;

  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_0_31(v1, v3);
  if (OUTLINED_FUNCTION_11_18() != 4)
  {
    OUTLINED_FUNCTION_12_14();
    OUTLINED_FUNCTION_13_17();
    OUTLINED_FUNCTION_44_7();
    OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_16_15();
  }
  OUTLINED_FUNCTION_81();
  return result;
}

Swift::Double __swiftcall PropertyListNode.asDouble()()
{
  Swift::Double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_0_31(v2, v4);
  if (OUTLINED_FUNCTION_11_18() != 5)
  {
    OUTLINED_FUNCTION_12_14();
    OUTLINED_FUNCTION_13_17();
    OUTLINED_FUNCTION_20_17();
    OUTLINED_FUNCTION_6_18();
    OUTLINED_FUNCTION_16_15();
  }
  return *v0;
}

void static PropertyListNode.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_65_1();
  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_66_2();
  OUTLINED_FUNCTION_70_3();
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_73_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_76_3();
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_75_4();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_74_6();
  MEMORY[0x24BDAC7A8](v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578826F8);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_39_2();
  v14 = v2 + *(int *)(v13 + 48);
  OUTLINED_FUNCTION_15_14(a1);
  sub_24982A274(a2, v14);
  v15 = (char *)sub_24982D254 + 4 * byte_24983E310[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24982D254()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;

  sub_24982A274(v0, (uint64_t)v2);
  v3 = *v2;
  v4 = v2[1];
  if (OUTLINED_FUNCTION_8_26())
  {
    OUTLINED_FUNCTION_49_5();
    sub_2497D5E68(v0, &qword_2578826F8);
    v5 = 0;
  }
  else
  {
    v7 = *v1;
    v6 = v1[1];
    v5 = MEMORY[0x24BCF78FC](v3, v4, v7, v6);
    sub_249748C10(v7, v6);
    OUTLINED_FUNCTION_49_5();
    OUTLINED_FUNCTION_12_14();
  }
  return v5 & 1;
}

uint64_t sub_24982D4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for PropertyListNode();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_24982A274(a1 + v12, (uint64_t)v10);
        sub_24982A274(a2 + v12, (uint64_t)v7);
        v15 = static PropertyListNode.== infix(_:_:)(v10, v7);
        sub_2498298EC((uint64_t)v7);
        sub_2498298EC((uint64_t)v10);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_24982D600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumTagSinglePayload;
  _BOOL8 v35;
  unint64_t v36;
  char v37;
  char v38;
  char v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;

  v4 = type metadata accessor for PropertyListNode();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v40 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578829E8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (int64_t *)((char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v40 - v16;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v44 = v5;
  v45 = 0;
  v43 = a1;
  v18 = *(_QWORD *)(a1 + 64);
  v41 = a1 + 64;
  v19 = 1 << *(_BYTE *)(a1 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v42 = (unint64_t)(v19 + 63) >> 6;
  v40 = v42 - 1;
  while (1)
  {
    if (v21)
    {
      v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v23 = v22 | (v45 << 6);
LABEL_8:
      v24 = *(_QWORD *)(v43 + 56);
      v25 = (_QWORD *)(*(_QWORD *)(v43 + 48) + 16 * v23);
      v26 = v25[1];
      *v14 = *v25;
      v14[1] = v26;
      v27 = v24 + *(_QWORD *)(v5 + 72) * v23;
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578826F0);
      sub_24982A274(v27, (uint64_t)v14 + *(int *)(v28 + 48));
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v28);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    v29 = v45 + 1;
    if (__OFADD__(v45, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v29 < v42)
    {
      v30 = *(_QWORD *)(v41 + 8 * v29);
      if (v30)
        goto LABEL_12;
      v31 = v45 + 2;
      ++v45;
      if (v29 + 1 < v42)
      {
        v30 = *(_QWORD *)(v41 + 8 * v31);
        if (v30)
          goto LABEL_15;
        v45 = v29 + 1;
        if (v29 + 2 < v42)
        {
          v30 = *(_QWORD *)(v41 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_12;
          }
          v45 = v29 + 2;
          if (v29 + 3 < v42)
          {
            v30 = *(_QWORD *)(v41 + 8 * (v29 + 3));
            if (v30)
            {
              v29 += 3;
              goto LABEL_12;
            }
            v31 = v29 + 4;
            v45 = v29 + 3;
            if (v29 + 4 < v42)
              break;
          }
        }
      }
    }
LABEL_29:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578826F0);
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v32);
    v21 = 0;
LABEL_30:
    sub_249831840((uint64_t)v14, (uint64_t)v17, &qword_2578829E8);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578826F0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v33);
    v35 = EnumTagSinglePayload == 1;
    if (EnumTagSinglePayload == 1)
      return v35;
    sub_2498298A8((uint64_t)&v17[*(int *)(v33 + 48)], (uint64_t)v10);
    v36 = sub_2497F2594();
    v38 = v37;
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
    {
      sub_2498298EC((uint64_t)v10);
      return 0;
    }
    v5 = v44;
    sub_24982A274(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v44 + 72) * v36, (uint64_t)v8);
    v39 = static PropertyListNode.== infix(_:_:)(v8, v10);
    sub_2498298EC((uint64_t)v8);
    result = sub_2498298EC((uint64_t)v10);
    if ((v39 & 1) == 0)
      return v35;
  }
  v30 = *(_QWORD *)(v41 + 8 * v31);
  if (v30)
  {
LABEL_15:
    v29 = v31;
LABEL_12:
    v21 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v29 << 6);
    v45 = v29;
    goto LABEL_8;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v42)
    {
      v45 = v40;
      goto LABEL_29;
    }
    v30 = *(_QWORD *)(v41 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

void PropertyListNode.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;

  v1 = OUTLINED_FUNCTION_47_8();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_71_7(v0);
  v3 = (char *)sub_24982DA60 + 4 * byte_24983E319[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_24982DA60()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *v0;
  v2 = v0[1];
  sub_2498376A8();
  sub_24983694C();
  return sub_249748C10(v1, v2);
}

uint64_t sub_24982DBC0()
{
  return 12383;
}

uint64_t sub_24982DBCC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v14;

  v2 = a1 == 0x6C616974696E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_2498375C4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1635017060 && a2 == 0xE400000000000000;
    if (v6 || (sub_2498375C4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 1702125924 && a2 == 0xE400000000000000;
      if (v7 || (sub_2498375C4() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
        if (v8 || (sub_2498375C4() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 1819242338 && a2 == 0xE400000000000000;
          if (v9 || (sub_2498375C4() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x72656765746E69 && a2 == 0xE700000000000000;
            if (v10 || (sub_2498375C4() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x656C62756F64 && a2 == 0xE600000000000000;
              if (v11 || (sub_2498375C4() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x7961727261 && a2 == 0xE500000000000000;
                if (v12 || (sub_2498375C4() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0x616E6F6974636964 && a2 == 0xEA00000000007972)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v14 = sub_2498375C4();
                  swift_bridgeObjectRelease();
                  if ((v14 & 1) != 0)
                    return 8;
                  else
                    return 9;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_24982DF24()
{
  return 9;
}

uint64_t sub_24982DF2C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24982DF60 + 4 * byte_24983E322[a1]))(0x6C616974696E69, 0xE700000000000000);
}

uint64_t sub_24982DF60()
{
  return 1635017060;
}

uint64_t sub_24982DF70()
{
  return 1702125924;
}

uint64_t sub_24982DF80()
{
  return 0x676E69727473;
}

uint64_t sub_24982DF94()
{
  return 1819242338;
}

uint64_t sub_24982DFA4()
{
  return 0x72656765746E69;
}

uint64_t sub_24982DFB8()
{
  return 0x656C62756F64;
}

uint64_t sub_24982DFCC()
{
  return 0x7961727261;
}

uint64_t sub_24982DFE0()
{
  return 0x616E6F6974636964;
}

uint64_t sub_24982DFFC()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_24982E018()
{
  return 0;
}

uint64_t sub_24982E024(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2498375C4();
    OUTLINED_FUNCTION_23_1();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_24982E08C()
{
  OUTLINED_FUNCTION_3_4();
  OUTLINED_FUNCTION_67_5();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_24982E0B4()
{
  sub_24982E08C();
}

uint64_t sub_24982E0D0()
{
  sub_2498303F0();
  return sub_249837750();
}

uint64_t sub_24982E0F8()
{
  sub_2498303F0();
  return sub_24983775C();
}

uint64_t sub_24982E120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24982E024(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24982E148()
{
  sub_2498304A4();
  return sub_249837750();
}

uint64_t sub_24982E170()
{
  sub_2498304A4();
  return sub_24983775C();
}

uint64_t sub_24982E198()
{
  unsigned __int8 *v0;

  return sub_24982DF2C(*v0);
}

uint64_t sub_24982E1A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24982DBCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24982E1C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24982DF24();
  *a1 = result;
  return result;
}

uint64_t sub_24982E1E8()
{
  sub_2498302F4();
  return sub_249837750();
}

uint64_t sub_24982E210()
{
  sub_2498302F4();
  return sub_24983775C();
}

uint64_t sub_24982E238()
{
  sub_249830558();
  return sub_249837750();
}

uint64_t sub_24982E260()
{
  sub_249830558();
  return sub_24983775C();
}

uint64_t sub_24982E288()
{
  sub_24983051C();
  return sub_249837750();
}

uint64_t sub_24982E2B0()
{
  sub_24983051C();
  return sub_24983775C();
}

uint64_t sub_24982E2D8()
{
  sub_249830330();
  return sub_249837750();
}

uint64_t sub_24982E300()
{
  sub_249830330();
  return sub_24983775C();
}

uint64_t sub_24982E328()
{
  sub_24983042C();
  return sub_249837750();
}

uint64_t sub_24982E350()
{
  sub_24983042C();
  return sub_24983775C();
}

uint64_t sub_24982E37C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24982DFFC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24982E3A4()
{
  sub_249830594();
  return sub_249837750();
}

uint64_t sub_24982E3CC()
{
  sub_249830594();
  return sub_24983775C();
}

uint64_t sub_24982E3F4()
{
  sub_249830468();
  return sub_249837750();
}

uint64_t sub_24982E41C()
{
  sub_249830468();
  return sub_24983775C();
}

void sub_24982E444()
{
  sub_249837690();
  OUTLINED_FUNCTION_67_5();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

uint64_t sub_24982E470()
{
  sub_2498304E0();
  return sub_249837750();
}

uint64_t sub_24982E498()
{
  sub_2498304E0();
  return sub_24983775C();
}

void PropertyListNode.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257882708);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_65_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882710);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_40_6(v2, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882718);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_39_8(v4, v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882720);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_38_7(v6, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882728);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_65_1();
  OUTLINED_FUNCTION_58_7(v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882730);
  OUTLINED_FUNCTION_18_14(v9, (uint64_t)&v35);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_65_1();
  OUTLINED_FUNCTION_58_7(v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882738);
  OUTLINED_FUNCTION_18_14(v12, (uint64_t)&v34);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_65_1();
  OUTLINED_FUNCTION_58_7(v14);
  v15 = sub_2498369A0();
  OUTLINED_FUNCTION_18_14(v15, (uint64_t)&v33);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_65_1();
  OUTLINED_FUNCTION_58_7(v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882740);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_65_1();
  OUTLINED_FUNCTION_58_7(v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882748);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_126();
  v24 = v23 - v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882750);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_126();
  v26 = (_QWORD *)OUTLINED_FUNCTION_81_2();
  __swift_project_boxed_opaque_existential_1(v26, v27);
  sub_2498302F4();
  sub_249837744();
  sub_24982A274(v32, v24);
  v28 = (char *)sub_24982E79C + 4 * word_24983E32C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_24982E79C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  v3 = v0[1];
  *(_BYTE *)(v1 - 104) = 1;
  sub_249830558();
  v4 = *(_QWORD *)(v1 - 360);
  OUTLINED_FUNCTION_10_15();
  *(_QWORD *)(v1 - 104) = v2;
  *(_QWORD *)(v1 - 96) = v3;
  sub_2497F2360();
  v5 = *(_QWORD *)(v1 - 344);
  sub_2498374F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 352) + 8))(v4, v5);
  OUTLINED_FUNCTION_14_15(*(_QWORD *)(v1 - 144));
  sub_249748C10(v2, v3);
  OUTLINED_FUNCTION_23_11();
}

void PropertyListNode.hashValue.getter()
{
  OUTLINED_FUNCTION_3_4();
  PropertyListNode.hash(into:)();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void PropertyListNode.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t *v69;
  uint64_t v70[19];
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v80 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578827D8);
  OUTLINED_FUNCTION_18_14(v6, (uint64_t)&v93);
  v79 = v7;
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_40_6(v9, v70[0]);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578827E0);
  OUTLINED_FUNCTION_18_14(v10, (uint64_t)&v92);
  v78 = v11;
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_65_1();
  v73 = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578827E8);
  OUTLINED_FUNCTION_18_14(v14, (uint64_t)&v91);
  v70[14] = v15;
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_65_1();
  v77 = v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578827F0);
  OUTLINED_FUNCTION_18_14(v18, (uint64_t)&v90);
  v70[13] = v19;
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_65_1();
  v76 = v21;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578827F8);
  v70[12] = *(_QWORD *)(v71 - 8);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_39_8(v23, v70[0]);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882800);
  OUTLINED_FUNCTION_18_14(v24, (uint64_t)&v89);
  v70[11] = v25;
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_65_1();
  v75 = v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882808);
  OUTLINED_FUNCTION_18_14(v28, (uint64_t)&v88);
  v70[10] = v29;
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_65_1();
  v74 = v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882810);
  OUTLINED_FUNCTION_18_14(v32, (uint64_t)&v87);
  v70[9] = v33;
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_38_7(v35, v70[0]);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882818);
  v70[15] = *(_QWORD *)(v83 - 8);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_65_1();
  v72 = v37;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882820);
  v82 = *(_QWORD *)(v84 - 8);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_126();
  v41 = v40 - v39;
  v81 = OUTLINED_FUNCTION_5_21();
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_66_2();
  v70[8] = v43;
  OUTLINED_FUNCTION_70_3();
  MEMORY[0x24BDAC7A8](v44);
  v70[7] = (uint64_t)v70 - v45;
  OUTLINED_FUNCTION_70_3();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_75_4();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_76_3();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_73_4();
  v50 = MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)v70 - v51;
  MEMORY[0x24BDAC7A8](v50);
  v54 = (char *)v70 - v53;
  v55 = a1[3];
  v85 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v55);
  sub_2498302F4();
  v56 = v86;
  sub_249837720();
  if (!v56)
  {
    v70[2] = (uint64_t)v52;
    v70[3] = v2;
    v70[4] = v3;
    v70[5] = v4;
    v70[6] = (uint64_t)v54;
    v57 = v84;
    v58 = v41;
    v59 = sub_24983745C();
    v60 = *(_QWORD *)(v59 + 16);
    if (v60)
    {
      v86 = v41;
      v70[1] = 0;
      v61 = *(unsigned __int8 *)(v59 + 32);
      sub_2497CD6C4(1, v60, v59, v59 + 32, 0, (2 * v60) | 1);
      v63 = v62;
      v65 = v64;
      swift_bridgeObjectRelease();
      if (v63 == v65 >> 1)
        __asm { BR              X9 }
      v57 = v84;
      v58 = v86;
    }
    v66 = v81;
    v67 = sub_2498371BC();
    swift_allocError();
    v69 = v68;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882828);
    *v69 = v66;
    sub_2498373A8();
    sub_2498371B0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v67 - 8) + 104))(v69, *MEMORY[0x24BEE26D0], v67);
    swift_willThrow();
    OUTLINED_FUNCTION_67_1();
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v58, v57);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v85);
  OUTLINED_FUNCTION_23_11();
}

uint64_t sub_24982F770()
{
  sub_249837690();
  PropertyListNode.hash(into:)();
  return sub_2498376E4();
}

void sub_24982F7A8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  PropertyListNode.init(from:)(a1, a2);
}

void sub_24982F7BC()
{
  PropertyListNode.encode(to:)();
}

void sub_24982F7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  CFTypeID *v16;
  unint64_t v17;
  unint64_t i;
  char v19;
  BOOL v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  CFTypeID *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[4];
  uint64_t v38;

  v38 = a2;
  v35 = *(_QWORD *)(OUTLINED_FUNCTION_5_21() - 8);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_56_8();
  v6 = v4 - v5;
  MEMORY[0x24BDAC7A8](v7);
  v34 = (CFTypeID *)((char *)&v30 - v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882618);
  v9 = (_QWORD *)sub_24983733C();
  v10 = 0;
  v36 = a1;
  OUTLINED_FUNCTION_0_14();
  v13 = v12 & v11;
  v31 = a1 + 64;
  v32 = (unint64_t)(v14 + 63) >> 6;
  v33 = v15 + 64;
  v16 = v34;
  if ((v12 & v11) == 0)
    goto LABEL_3;
LABEL_2:
  v17 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v17 | (v10 << 6); ; i = __clz(__rbit64(v22)) + (v10 << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v36 + 48) + 16 * i);
    v25 = *v24;
    v26 = v24[1];
    sub_24974BC28(*(_QWORD *)(v36 + 56) + 32 * i, (uint64_t)v37);
    sub_24982A274(v38, v6);
    swift_bridgeObjectRetain();
    sub_24982C6DC(v37, v16);
    sub_2498298EC(v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    *(_QWORD *)(v33 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v27 = (_QWORD *)(v9[6] + 16 * i);
    *v27 = v25;
    v27[1] = v26;
    sub_2498298A8((uint64_t)v16, v9[7] + *(_QWORD *)(v35 + 72) * i);
    v28 = v9[2];
    v20 = __OFADD__(v28, 1);
    v29 = v28 + 1;
    if (v20)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v9[2] = v29;
    if (v13)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v10, 1))
      goto LABEL_24;
    OUTLINED_FUNCTION_64_7();
    if (v19 == v20)
      return;
    OUTLINED_FUNCTION_63_6();
    v10 = v21;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v32)
        return;
      v22 = *(_QWORD *)(v31 + 8 * v10);
      if (!v22)
      {
        v10 = v21 + 2;
        if (v21 + 2 >= v32)
          return;
        v22 = *(_QWORD *)(v31 + 8 * v10);
        if (!v22)
          break;
      }
    }
LABEL_18:
    v13 = (v22 - 1) & v22;
  }
  OUTLINED_FUNCTION_64_7();
  if (v19 == v20)
    return;
  OUTLINED_FUNCTION_63_6();
  if (v22)
  {
    v10 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v32)
      return;
    v22 = *(_QWORD *)(v31 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_24982FA38(void (*a1)(_BYTE *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t i;
  BOOL v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_BYTE *);
  uint64_t v33;
  _BYTE v34[32];
  uint64_t v35;

  v32 = a1;
  v33 = a2;
  v5 = type metadata accessor for PropertyListNode();
  v31 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257882618);
  result = sub_24983733C();
  v9 = (_QWORD *)result;
  v10 = 0;
  v35 = a3;
  v13 = *(_QWORD *)(a3 + 64);
  v12 = a3 + 64;
  v11 = v13;
  v14 = 1 << *(_BYTE *)(v12 - 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v11;
  v28 = v12;
  v29 = (unint64_t)(v14 + 63) >> 6;
  v30 = result + 64;
  if ((v15 & v11) == 0)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v17 | (v10 << 6); ; i = __clz(__rbit64(v20)) + (v10 << 6))
  {
    v22 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * i);
    v23 = *v22;
    v24 = v22[1];
    sub_24974BC28(*(_QWORD *)(v35 + 56) + 32 * i, (uint64_t)v34);
    swift_bridgeObjectRetain();
    v32(v34);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
      return (uint64_t)v9;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
    *(_QWORD *)(v30 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v25 = (_QWORD *)(v9[6] + 16 * i);
    *v25 = v23;
    v25[1] = v24;
    result = sub_2498298A8((uint64_t)v7, v9[7] + *(_QWORD *)(v31 + 72) * i);
    v26 = v9[2];
    v19 = __OFADD__(v26, 1);
    v27 = v26 + 1;
    if (v19)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v9[2] = v27;
    if (v16)
      goto LABEL_4;
LABEL_5:
    v19 = __OFADD__(v10++, 1);
    if (v19)
      goto LABEL_27;
    if (v10 >= v29)
      return (uint64_t)v9;
    v20 = *(_QWORD *)(v28 + 8 * v10);
    if (!v20)
      break;
LABEL_15:
    v16 = (v20 - 1) & v20;
  }
  v21 = v10 + 1;
  if (v10 + 1 >= v29)
    return (uint64_t)v9;
  v20 = *(_QWORD *)(v28 + 8 * v21);
  if (v20)
    goto LABEL_14;
  v21 = v10 + 2;
  if (v10 + 2 >= v29)
    return (uint64_t)v9;
  v20 = *(_QWORD *)(v28 + 8 * v21);
  if (v20)
    goto LABEL_14;
  v21 = v10 + 3;
  if (v10 + 3 >= v29)
    return (uint64_t)v9;
  v20 = *(_QWORD *)(v28 + 8 * v21);
  if (v20)
  {
LABEL_14:
    v10 = v21;
    goto LABEL_15;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v29)
      return (uint64_t)v9;
    v20 = *(_QWORD *)(v28 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24982FCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  _OWORD v44[4];
  uint64_t v45;

  v4 = type metadata accessor for PropertyListNode();
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578829E8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v36 - v10;
  v12 = *(_QWORD *)(a2 + 64);
  v38 = a2 + 64;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v39 = (unint64_t)(v13 + 63) >> 6;
  v37 = v39 - 1;
  v41 = a2;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v43 = 0;
  if (!v15)
    goto LABEL_6;
LABEL_4:
  v18 = v17;
  v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v20 = v19 | (v43 << 6);
LABEL_5:
  v21 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v20);
  v23 = *v21;
  v22 = v21[1];
  v24 = *(_QWORD *)(v41 + 56) + *(_QWORD *)(v40 + 72) * v20;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578826F0);
  sub_24982A274(v24, (uint64_t)v9 + *(int *)(v25 + 48));
  *v9 = v23;
  v9[1] = v22;
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v25);
  swift_bridgeObjectRetain();
  v17 = v18;
  while (1)
  {
    sub_249831840((uint64_t)v9, (uint64_t)v11, &qword_2578829E8);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578826F0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v31) == 1)
    {
      swift_release();
      return sub_2498376A8();
    }
    v32 = v42;
    sub_2498298A8((uint64_t)&v11[*(int *)(v31 + 48)], v42);
    v33 = *(_QWORD *)(a1 + 64);
    v34 = *(_OWORD *)(a1 + 16);
    v44[0] = *(_OWORD *)a1;
    v44[1] = v34;
    v35 = *(_OWORD *)(a1 + 48);
    v44[2] = *(_OWORD *)(a1 + 32);
    v44[3] = v35;
    v45 = v33;
    sub_249836D84();
    swift_bridgeObjectRelease();
    PropertyListNode.hash(into:)(v44);
    sub_2498298EC(v32);
    result = sub_2498376E4();
    v17 ^= result;
    if (v15)
      goto LABEL_4;
LABEL_6:
    v26 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 < v39)
    {
      v27 = *(_QWORD *)(v38 + 8 * v26);
      if (v27)
        goto LABEL_9;
      v28 = v43 + 2;
      ++v43;
      if (v26 + 1 < v39)
      {
        v27 = *(_QWORD *)(v38 + 8 * v28);
        if (v27)
        {
          ++v26;
LABEL_9:
          v18 = v17;
          v15 = (v27 - 1) & v27;
          v20 = __clz(__rbit64(v27)) + (v26 << 6);
          v43 = v26;
          goto LABEL_5;
        }
        v29 = v26 + 2;
        v43 = v26 + 1;
        if (v26 + 2 < v39)
          break;
      }
    }
LABEL_21:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578826F0);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v30);
    v15 = 0;
  }
  v27 = *(_QWORD *)(v38 + 8 * v29);
  if (v27)
  {
    v26 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    v26 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v26 >= v39)
    {
      v43 = v37;
      goto LABEL_21;
    }
    v27 = *(_QWORD *)(v38 + 8 * v26);
    ++v29;
    if (v27)
      goto LABEL_9;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_249830020(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  char *v15;
  _QWORD v16[4];

  v3 = sub_2498369A0();
  v16[2] = *(_QWORD *)(v3 - 8);
  v16[3] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v16[1] = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PropertyListNode();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v16 - v10;
  v12 = *(_QWORD *)(a2 + 16);
  result = sub_2498376A8();
  if (v12)
  {
    v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v16[0] = v5;
    sub_24982A274(a2 + v14, (uint64_t)v11);
    sub_24982A274((uint64_t)v11, (uint64_t)v9);
    v15 = (char *)&loc_249830144 + 4 * byte_24983E350[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return result;
}

unint64_t sub_2498302F4()
{
  unint64_t result;

  result = qword_257882758;
  if (!qword_257882758)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EFB0, &type metadata for PropertyListNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882758);
  }
  return result;
}

unint64_t sub_249830330()
{
  unint64_t result;

  result = qword_257882760;
  if (!qword_257882760)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EF60, &type metadata for PropertyListNode.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882760);
  }
  return result;
}

unint64_t sub_24983036C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257882770;
  if (!qword_257882770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257882768);
    sub_249748A4C(&qword_257882778, (uint64_t (*)(uint64_t))type metadata accessor for PropertyListNode, (uint64_t)&protocol conformance descriptor for PropertyListNode);
    v3[0] = MEMORY[0x24BEE0D08];
    v3[1] = v2;
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257882770);
  }
  return result;
}

unint64_t sub_2498303F0()
{
  unint64_t result;

  result = qword_257882780;
  if (!qword_257882780)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EF10, &type metadata for PropertyListNode.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882780);
  }
  return result;
}

unint64_t sub_24983042C()
{
  unint64_t result;

  result = qword_257882798;
  if (!qword_257882798)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EEC0, &type metadata for PropertyListNode.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882798);
  }
  return result;
}

unint64_t sub_249830468()
{
  unint64_t result;

  result = qword_2578827A0;
  if (!qword_2578827A0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EE70, &type metadata for PropertyListNode.IntegerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578827A0);
  }
  return result;
}

unint64_t sub_2498304A4()
{
  unint64_t result;

  result = qword_2578827A8;
  if (!qword_2578827A8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EE20, &type metadata for PropertyListNode.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578827A8);
  }
  return result;
}

unint64_t sub_2498304E0()
{
  unint64_t result;

  result = qword_2578827B0;
  if (!qword_2578827B0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EDD0, &type metadata for PropertyListNode.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578827B0);
  }
  return result;
}

unint64_t sub_24983051C()
{
  unint64_t result;

  result = qword_2578827B8;
  if (!qword_2578827B8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983ED80, &type metadata for PropertyListNode.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578827B8);
  }
  return result;
}

unint64_t sub_249830558()
{
  unint64_t result;

  result = qword_2578827C8;
  if (!qword_2578827C8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983ED30, &type metadata for PropertyListNode.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578827C8);
  }
  return result;
}

unint64_t sub_249830594()
{
  unint64_t result;

  result = qword_2578827D0;
  if (!qword_2578827D0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983ECE0, &type metadata for PropertyListNode.InitialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578827D0);
  }
  return result;
}

unint64_t sub_2498305D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257882830;
  if (!qword_257882830)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257882768);
    sub_249748A4C(&qword_257882838, (uint64_t (*)(uint64_t))type metadata accessor for PropertyListNode, (uint64_t)&protocol conformance descriptor for PropertyListNode);
    v3[0] = MEMORY[0x24BEE0D38];
    v3[1] = v2;
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257882830);
  }
  return result;
}

uint64_t sub_249830654(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257882788);
    sub_249748A4C(a2, (uint64_t (*)(uint64_t))type metadata accessor for PropertyListNode, a3);
    v11 = v10;
    result = MEMORY[0x24BCF8F94](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

void sub_2498306D8()
{
  sub_249748A4C(&qword_257882850, (uint64_t (*)(uint64_t))type metadata accessor for PropertyListNode, (uint64_t)&protocol conformance descriptor for PropertyListNode);
}

uint64_t sub_249830708(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ContainerSubscript(uint64_t a1)
{
  return sub_24983072C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_24983072C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRelease();
  return result;
}

void _s8HIDUtils18ContainerSubscriptOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249830708(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  OUTLINED_FUNCTION_81();
}

uint64_t assignWithCopy for ContainerSubscript(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_249830708(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_24983072C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ContainerSubscript(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_24983072C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerSubscript(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContainerSubscript(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2498308B0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2498308C8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ContainerSubscript()
{
  return &type metadata for ContainerSubscript;
}

uint64_t *initializeBufferWithCopyOfBuffer for PropertyListNode(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v8 = *a2;
        v7 = a2[1];
        sub_249748BCC(v8, v7);
        *a1 = v8;
        a1[1] = v7;
        goto LABEL_9;
      case 1u:
        v10 = sub_2498369A0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_9;
      case 2u:
        v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 6u:
      case 7u:
        *a1 = *a2;
        swift_retain();
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for PropertyListNode(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      result = sub_249748C10(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
      break;
    case 1:
      v3 = sub_2498369A0();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    case 2:
      result = swift_bridgeObjectRelease();
      break;
    case 6:
    case 7:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for PropertyListNode(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v7 = *a2;
      v6 = a2[1];
      sub_249748BCC(v7, v6);
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_7;
    case 1u:
      v8 = sub_2498369A0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_7;
    case 2u:
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 6u:
    case 7u:
      *a1 = *a2;
      swift_retain();
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for PropertyListNode(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_2498298EC((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *a2;
        v6 = a2[1];
        sub_249748BCC(v7, v6);
        *a1 = v7;
        a1[1] = v6;
        goto LABEL_8;
      case 1u:
        v8 = sub_2498369A0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_8;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 6u:
      case 7u:
        *a1 = *a2;
        swift_retain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for PropertyListNode(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2498369A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PropertyListNode(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_2498298EC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2498369A0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_249830E5C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_249830E6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2498369A0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PropertyListNode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_249830F58 + 4 * byte_24983E37E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_249830F8C + 4 * byte_24983E379[v4]))();
}

uint64_t sub_249830F8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249830F94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249830F9CLL);
  return result;
}

uint64_t sub_249830FA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249830FB0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_249830FB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249830FBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PropertyListNode.CodingKeys()
{
  return &type metadata for PropertyListNode.CodingKeys;
}

ValueMetadata *type metadata accessor for PropertyListNode.InitialCodingKeys()
{
  return &type metadata for PropertyListNode.InitialCodingKeys;
}

ValueMetadata *type metadata accessor for PropertyListNode.DataCodingKeys()
{
  return &type metadata for PropertyListNode.DataCodingKeys;
}

ValueMetadata *type metadata accessor for PropertyListNode.DateCodingKeys()
{
  return &type metadata for PropertyListNode.DateCodingKeys;
}

ValueMetadata *type metadata accessor for PropertyListNode.StringCodingKeys()
{
  return &type metadata for PropertyListNode.StringCodingKeys;
}

ValueMetadata *type metadata accessor for PropertyListNode.BoolCodingKeys()
{
  return &type metadata for PropertyListNode.BoolCodingKeys;
}

ValueMetadata *type metadata accessor for PropertyListNode.IntegerCodingKeys()
{
  return &type metadata for PropertyListNode.IntegerCodingKeys;
}

ValueMetadata *type metadata accessor for PropertyListNode.DoubleCodingKeys()
{
  return &type metadata for PropertyListNode.DoubleCodingKeys;
}

ValueMetadata *type metadata accessor for PropertyListNode.ArrayCodingKeys()
{
  return &type metadata for PropertyListNode.ArrayCodingKeys;
}

uint64_t _s8HIDUtils16PropertyListNodeO14DataCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2498310A0 + 4 * byte_24983E383[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2498310C0 + 4 * byte_24983E388[v4]))();
}

_BYTE *sub_2498310A0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2498310C0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2498310C8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2498310D0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2498310D8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2498310E0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PropertyListNode.DictionaryCodingKeys()
{
  return &type metadata for PropertyListNode.DictionaryCodingKeys;
}

unint64_t sub_249831100()
{
  unint64_t result;

  result = qword_257882900;
  if (!qword_257882900)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E6A8, &type metadata for PropertyListNode.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882900);
  }
  return result;
}

unint64_t sub_249831140()
{
  unint64_t result;

  result = qword_257882908;
  if (!qword_257882908)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E760, &type metadata for PropertyListNode.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882908);
  }
  return result;
}

unint64_t sub_249831180()
{
  unint64_t result;

  result = qword_257882910;
  if (!qword_257882910)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E818, &type metadata for PropertyListNode.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882910);
  }
  return result;
}

unint64_t sub_2498311C0()
{
  unint64_t result;

  result = qword_257882918;
  if (!qword_257882918)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E8D0, &type metadata for PropertyListNode.IntegerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882918);
  }
  return result;
}

unint64_t sub_249831200()
{
  unint64_t result;

  result = qword_257882920;
  if (!qword_257882920)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E988, &type metadata for PropertyListNode.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882920);
  }
  return result;
}

unint64_t sub_249831240()
{
  unint64_t result;

  result = qword_257882928;
  if (!qword_257882928)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EA40, &type metadata for PropertyListNode.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882928);
  }
  return result;
}

unint64_t sub_249831280()
{
  unint64_t result;

  result = qword_257882930;
  if (!qword_257882930)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EAF8, &type metadata for PropertyListNode.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882930);
  }
  return result;
}

unint64_t sub_2498312C0()
{
  unint64_t result;

  result = qword_257882938;
  if (!qword_257882938)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EBB0, &type metadata for PropertyListNode.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882938);
  }
  return result;
}

unint64_t sub_249831300()
{
  unint64_t result;

  result = qword_257882940;
  if (!qword_257882940)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983ECB8, &type metadata for PropertyListNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882940);
  }
  return result;
}

unint64_t sub_249831340()
{
  unint64_t result;

  result = qword_257882948;
  if (!qword_257882948)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EBD8, &type metadata for PropertyListNode.InitialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882948);
  }
  return result;
}

unint64_t sub_249831380()
{
  unint64_t result;

  result = qword_257882950;
  if (!qword_257882950)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EC00, &type metadata for PropertyListNode.InitialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882950);
  }
  return result;
}

unint64_t sub_2498313C0()
{
  unint64_t result;

  result = qword_257882958;
  if (!qword_257882958)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EB20, &type metadata for PropertyListNode.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882958);
  }
  return result;
}

unint64_t sub_249831400()
{
  unint64_t result;

  result = qword_257882960;
  if (!qword_257882960)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EB48, &type metadata for PropertyListNode.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882960);
  }
  return result;
}

unint64_t sub_249831440()
{
  unint64_t result;

  result = qword_257882968;
  if (!qword_257882968)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EA68, &type metadata for PropertyListNode.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882968);
  }
  return result;
}

unint64_t sub_249831480()
{
  unint64_t result;

  result = qword_257882970;
  if (!qword_257882970)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EA90, &type metadata for PropertyListNode.DateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882970);
  }
  return result;
}

unint64_t sub_2498314C0()
{
  unint64_t result;

  result = qword_257882978;
  if (!qword_257882978)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E9B0, &type metadata for PropertyListNode.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882978);
  }
  return result;
}

unint64_t sub_249831500()
{
  unint64_t result;

  result = qword_257882980;
  if (!qword_257882980)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E9D8, &type metadata for PropertyListNode.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882980);
  }
  return result;
}

unint64_t sub_249831540()
{
  unint64_t result;

  result = qword_257882988;
  if (!qword_257882988)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E8F8, &type metadata for PropertyListNode.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882988);
  }
  return result;
}

unint64_t sub_249831580()
{
  unint64_t result;

  result = qword_257882990;
  if (!qword_257882990)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E920, &type metadata for PropertyListNode.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882990);
  }
  return result;
}

unint64_t sub_2498315C0()
{
  unint64_t result;

  result = qword_257882998;
  if (!qword_257882998)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E840, &type metadata for PropertyListNode.IntegerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882998);
  }
  return result;
}

unint64_t sub_249831600()
{
  unint64_t result;

  result = qword_2578829A0;
  if (!qword_2578829A0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E868, &type metadata for PropertyListNode.IntegerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578829A0);
  }
  return result;
}

unint64_t sub_249831640()
{
  unint64_t result;

  result = qword_2578829A8;
  if (!qword_2578829A8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E788, &type metadata for PropertyListNode.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578829A8);
  }
  return result;
}

unint64_t sub_249831680()
{
  unint64_t result;

  result = qword_2578829B0;
  if (!qword_2578829B0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E7B0, &type metadata for PropertyListNode.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578829B0);
  }
  return result;
}

unint64_t sub_2498316C0()
{
  unint64_t result;

  result = qword_2578829B8;
  if (!qword_2578829B8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E6D0, &type metadata for PropertyListNode.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578829B8);
  }
  return result;
}

unint64_t sub_249831700()
{
  unint64_t result;

  result = qword_2578829C0;
  if (!qword_2578829C0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E6F8, &type metadata for PropertyListNode.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578829C0);
  }
  return result;
}

unint64_t sub_249831740()
{
  unint64_t result;

  result = qword_2578829C8;
  if (!qword_2578829C8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E618, &type metadata for PropertyListNode.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578829C8);
  }
  return result;
}

unint64_t sub_249831780()
{
  unint64_t result;

  result = qword_2578829D0;
  if (!qword_2578829D0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983E640, &type metadata for PropertyListNode.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578829D0);
  }
  return result;
}

unint64_t sub_2498317C0()
{
  unint64_t result;

  result = qword_2578829D8;
  if (!qword_2578829D8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EC28, &type metadata for PropertyListNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578829D8);
  }
  return result;
}

unint64_t sub_249831800()
{
  unint64_t result;

  result = qword_2578829E0;
  if (!qword_2578829E0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983EC50, &type metadata for PropertyListNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578829E0);
  }
  return result;
}

void sub_249831840(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_26_13(v3);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24983186C()
{
  return OUTLINED_FUNCTION_65_5();
}

uint64_t OUTLINED_FUNCTION_0_31@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  return sub_24982A274(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

uint64_t OUTLINED_FUNCTION_3_27()
{
  return sub_24983739C();
}

uint64_t OUTLINED_FUNCTION_4_28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_5_21()
{
  return type metadata accessor for PropertyListNode();
}

uint64_t OUTLINED_FUNCTION_6_18()
{
  return sub_24983730C();
}

uint64_t OUTLINED_FUNCTION_8_26()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_9_21@<X0>(uint64_t (*a1)(_QWORD, _QWORD)@<X8>)
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 - 120), *(_QWORD *)(v1 - 136));
}

uint64_t OUTLINED_FUNCTION_10_15()
{
  return sub_249837480();
}

uint64_t OUTLINED_FUNCTION_11_18()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_12_14()
{
  uint64_t v0;

  return sub_2498298EC(v0);
}

uint64_t OUTLINED_FUNCTION_14_15@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_15_14(uint64_t a1)
{
  uint64_t v1;

  return sub_24982A274(a1, v1);
}

void OUTLINED_FUNCTION_16_15()
{
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_17_16()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_18_14@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_21_15@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_25_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_26_13(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_27_9()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_30_8()
{
  return sub_249837480();
}

uint64_t OUTLINED_FUNCTION_31_10()
{
  return sub_2498374F8();
}

uint64_t OUTLINED_FUNCTION_33_12()
{
  return sub_249837480();
}

_QWORD *OUTLINED_FUNCTION_35_8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 - 400);
  *v2 = v0;
  return v2;
}

uint64_t OUTLINED_FUNCTION_36_11()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_37_9()
{
  uint64_t v0;
  uint64_t v1;

  sub_24982F7D4(v0, v1);
}

void OUTLINED_FUNCTION_38_7(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 240) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_39_8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_40_6(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_41_8()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 112), *(_QWORD *)(v0 - 88));
  return swift_getDynamicType();
}

uint64_t OUTLINED_FUNCTION_43_9()
{
  return sub_249837438();
}

uint64_t OUTLINED_FUNCTION_45_9(uint64_t a1)
{
  uint64_t v1;

  return sub_24982A274(a1, v1);
}

uint64_t OUTLINED_FUNCTION_46_7()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_47_8()
{
  return sub_2498369A0();
}

uint64_t OUTLINED_FUNCTION_49_8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_50_5()
{
  uint64_t v0;

  return sub_2498298EC(v0);
}

uint64_t OUTLINED_FUNCTION_51_9()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_57_8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = v0;
  return swift_unknownObjectRetain();
}

void OUTLINED_FUNCTION_58_7(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

id OUTLINED_FUNCTION_61_7@<X0>(char a1@<W8>)
{
  void *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = 0;
  *(_BYTE *)(v2 - 104) = a1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_65_5()
{
  return sub_24982C6DC();
}

uint64_t OUTLINED_FUNCTION_67_5()
{
  return sub_2498376A8();
}

uint64_t OUTLINED_FUNCTION_68_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_71_7(uint64_t a1)
{
  uint64_t v1;

  return sub_24982A274(a1, v1);
}

uint64_t OUTLINED_FUNCTION_77_4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_24974BC28(v0, v1 - 112);
}

uint64_t OUTLINED_FUNCTION_78_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_81_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_82_1()
{
  return sub_249836D54();
}

uint64_t OUTLINED_FUNCTION_84_1()
{
  uint64_t v0;

  return v0;
}

void HIDServicePropertyKey.stringValue.getter()
{
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_33_3();
  OUTLINED_FUNCTION_27();
}

HIDUtils::HIDServicePropertyKey_optional __swiftcall HIDServicePropertyKey.init(stringValue:)(Swift::String stringValue)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  HIDUtils::HIDServicePropertyKey_optional result;

  static HIDServicePropertyKey.allCases.getter();
  v1 = OUTLINED_FUNCTION_33_3();
  v2 = sub_249823614(v1);
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    swift_bridgeObjectRelease();
  v3 = OUTLINED_FUNCTION_33_3();
  result.value.rawValue._object = v4;
  result.value.rawValue._countAndFlagsBits = v3;
  return result;
}

uint64_t static HIDServicePropertyKey.allCases.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257882A18);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24983F000;
  *(_QWORD *)(v0 + 32) = 0x656369767265535FLL;
  *(_QWORD *)(v0 + 40) = 0xEA00000000004449;
  strcpy((char *)(v0 + 48), "HIDAccelCurves");
  *(_BYTE *)(v0 + 63) = -18;
  OUTLINED_FUNCTION_8_27();
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v3;
  strcpy((char *)(v1 + 80), "Authenticated");
  *(_WORD *)(v1 + 94) = -4864;
  *(_QWORD *)(v1 + 96) = 0x6E492D746C697542;
  *(_QWORD *)(v1 + 104) = 0xE800000000000000;
  strcpy((char *)(v1 + 112), "CapsLockDelay");
  *(_WORD *)(v1 + 126) = -4864;
  OUTLINED_FUNCTION_2_33();
  *(_QWORD *)(v4 + 128) = v5;
  *(_QWORD *)(v4 + 136) = v6;
  strcpy((char *)(v4 + 144), "DeviceTypeHint");
  *(_BYTE *)(v4 + 159) = -18;
  OUTLINED_FUNCTION_8_27();
  *(_QWORD *)(v7 + 160) = v9;
  *(_QWORD *)(v7 + 168) = v8;
  OUTLINED_FUNCTION_8_27();
  *(_QWORD *)(v10 + 176) = v12;
  *(_QWORD *)(v10 + 184) = v11;
  OUTLINED_FUNCTION_1_30();
  *(_QWORD *)(v13 + 192) = v14;
  *(_QWORD *)(v13 + 200) = v15;
  *(_QWORD *)(v13 + 208) = 0x437972746E756F43;
  *(_QWORD *)(v13 + 216) = 0xEB0000000065646FLL;
  *(_QWORD *)(v13 + 224) = v16;
  *(_QWORD *)(v13 + 232) = 0x8000000249841C50;
  strcpy((char *)(v13 + 240), "StandardType");
  *(_BYTE *)(v13 + 253) = 0;
  *(_WORD *)(v13 + 254) = -5120;
  strcpy((char *)(v13 + 256), "Manufacturer");
  *(_BYTE *)(v13 + 269) = 0;
  *(_WORD *)(v13 + 270) = -5120;
  OUTLINED_FUNCTION_8_27();
  *(_QWORD *)(v17 + 272) = v19;
  *(_QWORD *)(v17 + 280) = v18;
  OUTLINED_FUNCTION_1_30();
  *(_QWORD *)(v20 + 288) = v21;
  *(_QWORD *)(v20 + 296) = v22;
  OUTLINED_FUNCTION_1_30();
  *(_QWORD *)(v23 + 304) = v25;
  *(_QWORD *)(v23 + 312) = v24;
  OUTLINED_FUNCTION_1_30();
  v26[40] = v28;
  v26[41] = v27;
  v26[42] = v29 | 1;
  v26[43] = 0x8000000249841D20;
  OUTLINED_FUNCTION_1_30();
  *(_QWORD *)(v30 + 352) = v31;
  *(_QWORD *)(v30 + 360) = v32;
  OUTLINED_FUNCTION_1_30();
  *(_QWORD *)(v33 + 368) = v34;
  *(_QWORD *)(v33 + 376) = v35;
  OUTLINED_FUNCTION_1_30();
  *(_QWORD *)(v36 + 384) = v37;
  *(_QWORD *)(v36 + 392) = v38;
  strcpy((char *)(v36 + 400), "PrimaryUsage");
  *(_BYTE *)(v36 + 413) = 0;
  *(_WORD *)(v36 + 414) = -5120;
  *(_QWORD *)(v36 + 416) = v39;
  *(_QWORD *)(v36 + 424) = 0x8000000249841DA0;
  *(_QWORD *)(v36 + 432) = 0x746375646F7250;
  *(_QWORD *)(v36 + 440) = 0xE700000000000000;
  *(_QWORD *)(v36 + 448) = 0x49746375646F7250;
  *(_QWORD *)(v36 + 456) = 0xE900000000000044;
  *(_QWORD *)(v36 + 464) = v39;
  *(_QWORD *)(v36 + 472) = 0x8000000249841E20;
  strcpy((char *)(v36 + 480), "ReportInterval");
  *(_BYTE *)(v36 + 495) = -18;
  *(_QWORD *)(v36 + 496) = v40;
  *(_QWORD *)(v36 + 504) = 0x8000000249841E40;
  *(_QWORD *)(v36 + 512) = v41;
  *(_QWORD *)(v36 + 520) = 0x8000000249841E60;
  OUTLINED_FUNCTION_2_33();
  v42[66] = v43;
  v42[67] = v44;
  v42[68] = v45;
  v42[69] = 0x8000000249841E80;
  v42[70] = v45 - 1;
  OUTLINED_FUNCTION_2_33();
  *(_QWORD *)(v46 + 568) = v47;
  *(_QWORD *)(v46 + 576) = v48;
  OUTLINED_FUNCTION_2_33();
  v49[73] = v50;
  v49[75] = 0x8000000249841F40;
  v49[76] = v51 + 4;
  v49[74] = v51 - 3;
  v49[77] = 0x8000000249841EE0;
  v49[78] = v51 - 3;
  v49[79] = 0x8000000249841F60;
  v49[80] = 0x726F70736E617254;
  v49[81] = v52 | 0x30;
  v49[82] = v51 | 3;
  OUTLINED_FUNCTION_2_33();
  *(_QWORD *)(v53 + 664) = v54;
  *(_QWORD *)(v53 + 672) = v55;
  OUTLINED_FUNCTION_2_33();
  v56[85] = v57;
  v56[86] = v58;
  v56[87] = 0x8000000249841B90;
  v56[88] = v59;
  v56[89] = 0x8000000249841B70;
  if (qword_2578823A8 != -1)
    swift_once();
  v60 = unk_257882A10;
  *(_QWORD *)(v0 + 720) = qword_257882A08;
  *(_QWORD *)(v0 + 728) = v60;
  *(_QWORD *)(v0 + 736) = 0x4449726F646E6556;
  *(_QWORD *)(v0 + 744) = 0xE800000000000000;
  swift_bridgeObjectRetain();
  return v0;
}

void HIDServicePropertyKey.rawValue.getter()
{
  OUTLINED_FUNCTION_3_28();
  OUTLINED_FUNCTION_33_3();
  OUTLINED_FUNCTION_27();
}

uint64_t HIDServicePropertyKey.rawValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*HIDServicePropertyKey.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDServicePropertyKey.intValue.getter()
{
  return 0;
}

HIDUtils::HIDServicePropertyKey_optional __swiftcall HIDServicePropertyKey.init(intValue:)(Swift::Int intValue)
{
  uint64_t v1;
  void *v2;
  HIDUtils::HIDServicePropertyKey_optional result;

  v1 = 0;
  v2 = 0;
  result.value.rawValue._object = v2;
  result.value.rawValue._countAndFlagsBits = v1;
  return result;
}

uint64_t static HIDServicePropertyKey._serviceID.getter()
{
  return 0x656369767265535FLL;
}

void static HIDServicePropertyKey.accelParametricCurves.getter()
{
  OUTLINED_FUNCTION_7_21();
}

unint64_t static HIDServicePropertyKey.appleVendorSupported.getter()
{
  return OUTLINED_FUNCTION_0_32(20);
}

uint64_t static HIDServicePropertyKey.authenticatedDevice.getter()
{
  return 0x69746E6568747541;
}

uint64_t static HIDServicePropertyKey.builtIn.getter()
{
  return 0x6E492D746C697542;
}

uint64_t static HIDServicePropertyKey.capsLockDelay.getter()
{
  return 0x6B636F4C73706143;
}

unint64_t static HIDServicePropertyKey.capsLockLanguageSwitch.getter()
{
  return OUTLINED_FUNCTION_0_32(22);
}

void static HIDServicePropertyKey.deviceTypeHint.getter()
{
  OUTLINED_FUNCTION_7_21();
}

unint64_t static HIDServicePropertyKey.deviceUsagePairs.getter()
{
  return OUTLINED_FUNCTION_0_32(16);
}

unint64_t static HIDServicePropertyKey.eventServiceProperties.getter()
{
  return OUTLINED_FUNCTION_0_32(25);
}

unint64_t static HIDServicePropertyKey.fnKeyboardUsageMap.getter()
{
  return OUTLINED_FUNCTION_0_32(18);
}

uint64_t static HIDServicePropertyKey.keyboardCountryCode.getter()
{
  return 0x437972746E756F43;
}

unint64_t static HIDServicePropertyKey.keyboardLanguage.getter()
{
  return OUTLINED_FUNCTION_0_32(16);
}

void static HIDServicePropertyKey.keyboardStandardType.getter()
{
  OUTLINED_FUNCTION_4_29();
}

void static HIDServicePropertyKey.manufacturer.getter()
{
  OUTLINED_FUNCTION_4_29();
}

unint64_t static HIDServicePropertyKey.mouseAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_32(20);
}

unint64_t static HIDServicePropertyKey.mouseScrollAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_32(26);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationMultiplier.getter()
{
  return OUTLINED_FUNCTION_0_32(32);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationSupport.getter()
{
  return OUTLINED_FUNCTION_0_32(30);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationTable.getter()
{
  return OUTLINED_FUNCTION_0_32(27);
}

unint64_t static HIDServicePropertyKey.pointerAccelerationType.getter()
{
  return OUTLINED_FUNCTION_0_32(26);
}

unint64_t static HIDServicePropertyKey.pointerButtonCount.getter()
{
  return OUTLINED_FUNCTION_0_32(21);
}

unint64_t static HIDServicePropertyKey.pointerButtonMode.getter()
{
  return OUTLINED_FUNCTION_0_32(20);
}

unint64_t static HIDServicePropertyKey.pointerReportRate.getter()
{
  return OUTLINED_FUNCTION_0_32(20);
}

unint64_t static HIDServicePropertyKey.pointerResolution.getter()
{
  return OUTLINED_FUNCTION_0_32(20);
}

void static HIDServicePropertyKey.primaryUsage.getter()
{
  OUTLINED_FUNCTION_4_29();
}

unint64_t static HIDServicePropertyKey.primaryUsagePage.getter()
{
  return OUTLINED_FUNCTION_0_32(16);
}

uint64_t static HIDServicePropertyKey.product.getter()
{
  return 0x746375646F7250;
}

uint64_t static HIDServicePropertyKey.productID.getter()
{
  return 0x49746375646F7250;
}

unint64_t static HIDServicePropertyKey.reportDescriptor.getter()
{
  return OUTLINED_FUNCTION_0_32(16);
}

void static HIDServicePropertyKey.reportInterval.getter()
{
  OUTLINED_FUNCTION_7_21();
}

unint64_t static HIDServicePropertyKey.scrollAccelerationSupport.getter()
{
  return OUTLINED_FUNCTION_0_32(29);
}

unint64_t static HIDServicePropertyKey.scrollAccelerationTable.getter()
{
  return OUTLINED_FUNCTION_0_32(26);
}

unint64_t static HIDServicePropertyKey.scrollAccelerationType.getter()
{
  return OUTLINED_FUNCTION_0_32(25);
}

unint64_t static HIDServicePropertyKey.scrollAccelParametricCurves.getter()
{
  return OUTLINED_FUNCTION_0_32(20);
}

unint64_t static HIDServicePropertyKey.scrollReportRate.getter()
{
  return OUTLINED_FUNCTION_0_32(19);
}

unint64_t static HIDServicePropertyKey.scrollResolution.getter()
{
  return OUTLINED_FUNCTION_0_32(19);
}

unint64_t static HIDServicePropertyKey.subinterfaceID.getter()
{
  return OUTLINED_FUNCTION_0_32(17);
}

unint64_t static HIDServicePropertyKey.supportsGestureScrolling.getter()
{
  return OUTLINED_FUNCTION_0_32(24);
}

unint64_t static HIDServicePropertyKey.surfaceDimensions.getter()
{
  return OUTLINED_FUNCTION_0_32(17);
}

unint64_t static HIDServicePropertyKey.trackpadAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_32(23);
}

unint64_t static HIDServicePropertyKey.trackpadScrollAcceleration.getter()
{
  return OUTLINED_FUNCTION_0_32(29);
}

uint64_t static HIDServicePropertyKey.transport.getter()
{
  return 0x726F70736E617254;
}

unint64_t static HIDServicePropertyKey.universalControlBuiltIn.getter()
{
  return OUTLINED_FUNCTION_0_32(23);
}

unint64_t static HIDServicePropertyKey.universalControlVirtualService.getter()
{
  return OUTLINED_FUNCTION_0_32(30);
}

uint64_t sub_2498326F8()
{
  uint64_t result;
  uint64_t v1;

  result = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  qword_257882A08 = result;
  unk_257882A10 = v1;
  return result;
}

void static HIDServicePropertyKey.userDeviceCreateInactive.getter()
{
  if (qword_2578823A8 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_27();
}

uint64_t static HIDServicePropertyKey.vendorID.getter()
{
  return 0x4449726F646E6556;
}

uint64_t sub_249832794@<X0>(Swift::String *a1@<X0>, HIDUtils::HIDServicePropertyKey *a2@<X8>)
{
  uint64_t result;
  HIDUtils::HIDServicePropertyKey v4;

  v4 = HIDServicePropertyKey.init(rawValue:)(*a1);
  result = v4.rawValue._countAndFlagsBits;
  *a2 = v4;
  return result;
}

unint64_t sub_2498327C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257882A20;
  if (!qword_257882A20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257882A28);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257882A20);
  }
  return result;
}

uint64_t sub_249832808@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = static HIDServicePropertyKey.allCases.getter();
  *a1 = result;
  return result;
}

unint64_t sub_249832830()
{
  unint64_t result;

  result = qword_257882A30;
  if (!qword_257882A30)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServicePropertyKey, &type metadata for HIDServicePropertyKey);
    atomic_store(result, (unint64_t *)&qword_257882A30);
  }
  return result;
}

unint64_t sub_249832870()
{
  unint64_t result;

  result = qword_257882A38;
  if (!qword_257882A38)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServicePropertyKey, &type metadata for HIDServicePropertyKey);
    atomic_store(result, (unint64_t *)&qword_257882A38);
  }
  return result;
}

void sub_2498328AC()
{
  HIDServicePropertyKey.stringValue.getter();
}

uint64_t sub_2498328B4@<X0>(uint64_t a1@<X0>, HIDUtils::HIDServicePropertyKey_optional *a2@<X8>)
{
  uint64_t result;
  HIDUtils::HIDServicePropertyKey_optional v5;

  v5 = HIDServicePropertyKey.init(stringValue:)(*(Swift::String *)&a1);
  result = v5.value.rawValue._countAndFlagsBits;
  *a2 = v5;
  return result;
}

void sub_2498328D8(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

unint64_t sub_2498328E4()
{
  unint64_t result;

  result = qword_257882A40;
  if (!qword_257882A40)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServicePropertyKey, &type metadata for HIDServicePropertyKey);
    atomic_store(result, (unint64_t *)&qword_257882A40);
  }
  return result;
}

uint64_t sub_249832920()
{
  _QWORD *v0;

  return sub_249823744(*v0, v0[1]);
}

uint64_t sub_249832928(uint64_t a1)
{
  _QWORD *v1;

  return sub_2498237C0(a1, *v1, v1[1]);
}

uint64_t sub_249832930(uint64_t a1)
{
  _QWORD *v1;

  return sub_24982385C(a1, *v1, v1[1]);
}

uint64_t sub_249832938()
{
  sub_249827F5C();
  return sub_249837750();
}

uint64_t sub_249832960()
{
  sub_249827F5C();
  return sub_24983775C();
}

ValueMetadata *type metadata accessor for HIDServicePropertyKey()
{
  return &type metadata for HIDServicePropertyKey;
}

unint64_t OUTLINED_FUNCTION_0_32(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_3_28()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2498329E8(unsigned __int8 a1)
{
  char *v1;
  char v2;

  v2 = *v1;
  if ((*v1 & a1) != 0)
    *v1 = v2 & ~a1;
  return OUTLINED_FUNCTION_38_8((v2 & a1));
}

unint64_t sub_249832A14(unsigned int a1)
{
  int *v1;
  int v2;
  int v3;
  uint64_t v4;

  v2 = *v1;
  v3 = *v1 & a1;
  if (v3)
  {
    *v1 = v2 & ~a1;
    v4 = v2 & a1;
  }
  else
  {
    v4 = 0;
  }
  return v4 | ((unint64_t)(v3 == 0) << 32);
}

uint64_t sub_249832A58(char a1)
{
  char *v1;
  char v2;

  v2 = *v1;
  *v1 |= a1;
  return OUTLINED_FUNCTION_38_8((v2 & a1));
}

unint64_t sub_249832A7C(unsigned int a1)
{
  int *v1;
  int v2;

  v2 = *v1;
  *v1 |= a1;
  return v2 & a1 | ((unint64_t)((v2 & a1) == 0) << 32);
}

uint64_t DigitizerType.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*DigitizerType.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t static DigitizerType.stylus.getter()
{
  return 0;
}

uint64_t static DigitizerType.puck.getter()
{
  return 1;
}

uint64_t static DigitizerType.finger.getter()
{
  return 2;
}

uint64_t static DigitizerType.hand.getter()
{
  return 3;
}

void sub_249832AEC(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

void sub_249832AF8()
{
  sub_249823780();
}

void sub_249832B00()
{
  sub_2498237FC();
}

void sub_249832B08()
{
  sub_249823834();
}

void *static DigitizerType.allCases.getter()
{
  return &unk_251AB5440;
}

void sub_249832B1C(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AB5440;
}

uint64_t DigitizerType.description.getter(int a1)
{
  uint64_t result;

  result = 0x73756C797473;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 1801680240;
      break;
    case 2:
      result = 0x7265676E6966;
      break;
    case 3:
      result = 1684955496;
      break;
    default:
      result = sub_249837540();
      break;
  }
  return result;
}

uint64_t sub_249832BD0()
{
  int *v0;

  return DigitizerType.description.getter(*v0);
}

uint64_t DigitizerEventMask.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*DigitizerEventMask.rawValue.modify())(void)
{
  return nullsub_1;
}

unint64_t _s8HIDUtils13DigitizerTypeV8rawValueACSi_tcfC_0(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_0_2();
    result = OUTLINED_FUNCTION_1_25();
    __break(1u);
  }
  return result;
}

uint64_t static DigitizerEventMask.range.getter()
{
  return 1;
}

uint64_t static DigitizerEventMask.touch.getter()
{
  return 2;
}

uint64_t static DigitizerEventMask.position.getter()
{
  return 4;
}

uint64_t static DigitizerEventMask.identity.getter()
{
  return 32;
}

uint64_t static DigitizerEventMask.attribute.getter()
{
  return 64;
}

uint64_t static DigitizerEventMask.cancel.getter()
{
  return 128;
}

uint64_t static DigitizerEventMask.start.getter()
{
  return 256;
}

uint64_t static DigitizerEventMask.resting.getter()
{
  return 512;
}

uint64_t static DigitizerEventMask.fromEdgeFlat.getter()
{
  return 1024;
}

uint64_t static DigitizerEventMask.fromEdgeTip.getter()
{
  return 2048;
}

uint64_t static DigitizerEventMask.fromCorner.getter()
{
  return 4096;
}

uint64_t static DigitizerEventMask.swipePending.getter()
{
  return 0x2000;
}

uint64_t static DigitizerEventMask.fromEdgeForcePending.getter()
{
  return 0x4000;
}

uint64_t static DigitizerEventMask.fromEdgeForceActive.getter()
{
  return 0x8000;
}

uint64_t static DigitizerEventMask.tap.getter()
{
  return 0x20000;
}

uint64_t static DigitizerEventMask.swipeLocked.getter()
{
  return 0x40000;
}

uint64_t static DigitizerEventMask.swipeUp.getter()
{
  return 0x1000000;
}

uint64_t static DigitizerEventMask.swipeDown.getter()
{
  return 0x2000000;
}

uint64_t static DigitizerEventMask.swipeLeft.getter()
{
  return 0x4000000;
}

uint64_t static DigitizerEventMask.swipeRight.getter()
{
  return 0x8000000;
}

uint64_t static DigitizerEventMask.estimatedAltitude.getter()
{
  return 0x10000000;
}

uint64_t static DigitizerEventMask.estimatedAzimuth.getter()
{
  return 0x20000000;
}

uint64_t static DigitizerEventMask.estimatedPressure.getter()
{
  return 0x40000000;
}

_DWORD *sub_249832D38@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_249832D44(_DWORD *a1, int *a2)
{
  return sub_24981BB30(a1, *a2);
}

unint64_t sub_249832D4C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;

  result = sub_249832A14(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

unint64_t sub_249832D7C@<X0>(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;

  result = sub_249832A7C(*a1);
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t sub_249832DAC(unsigned int *a1)
{
  return sub_24981BBC0(*a1);
}

uint64_t sub_249832DB4(unsigned int *a1)
{
  return sub_249818490(*a1);
}

uint64_t sub_249832DBC(unsigned int *a1)
{
  return sub_24981BB44(*a1);
}

uint64_t sub_249832DC4@<X0>(unsigned int *a1@<X0>, _DWORD *a2@<X8>)
{
  unsigned int *v2;
  uint64_t result;

  result = sub_249835CD4(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_249832DF0(int *a1)
{
  int *v1;

  return sub_24981BB6C(*a1, *v1);
}

uint64_t sub_249832DFC(unsigned int *a1)
{
  unsigned int *v1;

  return sub_249835CDC(*a1, *v1);
}

uint64_t sub_249832E08(unsigned int *a1)
{
  return sub_24981BBC8(*a1);
}

void *static DigitizerEventMask.allCases.getter()
{
  return &unk_251AB5470;
}

void sub_249832E1C(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AB5470;
}

uint64_t DigitizerEventMask.description.getter(char a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v2 = MEMORY[0x24BEE4AF8];
  if ((a1 & 0x20) != 0)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_249817E2C(0, 1, 1);
    v3 = v21;
    OUTLINED_FUNCTION_25_12();
    if (v5)
    {
      OUTLINED_FUNCTION_7_22(v4);
      v3 = v21;
    }
    OUTLINED_FUNCTION_24_15();
  }
  else
  {
    v3 = MEMORY[0x24BEE4AF8];
  }
  if ((a1 & 4) != 0)
  {
    if ((OUTLINED_FUNCTION_19_15() & 1) == 0)
      OUTLINED_FUNCTION_6_19();
    OUTLINED_FUNCTION_25_12();
    if (v5)
      OUTLINED_FUNCTION_7_22(v6);
    OUTLINED_FUNCTION_24_15();
  }
  if ((a1 & 1) != 0)
  {
    if ((OUTLINED_FUNCTION_19_15() & 1) == 0)
      OUTLINED_FUNCTION_6_19();
    OUTLINED_FUNCTION_25_12();
    if (v5)
      OUTLINED_FUNCTION_7_22(v7);
    OUTLINED_FUNCTION_24_15();
  }
  if ((a1 & 2) != 0)
  {
    if ((OUTLINED_FUNCTION_19_15() & 1) == 0)
      OUTLINED_FUNCTION_6_19();
    v9 = *(_QWORD *)(v3 + 16);
    v8 = *(_QWORD *)(v3 + 24);
    v10 = v9 + 1;
    if (v9 >= v8 >> 1)
      sub_249817E2C(v8 > 1, v9 + 1, 1);
    *(_QWORD *)(v3 + 16) = v10;
    *(_DWORD *)(v3 + 4 * v9 + 32) = 2;
  }
  else
  {
    v10 = *(_QWORD *)(v3 + 16);
    if (!v10)
      goto LABEL_38;
  }
  sub_24974DDF0();
  v11 = 0;
  v12 = v2;
  do
  {
    v13 = *(_DWORD *)(v3 + 4 * v11 + 32);
    if ((v13 & 0x20) != 0)
    {
      v16 = 0xE800000000000000;
      v14 = 0x797469746E656469;
    }
    else if ((v13 & 4) != 0)
    {
      v16 = 0xE800000000000000;
      v14 = 0x6E6F697469736F70;
    }
    else if ((v13 & 1) != 0)
    {
      v16 = 0xE500000000000000;
      v14 = 0x65676E6172;
    }
    else if ((v13 & 2) != 0)
    {
      v16 = 0xE500000000000000;
      v14 = 0x6863756F74;
    }
    else
    {
      v14 = sub_249837540();
      v16 = v15;
    }
    v17 = *(_QWORD *)(v12 + 16);
    if (v17 >= *(_QWORD *)(v12 + 24) >> 1)
      sub_24974DDF0();
    ++v11;
    *(_QWORD *)(v12 + 16) = v17 + 1;
    v18 = v12 + 16 * v17;
    *(_QWORD *)(v18 + 32) = v14;
    *(_QWORD *)(v18 + 40) = v16;
  }
  while (v10 != v11);
LABEL_38:
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FEB8);
  sub_249833EDC((unint64_t *)&qword_25787FEC0, &qword_25787FEB8, MEMORY[0x24BEE12B0]);
  v19 = sub_249836CDC();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_24983312C()
{
  _DWORD *v0;

  return DigitizerEventMask.description.getter(*v0);
}

uint64_t static DigitizerEvent.eventType.getter()
{
  return 11;
}

uint64_t DigitizerEvent.init(time:digitizerType:digitizerEventMask:generationCount:index:identity:point:range:touch:flags:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  void *DigitizerEvent;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t result;

  if (a2 != 2)
  {
    if ((a5 & 0x8000000000000000) == 0 && !HIDWORD(a5) && (a6 & 0x8000000000000000) == 0 && !HIDWORD(a6))
    {
      DigitizerEvent = (void *)IOHIDEventCreateDigitizerEvent();
      goto LABEL_12;
    }
LABEL_15:
    OUTLINED_FUNCTION_0_2();
    result = OUTLINED_FUNCTION_1_25();
    __break(1u);
    return result;
  }
  if ((a5 & 0x8000000000000000) != 0 || HIDWORD(a5) || (a6 & 0x8000000000000000) != 0 || HIDWORD(a6))
    goto LABEL_15;
  DigitizerEvent = (void *)IOHIDEventCreateDigitizerFingerEvent();
LABEL_12:
  v8 = DigitizerEvent;
  v9 = __bridge_IOHIDEvent_0(DigitizerEvent);
  v10 = v9;
  if (a4)
  {
    v11 = v9;
    OUTLINED_FUNCTION_13_18();

    v8 = v11;
  }

  return (uint64_t)v10;
}

void DigitizerEvent.generationCount.setter(int a1, void *a2)
{
  id v2;

  v2 = OUTLINED_FUNCTION_1_31(a1, a2);
  OUTLINED_FUNCTION_13_18();
  OUTLINED_FUNCTION_0_33(v2);
}

void DigitizerEvent.x.getter(void *a1)
{
  id v1;

  v1 = a1;
  OUTLINED_FUNCTION_29_9();
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_15_15();
}

void DigitizerEvent.x.setter(void *a1)
{
  id v1;

  v1 = OUTLINED_FUNCTION_37_10(a1);
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_0_33(v1);
}

void DigitizerEvent.x.modify(_QWORD *a1, void *a2)
{
  uint64_t v2;

  a1[1] = a2;
  OUTLINED_FUNCTION_1_31((int)a1, a2);
  OUTLINED_FUNCTION_29_9();
  OUTLINED_FUNCTION_28_13();
  *a1 = v2;
  OUTLINED_FUNCTION_15_15();
}

void sub_249833390(uint64_t a1)
{
  sub_2498334E8(a1);
}

void DigitizerEvent.y.getter(void *a1)
{
  id v1;

  v1 = a1;
  OUTLINED_FUNCTION_14_16();
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_15_15();
}

void DigitizerEvent.y.setter(void *a1)
{
  id v1;

  v1 = OUTLINED_FUNCTION_37_10(a1);
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_0_33(v1);
}

void DigitizerEvent.y.modify(_QWORD *a1, void *a2)
{
  uint64_t v2;

  a1[1] = a2;
  OUTLINED_FUNCTION_1_31((int)a1, a2);
  OUTLINED_FUNCTION_14_16();
  OUTLINED_FUNCTION_28_13();
  *a1 = v2;
  OUTLINED_FUNCTION_15_15();
}

void sub_249833438(uint64_t a1)
{
  OUTLINED_FUNCTION_22_15(a1);
}

void DigitizerEvent.z.getter(void *a1)
{
  id v1;

  v1 = a1;
  OUTLINED_FUNCTION_35_9();
  OUTLINED_FUNCTION_27_10();
  OUTLINED_FUNCTION_15_15();
}

void DigitizerEvent.z.setter(void *a1)
{
  id v1;

  v1 = OUTLINED_FUNCTION_37_10(a1);
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_0_33(v1);
}

void DigitizerEvent.z.modify(_QWORD *a1, void *a2)
{
  uint64_t v2;

  a1[1] = a2;
  OUTLINED_FUNCTION_1_31((int)a1, a2);
  OUTLINED_FUNCTION_35_9();
  OUTLINED_FUNCTION_28_13();
  *a1 = v2;
  OUTLINED_FUNCTION_15_15();
}

void sub_2498334E0(uint64_t a1)
{
  OUTLINED_FUNCTION_22_15(a1);
}

void sub_2498334E8(uint64_t a1)
{
  id v1;

  v1 = OUTLINED_FUNCTION_43_7(*(void **)(a1 + 8));
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_5_22(v1);
}

uint64_t DigitizerEvent.digitizerEventMask.getter(void *a1)
{
  return OUTLINED_FUNCTION_19_18(a1, 7u, (uint64_t (*)(uint64_t))DigitizerEventMask.init(rawValue:));
}

void DigitizerEvent.digitizerEventMask.setter(int a1, void *a2)
{
  id v2;

  v2 = OUTLINED_FUNCTION_1_31(a1, a2);
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_0_33(v2);
}

void DigitizerEvent.digitizerEventMask.modify(uint64_t a1, void *a2)
{
  unint64_t v2;

  *(_QWORD *)a1 = a2;
  OUTLINED_FUNCTION_1_31(a1, a2);
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_2_28();
  *(_DWORD *)(a1 + 8) = DigitizerType.init(rawValue:)(v2);
  OUTLINED_FUNCTION_81();
}

void sub_2498335B8(void **a1)
{
  OUTLINED_FUNCTION_21_16(a1);
}

void DigitizerEvent.identity.getter(void *a1)
{
  id v1;

  v1 = a1;
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void DigitizerEvent.identity.setter(int a1, void *a2)
{
  id v2;

  v2 = OUTLINED_FUNCTION_1_31(a1, a2);
  OUTLINED_FUNCTION_13_18();
  OUTLINED_FUNCTION_0_33(v2);
}

void DigitizerEvent.identity.modify(_QWORD *a1, void *a2)
{
  uint64_t v2;

  a1[1] = a2;
  OUTLINED_FUNCTION_1_31((int)a1, a2);
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_2_28();
  *a1 = v2;
  OUTLINED_FUNCTION_81();
}

void sub_249833664(uint64_t a1)
{
  OUTLINED_FUNCTION_9_22(a1);
}

void DigitizerEvent.index.getter(void *a1)
{
  id v1;

  v1 = a1;
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void DigitizerEvent.index.setter(int a1, void *a2)
{
  id v2;

  v2 = OUTLINED_FUNCTION_1_31(a1, a2);
  OUTLINED_FUNCTION_13_18();
  OUTLINED_FUNCTION_0_33(v2);
}

void DigitizerEvent.index.modify(_QWORD *a1, void *a2)
{
  uint64_t v2;

  a1[1] = a2;
  OUTLINED_FUNCTION_1_31((int)a1, a2);
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_2_28();
  *a1 = v2;
  OUTLINED_FUNCTION_81();
}

void sub_249833710(uint64_t a1)
{
  OUTLINED_FUNCTION_9_22(a1);
}

void DigitizerEvent.collection.getter(void *a1)
{
  id v1;

  v1 = a1;
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void DigitizerEvent.collection.setter(int a1, void *a2)
{
  id v2;

  v2 = OUTLINED_FUNCTION_1_31(a1, a2);
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_0_33(v2);
}

void DigitizerEvent.collection.modify(_QWORD *a1, void *a2)
{
  *a1 = a2;
  OUTLINED_FUNCTION_1_31((int)a1, a2);
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_2_28();
  OUTLINED_FUNCTION_30_9();
  OUTLINED_FUNCTION_81();
}

void sub_2498337C4(void **a1)
{
  OUTLINED_FUNCTION_10_16(a1);
}

uint64_t DigitizerEvent.digitizerType.getter(void *a1)
{
  return OUTLINED_FUNCTION_19_18(a1, 4u, (uint64_t (*)(uint64_t))DigitizerType.init(rawValue:));
}

uint64_t sub_2498337DC(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  id v3;
  uint64_t IntegerValue;

  v3 = a1;
  IntegerValue = IOHIDEventGetIntegerValue();

  return a3(IntegerValue);
}

void DigitizerEvent.digitizerType.setter(int a1, void *a2)
{
  id v2;

  v2 = OUTLINED_FUNCTION_1_31(a1, a2);
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_0_33(v2);
}

void DigitizerEvent.digitizerType.modify(uint64_t a1, void *a2)
{
  unint64_t v2;

  *(_QWORD *)a1 = a2;
  OUTLINED_FUNCTION_1_31(a1, a2);
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_2_28();
  *(_DWORD *)(a1 + 8) = DigitizerType.init(rawValue:)(v2);
  OUTLINED_FUNCTION_81();
}

void sub_2498338A8(void **a1)
{
  OUTLINED_FUNCTION_21_16(a1);
}

void sub_2498338B0(void **a1)
{
  void *v1;

  OUTLINED_FUNCTION_43_7(*a1);
  OUTLINED_FUNCTION_16_16();
  OUTLINED_FUNCTION_0_33(v1);
}

void DigitizerEvent.generationCount.getter(void *a1)
{
  id v1;

  v1 = a1;
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void DigitizerEvent.generationCount.modify(_QWORD *a1, void *a2)
{
  uint64_t v2;

  a1[1] = a2;
  OUTLINED_FUNCTION_1_31((int)a1, a2);
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_2_28();
  *a1 = v2;
  OUTLINED_FUNCTION_81();
}

void sub_249833954(uint64_t a1)
{
  OUTLINED_FUNCTION_9_22(a1);
}

void sub_24983395C(uint64_t a1)
{
  void *v1;

  OUTLINED_FUNCTION_43_7(*(void **)(a1 + 8));
  OUTLINED_FUNCTION_16_16();
  OUTLINED_FUNCTION_0_33(v1);
}

void DigitizerEvent.range.getter(void *a1)
{
  id v1;

  v1 = a1;
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void DigitizerEvent.range.setter(int a1, void *a2)
{
  id v2;

  v2 = OUTLINED_FUNCTION_1_31(a1, a2);
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_0_33(v2);
}

void DigitizerEvent.range.modify(_QWORD *a1, void *a2)
{
  *a1 = a2;
  OUTLINED_FUNCTION_1_31((int)a1, a2);
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_2_28();
  OUTLINED_FUNCTION_30_9();
  OUTLINED_FUNCTION_81();
}

void sub_249833A38(void **a1)
{
  OUTLINED_FUNCTION_10_16(a1);
}

void DigitizerEvent.touch.getter(void *a1)
{
  id v1;

  v1 = a1;
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_27();
}

void DigitizerEvent.touch.setter(int a1, void *a2)
{
  id v2;

  v2 = OUTLINED_FUNCTION_1_31(a1, a2);
  OUTLINED_FUNCTION_20_18();
  OUTLINED_FUNCTION_0_33(v2);
}

void DigitizerEvent.touch.modify(_QWORD *a1, void *a2)
{
  *a1 = a2;
  OUTLINED_FUNCTION_1_31((int)a1, a2);
  OUTLINED_FUNCTION_3_29();
  OUTLINED_FUNCTION_2_28();
  OUTLINED_FUNCTION_30_9();
  OUTLINED_FUNCTION_81();
}

void sub_249833AEC(void **a1)
{
  OUTLINED_FUNCTION_10_16(a1);
}

void sub_249833AF4(void **a1)
{
  void *v1;

  OUTLINED_FUNCTION_43_7(*a1);
  OUTLINED_FUNCTION_16_16();
  OUTLINED_FUNCTION_0_33(v1);
}

uint64_t sub_249833B28@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_249833B30()
{
  void **v0;

  DigitizerEvent.collection.getter(*v0);
}

void sub_249833B38(int a1)
{
  void **v1;

  DigitizerEvent.collection.setter(a1, *v1);
}

void (*sub_249833B40(uint64_t a1))(uint64_t a1)
{
  void **v1;
  void *v3;
  char v4;

  v3 = *v1;
  *(_QWORD *)a1 = *v1;
  DigitizerEvent.collection.getter(v3);
  *(_BYTE *)(a1 + 8) = v4 & 1;
  return sub_249833B7C;
}

void sub_249833B7C(uint64_t a1)
{
  DigitizerEvent.collection.setter(*(unsigned __int8 *)(a1 + 8), *(void **)a1);
}

id sub_249833B88()
{
  id *v0;

  return *v0;
}

double DigitizerEvent.point.getter(void *a1)
{
  double v1;
  id v2;
  id v3;

  v2 = a1;
  OUTLINED_FUNCTION_29_9();
  OUTLINED_FUNCTION_27_10();
  v3 = OUTLINED_FUNCTION_32_11();
  OUTLINED_FUNCTION_14_16();

  return v1;
}

void sub_249833BE0(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  *(double *)a2 = DigitizerEvent.point.getter(*a1);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = 0;
}

void sub_249833C0C()
{
  DigitizerEvent.point.setter();
}

void DigitizerEvent.point.setter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  IOHIDEventSetFloatValue();

  v2 = OUTLINED_FUNCTION_32_11();
  OUTLINED_FUNCTION_18_15();
  OUTLINED_FUNCTION_5_22(v2);
}

void DigitizerEvent.point.modify(_QWORD *a1)
{
  id *v1;
  uint64_t v2;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  a1[3] = v1;
  v4 = *v1;
  OUTLINED_FUNCTION_29_9();
  OUTLINED_FUNCTION_28_13();
  v5 = v4;
  OUTLINED_FUNCTION_14_16();
  v7 = v6;

  *a1 = v2;
  a1[1] = v7;
  a1[2] = 0;
  OUTLINED_FUNCTION_15_15();
}

void sub_249833CE8(uint64_t a1)
{
  id v1;
  id v2;

  v1 = **(id **)(a1 + 24);
  OUTLINED_FUNCTION_18_15();

  v2 = OUTLINED_FUNCTION_32_11();
  IOHIDEventSetFloatValue();
  OUTLINED_FUNCTION_5_22(v2);
}

unint64_t sub_249833D48()
{
  unint64_t result;

  result = qword_257882A48;
  if (!qword_257882A48)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for DigitizerType, &type metadata for DigitizerType);
    atomic_store(result, (unint64_t *)&qword_257882A48);
  }
  return result;
}

void sub_249833D84()
{
  sub_249833EDC(&qword_257882A50, &qword_257882A58, MEMORY[0x24BEE12E0]);
}

unint64_t sub_249833DB4()
{
  unint64_t result;

  result = qword_257882A60;
  if (!qword_257882A60)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for DigitizerEventMask, &type metadata for DigitizerEventMask);
    atomic_store(result, (unint64_t *)&qword_257882A60);
  }
  return result;
}

unint64_t sub_249833DF4()
{
  unint64_t result;

  result = qword_257882A68;
  if (!qword_257882A68)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for DigitizerEventMask, &type metadata for DigitizerEventMask);
    atomic_store(result, (unint64_t *)&qword_257882A68);
  }
  return result;
}

unint64_t sub_249833E34()
{
  unint64_t result;

  result = qword_257882A70;
  if (!qword_257882A70)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for DigitizerEventMask, &type metadata for DigitizerEventMask);
    atomic_store(result, (unint64_t *)&qword_257882A70);
  }
  return result;
}

unint64_t sub_249833E74()
{
  unint64_t result;

  result = qword_257882A78;
  if (!qword_257882A78)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for DigitizerEventMask, &type metadata for DigitizerEventMask);
    atomic_store(result, (unint64_t *)&qword_257882A78);
  }
  return result;
}

void sub_249833EB0()
{
  sub_249833EDC(&qword_257882A80, &qword_257882A88, MEMORY[0x24BEE12E0]);
}

void sub_249833EDC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x24BCF8F94](a3, v5), a1);
  }
  OUTLINED_FUNCTION_27();
}

void sub_249833F18(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = (void *)OUTLINED_FUNCTION_8_28(a1);
  DigitizerEvent.x.getter(v2);
  *v1 = v3;
  OUTLINED_FUNCTION_27();
}

void sub_249833F38(uint64_t a1, void **a2)
{
  DigitizerEvent.x.setter(*a2);
}

void sub_249833F44(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = (void *)OUTLINED_FUNCTION_8_28(a1);
  DigitizerEvent.y.getter(v2);
  *v1 = v3;
  OUTLINED_FUNCTION_27();
}

void sub_249833F64(uint64_t a1, void **a2)
{
  DigitizerEvent.y.setter(*a2);
}

void sub_249833F70(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = (void *)OUTLINED_FUNCTION_8_28(a1);
  DigitizerEvent.z.getter(v2);
  *v1 = v3;
  OUTLINED_FUNCTION_27();
}

void sub_249833F90(uint64_t a1, void **a2)
{
  DigitizerEvent.z.setter(*a2);
}

void sub_249833F9C(uint64_t a1)
{
  _DWORD *v1;
  void *v2;

  v2 = (void *)OUTLINED_FUNCTION_8_28(a1);
  *v1 = DigitizerEvent.digitizerEventMask.getter(v2);
  OUTLINED_FUNCTION_27();
}

void sub_249833FBC(int *a1, void **a2)
{
  DigitizerEvent.digitizerEventMask.setter(*a1, *a2);
}

void sub_249833FC8(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = (void *)OUTLINED_FUNCTION_8_28(a1);
  DigitizerEvent.identity.getter(v2);
  *v1 = v3;
  OUTLINED_FUNCTION_27();
}

void sub_249833FE8(_QWORD *a1, void **a2)
{
  DigitizerEvent.identity.setter(*a1, *a2);
}

void sub_249833FF4(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = (void *)OUTLINED_FUNCTION_8_28(a1);
  DigitizerEvent.index.getter(v2);
  *v1 = v3;
  OUTLINED_FUNCTION_27();
}

void sub_249834014(_QWORD *a1, void **a2)
{
  DigitizerEvent.index.setter(*a1, *a2);
}

void sub_249834020(uint64_t a1)
{
  _BYTE *v1;
  void *v2;
  char v3;

  v2 = (void *)OUTLINED_FUNCTION_8_28(a1);
  DigitizerEvent.collection.getter(v2);
  *v1 = v3 & 1;
  OUTLINED_FUNCTION_27();
}

void sub_249834044(unsigned __int8 *a1, void **a2)
{
  DigitizerEvent.collection.setter(*a1, *a2);
}

void sub_249834050(uint64_t a1)
{
  _DWORD *v1;
  void *v2;

  v2 = (void *)OUTLINED_FUNCTION_8_28(a1);
  *v1 = DigitizerEvent.digitizerType.getter(v2);
  OUTLINED_FUNCTION_27();
}

void sub_249834070(int *a1, void **a2)
{
  DigitizerEvent.digitizerType.setter(*a1, *a2);
}

void sub_24983407C(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;

  v2 = (void *)OUTLINED_FUNCTION_8_28(a1);
  DigitizerEvent.generationCount.getter(v2);
  *v1 = v3;
  OUTLINED_FUNCTION_27();
}

void sub_24983409C(_QWORD *a1, void **a2)
{
  DigitizerEvent.generationCount.setter(*a1, *a2);
}

void sub_2498340A8(uint64_t a1)
{
  _BYTE *v1;
  void *v2;
  char v3;

  v2 = (void *)OUTLINED_FUNCTION_8_28(a1);
  DigitizerEvent.range.getter(v2);
  *v1 = v3 & 1;
  OUTLINED_FUNCTION_27();
}

void sub_2498340CC(unsigned __int8 *a1, void **a2)
{
  DigitizerEvent.range.setter(*a1, *a2);
}

void sub_2498340D8(uint64_t a1)
{
  _BYTE *v1;
  void *v2;
  char v3;

  v2 = (void *)OUTLINED_FUNCTION_8_28(a1);
  DigitizerEvent.touch.getter(v2);
  *v1 = v3 & 1;
  OUTLINED_FUNCTION_27();
}

void sub_2498340FC(unsigned __int8 *a1, void **a2)
{
  DigitizerEvent.touch.setter(*a1, *a2);
}

void type metadata accessor for DigitizerType()
{
  OUTLINED_FUNCTION_29_4();
}

void type metadata accessor for DigitizerEventMask()
{
  OUTLINED_FUNCTION_29_4();
}

void type metadata accessor for DigitizerEvent()
{
  OUTLINED_FUNCTION_29_4();
}

void OUTLINED_FUNCTION_0_33(id a1)
{

}

id OUTLINED_FUNCTION_1_31(int a1, id a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_3_29()
{
  return IOHIDEventGetIntegerValue();
}

void OUTLINED_FUNCTION_5_22(id a1)
{

}

void OUTLINED_FUNCTION_6_19()
{
  uint64_t v0;

  sub_249817E2C(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

void OUTLINED_FUNCTION_7_22(unint64_t a1@<X8>)
{
  uint64_t v1;

  sub_249817E2C(a1 > 1, v1, 1);
}

uint64_t OUTLINED_FUNCTION_8_28(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void OUTLINED_FUNCTION_9_22(uint64_t a1)
{
  sub_24983395C(a1);
}

void OUTLINED_FUNCTION_10_16(void **a1)
{
  sub_249833AF4(a1);
}

uint64_t OUTLINED_FUNCTION_13_18()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_14_16()
{
  return IOHIDEventGetFloatValue();
}

uint64_t OUTLINED_FUNCTION_16_16()
{
  return IOHIDEventSetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_18_15()
{
  return IOHIDEventSetFloatValue();
}

uint64_t OUTLINED_FUNCTION_19_18(void *a1, unsigned __int16 a2, uint64_t (*a3)(uint64_t))
{
  return sub_2498337DC(a1, a2 | 0xB0000u, a3);
}

uint64_t OUTLINED_FUNCTION_20_18()
{
  return IOHIDEventSetIntegerValue();
}

void OUTLINED_FUNCTION_21_16(void **a1)
{
  sub_2498338B0(a1);
}

void OUTLINED_FUNCTION_22_15(uint64_t a1)
{
  sub_2498334E8(a1);
}

void OUTLINED_FUNCTION_24_15()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v1;
  *(_DWORD *)(v0 + 4 * v3 + 32) = v2;
}

double OUTLINED_FUNCTION_27_10()
{
  void *v0;
  double result;

  return result;
}

double OUTLINED_FUNCTION_28_13()
{
  void *v0;
  double result;

  return result;
}

uint64_t OUTLINED_FUNCTION_29_9()
{
  return IOHIDEventGetFloatValue();
}

void OUTLINED_FUNCTION_30_9()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 8) = v1 != 0;
}

id OUTLINED_FUNCTION_32_11()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_35_9()
{
  return IOHIDEventGetFloatValue();
}

id OUTLINED_FUNCTION_37_10(id a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_38_8@<X0>(int a1@<W8>)
{
  int v1;

  return a1 | (v1 << 8);
}

uint64_t HIDServiceProperties.deviceType.getter(uint64_t a1, void *a2)
{
  return HIDDeviceType.init(properties:)(a1, a2);
}

HIDUtils::HIDDeviceType_optional __swiftcall HIDDeviceType.init(deviceTypeHint:)(Swift::String deviceTypeHint)
{
  BOOL v1;
  void *object;
  uint64_t countAndFlagsBits;
  char v6;

  v1 = deviceTypeHint._countAndFlagsBits == 0x6573756F4DLL && deviceTypeHint._object == (void *)0xE500000000000000;
  if (v1
    || (object = deviceTypeHint._object,
        countAndFlagsBits = deviceTypeHint._countAndFlagsBits,
        (OUTLINED_FUNCTION_186_0() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return (HIDUtils::HIDDeviceType_optional)1;
  }
  else if (countAndFlagsBits == 0x6461706B63617254 && object == (void *)0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return (HIDUtils::HIDDeviceType_optional)2;
  }
  else
  {
    v6 = OUTLINED_FUNCTION_186_0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return (HIDUtils::HIDDeviceType_optional)2;
    else
      return (HIDUtils::HIDDeviceType_optional)3;
  }
}

uint64_t sub_249834374(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6472616F6279656BLL && a2 == 0xE800000000000000;
  if (v2 || (sub_2498375C4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6573756F6DLL && a2 == 0xE500000000000000;
    if (v6 || (sub_2498375C4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6461706B63617274 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2498375C4();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_2498344BC(char a1)
{
  if (!a1)
    return 0x6472616F6279656BLL;
  if (a1 == 1)
    return 0x6573756F6DLL;
  return 0x6461706B63617274;
}

void sub_249834510()
{
  sub_249834CF8();
}

uint64_t sub_24983452C()
{
  char *v0;

  return sub_2498344BC(*v0);
}

uint64_t sub_249834534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_249834374(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249834558()
{
  sub_249834EA8();
  return sub_249837750();
}

uint64_t sub_249834580()
{
  sub_249834EA8();
  return sub_24983775C();
}

uint64_t sub_2498345A8()
{
  sub_249834F5C();
  return sub_249837750();
}

uint64_t sub_2498345D0()
{
  sub_249834F5C();
  return sub_24983775C();
}

uint64_t sub_2498345F8()
{
  sub_249834F20();
  return sub_249837750();
}

uint64_t sub_249834620()
{
  sub_249834F20();
  return sub_24983775C();
}

uint64_t sub_249834648()
{
  sub_249834EE4();
  return sub_249837750();
}

uint64_t sub_249834670()
{
  sub_249834EE4();
  return sub_24983775C();
}

uint64_t HIDDeviceType.description.getter(char a1)
{
  if (!a1)
    return 0x6472616F6279654BLL;
  if (a1 == 1)
    return 0x6573756F4DLL;
  return 0x6461706B63617254;
}

uint64_t sub_2498346EC()
{
  char *v0;

  return HIDDeviceType.description.getter(*v0);
}

uint64_t HIDDeviceType.encode(to:)(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882A90);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_65_1();
  v22 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882A98);
  v20 = *(_QWORD *)(v7 - 8);
  v21 = v7;
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_126();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882AA0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_126();
  v16 = v15 - v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882AA8);
  v25 = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_38_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249834EA8();
  sub_249837744();
  if (a2)
  {
    if (a2 == 1)
    {
      sub_249834F20();
      OUTLINED_FUNCTION_0_34();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v11, v21);
    }
    else
    {
      OUTLINED_FUNCTION_9_23();
      OUTLINED_FUNCTION_0_34();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }
  }
  else
  {
    sub_249834F5C();
    OUTLINED_FUNCTION_0_34();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v2, v17);
}

uint64_t HIDDeviceType.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882AD0);
  v34 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_65_1();
  v33 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882AD8);
  v29 = *(_QWORD *)(v5 - 8);
  v30 = v5;
  OUTLINED_FUNCTION_1_29();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_65_1();
  v32 = v7;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882AE0);
  v8 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_38_1();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257882AE8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_126();
  v13 = v12 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249834EA8();
  sub_249837720();
  if (v35)
    goto LABEL_11;
  v27 = v13;
  v36 = (uint64_t)a1;
  v14 = sub_24983745C();
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
LABEL_8:
    v21 = sub_2498371BC();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257882828);
    *v23 = &type metadata for HIDDeviceType;
    sub_2498373A8();
    sub_2498371B0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v27, v9);
    a1 = (_QWORD *)v36;
LABEL_11:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v9;
  }
  v16 = v9;
  v9 = *(unsigned __int8 *)(v14 + 32);
  sub_24983183C(1, v15, v14, v14 + 32, 0, (2 * v15) | 1);
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease();
  if (v18 != v20 >> 1)
  {
    v9 = v16;
    goto LABEL_8;
  }
  if ((_DWORD)v9)
  {
    if ((_DWORD)v9 == 1)
    {
      sub_249834F20();
      OUTLINED_FUNCTION_2_34();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v30);
    }
    else
    {
      OUTLINED_FUNCTION_9_23();
      OUTLINED_FUNCTION_2_34();
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v31);
    }
  }
  else
  {
    sub_249834F5C();
    sub_24983739C();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v28);
  }
  swift_unknownObjectRelease();
  v25 = OUTLINED_FUNCTION_8_29();
  v26(v25);
  __swift_destroy_boxed_opaque_existential_0(v36);
  return v9;
}

uint64_t sub_249834C98@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = HIDDeviceType.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_249834CC0(_QWORD *a1)
{
  char *v1;

  return HIDDeviceType.encode(to:)(a1, *v1);
}

BOOL static HIDDeviceType.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_249834CE8(char *a1, char *a2)
{
  return static HIDDeviceType.== infix(_:_:)(*a1, *a2);
}

void sub_249834CF8()
{
  sub_249837690();
  sub_2498376A8();
  sub_2498376E4();
  OUTLINED_FUNCTION_2_5();
}

uint64_t sub_249834D34()
{
  unsigned __int8 *v0;

  return sub_2498344B8(*v0);
}

uint64_t HIDDeviceType.init(properties:)(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  Swift::String v10;
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  strcpy((char *)v11, "DeviceTypeHint");
  HIBYTE(v11[0]) = -18;
  v4 = objc_msgSend(a2, sel___swift_objectForKeyedSubscript_, sub_249837624());
  swift_unknownObjectRelease();
  if (v4)
  {
    sub_2498370E4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_249834F98((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      LOBYTE(v5) = HIDDeviceType.init(deviceTypeHint:)(v10);
      if (v5 != 3)
      {
        v6 = v5;

        return v6;
      }
    }
  }
  else
  {
    sub_24978917C((uint64_t)v12);
  }
  v7 = HIDServiceProperties.primaryUsagePair.getter(a1, a2);
  if (static HIDUsage.== infix(_:_:)(786445, v7))
  {

    return 2;
  }
  else
  {
    v8 = static HIDUsage.== infix(_:_:)(393217, v7);

    return !v8;
  }
}

unint64_t sub_249834EA8()
{
  unint64_t result;

  result = qword_257882AB0;
  if (!qword_257882AB0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F91C, &type metadata for HIDDeviceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882AB0);
  }
  return result;
}

unint64_t sub_249834EE4()
{
  unint64_t result;

  result = qword_257882AB8;
  if (!qword_257882AB8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F8CC, &type metadata for HIDDeviceType.TrackpadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882AB8);
  }
  return result;
}

unint64_t sub_249834F20()
{
  unint64_t result;

  result = qword_257882AC0;
  if (!qword_257882AC0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F87C, &type metadata for HIDDeviceType.MouseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882AC0);
  }
  return result;
}

unint64_t sub_249834F5C()
{
  unint64_t result;

  result = qword_257882AC8;
  if (!qword_257882AC8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F82C, &type metadata for HIDDeviceType.KeyboardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882AC8);
  }
  return result;
}

uint64_t sub_249834F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_249834FE4()
{
  unint64_t result;

  result = qword_257882AF0;
  if (!qword_257882AF0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDDeviceType, &type metadata for HIDDeviceType);
    atomic_store(result, (unint64_t *)&qword_257882AF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDDeviceType()
{
  return &type metadata for HIDDeviceType;
}

uint64_t _s8HIDUtils13HIDDeviceTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249835084 + 4 * byte_24983F525[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2498350B8 + 4 * asc_24983F520[v4]))();
}

uint64_t sub_2498350B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498350C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2498350C8);
  return result;
}

uint64_t sub_2498350D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2498350DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2498350E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2498350E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HIDDeviceType.CodingKeys()
{
  return &type metadata for HIDDeviceType.CodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.KeyboardCodingKeys()
{
  return &type metadata for HIDDeviceType.KeyboardCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.MouseCodingKeys()
{
  return &type metadata for HIDDeviceType.MouseCodingKeys;
}

ValueMetadata *type metadata accessor for HIDDeviceType.TrackpadCodingKeys()
{
  return &type metadata for HIDDeviceType.TrackpadCodingKeys;
}

unint64_t sub_249835138()
{
  unint64_t result;

  result = qword_257882AF8;
  if (!qword_257882AF8)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F804, &type metadata for HIDDeviceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882AF8);
  }
  return result;
}

unint64_t sub_249835178()
{
  unint64_t result;

  result = qword_257882B00;
  if (!qword_257882B00)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F724, &type metadata for HIDDeviceType.KeyboardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882B00);
  }
  return result;
}

unint64_t sub_2498351B8()
{
  unint64_t result;

  result = qword_257882B08;
  if (!qword_257882B08)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F74C, &type metadata for HIDDeviceType.KeyboardCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882B08);
  }
  return result;
}

unint64_t sub_2498351F8()
{
  unint64_t result;

  result = qword_257882B10;
  if (!qword_257882B10)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F6D4, &type metadata for HIDDeviceType.MouseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882B10);
  }
  return result;
}

unint64_t sub_249835238()
{
  unint64_t result;

  result = qword_257882B18;
  if (!qword_257882B18)
  {
    result = MEMORY[0x24BCF8F94]("݁'\bTM", &type metadata for HIDDeviceType.MouseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882B18);
  }
  return result;
}

unint64_t sub_249835278()
{
  unint64_t result;

  result = qword_257882B20;
  if (!qword_257882B20)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F684, &type metadata for HIDDeviceType.TrackpadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882B20);
  }
  return result;
}

unint64_t sub_2498352B8()
{
  unint64_t result;

  result = qword_257882B28;
  if (!qword_257882B28)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F6AC, &type metadata for HIDDeviceType.TrackpadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882B28);
  }
  return result;
}

unint64_t sub_2498352F8()
{
  unint64_t result;

  result = qword_257882B30;
  if (!qword_257882B30)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F774, &type metadata for HIDDeviceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882B30);
  }
  return result;
}

unint64_t sub_249835338()
{
  unint64_t result;

  result = qword_257882B38;
  if (!qword_257882B38)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983F79C, &type metadata for HIDDeviceType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257882B38);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_34()
{
  return sub_249837480();
}

uint64_t OUTLINED_FUNCTION_2_34()
{
  return sub_24983739C();
}

uint64_t OUTLINED_FUNCTION_8_29()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_9_23()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_249834EE4();
}

uint64_t sub_2498353D0(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

uint64_t sub_2498353D8(int a1, int a2)
{
  return a2 & ~a1;
}

uint64_t sub_2498353E0(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

BOOL sub_2498353E8(unsigned __int8 a1, unsigned __int8 a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_2498353F8(int a1, int a2)
{
  return (a2 & a1) == 0;
}

void sub_249835408(uint64_t a1)
{
  char v1;

  if (*(_QWORD *)(a1 + 16))
  {
    do
      OUTLINED_FUNCTION_6_20();
    while (!v1);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27();
}

void sub_24983544C(uint64_t a1)
{
  char v1;

  if (*(_QWORD *)(a1 + 16))
  {
    do
      OUTLINED_FUNCTION_6_20();
    while (!v1);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24983548C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = (unsigned int *)(a1 + 32);
    while (1)
    {
      v5 = *v3++;
      v4 = v5;
      if (v5 >= 0x40)
        break;
      if (v4 == 63)
      {
        result = sub_249837300();
        __break(1u);
        return result;
      }
      v6 = 1 << v4;
      if ((v6 & v2) == 0)
        goto LABEL_7;
LABEL_8:
      if (!--v1)
        goto LABEL_11;
    }
    v6 = 0;
LABEL_7:
    v2 |= v6;
    goto LABEL_8;
  }
  v2 = 0;
LABEL_11:
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t HIDEventMask.rawValue.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDEventMask.rawValue.modify())(void)
{
  return nullsub_1;
}

uint64_t HIDEventMask.contains(_:)(unsigned int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1 > 0x3F)
  {
    v2 = 0;
    return (v2 & a2) != 0;
  }
  if (a1 != 63)
  {
    v2 = 1 << a1;
    return (v2 & a2) != 0;
  }
  OUTLINED_FUNCTION_0_4();
  result = OUTLINED_FUNCTION_1_3();
  __break(1u);
  return result;
}

uint64_t HIDEventType.maskValue.getter(unsigned int a1)
{
  uint64_t result;

  if (a1 >= 0x40)
    return 0;
  if (a1 != 63)
    return 1 << a1;
  OUTLINED_FUNCTION_0_4();
  result = OUTLINED_FUNCTION_1_3();
  __break(1u);
  return result;
}

void HIDEventMask.insert(_:)(unsigned int a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  if (a1 > 0x40)
  {
    v3 = 0;
    goto LABEL_6;
  }
  if (a1 == 64)
    goto LABEL_7;
  if ((a1 & 0x3F) != 0x3FLL)
  {
    v3 = 1 << a1;
LABEL_6:
    if ((v3 & v2) != 0)
    {
LABEL_8:
      OUTLINED_FUNCTION_3_3();
      return;
    }
LABEL_7:
    *v1 = HIDEventType.maskValue.getter(a1) | v2;
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_1_3();
  __break(1u);
}

void HIDEventMask.remove(_:)(unsigned int a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  if (a1 > 0x40)
  {
    v3 = 0;
    goto LABEL_6;
  }
  if (a1 == 64)
  {
LABEL_8:
    OUTLINED_FUNCTION_3_3();
    return;
  }
  if (a1 != 63)
  {
    v3 = 1 << a1;
LABEL_6:
    if ((v3 & v2) != 0)
      *v1 = v2 & ~HIDEventType.maskValue.getter(a1);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_1_3();
  __break(1u);
}

void HIDEventMask.update(with:)(unsigned int a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  if (a1 > 0x40)
  {
    v3 = 0;
    goto LABEL_6;
  }
  if (a1 == 64)
    goto LABEL_7;
  if (a1 != 63)
  {
    v3 = 1 << a1;
LABEL_6:
    if ((v3 & v2) != 0)
    {
LABEL_8:
      OUTLINED_FUNCTION_3_3();
      return;
    }
LABEL_7:
    *v1 = HIDEventType.maskValue.getter(a1) | v2;
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_1_3();
  __break(1u);
}

_QWORD *sub_2498357FC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_249835808(uint64_t *a1@<X8>)
{
  *a1 = sub_249816FEC();
  OUTLINED_FUNCTION_27();
}

uint64_t sub_249835828(unsigned int *a1)
{
  uint64_t *v1;

  return HIDEventMask.contains(_:)(*a1, *v1);
}

uint64_t sub_249835834@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_2498353D0(*a1, *v2);
  *a2 = result;
  return result;
}

void sub_249835860(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = sub_249817058(*a1, *v2);
  OUTLINED_FUNCTION_27();
}

void sub_249835888(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = sub_249818A94(*a1, *v2);
  OUTLINED_FUNCTION_27();
}

void sub_2498358B0(_DWORD *a1, unsigned int *a2)
{
  int v3;

  HIDEventMask.insert(_:)(*a2);
  *a1 = v3;
  OUTLINED_FUNCTION_27();
}

void sub_2498358DC(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  char v4;

  HIDEventMask.remove(_:)(*a1);
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v4 & 1;
}

void sub_24983590C(unsigned int *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  char v4;

  HIDEventMask.update(with:)(*a1);
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v4 & 1;
}

uint64_t sub_24983593C(uint64_t *a1)
{
  return sub_249817104(*a1);
}

uint64_t sub_249835944@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_2498353E0(*a1, *v2);
  *a2 = result;
  return result;
}

_QWORD *sub_249835970@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_249835980@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_24983548C(a1);
  *a2 = result;
  return result;
}

uint64_t HIDEventMask.description.getter(unint64_t a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  v2 = (char *)static HIDEventType.allCases.getter();
  v3 = *((_QWORD *)v2 + 2);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v5 = (unsigned int *)(v2 + 32);
    v6 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v8 = *v5++;
      v7 = v8;
      if (v8 < 0x40)
      {
        if (v7 == 63)
        {
          OUTLINED_FUNCTION_0_4();
          result = OUTLINED_FUNCTION_1_3();
          __break(1u);
          return result;
        }
        if (((a1 >> v7) & 1) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_249817C4C(0, *(_QWORD *)(v6 + 16) + 1, 1);
          v10 = *(_QWORD *)(v6 + 16);
          v9 = *(_QWORD *)(v6 + 24);
          if (v10 >= v9 >> 1)
            sub_249817C4C(v9 > 1, v10 + 1, 1);
          *(_QWORD *)(v6 + 16) = v10 + 1;
          *(_DWORD *)(v6 + 4 * v10 + 32) = v7;
        }
      }
      if (!--v3)
        goto LABEL_14;
    }
  }
  v6 = MEMORY[0x24BEE4AF8];
LABEL_14:
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v6 + 16);
  if (v11)
  {
    sub_24974DDF0();
    v12 = 0;
    v13 = v4;
    do
    {
      v14 = HIDEventType.description.getter(*(_DWORD *)(v6 + 4 * v12 + 32));
      v16 = v15;
      v17 = *(_QWORD *)(v13 + 16);
      if (v17 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_24974DDF0();
      ++v12;
      *(_QWORD *)(v13 + 16) = v17 + 1;
      v18 = v13 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v14;
      *(_QWORD *)(v18 + 40) = v16;
    }
    while (v11 != v12);
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FEB8);
  sub_249759DA0();
  v19 = sub_249836CDC();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_249835BBC()
{
  unint64_t *v0;

  return HIDEventMask.description.getter(*v0);
}

unint64_t sub_249835BC8()
{
  unint64_t result;

  result = qword_257882B40;
  if (!qword_257882B40)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventMask, &type metadata for HIDEventMask);
    atomic_store(result, (unint64_t *)&qword_257882B40);
  }
  return result;
}

unint64_t sub_249835C08()
{
  unint64_t result;

  result = qword_257882B48;
  if (!qword_257882B48)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventMask, &type metadata for HIDEventMask);
    atomic_store(result, (unint64_t *)&qword_257882B48);
  }
  return result;
}

unint64_t sub_249835C48()
{
  unint64_t result;

  result = qword_257882B50;
  if (!qword_257882B50)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventMask, &type metadata for HIDEventMask);
    atomic_store(result, (unint64_t *)&qword_257882B50);
  }
  return result;
}

unint64_t sub_249835C88()
{
  unint64_t result;

  result = qword_257882B58;
  if (!qword_257882B58)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventMask, &type metadata for HIDEventMask);
    atomic_store(result, (unint64_t *)&qword_257882B58);
  }
  return result;
}

ValueMetadata *type metadata accessor for HIDEventMask()
{
  return &type metadata for HIDEventMask;
}

uint64_t OUTLINED_FUNCTION_3_30(unsigned int a1, int a2)
{
  return a2 | a1;
}

BOOL static HIDEventType.== infix(_:_:)(int a1, int a2)
{
  return a1 == a2;
}

void *static HIDEventType.allCases.getter()
{
  return &unk_251AB54D0;
}

uint64_t HIDEventType.description.getter(int a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = 1819047278;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      return 0x6544726F646E6576;
    case 2:
      return 0x6E6F74747562;
    case 3:
      return 0x6472616F6279656BLL;
    case 4:
      v3 = 0x6C736E617274;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
    case 5:
      return 0x6E6F697461746F72;
    case 6:
      return 0x6C6C6F726373;
    case 7:
      v4 = 1818321779;
      goto LABEL_37;
    case 8:
      return 1836019578;
    case 9:
      v5 = 0x69636F6C6576;
      goto LABEL_42;
    case 10:
      v3 = 0x746E6569726FLL;
      return v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
    case 11:
      return 0x657A697469676964;
    case 12:
      return 0xD000000000000012;
    case 13:
      return 0x6F72656C65636361;
    case 14:
      return 0x74696D69786F7270;
    case 15:
      return 0x74617265706D6574;
    case 16:
      v6 = 0x61676976616ELL;
      goto LABEL_44;
    case 17:
      return 0x7265746E696F70;
    case 18:
      return 0x73736572676F7270;
    case 19:
      return 0xD000000000000010;
    case 20:
      return 1869773159;
    case 21:
      return 0x737361706D6F63;
    case 22:
      return 0x67676F546D6F6F7ALL;
    case 23:
      return 0x706977536B636F64;
    case 24:
      return 0x63696C6F626D7973;
    case 25:
      return 0x7265776F70;
    case 26:
      return 6579564;
    case 27:
      return 0xD000000000000011;
    case 28:
      return 0x797261646E756F62;
    case 29:
      return 0x697274656D6F6962;
    case 30:
      return 0x65646F63696E75;
    case 31:
      return 0xD000000000000013;
    case 32:
      v4 = 1668444006;
LABEL_37:
      result = v4 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
      break;
    case 33:
      result = 0x63416E6F69746F6DLL;
      break;
    case 34:
      result = 0x65476E6F69746F6DLL;
      break;
    case 35:
      result = 0x746E6F43656D6167;
      break;
    case 36:
      v5 = 0x6964696D7568;
LABEL_42:
      result = v5 & 0xFFFFFFFFFFFFLL | 0x7974000000000000;
      break;
    case 37:
      v6 = 0x63656C6C6F63;
LABEL_44:
      result = v6 & 0xFFFFFFFFFFFFLL | 0x6974000000000000;
      break;
    case 38:
      result = 0x656E746867697262;
      break;
    case 39:
      result = 0x47636972656E6567;
      break;
    default:
      result = sub_249837540();
      break;
  }
  return result;
}

uint64_t HIDEventType.rawValue.setter(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*HIDEventType.rawValue.modify())(void)
{
  return nullsub_1;
}

unint64_t HIDEventType.init(rawValue:)(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0 || HIDWORD(result))
  {
    OUTLINED_FUNCTION_0_2();
    result = sub_249837300();
    __break(1u);
  }
  return result;
}

uint64_t static HIDEventType.null.getter()
{
  return 0;
}

uint64_t static HIDEventType.vendorDefined.getter()
{
  return 1;
}

uint64_t static HIDEventType.button.getter()
{
  return 2;
}

uint64_t static HIDEventType.keyboard.getter()
{
  return 3;
}

uint64_t static HIDEventType.translation.getter()
{
  return 4;
}

uint64_t static HIDEventType.rotation.getter()
{
  return 5;
}

uint64_t static HIDEventType.scroll.getter()
{
  return 6;
}

uint64_t static HIDEventType.scale.getter()
{
  return 7;
}

uint64_t static HIDEventType.zoom.getter()
{
  return 8;
}

uint64_t static HIDEventType.velocity.getter()
{
  return 9;
}

uint64_t static HIDEventType.orientation.getter()
{
  return 10;
}

uint64_t static HIDEventType.digitizer.getter()
{
  return 11;
}

uint64_t static HIDEventType.ambientLightSensor.getter()
{
  return 12;
}

uint64_t static HIDEventType.accelerometer.getter()
{
  return 13;
}

uint64_t static HIDEventType.proximity.getter()
{
  return 14;
}

uint64_t static HIDEventType.temperature.getter()
{
  return 15;
}

uint64_t static HIDEventType.navigationSwipe.getter()
{
  return 16;
}

uint64_t static HIDEventType.pointer.getter()
{
  return 17;
}

uint64_t static HIDEventType.progress.getter()
{
  return 18;
}

uint64_t static HIDEventType.multiAxisPointer.getter()
{
  return 19;
}

uint64_t static HIDEventType.gyro.getter()
{
  return 20;
}

uint64_t static HIDEventType.compass.getter()
{
  return 21;
}

uint64_t static HIDEventType.zoomToggle.getter()
{
  return 22;
}

uint64_t static HIDEventType.dockSwipe.getter()
{
  return 23;
}

uint64_t static HIDEventType.symbolicHotKey.getter()
{
  return 24;
}

uint64_t static HIDEventType.power.getter()
{
  return 25;
}

uint64_t static HIDEventType.led.getter()
{
  return 26;
}

uint64_t static HIDEventType.fluidTouchGesture.getter()
{
  return 27;
}

uint64_t static HIDEventType.boundaryScroll.getter()
{
  return 28;
}

uint64_t static HIDEventType.biometric.getter()
{
  return 29;
}

uint64_t static HIDEventType.unicode.getter()
{
  return 30;
}

uint64_t static HIDEventType.atmosphericPressure.getter()
{
  return 31;
}

uint64_t static HIDEventType.force.getter()
{
  return 32;
}

uint64_t static HIDEventType.motionActivity.getter()
{
  return 33;
}

uint64_t static HIDEventType.motionGesture.getter()
{
  return 34;
}

uint64_t static HIDEventType.gameController.getter()
{
  return 35;
}

uint64_t static HIDEventType.humidity.getter()
{
  return 36;
}

uint64_t static HIDEventType.collection.getter()
{
  return 37;
}

uint64_t static HIDEventType.brightness.getter()
{
  return 38;
}

uint64_t static HIDEventType.genericGesture.getter()
{
  return 39;
}

uint64_t HIDEventType.hash(into:)()
{
  return sub_2498376CC();
}

uint64_t HIDEventType.hashValue.getter()
{
  sub_249837690();
  sub_2498376CC();
  return sub_2498376E4();
}

void sub_2498363F4(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AB54D0;
}

BOOL sub_249836404(int *a1, int *a2)
{
  return static HIDEventType.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_249836410()
{
  return HIDEventType.hashValue.getter();
}

uint64_t sub_249836418()
{
  return HIDEventType.hash(into:)();
}

uint64_t sub_249836420()
{
  sub_249837690();
  sub_2498376CC();
  return sub_2498376E4();
}

unint64_t sub_249836464()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257882B60;
  if (!qword_257882B60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257882B68);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257882B60);
  }
  return result;
}

unint64_t sub_2498364AC()
{
  unint64_t result;

  result = qword_257882B70;
  if (!qword_257882B70)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDEventType, &type metadata for HIDEventType);
    atomic_store(result, (unint64_t *)&qword_257882B70);
  }
  return result;
}

uint64_t sub_2498364E8()
{
  int *v0;

  return HIDEventType.description.getter(*v0);
}

ValueMetadata *type metadata accessor for HIDEventType()
{
  return &type metadata for HIDEventType;
}

id _DUIEnsembleClientInterface()
{
  void *v0;

  objc_msgSend(MEMORY[0x24BDD1990], "interfaceWithProtocol:", &unk_2578930F0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", objc_msgSend(MEMORY[0x24BDD1990], "interfaceWithProtocol:", &unk_257893150), sel_dragDidBeginWithSession_identifier_reply_, 0, 0);
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", objc_msgSend(MEMORY[0x24BDD1990], "interfaceWithProtocol:", &unk_257893150), sel_dragDidEndWithSession_, 0, 0);
  return v0;
}

uint64_t _DUIServerSessionEnsembleAppInterface()
{
  return objc_msgSend(MEMORY[0x24BDD1990], "interfaceWithProtocol:", &unk_257893150);
}

const __CFData *PlatformGetModelProperty()
{
  io_registry_entry_t v0;
  __CFString *v1;
  const __CFData *CFProperty;
  const UInt8 *BytePtr;
  const char *v4;
  CFStringRef v5;

  v0 = IORegistryEntryFromPath(*MEMORY[0x24BDD8B18], "IOService:/");
  v1 = CFSTR("model");
  if (v0)
  {
    CFProperty = (const __CFData *)IORegistryEntryCreateCFProperty(v0, CFSTR("model"), 0, 0);
    IOObjectRelease(v0);
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      BytePtr = CFDataGetBytePtr(CFProperty);
      if (BytePtr)
      {
        v4 = (const char *)BytePtr;
        if (CFDataGetLength(CFProperty) >= 1)
        {
          v5 = CFStringCreateWithCString(0, v4, 0);

          CFProperty = (const __CFData *)v5;
        }
      }
    }
  }
  else
  {
    CFProperty = (const __CFData *)&stru_251AB7C98;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {

    CFProperty = (const __CFData *)&stru_251AB7C98;
  }

  return CFProperty;
}

BOOL PlatformModelIsSupported(void *a1)
{
  id v1;
  void *v2;
  char v3;
  _BOOL8 v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  int v8;

  v1 = a1;
  objc_msgSend(MEMORY[0x24BDD17C8], "stringWithCString:encoding:", "iMac16,1", 30);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v1, "isEqualToString:", v2);

  if ((v3 & 1) != 0)
  {
    v4 = 0;
  }
  else
  {
    v5 = 1;
    v6 = 14;
    while (v5 != 15)
    {
      objc_msgSend(MEMORY[0x24BDD17C8], "stringWithCString:encoding:", (&PlatformModelIsSupported_unsupportedModels)[v5], 30);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = objc_msgSend(v1, "isEqualToString:", v7);

      ++v5;
      if (v8)
      {
        v6 = v5 - 2;
        break;
      }
    }
    v4 = v6 > 0xD;
  }

  return v4;
}

uint64_t sub_2498367A8()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_2498367B4()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_2498367C0()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_2498367CC()
{
  return MEMORY[0x24BDCB288]();
}

uint64_t sub_2498367D8()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_2498367E4()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_2498367F0()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_2498367FC()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_249836808()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_249836814()
{
  return MEMORY[0x24BDCB7E0]();
}

uint64_t sub_249836820()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_24983682C()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_249836838()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_249836844()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_249836850()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_24983685C()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_249836868()
{
  return MEMORY[0x24BDCCA58]();
}

uint64_t sub_249836874()
{
  return MEMORY[0x24BDCCA60]();
}

uint64_t sub_249836880()
{
  return MEMORY[0x24BDCCA88]();
}

uint64_t sub_24983688C()
{
  return MEMORY[0x24BDCCA90]();
}

uint64_t sub_249836898()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_2498368A4()
{
  return MEMORY[0x24BDCD520]();
}

uint64_t sub_2498368B0()
{
  return MEMORY[0x24BDCDB58]();
}

uint64_t sub_2498368BC()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_2498368C8()
{
  return MEMORY[0x24BDCDB68]();
}

uint64_t sub_2498368D4()
{
  return MEMORY[0x24BDCDBC8]();
}

uint64_t sub_2498368E0()
{
  return MEMORY[0x24BDCDBD0]();
}

uint64_t sub_2498368EC()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_2498368F8()
{
  return MEMORY[0x24BDCDC58]();
}

uint64_t sub_249836904()
{
  return MEMORY[0x24BDCDC68]();
}

uint64_t sub_249836910()
{
  return MEMORY[0x24BDCDC80]();
}

uint64_t sub_24983691C()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_249836928()
{
  return MEMORY[0x24BDCDCB8]();
}

uint64_t sub_249836934()
{
  return MEMORY[0x24BDCDCC8]();
}

uint64_t sub_249836940()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_24983694C()
{
  return MEMORY[0x24BDCDCF8]();
}

uint64_t sub_249836958()
{
  return MEMORY[0x24BDCDD08]();
}

uint64_t sub_249836964()
{
  return MEMORY[0x24BDCDD10]();
}

uint64_t sub_249836970()
{
  return MEMORY[0x24BDCDD98]();
}

uint64_t sub_24983697C()
{
  return MEMORY[0x24BDCDE68]();
}

uint64_t sub_249836988()
{
  return MEMORY[0x24BDCDE70]();
}

uint64_t sub_249836994()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_2498369A0()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_2498369AC()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_2498369B8()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_2498369C4()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_2498369D0()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_2498369DC()
{
  return MEMORY[0x24BDCEA00]();
}

uint64_t sub_2498369E8()
{
  return MEMORY[0x24BDCEA10]();
}

uint64_t sub_2498369F4()
{
  return MEMORY[0x24BDCEA18]();
}

uint64_t sub_249836A00()
{
  return MEMORY[0x24BDCEA28]();
}

uint64_t sub_249836A0C()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_249836A18()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_249836A24()
{
  return MEMORY[0x24BEE6160]();
}

uint64_t sub_249836A30()
{
  return MEMORY[0x24BEE6190]();
}

uint64_t sub_249836A3C()
{
  return MEMORY[0x24BEE61F8]();
}

uint64_t sub_249836A48()
{
  return MEMORY[0x24BEE6208]();
}

uint64_t sub_249836A54()
{
  return MEMORY[0x24BEE6258]();
}

uint64_t sub_249836A60()
{
  return MEMORY[0x24BEE62A0]();
}

uint64_t sub_249836A6C()
{
  return MEMORY[0x24BEE62F8]();
}

uint64_t sub_249836A78()
{
  return MEMORY[0x24BEE6368]();
}

uint64_t sub_249836A84()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_249836A90()
{
  return MEMORY[0x24BEE6410]();
}

uint64_t sub_249836A9C()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_249836AA8()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_249836AB4()
{
  return MEMORY[0x24BEE7788]();
}

uint64_t sub_249836AC0()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_249836ACC()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_249836AD8()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_249836AE4()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_249836AF0()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_249836AFC()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_249836B08()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_249836B14()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_249836B20()
{
  return MEMORY[0x24BDB97B0]();
}

uint64_t sub_249836B2C()
{
  return MEMORY[0x24BDB9B40]();
}

uint64_t sub_249836B38()
{
  return MEMORY[0x24BDB9B50]();
}

uint64_t sub_249836B44()
{
  return MEMORY[0x24BDB9B60]();
}

uint64_t sub_249836B50()
{
  return MEMORY[0x24BDB9B90]();
}

uint64_t sub_249836B5C()
{
  return MEMORY[0x24BDB9C40]();
}

uint64_t sub_249836B68()
{
  return MEMORY[0x24BDB9C48]();
}

uint64_t sub_249836B74()
{
  return MEMORY[0x24BDB9C90]();
}

uint64_t sub_249836B80()
{
  return MEMORY[0x24BDB9D68]();
}

uint64_t sub_249836B8C()
{
  return MEMORY[0x24BDB9D80]();
}

uint64_t sub_249836B98()
{
  return MEMORY[0x24BDB9E08]();
}

uint64_t sub_249836BA4()
{
  return MEMORY[0x24BDB9E70]();
}

uint64_t sub_249836BB0()
{
  return MEMORY[0x24BDB9F20]();
}

uint64_t sub_249836BBC()
{
  return MEMORY[0x24BDB9FE0]();
}

uint64_t sub_249836BC8()
{
  return MEMORY[0x24BDBA010]();
}

uint64_t sub_249836BD4()
{
  return MEMORY[0x24BDBA0A0]();
}

uint64_t sub_249836BE0()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t sub_249836BEC()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_249836BF8()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_249836C04()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_249836C10()
{
  return MEMORY[0x24BDC62A8]();
}

uint64_t sub_249836C1C()
{
  return MEMORY[0x24BDC62B0]();
}

uint64_t sub_249836C28()
{
  return MEMORY[0x24BDC62C8]();
}

uint64_t sub_249836C34()
{
  return MEMORY[0x24BDC62E0]();
}

uint64_t sub_249836C40()
{
  return MEMORY[0x24BDC62F0]();
}

uint64_t _s16UniversalControl12UVC1DigesterV6update13bufferPointerySW_tF_0()
{
  return MEMORY[0x24BDC6AD0]();
}

uint64_t sub_249836C58()
{
  return MEMORY[0x24BDC6AD8]();
}

uint64_t sub_249836C64()
{
  return MEMORY[0x24BDC6AE0]();
}

uint64_t sub_249836C70()
{
  return MEMORY[0x24BDC6AF0]();
}

uint64_t sub_249836C7C()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_249836C88()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_249836C94()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_249836CA0()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_249836CAC()
{
  return MEMORY[0x24BEE0350]();
}

uint64_t sub_249836CB8()
{
  return MEMORY[0x24BEE0418]();
}

uint64_t sub_249836CC4()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_249836CD0()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_249836CDC()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_249836CE8()
{
  return MEMORY[0x24BEE0830]();
}

uint64_t sub_249836CF4()
{
  return MEMORY[0x24BEE0838]();
}

uint64_t sub_249836D00()
{
  return MEMORY[0x24BEE0930]();
}

uint64_t sub_249836D0C()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_249836D18()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_249836D24()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_249836D30()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_249836D48()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_249836D54()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_249836D60()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_249836D6C()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_249836D78()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_249836D84()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_249836D90()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_249836D9C()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_249836DA8()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_249836DB4()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_249836DC0()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_249836DCC()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_249836DD8()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_249836DE4()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_249836DF0()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_249836DFC()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_249836E08()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_249836E14()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_249836E20()
{
  return MEMORY[0x24BEE0D58]();
}

uint64_t sub_249836E2C()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_249836E38()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_249836E44()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_249836E50()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_249836E5C()
{
  return MEMORY[0x24BEE0DF8]();
}

uint64_t sub_249836E68()
{
  return MEMORY[0x24BEE0E40]();
}

uint64_t sub_249836E74()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_249836E80()
{
  return MEMORY[0x24BEE0F40]();
}

uint64_t sub_249836E8C()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_249836E98()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_249836EA4()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_249836EB0()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_249836EBC()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_249836EC8()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_249836ED4()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_249836EE0()
{
  return MEMORY[0x24BDCFC08]();
}

uint64_t sub_249836EEC()
{
  return MEMORY[0x24BDCFC20]();
}

uint64_t sub_249836EF8()
{
  return MEMORY[0x24BDCFC58]();
}

uint64_t sub_249836F04()
{
  return MEMORY[0x24BDCFC60]();
}

uint64_t sub_249836F10()
{
  return MEMORY[0x24BDCFC68]();
}

uint64_t sub_249836F1C()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_249836F28()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_249836F34()
{
  return MEMORY[0x24BDCFCC8]();
}

uint64_t sub_249836F40()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_249836F4C()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_249836F58()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_249836F64()
{
  return MEMORY[0x24BEE1AA0]();
}

uint64_t sub_249836F70()
{
  return MEMORY[0x24BDCFDF0]();
}

uint64_t sub_249836F7C()
{
  return MEMORY[0x24BDCFDF8]();
}

uint64_t sub_249836F88()
{
  return MEMORY[0x24BDCFE08]();
}

uint64_t sub_249836F94()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_249836FA0()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_249836FAC()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_249836FB8()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_249836FC4()
{
  return MEMORY[0x24BDCFF70]();
}

uint64_t sub_249836FD0()
{
  return MEMORY[0x24BDCFFA0]();
}

uint64_t sub_249836FDC()
{
  return MEMORY[0x24BEE5660]();
}

uint64_t sub_249836FE8()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_249836FF4()
{
  return MEMORY[0x24BEE5898]();
}

uint64_t sub_249837000()
{
  return MEMORY[0x24BEE58B8]();
}

uint64_t sub_24983700C()
{
  return MEMORY[0x24BEE58D0]();
}

uint64_t sub_249837018()
{
  return MEMORY[0x24BEE58E8]();
}

uint64_t sub_249837024()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_249837030()
{
  return MEMORY[0x24BEE5978]();
}

uint64_t sub_24983703C()
{
  return MEMORY[0x24BDD0158]();
}

uint64_t sub_249837048()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_249837054()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_249837060()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_24983706C()
{
  return MEMORY[0x24BEE5BC8]();
}

uint64_t sub_249837078()
{
  return MEMORY[0x24BDD03C0]();
}

uint64_t sub_249837084()
{
  return MEMORY[0x24BDD03E0]();
}

uint64_t sub_249837090()
{
  return MEMORY[0x24BDD03F0]();
}

uint64_t sub_24983709C()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_2498370A8()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2498370B4()
{
  return MEMORY[0x24BEE1D60]();
}

uint64_t sub_2498370C0()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_2498370CC()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2498370D8()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2498370E4()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_2498370F0()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_2498370FC()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_249837108()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_249837114()
{
  return MEMORY[0x24BEE22D8]();
}

uint64_t sub_249837120()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_24983712C()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_249837138()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_249837144()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_249837150()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_24983715C()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_249837168()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_249837174()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_249837180()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_24983718C()
{
  return MEMORY[0x24BEE26B0]();
}

uint64_t sub_249837198()
{
  return MEMORY[0x24BEE26B8]();
}

uint64_t sub_2498371A4()
{
  return MEMORY[0x24BEE26C0]();
}

uint64_t sub_2498371B0()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_2498371BC()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_2498371C8()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2498371D4()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_2498371E0()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_2498371EC()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_2498371F8()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_249837204()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_249837210()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_24983721C()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_249837228()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_249837234()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_249837240()
{
  return MEMORY[0x24BEE2B80]();
}

uint64_t sub_24983724C()
{
  return MEMORY[0x24BEE2BA0]();
}

uint64_t sub_249837258()
{
  return MEMORY[0x24BEE2BB0]();
}

uint64_t sub_249837264()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_249837270()
{
  return MEMORY[0x24BEE2E58]();
}

uint64_t sub_24983727C()
{
  return MEMORY[0x24BEE2E68]();
}

uint64_t sub_249837288()
{
  return MEMORY[0x24BEE2E70]();
}

uint64_t sub_249837294()
{
  return MEMORY[0x24BEE2EA0]();
}

uint64_t sub_2498372A0()
{
  return MEMORY[0x24BEE2EB8]();
}

uint64_t sub_2498372AC()
{
  return MEMORY[0x24BEE2EC0]();
}

uint64_t sub_2498372B8()
{
  return MEMORY[0x24BEE2ED0]();
}

uint64_t sub_2498372C4()
{
  return MEMORY[0x24BEE2ED8]();
}

uint64_t sub_2498372D0()
{
  return MEMORY[0x24BEE2EE0]();
}

uint64_t sub_2498372DC()
{
  return MEMORY[0x24BEE2EE8]();
}

uint64_t sub_2498372E8()
{
  return MEMORY[0x24BEE2F00]();
}

uint64_t sub_2498372F4()
{
  return MEMORY[0x24BEE2F38]();
}

uint64_t sub_249837300()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_24983730C()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_249837318()
{
  return MEMORY[0x24BEE2F50]();
}

uint64_t sub_249837324()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_249837330()
{
  return MEMORY[0x24BEE3078]();
}

uint64_t sub_24983733C()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_249837348()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_249837354()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_249837360()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_24983736C()
{
  return MEMORY[0x24BEE30D0]();
}

uint64_t sub_249837378()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_249837384()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_249837390()
{
  return MEMORY[0x24BEE32B0]();
}

uint64_t sub_24983739C()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_2498373A8()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_2498373B4()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_2498373C0()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_2498373CC()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_2498373D8()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_2498373E4()
{
  return MEMORY[0x24BEE3340]();
}

uint64_t sub_2498373F0()
{
  return MEMORY[0x24BEE3348]();
}

uint64_t sub_2498373FC()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_249837408()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_249837414()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_249837420()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_24983742C()
{
  return MEMORY[0x24BEE3378]();
}

uint64_t sub_249837438()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_249837444()
{
  return MEMORY[0x24BEE33B0]();
}

uint64_t sub_249837450()
{
  return MEMORY[0x24BEE33C0]();
}

uint64_t sub_24983745C()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_249837468()
{
  return MEMORY[0x24BEE33D0]();
}

uint64_t sub_249837474()
{
  return MEMORY[0x24BEE3400]();
}

uint64_t sub_249837480()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_24983748C()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_249837498()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_2498374A4()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_2498374B0()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_2498374BC()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_2498374C8()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_2498374D4()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_2498374E0()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_2498374EC()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_2498374F8()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_249837504()
{
  return MEMORY[0x24BEE3500]();
}

uint64_t sub_249837510()
{
  return MEMORY[0x24BEE3508]();
}

uint64_t sub_24983751C()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_249837528()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_249837534()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_249837540()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_24983754C()
{
  return MEMORY[0x24BEE3610]();
}

uint64_t sub_249837558()
{
  return MEMORY[0x24BEE3630]();
}

uint64_t sub_249837564()
{
  return MEMORY[0x24BEE3638]();
}

uint64_t sub_249837570()
{
  return MEMORY[0x24BEE3650]();
}

uint64_t sub_24983757C()
{
  return MEMORY[0x24BEE3668]();
}

uint64_t sub_249837588()
{
  return MEMORY[0x24BEE3778]();
}

uint64_t sub_249837594()
{
  return MEMORY[0x24BEE3788]();
}

uint64_t sub_2498375A0()
{
  return MEMORY[0x24BEE37B8]();
}

uint64_t sub_2498375AC()
{
  return MEMORY[0x24BEE3950]();
}

uint64_t sub_2498375B8()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_2498375C4()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2498375D0()
{
  return MEMORY[0x24BEE3A58]();
}

uint64_t sub_2498375DC()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t sub_2498375E8()
{
  return MEMORY[0x24BEE3AC0]();
}

uint64_t sub_2498375F4()
{
  return MEMORY[0x24BEE3AF0]();
}

uint64_t sub_249837600()
{
  return MEMORY[0x24BEE3B20]();
}

uint64_t sub_24983760C()
{
  return MEMORY[0x24BEE3B60]();
}

uint64_t sub_249837618()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_249837624()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_249837630()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_24983763C()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_249837648()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_249837654()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_249837660()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_24983766C()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_249837678()
{
  return MEMORY[0x24BDD0780]();
}

uint64_t sub_249837684()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_249837690()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_24983769C()
{
  return MEMORY[0x24BEE42E8]();
}

uint64_t sub_2498376A8()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2498376B4()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_2498376C0()
{
  return MEMORY[0x24BEE4308]();
}

uint64_t sub_2498376CC()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_2498376D8()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_2498376E4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2498376F0()
{
  return MEMORY[0x24BDD0818]();
}

uint64_t sub_2498376FC()
{
  return MEMORY[0x24BEE45E8]();
}

uint64_t sub_249837708()
{
  return MEMORY[0x24BEE45F0]();
}

uint64_t sub_249837714()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_249837720()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_24983772C()
{
  return MEMORY[0x24BEE4620]();
}

uint64_t sub_249837738()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_249837744()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_249837750()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_24983775C()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_249837768()
{
  return MEMORY[0x24BEE4A98]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x24BDBB780]();
  return result;
}

CFTypeID CFArrayGetTypeID(void)
{
  return MEMORY[0x24BDBB850]();
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x24BDBBA18]();
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return (const UInt8 *)MEMORY[0x24BDBBCE0](theData);
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x24BDBBCF8](theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x24BDBBD08]();
}

CFTypeID CFDateGetTypeID(void)
{
  return MEMORY[0x24BDBBDA8]();
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x24BDBBE18]();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x24BDBBEF8](cf);
}

CFNumberType CFNumberGetType(CFNumberRef number)
{
  return MEMORY[0x24BDBC110](number);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x24BDBC118]();
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x24BDBC160](key, applicationID);
}

void CFPreferencesSetValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  MEMORY[0x24BDBC1A8](key, value, applicationID, userName, hostName);
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return MEMORY[0x24BDBC1B0](applicationID, userName, hostName);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x24BDBC2C8](rl, source, mode);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x24BDBC2F8]();
}

void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
  MEMORY[0x24BDBC348](rl, source, mode);
}

CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled)
{
  return MEMORY[0x24BDBC360](mode, returnAfterSourceHandled, seconds);
}

CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context)
{
  return (CFRunLoopSourceRef)MEMORY[0x24BDBC370](allocator, order, context);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x24BDBC568](alloc, cStr, *(_QWORD *)&encoding);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x24BDBC698]();
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x24BDBEFE0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFF0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFF8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF010]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF018]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x24BDBF040]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x24BDBF048]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x24BDBF050]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x24BDBF060]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGRect CGRectStandardize(CGRect rect)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x24BDBF080]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x24BDBF088]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

uint64_t IOHIDEventCreateDigitizerEvent()
{
  return MEMORY[0x24BDD8190]();
}

uint64_t IOHIDEventCreateDigitizerFingerEvent()
{
  return MEMORY[0x24BDD8198]();
}

uint64_t IOHIDEventGetEventFlags()
{
  return MEMORY[0x24BDD8280]();
}

uint64_t IOHIDEventGetEventWithOptions()
{
  return MEMORY[0x24BDD8288]();
}

uint64_t IOHIDEventGetFloatValue()
{
  return MEMORY[0x24BDD8290]();
}

uint64_t IOHIDEventGetIntegerValue()
{
  return MEMORY[0x24BDD8298]();
}

uint64_t IOHIDEventGetParent()
{
  return MEMORY[0x24BDD82A0]();
}

uint64_t IOHIDEventGetPhase()
{
  return MEMORY[0x24BDD82A8]();
}

uint64_t IOHIDEventGetScrollMomentum()
{
  return MEMORY[0x24BDD82B0]();
}

uint64_t IOHIDEventGetSenderID()
{
  return MEMORY[0x24BDD82B8]();
}

uint64_t IOHIDEventGetTimeStamp()
{
  return MEMORY[0x24BDD82C0]();
}

uint64_t IOHIDEventGetType()
{
  return MEMORY[0x24BDD82D0]();
}

uint64_t IOHIDEventIsAbsolute()
{
  return MEMORY[0x24BDD82F0]();
}

uint64_t IOHIDEventIsRepeat()
{
  return MEMORY[0x24BDD82F8]();
}

uint64_t IOHIDEventSetEventFlags()
{
  return MEMORY[0x24BDD8310]();
}

uint64_t IOHIDEventSetFloatValue()
{
  return MEMORY[0x24BDD8318]();
}

uint64_t IOHIDEventSetIntegerValue()
{
  return MEMORY[0x24BDD8320]();
}

uint64_t IOHIDEventSetPhase()
{
  return MEMORY[0x24BDD8328]();
}

uint64_t IOHIDEventSetRepeat()
{
  return MEMORY[0x24BDD8330]();
}

uint64_t IOHIDEventSetScrollMomentum()
{
  return MEMORY[0x24BDD8338]();
}

uint64_t IOHIDEventSetSenderID()
{
  return MEMORY[0x24BDD8340]();
}

uint64_t IOHIDEventSetTimeStamp()
{
  return MEMORY[0x24BDD8348]();
}

uint64_t IOHIDEventTypeGetName()
{
  return MEMORY[0x24BDD8468]();
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return MEMORY[0x24BDD86F8](*(_QWORD *)&object);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return (CFTypeRef)MEMORY[0x24BDD88B0](*(_QWORD *)&entry, key, allocator, *(_QWORD *)&options);
}

io_registry_entry_t IORegistryEntryFromPath(mach_port_t mainPort, const io_string_t path)
{
  return MEMORY[0x24BDD88C0](*(_QWORD *)&mainPort, path);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

pid_t audit_token_to_pid(audit_token_t *atoken)
{
  return MEMORY[0x24BEDA8F8](atoken);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

pid_t getpid(void)
{
  return MEMORY[0x24BDAE6D0]();
}

long double hypot(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAE838](__x, __y);
  return result;
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x24BDAEB30]();
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x24BDAEC68](info);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x24BDAEEA8](__b, *(_QWORD *)&__c, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x24BDAF138](*(_QWORD *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x24BDAF148](*(_QWORD *)&token, state64);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x24BDAF160](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x24BDAF168](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x24BDAF170](name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return MEMORY[0x24BDAF198](*(_QWORD *)&token, state64);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x24BEDD160]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x24BDAF458](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return MEMORY[0x24BDAF490]();
}

uint64_t os_unfair_recursive_lock_unlock()
{
  return MEMORY[0x24BDAF4A8]();
}

uint64_t os_variant_has_internal_ui()
{
  return MEMORY[0x24BDAF4E0]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x24BEE4C20]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastUnknownClassUnconditional()
{
  return MEMORY[0x24BEE4C90]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x24BEE4E60]();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return MEMORY[0x24BEE4E88]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_readAtKeyPath()
{
  return MEMORY[0x24BEE4ED8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setAtReferenceWritableKeyPath()
{
  return MEMORY[0x24BEE4F20]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x24BDB06E0](xBOOL);
}

uint64_t xpc_connection_copy_invalidation_reason()
{
  return MEMORY[0x24BDB0728]();
}

void xpc_connection_send_barrier(xpc_connection_t connection, dispatch_block_t barrier)
{
  MEMORY[0x24BDB07A0](connection, barrier);
}

uint64_t xpc_copy_entitlement_for_token()
{
  return MEMORY[0x24BDB0830]();
}

