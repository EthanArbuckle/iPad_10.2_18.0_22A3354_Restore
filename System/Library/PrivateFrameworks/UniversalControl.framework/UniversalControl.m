void type metadata accessor for CFString(uint64_t a1)
{
  sub_249748E98(a1, &qword_25787F760);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_249748E98(a1, &qword_25787F768);
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_249742BD0(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_249742BF0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for os_unfair_recursive_lock_s(uint64_t a1)
{
  sub_249748E98(a1, &qword_25787F770);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_249748E98(a1, &qword_25787F778);
}

void type metadata accessor for UniversalControlClientAssertion(uint64_t a1)
{
  sub_249748E98(a1, &qword_25787F780);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UniversalControlDisplayID(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UniversalControlDisplayID(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_249748E98(a1, &qword_25787F788);
}

uint64_t sub_249742CC0()
{
  uint64_t v0;

  v0 = sub_249836B14();
  __swift_allocate_value_buffer(v0, qword_25787F688);
  __swift_project_value_buffer(v0, (uint64_t)qword_25787F688);
  return sub_249836B08();
}

uint64_t sub_249742D2C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t result;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  uint64_t v57;

  v2 = v1;
  v4 = type metadata accessor for UVC1Object();
  sub_249748CD4();
  v5 = MEMORY[0x24BEE4AF8];
  v6 = (_QWORD *)sub_249836CA0();
  v57 = v5;
  sub_2497E7268(0);
  sub_249837258();
  swift_release();
  sub_249837240();
  swift_release();
  v7 = v1 + 40;
  swift_retain();
  swift_beginAccess();
  sub_24983736C();
  v8 = v56;
  if (v56 >> 60 == 15)
  {
LABEL_2:
    v9 = v6;
    swift_release_n();
    v10 = a1[4];
    swift_bridgeObjectRetain();
    v11 = sub_2497EA4B8(1, v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v12 = sub_2497432D8(v11, v10);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v12 + 16))
    {
      swift_allocObject();
      v13 = v2;
      swift_bridgeObjectRetain();
      sub_2497EC94C();
      v15 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787F828);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_249838510;
      v17 = *(_QWORD *)(v15 + 16);
      v18 = *(_QWORD *)(v15 + 24);
      *(_QWORD *)(v16 + 32) = v17;
      *(_QWORD *)(v16 + 40) = v18;
      swift_allocObject();
      swift_bridgeObjectRetain();
      sub_249748BCC(v17, v18);
      sub_2497EC94C();
      v20 = v19;
      sub_249748BCC(v17, v18);
      swift_retain();
      swift_isUniquelyReferenced_nonNull_native();
      sub_24974B548(v15, v17, v18);
      swift_bridgeObjectRelease();
      sub_249748C10(v17, v18);
      v21 = *(_QWORD *)(v20 + 16);
      v22 = *(_QWORD *)(v20 + 24);
      sub_249748BCC(v21, v22);
      swift_retain();
      swift_isUniquelyReferenced_nonNull_native();
      sub_24974B548(v20, v21, v22);
      v23 = v9;
      swift_bridgeObjectRelease();
      sub_249748C10(v21, v22);
      swift_release();
      v24 = *(_QWORD *)(v20 + 16);
      v25 = *(_QWORD *)(v20 + 24);
      sub_249748BCC(v24, v25);
      swift_release();
      v26 = *(_QWORD *)(v13 + 24);
      v27 = *(_QWORD *)(v13 + 32);
      *(_QWORD *)(v13 + 24) = v24;
      *(_QWORD *)(v13 + 32) = v25;
    }
    else
    {
      swift_bridgeObjectRelease();
      v45 = a1[2];
      v46 = a1[3];
      sub_249748BCC(v45, v46);
      swift_retain();
      swift_isUniquelyReferenced_nonNull_native();
      sub_24974B548((uint64_t)a1, v45, v46);
      v23 = v9;
      swift_bridgeObjectRelease();
      sub_249748C10(v45, v46);
      v47 = *(_QWORD *)(v2 + 24);
      v48 = *(_QWORD *)(v2 + 32);
      *(_QWORD *)(v2 + 24) = v45;
      *(_QWORD *)(v2 + 32) = v46;
      sub_249748BCC(v45, v46);
      v26 = v47;
      v27 = v48;
    }
    sub_249748C10(v26, v27);
    *(_QWORD *)v7 = v23;
    return swift_bridgeObjectRelease();
  }
  v28 = (uint64_t)v55;
  while (1)
  {
    while (!*(_QWORD *)(*(_QWORD *)v7 + 16))
    {
LABEL_8:
      sub_249748C80(v28, v8);
      sub_24983736C();
      v28 = (uint64_t)v55;
      v8 = v56;
      if (v56 >> 60 == 15)
        goto LABEL_2;
    }
    swift_bridgeObjectRetain();
    sub_249748C6C(v28, v8);
    sub_2497F22B8();
    if ((v29 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_249748C80(v28, v8);
      goto LABEL_8;
    }
    v50 = a1;
    v51 = v4;
    v52 = v2;
    swift_retain();
    swift_bridgeObjectRelease();
    sub_249748C80(v28, v8);
    swift_bridgeObjectRetain();
    sub_24979F208();
    v30 = sub_24977BC00();
    v32 = v30[2];
    v31 = v30[3];
    sub_249748BCC(v32, v31);
    v53 = v30;
    swift_retain();
    swift_isUniquelyReferenced_nonNull_native();
    v55 = v6;
    v54 = v31;
    v33 = sub_2497F22B8();
    if (__OFADD__(v6[2], (v34 & 1) == 0))
      break;
    v35 = v33;
    v36 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787F818);
    if ((sub_249837270() & 1) != 0)
    {
      v37 = sub_2497F22B8();
      if ((v36 & 1) != (v38 & 1))
        goto LABEL_24;
      v35 = v37;
    }
    if ((v36 & 1) != 0)
    {
      v39 = v6[7];
      swift_release();
      v40 = v54;
      *(_QWORD *)(v39 + 8 * v35) = v53;
    }
    else
    {
      v6[(v35 >> 6) + 8] |= 1 << v35;
      v41 = (uint64_t *)(v6[6] + 16 * v35);
      v40 = v54;
      *v41 = v32;
      v41[1] = v54;
      *(_QWORD *)(v6[7] + 8 * v35) = v30;
      v42 = v6[2];
      v43 = __OFADD__(v42, 1);
      v44 = v42 + 1;
      if (v43)
        goto LABEL_23;
      v6[2] = v44;
      sub_249748BCC(v32, v54);
    }
    v2 = v52;
    swift_bridgeObjectRelease();
    sub_249748C10(v32, v40);
    swift_release();
    swift_release();
    sub_249748C80(v28, v8);
    sub_24983736C();
    v28 = (uint64_t)v6;
    v8 = v56;
    a1 = v50;
    v4 = v51;
    if (v56 >> 60 == 15)
      goto LABEL_2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_24983763C();
  __break(1u);
  return result;
}

uint64_t sub_2497432D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  double v9;
  char *v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v50;
  uint64_t v51;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char *v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  int v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  int v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  char v167;
  char v168;
  char v169;
  char v170;
  char v171;
  char v172;
  char v173;
  char v174;
  char v175;
  char v176;
  char v177;
  char v178;
  char v179;
  char v180;
  char v181;
  char v182;
  char v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char __s2;
  char v190;
  char v191;
  char v192;
  char v193;
  char v194;
  char v195;
  char v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  char v202;
  char v203;
  char v204;
  char __s1;
  char v206;
  char v207;
  char v208;
  char v209;
  char v210;
  char v211;
  char v212;
  char v213;
  char v214;
  char v215;
  char v216;
  char v217;
  char v218;
  char v219;
  char v220;
  uint64_t v221;
  uint64_t v222;

  v2 = a2;
  v3 = a1;
  v222 = *MEMORY[0x24BDAC8D0];
  v57 = *(_QWORD *)(a1 + 16);
  if (v57)
  {
    v4 = 0;
    v55 = (char *)(a2 + 52);
    v56 = a1 + 32;
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      while (1)
      {
        if (v4 >= *(_QWORD *)(v3 + 16))
          __break(1u);
        v6 = (char *)(v56 + 80 * v4);
        v178 = v6[1];
        v179 = *v6;
        v176 = v6[3];
        v177 = v6[2];
        v175 = v6[4];
        v105 = v6[5];
        v174 = v6[6];
        v104 = v6[7];
        v103 = v6[8];
        v102 = v6[9];
        v101 = v6[10];
        v100 = v6[11];
        v99 = v6[12];
        v98 = v6[13];
        v97 = v6[14];
        v173 = v6[15];
        v96 = v6[16];
        v95 = v6[17];
        v94 = v6[18];
        v93 = v6[19];
        v92 = v6[20];
        v91 = v6[21];
        v90 = v6[22];
        v89 = v6[23];
        v88 = v6[24];
        v87 = v6[25];
        v86 = v6[26];
        v85 = v6[27];
        v84 = v6[28];
        v83 = v6[29];
        v82 = v6[30];
        v81 = v6[31];
        v171 = v6[33];
        v172 = v6[32];
        v169 = v6[35];
        v170 = v6[34];
        v167 = v6[37];
        v168 = v6[36];
        v165 = v6[39];
        v166 = v6[38];
        v164 = v6[40];
        v163 = v6[41];
        v162 = v6[42];
        v161 = v6[43];
        v160 = v6[44];
        v159 = v6[45];
        v158 = v6[46];
        v157 = v6[47];
        v80 = v6[48];
        v79 = v6[49];
        v78 = v6[50];
        v77 = v6[51];
        v76 = v6[52];
        v75 = v6[53];
        v74 = v6[54];
        v73 = v6[55];
        v72 = v6[56];
        v71 = v6[57];
        v70 = v6[58];
        v69 = v6[59];
        v68 = v6[60];
        v67 = v6[61];
        v66 = v6[62];
        v65 = v6[63];
        v62 = v6[64];
        v64 = *((unsigned __int16 *)v6 + 33);
        v63 = *((unsigned __int16 *)v6 + 34);
        v7 = *((_QWORD *)v6 + 9);
        ++v4;
        v8 = *(_QWORD *)(v2 + 16);
        if (v8)
          break;
LABEL_27:
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v221 = v5;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_24974DDBC();
          v5 = v221;
        }
        v50 = *(_QWORD *)(v5 + 16);
        if (v50 >= *(_QWORD *)(v5 + 24) >> 1)
        {
          sub_24974DDBC();
          v5 = v221;
        }
        *(_QWORD *)(v5 + 16) = v50 + 1;
        v51 = v5 + 80 * v50;
        *(_BYTE *)(v51 + 32) = v179;
        *(_BYTE *)(v51 + 33) = v178;
        *(_BYTE *)(v51 + 34) = v177;
        *(_BYTE *)(v51 + 35) = v176;
        *(_BYTE *)(v51 + 36) = v175;
        *(_BYTE *)(v51 + 37) = v105;
        *(_BYTE *)(v51 + 38) = v174;
        *(_BYTE *)(v51 + 39) = v104;
        *(_BYTE *)(v51 + 40) = v103;
        *(_BYTE *)(v51 + 41) = v102;
        *(_BYTE *)(v51 + 42) = v101;
        *(_BYTE *)(v51 + 43) = v100;
        *(_BYTE *)(v51 + 44) = v99;
        *(_BYTE *)(v51 + 45) = v98;
        *(_BYTE *)(v51 + 46) = v97;
        *(_BYTE *)(v51 + 47) = v173;
        *(_BYTE *)(v51 + 48) = v96;
        *(_BYTE *)(v51 + 49) = v95;
        *(_BYTE *)(v51 + 50) = v94;
        *(_BYTE *)(v51 + 51) = v93;
        *(_BYTE *)(v51 + 52) = v92;
        *(_BYTE *)(v51 + 53) = v91;
        *(_BYTE *)(v51 + 54) = v90;
        *(_BYTE *)(v51 + 55) = v89;
        *(_BYTE *)(v51 + 56) = v88;
        *(_BYTE *)(v51 + 57) = v87;
        *(_BYTE *)(v51 + 58) = v86;
        *(_BYTE *)(v51 + 59) = v85;
        *(_BYTE *)(v51 + 60) = v84;
        *(_BYTE *)(v51 + 61) = v83;
        *(_BYTE *)(v51 + 62) = v82;
        *(_BYTE *)(v51 + 63) = v81;
        *(_BYTE *)(v51 + 64) = v172;
        *(_BYTE *)(v51 + 65) = v171;
        *(_BYTE *)(v51 + 66) = v170;
        *(_BYTE *)(v51 + 67) = v169;
        *(_BYTE *)(v51 + 68) = v168;
        *(_BYTE *)(v51 + 69) = v167;
        *(_BYTE *)(v51 + 70) = v166;
        *(_BYTE *)(v51 + 71) = v165;
        *(_BYTE *)(v51 + 72) = v164;
        *(_BYTE *)(v51 + 73) = v163;
        *(_BYTE *)(v51 + 74) = v162;
        *(_BYTE *)(v51 + 75) = v161;
        *(_BYTE *)(v51 + 76) = v160;
        *(_BYTE *)(v51 + 77) = v159;
        *(_BYTE *)(v51 + 78) = v158;
        *(_BYTE *)(v51 + 79) = v157;
        *(_BYTE *)(v51 + 80) = v80;
        *(_BYTE *)(v51 + 81) = v79;
        *(_BYTE *)(v51 + 82) = v78;
        *(_BYTE *)(v51 + 83) = v77;
        *(_BYTE *)(v51 + 84) = v76;
        *(_BYTE *)(v51 + 85) = v75;
        *(_BYTE *)(v51 + 86) = v74;
        *(_BYTE *)(v51 + 87) = v73;
        *(_BYTE *)(v51 + 88) = v72;
        *(_BYTE *)(v51 + 89) = v71;
        *(_BYTE *)(v51 + 90) = v70;
        *(_BYTE *)(v51 + 91) = v69;
        *(_BYTE *)(v51 + 92) = v68;
        *(_BYTE *)(v51 + 93) = v67;
        *(_BYTE *)(v51 + 94) = v66;
        *(_BYTE *)(v51 + 95) = v65;
        *(_BYTE *)(v51 + 96) = v62;
        *(_WORD *)(v51 + 98) = v64;
        *(_WORD *)(v51 + 100) = v63;
        *(_QWORD *)(v51 + 104) = v7;
        if (v4 == v57)
          goto LABEL_34;
      }
      v59 = v5;
      v60 = v4;
      v58 = *((_QWORD *)v6 + 9);
      v9 = (double)v7 / 1000.0;
      swift_bridgeObjectRetain();
      v10 = v55;
      while (1)
      {
        v107 = v8;
        v181 = *(v10 - 19);
        v182 = *(v10 - 20);
        v180 = *(v10 - 18);
        v11 = *(v10 - 17);
        v12 = *(v10 - 16);
        v13 = *(v10 - 15);
        v14 = *(v10 - 14);
        v15 = *(v10 - 13);
        v16 = *(v10 - 12);
        v17 = *(v10 - 11);
        v18 = *(v10 - 10);
        v19 = *(v10 - 9);
        v20 = *(v10 - 8);
        v21 = *(v10 - 7);
        v22 = *(v10 - 6);
        v23 = v10[13];
        v24 = v10[14];
        v25 = v10[15];
        v26 = v10[16];
        v27 = v10[17];
        v28 = v10[18];
        v29 = v10[19];
        v30 = v10[20];
        v31 = v10[21];
        v32 = v10[22];
        v33 = v10[23];
        v34 = v10[24];
        v35 = v10[25];
        v36 = v10[26];
        v37 = v10[27];
        v131 = v10[12];
        __s1 = v131;
        v130 = v23;
        v206 = v23;
        v129 = v24;
        v207 = v24;
        v118 = v25;
        v208 = v25;
        v117 = v26;
        v209 = v26;
        v116 = v27;
        v210 = v27;
        v115 = v28;
        v211 = v28;
        v114 = v29;
        v212 = v29;
        v113 = v30;
        v213 = v30;
        v112 = v31;
        v214 = v31;
        v111 = v32;
        v215 = v32;
        v110 = v33;
        v216 = v33;
        v217 = v34;
        v151 = v35;
        v218 = v35;
        v150 = v36;
        v219 = v36;
        v149 = v37;
        v220 = v37;
        __s2 = v182;
        v190 = v181;
        v191 = v180;
        v145 = v11;
        v192 = v11;
        v144 = v12;
        v193 = v12;
        v143 = v13;
        v194 = v13;
        v142 = v14;
        v195 = v14;
        v141 = v15;
        v196 = v15;
        v140 = v16;
        v197 = v16;
        v198 = v17;
        v139 = v18;
        v199 = v18;
        v138 = v19;
        v200 = v19;
        v137 = v20;
        v201 = v20;
        v136 = v21;
        v202 = v21;
        v135 = v22;
        v203 = v22;
        v38 = *(v10 - 5);
        v204 = v38;
        v39 = *(v10 - 4);
        v40 = *(v10 - 3);
        v122 = *(v10 - 2);
        v41 = *(v10 - 1);
        v121 = *v10;
        v42 = v10[1];
        v43 = v10[2];
        v44 = v10[3];
        v45 = v10[4];
        v46 = v10[5];
        v123 = v10[6];
        v124 = v10[7];
        v125 = v10[8];
        v126 = v10[9];
        v127 = v10[10];
        v128 = v10[11];
        v132 = v10[28];
        v133 = v10[29];
        v147 = v10[30];
        v152 = v10[31];
        v154 = v10[32];
        v153 = v10[33];
        v155 = v10[34];
        v183 = v10[35];
        v184 = v10[36];
        v185 = v10[37];
        v186 = v10[38];
        v187 = v10[39];
        v188 = v10[40];
        v156 = v10[41];
        v148 = v10[42];
        v108 = v10[43];
        v109 = v10[44];
        v120 = *((unsigned __int16 *)v10 + 23);
        v134 = *((unsigned __int16 *)v10 + 24);
        v106 = v10;
        v61 = *(_QWORD *)(v10 + 52);
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          __asm { BR              X3 }
        v47 = v145;
        v146 = v118;
        v119 = v47;
        __s1 = v172;
        v206 = v171;
        v207 = v170;
        v208 = v169;
        v209 = v168;
        v210 = v167;
        v211 = v166;
        v212 = v165;
        v213 = v164;
        v214 = v163;
        v215 = v162;
        v216 = v161;
        v217 = v160;
        v218 = v159;
        v219 = v158;
        v220 = v157;
        __s2 = v179;
        v190 = v178;
        v191 = v177;
        v192 = v176;
        v193 = v175;
        v194 = v105;
        v195 = v174;
        v196 = v104;
        v197 = v103;
        v198 = v102;
        v199 = v101;
        v200 = v100;
        v201 = v99;
        v202 = v98;
        v203 = v97;
        v204 = v173;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          __asm { BR              X8 }
        __s1 = v182;
        v206 = v181;
        v207 = v180;
        v208 = v119;
        v209 = v144;
        v210 = v143;
        v211 = v142;
        v212 = v141;
        v213 = v140;
        v214 = v17;
        v215 = v139;
        v216 = v138;
        v217 = v137;
        v218 = v136;
        v219 = v135;
        v220 = v38;
        __s2 = v179;
        v190 = v178;
        v191 = v177;
        v192 = v176;
        v193 = v175;
        v194 = v105;
        v195 = v174;
        v196 = v104;
        v197 = v103;
        v198 = v102;
        v199 = v101;
        v200 = v100;
        v201 = v99;
        v202 = v98;
        v203 = v97;
        v204 = v173;
        if (!memcmp(&__s1, &__s2, 0x10uLL))
        {
          __s1 = v182;
          v206 = v181;
          v207 = v180;
          v208 = v119;
          v209 = v144;
          v210 = v143;
          v211 = v142;
          v212 = v141;
          v213 = v140;
          v214 = v17;
          v215 = v139;
          v216 = v138;
          v217 = v137;
          v218 = v136;
          v219 = v135;
          v220 = v38;
          __s2 = v179;
          v190 = v178;
          v191 = v177;
          v192 = v176;
          v193 = v175;
          v194 = v105;
          v195 = v174;
          v196 = v104;
          v197 = v103;
          v198 = v102;
          v199 = v101;
          v200 = v100;
          v201 = v99;
          v202 = v98;
          v203 = v97;
          v204 = v173;
          if (!memcmp(&__s1, &__s2, 0x10uLL))
          {
            __s1 = v39;
            v206 = v40;
            v207 = v122;
            v208 = v41;
            v209 = v121;
            v210 = v42;
            v211 = v43;
            v212 = v44;
            v213 = v45;
            v214 = v46;
            v215 = v123;
            v216 = v124;
            v217 = v125;
            v218 = v126;
            v219 = v127;
            v220 = v128;
            __s2 = v96;
            v190 = v95;
            v191 = v94;
            v192 = v93;
            v193 = v92;
            v194 = v91;
            v195 = v90;
            v196 = v89;
            v197 = v88;
            v198 = v87;
            v199 = v86;
            v200 = v85;
            v201 = v84;
            v202 = v83;
            v203 = v82;
            v204 = v81;
            if (!memcmp(&__s1, &__s2, 0x10uLL) && (_DWORD)v109 == (_DWORD)v62 && v120 == v64)
            {
              __s1 = v131;
              v206 = v130;
              v207 = v129;
              v208 = v146;
              v209 = v117;
              v210 = v116;
              v211 = v115;
              v212 = v114;
              v213 = v113;
              v214 = v112;
              v215 = v111;
              v216 = v110;
              v217 = v92;
              v218 = v151;
              v219 = v150;
              v220 = v149;
              __s2 = v172;
              v190 = v171;
              v191 = v170;
              v192 = v169;
              v193 = v168;
              v194 = v167;
              v195 = v166;
              v196 = v165;
              v197 = v164;
              v198 = v163;
              v199 = v162;
              v200 = v161;
              v201 = v160;
              v202 = v159;
              v203 = v158;
              v204 = v157;
              if (!memcmp(&__s1, &__s2, 0x10uLL))
              {
                __s1 = v131;
                v206 = v130;
                v207 = v129;
                v208 = v146;
                v209 = v117;
                v210 = v116;
                v211 = v115;
                v212 = v114;
                v213 = v113;
                v214 = v112;
                v215 = v111;
                v216 = v110;
                v217 = v92;
                v218 = v151;
                v219 = v150;
                v220 = v149;
                __s2 = v172;
                v190 = v171;
                v191 = v170;
                v192 = v169;
                v193 = v168;
                v194 = v167;
                v195 = v166;
                v196 = v165;
                v197 = v164;
                v198 = v163;
                v199 = v162;
                v200 = v161;
                v201 = v160;
                v202 = v159;
                v203 = v158;
                v204 = v157;
                if (!memcmp(&__s1, &__s2, 0x10uLL))
                {
                  __s1 = v132;
                  v206 = v133;
                  v207 = v147;
                  v208 = v152;
                  v209 = v154;
                  v210 = v153;
                  v211 = v155;
                  v212 = v183;
                  v213 = v184;
                  v214 = v185;
                  v215 = v186;
                  v216 = v187;
                  v217 = v188;
                  v218 = v156;
                  v219 = v148;
                  v220 = v108;
                  __s2 = v80;
                  v190 = v79;
                  v191 = v78;
                  v192 = v77;
                  v193 = v76;
                  v194 = v75;
                  v195 = v74;
                  v196 = v73;
                  v197 = v72;
                  v198 = v71;
                  v199 = v70;
                  v200 = v69;
                  v201 = v68;
                  v202 = v67;
                  v203 = v66;
                  v204 = v65;
                  if (!memcmp(&__s1, &__s2, 0x10uLL) && v134 == v63 && (double)v61 / 1000.0 == v9)
                    break;
                }
              }
            }
          }
        }
        v10 = v106 + 80;
        v8 = v107 - 1;
        if (v107 == 1)
        {
          v2 = a2;
          swift_bridgeObjectRelease();
          v3 = a1;
          v5 = v59;
          v4 = v60;
          v7 = v58;
          goto LABEL_27;
        }
      }
      v2 = a2;
      swift_bridgeObjectRelease();
      v5 = v59;
      v4 = v60;
      v3 = a1;
    }
    while (v60 != v57);
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
LABEL_34:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

void sub_249744DB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v2 = sub_2497EA4B8(0, a1);
  OUTLINED_FUNCTION_16();
  if (!*(_QWORD *)(v1[5] + 16))
    goto LABEL_6;
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_11();
  sub_2497F22B8();
  if ((v3 & 1) == 0)
  {
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_10();
    goto LABEL_6;
  }
  swift_retain();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_10();
  v4 = OUTLINED_FUNCTION_24();
  v11 = sub_24977D820(v4, v2, v5, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_1();
  swift_release();
  if ((v11 & 1) == 0)
  {
LABEL_6:
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787F828);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_249838510;
    v13 = v1[4];
    *(_QWORD *)(v12 + 32) = v1[3];
    *(_QWORD *)(v12 + 40) = v13;
    type metadata accessor for UVC1Object();
    swift_allocObject();
    OUTLINED_FUNCTION_11();
    sub_2497EC94C();
    sub_249742D2C(v14);
    swift_release();
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
LABEL_7:
  OUTLINED_FUNCTION_40();
}

_QWORD *sub_249744EFC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  swift_beginAccess();
  v1 = v0[5];
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_5;
  v2 = v0[3];
  v3 = v0[4];
  sub_249748BCC(v2, v3);
  sub_249748BCC(v2, v3);
  swift_bridgeObjectRetain();
  v4 = sub_2497F22B8();
  if ((v5 & 1) == 0)
  {
    sub_249748C10(v2, v3);
    swift_bridgeObjectRelease();
    sub_249748C10(v2, v3);
LABEL_5:
    type metadata accessor for UVC1Object();
    return sub_24977BC68();
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v4);
  swift_retain();
  sub_249748C10(v2, v3);
  swift_bridgeObjectRelease();
  sub_249748C10(v2, v3);
  return (_QWORD *)v6;
}

uint64_t sub_249744FF0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int16 v32;
  __int16 v33;
  char v34;
  char v35;
  char v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;

  v2 = sub_249744EFC();
  v3 = sub_2497EA4B8(0, a1);
  v4 = v2[4];
  v29 = *(_QWORD *)(v4 + 16);
  if (v29)
  {
    v5 = *(_QWORD *)(v3 + 16);
    v25 = v4 + 32;
    v6 = swift_bridgeObjectRetain();
    v7 = 0;
    v24 = v3 + 64;
    v8 = MEMORY[0x24BEE4AF8];
    v27 = v6;
    v28 = v3;
    v26 = v5;
    do
    {
      if (v7 >= *(_QWORD *)(v6 + 16))
        __break(1u);
      if (v5)
      {
        v30 = v7;
        v9 = (char *)(v25 + 80 * v7);
        v10 = *v9;
        v11 = v9[1];
        v12 = v9[2];
        v13 = v9[3];
        v14 = v9[4];
        v15 = v9[5];
        v40 = *(_OWORD *)(v9 + 6);
        v38 = *(_OWORD *)(v9 + 38);
        v39 = *(_OWORD *)(v9 + 22);
        v16 = *(_QWORD *)(v9 + 54);
        v35 = v9[63];
        v36 = v9[62];
        v33 = *((_WORD *)v9 + 33);
        v34 = v9[64];
        v32 = *((_WORD *)v9 + 34);
        v31 = *((_QWORD *)v9 + 9);
        swift_bridgeObjectRetain();
        v17 = v24;
        v18 = v5;
        v37 = v10;
        do
        {
          if (OUTLINED_FUNCTION_5() || OUTLINED_FUNCTION_5())
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_36();
              v8 = v21;
            }
            v19 = *(_QWORD *)(v8 + 16);
            if (v19 >= *(_QWORD *)(v8 + 24) >> 1)
            {
              OUTLINED_FUNCTION_36();
              v8 = v22;
            }
            *(_QWORD *)(v8 + 16) = v19 + 1;
            v20 = v8 + 80 * v19;
            *(_BYTE *)(v20 + 32) = v37;
            *(_BYTE *)(v20 + 33) = v11;
            *(_BYTE *)(v20 + 34) = v12;
            *(_BYTE *)(v20 + 35) = v13;
            *(_BYTE *)(v20 + 36) = v14;
            *(_BYTE *)(v20 + 37) = v15;
            *(_OWORD *)(v20 + 38) = v40;
            *(_OWORD *)(v20 + 54) = v39;
            *(_OWORD *)(v20 + 70) = v38;
            *(_QWORD *)(v20 + 86) = v16;
            *(_BYTE *)(v20 + 94) = v36;
            *(_BYTE *)(v20 + 95) = v35;
            *(_BYTE *)(v20 + 96) = v34;
            *(_WORD *)(v20 + 98) = v33;
            *(_WORD *)(v20 + 100) = v32;
            *(_QWORD *)(v20 + 104) = v31;
          }
          v17 += 80;
          --v18;
        }
        while (v18);
        v3 = v28;
        OUTLINED_FUNCTION_42();
        v5 = v26;
        v6 = v27;
        v7 = v30;
      }
      ++v7;
    }
    while (v7 != v29);
    swift_bridgeObjectRelease();
  }
  sub_24979F208();
  sub_249744DB8(v3);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2497452F8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  __int16 v11;
  __int16 v12;
  __int16 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  char v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v40 = a1[33];
  v33 = a1[34];
  v38 = a1[38];
  v30 = a1[2];
  v31 = a1[1];
  v28 = a1[8];
  v29 = a1[6];
  v27 = a1[10];
  static UniversalControlUUID.compare(lhs:rhs:)(a1[32] | (unint64_t)(v40 << 8) | (v33 << 16) | ((unint64_t)a1[35] << 24) | ((unint64_t)a1[36] << 32) | ((unint64_t)a1[37] << 40) | (v38 << 48) | ((unint64_t)a1[39] << 56), a1[40] | ((unint64_t)a1[41] << 8) | ((unint64_t)a1[42] << 16) | ((unint64_t)a1[43] << 24) | ((unint64_t)a1[44] << 32) | ((unint64_t)a1[45] << 40) | ((unint64_t)a1[46] << 48) | ((unint64_t)a1[47] << 56), *a1 | (unint64_t)(v31 << 8) | (v30 << 16) | ((unint64_t)a1[3] << 24) | ((unint64_t)a1[4] << 32) | ((unint64_t)a1[5] << 40) | (v29 << 48) | ((unint64_t)a1[7] << 56), v28 | ((unint64_t)a1[9] << 8) | (v27 << 16) | ((unint64_t)a1[11] << 24) | ((unint64_t)a1[12] << 32) | ((unint64_t)a1[13] << 40) | ((unint64_t)a1[14] << 48) | ((unint64_t)a1[15] << 56));
  v1 = *(_QWORD *)(sub_249744EFC()[4] + 16);
  if (v1)
  {
    v2 = swift_bridgeObjectRetain();
    v3 = 0;
    v34 = MEMORY[0x24BEE4AF8];
    v35 = v2;
    do
    {
      v4 = *(_BYTE *)(v2 + v3 + 32);
      v5 = *(_BYTE *)(v2 + v3 + 33);
      v6 = *(_BYTE *)(v2 + v3 + 34);
      v7 = *(_BYTE *)(v2 + v3 + 35);
      v8 = *(_BYTE *)(v2 + v3 + 36);
      v9 = *(_BYTE *)(v2 + v3 + 37);
      v42 = *(_OWORD *)(v2 + v3 + 70);
      v43 = *(_OWORD *)(v2 + v3 + 54);
      v10 = *(_QWORD *)(v2 + v3 + 86);
      v39 = *(_BYTE *)(v2 + v3 + 94);
      v37 = *(_BYTE *)(v2 + v3 + 95);
      v36 = *(_BYTE *)(v2 + v3 + 96);
      v11 = *(_WORD *)(v2 + v3 + 98);
      v12 = *(_WORD *)(v2 + v3 + 100);
      v41 = *(_OWORD *)(v2 + v3 + 38);
      if (!OUTLINED_FUNCTION_5())
      {
        v32 = v4;
        if (!OUTLINED_FUNCTION_5())
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_249752C60(0, *(_QWORD *)(v34 + 16) + 1, 1, v34);
            v34 = v24;
          }
          v13 = v12;
          v15 = *(_QWORD *)(v34 + 16);
          v14 = *(_QWORD *)(v34 + 24);
          v16 = v15 + 1;
          v17 = v41;
          v18 = v42;
          v19 = v43;
          v20 = v39;
          v21 = v37;
          v22 = v11;
          if (v15 >= v14 >> 1)
          {
            sub_249752C60(v14 > 1, v15 + 1, 1, v34);
            v16 = v15 + 1;
            v13 = v12;
            v22 = v11;
            v21 = v37;
            v20 = v39;
            v18 = v42;
            v19 = v43;
            v17 = v41;
            v34 = v25;
          }
          *(_QWORD *)(v34 + 16) = v16;
          v23 = v34 + 70 * v15;
          *(_BYTE *)(v23 + 32) = v32;
          *(_BYTE *)(v23 + 33) = v5;
          *(_BYTE *)(v23 + 34) = v6;
          *(_BYTE *)(v23 + 35) = v7;
          *(_BYTE *)(v23 + 36) = v8;
          *(_BYTE *)(v23 + 37) = v9;
          *(_OWORD *)(v23 + 38) = v17;
          *(_OWORD *)(v23 + 54) = v19;
          *(_OWORD *)(v23 + 70) = v18;
          *(_QWORD *)(v23 + 86) = v10;
          *(_BYTE *)(v23 + 94) = v20;
          *(_BYTE *)(v23 + 95) = v21;
          *(_BYTE *)(v23 + 96) = v36;
          *(_WORD *)(v23 + 98) = v22;
          *(_WORD *)(v23 + 100) = v13;
        }
      }
      v3 += 80;
      --v1;
      v2 = v35;
    }
    while (v1);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v34;
}

uint64_t sub_24974591C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;

  sub_2497E7268(0);
  sub_249837240();
  swift_release();
  v3 = (uint64_t *)(v1 + 40);
  swift_retain();
  v26 = (uint64_t *)(a1 + 40);
  swift_beginAccess();
  swift_beginAccess();
  sub_24983736C();
  v4 = v30;
  if (v30 >> 60 == 15)
  {
LABEL_17:
    swift_release();
LABEL_21:
    swift_release();
    return sub_249745D04();
  }
  else
  {
    v5 = v29;
    while (1)
    {
      v6 = *v26;
      if (!*(_QWORD *)(*v26 + 16))
        goto LABEL_19;
      sub_249748C6C(v5, v4);
      sub_249748C6C(v5, v4);
      swift_bridgeObjectRetain();
      v7 = sub_2497F22B8();
      if ((v8 & 1) == 0)
      {
        sub_249748C80(v5, v4);
        swift_bridgeObjectRelease();
        sub_249748C80(v5, v4);
LABEL_19:
        swift_release();
        sub_249748C80(v5, v4);
        goto LABEL_21;
      }
      v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
      swift_retain();
      sub_249748C80(v5, v4);
      swift_bridgeObjectRelease();
      sub_249748C80(v5, v4);
      if (*(_QWORD *)(*v3 + 16))
      {
        sub_249748C6C(v5, v4);
        sub_249748C6C(v5, v4);
        swift_bridgeObjectRetain();
        sub_2497F22B8();
        if ((v10 & 1) != 0)
        {
          swift_retain();
          sub_249748C80(v5, v4);
          swift_bridgeObjectRelease();
          sub_249748C80(v5, v4);
          swift_release();
          swift_release();
          sub_249748C80(v5, v4);
          swift_release();
          goto LABEL_21;
        }
        sub_249748C80(v5, v4);
        swift_bridgeObjectRelease();
        sub_249748C80(v5, v4);
      }
      swift_beginAccess();
      v12 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      v27 = v9;
      swift_retain();
      sub_249748BCC(v12, v11);
      swift_isUniquelyReferenced_nonNull_native();
      v13 = *v3;
      v28 = (_QWORD *)*v3;
      *v3 = 0x8000000000000000;
      v14 = sub_2497F22B8();
      if (__OFADD__(*(_QWORD *)(v13 + 16), (v15 & 1) == 0))
        break;
      v16 = v14;
      v17 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787F818);
      if ((sub_249837270() & 1) != 0)
      {
        v18 = sub_2497F22B8();
        if ((v17 & 1) != (v19 & 1))
          goto LABEL_24;
        v16 = v18;
      }
      if ((v17 & 1) != 0)
      {
        v20 = v28[7];
        swift_release();
        *(_QWORD *)(v20 + 8 * v16) = v27;
      }
      else
      {
        v28[(v16 >> 6) + 8] |= 1 << v16;
        v21 = (uint64_t *)(v28[6] + 16 * v16);
        *v21 = v12;
        v21[1] = v11;
        *(_QWORD *)(v28[7] + 8 * v16) = v9;
        v22 = v28[2];
        v23 = __OFADD__(v22, 1);
        v24 = v22 + 1;
        if (v23)
          goto LABEL_23;
        v28[2] = v24;
        sub_249748BCC(v12, v11);
      }
      *v3 = (uint64_t)v28;
      swift_bridgeObjectRelease();
      sub_249748C10(v12, v11);
      swift_endAccess();
      swift_release();
      sub_249748C80(v5, v4);
      sub_24983736C();
      v5 = v29;
      v4 = v30;
      if (v30 >> 60 == 15)
        goto LABEL_17;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    result = sub_24983763C();
    __break(1u);
  }
  return result;
}

uint64_t sub_249745D04()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;

  type metadata accessor for UVC1Object();
  sub_249748CD4();
  v1 = (_QWORD *)sub_249836CA0();
  sub_2497E7268(0);
  sub_249837258();
  swift_release();
  sub_249837240();
  swift_release();
  v2 = (uint64_t *)(v0 + 40);
  swift_retain();
  swift_beginAccess();
  sub_24983736C();
  v3 = v27;
  if (v27 >> 60 == 15)
  {
LABEL_2:
    swift_release_n();
    *v2 = (uint64_t)v1;
    return swift_bridgeObjectRelease();
  }
  v5 = (uint64_t)v26;
  while (1)
  {
    while (1)
    {
      v6 = *v2;
      if (*(_QWORD *)(*v2 + 16))
        break;
LABEL_7:
      sub_249748C80(v5, v3);
      sub_24983736C();
      v5 = (uint64_t)v26;
      v3 = v27;
      if (v27 >> 60 == 15)
        goto LABEL_2;
    }
    sub_249748C6C(v5, v3);
    sub_249748C6C(v5, v3);
    swift_bridgeObjectRetain();
    v7 = sub_2497F22B8();
    if ((v8 & 1) == 0)
    {
      sub_249748C80(v5, v3);
      swift_bridgeObjectRelease();
      sub_249748C80(v5, v3);
      goto LABEL_7;
    }
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    swift_retain();
    sub_249748C80(v5, v3);
    swift_bridgeObjectRelease();
    sub_249748C80(v5, v3);
    v10 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v9 + 24);
    v25 = v9;
    swift_retain();
    sub_249748BCC(v10, v11);
    swift_isUniquelyReferenced_nonNull_native();
    v26 = v1;
    v24 = v10;
    v12 = v11;
    v13 = sub_2497F22B8();
    if (__OFADD__(v1[2], (v14 & 1) == 0))
      break;
    v15 = v13;
    v16 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787F818);
    if ((sub_249837270() & 1) != 0)
    {
      v17 = sub_2497F22B8();
      if ((v16 & 1) != (v18 & 1))
        goto LABEL_21;
      v15 = v17;
    }
    if ((v16 & 1) != 0)
    {
      v19 = v1[7];
      swift_release();
      *(_QWORD *)(v19 + 8 * v15) = v25;
    }
    else
    {
      v1[(v15 >> 6) + 8] |= 1 << v15;
      v20 = (uint64_t *)(v1[6] + 16 * v15);
      *v20 = v10;
      v20[1] = v12;
      *(_QWORD *)(v1[7] + 8 * v15) = v25;
      v21 = v1[2];
      v22 = __OFADD__(v21, 1);
      v23 = v21 + 1;
      if (v22)
        goto LABEL_20;
      v1[2] = v23;
      sub_249748BCC(v10, v12);
    }
    swift_bridgeObjectRelease();
    sub_249748C10(v24, v12);
    swift_release();
    sub_249748C80(v5, v3);
    sub_24983736C();
    v5 = (uint64_t)v1;
    v3 = v27;
    if (v27 >> 60 == 15)
      goto LABEL_2;
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_24983763C();
  __break(1u);
  return result;
}

uint64_t sub_24974603C(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  _QWORD *v59;
  uint64_t v60[3];
  __int128 v61[2];

  v2 = v1;
  v4 = a1[4];
  *(_QWORD *)&v61[0] = a1[3];
  *((_QWORD *)&v61[0] + 1) = v4;
  OUTLINED_FUNCTION_11();
  v5 = sub_2497E7EB4(v61);
  OUTLINED_FUNCTION_10();
  if ((v5 & 1) != 0)
  {
    if (qword_25787F680 != -1)
      swift_once();
    v6 = OUTLINED_FUNCTION_45();
    __swift_project_value_buffer(v6, (uint64_t)qword_25787F688);
    OUTLINED_FUNCTION_8();
    OUTLINED_FUNCTION_13();
    v7 = (void *)sub_249836AFC();
    v8 = sub_249836FB8();
    if (OUTLINED_FUNCTION_20(v8))
    {
      v9 = OUTLINED_FUNCTION_12();
      v60[0] = OUTLINED_FUNCTION_12();
      *(_DWORD *)v9 = 136446466;
      OUTLINED_FUNCTION_7();
      OUTLINED_FUNCTION_0(v10, v11);
      OUTLINED_FUNCTION_14();
      v12 = OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_6(v12);
      OUTLINED_FUNCTION_4();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_25();
      *(_WORD *)(v9 + 12) = 2082;
      v61[0] = *(_OWORD *)(a1 + 3);
      sub_24980C6C8();
      OUTLINED_FUNCTION_0(v13, v14);
      v15 = OUTLINED_FUNCTION_14();
      v17 = v16;
      OUTLINED_FUNCTION_1();
      *(_QWORD *)&v61[0] = sub_24976A748(v15, v17, v60);
      sub_2498370CC();
      OUTLINED_FUNCTION_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_15(&dword_249741000, v18, v19, "Merge: up-to-date, ours=%{public}s, theirs=%{public}s");
      OUTLINED_FUNCTION_21();
      OUTLINED_FUNCTION_3();
    }

    OUTLINED_FUNCTION_2();
    return OUTLINED_FUNCTION_2();
  }
  else
  {
    v20 = v2[4];
    *(_QWORD *)&v61[0] = v2[3];
    *((_QWORD *)&v61[0] + 1) = v20;
    OUTLINED_FUNCTION_11();
    v21 = sub_2497E7EB4(v61);
    OUTLINED_FUNCTION_10();
    if ((v21 & 1) != 0)
    {
      if (qword_25787F680 != -1)
        swift_once();
      v22 = OUTLINED_FUNCTION_45();
      __swift_project_value_buffer(v22, (uint64_t)qword_25787F688);
      OUTLINED_FUNCTION_8();
      OUTLINED_FUNCTION_13();
      v23 = (void *)sub_249836AFC();
      v24 = sub_249836FB8();
      if (OUTLINED_FUNCTION_20(v24))
      {
        v25 = OUTLINED_FUNCTION_12();
        v60[0] = OUTLINED_FUNCTION_12();
        *(_DWORD *)v25 = 136446466;
        OUTLINED_FUNCTION_7();
        OUTLINED_FUNCTION_0(v26, v27);
        OUTLINED_FUNCTION_14();
        v28 = OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_6(v28);
        OUTLINED_FUNCTION_4();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_25();
        *(_WORD *)(v25 + 12) = 2082;
        OUTLINED_FUNCTION_7();
        OUTLINED_FUNCTION_0(v29, v30);
        OUTLINED_FUNCTION_14();
        v31 = OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_6(v31);
        OUTLINED_FUNCTION_4();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_25();
        OUTLINED_FUNCTION_15(&dword_249741000, v32, v33, "Merge: fast-forward, ours=%{public}s, theirs=%{public}s");
        OUTLINED_FUNCTION_21();
        OUTLINED_FUNCTION_3();
      }

      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_2();
      v47 = a1[3];
      v48 = a1[4];
      v49 = v2[3];
      v50 = v2[4];
      v2[3] = v47;
      v2[4] = v48;
      sub_249748BCC(v47, v48);
      sub_249748C10(v49, v50);
      return sub_24974591C((uint64_t)a1);
    }
    else
    {
      if (qword_25787F680 != -1)
        swift_once();
      v35 = OUTLINED_FUNCTION_45();
      __swift_project_value_buffer(v35, (uint64_t)qword_25787F688);
      OUTLINED_FUNCTION_8();
      OUTLINED_FUNCTION_13();
      v36 = sub_249836AFC();
      v37 = sub_249836FB8();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = OUTLINED_FUNCTION_12();
        v60[0] = OUTLINED_FUNCTION_12();
        *(_DWORD *)v38 = 136446466;
        OUTLINED_FUNCTION_7();
        OUTLINED_FUNCTION_0(v39, v40);
        v41 = OUTLINED_FUNCTION_14();
        v43 = v42;
        OUTLINED_FUNCTION_1();
        sub_24976A748(v41, v43, v60);
        OUTLINED_FUNCTION_39();
        sub_2498370CC();
        OUTLINED_FUNCTION_2();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 2082;
        OUTLINED_FUNCTION_7();
        OUTLINED_FUNCTION_0(v44, v45);
        OUTLINED_FUNCTION_14();
        v46 = OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_6(v46);
        OUTLINED_FUNCTION_39();
        sub_2498370CC();
        OUTLINED_FUNCTION_2();
        OUTLINED_FUNCTION_25();
        _os_log_impl(&dword_249741000, v36, v37, "Merge: full-merge, ours=%{public}s, theirs=%{public}s", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_3();
      }

      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_16();
      v51 = v2[5];
      if (*(_QWORD *)(v51 + 16))
      {
        OUTLINED_FUNCTION_29();
        OUTLINED_FUNCTION_29();
        OUTLINED_FUNCTION_24();
        v52 = sub_2497F22B8();
        if ((v53 & 1) != 0)
        {
          v54 = *(_QWORD **)(*(_QWORD *)(v51 + 56) + 8 * v52);
          swift_retain();
        }
        else
        {
          v54 = 0;
        }
        OUTLINED_FUNCTION_28();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_28();
      }
      else
      {
        v54 = 0;
      }
      OUTLINED_FUNCTION_16();
      v55 = a1[5];
      if (*(_QWORD *)(v55 + 16))
      {
        OUTLINED_FUNCTION_32();
        OUTLINED_FUNCTION_32();
        OUTLINED_FUNCTION_24();
        v56 = sub_2497F22B8();
        if ((v57 & 1) != 0)
        {
          v58 = *(_QWORD *)(*(_QWORD *)(v55 + 56) + 8 * v56);
          swift_retain();
        }
        else
        {
          v58 = 0;
        }
        OUTLINED_FUNCTION_31();
        OUTLINED_FUNCTION_1();
        OUTLINED_FUNCTION_31();
      }
      else
      {
        v58 = 0;
      }
      type metadata accessor for UVC1Object();
      v59 = (_QWORD *)sub_249746648(v54, v58);
      sub_249742D2C(v59);
      sub_24974591C((uint64_t)a1);
      swift_release();
      swift_release();
      return swift_release();
    }
  }
}

uint64_t sub_249746648(_QWORD *a1, unint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t *i;
  unint64_t v6;
  unint64_t *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  unsigned int v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  int v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  int v53;
  unint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v72;
  _QWORD *v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int16 v81;
  __int16 v82;
  unint64_t v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  uint64_t v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  uint64_t v153;
  char v154;
  char v155;
  char v156;
  unsigned int v157;
  char v158;
  char v159;
  unsigned int v160;
  char v161;
  unsigned int v162;
  char v163;
  unsigned int v164;
  char v165;
  char v166;
  char v167;
  char v168;
  char v169;
  char v170;
  char v171;
  char v172;
  char v173;
  char v174;
  char v175;
  char v176;
  char v177;
  char v178;
  char v179;
  char v180;
  char v181;
  char v182;
  char v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  char v190;
  char v191;
  char v192;
  char v193;
  char v194;
  unsigned int v195;
  char v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  char v202;
  char v203;
  char v204;
  char v205;
  char v206;
  char v207;
  char v208;
  char v209;
  char v210;
  char v211;
  char v212;
  char __s2;
  char v214;
  char v215;
  char v216;
  char v217;
  char v218;
  char v219;
  char v220;
  char v221;
  char v222;
  char v223;
  char v224;
  char v225;
  char v226;
  char v227;
  char v228;
  char __s1;
  char v230;
  char v231;
  char v232;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  char v238;
  char v239;
  char v240;
  char v241;
  char v242;
  char v243;
  char v244;
  uint64_t v245;

  v3 = (unint64_t)a1;
  v245 = *MEMORY[0x24BDAC8D0];
  v4 = (unint64_t)&unk_25787F000;
  if (!a1)
  {
    if (qword_25787F6A0 != -1)
      goto LABEL_59;
    goto LABEL_4;
  }
  for (i = a1 + 6; ; i = &qword_2578907F0)
  {
    v6 = *i;
    if (a2)
    {
      v7 = (unint64_t *)(a2 + 48);
    }
    else
    {
      if (*(_QWORD *)(v4 + 1696) != -1)
        swift_once();
      v7 = (unint64_t *)&qword_2578907F0;
    }
    if ((double)*v7 / 1000.0 >= (double)v6 / 1000.0)
    {
      if (v3)
      {
        v9 = (_QWORD *)v3;
      }
      else
      {
        v4 = v74;
        v9 = sub_24977BC68();
      }
      v12 = v9;
      swift_retain();
      if (a2)
      {
        v13 = (_QWORD *)a2;
      }
      else
      {
        v4 = v74;
        v13 = sub_24977BC68();
      }
      v11 = v12;
    }
    else
    {
      if (v3)
      {
        v8 = (_QWORD *)v3;
      }
      else
      {
        v4 = v74;
        v8 = sub_24977BC68();
      }
      v10 = v8;
      swift_retain();
      if (a2)
      {
        v11 = (_QWORD *)a2;
      }
      else
      {
        v4 = v74;
        v11 = sub_24977BC68();
      }
      v13 = v10;
    }
    v72 = v13;
    v73 = v11;
    v14 = v13[4];
    v15 = v11[4];
    v77 = *(_QWORD *)(v15 + 16);
    if (!v77)
      break;
    v79 = *(_QWORD *)(v14 + 16);
    v76 = v15 + 32;
    v78 = v11[4];
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_bridgeObjectRetain();
    v16 = v78;
    v17 = 0;
    v75 = (char *)(v14 + 48);
    v84 = v14;
    while (v17 < *(_QWORD *)(v16 + 16))
    {
      v83 = v17;
      v18 = (char *)(v76 + 80 * v17);
      v19 = *v18;
      v3 = v18[1];
      v4 = v18[2];
      v165 = v18[3];
      v164 = v18[4];
      v163 = v18[5];
      v162 = v18[6];
      v20 = v18[7];
      v21 = v18[8];
      v196 = v18[9];
      v197 = v18[10];
      v22 = v18[11];
      v167 = v18[12];
      v166 = v18[13];
      v23 = v18[14];
      a2 = v18[15];
      v103 = v18[16];
      v104 = v18[17];
      v105 = v18[18];
      v106 = v18[19];
      v107 = v18[20];
      v108 = v18[21];
      v109 = v18[22];
      v110 = v18[23];
      v111 = v18[24];
      v112 = v18[25];
      v113 = v18[26];
      v114 = v18[27];
      v115 = v18[28];
      v116 = v18[29];
      v117 = v18[30];
      v118 = v18[31];
      v184 = v18[33];
      v185 = v18[32];
      v182 = v18[35];
      v183 = v18[34];
      v181 = v18[36];
      v180 = v18[37];
      v179 = v18[38];
      v178 = v18[39];
      v177 = v18[40];
      v176 = v18[41];
      v175 = v18[42];
      v174 = v18[43];
      v173 = v18[44];
      v172 = v18[45];
      v171 = v18[46];
      v170 = v18[47];
      v87 = v18[48];
      v88 = v18[49];
      v89 = v18[50];
      v90 = v18[51];
      v91 = v18[52];
      v92 = v18[53];
      v93 = v18[54];
      v94 = v18[55];
      v95 = v18[56];
      v96 = v18[57];
      v97 = v18[58];
      v98 = v18[59];
      v99 = v18[60];
      v100 = v18[61];
      v101 = v18[62];
      v102 = v18[63];
      v86 = v18[64];
      v81 = *((_WORD *)v18 + 34);
      v82 = *((_WORD *)v18 + 33);
      v80 = *((_QWORD *)v18 + 9);
      if (v79)
      {
        v195 = v18[1];
        swift_bridgeObjectRetain();
        v24 = v75;
        v25 = v79;
        v169 = v19;
        v160 = v4;
        v119 = v20;
        v161 = v21;
        v159 = v23;
        v158 = v22;
        v85 = a2;
        while (1)
        {
          v153 = v25;
          v26 = v20;
          v27 = *(v24 - 16);
          v28 = v4;
          v29 = *(v24 - 15);
          v30 = *(v24 - 14);
          v31 = *(v24 - 13);
          v32 = *(v24 - 12);
          v33 = *(v24 - 11);
          v34 = *(v24 - 10);
          v35 = *(v24 - 9);
          v36 = v23;
          v4 = *(v24 - 8);
          v37 = *(v24 - 7);
          v38 = *(v24 - 6);
          v39 = *(v24 - 5);
          v40 = *(v24 - 4);
          v41 = *(v24 - 3);
          v42 = *(v24 - 2);
          v43 = *(v24 - 1);
          v137 = *v24;
          v138 = v24[1];
          v139 = v24[2];
          v140 = v24[3];
          v141 = v24[4];
          v142 = v24[5];
          v143 = v24[6];
          v144 = v24[7];
          v145 = v24[8];
          v146 = v24[9];
          v147 = v24[10];
          v148 = v24[11];
          v149 = v24[12];
          v150 = v24[13];
          v151 = v24[14];
          v152 = v24[15];
          v168 = v24[16];
          v211 = v24[18];
          v212 = v24[17];
          v209 = v24[20];
          v210 = v24[19];
          v207 = v24[22];
          v208 = v24[21];
          v205 = v24[24];
          v206 = v24[23];
          v203 = v24[26];
          v204 = v24[25];
          v201 = v24[28];
          v202 = v24[27];
          v199 = v24[30];
          v200 = v24[29];
          v198 = v24[31];
          v121 = v24[32];
          v122 = v24[33];
          v123 = v24[34];
          v124 = v24[35];
          v125 = v24[36];
          v126 = v24[37];
          v127 = v24[38];
          v128 = v24[39];
          v129 = v24[40];
          v130 = v24[41];
          v131 = v24[42];
          v132 = v24[43];
          v133 = v24[44];
          v134 = v24[45];
          v135 = v24[46];
          v136 = v24[47];
          v120 = v24[48];
          __s1 = v19;
          v230 = v195;
          v231 = v28;
          v232 = v165;
          v44 = a2;
          a2 = v164;
          v233 = v164;
          v45 = v26;
          v3 = v162;
          v234 = v163;
          v235 = v162;
          v236 = v26;
          v237 = v21;
          v46 = (_QWORD *)v44;
          v238 = v196;
          v239 = v197;
          v240 = v22;
          v241 = v167;
          v242 = v166;
          v243 = v36;
          v244 = v44;
          __s2 = v27;
          v214 = v29;
          v191 = v30;
          v215 = v30;
          v156 = v31;
          v216 = v31;
          v155 = v32;
          v217 = v32;
          v193 = v34;
          v194 = v33;
          v218 = v33;
          v219 = v34;
          v192 = v35;
          v220 = v35;
          v221 = v4;
          v157 = v37;
          v222 = v37;
          v190 = v39;
          v223 = v38;
          v224 = v39;
          v188 = v41;
          v189 = v40;
          v225 = v40;
          v226 = v41;
          v186 = v43;
          v187 = v42;
          v227 = v42;
          v228 = v43;
          if (!memcmp(&__s1, &__s2, 0x10uLL))
          {
            __s1 = v185;
            v230 = v184;
            v231 = v183;
            v232 = v182;
            v233 = v181;
            v234 = v180;
            v235 = v179;
            v236 = v178;
            v237 = v177;
            v238 = v176;
            v239 = v175;
            v240 = v174;
            v241 = v173;
            v242 = v172;
            v243 = v171;
            v244 = v170;
            __s2 = v168;
            v214 = v212;
            v215 = v211;
            v216 = v210;
            v217 = v209;
            v218 = v208;
            v219 = v207;
            v220 = v206;
            v221 = v205;
            v222 = v204;
            v223 = v203;
            v224 = v202;
            v225 = v201;
            v226 = v200;
            v227 = v199;
            v228 = v198;
            if (!memcmp(&__s1, &__s2, 0x10uLL))
              break;
          }
          __s1 = v27;
          v230 = v29;
          v231 = v191;
          v232 = v156;
          v233 = v155;
          v234 = v194;
          v235 = v193;
          v236 = v192;
          v154 = v4;
          v237 = v4;
          v4 = v157;
          v238 = v157;
          v239 = v38;
          v240 = v190;
          v241 = v189;
          v242 = v188;
          v243 = v187;
          v244 = v186;
          __s2 = v169;
          v214 = v195;
          v215 = v160;
          v216 = v165;
          v217 = v164;
          v218 = v163;
          v219 = v162;
          v220 = v45;
          v221 = v161;
          v222 = v196;
          v223 = v197;
          v224 = v158;
          v225 = v167;
          v226 = v166;
          v227 = v159;
          a2 = (unint64_t)v46;
          v228 = (char)v46;
          if (!memcmp(&__s1, &__s2, 0x10uLL))
          {
            __s1 = v137;
            v230 = v138;
            v231 = v139;
            v232 = v140;
            v233 = v141;
            v234 = v142;
            v235 = v143;
            v236 = v144;
            v237 = v145;
            v238 = v146;
            v239 = v147;
            v240 = v148;
            v241 = v149;
            v242 = v150;
            v243 = v151;
            v244 = v152;
            __s2 = v103;
            v214 = v104;
            v215 = v105;
            v216 = v106;
            v217 = v107;
            v218 = v108;
            v219 = v109;
            v220 = v110;
            v221 = v111;
            v222 = v112;
            v223 = v113;
            v224 = v114;
            v225 = v115;
            v226 = v116;
            v227 = v117;
            v228 = v118;
            if (!memcmp(&__s1, &__s2, 0x10uLL) && (_DWORD)v120 == (_DWORD)v86)
              goto LABEL_53;
          }
          __s1 = v27;
          v230 = v29;
          v231 = v191;
          v232 = v156;
          v233 = v155;
          v234 = v194;
          v235 = v193;
          v236 = v192;
          v237 = v154;
          v238 = v157;
          v239 = v38;
          v240 = v190;
          v241 = v189;
          v242 = v188;
          v243 = v187;
          v244 = v186;
          __s2 = v185;
          v214 = v184;
          v215 = v183;
          v216 = v182;
          v217 = v181;
          v218 = v180;
          v219 = v179;
          v220 = v178;
          v221 = v177;
          v222 = v176;
          v223 = v175;
          v224 = v174;
          v225 = v173;
          v226 = v172;
          v227 = v171;
          v228 = v170;
          v47 = memcmp(&__s1, &__s2, 0x10uLL);
          v19 = v169;
          v48 = v165;
          v49 = v164;
          v50 = v163;
          v51 = v162;
          v20 = v119;
          v21 = v161;
          v52 = v167;
          if (!v47)
          {
            __s1 = v137;
            v230 = v138;
            v231 = v139;
            v232 = v140;
            v233 = v141;
            v234 = v142;
            v235 = v143;
            v236 = v144;
            v237 = v145;
            v238 = v146;
            v239 = v147;
            v240 = v148;
            v241 = v149;
            v242 = v150;
            v243 = v151;
            v244 = v152;
            __s2 = v87;
            v214 = v88;
            v215 = v89;
            v216 = v90;
            v217 = v91;
            v218 = v92;
            v219 = v93;
            v220 = v94;
            v221 = v95;
            v222 = v96;
            v223 = v97;
            v224 = v98;
            v225 = v99;
            v226 = v100;
            v227 = v101;
            v228 = v102;
            v53 = memcmp(&__s1, &__s2, 0x10uLL);
            v52 = v167;
            v50 = v163;
            v51 = v162;
            v20 = v119;
            v21 = v161;
            v49 = v164;
            a2 = v85;
            v19 = v169;
            v48 = v165;
            if (!v53)
              __asm { BR              X8 }
          }
          __s1 = v168;
          v230 = v212;
          v231 = v211;
          v232 = v210;
          v233 = v209;
          v234 = v208;
          v235 = v207;
          v236 = v206;
          v237 = v205;
          v238 = v204;
          v239 = v203;
          v240 = v202;
          v241 = v201;
          v242 = v200;
          v243 = v199;
          v244 = v198;
          __s2 = v19;
          v214 = v195;
          v4 = v160;
          v215 = v160;
          v216 = v48;
          v217 = v49;
          v218 = v50;
          v219 = v51;
          v220 = v20;
          v221 = v21;
          v222 = v196;
          v223 = v197;
          v22 = v158;
          v224 = v158;
          v225 = v52;
          v226 = v166;
          v23 = v159;
          v227 = v159;
          v228 = a2;
          if (!memcmp(&__s1, &__s2, 0x10uLL))
          {
            __s1 = v121;
            v230 = v122;
            v231 = v123;
            v232 = v124;
            v233 = v125;
            v234 = v126;
            v235 = v127;
            v236 = v128;
            v237 = v129;
            v238 = v130;
            v239 = v131;
            v240 = v132;
            v241 = v133;
            v242 = v134;
            v243 = v135;
            v244 = v136;
            __s2 = v103;
            v214 = v104;
            v215 = v105;
            v216 = v106;
            v217 = v107;
            v218 = v108;
            v219 = v109;
            v220 = v110;
            v221 = v111;
            v222 = v112;
            v223 = v113;
            v224 = v114;
            v225 = v115;
            v226 = v116;
            v227 = v117;
            v228 = v118;
            if (!memcmp(&__s1, &__s2, 0x10uLL))
              __asm { BR              X8 }
          }
          __s1 = v168;
          v230 = v212;
          v231 = v211;
          v232 = v210;
          v233 = v209;
          v234 = v208;
          v235 = v207;
          v236 = v206;
          v237 = v205;
          v238 = v204;
          v239 = v203;
          v240 = v202;
          v241 = v201;
          v242 = v200;
          v243 = v199;
          v244 = v198;
          __s2 = v185;
          v214 = v184;
          v215 = v183;
          v216 = v182;
          v217 = v181;
          v218 = v180;
          v219 = v179;
          v220 = v178;
          v221 = v177;
          v222 = v176;
          v223 = v175;
          v224 = v174;
          v225 = v173;
          v226 = v172;
          v227 = v171;
          v228 = v170;
          if (!memcmp(&__s1, &__s2, 0x10uLL))
          {
            __s1 = v121;
            v230 = v122;
            v231 = v123;
            v232 = v124;
            v233 = v125;
            v234 = v126;
            v235 = v127;
            v236 = v128;
            v237 = v129;
            v238 = v130;
            v239 = v131;
            v240 = v132;
            v241 = v133;
            v242 = v134;
            v243 = v135;
            v244 = v136;
            __s2 = v87;
            v214 = v88;
            v215 = v89;
            v216 = v90;
            v217 = v91;
            v218 = v92;
            v219 = v93;
            v220 = v94;
            v221 = v95;
            v222 = v96;
            v223 = v97;
            v224 = v98;
            v225 = v99;
            v226 = v100;
            v227 = v101;
            v228 = v102;
            if (!memcmp(&__s1, &__s2, 0x10uLL))
              __asm { BR              X8 }
          }
          v24 += 80;
          v25 = v153 - 1;
          if (v153 == 1)
          {
            swift_bridgeObjectRelease();
            v3 = v195;
            goto LABEL_46;
          }
        }
        __s1 = v103;
        v230 = v104;
        v231 = v105;
        v232 = v106;
        v233 = v107;
        v234 = v108;
        v235 = v109;
        v236 = v110;
        v237 = v111;
        v238 = v112;
        v239 = v113;
        v240 = v114;
        v241 = v115;
        v242 = v116;
        v243 = v117;
        v244 = v118;
        __s2 = v137;
        v214 = v138;
        v215 = v139;
        v216 = v140;
        v217 = v141;
        v218 = v142;
        v219 = v143;
        v220 = v144;
        v221 = v145;
        v222 = v146;
        v223 = v147;
        v224 = v148;
        v225 = v149;
        v226 = v150;
        v227 = v151;
        v228 = v152;
        if (!memcmp(&__s1, &__s2, 0x10uLL))
        {
          __s1 = v87;
          v230 = v88;
          v231 = v89;
          v232 = v90;
          v233 = v91;
          v234 = v92;
          v235 = v93;
          v236 = v94;
          v237 = v95;
          v238 = v96;
          v239 = v97;
          v240 = v98;
          v241 = v99;
          v242 = v100;
          v243 = v101;
          v244 = v102;
          __s2 = v121;
          v214 = v122;
          v215 = v123;
          v216 = v124;
          v217 = v125;
          v218 = v126;
          v219 = v127;
          v220 = v128;
          v221 = v129;
          v222 = v130;
          v223 = v131;
          v224 = v132;
          v225 = v133;
          v226 = v134;
          v227 = v135;
          v228 = v136;
          memcmp(&__s1, &__s2, 0x10uLL);
        }
LABEL_53:
        swift_bridgeObjectRelease();
        v54 = v83;
      }
      else
      {
LABEL_46:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249752C44();
          v84 = v62;
        }
        v54 = v83;
        v55 = *(_QWORD *)(v84 + 16);
        v56 = v165;
        v57 = v164;
        v58 = v163;
        v59 = v197;
        v60 = v167;
        if (v55 >= *(_QWORD *)(v84 + 24) >> 1)
        {
          sub_249752C44();
          v60 = v167;
          v59 = v197;
          v58 = v163;
          v57 = v164;
          v56 = v165;
          v54 = v83;
          v84 = v63;
        }
        *(_QWORD *)(v84 + 16) = v55 + 1;
        v61 = v84 + 80 * v55;
        *(_BYTE *)(v61 + 32) = v19;
        *(_BYTE *)(v61 + 33) = v3;
        *(_BYTE *)(v61 + 34) = v4;
        *(_BYTE *)(v61 + 35) = v56;
        *(_BYTE *)(v61 + 36) = v57;
        *(_BYTE *)(v61 + 37) = v58;
        *(_BYTE *)(v61 + 38) = v162;
        *(_BYTE *)(v61 + 39) = v20;
        *(_BYTE *)(v61 + 40) = v21;
        *(_BYTE *)(v61 + 41) = v196;
        *(_BYTE *)(v61 + 42) = v59;
        *(_BYTE *)(v61 + 43) = v22;
        *(_BYTE *)(v61 + 44) = v60;
        *(_BYTE *)(v61 + 45) = v166;
        *(_BYTE *)(v61 + 46) = v23;
        *(_BYTE *)(v61 + 47) = a2;
        *(_BYTE *)(v61 + 48) = v103;
        *(_BYTE *)(v61 + 49) = v104;
        *(_BYTE *)(v61 + 50) = v105;
        *(_BYTE *)(v61 + 51) = v106;
        *(_BYTE *)(v61 + 52) = v107;
        *(_BYTE *)(v61 + 53) = v108;
        *(_BYTE *)(v61 + 54) = v109;
        *(_BYTE *)(v61 + 55) = v110;
        *(_BYTE *)(v61 + 56) = v111;
        *(_BYTE *)(v61 + 57) = v112;
        *(_BYTE *)(v61 + 58) = v113;
        *(_BYTE *)(v61 + 59) = v114;
        *(_BYTE *)(v61 + 60) = v115;
        *(_BYTE *)(v61 + 61) = v116;
        *(_BYTE *)(v61 + 62) = v117;
        *(_BYTE *)(v61 + 63) = v118;
        *(_BYTE *)(v61 + 64) = v185;
        *(_BYTE *)(v61 + 65) = v184;
        *(_BYTE *)(v61 + 66) = v183;
        *(_BYTE *)(v61 + 67) = v182;
        *(_BYTE *)(v61 + 68) = v181;
        *(_BYTE *)(v61 + 69) = v180;
        *(_BYTE *)(v61 + 70) = v179;
        *(_BYTE *)(v61 + 71) = v178;
        *(_BYTE *)(v61 + 72) = v177;
        *(_BYTE *)(v61 + 73) = v176;
        *(_BYTE *)(v61 + 74) = v175;
        *(_BYTE *)(v61 + 75) = v174;
        *(_BYTE *)(v61 + 76) = v173;
        *(_BYTE *)(v61 + 77) = v172;
        *(_BYTE *)(v61 + 78) = v171;
        *(_BYTE *)(v61 + 79) = v170;
        *(_BYTE *)(v61 + 80) = v87;
        *(_BYTE *)(v61 + 81) = v88;
        *(_BYTE *)(v61 + 82) = v89;
        *(_BYTE *)(v61 + 83) = v90;
        *(_BYTE *)(v61 + 84) = v91;
        *(_BYTE *)(v61 + 85) = v92;
        *(_BYTE *)(v61 + 86) = v93;
        *(_BYTE *)(v61 + 87) = v94;
        *(_BYTE *)(v61 + 88) = v95;
        *(_BYTE *)(v61 + 89) = v96;
        *(_BYTE *)(v61 + 90) = v97;
        *(_BYTE *)(v61 + 91) = v98;
        *(_BYTE *)(v61 + 92) = v99;
        *(_BYTE *)(v61 + 93) = v100;
        *(_BYTE *)(v61 + 94) = v101;
        *(_BYTE *)(v61 + 95) = v102;
        *(_BYTE *)(v61 + 96) = v86;
        *(_WORD *)(v61 + 98) = v82;
        *(_WORD *)(v61 + 100) = v81;
        *(_QWORD *)(v61 + 104) = v80;
      }
      v17 = v54 + 1;
      v16 = v78;
      if (v17 == v77)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = v84;
        goto LABEL_57;
      }
    }
    __break(1u);
LABEL_59:
    swift_once();
LABEL_4:
    ;
  }
  swift_retain();
  swift_bridgeObjectRetain();
LABEL_57:
  sub_2497EA4B8(0, v14);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787F828);
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_249838520;
  v65 = v72[2];
  v66 = v72[3];
  *(_QWORD *)(v64 + 32) = v65;
  *(_QWORD *)(v64 + 40) = v66;
  v67 = v73[2];
  v68 = v73[3];
  *(_QWORD *)(v64 + 48) = v67;
  *(_QWORD *)(v64 + 56) = v68;
  swift_allocObject();
  sub_249748BCC(v65, v66);
  sub_249748BCC(v67, v68);
  sub_2497EC94C();
  v70 = v69;
  swift_release();
  swift_release();
  return v70;
}

void sub_249747DEC()
{
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_9();
  sub_2498376A8();
  OUTLINED_FUNCTION_40();
}

BOOL sub_249747E74(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_19(a1);
  return !static UniversalControlUUID.compare(lhs:rhs:)(v2, v3, *v1, v1[1])
      && !OUTLINED_FUNCTION_17()
      && OUTLINED_FUNCTION_43();
}

uint64_t sub_249747EC4()
{
  sub_249837690();
  sub_24983769C();
  sub_24983769C();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t sub_249747F7C()
{
  return sub_249747EC4();
}

void sub_249747FB4()
{
  OUTLINED_FUNCTION_26();
  sub_249747DEC();
  OUTLINED_FUNCTION_38();
}

uint64_t sub_249747FD8()
{
  sub_249837690();
  UniversalControlUUID.hash(into:)();
  UniversalControlUUID.hash(into:)();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t sub_249748050()
{
  OUTLINED_FUNCTION_37();
  OUTLINED_FUNCTION_37();
  sub_2498376A8();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_30();
  return sub_2498376A8();
}

BOOL sub_249748118(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  v3 = OUTLINED_FUNCTION_19(a1);
  v4 = *(unsigned __int8 *)(v2 + 32);
  v5 = *(unsigned __int8 *)(v1 + 32);
  if (static UniversalControlUUID.compare(lhs:rhs:)(v3, v6, *(_QWORD *)v1, *(_QWORD *)(v1 + 8)))
    return 0;
  if (OUTLINED_FUNCTION_17() || v4 != v5)
    return 0;
  v8 = *(_QWORD *)(v2 + 33);
  v9 = *(_QWORD *)(v2 + 41);
  v10 = *(_QWORD *)(v2 + 49);
  v11 = *(_QWORD *)(v2 + 57);
  v12 = *(unsigned __int8 *)(v2 + 65);
  v13 = *(_QWORD *)(v1 + 33);
  v14 = *(_QWORD *)(v1 + 41);
  v15 = *(_QWORD *)(v1 + 49);
  v16 = *(_QWORD *)(v1 + 57);
  v17 = *(unsigned __int8 *)(v1 + 65);
  return !static UniversalControlUUID.compare(lhs:rhs:)(v8, v9, v13, v14)
      && !static UniversalControlUUID.compare(lhs:rhs:)(v10, v11, v15, v16)
      && v12 == v17;
}

uint64_t sub_2497481D0()
{
  sub_249837690();
  sub_24983769C();
  sub_24983769C();
  sub_2498376A8();
  sub_24983769C();
  sub_24983769C();
  sub_2498376A8();
  return sub_2498376E4();
}

BOOL sub_2497482E0(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  char v6;
  __int128 v7;
  __int128 v8;
  char v9;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v3 = a2[1];
  v7 = *a2;
  v8 = v3;
  v9 = *((_BYTE *)a2 + 32);
  return sub_249747E74((uint64_t)v5);
}

uint64_t sub_249748328()
{
  const void *v0;
  _BYTE __dst[66];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_2497481D0();
}

void sub_249748360()
{
  const void *v0;
  _BYTE v1[66];

  OUTLINED_FUNCTION_41(v1, v0);
  sub_249748050();
  OUTLINED_FUNCTION_40();
}

uint64_t sub_249748398()
{
  sub_249837690();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_34();
  UniversalControlUUID.hash(into:)();
  UniversalControlUUID.hash(into:)();
  sub_2498376A8();
  return OUTLINED_FUNCTION_33();
}

BOOL sub_249748440(const void *a1, const void *a2)
{
  _BYTE v4[66];
  _BYTE v5[66];

  OUTLINED_FUNCTION_41(v4, a1);
  OUTLINED_FUNCTION_41(v5, a2);
  return sub_249748118((uint64_t)v4);
}

void sub_24974848C()
{
  OUTLINED_FUNCTION_9();
  OUTLINED_FUNCTION_9();
  sub_2498376A8();
  OUTLINED_FUNCTION_38();
}

BOOL sub_24974850C(uint64_t *a1, uint64_t *a2)
{
  return !static UniversalControlUUID.compare(lhs:rhs:)(*a1, a1[1], *a2, a2[1])
      && !static UniversalControlUUID.compare(lhs:rhs:)(a1[2], a1[3], a2[2], a2[3])
      && OUTLINED_FUNCTION_43();
}

uint64_t sub_24974855C()
{
  sub_249837690();
  sub_24983769C();
  sub_24983769C();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t sub_24974860C()
{
  return sub_24974855C();
}

void sub_249748644()
{
  OUTLINED_FUNCTION_26();
  sub_24974848C();
  OUTLINED_FUNCTION_38();
}

uint64_t sub_249748668()
{
  sub_249837690();
  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_34();
  return OUTLINED_FUNCTION_33();
}

BOOL sub_2497486BC(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  char v6;
  _OWORD v7[2];
  char v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_BYTE *)(a2 + 32);
  return sub_24974850C((uint64_t *)v5, (uint64_t *)v7);
}

void sub_249748704()
{
  uint64_t *v0;

  sub_249748874(*v0, (void (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_249748724(uint64_t a1, id *a2)
{
  return sub_249748738(a1, a2);
}

uint64_t sub_249748738(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t result;

  OUTLINED_FUNCTION_18(a1, a2);
  result = sub_249836D24();
  *v2 = 0;
  return result;
}

uint64_t sub_24974879C(uint64_t a1, id *a2)
{
  return sub_2497487B4(a1, a2) & 1;
}

uint64_t sub_2497487B4(uint64_t a1, id *a2)
{
  _QWORD *v2;
  char v3;

  OUTLINED_FUNCTION_18(a1, a2);
  v3 = sub_249836D30();
  *v2 = 0;
  return v3 & 1;
}

void sub_249748820(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_249748844();
  *a1 = v2;
}

void sub_249748844()
{
  _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  sub_249836D18();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27();
}

void sub_249748874(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  a2(v3);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497488A4()
{
  OUTLINED_FUNCTION_35();
  sub_249836D84();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2497488DC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_35();
  sub_249837690();
  sub_249836D84();
  v0 = OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_42();
  return v0;
}

uint64_t sub_24974893C(_QWORD *a1, _QWORD *a2)
{
  return sub_2497A05C8(*a1, *a2);
}

void sub_24974894C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = j___sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  a1[1] = v2;
  OUTLINED_FUNCTION_27();
}

uint64_t sub_249748970()
{
  sub_249748A4C(&qword_25787F808, (uint64_t (*)(uint64_t))type metadata accessor for UniversalControlClientAssertion, (uint64_t)&unk_2498386DC);
  sub_249748A4C(&qword_25787F810, (uint64_t (*)(uint64_t))type metadata accessor for UniversalControlClientAssertion, (uint64_t)&unk_24983867C);
  return sub_249837378();
}

void sub_2497489F4()
{
  sub_249748A4C(&qword_25787F7F0, (uint64_t (*)(uint64_t))type metadata accessor for UniversalControlClientAssertion, (uint64_t)&unk_249838640);
}

void sub_249748A20()
{
  sub_249748A4C(&qword_25787F7F8, (uint64_t (*)(uint64_t))type metadata accessor for UniversalControlClientAssertion, (uint64_t)&unk_249838614);
}

void sub_249748A4C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x24BCF8F94](a3, v5), a1);
  }
  OUTLINED_FUNCTION_27();
}

uint64_t sub_249748A88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_249836D18();
  result = OUTLINED_FUNCTION_1();
  *a1 = v2;
  return result;
}

uint64_t sub_249748ACC()
{
  sub_249748A4C((unint64_t *)&qword_25787F868, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2498389A0);
  sub_249748A4C(&qword_25787F870, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_249838824);
  return sub_249837378();
}

void sub_249748B50()
{
  uint64_t *v0;

  sub_249748874(*v0, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_249748B70()
{
  return sub_2497488A4();
}

uint64_t sub_249748B88()
{
  return sub_2497488DC();
}

void sub_249748BA0()
{
  sub_249748A4C(&qword_25787F800, (uint64_t (*)(uint64_t))type metadata accessor for UniversalControlClientAssertion, (uint64_t)"ه'\b");
}

uint64_t sub_249748BCC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_249748C10(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_249748C6C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_249748BCC(a1, a2);
  return a1;
}

uint64_t sub_249748C80(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_249748C10(a1, a2);
  return a1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BCF8F7C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_249748CD4()
{
  unint64_t result;

  result = qword_25787F820;
  if (!qword_25787F820)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UVC1Digest, &type metadata for UVC1Digest);
    atomic_store(result, (unint64_t *)&qword_25787F820);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void *__swift_memcpy66_1(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x42uLL);
}

uint64_t getEnumTagSinglePayload for LinkAnchors(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 66))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      v4 = v3 >= 4;
      v2 = v3 - 4;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LinkAnchors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 66) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 66) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkAnchors()
{
  return &type metadata for LinkAnchors;
}

__n128 __swift_memcpy33_1(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for LinkDevices()
{
  return &type metadata for LinkDevices;
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_249748E98(a1, &qword_25787F830);
}

uint64_t getEnumTagSinglePayload for UniversalControlUUID(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UniversalControlUUID(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_249748E98(a1, &qword_25787F838);
}

void sub_249748E98(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void sub_249748EDC()
{
  sub_249748A4C(&qword_25787F840, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2498387E8);
}

void sub_249748F08()
{
  sub_249748A4C(&qword_25787F848, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_2498387BC);
}

unint64_t sub_249748F38()
{
  unint64_t result;

  result = qword_25787F850;
  if (!qword_25787F850)
  {
    result = MEMORY[0x24BCF8F94](&unk_2498388F8, &type metadata for LinkAnchors);
    atomic_store(result, (unint64_t *)&qword_25787F850);
  }
  return result;
}

unint64_t sub_249748F78()
{
  unint64_t result;

  result = qword_25787F858;
  if (!qword_25787F858)
  {
    result = MEMORY[0x24BCF8F94](&unk_2498388D0, &type metadata for LinkDevices);
    atomic_store(result, (unint64_t *)&qword_25787F858);
  }
  return result;
}

void sub_249748FB4()
{
  sub_249748A4C(&qword_25787F860, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_249838858);
}

uint64_t initializeBufferWithCopyOfBuffer for UniversalControlDisplayID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s16UniversalControl10LinkAnchorVwet_0(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      v4 = v3 >= 4;
      v2 = v3 - 4;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s16UniversalControl10LinkAnchorVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkAnchor()
{
  return &type metadata for LinkAnchor;
}

unint64_t sub_2497490A8()
{
  unint64_t result;

  result = qword_25787F878;
  if (!qword_25787F878)
  {
    result = MEMORY[0x24BCF8F94](&unk_2498389F0, &type metadata for LinkAnchor);
    atomic_store(result, (unint64_t *)&qword_25787F878);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0(uint64_t a1, uint64_t a2)
{
  return sub_2497713F8(8, a1, a2);
}

uint64_t OUTLINED_FUNCTION_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_2()
{
  return swift_release_n();
}

void OUTLINED_FUNCTION_3()
{
  JUMPOUT(0x24BCF906CLL);
}

uint64_t OUTLINED_FUNCTION_4()
{
  return sub_2498370CC();
}

uint64_t OUTLINED_FUNCTION_5()
{
  uint64_t v0;

  return memcmp((const void *)(v0 - 128), (const void *)(v0 - 144), 0x10uLL);
}

uint64_t OUTLINED_FUNCTION_6(uint64_t a1, ...)
{
  uint64_t v1;
  unint64_t v2;
  va_list va;

  va_start(va, a1);
  return sub_24976A748(v1, v2, (uint64_t *)va);
}

void OUTLINED_FUNCTION_7()
{
  sub_24980C6C8();
}

uint64_t OUTLINED_FUNCTION_8()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_9()
{
  return sub_24983769C();
}

uint64_t OUTLINED_FUNCTION_10()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t OUTLINED_FUNCTION_11()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748BCC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_12()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_13()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_14()
{
  return sub_2498370B4();
}

void OUTLINED_FUNCTION_15(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_16()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return static UniversalControlUUID.compare(lhs:rhs:)(v0, v1, v2, v3);
}

void OUTLINED_FUNCTION_18(uint64_t a1, id *a2)
{

}

uint64_t OUTLINED_FUNCTION_19(uint64_t a1)
{
  return *(_QWORD *)a1;
}

BOOL OUTLINED_FUNCTION_20(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_21()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_22()
{
  return UniversalControlUUID.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_23()
{
  return UniversalControlUUID.hash(into:)();
}

uint64_t OUTLINED_FUNCTION_24()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_25()
{
  return swift_bridgeObjectRelease();
}

__n128 OUTLINED_FUNCTION_26()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

uint64_t OUTLINED_FUNCTION_28()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t OUTLINED_FUNCTION_29()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748BCC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_30()
{
  return sub_24983769C();
}

uint64_t OUTLINED_FUNCTION_31()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t OUTLINED_FUNCTION_32()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748BCC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_33()
{
  return sub_2498376E4();
}

uint64_t OUTLINED_FUNCTION_34()
{
  return sub_2498376A8();
}

uint64_t OUTLINED_FUNCTION_35()
{
  return _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
}

void OUTLINED_FUNCTION_36()
{
  sub_249752C44();
}

uint64_t OUTLINED_FUNCTION_37()
{
  return sub_24983769C();
}

void *OUTLINED_FUNCTION_41(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x42uLL);
}

uint64_t OUTLINED_FUNCTION_42()
{
  return swift_bridgeObjectRelease();
}

BOOL OUTLINED_FUNCTION_43()
{
  uint64_t v0;
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + 32) == *(unsigned __int8 *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_45()
{
  return sub_249836B14();
}

void sub_249749358(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2497493A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  if (BYTE6(v1) == 16)
  {
    sub_2497494FC();
    sub_249836814();
    sub_2498369E8();
    OUTLINED_FUNCTION_0_0();
    v2 = sub_249836A18();
    return __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  }
  else
  {
    OUTLINED_FUNCTION_0_0();
    v4 = sub_249836A18();
    return __swift_storeEnumTagSinglePayload(v0, 1, 1, v4);
  }
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

unint64_t sub_2497494FC()
{
  unint64_t result;

  result = qword_25787F940;
  if (!qword_25787F940)
  {
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_25787F940);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_0()
{
  unint64_t v0;
  uint64_t v1;

  return sub_249748C10(v1, v0);
}

ValueMetadata *type metadata accessor for LineSegment()
{
  return &type metadata for LineSegment;
}

uint64_t sub_249749554(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v8;
  double v9;
  double v10;
  double v11;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  _BOOL4 v32;

  if (a5 > a7)
    v8 = a5;
  else
    v8 = a7;
  if (a3 >= a1)
    v9 = a1;
  else
    v9 = a3;
  if (v8 < v9)
    return 0;
  v10 = a7 >= a5 ? a5 : a7;
  v11 = a1 > a3 ? a1 : a3;
  if (v11 < v10)
    return 0;
  v13 = a7 - a5;
  v14 = (a8 - a6) / (a7 - a5);
  v15 = (a4 - a2) / (a3 - a1);
  v16 = a2 - v15 * a1;
  v17 = *(_QWORD *)&v15 & 0x7FF0000000000000;
  if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
  {
    if (v17 == 0x7FF0000000000000)
    {
      if (a6 > a8)
        v18 = a6;
      else
        v18 = a8;
      if (a4 >= a2)
        v19 = a2;
      else
        v19 = a4;
      if (v18 >= v19)
      {
        v20 = a8 >= a6 ? a6 : a8;
        if (a2 <= a4)
          a2 = a4;
        if (a2 >= v20)
          return 1;
      }
      return 0;
    }
    v22 = v15 * a5 + v16;
    if (a8 >= a6)
      v24 = a6;
    else
      v24 = a8;
    if (v24 > v22)
      return 0;
    if (a6 > a8)
      a2 = a6;
    else
      a2 = a8;
    return v22 <= a2;
  }
  v21 = a6 - v14 * a5;
  if (v17 == 0x7FF0000000000000)
  {
    v22 = v14 * a1 + v21;
    if (a4 >= a2)
      v23 = a2;
    else
      v23 = a4;
    if (v23 > v22)
      return 0;
    if (a2 <= a4)
      a2 = a4;
    return v22 <= a2;
  }
  if (vabdd_f64(v14, v15) < 0.00001)
    return vabdd_f64(v21, v16) < 0.00001;
  v25 = a2 - a4;
  v26 = a1 - a3;
  v27 = v25 * (a5 - a7) - v26 * (a6 - a8);
  v28 = a5 - a1;
  v29 = a6 - a2;
  v30 = (v25 * v28 - v26 * v29) / v27;
  v31 = (v29 * v13 - v28 * (a8 - a6)) / v27;
  v32 = v30 >= 0.0;
  if (v30 > 1.0)
    v32 = 0;
  if (v31 < 0.0)
    v32 = 0;
  return v31 <= 1.0 && v32;
}

BOOL sub_2497496F4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return vabdd_f64(a1, a5) < COERCE_DOUBLE(1)
      && vabdd_f64(a3, a7) < COERCE_DOUBLE(1)
      && vabdd_f64(a2, a6) < COERCE_DOUBLE(1)
      && vabdd_f64(a4, a8) < COERCE_DOUBLE(1);
}

BOOL sub_249749744(double *a1, double *a2)
{
  return sub_2497496F4(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_249749758(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char v43[32];
  _OWORD v44[2];
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_249836A18();
  v47 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v33 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v40 = (char *)&v33 - v10;
  v11 = sub_2498368A4();
  v12 = (void (*)(uint64_t))MEMORY[0x24BDCD520];
  v34 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  sub_24983703C();

  sub_24974BBF4(&qword_25787FDE8, v12);
  v17 = v16;
  sub_2498370C0();
  if (v46)
  {
    v18 = MEMORY[0x24BEE4AF8];
    v38 = v11;
    v39 = v4;
    v36 = v17;
    v37 = v14;
    v35 = MEMORY[0x24BEE4AD8] + 8;
    while (1)
    {
      sub_24974BBA8(&v45, v44);
      sub_24974BC28((uint64_t)v44, (uint64_t)v43);
      if (swift_dynamicCast())
      {
        sub_2498369AC();
        swift_bridgeObjectRelease();
        if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) != 1)
        {
          v19 = v47;
          v20 = v40;
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v40, v4, v5);
          v21 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
          v22 = v41;
          v21(v41, v20, v5);
          v23 = v42;
          v21(v42, v22, v5);
          v24 = sub_2498369F4();
          v26 = v25;
          v27 = *(void (**)(char *, uint64_t))(v19 + 8);
          v27(v23, v5);
          v27(v22, v5);
          v27(v20, v5);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_249752D18();
            v18 = v30;
          }
          v28 = *(_QWORD *)(v18 + 16);
          v14 = v37;
          v11 = v38;
          if (v28 >= *(_QWORD *)(v18 + 24) >> 1)
          {
            sub_249752D18();
            v18 = v31;
          }
          *(_QWORD *)(v18 + 16) = v28 + 1;
          v29 = v18 + 16 * v28;
          *(_QWORD *)(v29 + 32) = v24;
          *(_QWORD *)(v29 + 40) = v26;
          v4 = v39;
          goto LABEL_12;
        }
        sub_24974BC70((uint64_t)v4);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
LABEL_12:
      sub_2498370C0();
      if (!v46)
        goto LABEL_15;
    }
  }
  v18 = MEMORY[0x24BEE4AF8];
LABEL_15:
  (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v11);
  return v18;
}

void sub_249749B68()
{
  void *v0;

  if (PlatformIsAppleInternal())
  {
    v0 = sub_249779EA4(0x6974616D6F747541, 0xEA00000000006E6FLL);
    if (v0)
    {
      objc_msgSend(v0, sel_BOOLValue);
      OUTLINED_FUNCTION_11_0();
    }
  }
  OUTLINED_FUNCTION_27();
}

void sub_249749BD0(char a1)
{
  void *v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  id v11;
  id v12;

  if ((a1 & 1) != 0)
    v1 = (void *)OUTLINED_FUNCTION_14_0();
  else
    v1 = 0;
  v11 = v1;
  v2 = sub_24977A000(v1, 0x6974616D6F747541, 0xEA00000000006E6FLL);
  OUTLINED_FUNCTION_3_0(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1(v12);
}

uint64_t sub_249749C30(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_249749C6C + 4 * byte_249838AA0[a1]))(0xD000000000000010, 0x8000000249840220);
}

uint64_t sub_249749C6C()
{
  return 0x6974616D6F747541;
}

uint64_t sub_249749C88()
{
  return 0x72756769666E6F43;
}

unint64_t sub_249749CC0()
{
  return 0xD000000000000011;
}

uint64_t sub_249749D00()
{
  uint64_t v0;

  return v0 + 7;
}

uint64_t sub_249749DFC()
{
  return 0x6E6564646948;
}

uint64_t sub_249749E10()
{
  return 0x6572726566657250;
}

void sub_249749E2C()
{
  void *v0;

  v0 = sub_249779EA4(0x656C6261736944, 0xE700000000000000);
  if (v0)
  {
    objc_msgSend(v0, sel_BOOLValue);
    OUTLINED_FUNCTION_11_0();
  }
  else
  {
    PlatformIsBeta();
  }
  OUTLINED_FUNCTION_27();
}

void sub_249749E80(char a1)
{
  void *v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  id v11;
  id v12;

  if (PlatformIsBeta() == (a1 & 1))
    v1 = 0;
  else
    v1 = (void *)sub_249836EE0();
  v11 = v1;
  v2 = sub_24977A000(v1, 0x656C6261736944, 0xE700000000000000);
  OUTLINED_FUNCTION_3_0(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1(v12);
}

void sub_249749EEC()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_9_0();
  v1 = OUTLINED_FUNCTION_8_0(17, v0);
  if (v1)
  {
    objc_msgSend(v1, sel_BOOLValue);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_27();
}

void sub_249749F38(char a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  id v13;
  id v14;

  if ((a1 & 1) != 0)
    v1 = (void *)OUTLINED_FUNCTION_14_0();
  else
    v1 = 0;
  v13 = v1;
  v2 = (void *)OUTLINED_FUNCTION_2_0();
  v4 = OUTLINED_FUNCTION_7_0(v2, 17, v3);
  OUTLINED_FUNCTION_3_0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1(v14);
}

void sub_249749F8C()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_9_0();
  v1 = OUTLINED_FUNCTION_8_0(24, v0);
  if (v1)
  {
    objc_msgSend(v1, sel_BOOLValue);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_27();
}

void sub_249749FD8(char a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  id v13;
  id v14;

  if ((a1 & 1) != 0)
    v1 = (void *)OUTLINED_FUNCTION_14_0();
  else
    v1 = 0;
  v13 = v1;
  v2 = (void *)OUTLINED_FUNCTION_2_0();
  v4 = OUTLINED_FUNCTION_7_0(v2, 24, v3);
  OUTLINED_FUNCTION_3_0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1(v14);
}

void sub_24974A02C()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_9_0();
  v1 = OUTLINED_FUNCTION_8_0(27, v0);
  if (v1)
  {
    objc_msgSend(v1, sel_BOOLValue);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_27();
}

void sub_24974A078(char a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  id v13;
  id v14;

  if ((a1 & 1) != 0)
    v1 = (void *)OUTLINED_FUNCTION_14_0();
  else
    v1 = 0;
  v13 = v1;
  v2 = (void *)OUTLINED_FUNCTION_2_0();
  v4 = OUTLINED_FUNCTION_7_0(v2, 27, v3);
  OUTLINED_FUNCTION_3_0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1(v14);
}

void sub_24974A0CC()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_9_0();
  v1 = OUTLINED_FUNCTION_8_0(21, v0);
  if (v1)
  {
    objc_msgSend(v1, sel_integerValue);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_27();
}

void sub_24974A118(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  id v13;
  id v14;

  if (a1 == 100)
    v1 = 0;
  else
    v1 = (void *)sub_249836F58();
  v13 = v1;
  v2 = (void *)OUTLINED_FUNCTION_2_0();
  v4 = OUTLINED_FUNCTION_7_0(v2, 21, v3);
  OUTLINED_FUNCTION_3_0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1(v14);
}

void sub_24974A170()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_9_0();
  v1 = OUTLINED_FUNCTION_8_0(19, v0);
  if (v1)
  {
    objc_msgSend(v1, sel_integerValue);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_27();
}

void sub_24974A1BC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  id v13;
  id v14;

  if (a1 == 1000)
    v1 = 0;
  else
    v1 = (void *)sub_249836F58();
  v13 = v1;
  v2 = (void *)OUTLINED_FUNCTION_2_0();
  v4 = OUTLINED_FUNCTION_7_0(v2, 19, v3);
  OUTLINED_FUNCTION_3_0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1(v14);
}

void sub_24974A214()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_9_0();
  v1 = OUTLINED_FUNCTION_8_0(16, v0);
  if (v1)
  {
    objc_msgSend(v1, sel_BOOLValue);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_27();
}

void sub_24974A260(char a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  id v13;
  id v14;

  if ((a1 & 1) != 0)
    v1 = (void *)OUTLINED_FUNCTION_14_0();
  else
    v1 = 0;
  v13 = v1;
  v2 = (void *)OUTLINED_FUNCTION_2_0();
  v4 = OUTLINED_FUNCTION_7_0(v2, 16, v3);
  OUTLINED_FUNCTION_3_0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1(v14);
}

void sub_24974A2B4()
{
  void *v0;

  v0 = sub_249779EA4(0x6572685449535352, 0xED0000646C6F6873);
  if (v0)
  {
    objc_msgSend(v0, sel_integerValue);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_27();
}

void sub_24974A310(uint64_t a1)
{
  void *v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  id v11;
  id v12;

  if (a1 == -80)
    v1 = 0;
  else
    v1 = (void *)sub_249836F58();
  v11 = v1;
  v2 = sub_24977A000(v1, 0x6572685449535352, 0xED0000646C6F6873);
  OUTLINED_FUNCTION_3_0(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1(v12);
}

double sub_24974A37C(unsigned __int8 a1, double a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;

  v4 = sub_249749C30(a1);
  sub_249779EA4(v4, v5);
  OUTLINED_FUNCTION_18_0();
  if (v2)
  {
    objc_msgSend(v2, sel_doubleValue);
    a2 = v6;

  }
  return a2;
}

void sub_24974A3D8(unsigned __int8 a1, double a2, double a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  id v17;
  id v18;

  if (a2 == a3)
    v4 = 0;
  else
    v4 = (void *)sub_249836EF8();
  v5 = sub_249749C30(a1);
  v7 = v6;
  v17 = v4;
  sub_24977A000(v4, v5, v7);
  v8 = OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_3_0(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  OUTLINED_FUNCTION_1_0();

}

void sub_24974A454()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_9_0();
  v1 = OUTLINED_FUNCTION_8_0(20, v0);
  if (v1)
  {
    objc_msgSend(v1, sel_integerValue);
    OUTLINED_FUNCTION_11_0();
  }
  OUTLINED_FUNCTION_27();
}

void sub_24974A4A0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  id v13;
  id v14;

  if (a1 == 3)
    v1 = 0;
  else
    v1 = (void *)sub_249836F58();
  v13 = v1;
  v2 = (void *)OUTLINED_FUNCTION_2_0();
  v4 = OUTLINED_FUNCTION_7_0(v2, 20, v3);
  OUTLINED_FUNCTION_3_0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_1(v14);
}

uint64_t sub_24974A4F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = OUTLINED_FUNCTION_12_0();
  result = sub_24977A134(v2, v3 | 0xED00006E00000000);
  v6 = 0;
  if (v5 >> 60 != 15)
  {
    v7 = result;
    v8 = v5;
    sub_24983685C();
    swift_allocObject();
    sub_249836850();
    type metadata accessor for UVC1Config();
    sub_24974BBF4(qword_2578805C0, (void (*)(uint64_t))type metadata accessor for UVC1Config);
    sub_249836844();
    v6 = v11;
    swift_retain();
    sub_2497ECFBC();
    qword_257882098 = v9;
    unk_2578820A0 = v10;
    qword_2578820A8 = v11;
    swift_release();
    sub_249748C80(v7, v8);
    result = OUTLINED_FUNCTION_17_0();
  }
  *a1 = v6;
  return result;
}

uint64_t sub_24974A628(_QWORD *a1)
{
  CFStringRef *v1;
  unsigned int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (*a1)
  {
    UniversalControlConfiguration.encoded()();
    swift_release();
  }
  OUTLINED_FUNCTION_13_0();
  sub_24977A1A4(v3, v4, v5, v2 | 0xED00006E00000000);
  return CFPreferencesSynchronize(v1[2], v1[3], v1[4]);
}

uint64_t sub_24974A6C8()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v0 = OUTLINED_FUNCTION_12_0();
  v2 = sub_24977A134(v0, v1 | 0xEF44496E00000000);
  if (v3 >> 60 == 15)
    return 0;
  v4 = v2;
  v5 = v3;
  if (sub_249836964() != 32)
  {
    sub_249748C80(v4, v5);
    return 0;
  }
  return v4;
}

uint64_t sub_24974A72C(uint64_t a1, unint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  sub_249748C6C(a1, a2);
  OUTLINED_FUNCTION_13_0();
  sub_24977A1A4(v5, v6, v7, v4 | 0xEF44496E00000000);
  OUTLINED_FUNCTION_1_0();
  return sub_249748C80(a1, a2);
}

uint64_t sub_24974A77C(unsigned __int8 a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_249749C30(a1);
  sub_249779EC8(v3, v4);
  OUTLINED_FUNCTION_18_0();
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  sub_249749758(v1);
  OUTLINED_FUNCTION_11_0();
  return v2;
}

void sub_24974A7D8(uint64_t a1, unsigned __int8 a2)
{
  CFStringRef *v2;
  CFStringRef *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v17[2];

  v3 = v2;
  v6 = sub_249836A18();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v17[1] = MEMORY[0x24BEE4AF8];
    sub_2498371F8();
    v11 = a1 + 47;
    do
    {
      sub_2498369E8();
      sub_2498369B8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_249836D18();
      swift_bridgeObjectRelease();
      sub_2498371D4();
      sub_249837204();
      sub_249837210();
      sub_2498371E0();
      v11 += 16;
      --v10;
    }
    while (v10);
    sub_24974BBB8();
    v12 = (void *)sub_249836E98();
    swift_release();
  }
  else
  {
    v12 = 0;
  }
  v13 = sub_249749C30(a2);
  v15 = v14;
  v16 = v12;
  sub_24977A01C(v12, v13, v15);
  OUTLINED_FUNCTION_16_0();

  CFPreferencesSynchronize(v3[2], v3[3], v3[4]);
}

void sub_24974A990()
{
  void *v0;
  id v1;
  id v2;
  void *v3;

  v0 = (void *)*MEMORY[0x24BDBD588];
  v1 = (id)*MEMORY[0x24BDBD590];
  v2 = v0;
  OUTLINED_FUNCTION_9_0();
  v3 = (void *)sub_249836D18();
  sub_24974AA00(v3, v1, v2, (uint64_t)&unk_251AB0710);
}

void sub_24974AA00(void *a1, void *a2, void *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned __int8 *v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;

  v9 = MEMORY[0x24BEE4AF8];
  v4[5] = sub_249836CA0();
  type metadata accessor for UnfairRecursiveLock();
  v10 = swift_allocObject();
  v11 = (_QWORD *)swift_slowAlloc();
  *v11 = 0;
  *(_QWORD *)(v10 + 16) = v11;
  v4[6] = v10;
  v4[7] = 0;
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v12 = *(_QWORD *)(a4 + 16);
  v34 = a1;
  v33 = a2;
  v32 = a3;
  sub_24974DDF0();
  v13 = v9;
  if (v12)
  {
    v14 = *(_QWORD *)(a4 + 16);
    v15 = (unsigned __int8 *)(a4 + 32);
    swift_bridgeObjectRetain();
    v16 = v12;
    v17 = a4;
    while (v14)
    {
      v18 = sub_249749C30(*v15);
      v20 = v19;
      v21 = *(_QWORD *)(v13 + 16);
      if (v21 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_24974DDF0();
      *(_QWORD *)(v13 + 16) = v21 + 1;
      v22 = v13 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v20;
      ++v15;
      --v14;
      if (!--v16)
        goto LABEL_9;
    }
    __break(1u);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v17 = a4;
LABEL_9:
  v23 = *(_QWORD *)(v17 + 16);
  v24 = v23 - v12;
  if (v23 == v12)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    sub_24974AC8C(v13);
    swift_release();
    swift_bridgeObjectRelease();

    return;
  }
  if (v23 > v12)
  {
    v25 = (unsigned __int8 *)(v12 + v17 + 32);
    do
    {
      v26 = *v25++;
      v27 = sub_249749C30(v26);
      v29 = v28;
      v30 = *(_QWORD *)(v13 + 16);
      if (v30 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_24974DDF0();
      *(_QWORD *)(v13 + 16) = v30 + 1;
      v31 = v13 + 16 * v30;
      *(_QWORD *)(v31 + 32) = v27;
      *(_QWORD *)(v31 + 40) = v29;
      --v24;
    }
    while (v24);
    goto LABEL_10;
  }
LABEL_18:
  __break(1u);
}

uint64_t sub_24974AC50()
{
  sub_249779DD4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UniversalControlPreferencesImpl()
{
  return objc_opt_self();
}

uint64_t sub_24974AC8C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  os_unfair_lock_t *v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v44[2];
  _QWORD *v45;
  id v46;
  id v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787FD90);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787FD98);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249836B98();
  sub_24974B98C(&qword_25787FDA0, &qword_25787FD98);
  v10 = sub_249836BB0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v13 = (void *)v2[2];
    v12 = (void *)v2[3];
    v45 = v2;
    v46 = (id)v2[4];
    v47 = v12;
    swift_bridgeObjectRetain();
    v44[1] = a1;
    v14 = (uint64_t *)(a1 + 40);
    v48 = v13;
    do
    {
      v15 = *v14;
      v52 = *(v14 - 1);
      v53 = v11;
      v58 = v10;
      v16 = qword_25787F6D0;
      swift_bridgeObjectRetain_n();
      v17 = v13;
      v18 = v47;
      v54 = v46;
      swift_retain();
      if (v16 != -1)
        swift_once();
      v19 = (os_unfair_lock_t *)off_257881F08;
      v20 = (os_unfair_lock_s *)*((_QWORD *)off_257881F08 + 2);
      swift_retain();
      os_unfair_lock_lock(v20);
      v21 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
      v23 = v22;
      if (qword_25787F6D8 != -1)
        swift_once();
      swift_beginAccess();
      v24 = off_257881F10;
      v25 = *((_QWORD *)off_257881F10 + 2);
      swift_bridgeObjectRetain();
      v55 = v18;
      if (v25 && (v26 = sub_2497F2594(), (v27 & 1) != 0))
      {
        v28 = *(void **)(v24[7] + 8 * v26);
        swift_endAccess();
        v29 = v28;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_endAccess();
        swift_bridgeObjectRelease();
        v30 = objc_allocWithZone((Class)type metadata accessor for Preferences.KVOProxy());
        swift_bridgeObjectRetain();
        sub_2497E6818(v21, v23);
        v32 = v31;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v29 = v32;
        swift_isUniquelyReferenced_nonNull_native();
        v56 = off_257881F10;
        off_257881F10 = (_UNKNOWN *)0x8000000000000000;
        sub_24974B878((uint64_t)v29, v21, v23);
        off_257881F10 = v56;
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRelease();
        os_unfair_lock_assert_owner(*((const os_unfair_lock **)off_257881F08 + 2));
      }
      v33 = v52;
      v34 = v53;
      v14 += 2;
      swift_bridgeObjectRelease();
      v35 = sub_2497E649C(v33, v15);

      os_unfair_lock_unlock(v19[2]);
      swift_release();
      swift_bridgeObjectRelease();

      v57 = v35;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDA8);
      sub_24974B98C(&qword_25787FDB0, &qword_25787FDA8);
      v36 = sub_249836BB0();
      swift_bridgeObjectRelease();
      swift_release();
      v57 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDB8);
      sub_24974B98C(&qword_25787FDC0, &qword_25787FDB8);
      v37 = v49;
      sub_249836BBC();
      swift_release();
      swift_release();
      sub_24974B98C(&qword_25787FDC8, &qword_25787FD90);
      v38 = v51;
      v39 = sub_249836BB0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v38);
      v10 = v39;
      v11 = v34 - 1;
      v13 = v48;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v2 = v45;
  }
  else
  {
    v39 = v10;
  }
  v57 = v39;
  v40 = swift_allocObject();
  swift_weakInit();
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = sub_24974B9E4;
  *(_QWORD *)(v41 + 24) = v40;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDB8);
  sub_24974B98C(&qword_25787FDC0, &qword_25787FDB8);
  v42 = sub_249836BE0();
  swift_release();
  swift_release();
  swift_release();
  v2[7] = v42;
  return swift_release();
}

BOOL sub_24974B214()
{
  char v0;

  sub_249749E2C();
  return (v0 & 1) == 0;
}

void sub_24974B23C(char a1)
{
  sub_249749E80((a1 & 1) == 0);
}

void sub_24974B254(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  v4 = swift_retain();
  a3(v4);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_27();
}

BOOL sub_24974B284()
{
  char v0;

  sub_249749EEC();
  return (v0 & 1) == 0;
}

uint64_t sub_24974B2AC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_retain();
  a4(a3);
  return swift_release();
}

void sub_24974B2EC(char a1)
{
  sub_249749F38((a1 & 1) == 0);
}

uint64_t sub_24974B32C()
{
  const __CFData *v0;
  void *v1;
  void *v2;
  const __CFData *v3;
  _BOOL4 IsSupported;
  int v5;

  v0 = PlatformGetModelProperty();
  v1 = v0;
  v2 = v0;
  if (!v0)
  {
    _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
    v2 = (void *)sub_249836D18();
    swift_bridgeObjectRelease();
    _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
    v1 = (void *)sub_249836D18();
    OUTLINED_FUNCTION_16_0();
  }
  v3 = v0;
  IsSupported = PlatformModelIsSupported(v2);

  v5 = PlatformModelIsiPad(v1);
  return v5 & IsSupported;
}

uint64_t sub_24974B3C0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24BCF8F88](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_24974B424(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v8;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_5_0();
  sub_24974B660(a1, a2, a3);
  *v3 = v8;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_24974B47C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v6;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_5_0();
  sub_24974B77C(a1, a2);
  *v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24974B4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24974B4EC(a1, a2, a3, sub_24974B878);
}

uint64_t sub_24974B4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24974B4EC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_24974BA30);
}

uint64_t sub_24974B4EC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v10;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_5_0();
  a4(a1, a2, a3);
  *v4 = v10;
  return OUTLINED_FUNCTION_4_0();
}

uint64_t sub_24974B548(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v4 = v3;
  v8 = *v3;
  v9 = sub_2497F22B8();
  if (__OFADD__(*(_QWORD *)(v8 + 16), (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787F818);
  if ((sub_249837270() & 1) == 0)
    goto LABEL_5;
  v13 = sub_2497F22B8();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_24983763C();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = *(_QWORD *)(v15 + 56);
    result = swift_release();
    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_2497AC308(v11, a2, a3, a1, v15);
    return sub_249748BCC(a2, a3);
  }
  return result;
}

_OWORD *sub_24974B660(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_2497F2594();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880690);
  if ((sub_249837270() & 1) == 0)
    goto LABEL_5;
  v13 = sub_2497F2594();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = (_OWORD *)sub_24983763C();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = (_OWORD *)(v15[7] + 32 * v11);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    return sub_24974BBA8(a1, v16);
  }
  else
  {
    sub_2497AC324(v11, a2, a3, a1, v15);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

void sub_24974B77C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_2497F25D8(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDF0);
  if ((sub_249837270() & 1) == 0)
    goto LABEL_5;
  v11 = sub_2497F25D8(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    sub_24983763C();
    __break(1u);
    return;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
  {
    v14 = v13[7];

    *(_QWORD *)(v14 + 8 * v9) = a1;
  }
  else
  {
    sub_2497AC38C(v9, a2, a1, v13);
  }
}

void sub_24974B878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  v8 = *v3;
  v9 = sub_2497F2594();
  if (__OFADD__(*(_QWORD *)(v8 + 16), (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDD0);
  if ((sub_249837270() & 1) == 0)
    goto LABEL_5;
  v13 = sub_2497F2594();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    sub_24983763C();
    __break(1u);
    return;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = *(_QWORD *)(v15 + 56);

    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_2497AC414(v11, a2, a3, a1, v15);
    swift_bridgeObjectRetain();
  }
}

void sub_24974B98C(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24974B9C0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24974B9E4()
{
  return sub_24977A2F4();
}

uint64_t sub_24974B9EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24974BA10()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24974BA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v4 = v3;
  v8 = *v3;
  v9 = sub_2497F2594();
  if (__OFADD__(*(_QWORD *)(v8 + 16), (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDD8);
  if ((sub_249837270() & 1) == 0)
    goto LABEL_5;
  v13 = sub_2497F2594();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_24983763C();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = *(_QWORD *)(v15 + 56);
    result = swift_release();
    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_2497AC414(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PlatformModelIsiPad(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  v2 = objc_msgSend(v1, "hasPrefix:", CFSTR("iPad"));

  return v2;
}

uint64_t PlatformIsAppleInternal()
{
  return os_variant_has_internal_ui();
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_OWORD *sub_24974BBA8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_24974BBB8()
{
  unint64_t result;

  result = qword_2578805F0;
  if (!qword_2578805F0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2578805F0);
  }
  return result;
}

void sub_24974BBF4(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24974BC28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_24974BC70(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void OUTLINED_FUNCTION_0_1(id a1)
{

}

uint64_t OUTLINED_FUNCTION_1_0()
{
  CFStringRef *v0;

  return CFPreferencesSynchronize(v0[2], v0[3], v0[4]);
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_3_0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

}

uint64_t OUTLINED_FUNCTION_4_0()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_5_0()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_7_0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24977A000(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3);
}

void *OUTLINED_FUNCTION_8_0(uint64_t a1, uint64_t a2)
{
  return sub_249779EA4(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2);
}

void OUTLINED_FUNCTION_11_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_12_0()
{
  return 0x72756769666E6F43;
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  return sub_249836EE0();
}

uint64_t OUTLINED_FUNCTION_16_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_17_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_19_0()
{
  JUMPOUT(0x24BCF8F94);
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_24974BDA0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  sub_24974C100(*(_QWORD *)(v0 + 40));
  return v0;
}

uint64_t sub_24974BDD4()
{
  sub_24974BDA0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UniversalControlBrowser()
{
  return objc_opt_self();
}

uint64_t sub_24974BE14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_249836B68();
  *a1 = result;
  return result;
}

uint64_t sub_24974BE3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_devices);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_localDevice);
  v5 = *(_QWORD *)(v0 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_24977D910(v5, v3);
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
    goto LABEL_7;
  if (*(_QWORD *)(v1 + 24))
  {
    if (v4)
    {
      type metadata accessor for UniversalControlDevice(0);
      swift_retain();
      v7 = swift_retain();
      v8 = static UniversalControlDevice.== infix(_:_:)(v7);
      swift_release();
      swift_release();
      if ((v8 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
    }
LABEL_7:
    sub_24974C088();
    sub_249836B68();
    sub_249836B80();
    swift_release();
    *(_QWORD *)(v1 + 16) = v3;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 24) = v4;
    return swift_release();
  }
  if (v4)
    goto LABEL_7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24974BF78()
{
  return sub_249837768();
}

uint64_t sub_24974BF84()
{
  return sub_24974BF78();
}

uint64_t sub_24974BFA4()
{
  sub_249837768();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  sub_249836DB4();
  sub_24974C0C4();
  sub_249836E20();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  sub_249836DB4();
  return 60;
}

uint64_t sub_24974C05C()
{
  return sub_24974BFA4();
}

uint64_t sub_24974C07C()
{
  return MEMORY[0x24BDB9D70];
}

unint64_t sub_24974C088()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25787FEB0;
  if (!qword_25787FEB0)
  {
    v1 = type metadata accessor for UniversalControlBrowser();
    result = MEMORY[0x24BCF8F94](&unk_249838BA8, v1);
    atomic_store(result, (unint64_t *)&qword_25787FEB0);
  }
  return result;
}

unint64_t sub_24974C0C4()
{
  unint64_t result;

  result = qword_257880F90;
  if (!qword_257880F90)
  {
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE1EC0], MEMORY[0x24BEE1E88]);
    atomic_store(result, (unint64_t *)&qword_257880F90);
  }
  return result;
}

uint64_t sub_24974C100(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

UniversalControl::UniversalControlDiagnoseCategory_optional __swiftcall UniversalControlDiagnoseCategory.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;

  return (UniversalControl::UniversalControlDiagnoseCategory_optional)sub_24974C554((void (*)(uint64_t *__return_ptr))sub_24974C138, v1);
}

uint64_t sub_24974C138@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;

  if (result == 0x656C63726963 && a2 == 0xE600000000000000)
  {
    v7 = 0;
  }
  else
  {
    v6 = result;
    result = sub_2498375C4();
    v7 = 0;
    if ((result & 1) == 0)
    {
      v8 = v6 == 0x6769666E6F63 && a2 == 0xE600000000000000;
      if (v8 || (result = sub_2498375C4(), (result & 1) != 0))
      {
        v7 = 1;
      }
      else
      {
        v9 = v6 == 0x697463656E6E6F63 && a2 == 0xEA00000000006E6FLL;
        if (v9 || (result = sub_2498375C4(), (result & 1) != 0))
        {
          v7 = 2;
        }
        else
        {
          v10 = v6 == 0x7265766F63736964 && a2 == 0xE900000000000079;
          if (v10
            || (result = sub_2498375C4(), (result & 1) != 0)
            || (v6 == 0x6962616C69617661 ? (v11 = a2 == 0xEC0000007974696CLL) : (v11 = 0),
                v11 || (result = sub_2498375C4(), (result & 1) != 0)))
          {
            v7 = 3;
          }
          else
          {
            v12 = v6 == 0x746E657665 && a2 == 0xE500000000000000;
            if (v12 || (result = sub_2498375C4(), (result & 1) != 0))
            {
              v7 = 4;
            }
            else
            {
              v13 = v6 == 6580584 && a2 == 0xE300000000000000;
              if (v13 || (result = sub_2498375C4(), (result & 1) != 0))
              {
                v7 = 5;
              }
              else
              {
                v14 = v6 == 1919247728 && a2 == 0xE400000000000000;
                if (v14 || (result = sub_2498375C4(), (result & 1) != 0))
                {
                  v7 = 7;
                }
                else
                {
                  v15 = v6 == 0x6E65726566657270 && a2 == 0xEB00000000736563;
                  if (v15 || (result = sub_2498375C4(), (result & 1) != 0))
                  {
                    v7 = 8;
                  }
                  else
                  {
                    v7 = 6;
                    if (v6 != 1668184435 || a2 != 0xE400000000000000)
                    {
                      result = sub_2498375C4();
                      if ((result & 1) != 0)
                        v7 = 6;
                      else
                        v7 = 9;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  *a3 = v7;
  return result;
}

uint64_t UniversalControlDiagnoseCategory.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24974C4A0 + 4 * byte_249838BE0[*v0]))(0x656C63726963, 0xE600000000000000);
}

uint64_t sub_24974C4A0()
{
  return 0x6769666E6F63;
}

uint64_t sub_24974C4B0()
{
  return 0x697463656E6E6F63;
}

uint64_t sub_24974C4CC()
{
  return 0x7265766F63736964;
}

uint64_t sub_24974C4E8()
{
  return 0x73746E657665;
}

uint64_t sub_24974C4F8()
{
  return 6580584;
}

uint64_t sub_24974C508()
{
  return 1668184435;
}

uint64_t sub_24974C518()
{
  return 1919247728;
}

uint64_t sub_24974C528()
{
  return 0x6E65726566657270;
}

UniversalControl::UniversalControlDiagnoseCategory_optional __swiftcall UniversalControlDiagnoseCategory.init(code:)(Swift::String code)
{
  _BYTE *v1;

  return (UniversalControl::UniversalControlDiagnoseCategory_optional)sub_24974C554((void (*)(uint64_t *__return_ptr))sub_24974C594, v1);
}

uint64_t sub_24974C554@<X0>(void (*a1)(uint64_t *__return_ptr)@<X2>, _BYTE *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  a1(&v4);
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_24974C594@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;
  BOOL v8;
  BOOL v9;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  if (result == 1129466179 && a2 == 0xE400000000000000)
  {
    v7 = 0;
    goto LABEL_13;
  }
  v6 = result;
  result = sub_2498375C4();
  v7 = 0;
  if ((result & 1) == 0)
  {
    v8 = v6 == 1179537219 && a2 == 0xE400000000000000;
    if (v8 || (result = sub_2498375C4(), (result & 1) != 0))
    {
      v7 = 1;
      goto LABEL_13;
    }
    v9 = v6 == 1313754947 && a2 == 0xE400000000000000;
    if (v9 || (result = sub_2498375C4(), (result & 1) != 0))
    {
      v7 = 2;
      goto LABEL_13;
    }
    if (v6 == 1129531716 && a2 == 0xE400000000000000)
    {
LABEL_33:
      v7 = 3;
      goto LABEL_13;
    }
    result = sub_2498375C4();
    v12 = v6 == 1279350337 && a2 == 0xE400000000000000;
    v7 = 3;
    if ((result & 1) == 0 && !v12)
    {
      result = sub_2498375C4();
      if ((result & 1) != 0)
        goto LABEL_33;
      v13 = v6 == 1414420037 && a2 == 0xE400000000000000;
      if (v13 || (result = sub_2498375C4(), (result & 1) != 0))
      {
        v7 = 4;
      }
      else
      {
        v14 = v6 == 4475208 && a2 == 0xE300000000000000;
        if (v14 || (result = sub_2498375C4(), (result & 1) != 0))
        {
          v7 = 5;
        }
        else
        {
          v15 = v6 == 1380271440 && a2 == 0xE400000000000000;
          if (v15 || (result = sub_2498375C4(), (result & 1) != 0))
          {
            v7 = 7;
          }
          else
          {
            v16 = v6 == 1178948176 && a2 == 0xE400000000000000;
            if (v16 || (result = sub_2498375C4(), (result & 1) != 0))
            {
              v7 = 8;
            }
            else
            {
              v7 = 6;
              if (v6 != 1129208147 || a2 != 0xE400000000000000)
              {
                result = sub_2498375C4();
                if ((result & 1) != 0)
                  v7 = 6;
                else
                  v7 = 9;
              }
            }
          }
        }
      }
    }
  }
LABEL_13:
  *a3 = v7;
  return result;
}

uint64_t UniversalControlDiagnoseCategory.code.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_24974C870 + 4 * byte_249838BE9[*v0]))("CIRC", 4);
}

const char *sub_24974C870()
{
  return "CONF";
}

BOOL static UniversalControlDiagnoseCategory.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void UniversalControlDiagnoseCategory.hash(into:)()
{
  sub_2498376A8();
  OUTLINED_FUNCTION_27();
}

uint64_t UniversalControlDiagnoseCategory.hashValue.getter()
{
  sub_249837690();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t sub_24974C964()
{
  sub_249837690();
  sub_2498376A8();
  return sub_2498376E4();
}

void *static UniversalControlDiagnoseCategory.allCases.getter()
{
  return &unk_251AB0748;
}

void sub_24974C9B0(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AB0748;
}

uint64_t UniversalControlDiagnoseCategoryMask.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UniversalControlDiagnoseCategoryMask.rawValue.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*UniversalControlDiagnoseCategoryMask.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t UniversalControlDiagnoseCategoryMask.init(rawValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void UniversalControlDiagnoseCategoryMask.init(category:)(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

Swift::Bool __swiftcall UniversalControlDiagnoseCategoryMask.contains(_:)(UniversalControl::UniversalControlDiagnoseCategory a1)
{
  _QWORD *v1;

  return (*v1 >> *(_QWORD *)&asc_249838EE8[8 * *(char *)a1]) & 1;
}

Swift::tuple_inserted_Bool_memberAfterInsert_UniversalControl_UniversalControlDiagnoseCategory __swiftcall UniversalControlDiagnoseCategoryMask.insert(_:)(UniversalControl::UniversalControlDiagnoseCategory a1)
{
  char *v1;
  _QWORD *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Bool v6;
  Swift::tuple_inserted_Bool_memberAfterInsert_UniversalControl_UniversalControlDiagnoseCategory result;

  v3 = *v1;
  v4 = 1 << *(_QWORD *)&asc_249838EE8[8 * *v1];
  v5 = v4 & *v2;
  if (!v5)
    *v2 |= v4;
  *(_BYTE *)a1 = v3;
  v6 = v5 == 0;
  result.memberAfterInsert = (char)v1;
  result.inserted = v6;
  return result;
}

UniversalControl::UniversalControlDiagnoseCategory_optional __swiftcall UniversalControlDiagnoseCategoryMask.remove(_:)(UniversalControl::UniversalControlDiagnoseCategory_optional result)
{
  _BYTE *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(char *)result.value;
  v4 = *(_QWORD *)&asc_249838EE8[8 * v3];
  if (((*v2 >> v4) & 1) != 0)
    *v2 &= (-1 << v4) - 1;
  else
    LOBYTE(v3) = 9;
  *v1 = v3;
  return result;
}

UniversalControl::UniversalControlDiagnoseCategory_optional __swiftcall UniversalControlDiagnoseCategoryMask.update(with:)(UniversalControl::UniversalControlDiagnoseCategory_optional with)
{
  _BYTE *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(char *)with.value;
  v4 = 1 << *(_QWORD *)&asc_249838EE8[8 * v3];
  if ((v4 & *v2) != 0)
    LOBYTE(v3) = 9;
  else
    *v2 |= v4;
  *v1 = v3;
  return with;
}

uint64_t sub_24974CAF0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return UniversalControlDiagnoseCategoryMask.init(rawValue:)(*a1, a2);
}

void sub_24974CAFC(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_24974CB08(_QWORD *a1@<X8>)
{
  sub_24975910C(a1);
}

void sub_24974CB14(_QWORD *a1@<X8>)
{
  sub_249759124(a1);
}

void sub_24974CB20(_QWORD *a1@<X8>)
{
  sub_24975913C(a1);
}

void sub_24974CB38(uint64_t *a1)
{
  sub_249759154(*a1);
}

void sub_24974CB40(uint64_t *a1)
{
  sub_249759174(*a1);
}

void sub_24974CB48(uint64_t *a1)
{
  sub_249759194(*a1);
}

void sub_24974CB50(_QWORD *a1@<X8>)
{
  sub_2497591B4(a1);
}

BOOL sub_24974CB5C(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2497591D0(*a1, *v1);
}

BOOL sub_24974CB68(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2497591F0(*a1, *v1);
}

BOOL sub_24974CB74(uint64_t *a1)
{
  uint64_t *v1;

  return sub_24975920C(*a1, *v1);
}

BOOL sub_24974CB80()
{
  uint64_t *v0;

  return sub_24975922C(*v0);
}

uint64_t sub_24974CB88()
{
  return sub_2498370F0();
}

void sub_24974CBA0(uint64_t *a1)
{
  sub_249759238(*a1);
}

uint64_t sub_24974CBA8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = UniversalControlDiagnoseCategoryMask.init(rawValue:)(*a1, (_QWORD *)a2);
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_24974CBD0(uint64_t *a1@<X8>)
{
  *a1 = UniversalControlDiagnoseCategoryMask.rawValue.getter();
  OUTLINED_FUNCTION_27();
}

BOOL sub_24974CBF0(uint64_t *a1, uint64_t *a2)
{
  return sub_2497A0650(*a1, *a2);
}

void static UniversalControlDiagnoseCategoryMask.availability.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void static UniversalControlDiagnoseCategoryMask.circle.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void static UniversalControlDiagnoseCategoryMask.config.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void static UniversalControlDiagnoseCategoryMask.connection.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void static UniversalControlDiagnoseCategoryMask.event.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void static UniversalControlDiagnoseCategoryMask.hid.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void static UniversalControlDiagnoseCategoryMask.peer.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void static UniversalControlDiagnoseCategoryMask.preferences.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void static UniversalControlDiagnoseCategoryMask.sync.getter(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void static UniversalControlDiagnoseCategoryMask.allCases.getter(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = 9;
  v3 = 0;
  v4 = &byte_251AB0768;
  do
  {
    v5 = *v4++;
    v6 = 1 << *(_QWORD *)&asc_249838EE8[8 * v5];
    if ((v6 & v3) != 0)
      v6 = 0;
    v3 |= v6;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  *a1 = v3;
  OUTLINED_FUNCTION_27();
}

uint64_t UniversalControlDiagnoseCategoryMask.description.getter()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = 9;
  v2 = *v0;
  v3 = MEMORY[0x24BEE4AF8];
  v4 = &byte_251AB0768;
  do
  {
    v6 = *v4++;
    v5 = v6;
    if (((v2 >> *(_QWORD *)&asc_249838EE8[8 * v6]) & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_24974DE24(0, *(_QWORD *)(v3 + 16) + 1, 1);
      v8 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v3 + 24);
      if (v8 >= v7 >> 1)
        sub_24974DE24(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v3 + 16) = v8 + 1;
      *(_BYTE *)(v3 + v8 + 32) = v5;
    }
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 16))
  {
    sub_24974DDF0();
    __asm { BR              X9 }
  }
  OUTLINED_FUNCTION_12_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FEB8);
  sub_24974DEBC((unint64_t *)&qword_25787FEC0, &qword_25787FEB8, MEMORY[0x24BEE12B0]);
  v9 = sub_249836CDC();
  swift_bridgeObjectRelease();
  return v9;
}

void sub_24974CF88(uint64_t a1)
{
  sub_24974CFF4(a1);
}

void sub_24974CF94(uint64_t a1)
{
  sub_24974CFF4(a1);
}

void sub_24974CFA0(uint64_t a1)
{
  sub_24974CFF4(a1);
}

void sub_24974CFAC(uint64_t a1)
{
  sub_24974CFF4(a1);
}

void sub_24974CFB8(uint64_t a1)
{
  sub_24974CFF4(a1);
}

void sub_24974CFC4(uint64_t a1)
{
  sub_24974D088(a1, &qword_25787FFE8);
}

void sub_24974CFD0(uint64_t a1)
{
  sub_24974CFF4(a1);
}

void sub_24974CFDC(uint64_t a1)
{
  sub_24974D088(a1, &qword_25787FFB8);
}

void sub_24974CFE8(uint64_t a1)
{
  sub_24974CFF4(a1);
}

void sub_24974CFF4(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_9_1();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(OUTLINED_FUNCTION_26_0() + 16) = a1;
    OUTLINED_FUNCTION_24_0();
  }
}

void sub_24974D058(uint64_t a1)
{
  sub_24974D104(a1, (void (*)(_QWORD))type metadata accessor for UniversalControlDevice);
}

void sub_24974D064(uint64_t a1)
{
  sub_24974D104(a1, (void (*)(_QWORD))type metadata accessor for UVC1Object);
}

void sub_24974D070(uint64_t a1)
{
  sub_24974D104(a1, (void (*)(_QWORD))type metadata accessor for UniversalControlDisplay);
}

void sub_24974D07C(uint64_t a1)
{
  sub_24974D088(a1, &qword_25787FF70);
}

void sub_24974D088(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_9_1();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(a2);
      *(_QWORD *)(OUTLINED_FUNCTION_26_0() + 16) = a1;
    }
    OUTLINED_FUNCTION_24_0();
  }
}

void sub_24974D0F8(uint64_t a1)
{
  sub_24974D104(a1, (void (*)(_QWORD))type metadata accessor for UniversalControlDisplaySolver1.DisplayProxy);
}

void sub_24974D104(uint64_t a1, void (*a2)(_QWORD))
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_9_1();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      *(_QWORD *)((OUTLINED_FUNCTION_26_0() & 0xFFFFFFFFFFFFF8) + 0x10) = a1;
    }
    OUTLINED_FUNCTION_24_0();
  }
}

uint64_t sub_24974D17C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_4_1();
  }
  else
  {
    if (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3)
      return swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_3_1();
  }
  result = OUTLINED_FUNCTION_2_1();
  __break(1u);
  return result;
}

void *sub_24974D218(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_4_1();
  }
  else
  {
    OUTLINED_FUNCTION_25_0();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)OUTLINED_FUNCTION_21_0();
      return OUTLINED_FUNCTION_1_1(v7, v8, v9);
    }
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_3_1();
  }
  result = (void *)OUTLINED_FUNCTION_2_1();
  __break(1u);
  return result;
}

void *sub_24974D298(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_4_1();
  }
  else
  {
    v3 = a1 + 70 * a2;
    if (a3 + 70 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_21_0();
      return OUTLINED_FUNCTION_1_1(v6, v7, v8);
    }
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_3_1();
  }
  result = (void *)OUTLINED_FUNCTION_2_1();
  __break(1u);
  return result;
}

void *sub_24974D334(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  void *v6;
  const void *v7;
  size_t v8;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_4_1();
  }
  else
  {
    v3 = a1 + 16 * a2;
    if (a3 + 16 * a2 > a1)
    {
      v4 = v3 >= a3;
      v5 = v3 == a3;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      v6 = (void *)OUTLINED_FUNCTION_21_0();
      return OUTLINED_FUNCTION_1_1(v6, v7, v8);
    }
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_3_1();
  }
  result = (void *)OUTLINED_FUNCTION_2_1();
  __break(1u);
  return result;
}

uint64_t sub_24974D3C4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_249837360();
  __break(1u);
  return result;
}

void *sub_24974D490(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  void *v7;
  const void *v8;
  size_t v9;
  void *result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_4_1();
  }
  else
  {
    OUTLINED_FUNCTION_15_0();
    if (!v5 & v4)
      v6 = v3 > v2;
    else
      v6 = 0;
    if (!v6)
    {
      v7 = (void *)OUTLINED_FUNCTION_21_0();
      return OUTLINED_FUNCTION_1_1(v7, v8, v9);
    }
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_3_1();
  }
  result = (void *)OUTLINED_FUNCTION_2_1();
  __break(1u);
  return result;
}

void *sub_24974D510(char *__src, uint64_t a2, char *__dst)
{
  void *result;

  if ((a2 & 0x8000000000000000) == 0 && (&__dst[32 * a2] <= __src || &__src[32 * a2] <= __dst))
    return memcpy(__dst, __src, 32 * a2);
  result = (void *)sub_249837360();
  __break(1u);
  return result;
}

uint64_t sub_24974D5D8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_24974DBC0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for UniversalControlDevice);
}

void *sub_24974D5E4(char *a1, size_t a2, char *a3)
{
  void *result;

  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_4_1();
  }
  else
  {
    if (&a3[a2] <= a1 || &a1[a2] <= a3)
      return OUTLINED_FUNCTION_1_1(a3, a1, a2);
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_3_1();
  }
  result = (void *)OUTLINED_FUNCTION_2_1();
  __break(1u);
  return result;
}

uint64_t sub_24974D674(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (v3 = a1 + 24 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_249837360();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF18);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_24974D764(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (v3 = a1 + 16 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_249837360();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF30);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_24974D850(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_24974DBC0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for UniversalControlDisplay);
}

uint64_t sub_24974D85C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (v3 = a1 + 32 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_249837360();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF08);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_24974D948(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (v3 = a1 + 24 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_249837360();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787FFA8);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_24974DA38(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  BOOL v5;
  BOOL v6;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_4_1();
  }
  else
  {
    OUTLINED_FUNCTION_23_0();
    if (!v6 && v5)
    {
      v5 = v4 >= v2;
      v6 = v4 == v2;
    }
    else
    {
      v5 = 0;
      v6 = 0;
    }
    if (v6 || !v5)
    {
      __swift_instantiateConcreteTypeFromMangledName(v3);
      OUTLINED_FUNCTION_22_0();
      return OUTLINED_FUNCTION_5_1();
    }
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_3_1();
  }
  result = OUTLINED_FUNCTION_2_1();
  __break(1u);
  return result;
}

uint64_t sub_24974DAC4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (v3 = a1 + 24 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_249837360();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF98);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_24974DBB4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_24974DBC0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for UniversalControlDisplaySolver1.DisplayProxy);
}

uint64_t sub_24974DBC0(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD))
{
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_4_1();
  }
  else
  {
    if (a3 + 8 * a2 <= a1 || a1 + 8 * a2 <= a3)
    {
      a4(0);
      OUTLINED_FUNCTION_22_0();
      return OUTLINED_FUNCTION_5_1();
    }
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_3_1();
  }
  result = OUTLINED_FUNCTION_2_1();
  __break(1u);
  return result;
}

uint64_t sub_24974DC60(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  BOOL v5;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_4_1();
  }
  else
  {
    OUTLINED_FUNCTION_23_0();
    if (!v5 && v4)
    {
      v4 = v3 >= v2;
      v5 = v3 == v2;
    }
    else
    {
      v4 = 0;
      v5 = 0;
    }
    if (v5 || !v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF60);
      OUTLINED_FUNCTION_22_0();
      return OUTLINED_FUNCTION_5_1();
    }
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_3_1();
  }
  result = OUTLINED_FUNCTION_2_1();
  __break(1u);
  return result;
}

uint64_t sub_24974DCF0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 32 * a2 <= a1 || a1 + 32 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_249837360();
  __break(1u);
  return result;
}

void sub_24974DDBC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E558();
  *v0 = v1;
}

void sub_24974DDF0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E6B8();
  *v0 = v1;
}

void sub_24974DE24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_24974E5EC(a1, a2, a3, *v3, &qword_25787FFF8, (void (*)(char *, int64_t, char *))sub_2497AC0F4);
  *v3 = v4;
}

unint64_t sub_24974DE54()
{
  unint64_t result;

  result = qword_25787FEC8;
  if (!qword_25787FEC8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDiagnoseCategory, &type metadata for UniversalControlDiagnoseCategory);
    atomic_store(result, (unint64_t *)&qword_25787FEC8);
  }
  return result;
}

uint64_t sub_24974DE90()
{
  return sub_24974DEBC(&qword_25787FED0, &qword_25787FED8, MEMORY[0x24BEE12E0]);
}

uint64_t sub_24974DEBC(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BCF8F94](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24974DF00()
{
  unint64_t result;

  result = qword_25787FEE0;
  if (!qword_25787FEE0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDiagnoseCategoryMask, &type metadata for UniversalControlDiagnoseCategoryMask);
    atomic_store(result, (unint64_t *)&qword_25787FEE0);
  }
  return result;
}

unint64_t sub_24974DF40()
{
  unint64_t result;

  result = qword_25787FEE8;
  if (!qword_25787FEE8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDiagnoseCategoryMask, &type metadata for UniversalControlDiagnoseCategoryMask);
    atomic_store(result, (unint64_t *)&qword_25787FEE8);
  }
  return result;
}

unint64_t sub_24974DF80()
{
  unint64_t result;

  result = qword_25787FEF0;
  if (!qword_25787FEF0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDiagnoseCategoryMask, &type metadata for UniversalControlDiagnoseCategoryMask);
    atomic_store(result, (unint64_t *)&qword_25787FEF0);
  }
  return result;
}

unint64_t sub_24974DFC0()
{
  unint64_t result;

  result = qword_25787FEF8;
  if (!qword_25787FEF8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDiagnoseCategoryMask, &type metadata for UniversalControlDiagnoseCategoryMask);
    atomic_store(result, (unint64_t *)&qword_25787FEF8);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for UniversalControlDiagnoseCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlDiagnoseCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_24974E0DC + 4 * byte_249838C00[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_24974E110 + 4 * byte_249838BFB[v4]))();
}

uint64_t sub_24974E110(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24974E118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24974E120);
  return result;
}

uint64_t sub_24974E12C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24974E134);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_24974E138(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24974E140(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24974E14C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_24974E154(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlDiagnoseCategory()
{
  return &type metadata for UniversalControlDiagnoseCategory;
}

ValueMetadata *type metadata accessor for UniversalControlDiagnoseCategoryMask()
{
  return &type metadata for UniversalControlDiagnoseCategoryMask;
}

void sub_24974E17C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E4A4();
  *v0 = v1;
}

void sub_24974E1B0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E9B8();
  *v0 = v1;
}

void sub_24974E1E4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E558();
  *v0 = v1;
}

void sub_24974E218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_24974E5EC(a1, a2, a3, *v3, &qword_25787FFB0, (void (*)(char *, int64_t, char *))sub_2497AC0F4);
  *v3 = v4;
}

void sub_24974E244()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E820();
  *v0 = v1;
}

void sub_24974E278()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E6B8();
  *v0 = v1;
}

void sub_24974E2AC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E6B8();
  *v0 = v1;
}

void sub_24974E2E0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E9B8();
  *v0 = v1;
}

void sub_24974E314()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E820();
  *v0 = v1;
}

void sub_24974E348()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E4A4();
  *v0 = v1;
}

void sub_24974E37C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E820();
  *v0 = v1;
}

void sub_24974E3B0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E9B8();
  *v0 = v1;
}

uint64_t sub_24974E3E4(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_24974E8B4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_24974E400(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_24974E760(a1, a2, a3, *v3);
  *v3 = v4;
}

void sub_24974E41C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_24974E9B8();
  *v0 = v1;
}

void sub_24974E450()
{
  sub_24974E558();
}

void sub_24974E46C()
{
  sub_24974E6B8();
}

void sub_24974E488()
{
  sub_24974E4A4();
}

void sub_24974E4A4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  char v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_8_1();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_20_1();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_14_1();
  if (v3)
  {
    OUTLINED_FUNCTION_19_1(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_18_1();
    OUTLINED_FUNCTION_17_1(v12);
  }
  v13 = OUTLINED_FUNCTION_16_1();
  if ((v2 & 1) != 0)
  {
    v1(v13);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_24974DA38(v13, v14);
  }
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_13_1();
}

void sub_24974E53C()
{
  sub_24974E558();
}

void sub_24974E558()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_8_1();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_20_1();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_14_1();
  if (v4)
  {
    OUTLINED_FUNCTION_19_1(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)OUTLINED_FUNCTION_18_1();
    OUTLINED_FUNCTION_17_1(v13);
  }
  v14 = OUTLINED_FUNCTION_16_1();
  if ((v3 & 1) != 0)
  {
    v2(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_13_1();
}

void sub_24974E5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(char *, int64_t, char *))
{
  char v8;
  int64_t v9;
  char v10;
  char v11;
  int64_t v12;
  int64_t v13;
  char *v14;
  size_t v15;
  char *v16;
  char *v17;

  v8 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_20_1();
      if (v10)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  else
  {
    v9 = a2;
  }
  v12 = *(_QWORD *)(a4 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(a4 + 16);
  else
    v13 = v9;
  if (v13)
  {
    OUTLINED_FUNCTION_19_1(a1, a2, a3, a4, a5);
    v14 = (char *)OUTLINED_FUNCTION_18_1();
    v15 = _swift_stdlib_malloc_size(v14);
    *((_QWORD *)v14 + 2) = v12;
    *((_QWORD *)v14 + 3) = 2 * v15 - 64;
  }
  else
  {
    v14 = (char *)MEMORY[0x24BEE4AF8];
  }
  v16 = v14 + 32;
  v17 = (char *)(a4 + 32);
  if ((v8 & 1) != 0)
  {
    a6(v17, v12, v16);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24974D5E4(v17, v12, v16);
  }
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_10_0();
}

void sub_24974E69C()
{
  sub_24974E6B8();
}

void sub_24974E6B8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_8_1();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_20_1();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_14_1();
  if (v5)
  {
    OUTLINED_FUNCTION_19_1(v9, v10, v11, v12, v13);
    v14 = (_QWORD *)OUTLINED_FUNCTION_18_1();
    v15 = _swift_stdlib_malloc_size(v14);
    v14[2] = v4;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 16);
  }
  v16 = OUTLINED_FUNCTION_16_1();
  if ((v3 & 1) != 0)
  {
    v2(v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v16);
  }
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_10_0();
}

void sub_24974E760(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_20_1();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF50);
    v11 = (char *)OUTLINED_FUNCTION_18_1();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 70);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    sub_2497AC098(v14, v9, v13);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24974D298((unint64_t)v14, v9, (unint64_t)v13);
  }
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_10_0();
}

void sub_24974E820()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_8_1();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_20_1();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_14_1();
  if (v4)
  {
    OUTLINED_FUNCTION_19_1(v8, v9, v10, v11, v12);
    v13 = (_QWORD *)OUTLINED_FUNCTION_18_1();
    OUTLINED_FUNCTION_17_1(v13);
  }
  v14 = OUTLINED_FUNCTION_16_1();
  if ((v3 & 1) != 0)
  {
    v2(v14);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14);
  }
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_13_1();
}

uint64_t sub_24974E8B4(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  char *v12;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF58);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  v12 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_2497AC258(v12, v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24974DC60((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

void sub_24974E99C()
{
  sub_24974E4A4();
}

void sub_24974E9B8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_8_1();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_20_1();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_14_1();
  if (v5)
  {
    OUTLINED_FUNCTION_19_1(v9, v10, v11, v12, v13);
    v14 = (_QWORD *)OUTLINED_FUNCTION_18_1();
    v15 = _swift_stdlib_malloc_size(v14);
    v14[2] = v4;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 32);
  }
  v16 = OUTLINED_FUNCTION_16_1();
  if ((v3 & 1) != 0)
  {
    v2(v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v16);
  }
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_10_0();
}

void *OUTLINED_FUNCTION_1_1(void *__dst, const void *__src, size_t __n)
{
  return memcpy(__dst, __src, __n);
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return sub_249837360();
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return sub_249837300();
}

void OUTLINED_FUNCTION_11_1(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_16_1()
{
  uint64_t v0;

  return v0 + 32;
}

size_t OUTLINED_FUNCTION_17_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t OUTLINED_FUNCTION_18_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_19_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName(a5);
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return sub_249836EC8();
}

void sub_24974EC20(uint64_t a1@<X0>, CGFloat *a2@<X8>)
{
  uint64_t IsNull;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  double *v9;
  _BOOL4 v10;
  uint64_t v11;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t j;
  double v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  double *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 *v41;
  __int128 v42;
  __int128 v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v54;
  _BYTE v55[33];
  _BYTE v56[41];
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  v3 = a1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  v4 = *(_QWORD *)(v3 + 32);
  v5 = MEMORY[0x24BEE4AF8];
  v54 = MEMORY[0x24BEE4AF8];
  if (v4 >> 62)
  {
    OUTLINED_FUNCTION_34_0();
    v6 = OUTLINED_FUNCTION_73();
    if (v6)
      goto LABEL_3;
LABEL_14:
    OUTLINED_FUNCTION_78();
    v8 = MEMORY[0x24BEE4AF8];
    goto LABEL_15;
  }
  v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  OUTLINED_FUNCTION_34_0();
  if (!v6)
    goto LABEL_14;
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_57;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_75();
    if ((sub_2497D01D8(3u) & 1) != 0
      && (sub_2497CF44C((uint64_t)v55), sub_249758320((uint64_t)v55, (uint64_t)v56), v56[32] != 1))
    {
      OUTLINED_FUNCTION_50();
    }
    else
    {
      sub_2498371D4();
      sub_249837204();
      sub_249837210();
      sub_2498371E0();
    }
  }
  OUTLINED_FUNCTION_78();
  v8 = v54;
LABEL_15:
  v9 = (double *)MEMORY[0x24BDBF070];
  v10 = v8 < 0 || (v8 & 0x4000000000000000) != 0;
  if (v10)
  {
    swift_retain();
    v11 = sub_249837324();
  }
  else
  {
    v11 = *(_QWORD *)(v8 + 16);
    swift_retain();
  }
  x = *v9;
  y = v9[1];
  width = v9[2];
  height = v9[3];
  if (!v11)
    goto LABEL_29;
  if (v11 < 1)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  for (j = 0; j != v11; ++j)
  {
    if ((v8 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_22_1();
    v57.origin.x = OUTLINED_FUNCTION_28_0();
    IsNull = CGRectIsNull(v57);
    v17 = sub_2497CFB08();
    v19 = v18;
    v21 = v20;
    v23 = v22;
    if ((IsNull & 1) != 0)
    {
      OUTLINED_FUNCTION_17_0();
      x = v17;
      y = v19;
      width = v21;
      height = v23;
    }
    else
    {
      v58.origin.x = OUTLINED_FUNCTION_28_0();
      v60.origin.x = v17;
      v60.origin.y = v19;
      v60.size.width = v21;
      v60.size.height = v23;
      v59 = CGRectUnion(v58, v60);
      x = v59.origin.x;
      y = v59.origin.y;
      width = v59.size.width;
      height = v59.size.height;
      OUTLINED_FUNCTION_17_0();
    }
  }
LABEL_29:
  OUTLINED_FUNCTION_65();
  if (v10)
  {
    OUTLINED_FUNCTION_34_0();
    v24 = sub_249837324();
    OUTLINED_FUNCTION_65();
    if (v24)
      goto LABEL_31;
LABEL_40:
    OUTLINED_FUNCTION_65();
    v25 = MEMORY[0x24BEE4AF8];
    goto LABEL_41;
  }
  v24 = *(_QWORD *)(v8 + 16);
  if (!v24)
    goto LABEL_40;
LABEL_31:
  sub_24974E1B0();
  if (v24 < 0)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  IsNull = 0;
  v25 = v5;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_22_1();
    v26 = sub_2497CFB08();
    v28 = v27;
    v30 = v29;
    v32 = v31;
    OUTLINED_FUNCTION_17_0();
    v34 = *(_QWORD *)(v5 + 16);
    v33 = *(_QWORD *)(v5 + 24);
    if (v34 >= v33 >> 1)
    {
      OUTLINED_FUNCTION_80(v33);
      sub_24974E1B0();
    }
    ++IsNull;
    *(_QWORD *)(v5 + 16) = v34 + 1;
    v35 = (double *)(v5 + 32 * v34);
    v35[4] = v26;
    *((_QWORD *)v35 + 5) = v28;
    *((_QWORD *)v35 + 6) = v30;
    *((_QWORD *)v35 + 7) = v32;
  }
  while (v24 != IsNull);
  OUTLINED_FUNCTION_65();
LABEL_41:
  v36 = sub_249784234(v25);
  v37 = *(_QWORD *)(v3 + 32);
  if (!(v37 >> 62))
  {
    v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v38)
      goto LABEL_43;
LABEL_54:
    swift_bridgeObjectRelease();
    v40 = MEMORY[0x24BEE4AF8];
LABEL_55:
    v49 = sub_24974F104(v40, &qword_2578800F8, (void (*)(uint64_t, uint64_t, uint64_t *))sub_2497563BC);
    swift_release();
    *a2 = x;
    a2[1] = y;
    a2[2] = width;
    a2[3] = height;
    *((_QWORD *)a2 + 4) = v36;
    *((_QWORD *)a2 + 5) = a1;
    *((_QWORD *)a2 + 6) = v49;
    return;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  v38 = OUTLINED_FUNCTION_73();
  if (!v38)
    goto LABEL_54;
LABEL_43:
  sub_24974E17C();
  if ((v38 & 0x8000000000000000) == 0)
  {
    v39 = 0;
    v40 = v5;
    do
    {
      if ((v37 & 0xC000000000000001) != 0)
        IsNull = MEMORY[0x24BCF8148](v39, v37);
      else
        OUTLINED_FUNCTION_75();
      v41 = (__int128 *)(IsNull + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      OUTLINED_FUNCTION_16();
      v42 = *v41;
      v43 = v41[1];
      v45 = *(_QWORD *)(v40 + 16);
      v44 = *(_QWORD *)(v40 + 24);
      if (v45 >= v44 >> 1)
      {
        OUTLINED_FUNCTION_80(v44);
        v50 = v48;
        v51 = v47;
        sub_24974E17C();
        v43 = v50;
        v42 = v51;
      }
      ++v39;
      *(_QWORD *)(v40 + 16) = v45 + 1;
      v46 = v40 + 40 * v45;
      *(_OWORD *)(v46 + 32) = v42;
      *(_OWORD *)(v46 + 48) = v43;
      *(_QWORD *)(v46 + 64) = IsNull;
    }
    while (v38 != v39);
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
LABEL_59:
  __break(1u);
}

uint64_t sub_24974F104(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v6 = sub_249837354();
  }
  else
  {
    v6 = MEMORY[0x24BEE4B00];
  }
  v9 = v6;
  a3(a1, 1, &v9);
  v7 = v9;
  if (v3)
    swift_release();
  return v7;
}

void UniversalControlDisplaySolver0.__allocating_init<A>(links:devices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_18_1();
  UniversalControlDisplaySolver0.init<A>(links:devices:)(a1, a2, a3, a4);
  OUTLINED_FUNCTION_10_0();
}

uint64_t UniversalControlDisplaySolver0.init<A>(links:devices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = v4;
  *(_QWORD *)(v5 + 16) = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880000);
  v10 = sub_24974F328((void (*)(char *, char *))sub_24974F29C, 0, a3, v8, MEMORY[0x24BEE4078], a4, MEMORY[0x24BEE40A8], v9);
  v11 = sub_24974F104(v10, &qword_2578812A0, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249756874);
  OUTLINED_FUNCTION_79(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8));
  *(_QWORD *)(v5 + 24) = v11;
  return v5;
}

double sub_24974F29C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD *v3;
  uint64_t v4;
  __int128 v5;
  double result;
  _OWORD v7[2];
  __int128 v8;
  uint64_t v9;

  v3 = (_OWORD *)(*a1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
  swift_beginAccess();
  *(_OWORD *)a2 = *v3;
  v4 = swift_retain();
  sub_24974EC20(v4, (CGFloat *)v7);
  v5 = v7[1];
  *(_OWORD *)(a2 + 16) = v7[0];
  *(_OWORD *)(a2 + 32) = v5;
  result = *(double *)&v8;
  *(_OWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 64) = v9;
  return result;
}

uint64_t sub_24974F328(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  char *v31;
  uint64_t v32;
  int EnumTagSinglePayload;
  char *v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  void (*v52)(char *, char *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v38 = a8;
  v39 = a5;
  v9 = v8;
  v52 = a1;
  v53 = a2;
  v37 = *(_QWORD *)(a5 - 8);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v51 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v50 = (char *)v36 - v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v54 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v42 = (char *)v36 - v17;
  v18 = sub_2498370A8();
  v40 = *(_QWORD *)(v18 - 8);
  v41 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v48 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v36 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v36[1] = (char *)v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v47 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v46 = (char *)v36 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a6;
  v55 = swift_getAssociatedTypeWitness();
  v43 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v49 = (char *)v36 - v28;
  v29 = sub_249836E5C();
  v56 = sub_249837228();
  sub_249837234();
  sub_2498371EC();
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v44, v15);
  v47 = v15;
  result = sub_249836E50();
  if (v29 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v29)
  {
    swift_getAssociatedConformanceWitness();
    v31 = v49;
    while (1)
    {
      sub_2498370C0();
      result = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v52(v23, v51);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v55);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v38, v51, v39);
        return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v23, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v23, AssociatedTypeWitness);
      sub_24983721C();
      if (!--v29)
      {
        v32 = (uint64_t)v48;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v32 = (uint64_t)v48;
  v31 = v49;
LABEL_9:
  sub_2498370C0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v32, 1, AssociatedTypeWitness);
  v34 = v42;
  if (EnumTagSinglePayload == 1)
  {
    v35 = (uint64_t)v48;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v55);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v41);
    return v56;
  }
  else
  {
    v51 = *(char **)(v54 + 32);
    v35 = (uint64_t)v48;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v51)(v34, v35, AssociatedTypeWitness);
      v52(v34, v50);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v34, AssociatedTypeWitness);
      sub_24983721C();
      sub_2498370C0();
      if (__swift_getEnumTagSinglePayload(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v34, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v55);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v38, v50, v39);
  }
}

uint64_t UniversalControlDisplaySolver0.__allocating_init<A>(links:devices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _WORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  __int16 v21;
  __int16 v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v10 + 16);
  if (v13)
  {
    v38 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    v39 = a4;
    v40 = v9;
    v41 = v6;
    v42 = v4;
    v43 = a2;
    v44 = MEMORY[0x24BEE4AF8];
    sub_24974E1E4();
    v14 = v44;
    v37 = a1;
    v15 = (_WORD *)(a1 + 100);
    do
    {
      v16 = *(_OWORD *)(v15 - 34);
      v17 = *(_OWORD *)(v15 - 26);
      v18 = *(_OWORD *)(v15 - 18);
      v19 = *(_OWORD *)(v15 - 10);
      v20 = *((_BYTE *)v15 - 4);
      v21 = *(v15 - 1);
      v22 = *v15;
      v44 = v14;
      v24 = *(_QWORD *)(v14 + 16);
      v23 = *(_QWORD *)(v14 + 24);
      if (v24 >= v23 >> 1)
      {
        OUTLINED_FUNCTION_80(v23);
        v35 = v27;
        v36 = v26;
        v33 = v29;
        v34 = v28;
        sub_24974E1E4();
        v19 = v33;
        v18 = v34;
        v17 = v35;
        v16 = v36;
        v14 = v44;
      }
      v15 += 35;
      *(_QWORD *)(v14 + 16) = v24 + 1;
      v25 = v14 + 80 * v24;
      *(_OWORD *)(v25 + 32) = v16;
      *(_OWORD *)(v25 + 48) = v17;
      *(_OWORD *)(v25 + 64) = v18;
      *(_OWORD *)(v25 + 80) = v19;
      *(_BYTE *)(v25 + 96) = v20;
      *(_WORD *)(v25 + 98) = v21;
      *(_WORD *)(v25 + 100) = v22;
      *(_QWORD *)(v25 + 104) = 0;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    a2 = v43;
    v9 = v40;
    v6 = v41;
    v12 = v38;
    a4 = v39;
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v6);
  UniversalControlDisplaySolver0.__allocating_init<A>(links:devices:)(v14, (uint64_t)v12, v6, a4);
  v31 = v30;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v6);
  return v31;
}

void UniversalControlDisplaySolver0.__allocating_init<A>(config:devices:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v12[2];

  v7 = *(_QWORD *)(a3 - 8);
  v8 = (_QWORD *)MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[1] = *v8;
  v11 = UniversalControlConfiguration.links()();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, a3);
  UniversalControlDisplaySolver0.__allocating_init<A>(links:devices:)(v11, (uint64_t)v10, a3, a4);
  OUTLINED_FUNCTION_79(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  OUTLINED_FUNCTION_13_1();
}

uint64_t sub_24974FAA8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char v98;
  char v99;
  char v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  _BYTE *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  uint64_t v148;
  _BYTE *v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  char v167;
  char v168;
  char v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char v174;
  char v175;
  char v176;
  char v177;
  char v178;
  char v179;
  char v180;
  char v181;
  char v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  unint64_t v186;
  unint64_t v187;
  char v188;
  char v189;
  char v190;
  char v191;
  char v192;
  char v193;
  char v194;
  char v195;
  char v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  char v202;
  char v203;
  char v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  char v213;
  char v214;
  char v215;
  char v216;
  char v217;
  char v218;
  char v219;
  char v220;
  char v221;
  char v222;
  char v223;
  char v224;
  char v225;
  char v226;
  char v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char v233;
  unint64_t v234;
  unint64_t v235;
  char v236;
  char v237;
  char v238;
  char v239;
  char v240;
  char v241;
  char v242;
  char v243;
  char v244;
  char v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char v260;
  uint64_t v261;
  uint64_t v262;
  char v263;
  uint64_t v264;
  uint64_t v265;
  char v266;
  uint64_t v267;
  uint64_t result;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char v306;
  uint64_t v307;
  char v308;
  char v309;
  char v310;
  char v311;
  char v312;
  char v313;
  char v314;
  char v315;
  char v316;
  char v317;
  char v318;
  char v319;
  char v320;
  char v321;
  char v322;
  char v323;
  char v324;
  char v325;
  char v326;
  char v327;
  char v328;
  char v329;
  char v330;
  char v331;
  char v332;
  char v333;
  char v334;
  char v335;
  char v336;
  char v337;
  char v338;
  char v339;
  char v340;
  char v341;
  char v342;
  char v343;
  uint64_t v344;
  char v345;
  char v346;
  char v347;
  char v348;
  char v349;
  char v350;
  char v351;
  char v352;
  char v353;
  char v354;
  char v355;
  char v356;
  char v357;
  char v358;
  char v359;
  char v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  char v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  unsigned int v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  unsigned int v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  char v442[8];
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  char v448;
  char __s1[8];
  char v450;
  char v451;
  char v452;
  char v453;
  char v454;
  char v455;
  char v456;
  char v457;
  _QWORD v458[7];
  _QWORD v459[7];
  _QWORD v460[27];

  v460[25] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  if (v1)
  {
    v270 = swift_bridgeObjectRetain();
    v2 = (unsigned __int8 *)(v270 + 52);
    v392 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v364 = v1;
      v3 = *(v2 - 20);
      v4 = *(v2 - 19);
      v5 = *(v2 - 18);
      v6 = *(v2 - 17);
      v7 = *(v2 - 16);
      v8 = *(v2 - 15);
      v9 = *(v2 - 14);
      v10 = *(v2 - 13);
      v11 = *(v2 - 12);
      v12 = *(v2 - 11);
      v13 = *(v2 - 10);
      v14 = *(v2 - 9);
      v15 = *(v2 - 8);
      v16 = *(v2 - 7);
      v17 = *(v2 - 6);
      v18 = *(v2 - 5);
      v394 = *(v2 - 4);
      v395 = *(v2 - 3);
      v404 = *(v2 - 2);
      v405 = *(v2 - 1);
      v19 = *v2;
      v20 = v2[1];
      v21 = v2[2];
      v22 = v2[3];
      v23 = v2[4];
      v24 = v2[5];
      v25 = v2[6];
      v26 = v2[7];
      v27 = v2[8];
      v28 = v2[9];
      v29 = v2[10];
      v30 = *(_QWORD *)(v2 + 52);
      v418 = v2[11];
      v397 = v2[12];
      v398 = v2[13];
      v399 = v2[14];
      v400 = v2[15];
      v401 = v2[16];
      v402 = v2[17];
      v403 = v2[18];
      v428 = v2[19];
      v429 = v2[20];
      v430 = v2[21];
      v431 = v2[22];
      v432 = v2[23];
      v407 = v2[24];
      v433 = v2[25];
      v434 = v2[26];
      v435 = v2[27];
      v382 = v2[28];
      v384 = v2[29];
      v388 = v2[30];
      v376 = v2[31];
      v368 = v2[32];
      v369 = v2[33];
      v370 = v2[34];
      v371 = v2[35];
      v372 = v2[36];
      v373 = v2[37];
      v374 = v2[38];
      v375 = v2[39];
      v380 = v2[40];
      v362 = v2[41];
      v381 = v2[42];
      v363 = v2[43];
      v396 = v2[44];
      v391 = *((unsigned __int16 *)v2 + 23);
      v365 = (uint64_t)v2;
      v383 = *((unsigned __int16 *)v2 + 24);
      v31 = *(_QWORD *)(v304 + 24);
      v448 = v4;
      v426 = v29;
      v425 = v28;
      v406 = v27;
      v427 = v26;
      v417 = v25;
      v416 = v24;
      v415 = v23;
      v414 = v22;
      v413 = v21;
      v412 = v20;
      v411 = v19;
      v422 = v18;
      v424 = v16;
      v421 = v15;
      v423 = v14;
      v420 = v13;
      v437 = v12;
      v440 = v10;
      v439 = v9;
      v438 = v8;
      v444 = v7;
      v443 = v6;
      v445 = v5;
      *(_QWORD *)v442 = v3;
      if (*(_QWORD *)(v31 + 16))
      {
        v32 = sub_2497F1F1C();
        v33 = v17;
        if ((v34 & 1) != 0)
        {
          v35 = (uint64_t *)(*(_QWORD *)(v31 + 56) + 56 * v32);
          v7 = *v35;
          v3 = v35[1];
          v36 = v35[2];
          v37 = v35[3];
          v38 = v35[4];
          v39 = v35[5];
          OUTLINED_FUNCTION_34_0();
          OUTLINED_FUNCTION_77();
          OUTLINED_FUNCTION_43_0();
        }
        else
        {
          v36 = 0;
          v37 = 0;
          v38 = 0;
          v39 = 0;
        }
        OUTLINED_FUNCTION_30_0();
      }
      else
      {
        v36 = 0;
        v38 = 0;
        v39 = 0;
        OUTLINED_FUNCTION_30_0();
        v33 = v17;
        v37 = 0;
      }
      v408 = v40;
      v410 = v33;
      v441 = v11;
      v379 = v39;
      v409 = v41;
      v393 = v42;
      if (*(_QWORD *)(v31 + 16))
      {
        v43 = sub_2497F1F1C();
        if ((v44 & 1) != 0)
        {
          v45 = (uint64_t *)(*(_QWORD *)(v31 + 56) + 56 * v43);
          v46 = *v45;
          v419 = v45[1];
          v47 = v45[2];
          v436 = v45[3];
          v48 = v37;
          v49 = v38;
          v50 = v36;
          v7 = v45[4];
          v51 = v45[5];
          v31 = v45[6];
          swift_bridgeObjectRetain();
          v447 = v51;
          v36 = v50;
          v38 = v49;
          swift_retain();
          OUTLINED_FUNCTION_24();
          v52 = v47;
          v3 = v46;
          v39 = v379;
          v37 = v48;
        }
        else
        {
          OUTLINED_FUNCTION_42_0();
        }
        v53 = v408;
        v54 = v409;
        v55 = v393;
      }
      else
      {
        OUTLINED_FUNCTION_42_0();
      }
      v446 = v31;
      if (v38)
      {
        v459[0] = v53;
        v459[1] = v54;
        v459[2] = v36;
        v459[3] = v37;
        v459[4] = v38;
        v459[5] = v39;
        v459[6] = v55;
        v385 = v36;
        v389 = v52;
        v386 = v3;
        v377 = v38;
        if (!v7)
        {
          v82 = v55;
          if (*(_QWORD *)(v55 + 16))
          {
            OUTLINED_FUNCTION_26_1();
            v85 = v83 | (v84 << 56);
            v87 = v86 | (v420 << 16) | (v423 << 24) | (v421 << 32) | (v424 << 40) | (v33 << 48) | (v422 << 56);
            OUTLINED_FUNCTION_15_1();
            v90 = v88 | (v89 << 56);
            OUTLINED_FUNCTION_25_1();
            v92 = v37;
            v93 = v91 | (v426 << 48) | (v418 << 56);
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_77();
            OUTLINED_FUNCTION_43_0();
            v94 = v85;
            v95 = v93;
            v38 = v377;
            v96 = v82;
            sub_2497F2068(v94, v87, v90, v95);
            if ((v97 & 1) != 0)
            {
              OUTLINED_FUNCTION_66();
              OUTLINED_FUNCTION_9_2();
              v98 = OUTLINED_FUNCTION_55();
              v33 = sub_249784104(v98, v377);
              OUTLINED_FUNCTION_17_0();
              if ((v33 & 1) != 0)
              {
                v99 = v425;
                v33 = v406;
                v100 = v422;
                goto LABEL_44;
              }
            }
          }
          else
          {
            OUTLINED_FUNCTION_34_0();
            OUTLINED_FUNCTION_77();
            OUTLINED_FUNCTION_43_0();
          }
          v92 = v37;
          OUTLINED_FUNCTION_72(v408, v409, v385, v37, v38);
          v127 = OUTLINED_FUNCTION_43_0();
          v96 = OUTLINED_FUNCTION_57(v127, (uint64_t)v459, v396);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_24();
          sub_249753CAC();
          OUTLINED_FUNCTION_17_0();
          OUTLINED_FUNCTION_44();
          if (v33)
            goto LABEL_94;
          OUTLINED_FUNCTION_17_0();
          if (*(_QWORD *)(*(_QWORD *)__s1 + 16))
          {
            v96 = *(_QWORD *)(*(_QWORD *)__s1 + 64);
            OUTLINED_FUNCTION_22_1();
            swift_release();
            v128 = (char *)(v96 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
            OUTLINED_FUNCTION_16();
            v442[0] = *v128;
            v448 = v128[1];
            LOBYTE(v445) = v128[2];
            LOBYTE(v443) = v128[3];
            LOBYTE(v444) = v128[4];
            LOBYTE(v438) = v128[5];
            LOBYTE(v439) = v128[6];
            LOBYTE(v440) = v128[7];
            LOBYTE(v441) = v128[8];
            LOBYTE(v437) = v128[9];
            LOBYTE(v420) = v128[10];
            LOBYTE(v423) = v128[11];
            LOBYTE(v421) = v128[12];
            LOBYTE(v424) = v128[13];
            LOBYTE(v410) = v128[14];
            v100 = v128[15];
            LOBYTE(v394) = v128[16];
            LOBYTE(v395) = v128[17];
            LOBYTE(v404) = v128[18];
            LOBYTE(v405) = v128[19];
            LOBYTE(v411) = v128[20];
            LOBYTE(v412) = v128[21];
            LOBYTE(v413) = v128[22];
            LOBYTE(v414) = v128[23];
            LOBYTE(v415) = v128[24];
            LOBYTE(v416) = v128[25];
            LOBYTE(v417) = v128[26];
            LOBYTE(v427) = v128[27];
            v33 = v128[28];
            v99 = v128[29];
            LOBYTE(v426) = v128[30];
            LOBYTE(v418) = v128[31];
            OUTLINED_FUNCTION_17_0();
LABEL_44:
            v129 = v436;
            if ((OUTLINED_FUNCTION_41_0() & 1) == 0)
            {
              OUTLINED_FUNCTION_3_2();
              sub_249752F10();
              v392 = v254;
            }
            OUTLINED_FUNCTION_40_0();
            v131 = v389;
            v132 = v405;
            v133 = v404;
            v134 = v395;
            v135 = v394;
            v136 = v381;
            v137 = v362;
            v138 = v380;
            v139 = v375;
            v140 = v374;
            v141 = v373;
            v142 = v372;
            v143 = v371;
            v144 = v370;
            v145 = v368;
            v146 = v384;
            if (v147)
            {
              OUTLINED_FUNCTION_8_2(v130);
              sub_249752F10();
              OUTLINED_FUNCTION_6_1();
              v145 = v255;
              v136 = v381;
              v135 = v394;
              v134 = v395;
              v133 = v404;
              v132 = v405;
              v392 = v256;
              v146 = v384;
            }
            v148 = v92;
            *(_QWORD *)(v392 + 16) = v96;
            v149 = (_BYTE *)(v392 + 80 * v33);
            v149[32] = v442[0];
            v149[33] = v448;
            v149[34] = v445;
            v149[35] = v443;
            v149[36] = v444;
            v149[37] = v438;
            v149[38] = v439;
            v149[39] = v440;
            v149[40] = v441;
            v149[41] = v437;
            v149[42] = v420;
            v149[43] = v423;
            v149[44] = v421;
            v149[45] = v424;
            v149[46] = v410;
            v149[47] = v100;
            v149[48] = v135;
            v149[49] = v134;
            v149[50] = v133;
            v149[51] = v132;
            v149[52] = v411;
            v149[53] = v412;
            v149[54] = v413;
            v149[55] = v414;
            v149[56] = v415;
            v149[57] = v416;
            v149[58] = v417;
            v149[59] = v427;
            v149[60] = v33;
            v149[61] = v99;
            v149[62] = v426;
            v149[63] = v418;
            v149[64] = v397;
            v149[65] = v398;
            v149[66] = v399;
            v149[67] = v400;
            v149[68] = v401;
            v149[69] = v402;
            v149[70] = v403;
            v149[71] = v428;
            v149[72] = v429;
            v149[73] = v430;
            v149[74] = v431;
            v149[75] = v432;
            v149[76] = v407;
            v149[77] = v433;
            v149[78] = v434;
            v149[79] = v435;
            v149[80] = v382;
            v149[81] = v146;
            v149[82] = v388;
            v149[83] = v376;
            v149[84] = v145;
            v149[85] = v369;
            v149[86] = v144;
            v149[87] = v143;
            v149[88] = v142;
            v149[89] = v141;
            v149[90] = v140;
            v149[91] = v139;
            v149[92] = v138;
            v149[93] = v137;
            v149[94] = v136;
            OUTLINED_FUNCTION_11_2((uint64_t)v149);
            v150 = OUTLINED_FUNCTION_39_0();
            v152 = v385;
          }
          else
          {
            swift_release();
            if ((OUTLINED_FUNCTION_41_0() & 1) == 0)
            {
              OUTLINED_FUNCTION_3_2();
              sub_249752F10();
              v392 = v262;
            }
            v129 = v436;
            OUTLINED_FUNCTION_40_0();
            v148 = v37;
            v154 = v405;
            v155 = v404;
            v156 = v395;
            v157 = v394;
            v158 = v363;
            v159 = v381;
            v160 = v362;
            v161 = v380;
            v162 = v375;
            v163 = v374;
            v164 = v373;
            v165 = v372;
            v166 = v371;
            v167 = v370;
            v168 = v368;
            v169 = v384;
            if (v147)
            {
              OUTLINED_FUNCTION_8_2(v153);
              sub_249752F10();
              OUTLINED_FUNCTION_6_1();
              v168 = v263;
              v159 = v381;
              v158 = v363;
              v157 = v394;
              v156 = v395;
              v155 = v404;
              v154 = v405;
              v392 = v264;
              v169 = v384;
            }
            v152 = v385;
            v131 = v389;
            *(_QWORD *)(v392 + 16) = v96;
            *(_BYTE *)(v392 + 32) = v442[0];
            *(_BYTE *)(v392 + 33) = v448;
            *(_BYTE *)(v392 + 34) = v445;
            *(_BYTE *)(v392 + 35) = v443;
            *(_BYTE *)(v392 + 36) = v444;
            *(_BYTE *)(v392 + 37) = v438;
            *(_BYTE *)(v392 + 38) = v439;
            *(_BYTE *)(v392 + 39) = v440;
            *(_BYTE *)(v392 + 40) = v441;
            *(_BYTE *)(v392 + 41) = v437;
            *(_BYTE *)(v392 + 42) = v420;
            *(_BYTE *)(v392 + 43) = v423;
            *(_BYTE *)(v392 + 44) = v421;
            *(_BYTE *)(v392 + 45) = v424;
            *(_BYTE *)(v392 + 46) = v410;
            *(_BYTE *)(v392 + 47) = v422;
            *(_BYTE *)(v392 + 48) = v157;
            *(_BYTE *)(v392 + 49) = v156;
            *(_BYTE *)(v392 + 50) = v155;
            *(_BYTE *)(v392 + 51) = v154;
            *(_BYTE *)(v392 + 52) = v411;
            *(_BYTE *)(v392 + 53) = v412;
            *(_BYTE *)(v392 + 54) = v413;
            *(_BYTE *)(v392 + 55) = v414;
            *(_BYTE *)(v392 + 56) = v415;
            *(_BYTE *)(v392 + 57) = v416;
            *(_BYTE *)(v392 + 58) = v417;
            *(_BYTE *)(v392 + 59) = v427;
            *(_BYTE *)(v392 + 60) = v406;
            *(_BYTE *)(v392 + 61) = v425;
            *(_BYTE *)(v392 + 62) = v426;
            *(_BYTE *)(v392 + 63) = v418;
            *(_BYTE *)(v392 + 64) = v397;
            *(_BYTE *)(v392 + 65) = v398;
            *(_BYTE *)(v392 + 66) = v399;
            *(_BYTE *)(v392 + 67) = v400;
            *(_BYTE *)(v392 + 68) = v401;
            *(_BYTE *)(v392 + 69) = v402;
            *(_BYTE *)(v392 + 70) = v403;
            *(_BYTE *)(v392 + 71) = v428;
            *(_BYTE *)(v392 + 72) = v429;
            *(_BYTE *)(v392 + 73) = v430;
            *(_BYTE *)(v392 + 74) = v431;
            *(_BYTE *)(v392 + 75) = v432;
            *(_BYTE *)(v392 + 76) = v407;
            *(_BYTE *)(v392 + 77) = v433;
            *(_BYTE *)(v392 + 78) = v434;
            *(_BYTE *)(v392 + 79) = v435;
            *(_BYTE *)(v392 + 80) = v382;
            *(_BYTE *)(v392 + 81) = v169;
            *(_BYTE *)(v392 + 82) = v388;
            *(_BYTE *)(v392 + 83) = v376;
            *(_BYTE *)(v392 + 84) = v168;
            *(_BYTE *)(v392 + 85) = v369;
            *(_BYTE *)(v392 + 86) = v167;
            *(_BYTE *)(v392 + 87) = v166;
            *(_BYTE *)(v392 + 88) = v165;
            *(_BYTE *)(v392 + 89) = v164;
            *(_BYTE *)(v392 + 90) = v163;
            *(_BYTE *)(v392 + 91) = v162;
            *(_BYTE *)(v392 + 92) = v161;
            *(_BYTE *)(v392 + 93) = v160;
            *(_BYTE *)(v392 + 94) = v159;
            *(_BYTE *)(v392 + 95) = v158;
            *(_BYTE *)(v392 + 96) = v396;
            *(_WORD *)(v392 + 98) = v391;
            *(_WORD *)(v392 + 100) = v383;
            *(_QWORD *)(v392 + 104) = v30;
            v150 = OUTLINED_FUNCTION_39_0();
          }
          OUTLINED_FUNCTION_54(v150, v151, v152, v148);
          OUTLINED_FUNCTION_54(v33, v96, v152, v148);
          v122 = v386;
          v123 = v419;
          v124 = v131;
          v125 = v129;
          v126 = 0;
          goto LABEL_87;
        }
        v458[0] = v3;
        v458[1] = v419;
        v458[2] = v52;
        v56 = v37;
        v458[3] = v436;
        v458[4] = v7;
        v57 = v52;
        v458[5] = v447;
        v458[6] = v31;
        v58 = *(_QWORD *)(v55 + 16);
        v361 = v56;
        sub_249756E48(v53, v54, v36, v56, v38);
        OUTLINED_FUNCTION_70(v3, v419, v57, v436, v7);
        v59 = v424;
        if (!v58)
          goto LABEL_24;
        OUTLINED_FUNCTION_26_1();
        OUTLINED_FUNCTION_15_1();
        OUTLINED_FUNCTION_25_1();
        sub_2497F2068(v61, v62, v63, v60 | (v426 << 48) | (v418 << 56));
        if ((v64 & 1) == 0)
          goto LABEL_24;
        OUTLINED_FUNCTION_66();
        OUTLINED_FUNCTION_9_2();
        v65 = OUTLINED_FUNCTION_55();
        v66 = sub_249784104(v65, v38);
        OUTLINED_FUNCTION_17_0();
        if ((v66 & 1) != 0)
        {
          v366 = v7;
          v67 = v422;
          v68 = v423;
          v69 = v410;
          v70 = v421;
          v71 = v420;
          v72 = v437;
          v73 = v4;
          v74 = *(_QWORD *)v442;
        }
        else
        {
LABEL_24:
          OUTLINED_FUNCTION_72(v408, v409, v385, v361, v38);
          v76 = OUTLINED_FUNCTION_43_0();
          v77 = OUTLINED_FUNCTION_57(v76, (uint64_t)v459, v396);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_24();
          sub_249753CAC();
          v79 = v78;
          OUTLINED_FUNCTION_17_0();
          *(_QWORD *)__s1 = v79;
          sub_249752BDC((uint64_t *)__s1);
          if (v426)
            goto LABEL_94;
          OUTLINED_FUNCTION_17_0();
          if (!*(_QWORD *)(*(_QWORD *)__s1 + 16))
          {
            OUTLINED_FUNCTION_50();
            v120 = OUTLINED_FUNCTION_39_0();
            sub_249753EAC(v120, v121, v385, v361, v38);
            OUTLINED_FUNCTION_46(v386, v419, v389, v436, v7);
            sub_249753EAC(0, v77, v385, v361, v38);
            v122 = v386;
            v123 = v419;
            v124 = v389;
            v125 = v436;
            v126 = v7;
            goto LABEL_87;
          }
          v366 = v7;
          v80 = *(_QWORD *)(*(_QWORD *)__s1 + 64);
          OUTLINED_FUNCTION_22_1();
          OUTLINED_FUNCTION_50();
          v81 = (unsigned __int8 *)(v80 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
          OUTLINED_FUNCTION_16();
          v73 = v81[1];
          v445 = v81[2];
          v443 = v81[3];
          v444 = v81[4];
          v438 = v81[5];
          v439 = v81[6];
          v440 = v81[7];
          v441 = v81[8];
          v72 = v81[9];
          v71 = v81[10];
          v68 = v81[11];
          v70 = v81[12];
          v59 = v81[13];
          v69 = v81[14];
          v67 = v81[15];
          v394 = v81[16];
          v395 = v81[17];
          v404 = v81[18];
          v405 = v81[19];
          v411 = v81[20];
          v412 = v81[21];
          v413 = v81[22];
          v414 = v81[23];
          v415 = v81[24];
          v416 = v81[25];
          v417 = v81[26];
          v427 = v81[27];
          v406 = v81[28];
          v74 = *v81;
          OUTLINED_FUNCTION_17_0();
        }
        OUTLINED_FUNCTION_16();
        __s1[0] = v74;
        __s1[1] = v73;
        OUTLINED_FUNCTION_45_0();
        OUTLINED_FUNCTION_49();
        v450 = v441;
        v451 = v72;
        v452 = v71;
        v453 = v68;
        v454 = v70;
        v455 = v59;
        v456 = v69;
        v457 = v67;
        if (OUTLINED_FUNCTION_32_0())
          __asm { BR              X8 }
        v360 = v74;
        v359 = v73;
        v357 = v445;
        v353 = v444;
        v355 = v443;
        v349 = v439;
        v351 = v438;
        v345 = v441;
        v347 = v440;
        v341 = v71;
        v343 = v72;
        v337 = v70;
        v339 = v68;
        v333 = v69;
        v335 = v59;
        v329 = v394;
        v331 = v67;
        v325 = v404;
        v327 = v395;
        v321 = v411;
        v323 = v405;
        v317 = v413;
        v319 = v412;
        v313 = v415;
        v315 = v414;
        v310 = v417;
        v311 = v416;
        v308 = v406;
        v309 = v427;
        OUTLINED_FUNCTION_67();
        LODWORD(v303) = v396;
        if (*(_QWORD *)(v446 + 16))
        {
          OUTLINED_FUNCTION_51(v74 | (v73 << 8) | (v445 << 16) | (v443 << 24) | (v444 << 32) | (v438 << 40) | (v439 << 48) | (v440 << 56), v441 | (v72 << 8) | (v71 << 16) | (v68 << 24) | (v70 << 32) | (v59 << 40) | (v69 << 48) | (v67 << 56), v394 | (v395 << 8) | (v404 << 16) | (v405 << 24) | (v411 << 32) | (v412 << 40) | (v413 << 48) | (v414 << 56), v415 | (v416 << 8) | (v417 << 16) | (v427 << 24) | (v406 << 32) | (v307 << 40), v269, v270, v271, v272, v273, v274, v275, v276, v277, v278, v279, v280, v281, v282, v283,
            v284,
            v285,
            v286,
            v287,
            v288,
            v289,
            v290,
            v291,
            v292,
            v293,
            v294,
            v295,
            v296,
            v297,
            v298,
            v299,
            v300,
            v301,
            v302,
            v303,
            v304,
            v305);
          if ((v170 & 1) != 0)
          {
            OUTLINED_FUNCTION_66();
            OUTLINED_FUNCTION_9_2();
            OUTLINED_FUNCTION_28_0();
            sub_249784104(v303, v366);
            OUTLINED_FUNCTION_61();
            if ((v70 & 1) != 0)
              goto LABEL_61;
          }
        }
        OUTLINED_FUNCTION_70(v386, v419, v389, v436, v366);
        v171 = OUTLINED_FUNCTION_24();
        OUTLINED_FUNCTION_57(v171, (uint64_t)v458, v303);
        OUTLINED_FUNCTION_58();
        OUTLINED_FUNCTION_24();
        sub_249753CAC();
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_44();
        if (v74)
          goto LABEL_94;
        OUTLINED_FUNCTION_17_0();
        if (*(_QWORD *)(*(_QWORD *)__s1 + 16))
        {
          v172 = *(_QWORD *)(*(_QWORD *)__s1 + 64);
          OUTLINED_FUNCTION_22_1();
          swift_release();
          v173 = (char *)(v172 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
          OUTLINED_FUNCTION_16();
          v360 = *v173;
          v359 = v173[1];
          v357 = v173[2];
          v355 = v173[3];
          v353 = v173[4];
          v351 = v173[5];
          v349 = v173[6];
          v347 = v173[7];
          v345 = v173[8];
          v343 = v173[9];
          v341 = v173[10];
          v339 = v173[11];
          v337 = v173[12];
          v335 = v173[13];
          v333 = v173[14];
          v331 = v173[15];
          v329 = v173[16];
          v327 = v173[17];
          v325 = v173[18];
          v323 = v173[19];
          v321 = v173[20];
          v319 = v173[21];
          v317 = v173[22];
          v315 = v173[23];
          v313 = v173[24];
          v311 = v173[25];
          v310 = v173[26];
          v309 = v173[27];
          v308 = v173[28];
          v307 = v173[29];
          v306 = v173[30];
          v305 = v173[31];
          OUTLINED_FUNCTION_17_0();
LABEL_61:
          __s1[0] = v397;
          __s1[1] = v398;
          __s1[2] = v399;
          __s1[3] = v400;
          __s1[4] = v401;
          OUTLINED_FUNCTION_49();
          v450 = v429;
          v451 = v430;
          v452 = v431;
          v453 = v432;
          v454 = v407;
          v455 = v433;
          v456 = v434;
          v457 = v435;
          if ((OUTLINED_FUNCTION_32_0() & 0x80000000) != 0)
            __asm { BR              X8 }
          OUTLINED_FUNCTION_67();
          v233 = OUTLINED_FUNCTION_41_0();
          if ((v233 & 1) == 0)
          {
            OUTLINED_FUNCTION_3_2();
            sub_249752F10();
            v392 = v252;
          }
          v235 = *(_QWORD *)(v392 + 16);
          v234 = *(_QWORD *)(v392 + 24);
          v237 = v428;
          v236 = v403;
          v239 = v430;
          v238 = v429;
          v241 = v432;
          v240 = v431;
          v243 = v433;
          v242 = v407;
          v245 = v435;
          v244 = v434;
          if (v235 >= v234 >> 1)
          {
            OUTLINED_FUNCTION_8_2(v234);
            sub_249752F10();
            v243 = v433;
            v242 = v407;
            v241 = v432;
            v240 = v431;
            v239 = v430;
            v238 = v429;
            v237 = v428;
            v236 = v403;
            v392 = v253;
            v245 = v435;
            v244 = v434;
          }
          *(_QWORD *)(v392 + 16) = v235 + 1;
          v246 = v392 + 80 * v235;
          *(_BYTE *)(v246 + 32) = v360;
          *(_BYTE *)(v246 + 33) = v359;
          *(_BYTE *)(v246 + 34) = v357;
          *(_BYTE *)(v246 + 35) = v355;
          *(_BYTE *)(v246 + 36) = v353;
          *(_BYTE *)(v246 + 37) = v351;
          *(_BYTE *)(v246 + 38) = v349;
          *(_BYTE *)(v246 + 39) = v347;
          *(_BYTE *)(v246 + 40) = v345;
          *(_BYTE *)(v246 + 41) = v343;
          *(_BYTE *)(v246 + 42) = v341;
          *(_BYTE *)(v246 + 43) = v339;
          *(_BYTE *)(v246 + 44) = v337;
          *(_BYTE *)(v246 + 45) = v335;
          *(_BYTE *)(v246 + 46) = v333;
          *(_BYTE *)(v246 + 47) = v331;
          *(_BYTE *)(v246 + 48) = v329;
          *(_BYTE *)(v246 + 49) = v327;
          *(_BYTE *)(v246 + 50) = v325;
          *(_BYTE *)(v246 + 51) = v323;
          *(_BYTE *)(v246 + 52) = v321;
          *(_BYTE *)(v246 + 53) = v319;
          *(_BYTE *)(v246 + 54) = v317;
          *(_BYTE *)(v246 + 55) = v315;
          *(_BYTE *)(v246 + 56) = v313;
          *(_BYTE *)(v246 + 57) = v311;
          *(_BYTE *)(v246 + 58) = v310;
          *(_BYTE *)(v246 + 59) = v309;
          *(_BYTE *)(v246 + 60) = v308;
          *(_BYTE *)(v246 + 61) = v307;
          *(_BYTE *)(v246 + 62) = v306;
          *(_BYTE *)(v246 + 63) = v305;
          *(_BYTE *)(v246 + 64) = v397;
          *(_BYTE *)(v246 + 65) = v398;
          *(_BYTE *)(v246 + 66) = v399;
          *(_BYTE *)(v246 + 67) = v400;
          *(_BYTE *)(v246 + 68) = v401;
          *(_BYTE *)(v246 + 69) = v402;
          *(_BYTE *)(v246 + 70) = v236;
          *(_BYTE *)(v246 + 71) = v237;
          *(_BYTE *)(v246 + 72) = v238;
          *(_BYTE *)(v246 + 73) = v239;
          *(_BYTE *)(v246 + 74) = v240;
          *(_BYTE *)(v246 + 75) = v241;
          *(_BYTE *)(v246 + 76) = v242;
          *(_BYTE *)(v246 + 77) = v243;
          *(_BYTE *)(v246 + 78) = v244;
          *(_BYTE *)(v246 + 79) = v245;
          *(_BYTE *)(v246 + 80) = v382;
          *(_BYTE *)(v246 + 81) = v384;
          *(_BYTE *)(v246 + 82) = v388;
          *(_BYTE *)(v246 + 83) = v376;
          *(_BYTE *)(v246 + 84) = v368;
          *(_BYTE *)(v246 + 85) = v369;
          *(_BYTE *)(v246 + 86) = v370;
          *(_BYTE *)(v246 + 87) = v371;
          *(_BYTE *)(v246 + 88) = v372;
          *(_BYTE *)(v246 + 89) = v373;
          *(_BYTE *)(v246 + 90) = v374;
          *(_BYTE *)(v246 + 91) = v375;
          *(_BYTE *)(v246 + 92) = v380;
          *(_BYTE *)(v246 + 93) = v307;
          *(_BYTE *)(v246 + 94) = v306;
          *(_BYTE *)(v246 + 95) = v305;
          *(_BYTE *)(v246 + 96) = v303;
          *(_WORD *)(v246 + 98) = v391;
          *(_WORD *)(v246 + 100) = v383;
          *(_QWORD *)(v246 + 104) = v30;
          OUTLINED_FUNCTION_35_0(v408, v409, v385, v361, v377);
          OUTLINED_FUNCTION_69();
          sub_249753EAC(v247, v248, v249, v250, v251);
          OUTLINED_FUNCTION_35_0(v408, v409, v385, v361, v377);
          OUTLINED_FUNCTION_69();
          goto LABEL_87;
        }
        swift_release();
        OUTLINED_FUNCTION_35_0(v408, v409, v385, v361, v377);
        OUTLINED_FUNCTION_46(v386, v419, v389, v436, v366);
        OUTLINED_FUNCTION_35_0(v408, v409, v385, v361, v377);
        v122 = v386;
        v123 = v419;
        v124 = v389;
        v125 = v436;
        v126 = v366;
      }
      else
      {
        if (!v7)
        {
          v101 = v52;
          sub_249753EAC(v53, v54, v36, v37, 0);
          sub_249753EAC(v3, v419, v101, v436, 0);
          if ((OUTLINED_FUNCTION_41_0() & 1) == 0)
          {
            OUTLINED_FUNCTION_3_2();
            sub_249752F10();
            v392 = v259;
          }
          v103 = *(_QWORD *)(v392 + 16);
          v102 = *(_QWORD *)(v392 + 24);
          v104 = v405;
          v105 = v404;
          v106 = v395;
          v107 = v394;
          v108 = v381;
          v109 = v362;
          v110 = v380;
          v111 = v375;
          v112 = v374;
          v113 = v373;
          v114 = v372;
          v115 = v371;
          v116 = v370;
          v117 = v368;
          v118 = v384;
          if (v103 >= v102 >> 1)
          {
            OUTLINED_FUNCTION_80(v102);
            sub_249752F10();
            OUTLINED_FUNCTION_6_1();
            v117 = v260;
            v108 = v381;
            v107 = v394;
            v106 = v395;
            v105 = v404;
            v104 = v405;
            v392 = v261;
            v118 = v384;
          }
          *(_QWORD *)(v392 + 16) = v103 + 1;
          v119 = (_BYTE *)(v392 + 80 * v103);
          v119[32] = v442[0];
          v119[33] = v448;
          v119[34] = v445;
          v119[35] = v443;
          v119[36] = v444;
          v119[37] = v438;
          v119[38] = v439;
          v119[39] = v440;
          v119[40] = v11;
          v119[41] = v437;
          v119[42] = v420;
          v119[43] = v423;
          v119[44] = v421;
          v119[45] = v424;
          v119[46] = v410;
          v119[47] = v422;
          v119[48] = v107;
          v119[49] = v106;
          v119[50] = v105;
          v119[51] = v104;
          v119[52] = v411;
          v119[53] = v412;
          v119[54] = v413;
          v119[55] = v414;
          v119[56] = v415;
          v119[57] = v416;
          v119[58] = v417;
          v119[59] = v427;
          v119[60] = v406;
          v119[61] = v425;
          v119[62] = v426;
          v119[63] = v418;
          v119[64] = v397;
          v119[65] = v398;
          v119[66] = v399;
          v119[67] = v400;
          v119[68] = v401;
          v119[69] = v402;
          v119[70] = v403;
          v119[71] = v428;
          v119[72] = v429;
          v119[73] = v430;
          v119[74] = v431;
          v119[75] = v432;
          v119[76] = v407;
          v119[77] = v433;
          v119[78] = v434;
          v119[79] = v435;
          v119[80] = v382;
          v119[81] = v118;
          v119[82] = v388;
          v119[83] = v376;
          v119[84] = v117;
          v119[85] = v369;
          v119[86] = v116;
          v119[87] = v115;
          v119[88] = v114;
          v119[89] = v113;
          v119[90] = v112;
          v119[91] = v111;
          v119[92] = v110;
          v119[93] = v109;
          v119[94] = v108;
          OUTLINED_FUNCTION_11_2((uint64_t)v119);
          goto LABEL_88;
        }
        v367 = v7;
        v387 = v3;
        v460[0] = v3;
        v460[1] = v419;
        v390 = v52;
        v460[2] = v52;
        v460[3] = v436;
        v460[4] = v7;
        v460[5] = v447;
        v460[6] = v31;
        OUTLINED_FUNCTION_16();
        __s1[0] = v442[0];
        __s1[1] = v4;
        OUTLINED_FUNCTION_45_0();
        __s1[5] = v438;
        __s1[6] = v439;
        __s1[7] = v440;
        v450 = v11;
        v451 = v437;
        v452 = v420;
        v453 = v423;
        v454 = v421;
        v455 = v424;
        v456 = v33;
        v457 = v422;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v307 = v443;
        v352 = v420;
        v354 = v444;
        v378 = v439;
        v358 = v440;
        v356 = v11;
        v306 = v437;
        v348 = v421;
        v350 = v423;
        v344 = v33;
        v346 = v424;
        v340 = v394;
        v342 = v422;
        v336 = v404;
        v338 = v395;
        v332 = v411;
        v334 = v405;
        v328 = v413;
        v330 = v412;
        v324 = v415;
        v326 = v414;
        v320 = v417;
        v322 = v416;
        v316 = v406;
        v318 = v427;
        v312 = v426;
        v314 = v425;
        v305 = v418;
        v291 = v398;
        v292 = v397;
        v289 = v400;
        v290 = v399;
        v302 = v402;
        v303 = v401;
        v300 = v429;
        v301 = v428;
        v298 = v431;
        v299 = v430;
        v296 = v407;
        v297 = v432;
        v287 = v434;
        v288 = v403;
        v294 = v435;
        v295 = v433;
        v293 = v382;
        v285 = v388;
        v286 = v384;
        v283 = v368;
        v284 = v376;
        v282 = v369;
        if (OUTLINED_FUNCTION_32_0())
        {
          v75 = (char *)&loc_249750478 + 4 * word_249838F40[v396];
          OUTLINED_FUNCTION_62();
          __asm { BR              X23 }
        }
        v271 = __PAIR64__(v391, v383);
        v272 = v363;
        v273 = v381;
        v274 = v362;
        v275 = v380;
        v276 = v375;
        v277 = v374;
        v278 = v373;
        v279 = v372;
        v280 = v371;
        v281 = v370;
        v174 = v437;
        v175 = v443;
        v177 = v445;
        v176 = v4;
        v178 = v438;
        if (*(_QWORD *)(v31 + 16)
          && (OUTLINED_FUNCTION_51(*(_QWORD *)v442 | (v4 << 8) | (v445 << 16) | (v443 << 24) | (v444 << 32) | (v438 << 40) | (v439 << 48) | (v440 << 56), v11 | (v437 << 8) | (v420 << 16) | (v423 << 24) | (v421 << 32) | (v424 << 40) | (v344 << 48) | (v422 << 56), v394 | (v395 << 8) | (v404 << 16) | (v405 << 24) | (v411 << 32) | (v412 << 40) | (v413 << 48) | (v414 << 56), v415 | (v416 << 8) | (v417 << 16) | (v427 << 24) | (v406 << 32) | (v425 << 40), v269, v270, __SPAIR64__(v391, v383), v363, v381, v362, v380, v375, v374, v373, v372, v371, v370, v369, v368,
                v376,
                v388,
                v384,
                v434,
                v403,
                v400,
                v399,
                v398,
                v397,
                v382,
                v435,
                v433,
                v407,
                v432,
                v431,
                v430,
                v429,
                v428,
                v402,
                v401,
                v304,
                v418),
              (v179 & 1) != 0)
          && (OUTLINED_FUNCTION_66(),
              OUTLINED_FUNCTION_9_2(),
              OUTLINED_FUNCTION_28_0(),
              sub_249784104(v396, v367),
              OUTLINED_FUNCTION_61(),
              (v375 & 1) != 0))
        {
          v180 = v442[0];
          v181 = v288;
          v182 = v305;
        }
        else
        {
          OUTLINED_FUNCTION_70(v3, v419, v390, v436, v367);
          v183 = OUTLINED_FUNCTION_24();
          OUTLINED_FUNCTION_57(v183, (uint64_t)v460, v396);
          OUTLINED_FUNCTION_58();
          OUTLINED_FUNCTION_24();
          sub_249753CAC();
          OUTLINED_FUNCTION_17_0();
          OUTLINED_FUNCTION_44();
          if (v438)
          {
LABEL_94:
            result = swift_release();
            __break(1u);
            return result;
          }
          OUTLINED_FUNCTION_17_0();
          if (!*(_QWORD *)(*(_QWORD *)__s1 + 16))
          {
            OUTLINED_FUNCTION_50();
            if ((OUTLINED_FUNCTION_41_0() & 1) == 0)
            {
              OUTLINED_FUNCTION_3_2();
              sub_249752F10();
              v392 = v265;
            }
            v211 = v364;
            OUTLINED_FUNCTION_40_0();
            v213 = v405;
            v214 = v404;
            v215 = v395;
            v216 = v394;
            v217 = v381;
            v218 = v362;
            v219 = v380;
            v220 = v375;
            v221 = v374;
            v222 = v373;
            v223 = v372;
            v224 = v371;
            v225 = v370;
            v226 = v368;
            v227 = v384;
            if (v147)
            {
              OUTLINED_FUNCTION_8_2(v212);
              sub_249752F10();
              OUTLINED_FUNCTION_6_1();
              v226 = v266;
              v217 = v381;
              v216 = v394;
              v215 = v395;
              v214 = v404;
              v213 = v405;
              v392 = v267;
              v227 = v384;
            }
            *(_QWORD *)(v392 + 16) = v31;
            *(_BYTE *)(v392 + 32) = v442[0];
            *(_BYTE *)(v392 + 33) = v448;
            *(_BYTE *)(v392 + 34) = v445;
            *(_BYTE *)(v392 + 35) = v443;
            *(_BYTE *)(v392 + 36) = v444;
            *(_BYTE *)(v392 + 37) = v438;
            *(_BYTE *)(v392 + 38) = v439;
            *(_BYTE *)(v392 + 39) = v440;
            *(_BYTE *)(v392 + 40) = v11;
            *(_BYTE *)(v392 + 41) = v437;
            *(_BYTE *)(v392 + 42) = v420;
            *(_BYTE *)(v392 + 43) = v423;
            *(_BYTE *)(v392 + 44) = v421;
            *(_BYTE *)(v392 + 45) = v424;
            *(_BYTE *)(v392 + 46) = v410;
            *(_BYTE *)(v392 + 47) = v422;
            *(_BYTE *)(v392 + 48) = v216;
            *(_BYTE *)(v392 + 49) = v215;
            *(_BYTE *)(v392 + 50) = v214;
            *(_BYTE *)(v392 + 51) = v213;
            *(_BYTE *)(v392 + 52) = v411;
            *(_BYTE *)(v392 + 53) = v412;
            *(_BYTE *)(v392 + 54) = v413;
            *(_BYTE *)(v392 + 55) = v414;
            *(_BYTE *)(v392 + 56) = v415;
            *(_BYTE *)(v392 + 57) = v416;
            *(_BYTE *)(v392 + 58) = v417;
            *(_BYTE *)(v392 + 59) = v427;
            *(_BYTE *)(v392 + 60) = v406;
            *(_BYTE *)(v392 + 61) = v425;
            *(_BYTE *)(v392 + 62) = v426;
            *(_BYTE *)(v392 + 63) = v418;
            *(_BYTE *)(v392 + 64) = v397;
            *(_BYTE *)(v392 + 65) = v398;
            *(_BYTE *)(v392 + 66) = v399;
            *(_BYTE *)(v392 + 67) = v400;
            *(_BYTE *)(v392 + 68) = v401;
            *(_BYTE *)(v392 + 69) = v402;
            *(_BYTE *)(v392 + 70) = v403;
            *(_BYTE *)(v392 + 71) = v428;
            *(_BYTE *)(v392 + 72) = v429;
            *(_BYTE *)(v392 + 73) = v430;
            *(_BYTE *)(v392 + 74) = v431;
            *(_BYTE *)(v392 + 75) = v432;
            *(_BYTE *)(v392 + 76) = v407;
            *(_BYTE *)(v392 + 77) = v433;
            *(_BYTE *)(v392 + 78) = v434;
            *(_BYTE *)(v392 + 79) = v435;
            *(_BYTE *)(v392 + 80) = v382;
            *(_BYTE *)(v392 + 81) = v227;
            *(_BYTE *)(v392 + 82) = v388;
            *(_BYTE *)(v392 + 83) = v376;
            *(_BYTE *)(v392 + 84) = v226;
            *(_BYTE *)(v392 + 85) = v369;
            *(_BYTE *)(v392 + 86) = v225;
            *(_BYTE *)(v392 + 87) = v224;
            *(_BYTE *)(v392 + 88) = v223;
            *(_BYTE *)(v392 + 89) = v222;
            *(_BYTE *)(v392 + 90) = v221;
            *(_BYTE *)(v392 + 91) = v220;
            *(_BYTE *)(v392 + 92) = v219;
            *(_BYTE *)(v392 + 93) = v218;
            *(_BYTE *)(v392 + 94) = v217;
            OUTLINED_FUNCTION_11_2(v392);
            OUTLINED_FUNCTION_47(v3, v419, v390, v436, v367);
            v228 = OUTLINED_FUNCTION_64();
            sub_249753EAC(v228, v229, v230, v231, v232);
            sub_249753EAC(v3, v419, v390, v436, v367);
            goto LABEL_89;
          }
          v184 = *(_QWORD *)(*(_QWORD *)__s1 + 64);
          OUTLINED_FUNCTION_22_1();
          OUTLINED_FUNCTION_50();
          v185 = (char *)(v184 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
          OUTLINED_FUNCTION_16();
          v180 = *v185;
          v176 = v185[1];
          v177 = v185[2];
          v175 = v185[3];
          v354 = v185[4];
          v178 = v185[5];
          v378 = v185[6];
          v358 = v185[7];
          v356 = v185[8];
          v174 = v185[9];
          v352 = v185[10];
          v350 = v185[11];
          v348 = v185[12];
          v346 = v185[13];
          LOBYTE(v344) = v185[14];
          v342 = v185[15];
          v340 = v185[16];
          v338 = v185[17];
          v336 = v185[18];
          v334 = v185[19];
          v332 = v185[20];
          v330 = v185[21];
          v328 = v185[22];
          v326 = v185[23];
          v324 = v185[24];
          v322 = v185[25];
          v320 = v185[26];
          v318 = v185[27];
          v316 = v185[28];
          v314 = v185[29];
          v312 = v185[30];
          v182 = v185[31];
          OUTLINED_FUNCTION_17_0();
          v181 = v288;
        }
        if ((OUTLINED_FUNCTION_41_0() & 1) == 0)
        {
          OUTLINED_FUNCTION_3_2();
          sub_249752F10();
          v392 = v257;
        }
        v187 = *(_QWORD *)(v392 + 16);
        v186 = *(_QWORD *)(v392 + 24);
        v188 = v352;
        v189 = v354;
        v191 = v302;
        v190 = v303;
        v193 = v300;
        v192 = v301;
        v194 = v358;
        v195 = v298;
        v196 = v299;
        v197 = v356;
        v199 = v296;
        v198 = v297;
        v201 = v294;
        v200 = v295;
        v202 = v350;
        v203 = v293;
        if (v187 >= v186 >> 1)
        {
          OUTLINED_FUNCTION_8_2(v186);
          sub_249752F10();
          v203 = v293;
          v201 = v294;
          v202 = v350;
          v188 = v352;
          v200 = v295;
          v199 = v296;
          v204 = v174;
          v197 = v356;
          v196 = v299;
          v193 = v300;
          v194 = v358;
          v192 = v301;
          v191 = v302;
          v190 = v303;
          v189 = v354;
          v392 = v258;
          v198 = v297;
          v195 = v298;
        }
        else
        {
          v204 = v174;
        }
        *(_QWORD *)(v392 + 16) = v187 + 1;
        v205 = v392 + 80 * v187;
        *(_BYTE *)(v205 + 32) = v180;
        *(_BYTE *)(v205 + 33) = v176;
        *(_BYTE *)(v205 + 34) = v177;
        *(_BYTE *)(v205 + 35) = v175;
        *(_BYTE *)(v205 + 36) = v189;
        *(_BYTE *)(v205 + 37) = v178;
        *(_BYTE *)(v205 + 38) = v378;
        *(_BYTE *)(v205 + 39) = v194;
        *(_BYTE *)(v205 + 40) = v197;
        *(_BYTE *)(v205 + 41) = v204;
        *(_BYTE *)(v205 + 42) = v188;
        *(_BYTE *)(v205 + 43) = v202;
        *(_BYTE *)(v205 + 44) = v348;
        *(_BYTE *)(v205 + 45) = v346;
        *(_BYTE *)(v205 + 46) = v344;
        *(_BYTE *)(v205 + 47) = v342;
        *(_BYTE *)(v205 + 48) = v340;
        *(_BYTE *)(v205 + 49) = v338;
        *(_BYTE *)(v205 + 50) = v336;
        *(_BYTE *)(v205 + 51) = v334;
        *(_BYTE *)(v205 + 52) = v332;
        *(_BYTE *)(v205 + 53) = v330;
        *(_BYTE *)(v205 + 54) = v328;
        *(_BYTE *)(v205 + 55) = v326;
        *(_BYTE *)(v205 + 56) = v324;
        *(_BYTE *)(v205 + 57) = v322;
        *(_BYTE *)(v205 + 58) = v320;
        *(_BYTE *)(v205 + 59) = v318;
        *(_BYTE *)(v205 + 60) = v316;
        *(_BYTE *)(v205 + 61) = v314;
        *(_BYTE *)(v205 + 62) = v312;
        *(_BYTE *)(v205 + 63) = v182;
        *(_BYTE *)(v205 + 64) = v292;
        *(_BYTE *)(v205 + 65) = v291;
        *(_BYTE *)(v205 + 66) = v290;
        *(_BYTE *)(v205 + 67) = v289;
        *(_BYTE *)(v205 + 68) = v190;
        *(_BYTE *)(v205 + 69) = v191;
        *(_BYTE *)(v205 + 70) = v181;
        *(_BYTE *)(v205 + 71) = v192;
        *(_BYTE *)(v205 + 72) = v193;
        *(_BYTE *)(v205 + 73) = v196;
        *(_BYTE *)(v205 + 74) = v195;
        *(_BYTE *)(v205 + 75) = v198;
        *(_BYTE *)(v205 + 76) = v199;
        *(_BYTE *)(v205 + 77) = v200;
        *(_BYTE *)(v205 + 78) = v287;
        *(_BYTE *)(v205 + 79) = v201;
        *(_BYTE *)(v205 + 80) = v203;
        *(_BYTE *)(v205 + 81) = v286;
        *(_BYTE *)(v205 + 82) = v285;
        *(_BYTE *)(v205 + 83) = v284;
        *(_BYTE *)(v205 + 84) = v283;
        *(_BYTE *)(v205 + 85) = v282;
        *(_BYTE *)(v205 + 86) = v281;
        *(_BYTE *)(v205 + 87) = v280;
        *(_BYTE *)(v205 + 88) = v279;
        *(_BYTE *)(v205 + 89) = v278;
        *(_BYTE *)(v205 + 90) = v277;
        *(_BYTE *)(v205 + 91) = v276;
        *(_BYTE *)(v205 + 92) = v275;
        *(_BYTE *)(v205 + 93) = v274;
        *(_BYTE *)(v205 + 94) = v273;
        *(_BYTE *)(v205 + 95) = v272;
        *(_BYTE *)(v205 + 96) = v396;
        *(_WORD *)(v205 + 98) = WORD2(v271);
        *(_WORD *)(v205 + 100) = v271;
        *(_QWORD *)(v205 + 104) = v30;
        OUTLINED_FUNCTION_47(v387, v419, v390, v436, v367);
        v206 = OUTLINED_FUNCTION_64();
        sub_249753EAC(v206, v207, v208, v209, v210);
        v122 = v387;
        v123 = v419;
        v124 = v390;
        v125 = v436;
        v126 = v367;
      }
LABEL_87:
      sub_249753EAC(v122, v123, v124, v125, v126);
LABEL_88:
      v211 = v364;
LABEL_89:
      v2 = (unsigned __int8 *)(v365 + 80);
      v1 = v211 - 1;
      if (!v1)
      {
        swift_bridgeObjectRelease();
        return v392;
      }
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t UniversalControlDisplaySolver0.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UniversalControlDisplaySolver0.__deallocating_deinit()
{
  UniversalControlDisplaySolver0.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_249752BDC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24975E090();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  result = sub_249753EE8(v6);
  *a1 = v2;
  return result;
}

void sub_249752C44()
{
  sub_249752F10();
}

void sub_249752C60(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  char v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_20_1();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_60();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF50);
    v10 = OUTLINED_FUNCTION_18_1();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v4;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 70);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((a1 & 1) != 0)
  {
    sub_2497AC098((char *)(a4 + 32), v4, (char *)(v10 + 32));
    OUTLINED_FUNCTION_13_2();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_52();
    sub_2497532E0(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_10_0();
}

void sub_249752D18()
{
  sub_249753074();
}

void sub_249752D34()
{
  sub_249752DA4();
}

void sub_249752D50()
{
  sub_249752DA4();
}

void sub_249752D6C()
{
  sub_249753074();
}

void sub_249752D88()
{
  sub_249752DA4();
}

void sub_249752DA4()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  OUTLINED_FUNCTION_27_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_20_1();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_14_1();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1(v5, v6, v7, v8, v9);
    v10 = (const void *)OUTLINED_FUNCTION_18_1();
    v11 = _swift_stdlib_malloc_size(v10);
    OUTLINED_FUNCTION_71((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    v10 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_13_2();
  }
  else
  {
    OUTLINED_FUNCTION_21_1(v5, v6, (uint64_t)v10 + 32);
  }
  OUTLINED_FUNCTION_10_0();
}

void sub_249752E40(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  char v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_20_1();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_60();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257880120);
    v10 = OUTLINED_FUNCTION_18_1();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v4;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((a1 & 1) != 0)
  {
    sub_2497AC14C((char *)(a4 + 32), v4, (char *)(v10 + 32));
    OUTLINED_FUNCTION_13_2();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_52();
    sub_2497535BC(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_81();
}

void sub_249752EF4()
{
  sub_249752F10();
}

void sub_249752F10()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  OUTLINED_FUNCTION_27_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_20_1();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_14_1();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1(v5, v6, v7, v8, v9);
    v10 = (const void *)OUTLINED_FUNCTION_18_1();
    v11 = _swift_stdlib_malloc_size(v10);
    OUTLINED_FUNCTION_71((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_13_2();
  }
  else
  {
    OUTLINED_FUNCTION_21_1(v5, v6, (uint64_t)v10 + 32);
  }
  OUTLINED_FUNCTION_13_1();
}

void sub_249752FB0(char a1, uint64_t a2, char a3, uint64_t a4)
{
  size_t v4;
  uint64_t v5;
  char v8;
  char v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v8 != v9)
    {
      OUTLINED_FUNCTION_20_1();
      if (v8)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_60();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578800C0);
    v10 = OUTLINED_FUNCTION_18_1();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v4;
    *(_QWORD *)(v10 + 24) = 2 * v11 - 64;
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((a1 & 1) != 0)
  {
    sub_2497AC1A8((char *)(a4 + 32), v4, (char *)(v10 + 32));
    OUTLINED_FUNCTION_13_2();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_52();
    sub_2497536AC(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_81();
}

void sub_249753058()
{
  sub_249753074();
}

void sub_249753074()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  OUTLINED_FUNCTION_27_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_20_1();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_14_1();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1(v5, v6, v7, v8, v9);
    v10 = (const void *)OUTLINED_FUNCTION_18_1();
    v11 = _swift_stdlib_malloc_size(v10);
    OUTLINED_FUNCTION_71((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_13_2();
  }
  else
  {
    OUTLINED_FUNCTION_21_1(v5, v6, (uint64_t)v10 + 32);
  }
  OUTLINED_FUNCTION_10_0();
}

void sub_249753110()
{
  sub_249753148();
}

void sub_24975312C()
{
  sub_249753148();
}

void sub_249753148()
{
  char v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  const void *v10;
  size_t v11;

  OUTLINED_FUNCTION_27_0();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_7_1();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_20_1();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_6_0();
    }
  }
  OUTLINED_FUNCTION_14_1();
  if (v1)
  {
    OUTLINED_FUNCTION_19_1(v5, v6, v7, v8, v9);
    v10 = (const void *)OUTLINED_FUNCTION_18_1();
    v11 = _swift_stdlib_malloc_size(v10);
    OUTLINED_FUNCTION_71((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (const void *)MEMORY[0x24BEE4AF8];
  }
  if ((v0 & 1) != 0)
  {
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_13_2();
  }
  else
  {
    OUTLINED_FUNCTION_21_1(v5, v6, (uint64_t)v10 + 32);
  }
  OUTLINED_FUNCTION_13_1();
}

char *sub_2497531E8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 80 * a1 + 32);
    v6 = 5 * v4;
    v7 = &__dst[16 * v6];
    if (v5 >= v7 || &v5[16 * v6] <= __dst)
    {
      memcpy(__dst, v5, 16 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  result = (char *)sub_249837360();
  __break(1u);
  return result;
}

char *sub_2497532E0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 70 * a1 + 32);
    v6 = &__dst[70 * v4];
    if (v5 >= v6 || &v5[70 * v4] <= __dst)
    {
      memcpy(__dst, v5, 70 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_249837360();
  __break(1u);
  return result;
}

char *sub_2497533DC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_249837360();
  __break(1u);
  return result;
}

char *sub_2497534CC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 32 * a1 + 32);
    v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_249837360();
  __break(1u);
  return result;
}

char *sub_2497535BC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + (a1 << 6) + 32);
    v6 = &__dst[64 * v4];
    if (v5 >= v6 || &v5[64 * v4] <= __dst)
    {
      memcpy(__dst, v5, v4 << 6);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_249837360();
  __break(1u);
  return result;
}

char *sub_2497536AC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_249837360();
  __break(1u);
  return result;
}

uint64_t sub_249753798(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_249837360();
  __break(1u);
  return result;
}

uint64_t sub_24975388C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF70);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_249837360();
  __break(1u);
  return result;
}

uint64_t sub_2497539A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF60);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_249837360();
  __break(1u);
  return result;
}

void sub_249753AC4(unint64_t a1)
{
  sub_249753BB0(a1, (void (*)(uint64_t, _QWORD, uint64_t))sub_24974D5D8, &qword_2578800E0, &qword_2578800D8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_249778560);
}

void sub_249753AEC()
{
  uint64_t v0;
  const void *v1;
  size_t v2;
  char v3;

  OUTLINED_FUNCTION_24_1();
  if (*(_QWORD *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578807A0);
    v1 = (const void *)OUTLINED_FUNCTION_18_1();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_18_2(2 * ((uint64_t)(v2 - 32) / 16));
    sub_249757AC8();
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_2_2();
    if (!v3)
      __break(1u);
  }
  OUTLINED_FUNCTION_1_2();
}

void sub_249753B68(unint64_t a1)
{
  sub_249753BB0(a1, (void (*)(uint64_t, _QWORD, uint64_t))sub_24974D850, &qword_2578800F0, &qword_2578800E8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_249778560);
}

void sub_249753B8C(unint64_t a1)
{
  sub_249753BB0(a1, (void (*)(uint64_t, _QWORD, uint64_t))sub_24974DBB4, &qword_2578800D0, &qword_2578800C8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_249778594);
}

void sub_249753BB0(unint64_t a1, void (*a2)(uint64_t, _QWORD, uint64_t), unint64_t *a3, uint64_t *a4, uint64_t (*a5)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t (*v13)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t);

  if (a1 >> 62)
    goto LABEL_8;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v10)
  {
    if (v10 <= 0)
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257880610);
      v11 = (_QWORD *)OUTLINED_FUNCTION_18_1();
      _swift_stdlib_malloc_size(v11);
      OUTLINED_FUNCTION_59();
      v11[2] = v10;
      v11[3] = v12;
    }
    OUTLINED_FUNCTION_34_0();
    sub_249757924((uint64_t)(v11 + 4), v10, a1, a2, a3, a4, a5);
    a5 = v13;
    swift_bridgeObjectRelease();
    if (a5 == (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))v10)
      break;
    __break(1u);
LABEL_8:
    OUTLINED_FUNCTION_34_0();
    v10 = sub_249837324();
    OUTLINED_FUNCTION_78();
  }
  OUTLINED_FUNCTION_13_1();
}

void sub_249753CA0()
{
  sub_249753CAC();
}

void sub_249753CAC()
{
  uint64_t *v0;
  uint64_t v1;
  const void *v2;
  size_t v3;
  char v4;

  OUTLINED_FUNCTION_24_1();
  if (*(_QWORD *)(v1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(v0);
    v2 = (const void *)OUTLINED_FUNCTION_18_1();
    v3 = _swift_stdlib_malloc_size(v2);
    OUTLINED_FUNCTION_18_2(2 * ((uint64_t)(v3 - 32) / 40));
    sub_249757C48();
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_2_2();
    if (!v4)
      __break(1u);
  }
  OUTLINED_FUNCTION_1_2();
}

void sub_249753D24()
{
  uint64_t v0;
  const void *v1;
  size_t v2;
  _QWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  OUTLINED_FUNCTION_24_1();
  if (*(_QWORD *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578807A0);
    v1 = (const void *)OUTLINED_FUNCTION_18_1();
    v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_18_2(2 * ((uint64_t)(v2 - 32) / 16));
    sub_249757DB8(v3, v4, v5, v6);
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_2_2();
    if (!v7)
      __break(1u);
  }
  OUTLINED_FUNCTION_1_2();
}

void sub_249753DA0()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_24_1();
  if (*(_QWORD *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257880610);
    v1 = (const void *)OUTLINED_FUNCTION_18_1();
    _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_59();
    OUTLINED_FUNCTION_18_2(v2);
    sub_2497580F4();
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_2_2();
    if (!v3)
      __break(1u);
  }
  OUTLINED_FUNCTION_1_2();
}

void sub_249753E10()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  size_t v3;
  char v4;

  OUTLINED_FUNCTION_24_1();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF78);
    v2 = (_QWORD *)OUTLINED_FUNCTION_18_1();
    v3 = _swift_stdlib_malloc_size(v2);
    v2[2] = v1;
    v2[3] = 2 * ((uint64_t)(v3 - 32) / 80);
    sub_249757F4C();
    OUTLINED_FUNCTION_24();
    OUTLINED_FUNCTION_2_2();
    if (!v4)
      __break(1u);
  }
  OUTLINED_FUNCTION_1_2();
}

uint64_t sub_249753EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249753EE8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  _OWORD *v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  char *v142;
  char *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  BOOL v155;
  unint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  BOOL v165;
  uint64_t v166;
  char v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  BOOL v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  unint64_t v189;
  char *v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char v231;
  char v232;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  char v238;
  char v239;
  int v240;
  char v241;
  __int128 v242;
  __int128 v243;
  char v244;
  __int128 v245;
  __int128 v246;
  uint64_t v247;
  char v248;
  char v249;
  uint64_t v250;
  char v251;
  char v252;
  uint64_t v253;
  char v254;
  char v255;
  uint64_t v256;
  uint64_t v257;
  char v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char v262;
  uint64_t v263;
  char v264;
  char v265;
  uint64_t v266;
  char v267;
  char v268;
  uint64_t v269;
  char v270;
  uint64_t v271;
  char v272;
  char v273;
  uint64_t v274;
  char v275;
  char v276;
  uint64_t v277;
  char v278;
  char v279;
  uint64_t v280;
  char v281;
  char v282;
  uint64_t v283;
  char v284;
  char v285;
  uint64_t v286;
  char v287;
  char v288;
  char v289;
  char v290;
  char v291;
  char v292;
  char v293;
  char v294;
  char v295;
  char v296;
  char v297;
  char v298;
  char v299;
  char v300;
  char v301;
  char v302;
  char v303;
  char v304;
  char v305;
  char v306;
  char v307;
  char v308;
  char v309;
  char v310;
  char v311;
  char v312;
  char v313;
  char v314;
  char v315;
  char v316;
  char v317;
  char v318;
  char v319;
  char v320;
  char v321;
  char v322;
  char v323;
  char v324;
  char v325;
  char v326;
  char v327;
  char v328;
  char v329;
  char v330;
  uint64_t v331;
  char v332;
  __int128 __s2;
  __int128 __s1;
  uint64_t v335;

  v2 = v1;
  v335 = *MEMORY[0x24BDAC8D0];
  v4 = a1[1];
  result = sub_249837534();
  if (result < v4)
  {
    v6 = result;
    sub_24974CFDC(v4 / 2);
    v201 = v7;
    v210 = v8;
    v205 = v4;
    v199 = a1;
    if (v4 <= 0)
      goto LABEL_111;
    v200 = v6;
    v9 = 0;
    v10 = *a1;
    v197 = *a1 + 32;
    v198 = *a1 + 16;
    v11 = (char *)MEMORY[0x24BEE4AF8];
    v214 = *a1;
    while (1)
    {
      v12 = v9 + 1;
      v203 = v11;
      v204 = v9;
      if (v9 + 1 < v4)
      {
        v207 = v2;
        v211 = v9 + 1;
        v13 = v10 + 40 * v12;
        v14 = *(_BYTE *)v13;
        v15 = *(_BYTE *)(v13 + 1);
        v16 = *(_BYTE *)(v13 + 2);
        v17 = *(_BYTE *)(v13 + 3);
        v18 = *(_BYTE *)(v13 + 4);
        v19 = *(_BYTE *)(v13 + 5);
        v20 = *(_BYTE *)(v13 + 6);
        v21 = *(_BYTE *)(v13 + 7);
        v22 = *(_BYTE *)(v13 + 8);
        v23 = *(_BYTE *)(v13 + 9);
        v24 = *(_BYTE *)(v13 + 10);
        v25 = *(_BYTE *)(v13 + 11);
        v26 = *(_BYTE *)(v13 + 12);
        v27 = *(_BYTE *)(v13 + 13);
        v28 = *(_BYTE *)(v13 + 14);
        v29 = *(_BYTE *)(v13 + 15);
        v245 = *(_OWORD *)(v13 + 16);
        v30 = v10 + 40 * v9;
        v31 = *(_BYTE *)v30;
        v32 = *(_BYTE *)(v30 + 1);
        v33 = *(_BYTE *)(v30 + 2);
        v327 = *(_BYTE *)(v30 + 4);
        v320 = *(_BYTE *)(v30 + 3);
        v324 = *(_BYTE *)(v30 + 5);
        v314 = *(_BYTE *)(v30 + 7);
        v317 = *(_BYTE *)(v30 + 6);
        v311 = *(_BYTE *)(v30 + 8);
        v34 = *(_BYTE *)(v30 + 9);
        v35 = *(_BYTE *)(v30 + 10);
        v36 = *(_BYTE *)(v30 + 11);
        v37 = *(_BYTE *)(v30 + 12);
        v242 = *(_OWORD *)(v30 + 16);
        v38 = *(_BYTE *)(v30 + 13);
        v39 = *(_BYTE *)(v30 + 14);
        v40 = *(_BYTE *)(v30 + 15);
        v305 = v15;
        v308 = v14;
        LOBYTE(__s1) = v14;
        BYTE1(__s1) = v15;
        v302 = v16;
        BYTE2(__s1) = v16;
        BYTE3(__s1) = v17;
        BYTE4(__s1) = v18;
        BYTE5(__s1) = v19;
        v291 = v21;
        v294 = v20;
        BYTE6(__s1) = v20;
        BYTE7(__s1) = v21;
        v289 = v22;
        BYTE8(__s1) = v22;
        v287 = v23;
        BYTE9(__s1) = v23;
        v284 = v24;
        BYTE10(__s1) = v24;
        v281 = v25;
        BYTE11(__s1) = v25;
        v278 = v26;
        BYTE12(__s1) = v26;
        v275 = v27;
        BYTE13(__s1) = v27;
        v272 = v28;
        BYTE14(__s1) = v28;
        HIBYTE(__s1) = v29;
        v267 = v31;
        LOBYTE(__s2) = v31;
        v264 = v32;
        BYTE1(__s2) = v32;
        BYTE2(__s2) = v33;
        BYTE3(__s2) = v320;
        BYTE4(__s2) = v327;
        BYTE5(__s2) = v324;
        BYTE6(__s2) = v317;
        BYTE7(__s2) = v314;
        BYTE8(__s2) = v311;
        BYTE9(__s2) = v34;
        BYTE10(__s2) = v35;
        BYTE11(__s2) = v36;
        v258 = v37;
        BYTE12(__s2) = v37;
        v248 = v38;
        BYTE13(__s2) = v38;
        v251 = v39;
        BYTE14(__s2) = v39;
        v254 = v40;
        HIBYTE(__s2) = v40;
        swift_retain();
        swift_retain();
        v41 = memcmp(&__s1, &__s2, 0x10uLL);
        if ((v41 & 0x80000000) != 0)
          goto LABEL_7;
        LOBYTE(__s1) = v267;
        BYTE1(__s1) = v264;
        BYTE2(__s1) = v33;
        BYTE3(__s1) = v320;
        BYTE4(__s1) = v327;
        BYTE5(__s1) = v324;
        BYTE6(__s1) = v317;
        BYTE7(__s1) = v314;
        BYTE8(__s1) = v311;
        BYTE9(__s1) = v34;
        BYTE10(__s1) = v35;
        BYTE11(__s1) = v36;
        BYTE12(__s1) = v258;
        BYTE13(__s1) = v248;
        BYTE14(__s1) = v251;
        HIBYTE(__s1) = v254;
        LOBYTE(__s2) = v308;
        BYTE1(__s2) = v305;
        BYTE2(__s2) = v302;
        BYTE3(__s2) = v17;
        BYTE4(__s2) = v18;
        BYTE5(__s2) = v19;
        BYTE6(__s2) = v294;
        BYTE7(__s2) = v291;
        BYTE8(__s2) = v289;
        BYTE9(__s2) = v287;
        BYTE10(__s2) = v284;
        BYTE11(__s2) = v281;
        BYTE12(__s2) = v278;
        BYTE13(__s2) = v275;
        BYTE14(__s2) = v272;
        HIBYTE(__s2) = v29;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        {
LABEL_7:
          v240 = v41 >> 31;
          swift_release();
          swift_release();
          v9 = v204;
          v4 = v205;
          v42 = v204 + 2;
          v2 = v207;
          v11 = v203;
          v10 = v214;
          if (v204 + 2 >= v205)
            goto LABEL_23;
        }
        else
        {
          __s2 = v242;
          __s1 = v245;
          v72 = memcmp(&__s1, &__s2, 0x10uLL);
          swift_release();
          swift_release();
          v9 = v204;
          v42 = v204 + 2;
          if (v72 < 0)
          {
            v4 = v205;
            v2 = v207;
            v11 = v203;
            v10 = v214;
            if (v42 >= v205)
            {
LABEL_25:
              if (v9 < v42)
              {
                v73 = 40 * v42;
                v74 = 40 * v9;
                v75 = v42;
                v76 = v9;
                do
                {
                  if (v76 != --v75)
                  {
                    if (!v10)
                      goto LABEL_154;
                    v77 = v10 + v74;
                    v78 = *(_QWORD *)(v10 + v74 + 32);
                    v79 = v10 + v73;
                    v80 = *(_OWORD *)(v10 + v74);
                    v81 = *(_OWORD *)(v10 + v74 + 16);
                    v82 = *(_QWORD *)(v10 + v73 - 8);
                    v83 = *(_OWORD *)(v10 + v73 - 24);
                    *(_OWORD *)v77 = *(_OWORD *)(v10 + v73 - 40);
                    *(_OWORD *)(v77 + 16) = v83;
                    *(_QWORD *)(v77 + 32) = v82;
                    *(_OWORD *)(v79 - 40) = v80;
                    *(_OWORD *)(v79 - 24) = v81;
                    *(_QWORD *)(v79 - 8) = v78;
                  }
                  ++v76;
                  v73 -= 40;
                  v74 += 40;
                }
                while (v76 < v75);
              }
              goto LABEL_34;
            }
            v240 = 1;
          }
          else
          {
            v4 = v205;
            v2 = v207;
            v11 = v203;
            v10 = v214;
            if (v42 >= v205)
            {
LABEL_34:
              v12 = v42;
              goto LABEL_35;
            }
            v240 = 0;
          }
        }
        v43 = (_OWORD *)(v198 + 40 * v42);
        v44 = v42;
        v45 = v211;
        do
        {
          v208 = v2;
          v331 = v44;
          v46 = *((_BYTE *)v43 - 14);
          v47 = *((_BYTE *)v43 - 13);
          v48 = *((_BYTE *)v43 - 12);
          v49 = *((_BYTE *)v43 - 11);
          v50 = *((_BYTE *)v43 - 10);
          v51 = *((_BYTE *)v43 - 9);
          v52 = *((_BYTE *)v43 - 8);
          v53 = *((_BYTE *)v43 - 7);
          v54 = *((_BYTE *)v43 - 6);
          v55 = *((_BYTE *)v43 - 5);
          v56 = *((_BYTE *)v43 - 4);
          v246 = *v43;
          v57 = v10 + 40 * v45;
          v58 = *(_BYTE *)v57;
          v315 = *(_BYTE *)(v57 + 2);
          v318 = *(_BYTE *)(v57 + 1);
          v59 = *(_BYTE *)(v57 + 3);
          v321 = *(_BYTE *)(v57 + 4);
          v325 = *(_BYTE *)(v57 + 5);
          v60 = *(_BYTE *)(v57 + 7);
          v61 = *(_BYTE *)(v57 + 8);
          v62 = *(_BYTE *)(v57 + 9);
          v63 = *(_BYTE *)(v57 + 10);
          v309 = *(_BYTE *)(v57 + 6);
          v312 = *(_BYTE *)(v57 + 11);
          v64 = *(_BYTE *)(v57 + 12);
          v65 = *(_BYTE *)(v57 + 13);
          v66 = *(_BYTE *)(v57 + 14);
          v67 = *(_BYTE *)(v57 + 15);
          v243 = *(_OWORD *)(v57 + 16);
          v68 = *((_BYTE *)v43 - 3);
          v69 = *((_BYTE *)v43 - 2);
          LOBYTE(v57) = *((_BYTE *)v43 - 1);
          v303 = *((_BYTE *)v43 - 15);
          v306 = *((_BYTE *)v43 - 16);
          LOBYTE(__s1) = v306;
          BYTE1(__s1) = v303;
          v299 = v47;
          BYTE2(__s1) = v46;
          BYTE3(__s1) = v47;
          v295 = v49;
          v297 = v48;
          BYTE4(__s1) = v48;
          BYTE5(__s1) = v49;
          v292 = v50;
          BYTE6(__s1) = v50;
          v290 = v51;
          BYTE7(__s1) = v51;
          v288 = v52;
          BYTE8(__s1) = v52;
          v285 = v53;
          BYTE9(__s1) = v53;
          v282 = v54;
          BYTE10(__s1) = v54;
          v279 = v55;
          BYTE11(__s1) = v55;
          v276 = v56;
          BYTE12(__s1) = v56;
          v268 = v68;
          BYTE13(__s1) = v68;
          v270 = v69;
          BYTE14(__s1) = v69;
          v273 = v57;
          HIBYTE(__s1) = v57;
          LOBYTE(__s2) = v58;
          BYTE1(__s2) = v318;
          BYTE2(__s2) = v315;
          BYTE3(__s2) = v59;
          BYTE4(__s2) = v321;
          BYTE5(__s2) = v325;
          BYTE6(__s2) = v309;
          v265 = v60;
          BYTE7(__s2) = v60;
          v262 = v61;
          BYTE8(__s2) = v61;
          BYTE9(__s2) = v62;
          BYTE10(__s2) = v63;
          BYTE11(__s2) = v312;
          BYTE12(__s2) = v64;
          v255 = v65;
          BYTE13(__s2) = v65;
          v252 = v66;
          BYTE14(__s2) = v66;
          v249 = v67;
          HIBYTE(__s2) = v67;
          swift_retain();
          swift_retain();
          v70 = memcmp(&__s1, &__s2, 0x10uLL);
          if (v70 < 0)
            goto LABEL_11;
          LOBYTE(__s1) = v58;
          BYTE1(__s1) = v318;
          BYTE2(__s1) = v315;
          BYTE3(__s1) = v59;
          BYTE4(__s1) = v321;
          BYTE5(__s1) = v325;
          BYTE6(__s1) = v309;
          BYTE7(__s1) = v265;
          BYTE8(__s1) = v262;
          BYTE9(__s1) = v62;
          BYTE10(__s1) = v63;
          BYTE11(__s1) = v312;
          BYTE12(__s1) = v64;
          BYTE13(__s1) = v255;
          BYTE14(__s1) = v252;
          HIBYTE(__s1) = v249;
          LOBYTE(__s2) = v306;
          BYTE1(__s2) = v303;
          BYTE2(__s2) = v46;
          BYTE3(__s2) = v299;
          BYTE4(__s2) = v297;
          BYTE5(__s2) = v295;
          BYTE6(__s2) = v292;
          BYTE7(__s2) = v290;
          BYTE8(__s2) = v288;
          BYTE9(__s2) = v285;
          BYTE10(__s2) = v282;
          BYTE11(__s2) = v279;
          BYTE12(__s2) = v276;
          BYTE13(__s2) = v268;
          BYTE14(__s2) = v270;
          HIBYTE(__s2) = v273;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          {
LABEL_11:
            swift_release();
            swift_release();
            v2 = v208;
            v4 = v205;
            v11 = v203;
            v10 = v214;
            v42 = v331;
            if (((v240 ^ (v70 < 0)) & 1) != 0)
              goto LABEL_22;
          }
          else
          {
            __s2 = v243;
            __s1 = v246;
            v71 = memcmp(&__s1, &__s2, 0x10uLL);
            swift_release();
            swift_release();
            if (v71 < 0)
            {
              v2 = v208;
              v4 = v205;
              v11 = v203;
              v10 = v214;
              v42 = v331;
              if ((v240 & 1) == 0)
              {
                v12 = v331;
                v9 = v204;
                goto LABEL_35;
              }
            }
            else
            {
              v2 = v208;
              v4 = v205;
              v11 = v203;
              v10 = v214;
              v42 = v331;
              if ((v240 & 1) != 0)
              {
                v9 = v204;
                goto LABEL_24;
              }
            }
          }
          v44 = v42 + 1;
          v43 = (_OWORD *)((char *)v43 + 40);
          v45 = v42;
        }
        while (v42 + 1 < v4);
        ++v42;
LABEL_22:
        v9 = v204;
LABEL_23:
        v12 = v42;
        if (!v240)
          goto LABEL_35;
LABEL_24:
        if (v42 >= v9)
          goto LABEL_25;
LABEL_150:
        __break(1u);
        goto LABEL_151;
      }
LABEL_35:
      if (v12 < v4)
      {
        if (__OFSUB__(v12, v9))
          goto LABEL_146;
        if (v12 - v9 < v200)
        {
          if (__OFADD__(v9, v200))
            goto LABEL_148;
          if (v9 + v200 >= v4)
            v84 = v4;
          else
            v84 = v9 + v200;
          if (v84 < v9)
          {
LABEL_149:
            __break(1u);
            goto LABEL_150;
          }
          if (v12 != v84)
          {
            v209 = v2;
            v85 = (_QWORD *)(v197 + 40 * v12);
            v202 = v84;
            do
            {
              v86 = (char *)(v10 + 40 * v12);
              v332 = v86[1];
              v330 = v86[2];
              v310 = v86[4];
              v313 = v86[3];
              v304 = v86[6];
              v307 = v86[5];
              v87 = v86[8];
              v88 = v86[9];
              v300 = v86[10];
              v301 = v86[7];
              v89 = v86[12];
              v90 = v86[13];
              v296 = v86[11];
              v298 = v86[14];
              v293 = v86[15];
              v283 = v86[16];
              v280 = v86[17];
              v277 = v86[18];
              v274 = v86[19];
              v271 = v86[20];
              v269 = v86[21];
              v266 = v86[22];
              v263 = v86[23];
              v261 = v86[24];
              v260 = v86[25];
              v259 = v86[26];
              v257 = v86[27];
              v256 = v86[28];
              v253 = v86[29];
              v250 = v86[30];
              v247 = v86[31];
              v91 = *v86;
              v206 = v85;
              v212 = v12;
              while (1)
              {
                v286 = v9;
                v92 = *((_BYTE *)v85 - 72);
                v93 = *((_BYTE *)v85 - 71);
                v94 = *((_BYTE *)v85 - 70);
                v95 = *((_BYTE *)v85 - 69);
                v96 = *((_BYTE *)v85 - 68);
                v97 = *((_BYTE *)v85 - 67);
                v98 = *((_BYTE *)v85 - 66);
                v99 = *((_BYTE *)v85 - 65);
                v100 = *((_BYTE *)v85 - 64);
                v101 = *((_BYTE *)v85 - 63);
                v102 = *((_BYTE *)v85 - 62);
                v103 = *((_BYTE *)v85 - 61);
                v104 = *((_BYTE *)v85 - 60);
                v105 = *((_BYTE *)v85 - 59);
                v106 = *((_BYTE *)v85 - 58);
                v107 = *((_BYTE *)v85 - 57);
                v222 = *((unsigned __int8 *)v85 - 56);
                v230 = *((unsigned __int8 *)v85 - 55);
                v229 = *((unsigned __int8 *)v85 - 54);
                v228 = *((unsigned __int8 *)v85 - 53);
                v227 = *((unsigned __int8 *)v85 - 52);
                v226 = *((unsigned __int8 *)v85 - 51);
                v225 = *((unsigned __int8 *)v85 - 50);
                v224 = *((unsigned __int8 *)v85 - 49);
                v223 = *((unsigned __int8 *)v85 - 48);
                v221 = *((unsigned __int8 *)v85 - 47);
                v220 = *((unsigned __int8 *)v85 - 46);
                v219 = *((unsigned __int8 *)v85 - 45);
                v218 = *((unsigned __int8 *)v85 - 44);
                v217 = *((unsigned __int8 *)v85 - 43);
                v216 = *((unsigned __int8 *)v85 - 42);
                v215 = *((unsigned __int8 *)v85 - 41);
                v328 = v91;
                LOBYTE(__s1) = v91;
                BYTE1(__s1) = v332;
                BYTE2(__s1) = v330;
                BYTE3(__s1) = v313;
                BYTE4(__s1) = v310;
                BYTE5(__s1) = v307;
                BYTE6(__s1) = v304;
                BYTE7(__s1) = v301;
                BYTE8(__s1) = v87;
                v322 = v88;
                BYTE9(__s1) = v88;
                BYTE10(__s1) = v300;
                BYTE11(__s1) = v296;
                BYTE12(__s1) = v89;
                BYTE13(__s1) = v90;
                BYTE14(__s1) = v298;
                HIBYTE(__s1) = v293;
                LOBYTE(__s2) = v92;
                BYTE1(__s2) = v93;
                BYTE2(__s2) = v94;
                BYTE3(__s2) = v95;
                v108 = v96;
                BYTE4(__s2) = v96;
                v244 = v97;
                BYTE5(__s2) = v97;
                v241 = v98;
                BYTE6(__s2) = v98;
                v239 = v99;
                BYTE7(__s2) = v99;
                v238 = v100;
                BYTE8(__s2) = v100;
                v237 = v101;
                BYTE9(__s2) = v101;
                v236 = v102;
                BYTE10(__s2) = v102;
                v235 = v103;
                BYTE11(__s2) = v103;
                v234 = v104;
                BYTE12(__s2) = v104;
                v232 = v106;
                v233 = v105;
                BYTE13(__s2) = v105;
                BYTE14(__s2) = v106;
                v231 = v107;
                HIBYTE(__s2) = v107;
                swift_retain();
                swift_retain();
                if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                {
                  LOBYTE(__s1) = v92;
                  BYTE1(__s1) = v93;
                  BYTE2(__s1) = v94;
                  BYTE3(__s1) = v95;
                  BYTE4(__s1) = v108;
                  BYTE5(__s1) = v244;
                  BYTE6(__s1) = v241;
                  BYTE7(__s1) = v239;
                  BYTE8(__s1) = v238;
                  BYTE9(__s1) = v237;
                  BYTE10(__s1) = v236;
                  BYTE11(__s1) = v235;
                  BYTE12(__s1) = v234;
                  BYTE13(__s1) = v233;
                  BYTE14(__s1) = v232;
                  HIBYTE(__s1) = v231;
                  LOBYTE(__s2) = v328;
                  BYTE1(__s2) = v332;
                  BYTE2(__s2) = v330;
                  BYTE3(__s2) = v313;
                  BYTE4(__s2) = v310;
                  BYTE5(__s2) = v307;
                  BYTE6(__s2) = v304;
                  BYTE7(__s2) = v301;
                  BYTE8(__s2) = v87;
                  BYTE9(__s2) = v322;
                  BYTE10(__s2) = v300;
                  BYTE11(__s2) = v296;
                  BYTE12(__s2) = v89;
                  BYTE13(__s2) = v90;
                  BYTE14(__s2) = v298;
                  HIBYTE(__s2) = v293;
                  if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                    goto LABEL_53;
                  LOBYTE(__s1) = v283;
                  BYTE1(__s1) = v280;
                  BYTE2(__s1) = v277;
                  BYTE3(__s1) = v274;
                  BYTE4(__s1) = v271;
                  BYTE5(__s1) = v269;
                  BYTE6(__s1) = v266;
                  BYTE7(__s1) = v263;
                  BYTE8(__s1) = v261;
                  BYTE9(__s1) = v260;
                  BYTE10(__s1) = v259;
                  BYTE11(__s1) = v257;
                  BYTE12(__s1) = v256;
                  BYTE13(__s1) = v253;
                  BYTE14(__s1) = v250;
                  HIBYTE(__s1) = v247;
                  LOBYTE(__s2) = v222;
                  BYTE1(__s2) = v230;
                  BYTE2(__s2) = v229;
                  BYTE3(__s2) = v228;
                  BYTE4(__s2) = v227;
                  BYTE5(__s2) = v226;
                  BYTE6(__s2) = v225;
                  BYTE7(__s2) = v224;
                  BYTE8(__s2) = v223;
                  BYTE9(__s2) = v221;
                  BYTE10(__s2) = v220;
                  BYTE11(__s2) = v219;
                  BYTE12(__s2) = v218;
                  BYTE13(__s2) = v217;
                  BYTE14(__s2) = v216;
                  HIBYTE(__s2) = v215;
                  if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                    break;
                }
                swift_release();
                swift_release();
                if (!v214)
                  goto LABEL_152;
                v109 = v85 - 4;
                v332 = *((_BYTE *)v85 - 31);
                v330 = *((_BYTE *)v85 - 30);
                v110 = *((_BYTE *)v85 - 29);
                v111 = *((_BYTE *)v85 - 28);
                v112 = *((_BYTE *)v85 - 27);
                v113 = *((_BYTE *)v85 - 26);
                v114 = *((_BYTE *)v85 - 25);
                v326 = *((_BYTE *)v85 - 24);
                v329 = *((_BYTE *)v85 - 32);
                v115 = *((_BYTE *)v85 - 22);
                v116 = *((_BYTE *)v85 - 21);
                v319 = *((_BYTE *)v85 - 20);
                v323 = *((_BYTE *)v85 - 23);
                v316 = *((_BYTE *)v85 - 19);
                v117 = *((_BYTE *)v85 - 18);
                v118 = *((_BYTE *)v85 - 17);
                v119 = *((unsigned __int8 *)v85 - 16);
                v120 = *((unsigned __int8 *)v85 - 15);
                v121 = *((unsigned __int8 *)v85 - 14);
                v122 = *((unsigned __int8 *)v85 - 13);
                v123 = *((unsigned __int8 *)v85 - 12);
                v124 = *((unsigned __int8 *)v85 - 11);
                v125 = *((unsigned __int8 *)v85 - 10);
                v126 = *((unsigned __int8 *)v85 - 9);
                v127 = *((unsigned __int8 *)v85 - 8);
                v128 = *((unsigned __int8 *)v85 - 7);
                v129 = *((unsigned __int8 *)v85 - 6);
                v130 = *((unsigned __int8 *)v85 - 5);
                v131 = *((unsigned __int8 *)v85 - 4);
                v132 = *(_OWORD *)(v85 - 9);
                v133 = *(_OWORD *)(v85 - 7);
                v134 = *((unsigned __int8 *)v85 - 3);
                v135 = *((unsigned __int8 *)v85 - 2);
                v136 = *((unsigned __int8 *)v85 - 1);
                v137 = *v85;
                *v85 = *(v85 - 5);
                *v109 = v132;
                v109[1] = v133;
                v91 = v329;
                *(v85 - 5) = v137;
                v85 -= 5;
                *((_BYTE *)v85 - 32) = v329;
                *((_BYTE *)v85 - 31) = v332;
                *((_BYTE *)v85 - 30) = v330;
                v310 = v111;
                v313 = v110;
                *((_BYTE *)v85 - 29) = v110;
                *((_BYTE *)v85 - 28) = v111;
                v304 = v113;
                v307 = v112;
                *((_BYTE *)v85 - 27) = v112;
                *((_BYTE *)v85 - 26) = v113;
                v300 = v115;
                v301 = v114;
                *((_BYTE *)v85 - 25) = v114;
                v88 = v323;
                v87 = v326;
                *((_BYTE *)v85 - 24) = v326;
                *((_BYTE *)v85 - 23) = v323;
                *((_BYTE *)v85 - 22) = v115;
                v90 = v316;
                v89 = v319;
                v296 = v116;
                v298 = v117;
                *((_BYTE *)v85 - 21) = v116;
                *((_BYTE *)v85 - 20) = v319;
                *((_BYTE *)v85 - 19) = v316;
                *((_BYTE *)v85 - 18) = v117;
                v293 = v118;
                *((_BYTE *)v85 - 17) = v118;
                v280 = v120;
                v283 = v119;
                *((_BYTE *)v85 - 16) = v119;
                *((_BYTE *)v85 - 15) = v120;
                v277 = v121;
                *((_BYTE *)v85 - 14) = v121;
                v271 = v123;
                v274 = v122;
                *((_BYTE *)v85 - 13) = v122;
                *((_BYTE *)v85 - 12) = v123;
                v266 = v125;
                v269 = v124;
                *((_BYTE *)v85 - 11) = v124;
                *((_BYTE *)v85 - 10) = v125;
                v261 = v127;
                v263 = v126;
                *((_BYTE *)v85 - 9) = v126;
                *((_BYTE *)v85 - 8) = v127;
                v259 = v129;
                v260 = v128;
                *((_BYTE *)v85 - 7) = v128;
                *((_BYTE *)v85 - 6) = v129;
                v256 = v131;
                v257 = v130;
                *((_BYTE *)v85 - 5) = v130;
                *((_BYTE *)v85 - 4) = v131;
                v250 = v135;
                v253 = v134;
                *((_BYTE *)v85 - 3) = v134;
                *((_BYTE *)v85 - 2) = v135;
                v9 = v286 + 1;
                v247 = v136;
                *((_BYTE *)v85 - 1) = v136;
                v138 = v212;
                if (v212 == v286 + 1)
                  goto LABEL_54;
              }
              static UniversalControlUUID.compare(lhs:rhs:)(v222 | (v230 << 8) | (v229 << 16) | (v228 << 24) | (v227 << 32) | (v226 << 40) | (v225 << 48) | (v224 << 56), v223 | (v221 << 8) | (v220 << 16) | (v219 << 24) | (v218 << 32) | (v217 << 40) | (v216 << 48) | (v215 << 56), v283 | (v280 << 8) | (v277 << 16) | (v274 << 24) | (v271 << 32) | (v269 << 40) | (v266 << 48) | (v263 << 56), v261 | (v260 << 8) | (v259 << 16) | (v257 << 24) | (v256 << 32) | (v253 << 40) | (v250 << 48) | (v247 << 56));
LABEL_53:
              swift_release();
              swift_release();
              v138 = v212;
LABEL_54:
              v12 = v138 + 1;
              v85 = v206 + 5;
              v9 = v204;
              v10 = v214;
            }
            while (v12 != v202);
            v12 = v202;
            v2 = v209;
            v11 = v203;
          }
        }
      }
      if (v12 < v9)
        goto LABEL_145;
      v213 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_24975DAF4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v140 = *((_QWORD *)v11 + 2);
      v139 = *((_QWORD *)v11 + 3);
      v141 = v140 + 1;
      v10 = v214;
      if (v140 >= v139 >> 1)
      {
        v190 = sub_24975DAF4((char *)(v139 > 1), v140 + 1, 1, v11);
        v10 = v214;
        v11 = v190;
      }
      *((_QWORD *)v11 + 2) = v141;
      v142 = v11 + 32;
      v143 = &v11[16 * v140 + 32];
      *(_QWORD *)v143 = v9;
      *((_QWORD *)v143 + 1) = v12;
      if (v140)
        break;
      v141 = 1;
LABEL_104:
      v4 = v205;
      v9 = v213;
      if (v213 >= v205)
        goto LABEL_112;
    }
    while (1)
    {
      v144 = v141 - 1;
      if (v141 >= 4)
      {
        v149 = &v142[16 * v141];
        v150 = *((_QWORD *)v149 - 8);
        v151 = *((_QWORD *)v149 - 7);
        v155 = __OFSUB__(v151, v150);
        v152 = v151 - v150;
        if (v155)
          goto LABEL_130;
        v154 = *((_QWORD *)v149 - 6);
        v153 = *((_QWORD *)v149 - 5);
        v155 = __OFSUB__(v153, v154);
        v147 = v153 - v154;
        v148 = v155;
        if (v155)
          goto LABEL_131;
        v156 = v141 - 2;
        v157 = &v142[16 * v141 - 32];
        v159 = *(_QWORD *)v157;
        v158 = *((_QWORD *)v157 + 1);
        v155 = __OFSUB__(v158, v159);
        v160 = v158 - v159;
        if (v155)
          goto LABEL_132;
        v155 = __OFADD__(v147, v160);
        v161 = v147 + v160;
        if (v155)
          goto LABEL_134;
        if (v161 >= v152)
        {
          v179 = &v142[16 * v144];
          v181 = *(_QWORD *)v179;
          v180 = *((_QWORD *)v179 + 1);
          v155 = __OFSUB__(v180, v181);
          v182 = v180 - v181;
          if (v155)
            goto LABEL_140;
          v172 = v147 < v182;
          goto LABEL_93;
        }
      }
      else
      {
        if (v141 != 3)
        {
          v173 = *((_QWORD *)v11 + 4);
          v174 = *((_QWORD *)v11 + 5);
          v155 = __OFSUB__(v174, v173);
          v166 = v174 - v173;
          v167 = v155;
          goto LABEL_87;
        }
        v146 = *((_QWORD *)v11 + 4);
        v145 = *((_QWORD *)v11 + 5);
        v155 = __OFSUB__(v145, v146);
        v147 = v145 - v146;
        v148 = v155;
      }
      if ((v148 & 1) != 0)
        goto LABEL_133;
      v156 = v141 - 2;
      v162 = &v142[16 * v141 - 32];
      v164 = *(_QWORD *)v162;
      v163 = *((_QWORD *)v162 + 1);
      v165 = __OFSUB__(v163, v164);
      v166 = v163 - v164;
      v167 = v165;
      if (v165)
        goto LABEL_135;
      v168 = &v142[16 * v144];
      v170 = *(_QWORD *)v168;
      v169 = *((_QWORD *)v168 + 1);
      v155 = __OFSUB__(v169, v170);
      v171 = v169 - v170;
      if (v155)
        goto LABEL_137;
      if (__OFADD__(v166, v171))
        goto LABEL_139;
      if (v166 + v171 >= v147)
      {
        v172 = v147 < v171;
LABEL_93:
        if (v172)
          v144 = v156;
        goto LABEL_95;
      }
LABEL_87:
      if ((v167 & 1) != 0)
        goto LABEL_136;
      v175 = &v142[16 * v144];
      v177 = *(_QWORD *)v175;
      v176 = *((_QWORD *)v175 + 1);
      v155 = __OFSUB__(v176, v177);
      v178 = v176 - v177;
      if (v155)
        goto LABEL_138;
      if (v178 < v166)
        goto LABEL_104;
LABEL_95:
      v183 = v144 - 1;
      if (v144 - 1 >= v141)
      {
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
        goto LABEL_149;
      }
      if (!v10)
        goto LABEL_153;
      v184 = v11;
      v185 = &v142[16 * v183];
      v186 = *(_QWORD *)v185;
      v187 = &v142[16 * v144];
      v188 = *((_QWORD *)v187 + 1);
      sub_249755B70(v10 + 40 * *(_QWORD *)v185, v10 + 40 * *(_QWORD *)v187, v10 + 40 * v188, v210);
      if (v2)
      {
LABEL_109:
        swift_bridgeObjectRelease();
        if (v205 >= -1)
          goto LABEL_124;
        __break(1u);
LABEL_111:
        v11 = (char *)MEMORY[0x24BEE4AF8];
        v141 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_112:
        if (v141 >= 2)
        {
          v191 = *v199;
          do
          {
            v192 = v141 - 2;
            if (v141 < 2)
              goto LABEL_141;
            if (!v191)
              goto LABEL_155;
            v193 = *(_QWORD *)&v11[16 * v192 + 32];
            v194 = *(_QWORD *)&v11[16 * v141 + 24];
            sub_249755B70(v191 + 40 * v193, v191 + 40 * *(_QWORD *)&v11[16 * v141 + 16], v191 + 40 * v194, v210);
            if (v2)
              goto LABEL_109;
            if (v194 < v193)
              goto LABEL_142;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v11 = sub_24975DBE8();
            if (v192 >= *((_QWORD *)v11 + 2))
              goto LABEL_143;
            v195 = &v11[16 * v192 + 32];
            *(_QWORD *)v195 = v193;
            *((_QWORD *)v195 + 1) = v194;
            v196 = *((_QWORD *)v11 + 2);
            if (v141 > v196)
              goto LABEL_144;
            memmove(&v11[16 * v141 + 16], &v11[16 * v141 + 32], 16 * (v196 - v141));
            *((_QWORD *)v11 + 2) = v196 - 1;
            v141 = v196 - 1;
          }
          while (v196 > 2);
        }
        swift_bridgeObjectRelease();
        if (v205 >= -1)
        {
LABEL_124:
          *(_QWORD *)(v201 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
LABEL_151:
        __break(1u);
LABEL_152:
        __break(1u);
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
      }
      if (v188 < v186)
        goto LABEL_127;
      if (v144 > *((_QWORD *)v184 + 2))
        goto LABEL_128;
      *(_QWORD *)v185 = v186;
      *(_QWORD *)&v142[16 * v183 + 8] = v188;
      v189 = *((_QWORD *)v184 + 2);
      if (v144 >= v189)
        goto LABEL_129;
      v11 = v184;
      v141 = v189 - 1;
      memmove(&v142[16 * v144], v187 + 16, 16 * (v189 - 1 - v144));
      *((_QWORD *)v11 + 2) = v189 - 1;
      v10 = v214;
      if (v189 <= 2)
        goto LABEL_104;
    }
  }
  if (v4 < 0)
    goto LABEL_147;
  if (v4)
    return sub_24975535C(0, v4, 1, a1);
  return result;
}

uint64_t sub_24975535C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  char *v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  _OWORD *v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char __s2;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char __s1;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  uint64_t v158;

  v59 = result;
  v158 = *MEMORY[0x24BDAC8D0];
  if (a3 != a2)
  {
    v61 = *a4;
    v4 = (_QWORD *)(*a4 + 40 * a3 + 32);
    do
    {
      v5 = (char *)(v61 + 40 * a3);
      v124 = v5[2];
      v125 = v5[1];
      v122 = v5[4];
      v123 = v5[3];
      v115 = v5[6];
      v116 = v5[5];
      v113 = v5[8];
      v114 = v5[7];
      v6 = v5[9];
      v7 = v5[11];
      v111 = v5[12];
      v112 = v5[10];
      v109 = v5[14];
      v110 = v5[13];
      v108 = v5[15];
      v106 = v5[16];
      v105 = v5[17];
      v104 = v5[18];
      v103 = v5[19];
      v102 = v5[20];
      v101 = v5[21];
      v100 = v5[22];
      v99 = v5[23];
      v98 = v5[24];
      v97 = v5[25];
      v96 = v5[26];
      v95 = v5[27];
      v94 = v5[28];
      v93 = v5[29];
      v92 = v5[30];
      v91 = v5[31];
      v8 = *v5;
      v9 = v59;
      v60 = v4;
      v62 = a3;
      while (1)
      {
        v107 = v9;
        v10 = *((_BYTE *)v4 - 72);
        v11 = *((_BYTE *)v4 - 71);
        v12 = *((_BYTE *)v4 - 70);
        v13 = *((_BYTE *)v4 - 69);
        v14 = *((_BYTE *)v4 - 68);
        v15 = *((_BYTE *)v4 - 67);
        v16 = *((_BYTE *)v4 - 66);
        v17 = *((_BYTE *)v4 - 65);
        v18 = *((_BYTE *)v4 - 64);
        v19 = *((_BYTE *)v4 - 63);
        v20 = *((_BYTE *)v4 - 62);
        v21 = *((_BYTE *)v4 - 61);
        v22 = *((_BYTE *)v4 - 60);
        v23 = *((_BYTE *)v4 - 59);
        v24 = *((_BYTE *)v4 - 58);
        v25 = *((_BYTE *)v4 - 57);
        v70 = *((unsigned __int8 *)v4 - 56);
        v78 = *((unsigned __int8 *)v4 - 55);
        v77 = *((unsigned __int8 *)v4 - 54);
        v76 = *((unsigned __int8 *)v4 - 53);
        v75 = *((unsigned __int8 *)v4 - 52);
        v74 = *((unsigned __int8 *)v4 - 51);
        v73 = *((unsigned __int8 *)v4 - 50);
        v72 = *((unsigned __int8 *)v4 - 49);
        v71 = *((unsigned __int8 *)v4 - 48);
        v69 = *((unsigned __int8 *)v4 - 47);
        v68 = *((unsigned __int8 *)v4 - 46);
        v67 = *((unsigned __int8 *)v4 - 45);
        v66 = *((unsigned __int8 *)v4 - 44);
        v65 = *((unsigned __int8 *)v4 - 43);
        v64 = *((unsigned __int8 *)v4 - 42);
        v63 = *((unsigned __int8 *)v4 - 41);
        v120 = v8;
        __s1 = v8;
        v143 = v125;
        v144 = v124;
        v145 = v123;
        v146 = v122;
        v147 = v116;
        v148 = v115;
        v149 = v114;
        v150 = v113;
        v151 = v6;
        v152 = v112;
        v117 = v7;
        v153 = v7;
        v154 = v111;
        v155 = v110;
        v156 = v109;
        v157 = v108;
        v26 = v10;
        __s2 = v10;
        v79 = v11;
        v80 = v12;
        v127 = v11;
        v128 = v12;
        v27 = v13;
        v129 = v13;
        v89 = v15;
        v90 = v14;
        v130 = v14;
        v131 = v15;
        v87 = v17;
        v88 = v16;
        v132 = v16;
        v133 = v17;
        v85 = v19;
        v86 = v18;
        v134 = v18;
        v135 = v19;
        v83 = v21;
        v84 = v20;
        v136 = v20;
        v137 = v21;
        v81 = v23;
        v82 = v22;
        v138 = v22;
        v139 = v23;
        v140 = v24;
        v141 = v25;
        swift_retain();
        swift_retain();
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v26;
          v143 = v79;
          v144 = v80;
          v145 = v27;
          v146 = v90;
          v147 = v89;
          v148 = v88;
          v149 = v87;
          v150 = v86;
          v151 = v85;
          v152 = v84;
          v153 = v83;
          v154 = v82;
          v155 = v81;
          v156 = v24;
          v157 = v25;
          __s2 = v120;
          v127 = v125;
          v128 = v124;
          v129 = v123;
          v130 = v122;
          v131 = v116;
          v132 = v115;
          v133 = v114;
          v134 = v113;
          v135 = v6;
          v136 = v112;
          v137 = v117;
          v138 = v111;
          v139 = v110;
          v140 = v109;
          v141 = v108;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_11;
          __s1 = v106;
          v143 = v105;
          v144 = v104;
          v145 = v103;
          v146 = v102;
          v147 = v101;
          v148 = v100;
          v149 = v99;
          v150 = v98;
          v151 = v97;
          v152 = v96;
          v153 = v95;
          v154 = v94;
          v155 = v93;
          v156 = v92;
          v157 = v91;
          __s2 = v70;
          v127 = v78;
          v128 = v77;
          v129 = v76;
          v130 = v75;
          v131 = v74;
          v132 = v73;
          v133 = v72;
          v134 = v71;
          v135 = v69;
          v136 = v68;
          v137 = v67;
          v138 = v66;
          v139 = v65;
          v140 = v64;
          v141 = v63;
          if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
            break;
        }
        swift_release();
        swift_release();
        if (!v61)
          __break(1u);
        v28 = v4 - 4;
        v124 = *((_BYTE *)v4 - 30);
        v125 = *((_BYTE *)v4 - 31);
        v123 = *((_BYTE *)v4 - 29);
        v121 = *((_BYTE *)v4 - 32);
        v122 = *((_BYTE *)v4 - 28);
        v29 = *((_BYTE *)v4 - 27);
        v30 = *((_BYTE *)v4 - 26);
        v31 = *((_BYTE *)v4 - 25);
        v32 = *((_BYTE *)v4 - 24);
        v33 = *((_BYTE *)v4 - 22);
        v118 = *((_BYTE *)v4 - 21);
        v119 = *((_BYTE *)v4 - 23);
        v34 = *((_BYTE *)v4 - 20);
        v35 = *((_BYTE *)v4 - 19);
        v36 = *((_BYTE *)v4 - 18);
        v37 = *((_BYTE *)v4 - 17);
        v38 = *((unsigned __int8 *)v4 - 16);
        v39 = *((unsigned __int8 *)v4 - 15);
        v40 = *((unsigned __int8 *)v4 - 14);
        v41 = *((unsigned __int8 *)v4 - 13);
        v42 = *((unsigned __int8 *)v4 - 12);
        v43 = *((unsigned __int8 *)v4 - 11);
        v44 = *((unsigned __int8 *)v4 - 10);
        v45 = *((unsigned __int8 *)v4 - 9);
        v46 = *((unsigned __int8 *)v4 - 8);
        v47 = *((unsigned __int8 *)v4 - 7);
        v48 = *((unsigned __int8 *)v4 - 6);
        v49 = *((unsigned __int8 *)v4 - 5);
        v50 = *((unsigned __int8 *)v4 - 4);
        v51 = *(_OWORD *)(v4 - 9);
        v52 = *(_OWORD *)(v4 - 7);
        v53 = *((unsigned __int8 *)v4 - 3);
        v54 = *((unsigned __int8 *)v4 - 2);
        v55 = *((unsigned __int8 *)v4 - 1);
        v56 = *v4;
        *v4 = *(v4 - 5);
        v8 = v121;
        *v28 = v51;
        v28[1] = v52;
        *(v4 - 5) = v56;
        v4 -= 5;
        *((_BYTE *)v4 - 32) = v121;
        *((_BYTE *)v4 - 31) = v125;
        *((_BYTE *)v4 - 30) = v124;
        *((_BYTE *)v4 - 29) = v123;
        *((_BYTE *)v4 - 28) = v122;
        v115 = v30;
        v116 = v29;
        *((_BYTE *)v4 - 27) = v29;
        *((_BYTE *)v4 - 26) = v30;
        v113 = v32;
        v114 = v31;
        *((_BYTE *)v4 - 25) = v31;
        *((_BYTE *)v4 - 24) = v32;
        v6 = v119;
        *((_BYTE *)v4 - 23) = v119;
        v111 = v34;
        v112 = v33;
        *((_BYTE *)v4 - 22) = v33;
        v7 = v118;
        *((_BYTE *)v4 - 21) = v118;
        *((_BYTE *)v4 - 20) = v34;
        v109 = v36;
        v110 = v35;
        *((_BYTE *)v4 - 19) = v35;
        *((_BYTE *)v4 - 18) = v36;
        v108 = v37;
        *((_BYTE *)v4 - 17) = v37;
        result = v56;
        v105 = v39;
        v106 = v38;
        *((_BYTE *)v4 - 16) = v38;
        *((_BYTE *)v4 - 15) = v39;
        v103 = v41;
        v104 = v40;
        *((_BYTE *)v4 - 14) = v40;
        *((_BYTE *)v4 - 13) = v41;
        v102 = v42;
        *((_BYTE *)v4 - 12) = v42;
        v100 = v44;
        v101 = v43;
        *((_BYTE *)v4 - 11) = v43;
        *((_BYTE *)v4 - 10) = v44;
        v98 = v46;
        v99 = v45;
        *((_BYTE *)v4 - 9) = v45;
        *((_BYTE *)v4 - 8) = v46;
        v96 = v48;
        v97 = v47;
        *((_BYTE *)v4 - 7) = v47;
        *((_BYTE *)v4 - 6) = v48;
        v94 = v50;
        v95 = v49;
        *((_BYTE *)v4 - 5) = v49;
        *((_BYTE *)v4 - 4) = v50;
        v92 = v54;
        v93 = v53;
        *((_BYTE *)v4 - 3) = v53;
        *((_BYTE *)v4 - 2) = v54;
        v9 = v107 + 1;
        v91 = v55;
        *((_BYTE *)v4 - 1) = v55;
        v57 = v62;
        if (v62 == v107 + 1)
          goto LABEL_12;
      }
      static UniversalControlUUID.compare(lhs:rhs:)(v70 | (v78 << 8) | (v77 << 16) | (v76 << 24) | (v75 << 32) | (v74 << 40) | (v73 << 48) | (v72 << 56), v71 | (v69 << 8) | (v68 << 16) | (v67 << 24) | (v66 << 32) | (v65 << 40) | (v64 << 48) | (v63 << 56), v106 | (v105 << 8) | (v104 << 16) | (v103 << 24) | (v102 << 32) | (v101 << 40) | (v100 << 48) | (v99 << 56), v98 | (v97 << 8) | (v96 << 16) | (v95 << 24) | (v94 << 32) | (v93 << 40) | (v92 << 48) | (v91 << 56));
LABEL_11:
      swift_release();
      result = swift_release();
      v57 = v62;
LABEL_12:
      a3 = v57 + 1;
      v4 = v60 + 5;
    }
    while (a3 != a2);
  }
  return result;
}

uint64_t sub_249755B70(unint64_t a1, unint64_t a2, unint64_t a3, char *a4)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  __int128 v40;
  __int128 v41;
  int v43;
  BOOL v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  unint64_t v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  unint64_t v74;
  BOOL v75;
  __int128 v76;
  __int128 v77;
  int v79;
  BOOL v80;
  __int128 v82;
  __int128 v83;
  char v84;
  unint64_t v85;
  __int128 v86;
  __int128 v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  unint64_t v124;
  char v125;
  unint64_t v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char *v136;
  unint64_t v137;
  unint64_t v138;
  char *v139;
  __int128 __s2;
  __int128 __s1;
  uint64_t v142;

  v139 = a4;
  v5 = a2;
  v6 = a1;
  v142 = *MEMORY[0x24BDAC8D0];
  v7 = a2 - a1;
  v8 = (uint64_t)(a2 - a1) / 40;
  v9 = a3 - a2;
  v10 = (uint64_t)(a3 - a2) / 40;
  if (v8 < v10)
  {
    sub_2497AC1A0(a1, (uint64_t)(a2 - a1) / 40, a4);
    v11 = (unint64_t)&v139[40 * v8];
    if (v5 >= a3 || v7 < 40)
    {
      v5 = v6;
      goto LABEL_48;
    }
    v136 = &v139[40 * v8];
    v85 = a3;
    while (1)
    {
      v12 = *(_BYTE *)(v5 + 1);
      v13 = *(_BYTE *)(v5 + 2);
      v14 = *(_BYTE *)(v5 + 3);
      v15 = *(_BYTE *)(v5 + 4);
      v16 = *(_BYTE *)(v5 + 5);
      v17 = *(_BYTE *)(v5 + 6);
      v18 = *(_BYTE *)(v5 + 7);
      v19 = *(_BYTE *)(v5 + 8);
      v20 = *(_BYTE *)(v5 + 9);
      v21 = *(_BYTE *)(v5 + 10);
      v22 = *(_BYTE *)(v5 + 11);
      v23 = *(_BYTE *)(v5 + 12);
      v24 = *(_BYTE *)(v5 + 13);
      v25 = *(_BYTE *)(v5 + 14);
      v26 = *(_BYTE *)(v5 + 15);
      v87 = *(_OWORD *)(v5 + 16);
      v27 = *v139;
      v132 = v139[2];
      v134 = v139[1];
      v135 = v139[3];
      v28 = v139[4];
      v29 = v139[5];
      v30 = v139[6];
      v31 = v139[7];
      v32 = v139[8];
      v33 = v139[9];
      v34 = v139[10];
      v35 = v139[11];
      v128 = v139[12];
      v36 = v139[13];
      v130 = v139[14];
      v86 = *((_OWORD *)v139 + 1);
      v127 = *(_BYTE *)v5;
      LOBYTE(__s1) = *(_BYTE *)v5;
      v125 = v12;
      BYTE1(__s1) = v12;
      v121 = v14;
      v123 = v13;
      BYTE2(__s1) = v13;
      BYTE3(__s1) = v14;
      v117 = v16;
      v119 = v15;
      BYTE4(__s1) = v15;
      BYTE5(__s1) = v16;
      v114 = v18;
      v115 = v17;
      BYTE6(__s1) = v17;
      BYTE7(__s1) = v18;
      v110 = v20;
      v112 = v19;
      BYTE8(__s1) = v19;
      BYTE9(__s1) = v20;
      v107 = v22;
      BYTE10(__s1) = v21;
      BYTE11(__s1) = v22;
      v103 = v24;
      v105 = v23;
      BYTE12(__s1) = v23;
      BYTE13(__s1) = v24;
      v100 = v26;
      v101 = v25;
      BYTE14(__s1) = v25;
      v37 = v139[15];
      HIBYTE(__s1) = v26;
      LOBYTE(__s2) = v27;
      BYTE1(__s2) = v134;
      BYTE2(__s2) = v132;
      BYTE3(__s2) = v135;
      v96 = v29;
      v98 = v28;
      BYTE4(__s2) = v28;
      BYTE5(__s2) = v29;
      v94 = v30;
      BYTE6(__s2) = v30;
      BYTE7(__s2) = v31;
      BYTE8(__s2) = v32;
      BYTE9(__s2) = v33;
      BYTE10(__s2) = v34;
      BYTE11(__s2) = v35;
      BYTE12(__s2) = v128;
      BYTE13(__s2) = v36;
      BYTE14(__s2) = v130;
      v88 = v37;
      HIBYTE(__s2) = v37;
      swift_retain();
      swift_retain();
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
        swift_release();
        swift_release();
      }
      else
      {
        LOBYTE(__s1) = v27;
        BYTE1(__s1) = v134;
        BYTE2(__s1) = v132;
        BYTE3(__s1) = v135;
        BYTE4(__s1) = v98;
        BYTE5(__s1) = v96;
        BYTE6(__s1) = v94;
        BYTE7(__s1) = v31;
        BYTE8(__s1) = v32;
        BYTE9(__s1) = v33;
        BYTE10(__s1) = v34;
        BYTE11(__s1) = v35;
        BYTE12(__s1) = v128;
        BYTE13(__s1) = v36;
        BYTE14(__s1) = v130;
        HIBYTE(__s1) = v88;
        LOBYTE(__s2) = v127;
        BYTE1(__s2) = v125;
        BYTE2(__s2) = v123;
        BYTE3(__s2) = v121;
        BYTE4(__s2) = v119;
        BYTE5(__s2) = v117;
        BYTE6(__s2) = v115;
        BYTE7(__s2) = v114;
        BYTE8(__s2) = v112;
        BYTE9(__s2) = v110;
        BYTE10(__s2) = v21;
        BYTE11(__s2) = v107;
        BYTE12(__s2) = v105;
        BYTE13(__s2) = v103;
        BYTE14(__s2) = v101;
        HIBYTE(__s2) = v100;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        {
          swift_release();
          swift_release();
LABEL_18:
          v38 = (unint64_t)v139;
          v44 = (char *)v6 != v139 || v6 >= (unint64_t)(v139 + 40);
          v139 += 40;
          v11 = (unint64_t)v136;
          if (!v44)
            goto LABEL_9;
LABEL_8:
          v40 = *(_OWORD *)v38;
          v41 = *(_OWORD *)(v38 + 16);
          *(_QWORD *)(v6 + 32) = *(_QWORD *)(v38 + 32);
          *(_OWORD *)v6 = v40;
          *(_OWORD *)(v6 + 16) = v41;
          goto LABEL_9;
        }
        __s2 = v86;
        __s1 = v87;
        v43 = memcmp(&__s1, &__s2, 0x10uLL);
        swift_release();
        swift_release();
        if ((v43 & 0x80000000) == 0)
          goto LABEL_18;
      }
      v38 = v5;
      v39 = v6 == v5;
      v5 += 40;
      v11 = (unint64_t)v136;
      if (!v39)
        goto LABEL_8;
LABEL_9:
      v6 += 40;
      if ((unint64_t)v139 >= v11 || v5 >= v85)
      {
        v5 = v6;
        goto LABEL_48;
      }
    }
  }
  sub_2497AC1A0(a2, (uint64_t)(a3 - a2) / 40, a4);
  v11 = (unint64_t)&v139[40 * v10];
  if (v6 < v5 && v9 >= 40)
  {
    v45 = a3 - 40;
    v138 = v6;
    while (1)
    {
      v126 = v45;
      v137 = v11;
      v46 = v11 - 40;
      v133 = *(_BYTE *)(v11 - 40);
      v47 = *(_BYTE *)(v11 - 39);
      v48 = *(_BYTE *)(v46 + 2);
      v49 = *(_BYTE *)(v46 + 3);
      v50 = *(_BYTE *)(v46 + 4);
      v51 = *(_BYTE *)(v46 + 5);
      v52 = *(_BYTE *)(v46 + 6);
      v53 = *(_BYTE *)(v46 + 7);
      v54 = *(_BYTE *)(v46 + 8);
      v55 = *(_BYTE *)(v46 + 9);
      v56 = *(_BYTE *)(v46 + 10);
      v57 = *(_BYTE *)(v46 + 11);
      v58 = *(_BYTE *)(v46 + 12);
      v59 = *(_BYTE *)(v46 + 13);
      v60 = *(_BYTE *)(v46 + 14);
      v61 = *(_BYTE *)(v46 + 15);
      v83 = *(_OWORD *)(v46 + 16);
      v124 = v5;
      v63 = v5 - 40;
      v62 = *(_BYTE *)(v5 - 40);
      v64 = *(_BYTE *)(v5 - 39);
      v65 = *(_BYTE *)(v5 - 38);
      v66 = *(_BYTE *)(v5 - 37);
      v67 = *(_BYTE *)(v5 - 36);
      v122 = *(_BYTE *)(v5 - 35);
      v129 = *(_BYTE *)(v5 - 34);
      v131 = *(_BYTE *)(v5 - 33);
      v68 = *(_BYTE *)(v5 - 32);
      v69 = *(_BYTE *)(v5 - 30);
      v118 = *(_BYTE *)(v5 - 29);
      v120 = *(_BYTE *)(v5 - 31);
      v82 = *(_OWORD *)(v5 - 24);
      v70 = *(_BYTE *)(v5 - 28);
      v71 = *(_BYTE *)(v5 - 27);
      v72 = *(_BYTE *)(v63 + 14);
      v73 = *(_BYTE *)(v63 + 15);
      LOBYTE(__s1) = v133;
      v116 = v47;
      BYTE1(__s1) = v47;
      BYTE2(__s1) = v48;
      v111 = v50;
      v113 = v49;
      BYTE3(__s1) = v49;
      BYTE4(__s1) = v50;
      v108 = v52;
      v109 = v51;
      BYTE5(__s1) = v51;
      BYTE6(__s1) = v52;
      v104 = v54;
      v106 = v53;
      BYTE7(__s1) = v53;
      BYTE8(__s1) = v54;
      v102 = v55;
      BYTE9(__s1) = v55;
      BYTE10(__s1) = v56;
      v97 = v58;
      v99 = v57;
      BYTE11(__s1) = v57;
      BYTE12(__s1) = v58;
      v93 = v60;
      v95 = v59;
      BYTE13(__s1) = v59;
      BYTE14(__s1) = v60;
      v91 = v62;
      v92 = v61;
      HIBYTE(__s1) = v61;
      LOBYTE(__s2) = v62;
      v89 = v65;
      v90 = v64;
      BYTE1(__s2) = v64;
      BYTE2(__s2) = v65;
      BYTE3(__s2) = v66;
      BYTE4(__s2) = v67;
      BYTE5(__s2) = v122;
      BYTE6(__s2) = v129;
      BYTE7(__s2) = v131;
      BYTE8(__s2) = v68;
      BYTE9(__s2) = v120;
      BYTE10(__s2) = v69;
      BYTE11(__s2) = v118;
      v84 = v70;
      BYTE12(__s2) = v70;
      BYTE13(__s2) = v71;
      BYTE14(__s2) = v72;
      HIBYTE(__s2) = v73;
      swift_retain();
      swift_retain();
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        break;
      LOBYTE(__s1) = v91;
      BYTE1(__s1) = v90;
      BYTE2(__s1) = v89;
      BYTE3(__s1) = v66;
      BYTE4(__s1) = v67;
      BYTE5(__s1) = v122;
      BYTE6(__s1) = v129;
      BYTE7(__s1) = v131;
      BYTE8(__s1) = v68;
      BYTE9(__s1) = v120;
      BYTE10(__s1) = v69;
      BYTE11(__s1) = v118;
      BYTE12(__s1) = v84;
      BYTE13(__s1) = v71;
      BYTE14(__s1) = v72;
      HIBYTE(__s1) = v73;
      LOBYTE(__s2) = v133;
      BYTE1(__s2) = v116;
      BYTE2(__s2) = v48;
      BYTE3(__s2) = v113;
      BYTE4(__s2) = v111;
      BYTE5(__s2) = v109;
      BYTE6(__s2) = v108;
      BYTE7(__s2) = v106;
      BYTE8(__s2) = v104;
      BYTE9(__s2) = v102;
      BYTE10(__s2) = v56;
      BYTE11(__s2) = v99;
      BYTE12(__s2) = v97;
      BYTE13(__s2) = v95;
      BYTE14(__s2) = v93;
      HIBYTE(__s2) = v92;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
        swift_release();
        swift_release();
        v11 = v137;
        v74 = v126 + 40;
        v5 = v124;
      }
      else
      {
        __s2 = v82;
        __s1 = v83;
        v79 = memcmp(&__s1, &__s2, 0x10uLL);
        swift_release();
        swift_release();
        v11 = v137;
        v74 = v126 + 40;
        v5 = v124;
        if (v79 < 0)
          goto LABEL_28;
      }
      v80 = v74 != v11 || v126 >= v11;
      v63 = v46;
      v11 = v46;
      if (!v80)
        goto LABEL_34;
LABEL_33:
      v76 = *(_OWORD *)v63;
      v77 = *(_OWORD *)(v63 + 16);
      *(_QWORD *)(v126 + 32) = *(_QWORD *)(v63 + 32);
      *(_OWORD *)v126 = v76;
      *(_OWORD *)(v126 + 16) = v77;
LABEL_34:
      v45 = v126 - 40;
      if (v11 <= (unint64_t)v139 || v5 <= v138)
        goto LABEL_48;
    }
    swift_release();
    swift_release();
    v11 = v137;
    v74 = v126 + 40;
    v5 = v124;
LABEL_28:
    v75 = v74 != v5 || v126 >= v5;
    v5 = v63;
    if (!v75)
      goto LABEL_34;
    goto LABEL_33;
  }
LABEL_48:
  sub_2497AC1A0(v139, (uint64_t)(v11 - (_QWORD)v139) / 40, v5);
  return 1;
}

uint64_t sub_2497563BC(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  char v21;
  unint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v36 = v3;
  if (!v3)
    return swift_bridgeObjectRelease_n();
  v71 = 0;
  v4 = a1 + 64;
  while (v71 < *(_QWORD *)(a1 + 16))
  {
    v5 = *(unsigned __int8 *)(v4 - 7);
    v6 = *(unsigned __int8 *)(v4 - 8);
    v7 = *(unsigned __int8 *)(v4 - 6);
    v59 = *(unsigned __int8 *)(v4 - 5);
    v8 = *(unsigned __int8 *)(v4 - 4);
    v9 = *(unsigned __int8 *)(v4 - 3);
    v43 = *(unsigned __int8 *)(v4 - 2);
    v42 = *(unsigned __int8 *)(v4 - 1);
    v70 = *(unsigned __int8 *)(v4 - 15);
    v10 = *(unsigned __int8 *)(v4 - 16);
    v11 = *(unsigned __int8 *)(v4 - 14);
    v58 = *(unsigned __int8 *)(v4 - 13);
    v12 = *(unsigned __int8 *)(v4 - 12);
    v13 = *(unsigned __int8 *)(v4 - 11);
    v45 = *(unsigned __int8 *)(v4 - 10);
    v44 = *(unsigned __int8 *)(v4 - 9);
    v69 = *(unsigned __int8 *)(v4 - 23);
    v65 = *(unsigned __int8 *)(v4 - 24);
    v67 = *(unsigned __int8 *)(v4 - 22);
    v68 = *(unsigned __int8 *)(v4 - 21);
    v64 = *(unsigned __int8 *)(v4 - 20);
    v66 = *(unsigned __int8 *)(v4 - 19);
    v48 = *(unsigned __int8 *)(v4 - 18);
    v46 = *(unsigned __int8 *)(v4 - 17);
    v63 = *(unsigned __int8 *)(v4 - 31);
    v56 = *(unsigned __int8 *)(v4 - 32);
    v55 = *(unsigned __int8 *)(v4 - 30);
    v54 = *(unsigned __int8 *)(v4 - 29);
    v61 = *(unsigned __int8 *)(v4 - 28);
    v62 = *(unsigned __int8 *)(v4 - 27);
    v52 = *(unsigned __int8 *)(v4 - 26);
    v50 = *(unsigned __int8 *)(v4 - 25);
    v41 = swift_retain();
    if (!v41)
      return swift_bridgeObjectRelease_n();
    v39 = v9;
    v40 = v8;
    v14 = (v42 << 56) | (v43 << 48) | v6 | (v5 << 8) | (v7 << 16) | (v59 << 24) | (v8 << 32) | (v9 << 40);
    v38 = v10;
    v15 = (v46 << 56) | (v48 << 48) | v65 | (v69 << 8) | (v67 << 16) | (v68 << 24) | (v64 << 32) | (v66 << 40);
    v16 = (_QWORD *)*a3;
    v47 = (v50 << 56) | (v52 << 48) | v56 | (v63 << 8) | (v55 << 16) | (v54 << 24) | (v61 << 32) | (v62 << 40);
    v49 = v15;
    v51 = (v44 << 56) | (v45 << 48) | v10 | (v70 << 8) | (v11 << 16) | (v58 << 24) | (v12 << 32) | (v13 << 40);
    v53 = v14;
    v18 = sub_2497F2068(v47, v15, v51, v14);
    v19 = v16[2];
    v20 = (v17 & 1) == 0;
    if (__OFADD__(v19, v20))
      goto LABEL_20;
    v21 = v17;
    if (v16[3] < v19 + v20)
    {
      sub_249780018();
      v22 = sub_2497F2068(v47, v49, v51, v53);
      if ((v21 & 1) != (v23 & 1))
        goto LABEL_22;
      v18 = v22;
      v24 = v5;
      v25 = v12;
LABEL_10:
      v26 = v55;
      v27 = v54;
      v28 = v56;
      goto LABEL_11;
    }
    v24 = v5;
    v25 = v12;
    if ((a2 & 1) != 0)
      goto LABEL_10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257880110);
    sub_24983727C();
    v28 = v56;
    v27 = v54;
    v26 = v55;
    v25 = v12;
    v24 = v5;
LABEL_11:
    v29 = (_QWORD *)*a3;
    if ((v21 & 1) != 0)
    {
      v30 = v29[7];
      swift_release();
      *(_QWORD *)(v30 + 8 * v18) = v41;
    }
    else
    {
      v29[(v18 >> 6) + 8] |= 1 << v18;
      v31 = v29[6] + 32 * v18;
      *(_BYTE *)v31 = v28;
      *(_BYTE *)(v31 + 1) = v63;
      *(_BYTE *)(v31 + 2) = v26;
      *(_BYTE *)(v31 + 3) = v27;
      *(_BYTE *)(v31 + 4) = v61;
      *(_BYTE *)(v31 + 5) = v62;
      *(_WORD *)(v31 + 6) = HIWORD(v47);
      *(_BYTE *)(v31 + 8) = v65;
      *(_BYTE *)(v31 + 9) = v69;
      *(_BYTE *)(v31 + 10) = v67;
      *(_BYTE *)(v31 + 11) = v68;
      *(_BYTE *)(v31 + 12) = v64;
      *(_BYTE *)(v31 + 13) = v66;
      *(_WORD *)(v31 + 14) = HIWORD(v49);
      *(_BYTE *)(v31 + 16) = v38;
      *(_BYTE *)(v31 + 17) = v70;
      *(_BYTE *)(v31 + 18) = v11;
      *(_BYTE *)(v31 + 19) = v58;
      *(_BYTE *)(v31 + 20) = v25;
      *(_BYTE *)(v31 + 21) = v13;
      *(_WORD *)(v31 + 22) = HIWORD(v51);
      *(_BYTE *)(v31 + 24) = v6;
      *(_BYTE *)(v31 + 25) = v24;
      *(_BYTE *)(v31 + 26) = v7;
      *(_BYTE *)(v31 + 27) = v59;
      *(_BYTE *)(v31 + 28) = v40;
      *(_BYTE *)(v31 + 29) = v39;
      *(_WORD *)(v31 + 30) = HIWORD(v53);
      *(_QWORD *)(v29[7] + 8 * v18) = v41;
      v32 = v29[2];
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
        goto LABEL_21;
      v29[2] = v34;
    }
    v4 += 40;
    a2 = 1;
    if (v36 == ++v71)
      return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_24983763C();
  __break(1u);
  return result;
}

uint64_t sub_249756874(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  char v32;
  char v33;
  _QWORD *v34;
  unint64_t v35;
  _QWORD *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v43 = v3;
  if (!v3)
    return swift_bridgeObjectRelease_n();
  v4 = 0;
  v5 = (uint64_t *)(a1 + 48);
  while (v4 < *(_QWORD *)(a1 + 16))
  {
    v6 = v5[6];
    v65 = *((_OWORD *)v5 + 2);
    v7 = *((unsigned __int8 *)v5 - 7);
    v8 = *((unsigned __int8 *)v5 - 8);
    v9 = *((unsigned __int8 *)v5 - 6);
    v10 = *((unsigned __int8 *)v5 - 5);
    v11 = *((unsigned __int8 *)v5 - 4);
    v64 = *((unsigned __int8 *)v5 - 3);
    v54 = *((unsigned __int8 *)v5 - 2);
    v53 = *((unsigned __int8 *)v5 - 1);
    v63 = *((unsigned __int8 *)v5 - 15);
    v58 = *((unsigned __int8 *)v5 - 16);
    v62 = *((unsigned __int8 *)v5 - 14);
    v61 = *((unsigned __int8 *)v5 - 13);
    v60 = *((unsigned __int8 *)v5 - 12);
    v59 = *((unsigned __int8 *)v5 - 11);
    v56 = *((unsigned __int8 *)v5 - 10);
    v55 = *((unsigned __int8 *)v5 - 9);
    v12 = v5[3];
    v13 = v5[4];
    v51 = v5[1];
    v52 = v5[2];
    v50 = *v5;
    v14 = v4;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v45 = v13;
    if (!v13)
      return swift_bridgeObjectRelease_n();
    v46 = v14;
    v47 = v12;
    v48 = v6;
    v49 = v8;
    v15 = v8 | (v7 << 8);
    v16 = v9;
    v17 = v15 | (v9 << 16);
    v18 = v10;
    v19 = v17 | (v10 << 24);
    v20 = v11;
    v21 = (v53 << 56) | (v54 << 48) | v19 | (v11 << 32) | (v64 << 40);
    v22 = (v55 << 56) | (v56 << 48) | v58 | (v63 << 8) | (v62 << 16) | (v61 << 24) | (v60 << 32) | (v59 << 40);
    v23 = (_QWORD *)*a3;
    v25 = sub_2497F1F1C();
    v26 = v23[2];
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
      goto LABEL_20;
    v29 = v24;
    if (v23[3] < v28)
    {
      sub_249780060(v28, a2 & 1);
      v30 = sub_2497F1F1C();
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_22;
      v25 = v30;
      goto LABEL_9;
    }
    v33 = v49;
    v32 = v7;
    if ((a2 & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257880100);
      sub_24983727C();
LABEL_9:
      v33 = v49;
      v32 = v7;
    }
    v34 = (_QWORD *)*a3;
    v35 = v46;
    if ((v29 & 1) != 0)
    {
      v36 = (_QWORD *)(v34[7] + 56 * v25);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v35 = v46;
      *v36 = v50;
      v36[1] = v51;
      v36[2] = v52;
      v36[3] = v47;
      v36[4] = v45;
      v36[5] = *((_QWORD *)&v65 + 1);
      v36[6] = v48;
    }
    else
    {
      v34[(v25 >> 6) + 8] |= 1 << v25;
      v37 = (_BYTE *)(v34[6] + 16 * v25);
      *v37 = v58;
      v37[1] = v63;
      v37[2] = v62;
      v37[3] = v61;
      v37[4] = v60;
      v37[5] = v59;
      v37[6] = BYTE6(v22);
      v37[7] = HIBYTE(v22);
      v37[8] = v33;
      v37[9] = v32;
      v37[10] = v16;
      v37[11] = v18;
      v37[12] = v20;
      v37[13] = v64;
      v37[14] = BYTE6(v21);
      v37[15] = HIBYTE(v21);
      v38 = v34[7] + 56 * v25;
      *(_QWORD *)v38 = v50;
      *(_QWORD *)(v38 + 8) = v51;
      *(_QWORD *)(v38 + 16) = v52;
      *(_QWORD *)(v38 + 24) = v47;
      *(_OWORD *)(v38 + 32) = v65;
      *(_QWORD *)(v38 + 48) = v48;
      v39 = v34[2];
      v40 = __OFADD__(v39, 1);
      v41 = v39 + 1;
      if (v40)
        goto LABEL_21;
      v34[2] = v41;
    }
    v4 = v35 + 1;
    v5 += 9;
    a2 = 1;
    if (v43 == v4)
      return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_24983763C();
  __break(1u);
  return result;
}

uint64_t sub_249756C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t isStackAllocationSafe;
  unint64_t *v11;
  uint64_t v12;
  unint64_t *v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  sub_249758298(a2);
  isStackAllocationSafe = sub_249758298(a2);
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v11 = (_QWORD *)((char *)v15 - ((8 * v9 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_249781B64(0, v9, v11);
    sub_249758298(a2);
    v12 = sub_2497570E8(v11, v9, a1, a2, a3);
    if (v3)
      swift_willThrow();
    else
      a3 = v12;
    sub_2497582DC(a2);
    sub_2497582DC(a2);
  }
  else
  {
    v13 = (unint64_t *)swift_slowAlloc();
    sub_249781B64(0, v9, v13);
    sub_249758298(a2);
    a3 = sub_2497570E8(v13, v9, a1, a2, a3);
    MEMORY[0x24BCF906C](v13, -1, -1);
    sub_2497582DC(a2);
    sub_2497582DC(a2);
  }
  sub_2497582DC(a2);
  return a3;
}

uint64_t sub_249756E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t type metadata accessor for UniversalControlDisplaySolver0()
{
  return objc_opt_self();
}

uint64_t method lookup function for UniversalControlDisplaySolver0()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniversalControlDisplaySolver0.__allocating_init<A>(links:devices:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of UniversalControlDisplaySolver0.solve()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t destroy for UniversalControlDisplaySolver0.DeviceProxy()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UniversalControlDisplaySolver0.DeviceProxy(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for UniversalControlDisplaySolver0.DeviceProxy(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for UniversalControlDisplaySolver0.DeviceProxy(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalControlDisplaySolver0.DeviceProxy(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 32);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlDisplaySolver0.DeviceProxy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlDisplaySolver0.DeviceProxy()
{
  return &type metadata for UniversalControlDisplaySolver0.DeviceProxy;
}

uint64_t sub_2497570E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;

  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = a5;
  if ((v7 & *(_QWORD *)(a3 + 64)) != 0)
    goto LABEL_15;
  if ((unint64_t)(v6 + 63) >> 6 <= 1)
    goto LABEL_16;
  if (*(_QWORD *)(a3 + 72))
    goto LABEL_15;
  if ((unint64_t)(v6 + 63) >> 6 <= 2)
    goto LABEL_16;
  if (*(_QWORD *)(a3 + 80))
    goto LABEL_15;
  if ((unint64_t)(v6 + 63) >> 6 <= 3)
    goto LABEL_16;
  if (*(_QWORD *)(a3 + 88))
    goto LABEL_15;
  v9 = 4;
  if ((unint64_t)(v6 + 63) >> 6 <= 4)
    goto LABEL_16;
  if (*(_QWORD *)(a3 + 96))
  {
LABEL_15:
    sub_2497CFB08();
    __asm { BR              X8 }
  }
  while (1)
  {
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      JUMPOUT(0x249757344);
    }
    if (v10 >= (uint64_t)((unint64_t)(v6 + 63) >> 6))
      break;
    ++v9;
    if (*(_QWORD *)(a3 + 64 + 8 * v10))
      goto LABEL_15;
  }
LABEL_16:
  v11 = sub_249757354(a1, a2, 0, a3);
  sub_2497582DC(a4);
  return v11;
}

uint64_t sub_249757354(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) != a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578800F8);
    v66 = sub_249837354();
    if (a2 < 1)
      v6 = 0;
    else
      v6 = *a1;
    v7 = 0;
    v38 = v4;
    v39 = v66 + 64;
    while (1)
    {
      v44 = v5;
      if (v6)
      {
        v40 = (v6 - 1) & v6;
        v41 = v7;
        v8 = __clz(__rbit64(v6)) | (v7 << 6);
      }
      else
      {
        v9 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_40;
        if (v9 >= a2)
          return v66;
        v10 = a1[v9];
        v11 = v7 + 1;
        if (!v10)
        {
          v11 = v7 + 2;
          if (v7 + 2 >= a2)
            return v66;
          v10 = a1[v11];
          if (!v10)
          {
            v11 = v7 + 3;
            if (v7 + 3 >= a2)
              return v66;
            v10 = a1[v11];
            if (!v10)
            {
              v12 = v7 + 4;
              if (v7 + 4 >= a2)
                return v66;
              v10 = a1[v12];
              if (!v10)
              {
                while (1)
                {
                  v11 = v12 + 1;
                  if (__OFADD__(v12, 1))
                    goto LABEL_41;
                  if (v11 >= a2)
                    return v66;
                  v10 = a1[v11];
                  ++v12;
                  if (v10)
                    goto LABEL_24;
                }
              }
              v11 = v7 + 4;
            }
          }
        }
LABEL_24:
        v40 = (v10 - 1) & v10;
        v41 = v11;
        v8 = __clz(__rbit64(v10)) + (v11 << 6);
      }
      v13 = *(_QWORD *)(v4 + 56);
      v14 = (char *)(*(_QWORD *)(v4 + 48) + 32 * v8);
      v45 = *v14;
      v46 = v14[1];
      v47 = v14[2];
      v48 = v14[3];
      v49 = v14[4];
      v50 = v14[5];
      v15 = v14[6];
      v16 = v14[7];
      v17 = v14[8];
      v18 = v14[9];
      v19 = v14[10];
      v20 = v14[11];
      v21 = v14[12];
      v22 = v14[13];
      v23 = v14[14];
      v24 = v14[15];
      v51 = v14[16];
      v52 = v14[17];
      v53 = v14[18];
      v54 = v14[19];
      v55 = v14[20];
      v56 = v14[21];
      v57 = v14[22];
      v58 = v14[23];
      v59 = v14[24];
      v60 = v14[25];
      v42 = *(_QWORD *)(v13 + 8 * v8);
      v43 = v14[27];
      v61 = v14[26];
      v62 = v14[28];
      v63 = v14[29];
      v64 = v14[30];
      v65 = v14[31];
      sub_249837690();
      sub_24983769C();
      sub_24983769C();
      v25 = sub_2498376E4();
      v26 = -1 << *(_BYTE *)(v66 + 32);
      v27 = v25 & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v39 + 8 * (v27 >> 6))) != 0)
      {
        v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v39 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_34;
      }
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v39 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
LABEL_34:
      *(_QWORD *)(v39 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      v34 = (_BYTE *)(*(_QWORD *)(v66 + 48) + 32 * v29);
      *v34 = v45;
      v34[1] = v46;
      v34[2] = v47;
      v34[3] = v48;
      v34[4] = v49;
      v34[5] = v50;
      v34[6] = v15;
      v34[7] = v16;
      v34[8] = v17;
      v34[9] = v18;
      v34[10] = v19;
      v34[11] = v20;
      v34[12] = v21;
      v34[13] = v22;
      v34[14] = v23;
      v34[15] = v24;
      v34[16] = v51;
      v34[17] = v52;
      v34[18] = v53;
      v34[19] = v54;
      v34[20] = v55;
      v34[21] = v56;
      v34[22] = v57;
      v34[23] = v58;
      v34[24] = v59;
      v34[25] = v60;
      v34[26] = v61;
      v34[27] = v43;
      v34[28] = v62;
      v34[29] = v63;
      v34[30] = v64;
      v34[31] = v65;
      *(_QWORD *)(*(_QWORD *)(v66 + 56) + 8 * v29) = v42;
      ++*(_QWORD *)(v66 + 16);
      v5 = v44 - 1;
      if (__OFSUB__(v44, 1))
        goto LABEL_39;
      swift_retain();
      v4 = v38;
      v6 = v40;
      v7 = v41;
      if (v44 == 1)
        return v66;
    }
  }
  swift_retain();
  return v4;
}

uint64_t sub_249757924(uint64_t result, uint64_t a2, unint64_t a3, void (*a4)(uint64_t, _QWORD, uint64_t), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  void (*v20)(_BYTE *, _QWORD);
  uint64_t *v21;
  uint64_t v22;
  _BYTE v23[32];

  v13 = result;
  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    OUTLINED_FUNCTION_74();
    v15 = OUTLINED_FUNCTION_73();
    result = OUTLINED_FUNCTION_23_1();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (v13)
  {
    if (v14)
    {
      OUTLINED_FUNCTION_74();
      v16 = sub_249837324();
      result = OUTLINED_FUNCTION_23_1();
      if (v16 <= a2)
      {
        if (v15 >= 1)
        {
          v17 = sub_249758258(a5, a6);
          OUTLINED_FUNCTION_74();
          for (i = 0; i != v15; ++i)
          {
            v19 = __swift_instantiateConcreteTypeFromMangledName(a6);
            v20 = (void (*)(_BYTE *, _QWORD))a7(v23, i, a3, v19, v17);
            v22 = *v21;
            swift_retain();
            v20(v23, 0);
            *(_QWORD *)(v13 + 8 * i) = v22;
          }
          OUTLINED_FUNCTION_23_1();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        a4((a3 & 0xFFFFFFFFFFFFFF8) + 32, *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10), v13);
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_249757A9C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_249757924(a1, a2, a3, (void (*)(uint64_t, _QWORD, uint64_t))sub_24974DBB4, &qword_2578800D0, &qword_2578800C8, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_249778594);
}

uint64_t sub_249757AC0()
{
  return swift_release();
}

void sub_249757AC8()
{
  _QWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;

  OUTLINED_FUNCTION_68();
  v8 = v7 & v6;
  if (!v1)
  {
    v9 = 0;
LABEL_33:
    *v0 = v3;
    v0[1] = v4;
    v0[2] = ~v5;
    v0[3] = v9;
    v0[4] = v8;
    return;
  }
  if (!v2)
  {
    v9 = 0;
    goto LABEL_33;
  }
  if (v2 < 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v9 = 0;
  v10 = 0;
  v11 = (unint64_t)(63 - v5) >> 6;
  while (v8)
  {
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v13 = v12 | (v9 << 6);
LABEL_17:
    ++v10;
    *v1++ = *(_OWORD *)(*(_QWORD *)(v3 + 48) + 16 * v13);
    if (v10 == v2)
      goto LABEL_33;
  }
  v14 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v14 >= v11)
    goto LABEL_29;
  v15 = *(_QWORD *)(v4 + 8 * v14);
  if (v15)
  {
LABEL_16:
    v17 = __clz(__rbit64(v15));
    v8 = (v15 - 1) & v15;
    v13 = v17 + (v14 << 6);
    v9 = v14;
    goto LABEL_17;
  }
  v9 += 2;
  if (v14 + 1 >= v11)
  {
    v8 = 0;
    v9 = v14;
    goto LABEL_33;
  }
  v15 = *(_QWORD *)(v4 + 8 * v9);
  if (v15)
  {
LABEL_12:
    v14 = v9;
    goto LABEL_16;
  }
  v16 = v14 + 2;
  if (v14 + 2 >= v11)
    goto LABEL_29;
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v9 = v14 + 3;
  if (v14 + 3 >= v11)
  {
    v8 = 0;
    v9 = v14 + 2;
    goto LABEL_33;
  }
  v15 = *(_QWORD *)(v4 + 8 * v9);
  if (v15)
    goto LABEL_12;
  v16 = v14 + 4;
  if (v14 + 4 >= v11)
  {
LABEL_29:
    v8 = 0;
    goto LABEL_33;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
LABEL_15:
    v14 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    v14 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v14 >= v11)
    {
      v8 = 0;
      v9 = v11 - 1;
      goto LABEL_33;
    }
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v16;
    if (v15)
      goto LABEL_16;
  }
LABEL_36:
  __break(1u);
}

void sub_249757C48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_19_2();
  if (v8 && (v9 = v7) != 0)
  {
    if (v7 < 0)
    {
LABEL_30:
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_36_0();
      if (!v4)
        goto LABEL_6;
LABEL_5:
      OUTLINED_FUNCTION_63();
      while (1)
      {
        ++v3;
        v12 = (_OWORD *)(*(_QWORD *)(v0 + 48) + 32 * v10);
        v13 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v10);
        v14 = v12[1];
        *(_OWORD *)v1 = *v12;
        *(_OWORD *)(v1 + 16) = v14;
        *(_QWORD *)(v1 + 32) = v13;
        if (v3 == v9)
        {
          swift_retain();
          goto LABEL_28;
        }
        v1 += 40;
        swift_retain();
        if (v4)
          goto LABEL_5;
LABEL_6:
        v11 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (v11 >= v5)
          goto LABEL_28;
        if (!*(_QWORD *)(v2 + 8 * v11))
        {
          v6 += 2;
          if (v11 + 1 >= v5)
            goto LABEL_28;
          if (!*(_QWORD *)(v2 + 8 * v6))
          {
            if (v11 + 2 >= v5)
              goto LABEL_28;
            if (!*(_QWORD *)(v2 + 8 * (v11 + 2)))
            {
              v6 = v11 + 3;
              if (v11 + 3 >= v5)
                goto LABEL_28;
              if (!*(_QWORD *)(v2 + 8 * v6))
              {
                v15 = v11 + 4;
                if (v11 + 4 >= v5)
                  goto LABEL_28;
                if (!*(_QWORD *)(v2 + 8 * v15))
                  break;
              }
            }
          }
        }
LABEL_14:
        OUTLINED_FUNCTION_48();
      }
      while (1)
      {
        v16 = v15 + 1;
        if (__OFADD__(v15, 1))
          break;
        if (v16 >= v5)
          goto LABEL_28;
        ++v15;
        if (*(_QWORD *)(v2 + 8 * v16))
          goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_28:
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_31_0();
  }
}

_QWORD *sub_249757DB8(_QWORD *result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_36:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_19:
    ++v9;
    *a2++ = *(_OWORD *)(*(_QWORD *)(a4 + 48) + 16 * v12);
    if (v9 == a3)
      goto LABEL_36;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v13 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_18;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_14:
    v13 = v8;
LABEL_18:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_19;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_31;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    v13 = v15;
    goto LABEL_18;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_31:
    v7 = 0;
LABEL_35:
    a3 = v9;
    goto LABEL_36;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_17;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_35;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_249757F4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  OUTLINED_FUNCTION_68();
  v8 = v7 & v6;
  if (!v1)
  {
    v9 = 0;
LABEL_33:
    *v0 = v3;
    v0[1] = v4;
    v0[2] = ~v5;
    v0[3] = v9;
    v0[4] = v8;
    return;
  }
  if (!v2)
  {
    v9 = 0;
    goto LABEL_33;
  }
  if (v2 < 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v9 = 0;
  v10 = 0;
  v11 = (unint64_t)(63 - v5) >> 6;
  while (v8)
  {
    v12 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v13 = v12 | (v9 << 6);
LABEL_17:
    v18 = *(_QWORD *)(v3 + 48) + 80 * v13;
    v19 = *(_BYTE *)(v18 + 64);
    ++v10;
    v20 = *(_DWORD *)(v18 + 66);
    v21 = *(_QWORD *)(v18 + 72);
    v22 = *(_OWORD *)(v18 + 16);
    v23 = *(_OWORD *)(v18 + 32);
    v24 = *(_OWORD *)(v18 + 48);
    *(_OWORD *)v1 = *(_OWORD *)v18;
    *(_OWORD *)(v1 + 16) = v22;
    *(_OWORD *)(v1 + 32) = v23;
    *(_OWORD *)(v1 + 48) = v24;
    *(_BYTE *)(v1 + 64) = v19;
    *(_DWORD *)(v1 + 66) = v20;
    *(_QWORD *)(v1 + 72) = v21;
    v1 += 80;
    if (v10 == v2)
      goto LABEL_33;
  }
  v14 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v14 >= v11)
    goto LABEL_29;
  v15 = *(_QWORD *)(v4 + 8 * v14);
  if (v15)
  {
LABEL_16:
    v17 = __clz(__rbit64(v15));
    v8 = (v15 - 1) & v15;
    v13 = v17 + (v14 << 6);
    v9 = v14;
    goto LABEL_17;
  }
  v9 += 2;
  if (v14 + 1 >= v11)
  {
    v8 = 0;
    v9 = v14;
    goto LABEL_33;
  }
  v15 = *(_QWORD *)(v4 + 8 * v9);
  if (v15)
  {
LABEL_12:
    v14 = v9;
    goto LABEL_16;
  }
  v16 = v14 + 2;
  if (v14 + 2 >= v11)
    goto LABEL_29;
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v9 = v14 + 3;
  if (v14 + 3 >= v11)
  {
    v8 = 0;
    v9 = v14 + 2;
    goto LABEL_33;
  }
  v15 = *(_QWORD *)(v4 + 8 * v9);
  if (v15)
    goto LABEL_12;
  v16 = v14 + 4;
  if (v14 + 4 >= v11)
  {
LABEL_29:
    v8 = 0;
    goto LABEL_33;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
LABEL_15:
    v14 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    v14 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v14 >= v11)
    {
      v8 = 0;
      v9 = v11 - 1;
      goto LABEL_33;
    }
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v16;
    if (v15)
      goto LABEL_16;
  }
LABEL_36:
  __break(1u);
}

void sub_2497580F4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_19_2();
  if (v8 && (v9 = v7) != 0)
  {
    if (v7 < 0)
    {
LABEL_30:
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_36_0();
      if (!v4)
        goto LABEL_6;
LABEL_5:
      OUTLINED_FUNCTION_63();
      while (1)
      {
        ++v3;
        *v1 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 8 * v10);
        if (v3 == v9)
        {
          swift_retain();
          goto LABEL_28;
        }
        ++v1;
        swift_retain();
        if (v4)
          goto LABEL_5;
LABEL_6:
        v11 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        if (v11 >= v5)
          goto LABEL_28;
        if (!*(_QWORD *)(v2 + 8 * v11))
        {
          v6 += 2;
          if (v11 + 1 >= v5)
            goto LABEL_28;
          if (!*(_QWORD *)(v2 + 8 * v6))
          {
            if (v11 + 2 >= v5)
              goto LABEL_28;
            if (!*(_QWORD *)(v2 + 8 * (v11 + 2)))
            {
              v6 = v11 + 3;
              if (v11 + 3 >= v5)
                goto LABEL_28;
              if (!*(_QWORD *)(v2 + 8 * v6))
              {
                v12 = v11 + 4;
                if (v11 + 4 >= v5)
                  goto LABEL_28;
                if (!*(_QWORD *)(v2 + 8 * v12))
                  break;
              }
            }
          }
        }
LABEL_14:
        OUTLINED_FUNCTION_48();
      }
      while (1)
      {
        v13 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        if (v13 >= v5)
          goto LABEL_28;
        ++v12;
        if (*(_QWORD *)(v2 + 8 * v13))
          goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_28:
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_31_0();
  }
}

uint64_t sub_249758258(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249758298(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2497582DC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249758320(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void OUTLINED_FUNCTION_0_3()
{
  int v0;

  LODWORD(STACK[0x320]) = v0;
}

uint64_t OUTLINED_FUNCTION_2_2()
{
  return sub_249757AC0();
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return 0;
}

void OUTLINED_FUNCTION_4_2()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  STACK[0x270] = v0;
  STACK[0x268] = STACK[0x418];
  STACK[0x260] = STACK[0x370];
  STACK[0x258] = STACK[0x408];
  STACK[0x238] = v2;
  STACK[0x230] = v1;
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return swift_bridgeObjectRetain();
}

BOOL OUTLINED_FUNCTION_8_2@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_9_2()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_11_2(uint64_t a1@<X8>)
{
  char v1;
  uint64_t v2;

  *(_BYTE *)(a1 + 95) = v1;
  *(_BYTE *)(a1 + 96) = STACK[0x320];
  *(_WORD *)(a1 + 98) = STACK[0x2FC];
  *(_WORD *)(a1 + 100) = STACK[0x2C8];
  *(_QWORD *)(a1 + 104) = v2;
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_18_2(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = a1;
}

uint64_t OUTLINED_FUNCTION_21_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  return v4(0, v5, a3, v3);
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_23_1()
{
  return swift_bridgeObjectRelease();
}

double OUTLINED_FUNCTION_28_0()
{
  double v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_32_0()
{
  return memcmp(&STACK[0x4E8], &STACK[0x4D0], 0x10uLL);
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0 + 32, v2);
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_35_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_249753EAC(a1, a2, a3, a4, a5);
}

unint64_t OUTLINED_FUNCTION_39_0()
{
  return STACK[0x380];
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_42_0()
{
  STACK[0x3D8] = 0;
  STACK[0x460] = 0;
  STACK[0x4B8] = 0;
}

uint64_t OUTLINED_FUNCTION_43_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_44()
{
  unint64_t v0;

  STACK[0x4E8] = v0;
  return sub_249752BDC((uint64_t *)&STACK[0x4E8]);
}

void OUTLINED_FUNCTION_45_0()
{
  LOBYTE(STACK[0x4EA]) = STACK[0x4A8];
  LOBYTE(STACK[0x4EB]) = STACK[0x498];
  LOBYTE(STACK[0x4EC]) = STACK[0x4A0];
}

uint64_t OUTLINED_FUNCTION_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_249753EAC(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_47(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_249753EAC(a1, a2, a3, a4, a5);
}

void OUTLINED_FUNCTION_49()
{
  LOBYTE(STACK[0x4ED]) = STACK[0x470];
  LOBYTE(STACK[0x4EE]) = STACK[0x478];
  LOBYTE(STACK[0x4EF]) = STACK[0x480];
}

uint64_t OUTLINED_FUNCTION_50()
{
  return swift_release();
}

unint64_t OUTLINED_FUNCTION_51@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v41;

  return sub_2497F2068(a1, a2, a3, a4 | (v41 << 48) | (a41 << 56));
}

uint64_t OUTLINED_FUNCTION_52()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_249753EAC(a1, a2, a3, a4, v4);
}

unint64_t OUTLINED_FUNCTION_55()
{
  return STACK[0x320];
}

uint64_t OUTLINED_FUNCTION_56()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *v0 = v1;
  v0[1] = v3;
  v0[2] = ~v4;
  v0[3] = v6;
  v0[4] = v5;
  return v2;
}

uint64_t OUTLINED_FUNCTION_57(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249756C68(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_58()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_61()
{
  return swift_release();
}

unint64_t OUTLINED_FUNCTION_64()
{
  return STACK[0x380];
}

uint64_t OUTLINED_FUNCTION_65()
{
  return swift_release();
}

double OUTLINED_FUNCTION_66()
{
  return sub_2497CFB08();
}

uint64_t OUTLINED_FUNCTION_70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_249756E48(a1, a2, a3, a4, a5);
}

void OUTLINED_FUNCTION_71(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * a1;
}

uint64_t OUTLINED_FUNCTION_72(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_249756E48(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_73()
{
  return sub_249837324();
}

uint64_t OUTLINED_FUNCTION_74()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_75()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_76()
{
  JUMPOUT(0x24BCF8148);
}

uint64_t OUTLINED_FUNCTION_77()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_78()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_79@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

BOOL OUTLINED_FUNCTION_80@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t destroy for DispatchSink()
{
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

_QWORD *_s16UniversalControl12DispatchSinkVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DispatchSink(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DispatchSink(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DispatchSink(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DispatchSink(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DispatchSink()
{
  return &type metadata for DispatchSink;
}

uint64_t sub_249758B1C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  swift_getObjectType();
  sub_24983700C();
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24983712C();
    sub_249836B44();
    sub_249759088(&qword_257880130, (uint64_t (*)(uint64_t))MEMORY[0x24BDB9B60], MEMORY[0x24BDB9B70]);
    result = sub_249836F4C();
    a1 = v19;
    v3 = v20;
    v4 = v21;
    v5 = v22;
    v6 = v23;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v3 = a1 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v5 = 0;
  }
  v10 = (unint64_t)(v4 + 64) >> 6;
  if (a1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v6)
    {
      v11 = (v6 - 1) & v6;
      v12 = __clz(__rbit64(v6)) | (v5 << 6);
      v13 = v5;
      goto LABEL_27;
    }
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v14 >= v10)
      return sub_249757AC0();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    v13 = v5 + 1;
    if (!v15)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v10)
        return sub_249757AC0();
      v15 = *(_QWORD *)(v3 + 8 * v13);
      if (!v15)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v10)
          return sub_249757AC0();
        v15 = *(_QWORD *)(v3 + 8 * v13);
        if (!v15)
        {
          v13 = v5 + 4;
          if (v5 + 4 >= v10)
            return sub_249757AC0();
          v15 = *(_QWORD *)(v3 + 8 * v13);
          if (!v15)
          {
            v16 = v5 + 5;
            while (v16 < v10)
            {
              v15 = *(_QWORD *)(v3 + 8 * v16++);
              if (v15)
              {
                v13 = v16 - 1;
                goto LABEL_26;
              }
            }
            return sub_249757AC0();
          }
        }
      }
    }
LABEL_26:
    v11 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v13 << 6);
LABEL_27:
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    swift_retain();
    if (!v17)
      return sub_249757AC0();
    while (1)
    {
      sub_249836B38();
      result = swift_release();
      v5 = v13;
      v6 = v11;
      if ((a1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_249837138())
      {
        sub_249836B44();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        v13 = v5;
        v11 = v6;
        if (v18)
          continue;
      }
      return sub_249757AC0();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_249758D90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v15;
  id v16;
  _QWORD aBlock[6];

  v16 = a1;
  v5 = sub_249836BEC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_249836C04();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249759034();
  sub_249836FF4();
  swift_getObjectType();
  aBlock[4] = a2;
  aBlock[5] = a3;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24975ED5C;
  aBlock[3] = &block_descriptor;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_249836BF8();
  sub_249758F30();
  sub_249837000();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  sub_249837018();

  swift_release();
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_249758F30()
{
  sub_249836BEC();
  sub_249759088(&qword_257880140, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880148);
  sub_2497590C8();
  return sub_2498370FC();
}

uint64_t sub_249758FC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;

  v2 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x24BCF90FC](v2);
  if (result)
  {
    v4 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24975902C()
{
  uint64_t *v0;

  return sub_249758B1C(*v0);
}

unint64_t sub_249759034()
{
  unint64_t result;

  result = qword_257880138;
  if (!qword_257880138)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257880138);
  }
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_249759088(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24BCF8F94](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2497590C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257880150;
  if (!qword_257880150)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257880148);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257880150);
  }
  return result;
}

void sub_24975910C(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

uint64_t sub_249759114@<X0>(uint64_t result@<X0>, unsigned __int8 a2@<W1>, _QWORD *a3@<X8>)
{
  *a3 = (a2 | result) & 0xF;
  return result;
}

void sub_249759124(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

uint64_t sub_24975912C@<X0>(uint64_t result@<X0>, unsigned __int8 a2@<W1>, _QWORD *a3@<X8>)
{
  *a3 = result & a2 & 0xF;
  return result;
}

void sub_24975913C(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

uint64_t sub_249759144@<X0>(uint64_t result@<X0>, unsigned __int8 a2@<W1>, _QWORD *a3@<X8>)
{
  *a3 = (a2 ^ result) & 0xF;
  return result;
}

void sub_249759154(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_7_3(*v1 | a1);
}

uint64_t sub_249759160(uint64_t result)
{
  _QWORD *v1;

  *v1 = (*(_DWORD *)v1 | result) & 0xF;
  return result;
}

void sub_249759174(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_7_3(*v1 & a1);
}

uint64_t sub_249759180(uint64_t result)
{
  _QWORD *v1;

  *v1 = result & *(_DWORD *)v1 & 0xF;
  return result;
}

void sub_249759194(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_7_3(*v1 ^ a1);
}

uint64_t sub_2497591A0(uint64_t result)
{
  _QWORD *v1;

  *v1 = (*(_DWORD *)v1 ^ result) & 0xF;
  return result;
}

void sub_2497591B4(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

uint64_t sub_2497591BC@<X0>(uint64_t result@<X0>, unsigned __int8 a2@<W1>, _QWORD *a3@<X8>)
{
  *a3 = a2 & (a2 ^ result) & 0xF;
  return result;
}

BOOL sub_2497591D0(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_2497591DC(char a1, uint64_t a2)
{
  return ((~a1 | 0xFFFFFFFFFFFFFFF0) & a2) == 0;
}

BOOL sub_2497591F0(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_2497591FC(int a1, unsigned int a2)
{
  return (a1 & a2 & 0xFLL) == 0;
}

BOOL sub_24975920C(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_249759218(uint64_t a1, unsigned __int8 a2)
{
  return (a1 & a2 & 0xF) == a1;
}

BOOL sub_24975922C(uint64_t a1)
{
  return a1 == 0;
}

void sub_249759238(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_7_3(*v1 & ~a1);
}

uint64_t sub_249759244(uint64_t result)
{
  _QWORD *v1;

  *v1 = *(_DWORD *)v1 & (*(_BYTE *)v1 ^ result) & 0xF;
  return result;
}

uint64_t sub_24975925C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (char *)(a1 + 32);
    do
    {
      v6 = *v5++;
      v7 = 1 << *(_QWORD *)&asc_249839290[8 * v6];
      if ((v7 & v4) != 0)
        v7 = 0;
      v4 |= v7;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_2497592C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (unsigned __int8 *)(a1 + 32);
    while (1)
    {
      v7 = *v5++;
      v6 = v7;
      if (v7 >= 0x40)
        break;
      if (v6 == 63)
      {
        result = sub_249837300();
        __break(1u);
        return result;
      }
      v8 = 1 << v6;
      if ((v8 & v4) == 0)
        goto LABEL_7;
LABEL_8:
      if (!--v3)
        goto LABEL_11;
    }
    v8 = 0;
LABEL_7:
    v4 |= v8;
    goto LABEL_8;
  }
  v4 = 0;
LABEL_11:
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t UniversalControlEdgeMask.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UniversalControlEdgeMask.rawValue.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*UniversalControlEdgeMask.rawValue.modify())()
{
  return nullsub_1;
}

UniversalControl::UniversalControlEdgeMask __swiftcall UniversalControlEdgeMask.init()()
{
  _QWORD *v0;
  UniversalControl::UniversalControlEdgeMask result;

  *v0 = 0;
  return result;
}

UniversalControl::UniversalControlEdgeMask __swiftcall UniversalControlEdgeMask.init(rawValue:)(Swift::UInt rawValue)
{
  _QWORD *v1;
  UniversalControl::UniversalControlEdgeMask result;

  OUTLINED_FUNCTION_11_1(v1);
  return result;
}

Swift::Bool __swiftcall UniversalControlEdgeMask.contains(_:)(UniversalControl::UniversalControlEdge a1)
{
  _QWORD *v1;
  uint64_t v2;
  Swift::Bool result;

  if (a1 > 0x3Fu)
  {
    v2 = 0;
    return (v2 & *v1) != 0;
  }
  if (a1 != 63)
  {
    v2 = 1 << a1;
    return (v2 & *v1) != 0;
  }
  OUTLINED_FUNCTION_0_4();
  result = OUTLINED_FUNCTION_1_3();
  __break(1u);
  return result;
}

uint64_t sub_249759424(unsigned __int8 a1)
{
  uint64_t result;

  if (a1 >= 0x40u)
    return 0;
  if (a1 != 63)
    return 1 << a1;
  result = sub_249837300();
  __break(1u);
  return result;
}

Swift::tuple_inserted_Bool_memberAfterInsert_UniversalControl_UniversalControlEdge __swiftcall UniversalControlEdgeMask.insert(_:)(UniversalControl::UniversalControlEdge a1)
{
  char v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  UniversalControl::UniversalControlEdge v8;
  Swift::tuple_inserted_Bool_memberAfterInsert_UniversalControl_UniversalControlEdge result;

  OUTLINED_FUNCTION_4_3();
  if (!v4 & v5)
  {
    v6 = 0;
  }
  else
  {
    if (v4)
    {
LABEL_8:
      *v2 = OUTLINED_FUNCTION_8_3() | v3;
      goto LABEL_9;
    }
    if (v1 == 63)
    {
      OUTLINED_FUNCTION_0_4();
      v7 = OUTLINED_FUNCTION_1_3();
      __break(1u);
      goto _$s16UniversalControl0aB8EdgeMaskV6insertySb8inserted_AA0abC0O17memberAfterInserttAGF;
    }
    v6 = 1 << v1;
  }
  if ((v6 & v3) == 0)
    goto LABEL_8;
LABEL_9:
  OUTLINED_FUNCTION_3_3();
_$s16UniversalControl0aB8EdgeMaskV6insertySb8inserted_AA0abC0O17memberAfterInserttAGF:
  result.memberAfterInsert = v8;
  result.inserted = v7;
  return result;
}

UniversalControl::UniversalControlEdge_optional __swiftcall UniversalControlEdgeMask.remove(_:)(UniversalControl::UniversalControlEdge a1)
{
  char v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  UniversalControl::UniversalControlEdge_optional result;

  OUTLINED_FUNCTION_4_3();
  if (!v4 & v5)
  {
    v6 = 0;
    goto LABEL_7;
  }
  if (v4)
  {
LABEL_9:
    OUTLINED_FUNCTION_3_3();
    return result;
  }
  if (v1 != 63)
  {
    v6 = 1 << v1;
LABEL_7:
    if ((v6 & v3) != 0)
      *v2 = v3 & ~OUTLINED_FUNCTION_8_3();
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_0_4();
  result.value = OUTLINED_FUNCTION_1_3();
  __break(1u);
  return result;
}

UniversalControl::UniversalControlEdge_optional __swiftcall UniversalControlEdgeMask.update(with:)(UniversalControl::UniversalControlEdge with)
{
  char v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  UniversalControl::UniversalControlEdge_optional result;

  OUTLINED_FUNCTION_4_3();
  if (!v4 & v5)
  {
    v6 = 0;
    goto LABEL_7;
  }
  if (v4)
    goto LABEL_8;
  if (v1 != 63)
  {
    v6 = 1 << v1;
LABEL_7:
    if ((v6 & v3) != 0)
    {
LABEL_9:
      OUTLINED_FUNCTION_3_3();
      return result;
    }
LABEL_8:
    *v2 = OUTLINED_FUNCTION_8_3() | v3;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_0_4();
  result.value = OUTLINED_FUNCTION_1_3();
  __break(1u);
  return result;
}

UniversalControl::UniversalControlEdgeMask sub_24975963C(Swift::UInt *a1)
{
  return UniversalControlEdgeMask.init(rawValue:)(*a1);
}

BOOL sub_249759648(UniversalControl::UniversalControlEdge *a1)
{
  return UniversalControlEdgeMask.contains(_:)(*a1);
}

uint64_t sub_249759650@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  return sub_249759114(*a1, *v2, a2);
}

uint64_t sub_24975965C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  return sub_24975912C(*a1, *v2, a2);
}

uint64_t sub_249759668@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  return sub_249759144(*a1, *v2, a2);
}

BOOL sub_249759674(_BYTE *a1, UniversalControl::UniversalControlEdge *a2)
{
  Swift::Bool inserted;
  char v4;

  inserted = UniversalControlEdgeMask.insert(_:)(*a2).inserted;
  *a1 = v4;
  return inserted;
}

UniversalControl::UniversalControlEdge_optional sub_2497596A4@<W0>(UniversalControl::UniversalControlEdge *a1@<X0>, UniversalControl::UniversalControlEdge_optional *a2@<X8>)
{
  UniversalControl::UniversalControlEdge_optional result;

  result.value = UniversalControlEdgeMask.remove(_:)(*a1).value;
  a2->value = result.value;
  return result;
}

UniversalControl::UniversalControlEdge_optional sub_2497596CC@<W0>(UniversalControl::UniversalControlEdge *a1@<X0>, UniversalControl::UniversalControlEdge_optional *a2@<X8>)
{
  UniversalControl::UniversalControlEdge_optional result;

  result.value = UniversalControlEdgeMask.update(with:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_2497596F4(uint64_t *a1)
{
  return sub_249759160(*a1);
}

uint64_t sub_2497596FC(uint64_t *a1)
{
  return sub_249759180(*a1);
}

uint64_t sub_249759704(uint64_t *a1)
{
  return sub_2497591A0(*a1);
}

uint64_t sub_24975970C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  return sub_2497591BC(*a1, *v2, a2);
}

BOOL sub_249759718(_QWORD *a1)
{
  uint64_t *v1;

  return sub_2497591DC(*a1, *v1);
}

BOOL sub_249759724(_QWORD *a1)
{
  _QWORD *v1;

  return sub_2497591FC(*a1, *v1);
}

BOOL sub_249759730(uint64_t *a1)
{
  _QWORD *v1;

  return sub_249759218(*a1, *v1);
}

uint64_t sub_24975973C(uint64_t *a1)
{
  return sub_249759244(*a1);
}

UniversalControl::UniversalControlEdgeMask sub_249759744@<X0>(Swift::UInt *a1@<X0>, uint64_t a2@<X8>)
{
  UniversalControl::UniversalControlEdgeMask result;

  result.rawValue = UniversalControlEdgeMask.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_24975976C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = UniversalControlEdgeMask.intValue.getter();
  *a1 = result;
  return result;
}

void UniversalControlEdgeMask.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  unsigned __int8 v13;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249837708();
  if (v2)
    goto LABEL_14;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v5 = sub_24983757C();
  v8 = 0;
  if ((v5 & 1) != 0)
  {
LABEL_13:
    OUTLINED_FUNCTION_9_3(v5, v6, v7);
    *a2 = v8;
LABEL_14:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    OUTLINED_FUNCTION_2_3();
    return;
  }
  while (1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_249759954();
    sub_249837564();
    v9 = 1 << v13;
    v10 = v13 >= 0x40u ? 0 : 1 << v13;
    if (v10 < 0)
      break;
    if ((v10 & v8) == 0)
    {
      if (v13 < 0x40u)
      {
        if ((v13 & 0x3F) == 0x3F)
          break;
      }
      else
      {
        v9 = 0;
      }
      v8 |= v9;
    }
    __swift_project_boxed_opaque_existential_1(v11, v12);
    v5 = sub_24983757C();
    if ((v5 & 1) != 0)
      goto LABEL_13;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_1_3();
  __break(1u);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_249759954()
{
  unint64_t result;

  result = qword_257880160;
  if (!qword_257880160)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlEdge, &type metadata for UniversalControlEdge);
    atomic_store(result, (unint64_t *)&qword_257880160);
  }
  return result;
}

void UniversalControlEdgeMask.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;
  char v13;

  v3 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24983772C();
  v4 = static UniversalControlEdge.allCases.getter();
  v5 = v4[2];
  if (!v5)
  {
LABEL_8:
    v8 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_9_3(v8, v9, v10);
    OUTLINED_FUNCTION_2_3();
    return;
  }
  v6 = 0;
  while (1)
  {
    v7 = *((unsigned __int8 *)v4 + v6 + 32);
    if (v7 >= 0x40)
      goto LABEL_7;
    if (v7 == 63)
      break;
    if (((v3 >> v7) & 1) != 0)
    {
      v13 = *((_BYTE *)v4 + v6 + 32);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
      sub_249759A9C();
      sub_249837594();
      if (v2)
        goto LABEL_8;
    }
LABEL_7:
    if (v5 == ++v6)
      goto LABEL_8;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_1_3();
  __break(1u);
}

unint64_t sub_249759A9C()
{
  unint64_t result;

  result = qword_257880168;
  if (!qword_257880168)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlEdge, &type metadata for UniversalControlEdge);
    atomic_store(result, (unint64_t *)&qword_257880168);
  }
  return result;
}

void sub_249759AD8(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  UniversalControlEdgeMask.init(from:)(a1, a2);
}

void sub_249759AEC(_QWORD *a1)
{
  UniversalControlEdgeMask.encode(to:)(a1);
}

uint64_t UniversalControlEdgeMask.description.getter()
{
  unint64_t *v0;
  unint64_t v1;
  char *v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;

  v1 = *v0;
  v2 = (char *)static UniversalControlEdge.allCases.getter();
  v3 = *((_QWORD *)v2 + 2);
  if (v3)
  {
    v4 = (unsigned __int8 *)(v2 + 32);
    v5 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v7 = *v4++;
      v6 = v7;
      if (v7 < 0x40)
      {
        if (v6 == 63)
        {
          OUTLINED_FUNCTION_0_4();
          result = OUTLINED_FUNCTION_1_3();
          __break(1u);
          return result;
        }
        if (((v1 >> v6) & 1) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_24974E218(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v9 = *(_QWORD *)(v5 + 16);
          v8 = *(_QWORD *)(v5 + 24);
          if (v9 >= v8 >> 1)
            sub_24974E218(v8 > 1, v9 + 1, 1);
          *(_QWORD *)(v5 + 16) = v9 + 1;
          *(_BYTE *)(v5 + v9 + 32) = v6;
        }
      }
      if (!--v3)
        goto LABEL_14;
    }
  }
  v5 = MEMORY[0x24BEE4AF8];
LABEL_14:
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + 16))
  {
    sub_24974DDF0();
    __asm { BR              X9 }
  }
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FEB8);
  sub_249759DA0();
  v10 = sub_249836CDC();
  swift_bridgeObjectRelease();
  return v10;
}

void sub_249759D68()
{
  sub_24975E160();
}

uint64_t sub_249759D70()
{
  return sub_249771590();
}

void sub_249759D78()
{
  sub_2497A0D28();
}

uint64_t UniversalControlEdgeMask.intValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

UniversalControl::UniversalControlEdgeMask_optional __swiftcall UniversalControlEdgeMask.init(intValue:)(Swift::Int intValue)
{
  uint64_t v1;
  Swift::Int v2;
  UniversalControl::UniversalControlEdgeMask_optional result;

  if ((unint64_t)intValue <= 0xF)
    v2 = intValue;
  else
    v2 = 0;
  *(_QWORD *)v1 = v2;
  *(_BYTE *)(v1 + 8) = (unint64_t)intValue > 0xF;
  result.value.rawValue = intValue;
  return result;
}

unint64_t sub_249759DA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25787FEC0;
  if (!qword_25787FEC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25787FEB8);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_25787FEC0);
  }
  return result;
}

unint64_t sub_249759DE8()
{
  unint64_t result;

  result = qword_257880170;
  if (!qword_257880170)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlEdgeMask, &type metadata for UniversalControlEdgeMask);
    atomic_store(result, (unint64_t *)&qword_257880170);
  }
  return result;
}

unint64_t sub_249759E28()
{
  unint64_t result;

  result = qword_257880178;
  if (!qword_257880178)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlEdgeMask, &type metadata for UniversalControlEdgeMask);
    atomic_store(result, (unint64_t *)&qword_257880178);
  }
  return result;
}

unint64_t sub_249759E68()
{
  unint64_t result;

  result = qword_257880180;
  if (!qword_257880180)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlEdgeMask, &type metadata for UniversalControlEdgeMask);
    atomic_store(result, (unint64_t *)&qword_257880180);
  }
  return result;
}

unint64_t sub_249759EA8()
{
  unint64_t result;

  result = qword_257880188;
  if (!qword_257880188)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlEdgeMask, &type metadata for UniversalControlEdgeMask);
    atomic_store(result, (unint64_t *)&qword_257880188);
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlEdgeMask()
{
  return &type metadata for UniversalControlEdgeMask;
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return sub_249837300();
}

void OUTLINED_FUNCTION_7_3(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  unsigned __int8 v0;

  return sub_249759424(v0);
}

uint64_t OUTLINED_FUNCTION_9_3(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)va);
}

ValueMetadata *type metadata accessor for UVC1Heap()
{
  return &type metadata for UVC1Heap;
}

uint64_t sub_249759F8C(uint64_t a1, uint64_t a2, int a3, void *__s1, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t __s2;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  __s2 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  if (!__s1)
    __break(1u);
  v5 = memcmp(__s1, &__s2, a5 - (_QWORD)__s1);
  v6 = v5 >> 31;
  if (v5 >= 1)
    return 1;
  return v6;
}

uint64_t sub_24975A070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578801B0);
    v3 = sub_249837354();
  }
  else
  {
    v3 = MEMORY[0x24BEE4B00];
  }
  v6 = v3;
  sub_24975DBF8(a1, 1, &v6);
  v4 = v6;
  if (v1)
    swift_release();
  return v4;
}

void sub_24975A0FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[4];
  unint64_t v17;

  v2 = (uint64_t)a1;
  OUTLINED_FUNCTION_4_4(a1);
  sub_249837714();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0(v2);
    return;
  }
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880198);
  sub_24975DDD0(&qword_2578801A0, &qword_2578801A8, (uint64_t)&unk_24983A95C, MEMORY[0x24BEE12D0]);
  sub_2498375DC();
  v3 = v17;
  if (!(v17 >> 62))
  {
    v4 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_6;
LABEL_16:
    OUTLINED_FUNCTION_16_0();
    v6 = MEMORY[0x24BEE4AF8];
LABEL_17:
    sub_24975A070(v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    __swift_destroy_boxed_opaque_existential_0(v2);
    return;
  }
  swift_bridgeObjectRetain();
  v4 = sub_249837324();
  OUTLINED_FUNCTION_16_0();
  if (!v4)
    goto LABEL_16;
LABEL_6:
  v14 = v2;
  v17 = MEMORY[0x24BEE4AF8];
  sub_24974E244();
  if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v17;
    v15 = v3 & 0xC000000000000001;
    v7 = v3;
    v8 = v4;
    do
    {
      if (v15)
      {
        v9 = MEMORY[0x24BCF8148](v5, v3);
      }
      else
      {
        v9 = *(_QWORD *)(v3 + 8 * v5 + 32);
        swift_retain();
      }
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      sub_249748BCC(v10, v11);
      v17 = v6;
      v12 = *(_QWORD *)(v6 + 16);
      if (v12 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_24974E244();
        v6 = v17;
      }
      ++v5;
      *(_QWORD *)(v6 + 16) = v12 + 1;
      v13 = (_QWORD *)(v6 + 24 * v12);
      v13[4] = v10;
      v13[5] = v11;
      v13[6] = v9;
      v3 = v7;
    }
    while (v8 != v5);
    OUTLINED_FUNCTION_16_0();
    v2 = v14;
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_24975A350(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];
  uint64_t v6;

  OUTLINED_FUNCTION_4_4(a1);
  sub_249837738();
  swift_bridgeObjectRetain();
  sub_249753AE8();
  v4 = v2;
  sub_24975A794(&v4);
  if (v1)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_16_0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257880198);
    sub_24975DDD0(&qword_2578801B8, &qword_2578801C0, (uint64_t)&unk_24983A934, MEMORY[0x24BEE12A0]);
    sub_249837600();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  }
  return result;
}

void sub_24975A458(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  sub_249748BCC(v2, v3);
  swift_retain();
  swift_isUniquelyReferenced_nonNull_native();
  sub_24974B548(a1, v2, v3);
  swift_bridgeObjectRelease();
  sub_249748C10(v2, v3);
  OUTLINED_FUNCTION_2_4();
}

void sub_24975A4E0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_24975A0FC(a1);
  if (!v2)
    *a2 = v4;
}

uint64_t sub_24975A508(_QWORD *a1)
{
  return sub_24975A350(a1);
}

unint64_t sub_24975A524()
{
  unint64_t result;

  result = qword_257880190;
  if (!qword_257880190)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983937C, &type metadata for UVC1Heap);
    atomic_store(result, (unint64_t *)&qword_257880190);
  }
  return result;
}

uint64_t sub_24975A564(_QWORD *a1, _QWORD *a2)
{
  return sub_24975A560(*a1, *a2);
}

uint64_t sub_24975A570(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;

  v3 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * i);
    v16 = *v15;
    v17 = v15[1];
    sub_249748BCC(*v15, v17);
    sub_24983694C();
    result = sub_249748C10(v16, v17);
    if (v6)
      goto LABEL_4;
LABEL_5:
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v7)
      return swift_release();
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v7)
        return swift_release();
      v13 = *(_QWORD *)(v3 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v7)
          return swift_release();
        v13 = *(_QWORD *)(v3 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v7)
            return swift_release();
          v13 = *(_QWORD *)(v3 + 8 * v9);
          if (!v13)
          {
            v9 = v12 + 4;
            if (v12 + 4 >= v7)
              return swift_release();
            v13 = *(_QWORD *)(v3 + 8 * v9);
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_22:
    v6 = (v13 - 1) & v13;
  }
  v14 = v12 + 5;
  if (v14 >= v7)
    return swift_release();
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v9 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v7)
      return swift_release();
    v13 = *(_QWORD *)(v3 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24975A700(uint64_t a1)
{
  _BYTE v3[72];

  sub_249837690();
  sub_24975A570((uint64_t)v3, a1);
  return sub_2498376E4();
}

uint64_t sub_24975A744()
{
  uint64_t *v0;

  return sub_24975A700(*v0);
}

uint64_t sub_24975A74C(uint64_t a1)
{
  uint64_t *v1;

  return sub_24975A570(a1, *v1);
}

uint64_t sub_24975A754()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_249837690();
  sub_24975A570((uint64_t)v3, v1);
  return sub_2498376E4();
}

uint64_t sub_24975A794(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24975E0E0();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_24975A80C(v6);
  return sub_2498371E0();
}

void sub_24975A80C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v3 = a1[1];
  if (sub_249837534() >= v3)
  {
    if (v3 < 0)
    {
      __break(1u);
      __break(1u);
      JUMPOUT(0x24975C28CLL);
    }
    if (v3)
      sub_24975C44C(0, v3, 1, (uint64_t)a1);
    return;
  }
  sub_24974D064(v3 / 2);
  v72 = v4;
  v76 = v5;
  v70 = a1;
  if (v3 <= 0)
    goto LABEL_62;
  v75 = 0;
  v6 = *a1;
  v7 = (char *)MEMORY[0x24BEE4AF8];
  v73 = v3;
  v74 = *a1;
  while (1)
  {
    v8 = v75++;
    v71 = v8;
    if (v8 + 1 < v3)
      __asm { BR              X9 }
    if (v75 < v8)
    {
      __break(1u);
      JUMPOUT(0x24975C27CLL);
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v7 = sub_24975DAF4(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
    v10 = *((_QWORD *)v7 + 2);
    v9 = *((_QWORD *)v7 + 3);
    v11 = v10 + 1;
    v12 = v71;
    if (v10 >= v9 >> 1)
    {
      v61 = sub_24975DAF4((char *)(v9 > 1), v10 + 1, 1, v7);
      v12 = v71;
      v7 = v61;
    }
    *((_QWORD *)v7 + 2) = v11;
    v13 = v7 + 32;
    v14 = &v7[16 * v10 + 32];
    *(_QWORD *)v14 = v12;
    *((_QWORD *)v14 + 1) = v75;
    if (v10)
      break;
    v11 = 1;
LABEL_54:
    v6 = v74;
    if (v75 >= v3)
      goto LABEL_63;
  }
  while (1)
  {
    v15 = v11 - 1;
    if (v11 >= 4)
    {
      v20 = &v13[16 * v11];
      v21 = *((_QWORD *)v20 - 8);
      v22 = *((_QWORD *)v20 - 7);
      v26 = __OFSUB__(v22, v21);
      v23 = v22 - v21;
      if (v26)
        goto LABEL_81;
      v25 = *((_QWORD *)v20 - 6);
      v24 = *((_QWORD *)v20 - 5);
      v26 = __OFSUB__(v24, v25);
      v18 = v24 - v25;
      v19 = v26;
      if (v26)
        goto LABEL_82;
      v27 = v11 - 2;
      v28 = &v13[16 * v11 - 32];
      v30 = *(_QWORD *)v28;
      v29 = *((_QWORD *)v28 + 1);
      v26 = __OFSUB__(v29, v30);
      v31 = v29 - v30;
      if (v26)
        goto LABEL_84;
      v26 = __OFADD__(v18, v31);
      v32 = v18 + v31;
      if (v26)
        goto LABEL_87;
      if (v32 >= v23)
      {
        v50 = &v13[16 * v15];
        v52 = *(_QWORD *)v50;
        v51 = *((_QWORD *)v50 + 1);
        v26 = __OFSUB__(v51, v52);
        v53 = v51 - v52;
        if (v26)
        {
          __break(1u);
          goto LABEL_92;
        }
        v43 = v18 < v53;
        goto LABEL_43;
      }
    }
    else
    {
      if (v11 != 3)
      {
        v44 = *((_QWORD *)v7 + 4);
        v45 = *((_QWORD *)v7 + 5);
        v26 = __OFSUB__(v45, v44);
        v37 = v45 - v44;
        v38 = v26;
        goto LABEL_37;
      }
      v17 = *((_QWORD *)v7 + 4);
      v16 = *((_QWORD *)v7 + 5);
      v26 = __OFSUB__(v16, v17);
      v18 = v16 - v17;
      v19 = v26;
    }
    if ((v19 & 1) != 0)
      goto LABEL_83;
    v27 = v11 - 2;
    v33 = &v13[16 * v11 - 32];
    v35 = *(_QWORD *)v33;
    v34 = *((_QWORD *)v33 + 1);
    v36 = __OFSUB__(v34, v35);
    v37 = v34 - v35;
    v38 = v36;
    if (v36)
      goto LABEL_86;
    v39 = &v13[16 * v15];
    v41 = *(_QWORD *)v39;
    v40 = *((_QWORD *)v39 + 1);
    v26 = __OFSUB__(v40, v41);
    v42 = v40 - v41;
    if (v26)
      goto LABEL_89;
    if (__OFADD__(v37, v42))
      goto LABEL_90;
    if (v37 + v42 >= v18)
    {
      v43 = v18 < v42;
LABEL_43:
      if (v43)
        v15 = v27;
      goto LABEL_45;
    }
LABEL_37:
    if ((v38 & 1) != 0)
      goto LABEL_85;
    v46 = &v13[16 * v15];
    v48 = *(_QWORD *)v46;
    v47 = *((_QWORD *)v46 + 1);
    v26 = __OFSUB__(v47, v48);
    v49 = v47 - v48;
    if (v26)
      goto LABEL_88;
    if (v49 < v37)
      goto LABEL_54;
LABEL_45:
    v54 = v15 - 1;
    if (v15 - 1 >= v11)
    {
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
      JUMPOUT(0x24975C24CLL);
    }
    if (!v74)
    {
      __break(1u);
LABEL_100:
      __break(1u);
      JUMPOUT(0x24975C2DCLL);
    }
    v55 = v7;
    v56 = &v13[16 * v54];
    v57 = *(_QWORD *)v56;
    v58 = &v13[16 * v15];
    v59 = *((_QWORD *)v58 + 1);
    sub_24975CEFC(v74 + 8 * *(_QWORD *)v56, v74 + 8 * *(_QWORD *)v58, v74 + 8 * v59, v72);
    if (v1)
      break;
    if (v59 < v57)
      goto LABEL_78;
    if (v15 > *((_QWORD *)v55 + 2))
      goto LABEL_79;
    *(_QWORD *)v56 = v57;
    *(_QWORD *)&v13[16 * v54 + 8] = v59;
    v60 = *((_QWORD *)v55 + 2);
    if (v15 >= v60)
      goto LABEL_80;
    v7 = v55;
    v11 = v60 - 1;
    memmove(&v13[16 * v15], v58 + 16, 16 * (v60 - 1 - v15));
    *((_QWORD *)v55 + 2) = v60 - 1;
    v3 = v73;
    if (v60 <= 2)
      goto LABEL_54;
  }
  v3 = v73;
LABEL_60:
  swift_bridgeObjectRelease();
  if (v3 < -1)
  {
    __break(1u);
LABEL_62:
    v7 = (char *)MEMORY[0x24BEE4AF8];
    v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_63:
    if (v11 >= 2)
    {
      v62 = *v70;
      while (1)
      {
        v63 = v11 - 2;
        if (v11 < 2)
          break;
        if (!v62)
          goto LABEL_100;
        v64 = v7;
        v65 = v7 + 32;
        v66 = *(_QWORD *)&v7[16 * v63 + 32];
        v67 = *(_QWORD *)&v7[16 * v11 + 24];
        sub_24975CEFC(v62 + 8 * v66, v62 + 8 * *(_QWORD *)&v65[16 * v11 - 16], v62 + 8 * v67, v72);
        if (v1)
          goto LABEL_60;
        if (v67 < v66)
          goto LABEL_93;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v64 = sub_24975DBE8();
        if (v63 >= *((_QWORD *)v64 + 2))
          goto LABEL_94;
        v68 = &v64[16 * v63 + 32];
        *(_QWORD *)v68 = v66;
        *((_QWORD *)v68 + 1) = v67;
        v69 = *((_QWORD *)v64 + 2);
        if (v11 > v69)
          goto LABEL_95;
        v7 = v64;
        memmove(&v64[16 * v11 + 16], &v64[16 * v11 + 32], 16 * (v69 - v11));
        *((_QWORD *)v64 + 2) = v69 - 1;
        v11 = v69 - 1;
        if (v69 <= 2)
          goto LABEL_74;
      }
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      JUMPOUT(0x24975C270);
    }
LABEL_74:
    swift_bridgeObjectRelease();
    if (v3 < -1)
    {
      __break(1u);
      JUMPOUT(0x24975C2B4);
    }
  }
  *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_249836EB0();
  swift_bridgeObjectRelease();
}

void sub_24975C44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
    __asm { BR              X9 }
}

uint64_t sub_24975CEFC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v14;

  v7 = a2 - a1;
  v8 = (uint64_t)(a2 - a1) / 8;
  v9 = a3 - a2;
  v10 = (uint64_t)(a3 - a2) / 8;
  if (v8 >= v10)
  {
    sub_2497AC1A4(a2, (uint64_t)(a3 - a2) / 8, a4);
    v12 = a4 + 8 * v10;
    if (a1 < a2 && v9 >= 8)
      __asm { BR              X9 }
    v14 = a2;
  }
  else
  {
    sub_2497AC1A4(a1, (uint64_t)(a2 - a1) / 8, a4);
    v12 = a4 + 8 * v8;
    if (a2 < a3 && v7 >= 8)
      __asm { BR              X9 }
    v14 = a1;
  }
  sub_2497AC1A4(a4, (v12 - a4) / 8, v14);
  return 1;
}

char *sub_24975DAF4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578801C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24975DBE8()
{
  char *v0;
  int64_t v1;
  char v2;
  char *v3;

  v0 = (char *)OUTLINED_FUNCTION_0_5();
  return sub_24975DAF4(v0, v1, v2, v3);
}

uint64_t sub_24975DBF8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v4)
    return swift_bridgeObjectRelease_n();
  v5 = 0;
  v6 = (uint64_t *)(a1 + 48);
  while (v5 < *(_QWORD *)(a1 + 16))
  {
    v8 = *(v6 - 1);
    v7 = *v6;
    v9 = *(v6 - 2);
    sub_249748BCC(v9, v8);
    swift_retain();
    if (!v7)
      return swift_bridgeObjectRelease_n();
    v10 = (_QWORD *)*a3;
    v12 = sub_2497F22B8();
    v13 = v10[2];
    v14 = (v11 & 1) == 0;
    v15 = v13 + v14;
    if (__OFADD__(v13, v14))
      goto LABEL_18;
    v16 = v11;
    if (v10[3] >= v15)
    {
      if ((a2 & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_25787F818);
        sub_24983727C();
      }
    }
    else
    {
      sub_249780444(v15, a2 & 1);
      v17 = sub_2497F22B8();
      if ((v16 & 1) != (v18 & 1))
        goto LABEL_20;
      v12 = v17;
    }
    v19 = (_QWORD *)*a3;
    if ((v16 & 1) != 0)
    {
      sub_249748C10(v9, v8);
      v20 = v19[7];
      swift_release();
      *(_QWORD *)(v20 + 8 * v12) = v7;
    }
    else
    {
      v19[(v12 >> 6) + 8] |= 1 << v12;
      v21 = (uint64_t *)(v19[6] + 16 * v12);
      *v21 = v9;
      v21[1] = v8;
      *(_QWORD *)(v19[7] + 8 * v12) = v7;
      v22 = v19[2];
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
        goto LABEL_19;
      v19[2] = v24;
    }
    ++v5;
    v6 += 3;
    a2 = 1;
    if (v4 == v5)
      return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_24983763C();
  __break(1u);
  return result;
}

void sub_24975DDD0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  if (!*a1)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257880198);
    v9 = sub_24975DE3C(a2, a3);
    atomic_store(MEMORY[0x24BCF8F94](a4, v8, &v9), a1);
  }
  OUTLINED_FUNCTION_2_4();
}

uint64_t sub_24975DE3C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for UVC1Object();
    result = MEMORY[0x24BCF8F94](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24975DE7C(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  const void *v11;
  int v12;
  int v13;

  v8 = sub_249836820();
  if (v8)
  {
    v9 = v8;
    result = sub_249836838();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_11;
    }
    v11 = (const void *)(v9 + a1 - result);
  }
  else
  {
    v11 = 0;
  }
  result = sub_24983682C();
  if (!a4)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!v11)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = memcmp(a4, v11, a5 - (_QWORD)a4);
  v13 = v12 >> 31;
  if (v12 >= 1)
    return 1;
  return v13;
}

void sub_24975DF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

uint64_t sub_24975DF64(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v22 = sub_249759F8C(v18, v19 & 0xFFFFFFFFFFFFLL, BYTE6(v19), v21, v20);
  OUTLINED_FUNCTION_1_4();
  return v22;
}

void sub_24975E080()
{
  OUTLINED_FUNCTION_0_5();
  sub_24974E450();
}

void sub_24975E090()
{
  OUTLINED_FUNCTION_0_5();
  sub_24974E488();
}

void sub_24975E0A0()
{
  OUTLINED_FUNCTION_0_5();
  sub_24974E69C();
}

void sub_24975E0B0()
{
  OUTLINED_FUNCTION_0_5();
  sub_24974E46C();
}

void sub_24975E0C0()
{
  char v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v0 = OUTLINED_FUNCTION_0_5();
  sub_24974E760(v0, v1, v2, v3);
}

void sub_24975E0D0()
{
  OUTLINED_FUNCTION_0_5();
  sub_24974E53C();
}

void sub_24975E0E0()
{
  OUTLINED_FUNCTION_0_5();
  JUMPOUT(0x24BCF84F0);
}

void sub_24975E0F0()
{
  OUTLINED_FUNCTION_0_5();
  sub_24974E99C();
}

uint64_t OUTLINED_FUNCTION_0_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

_QWORD *OUTLINED_FUNCTION_4_4(_QWORD *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, a1[3]);
}

uint64_t OUTLINED_FUNCTION_5_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  const void *v4;

  return sub_24975DE7C(a1, a2, a3, v4, v3);
}

ValueMetadata *type metadata accessor for UVC1Timestamp()
{
  return &type metadata for UVC1Timestamp;
}

void sub_24975E160()
{
  OUTLINED_FUNCTION_3_4();
  sub_2498376A8();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_24975E190()
{
  sub_2497A0CE0();
}

void sub_24975E19C()
{
  sub_2497A0DA0();
}

uint64_t sub_24975E1A8()
{
  sub_249837690();
  sub_24983769C();
  return sub_2498376E4();
}

void sub_24975E2E0(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_3_4();
  sub_2497CEBD0(a1);
  sub_249836D84();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_24975E32C()
{
  OUTLINED_FUNCTION_3_4();
  sub_2498376A8();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

double sub_24975E364(unint64_t a1)
{
  return (double)a1 / 1000.0;
}

void sub_24975E378(double a1)
{
  BOOL v1;
  double v2;
  double v3;

  v1 = OUTLINED_FUNCTION_1_5(a1, 1000.0) > 0.0;
  v3 = 0.0;
  if (v1)
    v3 = v2;
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 1.84467441e19)
LABEL_10:
    __break(1u);
}

void sub_24975E3D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  double v6;
  double v7;
  _QWORD v8[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_7_4();
  sub_249837714();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return;
  }
  __swift_project_boxed_opaque_existential_1(v8, v8[3]);
  OUTLINED_FUNCTION_7_4();
  v3 = sub_2498375E8();
  v4 = OUTLINED_FUNCTION_1_5((double)(unint64_t)v3 / 1000.0, 1000.0) > 0.0;
  v7 = 0.0;
  if (v4)
    v7 = v6;
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v7 <= -1.0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v7 < 1.84467441e19)
  {
    OUTLINED_FUNCTION_5_3(v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_24975E4D0(_QWORD *a1, unint64_t a2)
{
  BOOL v3;
  double v4;
  double v5;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249837738();
  v3 = OUTLINED_FUNCTION_1_5((double)a2 / 1000.0, 1000.0) > 0.0;
  v5 = 0.0;
  if (v3)
    v5 = v4;
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 <= -1.0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v5 < 1.84467441e19)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    v6 = sub_24983760C();
    OUTLINED_FUNCTION_5_3(v6);
    return;
  }
LABEL_10:
  __break(1u);
}

void sub_24975E5BC()
{
  qword_2578907F0 = 0;
}

void sub_24975E5C8(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  sub_24975E3D8(a1);
  if (!v2)
    *a2 = v4;
}

void sub_24975E5F0(_QWORD *a1)
{
  unint64_t *v1;

  sub_24975E4D0(a1, *v1);
}

void sub_24975E608(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  sub_24975E378(*a1);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = 0;
}

void sub_24975E634(double *a1@<X8>)
{
  unint64_t *v1;

  *a1 = sub_24975E364(*v1);
}

unint64_t sub_24975E660()
{
  unint64_t result;

  result = qword_2578801D0;
  if (!qword_2578801D0)
  {
    result = MEMORY[0x24BCF8F94](&unk_249839488, &type metadata for UVC1Timestamp);
    atomic_store(result, (unint64_t *)&qword_2578801D0);
  }
  return result;
}

BOOL sub_24975E69C(unint64_t a1, unint64_t a2)
{
  return (double)a1 / 1000.0 < (double)a2 / 1000.0;
}

BOOL sub_24975E6C0(unint64_t *a1, unint64_t *a2)
{
  return sub_24975E69C(*a1, *a2);
}

BOOL sub_24975E6CC(unint64_t *a1, unint64_t *a2)
{
  return sub_24975E98C(*a1, *a2);
}

void sub_24975E6D8(uint64_t a1, double *a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  double v8;
  double v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  char v30[70];

  v8 = a2[9];
  v9 = *(double *)(a1 + 72);
  if (v9 >= v8 && v8 >= v9)
  {
    v10 = OUTLINED_FUNCTION_9_4(a1, a2, a3, a4, a5, a6, a7, a8, v18, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30[0]);
    OUTLINED_FUNCTION_4_5(v10, v11, v12, v13, v14, v15, v16, v17, v19, v20);
    sub_2497F1164(v30);
  }
  OUTLINED_FUNCTION_8_4();
}

uint64_t sub_24975E738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  if (static UniversalControlUUID.compare(lhs:rhs:)(*(_QWORD *)a2, v9, *(_QWORD *)a1, v11) == -1)
  {
    v13 = 1;
  }
  else if (static UniversalControlUUID.compare(lhs:rhs:)(v10, v11, v8, v9) == -1)
  {
    v13 = 0;
  }
  else
  {
    v12 = sub_24978B8C8(v8, v9, v4, v5, v10, v11, v6, v7);
    if (v12 == 2)
      v12 = sub_24978B990(*(unsigned __int8 *)(a2 + 32) | (*(unsigned __int16 *)(a2 + 34) << 16), *(unsigned __int8 *)(a1 + 32) | (*(unsigned __int16 *)(a1 + 34) << 16));
    v13 = v12 & 1;
  }
  return v13 ^ 1u;
}

void sub_24975E824(const void *a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16[9];
  __int16 v17;
  char v18[70];

  v8 = OUTLINED_FUNCTION_9_4((int)a1, a1, a3, a4, a5, a6, a7, a8, v16[0], v16[1], v16[2], v16[3], v16[4], v16[5], v16[6], v16[7], v16[8], v17, v18[0]);
  OUTLINED_FUNCTION_4_5(v8, v9, v10, v11, v12, v13, v14, v15, v16[0], SBYTE4(v16[0]));
  static UniversalControlLink.< infix(_:_:)((unsigned __int8 *)v16 + 4, (unsigned __int8 *)v18);
  OUTLINED_FUNCTION_8_4();
}

BOOL sub_24975E860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OUTLINED_FUNCTION_0_6(a1, a2, a3, a4) != -1;
}

BOOL sub_24975E87C(unsigned int a1, unsigned int a2)
{
  _BOOL4 v3;

  v3 = a1 < a2 || HIWORD(a2) >= HIWORD(a1);
  return a2 >= a1 && v3;
}

BOOL sub_24975E8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v16;

  if (static UniversalControlUUID.compare(lhs:rhs:)(a5, a6, a1, a2) == -1)
    return 0;
  if (static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, a5, a6) == -1)
    return 1;
  sub_249772148(a7, a8, a3, a4);
  return (v16 & 1) == 0;
}

BOOL sub_24975E958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD v6[4];

  v6[2] = a1;
  v6[3] = a2;
  v6[0] = a3;
  v6[1] = a4;
  static UVC1Digest.compare(lhs:rhs:)((uint64_t)v6);
  return v4 != -1;
}

BOOL sub_24975E98C(unint64_t a1, unint64_t a2)
{
  return (double)a2 / 1000.0 >= (double)a1 / 1000.0;
}

BOOL sub_24975E9B0(unint64_t *a1, unint64_t *a2)
{
  return sub_2497EC8F8(*a1, *a2);
}

BOOL sub_24975E9BC(unint64_t *a1, unint64_t *a2)
{
  return sub_2497710F4(*a1, *a2);
}

BOOL sub_24975E9C8(unint64_t a1, unint64_t a2)
{
  return (double)a1 / 1000.0 == (double)a2 / 1000.0;
}

BOOL sub_24975E9EC(unint64_t *a1, unint64_t *a2)
{
  return sub_24975E9C8(*a1, *a2);
}

uint64_t sub_24975E9F8()
{
  return sub_2498376D8();
}

void sub_24975EA34()
{
  sub_24975E190();
}

uint64_t sub_24975EA3C()
{
  return sub_24975E9F8();
}

void sub_24975EA44()
{
  sub_2497A0CE0();
}

uint64_t OUTLINED_FUNCTION_0_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static UniversalControlUUID.compare(lhs:rhs:)(a3, a4, a1, a2);
}

double OUTLINED_FUNCTION_1_5(double a1, double a2)
{
  return a1 * a2;
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  return sub_249837690();
}

void *OUTLINED_FUNCTION_4_5(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, char __dst)
{
  const void *v10;

  return memcpy(&__dst, v10, 0x46uLL);
}

uint64_t OUTLINED_FUNCTION_5_3(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_7_4()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_9_4(int a1, const void *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __int16 a18, char __dst)
{
  return memcpy(&__dst, a2, 0x46uLL);
}

void sub_24975EADC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;

  v3 = sub_249836A18();
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v22 = v1;
    v35 = MEMORY[0x24BEE4AF8];
    sub_24974E2AC();
    v6 = v35;
    v7 = sub_24976CAA4(a1);
    if ((v7 & 0x8000000000000000) == 0)
    {
      v9 = v7;
      if (v7 < 1 << *(_BYTE *)(a1 + 32))
      {
        v10 = a1 + 64;
        v23 = a1 + 64;
        v24 = a1;
        while ((*(_QWORD *)(v10 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
        {
          if ((_DWORD)v8 != *(_DWORD *)(a1 + 36))
            goto LABEL_18;
          v30 = 1 << v9;
          v31 = v9 >> 6;
          v28 = v5;
          v29 = v8;
          v11 = *(_QWORD *)(a1 + 48) + 16 * v9;
          v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v9);
          v13 = *(unsigned __int8 *)(v11 + 7);
          v32 = *(unsigned __int8 *)(v11 + 6);
          v33 = v13;
          v34 = v12;
          swift_unknownObjectRetain();
          v14 = v6;
          v15 = v25;
          sub_2498369E8();
          v16 = sub_2498369C4();
          v17 = v15;
          v6 = v14;
          (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v27);
          v35 = v14;
          v18 = *(_QWORD *)(v14 + 16);
          if (v18 >= *(_QWORD *)(v14 + 24) >> 1)
          {
            sub_24974E2AC();
            v6 = v35;
          }
          *(_QWORD *)(v6 + 16) = v18 + 1;
          v19 = v6 + 16 * v18;
          v20 = v34;
          *(_QWORD *)(v19 + 32) = v16;
          *(_QWORD *)(v19 + 40) = v20;
          a1 = v24;
          if ((uint64_t)v9 >= -(-1 << *(_BYTE *)(v24 + 32)))
            goto LABEL_19;
          v10 = v23;
          if ((*(_QWORD *)(v23 + 8 * v31) & v30) == 0)
            goto LABEL_20;
          if ((_DWORD)v29 != *(_DWORD *)(v24 + 36))
            goto LABEL_21;
          v21 = sub_249837114();
          v5 = v28 - 1;
          if (v28 == 1)
            return;
          v9 = v21;
          if ((v21 & 0x8000000000000000) == 0)
          {
            v8 = *(unsigned int *)(a1 + 36);
            if (v21 < 1 << *(_BYTE *)(a1 + 32))
              continue;
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_24975ED5C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = OUTLINED_FUNCTION_22_1();
  v1(v2);
  return OUTLINED_FUNCTION_17_2();
}

uint64_t sub_24975ED80()
{
  uint64_t v0;

  v0 = sub_249836B14();
  __swift_allocate_value_buffer(v0, qword_2578907F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2578907F8);
  return sub_249836B08();
}

id sub_24975EDEC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AgentXPCProxy(0)), sel_init);
  qword_257890810 = (uint64_t)result;
  return result;
}

char *sub_24975EE1C()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  NSObject *v30;
  void *v31;
  const char *v32;
  int *v33;
  uint32_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t aBlock[6];
  id v50;
  objc_super v51;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880620);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_249837090();
  v45 = *(_QWORD *)(v5 - 8);
  v46 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880628);
  v47 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_activeEdges] = MEMORY[0x24BEE4AF8];
  v12 = OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_configuration;
  type metadata accessor for UVC1Config();
  v13 = v0;
  *(_QWORD *)&v0[v12] = sub_2497E7F28();
  *(_QWORD *)&v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_devices] = v11;
  *(_QWORD *)&v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_connectedDevices] = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_localDevice] = 0;
  v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_automaticallyReconnect] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_connection] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_localSeed] = 0;
  v14 = &v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_logger];
  if (qword_25787F6A8 != -1)
    swift_once();
  v15 = sub_249836B14();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_2578907F8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v14, v16, v15);
  v17 = &v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notificationName];
  *(_QWORD *)v17 = 0xD000000000000020;
  *((_QWORD *)v17 + 1) = 0x8000000249840450;
  *(_DWORD *)&v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notifyToken] = -1;
  *(_QWORD *)&v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notifySeed] = 0;
  v48 = v8;
  if ((v11 & 0xC000000000000000) != 0 && sub_249837324())
    v18 = sub_24976C81C(MEMORY[0x24BEE4AF8]);
  else
    v18 = MEMORY[0x24BEE4B08];
  *(_QWORD *)&v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_cancellables] = v18;
  v19 = &v13[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy];
  *(_QWORD *)v19 = 0;
  v19[8] = 2;

  v51.receiver = v13;
  v51.super_class = ObjectType;
  v20 = objc_msgSendSuper2(&v51, sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880630);
  swift_allocObject();
  v21 = (char *)v20;
  v22 = sub_249836B74();
  aBlock[0] = v22;
  sub_249837084();
  v50 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v23 = sub_249837078();
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 1, 1, v23);
  sub_24976D1D4(0, &qword_257880638);
  sub_24974B98C(&qword_257880640, &qword_257880630);
  sub_24976CCC0(&qword_257880648, &qword_257880638);
  sub_249836BD4();
  sub_24976CCF4((uint64_t)v4);

  v24 = v7;
  v25 = v22;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v24, v46);
  v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_24976CD50;
  *(_QWORD *)(v27 + 24) = v26;
  sub_24974B98C(&qword_257880650, &qword_257880628);
  v28 = v48;
  sub_249836BE0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v28);
  swift_beginAccess();
  sub_249836B2C();
  swift_endAccess();
  swift_release();
  v29 = (uint64_t *)&v21[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notificationName];
  sub_24976D1D4(0, (unint64_t *)&qword_257880238);
  v30 = sub_249836FE8();
  aBlock[4] = (uint64_t)sub_24976CD60;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24975FCB4;
  aBlock[3] = (uint64_t)&block_descriptor_59;
  v31 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v32 = (const char *)(sub_249836D60() + 32);
  v33 = (int *)&v21[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notifyToken];
  swift_beginAccess();
  v34 = notify_register_dispatch(v32, v33, v30, v31);
  swift_endAccess();
  swift_release();
  _Block_release(v31);

  if (v34)
  {
    v35 = v21;
    v36 = sub_249836AFC();
    v37 = sub_249836FAC();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v48 = v25;
      aBlock[0] = v39;
      v40 = v39;
      *(_DWORD *)v38 = 136446466;
      v42 = *v29;
      v41 = v29[1];
      swift_bridgeObjectRetain();
      v50 = (id)sub_24976A748(v42, v41, aBlock);
      sub_2498370CC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 1024;
      LODWORD(v50) = v34;
      sub_2498370CC();
      _os_log_impl(&dword_249741000, v36, v37, "%{public}s notify_register_dispatch failed: %u", (uint8_t *)v38, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x24BCF906C](v40, -1, -1);
      MEMORY[0x24BCF906C](v38, -1, -1);

    }
    else
    {

    }
  }
  sub_24975F560();
  swift_release();

  return v21;
}

void sub_24975F510(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x24BCF90FC](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_24975F560();

  }
}

void sub_24975F560()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  int v11;
  uint64_t v12;
  _QWORD *v13;
  uint32_t state;
  _QWORD *v15;
  uint64_t *v16;
  uint32_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  char *v48;
  NSObject *v49;
  char *v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t aBlock;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;

  v1 = v0;
  v2 = sub_249836BEC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_249836C04();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)&v0[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notifyToken];
  swift_beginAccess();
  v11 = *v10;
  if (*v10 != -1)
  {
    v54 = v9;
    v55 = v7;
    v56 = v6;
    v57 = v5;
    v58 = v3;
    v59 = v2;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = 0;
    v13 = (_QWORD *)(v12 + 16);
    state = notify_get_state(v11, (uint64_t *)(v12 + 16));
    v15 = &loc_249838000;
    v16 = &qword_257880000;
    if (state)
    {
      v17 = state;
      v60 = v12;
      v18 = v1;
      v19 = sub_249836AFC();
      v20 = sub_249836FAC();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        v53 = swift_slowAlloc();
        aBlock = v53;
        *(_DWORD *)v21 = 136446466;
        v22 = *(_QWORD *)&v18[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notificationName];
        v23 = *(_QWORD *)&v18[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notificationName + 8];
        swift_bridgeObjectRetain();
        v68 = sub_24976A748(v22, v23, &aBlock);
        v15 = (_QWORD *)&loc_249838000;
        sub_2498370CC();

        v16 = &qword_257880000;
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 1024;
        LODWORD(v68) = v17;
        sub_2498370CC();
        _os_log_impl(&dword_249741000, v19, v20, "%{public}s notify_get_state failed: %u", (uint8_t *)v21, 0x12u);
        v24 = v53;
        swift_arrayDestroy();
        MEMORY[0x24BCF906C](v24, -1, -1);
        MEMORY[0x24BCF906C](v21, -1, -1);
      }
      else
      {

      }
      v12 = v60;
    }
    v25 = OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notifySeed;
    if (*v13 == *(_QWORD *)&v1[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notifySeed])
    {
      swift_release();
    }
    else
    {
      v26 = v1;
      swift_retain();
      v27 = sub_249836AFC();
      v28 = sub_249836FA0();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = swift_slowAlloc();
        v60 = v12;
        v30 = v29;
        v53 = swift_slowAlloc();
        aBlock = v53;
        *(_DWORD *)v30 = v15[167];
        v31 = (uint64_t *)&v26[v16[94]];
        v32 = *v31;
        v33 = v31[1];
        swift_bridgeObjectRetain();
        v68 = sub_24976A748(v32, v33, &aBlock);
        sub_2498370CC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2048;
        swift_beginAccess();
        v68 = *(_QWORD *)(v60 + 16);
        sub_2498370CC();
        swift_release();
        _os_log_impl(&dword_249741000, v27, v28, "%{public}s seed changed: %llu", (uint8_t *)v30, 0x16u);
        v34 = v53;
        swift_arrayDestroy();
        MEMORY[0x24BCF906C](v34, -1, -1);
        v35 = v30;
        v12 = v60;
        MEMORY[0x24BCF906C](v35, -1, -1);
      }
      else
      {
        swift_release();

      }
      swift_beginAccess();
      *(_QWORD *)&v1[v25] = *(_QWORD *)(v12 + 16);
      v36 = dispatch_group_create();
      dispatch_group_enter(v36);
      sub_24976D1D4(0, (unint64_t *)&qword_257880238);
      v37 = (void *)sub_249836FE8();
      v38 = swift_allocObject();
      *(_QWORD *)(v38 + 16) = v26;
      *(_QWORD *)(v38 + 24) = v12;
      v66 = sub_24976CD98;
      v67 = v38;
      aBlock = MEMORY[0x24BDAC760];
      v63 = 1107296256;
      v64 = sub_24975ED5C;
      v65 = &block_descriptor_68;
      v39 = _Block_copy(&aBlock);
      v40 = v26;
      swift_retain();
      v41 = v54;
      sub_249836BF8();
      v61 = MEMORY[0x24BEE4AF8];
      sub_24974BBF4(&qword_257880140, (void (*)(uint64_t))MEMORY[0x24BEE5458]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257880148);
      sub_24974B98C(&qword_257880150, &qword_257880148);
      v42 = v57;
      v43 = v59;
      sub_2498370FC();
      sub_249836FDC();
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v58 + 8))(v42, v43);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v56);
      swift_release();
      v44 = sub_24975FDAC();
      if (v44)
      {
        v45 = (void *)v44;
        dispatch_group_enter(v36);
        v46 = swift_allocObject();
        *(_QWORD *)(v46 + 16) = v36;
        *(_QWORD *)(v46 + 24) = v40;
        v66 = sub_24976CDA0;
        v67 = v46;
        aBlock = MEMORY[0x24BDAC760];
        v63 = 1107296256;
        v64 = sub_249761E84;
        v65 = &block_descriptor_74;
        v47 = _Block_copy(&aBlock);
        v48 = v40;
        v49 = v36;
        swift_release();
        objc_msgSend(v45, sel_xpcGetEdgesWithCompletion_, v47);
        _Block_release(v47);
        dispatch_group_enter(v49);
        v50 = v48;
        v51 = v49;
        sub_24975FF34(0, v50, v51, v50);
        swift_unknownObjectRelease();
        dispatch_group_leave(v51);
        swift_release();

      }
      else
      {
        dispatch_group_leave(v36);
        swift_release();

      }
    }
  }
}

uint64_t sub_24975FC6C()
{
  sub_24974B98C(&qword_257880688, &qword_257880630);
  return sub_249836BA4();
}

uint64_t sub_24975FCB4(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

BOOL sub_24975FD10()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_localSeed) == *(_QWORD *)(v0 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notifySeed);
}

uint64_t sub_24975FD34()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  _DWORD *v4;
  uint64_t result;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_connection);
  if (v2)
  {
    v3 = v2;
    sub_249766D64();

  }
  v4 = (_DWORD *)(v1 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notifyToken);
  OUTLINED_FUNCTION_44_0();
  result = *v4;
  if ((_DWORD)result != -1)
  {
    result = notify_cancel(result);
    *v4 = -1;
  }
  return result;
}

uint64_t sub_24975FDAC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notifySeed))
    return sub_24975FDC8();
  else
    return 0;
}

uint64_t sub_24975FDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_connection;
  v3 = *(char **)(v0 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_connection);
  if (v3
    && !*(_QWORD *)&v3[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_error])
  {
    v5 = v3;
  }
  else
  {
    type metadata accessor for AgentXPCConnection(0);
    v4 = (char *)sub_24975FEA8(0xD000000000000012, 0x8000000249840480);
    *(_QWORD *)&v4[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_delegate
                 + 8] = 0;
    swift_unknownObjectWeakAssign();
    v5 = v4;
    sub_249765FF8();
    v6 = *(void **)(v1 + v2);
    *(_QWORD *)(v1 + v2) = v5;

    v7 = v1 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy;
    v8 = *(void **)(v1 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy);
    *(_QWORD *)v7 = 0;
    v9 = *(_BYTE *)(v7 + 8);
    *(_BYTE *)(v7 + 8) = 2;
    sub_24976B6DC(v8, v9);
  }
  v10 = sub_249765CBC();

  return v10;
}

id sub_24975FEA8(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;

  sub_24976D1D4(0, &qword_257880678);
  v4 = sub_249765E50(0xD000000000000012, 0x8000000249840480, 0);
  v5 = objc_allocWithZone((Class)type metadata accessor for AgentXPCConnection(0));
  return sub_249765EC8(v4, a1, a2);
}

void sub_24975FF34(char a1, char *a2, void *a3, void *a4)
{
  uint64_t v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  char *v19;
  _QWORD v20[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v9 = a3;
  v10 = a4;
  v11 = sub_24975FDAC();
  v12 = (void *)v11;
  if ((a1 & 1) != 0)
  {
    v13 = sub_24975FDC8();
    v11 = swift_unknownObjectRelease();
    v12 = (void *)v13;
  }
  if (v12)
  {
    if (a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8])
    {
      if (a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8] == 1)
      {
        dispatch_group_leave(v9);
      }
      else
      {
        v17 = (_QWORD *)swift_allocObject();
        v17[2] = a2;
        v17[3] = sub_24976CDA8;
        v17[4] = v8;
        v20[4] = sub_24976CDB8;
        v20[5] = v17;
        v20[0] = MEMORY[0x24BDAC760];
        v20[1] = 1107296256;
        v20[2] = sub_24977DEFC;
        v20[3] = &block_descriptor_83;
        v18 = _Block_copy(v20);
        swift_unknownObjectRetain();
        v19 = a2;
        swift_retain();
        swift_release();
        objc_msgSend(v12, sel_xpcAdminInterfaceWithCompletion_, v18);
        swift_unknownObjectRelease();
        _Block_release(v18);
      }
    }
    else
    {
      v16 = *(void **)&a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy];
      swift_unknownObjectRetain();
      sub_24976B6B0(v16, 0);
      sub_249763714(v16, 0, v9, v10);
      swift_unknownObjectRelease();
      sub_24976B6DC(v16, 0);
    }

    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_249761470(v11);
    v15 = v14;
    dispatch_group_leave(v9);

    swift_release();
  }

}

void sub_249760124(char a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  char v16;
  _QWORD *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v10 = (_QWORD *)OUTLINED_FUNCTION_18_1();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  swift_retain();
  OUTLINED_FUNCTION_21_2();
  v11 = sub_24975FDAC();
  v12 = (void *)v11;
  if ((a1 & 1) != 0)
  {
    v13 = sub_24975FDC8();
    v11 = OUTLINED_FUNCTION_51_0();
    v12 = (void *)v13;
  }
  if (v12)
  {
    v14 = *(void **)&a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy];
    if (a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8])
    {
      if (a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8] != 1)
      {
        v17 = (_QWORD *)OUTLINED_FUNCTION_18_1();
        v17[2] = a2;
        v17[3] = sub_24976D088;
        v17[4] = v10;
        v18 = OUTLINED_FUNCTION_85((uint64_t)sub_24977DEFC, v25, MEMORY[0x24BDAC760], 1107296256, v26, v27);
        OUTLINED_FUNCTION_92();
        v19 = a2;
        OUTLINED_FUNCTION_46_0();
        OUTLINED_FUNCTION_49_0();
        objc_msgSend(v12, sel_xpcAdminInterfaceWithCompletion_, v18);
        OUTLINED_FUNCTION_51_0();
        OUTLINED_FUNCTION_72_0();
LABEL_11:
        OUTLINED_FUNCTION_65();
        OUTLINED_FUNCTION_41_1();
        OUTLINED_FUNCTION_51_0();
        goto LABEL_12;
      }
      OUTLINED_FUNCTION_92();
      OUTLINED_FUNCTION_48_0(v14);
      OUTLINED_FUNCTION_88();
      OUTLINED_FUNCTION_51_0();
      v15 = v14;
      v16 = 1;
    }
    else
    {
      sub_24976B6B0(v14, 0);
      OUTLINED_FUNCTION_92();
      OUTLINED_FUNCTION_68_0(v14);
      v20 = UniversalControlConfiguration.encoded()();
      v22 = v21;
      v23 = (void *)sub_24983691C();
      v24 = OUTLINED_FUNCTION_85((uint64_t)sub_249761710, v25, MEMORY[0x24BDAC760], 1107296256, v26, v27);
      OUTLINED_FUNCTION_21_2();
      swift_release();
      objc_msgSend(v14, sel_xpcSetConfiguration_completion_, v23, v24);
      _Block_release(v24);

      sub_249748C10(v20, v22);
      sub_24976B6DC(v14, 0);
      OUTLINED_FUNCTION_51_0();
      v15 = v14;
      v16 = 0;
    }
    sub_24976B6DC(v15, v16);
    goto LABEL_11;
  }
  sub_249761470(v11);
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_41_1();
LABEL_12:
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_39_1();
}

void sub_24976038C(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v8 = OUTLINED_FUNCTION_18_1();
  *(_BYTE *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v9 = a4;
  v10 = sub_24975FDAC();
  v11 = (void *)v10;
  if ((a1 & 1) != 0)
  {
    a1 = sub_24975FDC8();
    v10 = OUTLINED_FUNCTION_29_0();
    v11 = (void *)a1;
  }
  if (!v11)
  {
    sub_249761470(v10);
    MEMORY[0x24BDAC7A8](v14);
    sub_24980FC04((uint64_t (*)(void))sub_2497625A0, 0, sub_24976D328);
    OUTLINED_FUNCTION_18_3();

    OUTLINED_FUNCTION_12_1();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_19_3();
  if (!v13)
  {
    *(_QWORD *)(OUTLINED_FUNCTION_18_1() + 16) = v9;
    v19 = MEMORY[0x24BDAC760];
    v15 = OUTLINED_FUNCTION_101((uint64_t)sub_249761710);
    OUTLINED_FUNCTION_68_0((void *)a1);
    v9 = v9;
    OUTLINED_FUNCTION_86();
    OUTLINED_FUNCTION_68_0((void *)a1);
    OUTLINED_FUNCTION_49_0();
    objc_msgSend((id)a1, sel_xpcSetAutomaticallyReconnect_completion_, a3 & 1, v15, v19, 1107296256);
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_35_1();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_35_1();
LABEL_10:

    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_29_0();
    goto LABEL_11;
  }
  if (v13 != 1)
  {
    v16 = (_QWORD *)OUTLINED_FUNCTION_18_1();
    v16[2] = a2;
    v16[3] = sub_24976D178;
    v16[4] = v8;
    v20 = MEMORY[0x24BDAC760];
    v17 = OUTLINED_FUNCTION_101((uint64_t)sub_24977DEFC);
    OUTLINED_FUNCTION_86();
    v18 = a2;
    OUTLINED_FUNCTION_21_2();
    OUTLINED_FUNCTION_34_1();
    objc_msgSend(v11, sel_xpcAdminInterfaceWithCompletion_, v17, v20, 1107296256);
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_54_0();
    goto LABEL_10;
  }
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_48_0((void *)a1);
  sub_24980FC04((uint64_t (*)(void))sub_2497625A0, 0, sub_24976D328);
  OUTLINED_FUNCTION_29_0();
  sub_24976B6DC((void *)a1, 1);
  OUTLINED_FUNCTION_29_0();

  OUTLINED_FUNCTION_12_1();
LABEL_11:
  OUTLINED_FUNCTION_13_1();
}

void sub_249760638()
{
  void *v0;
  uint64_t v1;
  void *v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  OUTLINED_FUNCTION_20_2();
  v8 = OUTLINED_FUNCTION_2_6(v3, v4, v5, v6, v7);
  v9 = OUTLINED_FUNCTION_40_1(v8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_45_1(v10, v19);
  v11 = OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_0_7(v11);
  v12 = sub_24975FDAC();
  v13 = v12;
  if ((v20 & 1) != 0)
  {
    v2 = (void *)sub_24975FDC8();
    v12 = OUTLINED_FUNCTION_5_4();
    v13 = (uint64_t)v2;
  }
  if (v13)
  {
    OUTLINED_FUNCTION_19_3();
    if (v14)
    {
      if (v14 == 1)
      {
        OUTLINED_FUNCTION_8_5();
        sub_24976B6B0(v2, 1);
        OUTLINED_FUNCTION_36_1();
        OUTLINED_FUNCTION_5_4();
        sub_24976B6DC(v2, 1);
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_10_1();
        OUTLINED_FUNCTION_16_2();
        return;
      }
      v16 = (_QWORD *)OUTLINED_FUNCTION_18_1();
      v16[2] = v0;
      v16[3] = sub_24976D120;
      v16[4] = v1;
      OUTLINED_FUNCTION_31_1((uint64_t)sub_24977DEFC);
      OUTLINED_FUNCTION_8_5();
      v17 = v0;
      OUTLINED_FUNCTION_30_1();
      v18 = OUTLINED_FUNCTION_34_1();
      OUTLINED_FUNCTION_28_1(v18, sel_xpcAdminInterfaceWithCompletion_);
      OUTLINED_FUNCTION_5_4();
      OUTLINED_FUNCTION_54_0();
    }
    else
    {
      sub_24976B6B0(v2, 0);
      OUTLINED_FUNCTION_8_5();
      sub_24976B6B0(v2, 0);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_94();
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_31_1((uint64_t)sub_249761710);
      OUTLINED_FUNCTION_21_2();
      v15 = OUTLINED_FUNCTION_49_0();
      OUTLINED_FUNCTION_76_0(v15, sel_xpcConnectTo_completion_);
      OUTLINED_FUNCTION_93();

      sub_24976B6DC(v2, 0);
      OUTLINED_FUNCTION_5_4();
      sub_24976B6DC(v2, 0);
    }
    swift_release();
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_5_4();
    OUTLINED_FUNCTION_3_5();
  }
  else
  {
    sub_249761470(v12);
    OUTLINED_FUNCTION_36_1();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_15_2();
  }
}

void sub_249760864(char a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_24975FDAC();
  v5 = v4;
  if ((a1 & 1) != 0)
  {
    v6 = sub_24975FDC8();
    v4 = OUTLINED_FUNCTION_106();
    v5 = v6;
  }
  if (v5)
  {
    if (a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8])
    {
      if (a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8] != 1)
      {
        v7 = (_QWORD *)OUTLINED_FUNCTION_18_1();
        v7[2] = a2;
        v7[3] = sub_24976193C;
        v7[4] = 0;
        OUTLINED_FUNCTION_14_2((uint64_t)sub_24977DEFC, MEMORY[0x24BDAC760], 1107296256, v11, v12);
        OUTLINED_FUNCTION_78_0();
        v8 = a2;
        v9 = OUTLINED_FUNCTION_41_1();
        OUTLINED_FUNCTION_105(v9, sel_xpcAdminInterfaceWithCompletion_);
        OUTLINED_FUNCTION_106();
        OUTLINED_FUNCTION_72_0();
        OUTLINED_FUNCTION_106();
        return;
      }
    }
    else
    {
      objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy], sel_xpcDisconnect);
    }
    swift_unknownObjectRelease();
  }
  else
  {
    sub_249761470(v4);

  }
}

void sub_249760994()
{
  void *v0;
  uint64_t v1;
  void *v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  OUTLINED_FUNCTION_20_2();
  v8 = OUTLINED_FUNCTION_2_6(v3, v4, v5, v6, v7);
  v9 = OUTLINED_FUNCTION_40_1(v8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_45_1(v10, v19);
  v11 = OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_0_7(v11);
  v12 = sub_24975FDAC();
  v13 = v12;
  if ((v20 & 1) != 0)
  {
    v2 = (void *)sub_24975FDC8();
    v12 = OUTLINED_FUNCTION_5_4();
    v13 = (uint64_t)v2;
  }
  if (v13)
  {
    OUTLINED_FUNCTION_19_3();
    if (v14)
    {
      if (v14 == 1)
      {
        OUTLINED_FUNCTION_8_5();
        sub_24976B6B0(v2, 1);
        OUTLINED_FUNCTION_36_1();
        OUTLINED_FUNCTION_5_4();
        sub_24976B6DC(v2, 1);
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_10_1();
        OUTLINED_FUNCTION_16_2();
        return;
      }
      v16 = (_QWORD *)OUTLINED_FUNCTION_18_1();
      v16[2] = v0;
      v16[3] = sub_24976D104;
      v16[4] = v1;
      OUTLINED_FUNCTION_31_1((uint64_t)sub_24977DEFC);
      OUTLINED_FUNCTION_8_5();
      v17 = v0;
      OUTLINED_FUNCTION_30_1();
      v18 = OUTLINED_FUNCTION_34_1();
      OUTLINED_FUNCTION_28_1(v18, sel_xpcAdminInterfaceWithCompletion_);
      OUTLINED_FUNCTION_5_4();
      OUTLINED_FUNCTION_54_0();
    }
    else
    {
      sub_24976B6B0(v2, 0);
      OUTLINED_FUNCTION_8_5();
      sub_24976B6B0(v2, 0);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_94();
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_31_1((uint64_t)sub_249761710);
      OUTLINED_FUNCTION_21_2();
      v15 = OUTLINED_FUNCTION_49_0();
      OUTLINED_FUNCTION_76_0(v15, sel_xpcDisconnectFrom_completion_);
      OUTLINED_FUNCTION_93();

      sub_24976B6DC(v2, 0);
      OUTLINED_FUNCTION_5_4();
      sub_24976B6DC(v2, 0);
    }
    swift_release();
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_5_4();
    OUTLINED_FUNCTION_3_5();
  }
  else
  {
    sub_249761470(v12);
    OUTLINED_FUNCTION_36_1();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_15_2();
  }
}

void sub_249760BC0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD, unint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_107();
  v4 = OUTLINED_FUNCTION_18_1();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  OUTLINED_FUNCTION_30_1();
  v5 = sub_24975FDAC();
  v6 = v5;
  if ((v2 & 1) != 0)
  {
    v2 = sub_24975FDC8();
    v5 = OUTLINED_FUNCTION_5_4();
    v6 = v2;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_19_3();
    if (v7)
    {
      if (v7 == 1)
      {
        OUTLINED_FUNCTION_8_5();
        OUTLINED_FUNCTION_48_0((void *)v2);
        v3(0, 0xF000000000000000, v2);
        OUTLINED_FUNCTION_5_4();
        sub_24976B6DC((void *)v2, 1);
        OUTLINED_FUNCTION_10_1();
        OUTLINED_FUNCTION_12_1();
        OUTLINED_FUNCTION_25_2();
        return;
      }
      v9 = (_QWORD *)OUTLINED_FUNCTION_18_1();
      v9[2] = v0;
      v9[3] = sub_24976D0D0;
      v9[4] = v4;
      OUTLINED_FUNCTION_14_2((uint64_t)sub_24977DEFC, MEMORY[0x24BDAC760], 1107296256, v12, v13);
      OUTLINED_FUNCTION_8_5();
      v10 = v0;
      OUTLINED_FUNCTION_21_2();
      v11 = OUTLINED_FUNCTION_34_1();
      OUTLINED_FUNCTION_28_1(v11, sel_xpcAdminInterfaceWithCompletion_);
      OUTLINED_FUNCTION_5_4();
      OUTLINED_FUNCTION_54_0();
    }
    else
    {
      OUTLINED_FUNCTION_14_2((uint64_t)sub_249761A34, MEMORY[0x24BDAC760], 1107296256, v12, v13);
      sub_24976B6B0((id)v2, 0);
      OUTLINED_FUNCTION_30_1();
      OUTLINED_FUNCTION_8_5();
      sub_24976B6B0((id)v2, 0);
      OUTLINED_FUNCTION_34_1();
      OUTLINED_FUNCTION_47_0((id)v2, sel_xpcDiagnoseWithCompletion_);
      OUTLINED_FUNCTION_64_0();
      sub_24976B6DC((void *)v2, 0);
      OUTLINED_FUNCTION_5_4();
      OUTLINED_FUNCTION_35_1();
    }
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_5_4();
    OUTLINED_FUNCTION_62_0();
  }
  else
  {
    sub_249761470(v5);
    v3(0, 0xF000000000000000, v8);
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_24_2();
  }
}

void sub_249760DC4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_107();
  v4 = OUTLINED_FUNCTION_18_1();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  OUTLINED_FUNCTION_30_1();
  v5 = sub_24975FDAC();
  v6 = v5;
  if ((v2 & 1) != 0)
  {
    v2 = sub_24975FDC8();
    v5 = OUTLINED_FUNCTION_5_4();
    v6 = v2;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_19_3();
    if (v7)
    {
      if (v7 == 1)
      {
        OUTLINED_FUNCTION_8_5();
        OUTLINED_FUNCTION_48_0((void *)v2);
        v3(MEMORY[0x24BEE4AF8], v2);
        OUTLINED_FUNCTION_5_4();
        sub_24976B6DC((void *)v2, 1);
        OUTLINED_FUNCTION_10_1();
        OUTLINED_FUNCTION_12_1();
        OUTLINED_FUNCTION_25_2();
        return;
      }
      v10 = (_QWORD *)OUTLINED_FUNCTION_18_1();
      v10[2] = v0;
      v10[3] = sub_24976D0B8;
      v10[4] = v4;
      OUTLINED_FUNCTION_14_2((uint64_t)sub_24977DEFC, MEMORY[0x24BDAC760], 1107296256, v13, v14);
      OUTLINED_FUNCTION_8_5();
      v11 = v0;
      OUTLINED_FUNCTION_21_2();
      v12 = OUTLINED_FUNCTION_34_1();
      OUTLINED_FUNCTION_28_1(v12, sel_xpcAdminInterfaceWithCompletion_);
      OUTLINED_FUNCTION_5_4();
      OUTLINED_FUNCTION_54_0();
    }
    else
    {
      v9 = OUTLINED_FUNCTION_18_1();
      *(_QWORD *)(v9 + 16) = v3;
      *(_QWORD *)(v9 + 24) = v1;
      OUTLINED_FUNCTION_14_2((uint64_t)sub_249762308, MEMORY[0x24BDAC760], 1107296256, v13, v14);
      sub_24976B6B0((id)v2, 0);
      OUTLINED_FUNCTION_30_1();
      OUTLINED_FUNCTION_8_5();
      sub_24976B6B0((id)v2, 0);
      OUTLINED_FUNCTION_34_1();
      OUTLINED_FUNCTION_47_0((id)v2, sel_xpcGetIDSWithCompletion_);
      OUTLINED_FUNCTION_64_0();
      sub_24976B6DC((void *)v2, 0);
      OUTLINED_FUNCTION_5_4();
      OUTLINED_FUNCTION_35_1();
    }
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_5_4();
    OUTLINED_FUNCTION_62_0();
  }
  else
  {
    sub_249761470(v5);
    v3(MEMORY[0x24BEE4AF8], v8);
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_10_1();
    OUTLINED_FUNCTION_24_2();
  }
}

uint64_t sub_249760FE4(char a1, char *a2, uint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(void *), uint64_t a7)
{
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  char v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  char *v27;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD aBlock[6];

  v11 = a4 >> 8;
  v12 = a4 >> 16;
  v13 = a4 >> 24;
  v14 = HIDWORD(a4);
  v15 = a4 >> 40;
  v29 = HIWORD(a4);
  v30 = HIBYTE(a4);
  v31 = a5 >> 8;
  v32 = a5 >> 16;
  v33 = a5 >> 24;
  v34 = HIDWORD(a5);
  v36 = a5 >> 40;
  v37 = HIWORD(a5);
  v38 = HIBYTE(a5);
  v16 = OUTLINED_FUNCTION_18_1();
  *(_QWORD *)(v16 + 16) = a3;
  *(_BYTE *)(v16 + 24) = a4;
  *(_BYTE *)(v16 + 25) = v11;
  *(_BYTE *)(v16 + 26) = v12;
  *(_BYTE *)(v16 + 27) = v13;
  *(_BYTE *)(v16 + 28) = v14;
  *(_BYTE *)(v16 + 29) = v15;
  *(_BYTE *)(v16 + 30) = v29;
  *(_BYTE *)(v16 + 31) = v30;
  *(_BYTE *)(v16 + 32) = a5;
  *(_BYTE *)(v16 + 33) = v31;
  *(_BYTE *)(v16 + 34) = v32;
  *(_BYTE *)(v16 + 35) = v33;
  *(_BYTE *)(v16 + 36) = v34;
  *(_BYTE *)(v16 + 37) = v36;
  *(_BYTE *)(v16 + 38) = v37;
  *(_BYTE *)(v16 + 39) = v38;
  *(_QWORD *)(v16 + 40) = a6;
  *(_QWORD *)(v16 + 48) = a7;
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_21_2();
  v17 = sub_24975FDAC();
  v18 = (void *)v17;
  if ((a1 & 1) != 0)
  {
    v19 = sub_24975FDC8();
    v17 = OUTLINED_FUNCTION_55_0();
    v18 = (void *)v19;
  }
  if (v18)
  {
    v20 = *(void **)&a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy];
    if (a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8])
    {
      if (a2[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8] != 1)
      {
        v25 = (_QWORD *)OUTLINED_FUNCTION_18_1();
        v25[2] = a2;
        v25[3] = sub_24976D044;
        v25[4] = v16;
        aBlock[4] = sub_24976D3C4;
        aBlock[5] = v25;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24977DEFC;
        aBlock[3] = &block_descriptor_142;
        v26 = _Block_copy(aBlock);
        OUTLINED_FUNCTION_97();
        v27 = a2;
        OUTLINED_FUNCTION_46_0();
        OUTLINED_FUNCTION_49_0();
        objc_msgSend(v18, sel_xpcAdminInterfaceWithCompletion_, v26);
        OUTLINED_FUNCTION_55_0();
        OUTLINED_FUNCTION_93();
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_97();
      OUTLINED_FUNCTION_48_0(v20);
      a6(v20);
      OUTLINED_FUNCTION_55_0();
      v21 = v20;
      v22 = 1;
    }
    else
    {
      OUTLINED_FUNCTION_97();
      OUTLINED_FUNCTION_68_0(v20);
      sub_249761AC8(v20, 0, a3, a4, a5, a6, a7);
      OUTLINED_FUNCTION_55_0();
      v21 = v20;
      v22 = 0;
    }
    sub_24976B6DC(v21, v22);
LABEL_11:
    OUTLINED_FUNCTION_42();
    OUTLINED_FUNCTION_41_1();
    OUTLINED_FUNCTION_55_0();
    return OUTLINED_FUNCTION_12_1();
  }
  sub_249761470(v17);
  v24 = v23;
  ((void (*)(void))a6)();

  OUTLINED_FUNCTION_42();
  OUTLINED_FUNCTION_41_1();
  return OUTLINED_FUNCTION_12_1();
}

void sub_249761288(char a1, void (*a2)(void), uint64_t a3)
{
  _BYTE *v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _BYTE *v17;
  _QWORD v18[6];

  v7 = sub_24975FDAC();
  v8 = (void *)v7;
  if ((a1 & 1) != 0)
  {
    v9 = sub_24975FDC8();
    v7 = swift_unknownObjectRelease();
    v8 = (void *)v9;
  }
  if (!v8)
  {
    sub_249761470(v7);
    v14 = v13;
    a2();

    return;
  }
  v10 = *(void **)&v3[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy];
  if (!v3[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8])
  {
    swift_unknownObjectRetain();
    sub_24976B6B0(v10, 0);
    ((void (*)(void *, _QWORD))a2)(v10, 0);
    swift_unknownObjectRelease();
    v11 = v10;
    v12 = 0;
    goto LABEL_9;
  }
  if (v3[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8] == 1)
  {
    swift_unknownObjectRetain();
    sub_24976B6B0(v10, 1);
    ((void (*)(void *, uint64_t))a2)(v10, 1);
    swift_unknownObjectRelease();
    v11 = v10;
    v12 = 1;
LABEL_9:
    sub_24976B6DC(v11, v12);
    swift_unknownObjectRelease();
    return;
  }
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a2;
  v15[4] = a3;
  v18[4] = sub_24976D3C4;
  v18[5] = v15;
  v18[0] = MEMORY[0x24BDAC760];
  v18[1] = 1107296256;
  v18[2] = sub_24977DEFC;
  v18[3] = &block_descriptor_117;
  v16 = _Block_copy(v18);
  swift_unknownObjectRetain();
  v17 = v3;
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_xpcAdminInterfaceWithCompletion_, v16);
  swift_unknownObjectRelease();
  _Block_release(v16);
  swift_unknownObjectRelease();
}

void sub_249761470(uint64_t a1)
{
  OUTLINED_FUNCTION_61_0(a1, (unint64_t *)&qword_2578805A8);
  NSError.init(NSOSStatusErrorDomain:debugDescription:__file:__line:)(-71148, 0xD000000000000023, 0x8000000249840A70);
  OUTLINED_FUNCTION_27();
}

void sub_2497614D4(uint64_t a1, id a2, uint64_t a3, void (*a4)(id, uint64_t))
{
  uint64_t v6;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  void *v11;
  char v12;
  uint64_t v13;

  if (a2)
  {
    v6 = a3 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy;
    v7 = *(void **)(a3 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy);
    *(_QWORD *)v6 = a2;
    v8 = *(_BYTE *)(v6 + 8);
    *(_BYTE *)(v6 + 8) = 1;
    v9 = a2;
    OUTLINED_FUNCTION_71_0();
    sub_24976B6DC(v7, v8);
    OUTLINED_FUNCTION_71_0();
    a4(a2, 1);
    OUTLINED_FUNCTION_18_3();

  }
  else if (a1)
  {
    v10 = a3 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy;
    v11 = *(void **)(a3 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy);
    *(_QWORD *)v10 = a1;
    v12 = *(_BYTE *)(v10 + 8);
    *(_BYTE *)(v10 + 8) = 0;
    swift_unknownObjectRetain_n();
    sub_24976B6DC(v11, v12);
    v13 = OUTLINED_FUNCTION_8_5();
    a4((id)v13, 0);
    swift_unknownObjectRelease_n();
  }
}

void sub_2497615C4(id a1, char a2, uint64_t a3, void (*a4)(id), uint64_t a5)
{
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  char v14;
  _QWORD aBlock[7];

  if ((a2 & 1) != 0)
  {
    v8 = a1;
    a4(a1);
    v14 = 1;
  }
  else
  {
    swift_unknownObjectRetain();
    v9 = UniversalControlConfiguration.encoded()();
    v11 = v10;
    v12 = (void *)sub_24983691C();
    aBlock[4] = a4;
    aBlock[5] = a5;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_249761710;
    aBlock[3] = &block_descriptor_164;
    v13 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(a1, sel_xpcSetConfiguration_completion_, v12, v13);
    _Block_release(v13);

    sub_249748C10(v9, v11);
    v14 = 0;
  }
  sub_24976CE00(a1, v14, (void (*)(id))MEMORY[0x24BEE4F70]);
}

void sub_249761710(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_249761764()
{
  SEL *v0;
  SEL *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void *);
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  char v21;
  _QWORD v22[11];
  uint64_t v23;
  uint64_t v24;
  SEL *v25;
  void (*v26)(void *);
  _QWORD v27[7];

  OUTLINED_FUNCTION_20_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v26 = v6;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = OUTLINED_FUNCTION_9_5();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v12 & 1) != 0)
  {
    OUTLINED_FUNCTION_77_0();
    v26(v14);
    v21 = 1;
  }
  else
  {
    v24 = v3;
    v25 = v1;
    v23 = v5;
    v22[1] = v8 >> 24;
    v22[2] = v8 >> 16;
    v22[9] = HIWORD(v10);
    v22[10] = HIBYTE(v10);
    v22[7] = HIDWORD(v10);
    v22[8] = v10 >> 40;
    v22[5] = v10 >> 16;
    v22[6] = v10 >> 24;
    v22[3] = v8 >> 8;
    v22[4] = v10 >> 8;
    OUTLINED_FUNCTION_78_0();
    sub_2498369E8();
    v19 = (void *)sub_2498369C4();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v27[4] = v26;
    v27[5] = v23;
    v27[0] = MEMORY[0x24BDAC760];
    v27[1] = 1107296256;
    v27[2] = sub_249761710;
    v27[3] = v24;
    v20 = _Block_copy(v27);
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_65();
    objc_msgSend(v14, *v25, v19, v20);
    OUTLINED_FUNCTION_64_0();

    v21 = 0;
  }
  sub_24976CE00(v14, v21, (void (*)(id))MEMORY[0x24BEE4F70]);
  OUTLINED_FUNCTION_3_5();
}

id sub_24976193C(id result, char a2)
{
  if ((a2 & 1) == 0)
    return objc_msgSend(result, sel_xpcDisconnect);
  return result;
}

void sub_249761950(id a1, char a2, void (*a3)(_QWORD, unint64_t, id), uint64_t a4)
{
  void *v6;
  char v7;
  id v8;
  _QWORD v9[6];

  if ((a2 & 1) != 0)
  {
    v8 = a1;
    a3(0, 0xF000000000000000, a1);
    v7 = 1;
  }
  else
  {
    v9[4] = a3;
    v9[5] = a4;
    v9[0] = MEMORY[0x24BDAC760];
    v9[1] = 1107296256;
    v9[2] = sub_249761A34;
    v9[3] = &block_descriptor_203;
    v6 = _Block_copy(v9);
    sub_24976CFFC(a1, 0);
    swift_retain();
    swift_release();
    objc_msgSend(a1, sel_xpcDiagnoseWithCompletion_, v6);
    _Block_release(v6);
    v7 = 0;
  }
  sub_24976CE00(a1, v7, (void (*)(id))MEMORY[0x24BEE4F70]);
}

uint64_t sub_249761A34(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)sub_249836940();
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_249748C80((uint64_t)v4, v8);
  return swift_release();
}

void sub_249761AC8(void *a1, char a2, uint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(void *), uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(void *);
  uint64_t v39;
  void *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD aBlock[7];

  v14 = sub_249836A18();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v29 = a1;
    a6(a1);
    sub_24976CE00(a1, 1, (void (*)(id))MEMORY[0x24BEE4F70]);
  }
  else
  {
    v53 = a4 >> 16;
    v54 = a4 >> 8;
    v51 = HIDWORD(a4);
    v52 = a4 >> 24;
    v49 = HIWORD(a4);
    v50 = a4 >> 40;
    v47 = a5 >> 8;
    v48 = HIBYTE(a4);
    v45 = a5 >> 24;
    v46 = a5 >> 16;
    v43 = a5 >> 40;
    v44 = HIDWORD(a5);
    v18 = HIWORD(a5);
    v19 = a5;
    v20 = *(_QWORD *)(a3 + 16);
    v55 = v19;
    v41 = HIBYTE(v19);
    v42 = v18;
    if (v20)
    {
      v34 = v17;
      v35 = a4;
      v36 = v15;
      v37 = v14;
      v38 = a6;
      v39 = a7;
      aBlock[0] = MEMORY[0x24BEE4AF8];
      v40 = a1;
      swift_unknownObjectRetain();
      sub_24974DDF0();
      v21 = aBlock[0];
      v22 = (_BYTE *)(a3 + 32);
      v23 = *(_QWORD *)(aBlock[0] + 16);
      v24 = 16 * v23;
      do
      {
        if (*v22)
          v25 = 0x7265746E696F70;
        else
          v25 = 0x6472616F6279656BLL;
        if (*v22)
          v26 = 0xE700000000000000;
        else
          v26 = 0xE800000000000000;
        aBlock[0] = v21;
        v27 = v23 + 1;
        if (v23 >= *(_QWORD *)(v21 + 24) >> 1)
        {
          sub_24974DDF0();
          v21 = aBlock[0];
        }
        *(_QWORD *)(v21 + 16) = v27;
        v28 = v21 + v24;
        *(_QWORD *)(v28 + 32) = v25;
        *(_QWORD *)(v28 + 40) = v26;
        v24 += 16;
        ++v22;
        v23 = v27;
        --v20;
      }
      while (v20);
      a1 = v40;
      a7 = v39;
      a6 = v38;
      v14 = v37;
      v15 = v36;
      v17 = v34;
    }
    else
    {
      swift_unknownObjectRetain();
    }
    v30 = (void *)sub_249836E98();
    swift_bridgeObjectRelease();
    sub_2498369E8();
    v31 = (void *)sub_2498369C4();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    aBlock[4] = a6;
    aBlock[5] = a7;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_249761710;
    aBlock[3] = &block_descriptor_145;
    v32 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(a1, sel_xpcMoveWithType_device_completion_, v30, v31, v32);

    sub_24976CE00(a1, 0, (void (*)(id))MEMORY[0x24BEE4F70]);
    _Block_release(v32);

  }
}

uint64_t UniversalControlXPCEdgeRegion.rawValue.getter()
{
  return OUTLINED_FUNCTION_50_0();
}

uint64_t sub_249761E84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    type metadata accessor for UniversalControlXPCEdgeRegion();
    v4 = sub_249836EA4();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_249761EFC(id a1, char a2, void (*a3)(_QWORD, id), uint64_t a4)
{
  uint64_t v7;
  void *v8;
  char v9;
  id v10;
  _QWORD v11[6];

  if ((a2 & 1) != 0)
  {
    v10 = a1;
    a3(MEMORY[0x24BEE4AF8], a1);
    v9 = 1;
  }
  else
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a3;
    *(_QWORD *)(v7 + 24) = a4;
    v11[4] = sub_24976D3C0;
    v11[5] = v7;
    v11[0] = MEMORY[0x24BDAC760];
    v11[1] = 1107296256;
    v11[2] = sub_249762308;
    v11[3] = &block_descriptor_187;
    v8 = _Block_copy(v11);
    sub_24976CFFC(a1, 0);
    swift_retain();
    swift_release();
    objc_msgSend(a1, sel_xpcGetIDSWithCompletion_, v8);
    _Block_release(v8);
    v9 = 0;
  }
  sub_24976CE00(a1, v9, (void (*)(id))MEMORY[0x24BEE4F70]);
}

uint64_t sub_249762000(unint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t (*v30)(_QWORD, uint64_t);
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v8 = sub_249836A18();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v29 - v13;
  if (a2)
    return a3(MEMORY[0x24BEE4AF8], a2);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v16 = sub_249837324();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v17 = MEMORY[0x24BEE4AF8];
  if (!v16)
    goto LABEL_17;
  v29[1] = a4;
  v30 = a3;
  v34 = MEMORY[0x24BEE4AF8];
  sub_24974E278();
  if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = 0;
    v31 = a1 & 0xC000000000000001;
    v32 = v16;
    v33 = a1;
    do
    {
      if (v31)
        v19 = (id)MEMORY[0x24BCF8148](v18, a1);
      else
        v19 = *(id *)(a1 + 8 * v18 + 32);
      v20 = v19;
      sub_2498369D0();
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
      v21 = sub_2498369F4();
      v23 = v22;
      v24 = *(void (**)(char *, uint64_t))(v9 + 8);
      v24(v12, v8);
      v24(v14, v8);

      v17 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24974E278();
        v17 = v34;
      }
      v25 = *(_QWORD *)(v17 + 16);
      if (v25 >= *(_QWORD *)(v17 + 24) >> 1)
      {
        sub_24974E278();
        v17 = v34;
      }
      *(_QWORD *)(v17 + 16) = v25 + 1;
      v26 = v17 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v21;
      ++v18;
      *(_QWORD *)(v26 + 40) = v23;
      a1 = v33;
    }
    while (v32 != v18);
    a3 = v30;
LABEL_17:
    sub_2497A1194(v17);
    swift_bridgeObjectRetain();
    sub_249753AEC();
    v28 = v27;
    swift_bridgeObjectRelease();
    v34 = v28;
    sub_249769EB4(&v34);
    swift_bridgeObjectRelease();
    a3(v34, 0);
    return swift_release();
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

void sub_249762308(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_24976D1D4(0, &qword_2578805B0);
  v5 = sub_249836EA4();
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();

}

void sub_2497623A0(void *a1, char a2, char a3, void *a4)
{
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD aBlock[6];

  if ((a2 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](a1);
    v10 = a1;
    sub_24980FC04((uint64_t (*)(void))sub_2497625A0, 0, sub_24976D328);
    sub_24976CE00(a1, 1, (void (*)(id))MEMORY[0x24BEE4F70]);
  }
  else
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a4;
    aBlock[4] = sub_24976D248;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_249761710;
    aBlock[3] = &block_descriptor_267;
    v8 = _Block_copy(aBlock);
    sub_24976CFFC(a1, 0);
    v9 = a4;
    swift_release();
    objc_msgSend(a1, sel_xpcSetAutomaticallyReconnect_completion_, a3 & 1, v8);
    _Block_release(v8);
    sub_24976CE00(a1, 0, (void (*)(id))MEMORY[0x24BEE4F70]);
  }
}

void sub_2497624FC(void *a1)
{
  id v2;

  if (a1)
  {
    v2 = (id)MEMORY[0x24BDAC7A8](a1);
    sub_24980FC04((uint64_t (*)(void))sub_249762584, 0, sub_24976D328);

  }
}

unint64_t sub_249762584()
{
  return 0xD000000000000020;
}

unint64_t sub_2497625A0()
{
  return 0xD000000000000034;
}

void sub_2497625BC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, void *);
  void (*v3)(uint64_t, void *);
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void (*v22)(uint64_t, void *);
  _QWORD v23[6];

  OUTLINED_FUNCTION_20_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_9_5();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_77_0();
    sub_24976D1D4(0, &qword_2578805B0);
    sub_24976CCC0(&qword_2578805B8, &qword_2578805B0);
    v17 = sub_249836CA0();
    OUTLINED_FUNCTION_77_0();
    v3(v17, v9);
    v18 = 1;
    sub_24976CE00(v9, 1, (void (*)(id))MEMORY[0x24BEE4F70]);
    OUTLINED_FUNCTION_78();
  }
  else
  {
    v14 = *(_QWORD *)(v5 + 16);
    if (v14)
    {
      v22 = v3;
      v23[0] = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_78_0();
      sub_2498371F8();
      v15 = v5 + 47;
      do
      {
        sub_2498369E8();
        sub_2498369C4();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        sub_2498371D4();
        sub_249837204();
        sub_249837210();
        v16 = sub_2498371E0();
        v15 += 16;
        --v14;
      }
      while (v14);
      v3 = v22;
    }
    else
    {
      v16 = OUTLINED_FUNCTION_78_0();
    }
    OUTLINED_FUNCTION_61_0(v16, &qword_2578805B0);
    v19 = (void *)sub_249836E98();
    OUTLINED_FUNCTION_1();
    v23[4] = v3;
    v23[5] = v1;
    v23[0] = MEMORY[0x24BDAC760];
    v23[1] = 1107296256;
    v23[2] = sub_249762834;
    v23[3] = &block_descriptor_148;
    v20 = _Block_copy(v23);
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_41_1();
    objc_msgSend(v9, sel_xpcSynchronizeWith_completion_, v19, v20);
    OUTLINED_FUNCTION_64_0();

    v18 = 0;
  }
  sub_24976CE00(v9, v18, (void (*)(id))MEMORY[0x24BEE4F70]);
  OUTLINED_FUNCTION_3_5();
}

void sub_249762834(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_24976D1D4(0, &qword_2578805B0);
  sub_24976CCC0(&qword_2578805B8, &qword_2578805B0);
  v5 = sub_249836C94();
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();

}

void sub_24976290C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;

  OUTLINED_FUNCTION_20_2();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v31 = OUTLINED_FUNCTION_9_5();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 64);
  MEMORY[0x24BDAC7A8](v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))((char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v31);
  v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v20;
  *(_QWORD *)(v35 + 24) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v32 + 32))(v35 + v34, (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0), v31);
  v36 = (_QWORD *)(v35 + ((v33 + v34 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v36 = v26;
  v36[1] = v24;
  OUTLINED_FUNCTION_73_0();
  v20;
  v37 = v30;
  sub_249761288(1, (void (*)(void))sub_24976CF78, v35);
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_3_5();
}

void sub_2497629FC(void *a1, char a2, void *a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  uint64_t aBlock[6];

  if ((a2 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](a1);
    v17 = a1;
    sub_24980FC04((uint64_t (*)(void))sub_249762E08, 0, (uint64_t (*)(void))sub_24976CFDC);
    sub_24976CE00(a1, 1, (void (*)(id))MEMORY[0x24BEE4F70]);
  }
  else
  {
    v10 = a4;
    sub_24976CFFC(a1, 0);
    v11 = sub_249836AFC();
    v12 = sub_249836FB8();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      aBlock[0] = v14;
      *(_DWORD *)v13 = 136446210;
      v15 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
      sub_24976A748(v15, v16, aBlock);
      sub_2498370CC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249741000, v11, v12, "Client taking assertion: '%{public}s'", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BCF906C](v14, -1, -1);
      MEMORY[0x24BCF906C](v13, -1, -1);
    }
    else
    {

    }
    v18 = (void *)sub_2498369C4();
    if (a7)
      a7 = (void *)sub_249836D18();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a3;
    *(_QWORD *)(v19 + 24) = v10;
    aBlock[4] = (uint64_t)sub_24976D008;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_249761710;
    aBlock[3] = (uint64_t)&block_descriptor_132;
    v20 = _Block_copy(aBlock);
    v21 = v10;
    v22 = a3;
    swift_release();
    objc_msgSend(a1, sel_xpcTakeClientAssertion_assertionID_deviceID_completion_, v21, v18, a7, v20);
    _Block_release(v20);

    sub_24976CE00(a1, 0, (void (*)(id))MEMORY[0x24BEE4F70]);
  }
}

void sub_249762CD4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  _QWORD v5[4];

  if (a1)
  {
    v2 = MEMORY[0x24BDAC7A8](a1);
    v5[2] = v3;
    v4 = (id)MEMORY[0x24BDAC7A8](v2);
    sub_24980FC04(sub_24976D010, (uint64_t)v5, sub_24976D328);

  }
}

uint64_t sub_249762D84()
{
  uint64_t v1;

  v1 = sub_2498375AC();
  sub_249836DB4();
  _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  sub_249836DB4();
  return v1;
}

unint64_t sub_249762E08()
{
  return 0xD00000000000002ELL;
}

void sub_249762E24(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v3 = OUTLINED_FUNCTION_9_5();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v8 = v1;
  sub_249761288(1, (void (*)(void))sub_24976CE18, v7);
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_13_1();
}

void sub_249762EF0(void *a1, char a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD v30[2];
  uint8_t *v31;
  uint64_t v32;
  void *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock[6];

  v8 = sub_249836A18();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v30 - v14;
  if ((a2 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](v13);
    v30[-2] = a1;
    v23 = a1;
    sub_24980FC04((uint64_t (*)(void))sub_2497633A0, 0, sub_24976D328);
    sub_24976CE00(a1, 1, (void (*)(id))MEMORY[0x24BEE4F70]);
  }
  else
  {
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v35 = a4;
    v34((char *)v30 - v14, a4, v8);
    swift_unknownObjectRetain();
    v16 = sub_249836AFC();
    v17 = sub_249836FB8();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      aBlock[0] = v32;
      v33 = a3;
      *(_DWORD *)v18 = 136446210;
      v30[1] = v18 + 4;
      v31 = v18;
      sub_24974BBF4(&qword_257880698, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
      v19 = sub_249837540();
      v36 = sub_24976A748(v19, v20, aBlock);
      a3 = v33;
      sub_2498370CC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
      v21 = v31;
      _os_log_impl(&dword_249741000, v16, v17, "Client releasing assertion: '%{public}s'", v31, 0xCu);
      v22 = v32;
      swift_arrayDestroy();
      MEMORY[0x24BCF906C](v22, -1, -1);
      MEMORY[0x24BCF906C](v21, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    }
    v24 = v35;
    v25 = (void *)sub_2498369C4();
    v34(v12, v24, v8);
    v26 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = a3;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v27 + v26, v12, v8);
    aBlock[4] = (uint64_t)sub_24976CEC0;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_249761710;
    aBlock[3] = (uint64_t)&block_descriptor_123;
    v28 = _Block_copy(aBlock);
    v29 = a3;
    swift_release();
    objc_msgSend(a1, sel_xpcReleaseClientAssertion_completion_, v25, v28);
    _Block_release(v28);

    sub_24976CE00(a1, 0, (void (*)(id))MEMORY[0x24BEE4F70]);
  }
}

void sub_249763268(void *a1, uint64_t a2)
{
  NSObject *v3;
  void *v4;
  uint64_t v5;
  id v6;
  _QWORD v7[4];

  if (a1)
  {
    v3 = (a2 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_logger);
    v4 = (void *)MEMORY[0x24BDAC7A8](a1);
    v7[2] = v5;
    v6 = v4;
    sub_24980F818(sub_24976CEF0, (uint64_t)v7, v3, a1);
  }
}

uint64_t sub_2497632E4()
{
  uint64_t v1;

  v1 = sub_2498375AC();
  sub_249836DB4();
  sub_249836A18();
  sub_24974BBF4(&qword_257880698, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
  sub_249837540();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  sub_249836DB4();
  return v1;
}

unint64_t sub_2497633A0()
{
  return 0xD000000000000031;
}

uint64_t sub_2497633BC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  type metadata accessor for AgentXPCProxy(0);
  sub_24974BBF4(&qword_257880680, (void (*)(uint64_t))type metadata accessor for AgentXPCProxy);
  sub_249836B68();
  sub_249836B80();
  swift_release();
  result = swift_beginAccess();
  *(_QWORD *)(a1 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_localSeed) = *(_QWORD *)(a2 + 16);
  return result;
}

void sub_24976345C(unint64_t a1, void *a2, NSObject *a3, uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[5];
  uint64_t v23;

  ObjectType = swift_getObjectType();
  if (a2)
  {
    v9 = MEMORY[0x24BDAC7A8](ObjectType);
    v22[2] = a4;
    MEMORY[0x24BDAC7A8](v9);
    v10 = a2;
    sub_24980FC04(sub_24976CE0C, (uint64_t)v22, sub_24976D328);

LABEL_20:
    dispatch_group_leave(a3);
    return;
  }
  v11 = ObjectType;
  v12 = MEMORY[0x24BEE4AF8];
  if (a1)
    v13 = a1;
  else
    v13 = MEMORY[0x24BEE4AF8];
  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_8;
LABEL_16:
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x24BEE4AF8];
LABEL_17:
    v19 = OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_activeEdges;
    v20 = swift_bridgeObjectRetain();
    v21 = sub_24977D92C(v20, v18);
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      sub_24974BBF4(&qword_257880680, (void (*)(uint64_t))type metadata accessor for AgentXPCProxy);
      sub_249836B68();
      sub_249836B80();
      swift_release();
      *(_QWORD *)(a4 + v19) = v18;
    }
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_249837324();
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_16;
LABEL_8:
  v23 = v12;
  sub_2498371F8();
  if ((v14 & 0x8000000000000000) == 0)
  {
    v22[4] = v11;
    v15 = 0;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        v16 = (id)MEMORY[0x24BCF8148](v15, v13);
      else
        v16 = *(id *)(v13 + 8 * v15 + 32);
      v17 = v16;
      ++v15;
      swift_retain();

      sub_2498371D4();
      sub_249837204();
      sub_249837210();
      sub_2498371E0();
    }
    while (v14 != v15);
    v18 = v23;
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_2497636DC(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_notificationName);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_249763714(void *a1, char a2, dispatch_group_t group, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSObject *v10;
  id v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  id v15;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  id v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;

  if ((a2 & 1) != 0)
  {
    dispatch_group_leave(group);
  }
  else
  {
    swift_unknownObjectRetain();
    dispatch_group_enter(group);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = group;
    *(_QWORD *)(v7 + 24) = a4;
    v28 = sub_24976CDC4;
    v29 = v7;
    v8 = MEMORY[0x24BDAC760];
    v24 = MEMORY[0x24BDAC760];
    v25 = 1107296256;
    v26 = sub_249761A34;
    v27 = &block_descriptor_89;
    v9 = _Block_copy(&v24);
    v10 = group;
    v11 = a4;
    swift_release();
    objc_msgSend(a1, sel_xpcGetConfigurationWithCompletion_, v9);
    _Block_release(v9);
    dispatch_group_enter(v10);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v10;
    *(_QWORD *)(v12 + 24) = v11;
    v28 = sub_24976CDCC;
    v29 = v12;
    v24 = v8;
    v25 = 1107296256;
    v26 = sub_249763F2C;
    v27 = &block_descriptor_95;
    v13 = _Block_copy(&v24);
    v14 = v10;
    v15 = v11;
    swift_release();
    objc_msgSend(a1, sel_xpcGetDevicesWithCompletion_, v13);
    _Block_release(v13);
    dispatch_group_enter(v14);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v14;
    *(_QWORD *)(v16 + 24) = v15;
    v28 = sub_24976CDD4;
    v29 = v16;
    v24 = v8;
    v25 = 1107296256;
    v26 = sub_249762308;
    v27 = &block_descriptor_101;
    v17 = _Block_copy(&v24);
    v18 = v14;
    v19 = v15;
    swift_release();
    objc_msgSend(a1, sel_xpcGetConnectedDevicesWithCompletion_, v17);
    _Block_release(v17);
    dispatch_group_enter(v18);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v18;
    *(_QWORD *)(v20 + 24) = v19;
    v28 = sub_24976CDF8;
    v29 = v20;
    v24 = v8;
    v25 = 1107296256;
    v26 = sub_2497644B0;
    v27 = &block_descriptor_107;
    v21 = _Block_copy(&v24);
    v22 = v18;
    v23 = v19;
    swift_release();
    objc_msgSend(a1, sel_xpcGetAutomaticallyReconnectWithCompletion_, v21);
    _Block_release(v21);
    sub_24976CE00(a1, 0, (void (*)(id))MEMORY[0x24BEE4F70]);
    dispatch_group_leave(v22);
  }
}

void sub_2497639D8(uint64_t a1, unint64_t a2, void *a3, NSObject *a4, uint64_t a5)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;

  swift_getObjectType();
  if (a3)
  {
    v10 = a3;
    v11 = swift_willThrow();
    v14 = MEMORY[0x24BDAC7A8](v11);
    MEMORY[0x24BDAC7A8](v14);
    sub_24980FC04(sub_24976D358, v15, sub_24976D328);

  }
  else
  {
    if (a2 >> 60 == 15)
      v12 = 0;
    else
      v12 = a1;
    if (a2 >> 60 == 15)
      v13 = 0xC000000000000000;
    else
      v13 = a2;
    sub_24983685C();
    swift_allocObject();
    sub_249748C6C(a1, a2);
    sub_249836850();
    type metadata accessor for UVC1Config();
    sub_24974BBF4(qword_2578805C0, (void (*)(uint64_t))type metadata accessor for UVC1Config);
    sub_249836844();
    swift_retain();
    sub_2497ECFBC();
    qword_257882098 = v16;
    unk_2578820A0 = v17;
    qword_2578820A8 = (uint64_t)v21;
    swift_release();
    sub_249748C10(v12, v13);
    swift_release();
    v18 = OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_configuration;
    v19 = (_QWORD *)swift_retain();
    v20 = sub_2497E8878(v19, v21);
    swift_release();
    if ((v20 & 1) == 0)
    {
      sub_24974BBF4(&qword_257880680, (void (*)(uint64_t))type metadata accessor for AgentXPCProxy);
      sub_249836B68();
      sub_249836B80();
      swift_release();
      *(_QWORD *)(a5 + v18) = v21;
    }
    swift_release();
  }
  dispatch_group_leave(a4);
}

void sub_249763C3C(uint64_t a1, unint64_t a2, void *a3, NSObject *a4, uint64_t a5)
{
  uint64_t ObjectType;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  NSObject *v25;
  uint64_t v26;

  ObjectType = swift_getObjectType();
  if (a3)
  {
    v11 = MEMORY[0x24BDAC7A8](ObjectType);
    v24[2] = a5;
    MEMORY[0x24BDAC7A8](v11);
    v12 = a3;
    sub_24980FC04(sub_24976D358, (uint64_t)v24, sub_24976D328);

LABEL_24:
    dispatch_group_leave(a4);
    return;
  }
  v13 = ObjectType;
  v25 = a4;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_249837324();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v15 = MEMORY[0x24BEE4AF8];
  if (!v14)
  {
LABEL_13:
    if (a1)
    {
      a1 = *(_QWORD *)(a1 + OBJC_IVAR___UniversalControlXPCDevice_box);
      swift_retain();
    }
    v19 = OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_devices;
    v20 = swift_bridgeObjectRetain();
    v21 = sub_24977D910(v20, v15);
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      if (*(_QWORD *)(a5 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_localDevice))
      {
        if (a1)
        {
          type metadata accessor for UniversalControlDevice(0);
          swift_retain();
          v22 = swift_retain();
          v23 = static UniversalControlDevice.== infix(_:_:)(v22);
          swift_release();
          swift_release();
          if ((v23 & 1) != 0)
          {
            swift_bridgeObjectRelease();
LABEL_22:
            swift_release();
LABEL_23:
            a4 = v25;
            goto LABEL_24;
          }
        }
      }
      else if (!a1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    sub_24974BBF4(&qword_257880680, (void (*)(uint64_t))type metadata accessor for AgentXPCProxy);
    sub_249836B68();
    sub_249836B80();
    swift_release();
    *(_QWORD *)(a5 + v19) = v15;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a5 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_localDevice) = a1;
    goto LABEL_22;
  }
  v26 = MEMORY[0x24BEE4AF8];
  sub_2498371F8();
  if ((v14 & 0x8000000000000000) == 0)
  {
    v24[5] = v13;
    v16 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v17 = (id)MEMORY[0x24BCF8148](v16, a2);
      else
        v17 = *(id *)(a2 + 8 * v16 + 32);
      v18 = v17;
      ++v16;
      swift_retain();

      sub_2498371D4();
      sub_249837204();
      sub_249837210();
      sub_2498371E0();
    }
    while (v14 != v16);
    v15 = v26;
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t UniversalControlXPCDevice.rawValue.getter()
{
  return OUTLINED_FUNCTION_50_0();
}

void sub_249763F2C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void (*v6)(void *, uint64_t, void *);
  uint64_t v7;
  id v8;
  id v9;

  v6 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  type metadata accessor for UniversalControlXPCDevice();
  v7 = sub_249836EA4();
  swift_retain();
  v9 = a2;
  v8 = a4;
  v6(a2, v7, a4);
  swift_release();
  swift_bridgeObjectRelease();

}

void sub_249763FCC(unint64_t a1, void *a2, NSObject *a3, uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  ObjectType = swift_getObjectType();
  v9 = sub_249836A18();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v34 - v15;
  if (a2)
  {
    v17 = MEMORY[0x24BDAC7A8](v14);
    *(&v34 - 2) = a4;
    MEMORY[0x24BDAC7A8](v17);
    *(&v34 - 2) = (uint64_t)a2;
    v18 = a2;
    sub_24980FC04(sub_24976D358, (uint64_t)(&v34 - 4), sub_24976D328);

LABEL_20:
    dispatch_group_leave(a3);
    return;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_249837324();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v20 = MEMORY[0x24BEE4AF8];
  v37 = ObjectType;
  if (!v19)
  {
LABEL_17:
    v30 = sub_2497A1194(v20);
    v31 = OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_connectedDevices;
    v32 = swift_bridgeObjectRetain();
    v33 = sub_24976A2E8(v32, v30);
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {
      sub_24974BBF4(&qword_257880680, (void (*)(uint64_t))type metadata accessor for AgentXPCProxy);
      sub_249836B68();
      sub_249836B80();
      swift_release();
      *(_QWORD *)(a4 + v31) = v30;
    }
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v41 = MEMORY[0x24BEE4AF8];
  sub_24974E278();
  if ((v19 & 0x8000000000000000) == 0)
  {
    v35 = a4;
    v36 = a3;
    v21 = 0;
    v38 = a1 & 0xC000000000000001;
    v39 = v19;
    v40 = a1;
    do
    {
      if (v38)
        v22 = (id)MEMORY[0x24BCF8148](v21, a1);
      else
        v22 = *(id *)(a1 + 8 * v21 + 32);
      v23 = v22;
      sub_2498369D0();
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v16, v9);
      v24 = sub_2498369F4();
      v26 = v25;
      v27 = *(void (**)(char *, uint64_t))(v10 + 8);
      v27(v13, v9);
      v27(v16, v9);

      v20 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24974E278();
        v20 = v41;
      }
      v28 = *(_QWORD *)(v20 + 16);
      if (v28 >= *(_QWORD *)(v20 + 24) >> 1)
      {
        sub_24974E278();
        v20 = v41;
      }
      *(_QWORD *)(v20 + 16) = v28 + 1;
      v29 = v20 + 16 * v28;
      *(_QWORD *)(v29 + 32) = v24;
      ++v21;
      *(_QWORD *)(v29 + 40) = v26;
      a1 = v40;
    }
    while (v39 != v21);
    a4 = v35;
    a3 = v36;
    goto LABEL_17;
  }
  __break(1u);
}

void sub_24976437C(char a1, void *a2, NSObject *a3, uint64_t a4)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  swift_getObjectType();
  if (a2)
  {
    v8 = a2;
    v9 = swift_willThrow();
    v10 = MEMORY[0x24BDAC7A8](v9);
    MEMORY[0x24BDAC7A8](v10);
    sub_24980FC04(sub_24976D358, v11, sub_24976D328);

  }
  else
  {
    v12 = OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_automaticallyReconnect;
    v13 = a1 & 1;
    if (*(unsigned __int8 *)(a4 + OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy_automaticallyReconnect) != v13)
    {
      sub_24974BBF4(&qword_257880680, (void (*)(uint64_t))type metadata accessor for AgentXPCProxy);
      sub_249836B68();
      sub_249836B80();
      swift_release();
      *(_BYTE *)(a4 + v12) = v13;
    }
  }
  dispatch_group_leave(a3);
}

void sub_2497644B0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_2497645C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getObjectType();
  result = sub_249836B68();
  *a1 = result;
  return result;
}

uint64_t sub_249764604()
{
  return sub_24975FD34();
}

uint64_t sub_249764624@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_delegate;
  swift_beginAccess();
  result = MEMORY[0x24BCF90FC](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_24976467C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t AgentXPCListener.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_delegate;
  OUTLINED_FUNCTION_44_0();
  return MEMORY[0x24BCF90FC](v1);
}

uint64_t AgentXPCListener.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_delegate;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return OUTLINED_FUNCTION_29_0();
}

void (*AgentXPCListener.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  OUTLINED_FUNCTION_44_0();
  v6 = MEMORY[0x24BCF90FC](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_2497647F4;
}

void sub_2497647F4(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

char *AgentXPCListener.init()()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t *v16;
  const char *v17;
  int *v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  _DWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _xpc_connection_s *v26;
  uint64_t v27;
  void *v28;
  char *v29;
  char *v31;
  uint64_t aBlock[6];
  objc_super v33;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v2 = &v0[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_logger];
  v3 = qword_25787F6A8;
  v4 = v0;
  if (v3 != -1)
    swift_once();
  v5 = sub_249836B14();
  v6 = __swift_project_value_buffer(v5, (uint64_t)qword_2578907F8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v2, v6, v5);
  v7 = &v4[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_notificationName];
  *(_QWORD *)v7 = 0xD000000000000020;
  *((_QWORD *)v7 + 1) = 0x8000000249840450;
  *(_DWORD *)&v4[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_notifyToken] = -1;
  *(_DWORD *)&v4[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_seed] = 0;
  v8 = OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_connections;
  type metadata accessor for AgentXPCConnection(0);
  v9 = sub_249836CA0();
  *(_QWORD *)&v4[v8] = v9;
  OUTLINED_FUNCTION_61_0(v9, &qword_257880220);
  v10 = sub_249764C80();
  *(_QWORD *)&v4[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_listener] = v10;
  v11 = &v4[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_machServiceName];
  *(_QWORD *)v11 = 0xD000000000000012;
  *((_QWORD *)v11 + 1) = 0x8000000249840480;
  v12 = v10;

  v33.receiver = v4;
  v33.super_class = ObjectType;
  v13 = (char *)objc_msgSendSuper2(&v33, sel_init);
  v14 = OUTLINED_FUNCTION_105((uint64_t)v13, sel_setDelegate_);
  OUTLINED_FUNCTION_61_0((uint64_t)v14, (unint64_t *)&qword_257880238);
  v15 = (void *)sub_249836FE8();
  OUTLINED_FUNCTION_47_0(v12, sel__setQueue_);

  v16 = (uint64_t *)&v13[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_notificationName];
  v17 = (const char *)(sub_249836D60() + 32);
  v18 = (int *)&v13[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_notifyToken];
  OUTLINED_FUNCTION_44_0();
  LODWORD(v17) = notify_register_check(v17, v18);
  swift_endAccess();
  OUTLINED_FUNCTION_17_0();
  if ((_DWORD)v17)
  {
    v19 = v13;
    v20 = sub_249836AFC();
    v21 = sub_249836FAC();
    if (OUTLINED_FUNCTION_11_3(v21))
    {
      v31 = v19;
      v22 = (_DWORD *)OUTLINED_FUNCTION_12();
      aBlock[0] = OUTLINED_FUNCTION_12();
      *v22 = 136446466;
      v24 = *v16;
      v23 = v16[1];
      swift_bridgeObjectRetain();
      sub_24976A748(v24, v23, aBlock);
      sub_2498370CC();

      OUTLINED_FUNCTION_89();
      OUTLINED_FUNCTION_95();
      sub_2498370CC();
      OUTLINED_FUNCTION_74_0(&dword_249741000, v20, v25, "%{public}s notify_register_check failed: %u");
      OUTLINED_FUNCTION_33_1();
      OUTLINED_FUNCTION_3();
    }

  }
  v26 = (_xpc_connection_s *)objc_msgSend(v12, sel__xpcConnection);
  v27 = OUTLINED_FUNCTION_18_1();
  *(_QWORD *)(v27 + 16) = v26;
  *(_QWORD *)(v27 + 24) = v13;
  aBlock[4] = (uint64_t)sub_249764F50;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_24975ED5C;
  aBlock[3] = (uint64_t)&block_descriptor_0;
  v28 = _Block_copy(aBlock);
  v29 = v13;
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_65();
  xpc_connection_send_barrier(v26, v28);

  _Block_release(v28);
  swift_unknownObjectRelease();
  return v29;
}

uint64_t type metadata accessor for AgentXPCConnection(uint64_t a1)
{
  return sub_24976B000(a1, (uint64_t *)&unk_257880438);
}

id sub_249764C80()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_249836D18();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithMachServiceName_, v1);

  return v2;
}

uint64_t sub_249764CF0()
{
  uint64_t result;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5[2];

  result = xpc_connection_copy_invalidation_reason();
  if (result)
  {
    v5[0] = 0;
    v5[1] = 0xE000000000000000;
    sub_249837168();
    sub_249836DB4();
    sub_249836DB4();
    sub_249836DB4();
    sub_249836DC0();
    sub_249836DB4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v1 = sub_249836AFC();
    v2 = sub_249836FAC();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      v4 = swift_slowAlloc();
      v5[0] = v4;
      *(_DWORD *)v3 = 136446210;
      swift_bridgeObjectRetain();
      sub_24976A748(0, 0xE000000000000000, v5);
      sub_2498370CC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_249741000, v1, v2, "%{public}s", v3, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24BCF906C](v4, -1, -1);
      MEMORY[0x24BCF906C](v3, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    result = sub_24983730C();
    __break(1u);
  }
  return result;
}

uint64_t sub_249764F30()
{
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_27_1();
  return swift_deallocObject();
}

uint64_t sub_249764F50()
{
  return sub_249764CF0();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

Swift::Void __swiftcall AgentXPCListener.activate()()
{
  sub_249764FB8("%{public}s Activated", (SEL *)&selRef_activate);
}

Swift::Void __swiftcall AgentXPCListener.cancel()()
{
  sub_249764FB8("%{public}s Canceled", (SEL *)&selRef_invalidate);
}

id sub_249764FB8(const char *a1, SEL *a2)
{
  void *v2;
  os_log_type_t v3;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  _DWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = v2;
  v7 = sub_249836AFC();
  v8 = sub_249836F94();
  if (OUTLINED_FUNCTION_11_3(v8))
  {
    v9 = (_DWORD *)OUTLINED_FUNCTION_12();
    v13 = OUTLINED_FUNCTION_12();
    *v9 = 136446210;
    v11 = *(_QWORD *)&v6[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_machServiceName];
    v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_machServiceName + 8];
    swift_bridgeObjectRetain();
    sub_24976A748(v11, v10, &v13);
    sub_2498370CC();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_90(&dword_249741000, v7, v3, a1);
    OUTLINED_FUNCTION_32_1();
    OUTLINED_FUNCTION_3();
  }

  return objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_listener], *a2);
}

Swift::Bool __swiftcall AgentXPCListener.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_class *v8;
  char *v9;

  v3 = v2;
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_machServiceName);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_machServiceName + 8);
  v7 = objc_allocWithZone((Class)type metadata accessor for AgentXPCConnection(0));
  v8 = shouldAcceptNewConnection.super.isa;
  swift_bridgeObjectRetain();
  v9 = (char *)sub_249765EC8(v8, v5, v6);
  sub_2497651A8(v9);

  return 1;
}

void sub_2497651A8(char *a1)
{
  void *v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  char *v6;
  audit_token_t v7;

  v1 = *(void **)&a1[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_connection];
  v2 = a1;
  v3 = sub_249836AFC();
  v4 = sub_249836F94();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    *(_DWORD *)v5 = 134218240;
    *(_QWORD *)v7.val = sub_249836D00();
    sub_2498370CC();
    *(_WORD *)(v5 + 12) = 1024;
    objc_msgSend(v1, sel_auditToken, *(_QWORD *)v7.val);
    v7.val[0] = audit_token_to_pid(&v7);
    sub_2498370CC();

    _os_log_impl(&dword_249741000, v3, v4, "added connection %lx from %d", (uint8_t *)v5, 0x12u);
    MEMORY[0x24BCF906C](v5, -1, -1);
  }
  else
  {

  }
  swift_beginAccess();
  v6 = v2;
  sub_24974B47C((uint64_t)v6, (uint64_t)v1);
  swift_endAccess();
  *(_QWORD *)&v6[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_delegate + 8] = &off_251AB16F8;
  swift_unknownObjectWeakAssign();
  sub_249765FF8();
}

uint64_t sub_2497653B0()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t *v3;
  uint64_t v4;

  v1 = objc_msgSend((id)objc_opt_self(), sel_currentConnection);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_connections);
  swift_beginAccess();
  v4 = sub_2497A085C((uint64_t)v2, *v3);
  swift_endAccess();

  return v4;
}

void AgentXPCListener.currentConnectionID.getter()
{
  void *v0;

  v0 = (void *)sub_2497653B0();
  if (v0)

  OUTLINED_FUNCTION_27();
}

BOOL AgentXPCListener.currentConnectionIsAdminEntitled.getter()
{
  uint64_t v0;
  NSObject *v1;
  BOOL v2;
  os_log_type_t v3;
  uint8_t *v4;

  v0 = sub_2497653B0();
  if (v0)
  {
    v1 = v0;
    v2 = sub_249765BFC();
  }
  else
  {
    v1 = sub_249836AFC();
    v3 = sub_249836FAC();
    if (os_log_type_enabled(v1, v3))
    {
      v4 = (uint8_t *)OUTLINED_FUNCTION_12();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_249741000, v1, v3, "Current connection not found. Will not determine if current connection is admin-entitled.", v4, 2u);
      OUTLINED_FUNCTION_3();
    }
    v2 = 0;
  }

  return v2;
}

uint64_t sub_249765528(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t ObjectType;
  audit_token_t v13;

  v2 = v1;
  v3 = *(void **)&a1[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_connection];
  v4 = a1;
  v5 = sub_249836AFC();
  v6 = sub_249836F94();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    *(_DWORD *)v7 = 134218240;
    *(_QWORD *)v13.val = sub_249836D00();
    sub_2498370CC();
    *(_WORD *)(v7 + 12) = 1024;
    objc_msgSend(v3, sel_auditToken, *(_QWORD *)v13.val);
    v13.val[0] = audit_token_to_pid(&v13);
    sub_2498370CC();

    _os_log_impl(&dword_249741000, v5, v6, "removed connection %lx from %d", (uint8_t *)v7, 0x12u);
    MEMORY[0x24BCF906C](v7, -1, -1);
  }
  else
  {

  }
  swift_beginAccess();
  v8 = (void *)sub_24976B9B8((uint64_t)v3);
  swift_endAccess();

  v9 = v2 + OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_delegate;
  swift_beginAccess();
  result = MEMORY[0x24BCF90FC](v9);
  if (result)
  {
    v11 = *(_QWORD *)(v9 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v11 + 160))(v3, ObjectType, v11);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall AgentXPCListener.objectDidChange()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int *v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  _DWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint32_t v23;
  char *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  v1 = v0;
  v2 = OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_seed;
  v3 = *(_DWORD *)&v1[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_seed] + 1;
  do
  {
    v4 = v3;
    v3 = 1;
  }
  while (!v4);
  *(_DWORD *)&v1[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_seed] = v4;
  v5 = *(unsigned int *)&v1[v2] | (unint64_t)((uint64_t)getpid() << 32);
  v6 = v1;
  v7 = sub_249836AFC();
  v8 = sub_249836FA0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = OUTLINED_FUNCTION_12();
    v29[0] = OUTLINED_FUNCTION_12();
    *(_DWORD *)v9 = 136446466;
    v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_notificationName];
    v11 = *(_QWORD *)&v6[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_notificationName + 8];
    swift_bridgeObjectRetain();
    sub_24976A748(v10, v11, v29);
    sub_2498370CC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2048;
    v28 = v5;
    sub_2498370CC();
    _os_log_impl(&dword_249741000, v7, v8, "%{public}s seed changed: %llu", (uint8_t *)v9, 0x16u);
    OUTLINED_FUNCTION_32_1();
    OUTLINED_FUNCTION_3();
  }

  v12 = (int *)&v6[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_notifyToken];
  OUTLINED_FUNCTION_44_0();
  if (notify_set_state(*v12, v5))
  {
    v13 = v6;
    v14 = sub_249836AFC();
    v15 = sub_249836FAC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (_DWORD *)OUTLINED_FUNCTION_12();
      v28 = OUTLINED_FUNCTION_12();
      *v16 = 136446466;
      v18 = *(_QWORD *)&v13[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_notificationName];
      v17 = *(_QWORD *)&v13[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_notificationName + 8];
      swift_bridgeObjectRetain();
      sub_24976A748(v18, v17, (uint64_t *)&v28);
      sub_2498370CC();

      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_95();
      sub_2498370CC();
      OUTLINED_FUNCTION_74_0(&dword_249741000, v14, v19, "%{public}s notify_register_check failed: %u");
      OUTLINED_FUNCTION_33_1();
      OUTLINED_FUNCTION_3();
    }

  }
  v21 = *(_QWORD *)&v6[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_notificationName];
  v20 = *(_QWORD *)&v6[OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_notificationName + 8];
  v22 = sub_249836D60();
  v23 = notify_post((const char *)(v22 + 32));
  OUTLINED_FUNCTION_65();
  if (v23)
  {
    v24 = v6;
    v25 = sub_249836AFC();
    v26 = sub_249836FAC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = OUTLINED_FUNCTION_12();
      v28 = OUTLINED_FUNCTION_12();
      *(_DWORD *)v27 = 136446466;
      OUTLINED_FUNCTION_73_0();
      sub_24976A748(v21, v20, (uint64_t *)&v28);
      sub_2498370CC();

      OUTLINED_FUNCTION_42();
      *(_WORD *)(v27 + 12) = 1024;
      sub_2498370CC();
      _os_log_impl(&dword_249741000, v25, v26, "%{public}s notify_post failed: %u", (uint8_t *)v27, 0x12u);
      OUTLINED_FUNCTION_33_1();
      OUTLINED_FUNCTION_3();
    }

  }
  OUTLINED_FUNCTION_39_1();
}

void sub_249765BA0()
{
  AgentXPCListener.cancel()();
}

void sub_249765BC0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1
                + OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_adminProxy);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_adminProxy) = a1;

}

void sub_249765BD4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_error);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_error) = a1;

}

uint64_t sub_249765BEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_connection);
}

BOOL sub_249765BFC()
{
  uint64_t v0;
  void *v1;
  _BOOL8 value;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_connection), sel_auditToken);
  v1 = (void *)xpc_copy_entitlement_for_token();
  if (!v1)
  {
    v1 = (void *)xpc_copy_entitlement_for_token();
    if (!v1)
      return 0;
  }
  value = xpc_BOOL_get_value(v1);
  swift_unknownObjectRelease();
  return value;
}

uint64_t sub_249765CBC()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  id v5;
  uint64_t v7;
  _QWORD aBlock[6];

  v1 = *(void **)&v0[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_connection];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  aBlock[4] = sub_24976CC94;
  aBlock[5] = v2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_249765E00;
  aBlock[3] = &block_descriptor_50;
  v3 = _Block_copy(aBlock);
  v4 = v0;
  swift_release();
  v5 = objc_msgSend(v1, sel_remoteObjectProxyWithErrorHandler_, v3);
  _Block_release(v3);
  sub_2498370E4();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880618);
  if (swift_dynamicCast())
    return v7;
  else
    return 0;
}

uint64_t sub_249765DD0(void *a1)
{
  id v2;

  v2 = a1;
  sub_249765BD4((uint64_t)a1);
  return sub_249766D64();
}

void sub_249765E00(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

id sub_249765E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4;
  void *v5;
  id v6;

  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_249836D18();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, a3);

  return v6;
}

id sub_249765EC8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  objc_super v17;

  v7 = OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_logger;
  v8 = qword_25787F6A8;
  v9 = v3;
  if (v8 != -1)
    swift_once();
  v10 = &v9[v7];
  v11 = sub_249836B14();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_2578907F8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, v12, v11);
  *(_QWORD *)&v9[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_adminProxy] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v9[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_error] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_connection] = a1;
  v13 = &v9[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_machServiceName];
  *(_QWORD *)v13 = a2;
  *((_QWORD *)v13 + 1) = a3;
  v14 = a1;

  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for AgentXPCConnection(0);
  v15 = objc_msgSendSuper2(&v17, sel_init);

  return v15;
}

void sub_249765FF8()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t inited;
  uint64_t v4;
  objc_class *v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  char *v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  void *v24;
  uint64_t aBlock;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  void *v28;
  void (*v29)();
  uint64_t v30;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_257892430);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578805D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249838510;
  sub_24976A6BC();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_249838520;
  *(_QWORD *)(v4 + 32) = sub_24976D1D4(0, &qword_2578805D8);
  *(_QWORD *)(v4 + 40) = type metadata accessor for UniversalControlXPCEdgeRegion();
  *(_QWORD *)(inited + 32) = v4;
  sub_249767018(MEMORY[0x24BEE4AF8], (uint64_t)sel_xpcGetEdgesWithCompletion_, 0);
  sub_249767018(inited, (uint64_t)sel_xpcGetEdgesWithCompletion_, 1);
  swift_setDeallocating();
  sub_24976A6F8();
  v5 = (objc_class *)type metadata accessor for AgentXPCAdminProxy();
  v6 = sub_249766394();
  objc_msgSend(v2, sel_setInterface_forSelector_argumentIndex_ofReply_, v6, sel_xpcAdminInterfaceWithCompletion_, 0, 1);

  v7 = MEMORY[0x24BCF90FC](&v1[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_delegate]);
  swift_unknownObjectRelease();
  v8 = v2;
  v9 = v8;
  if (v7)
  {
    v10 = v1;
    if (sub_249765BFC())
    {
      v11 = objc_allocWithZone(v5);
      v12 = v10;
      v13 = sub_249767868(v10);
      sub_249765BC0((uint64_t)v13);
      v14 = 0;
      v10 = v12;
    }
    else
    {
      v14 = 0;
    }
    v15 = v9;
  }
  else
  {
    v10 = 0;
    v15 = 0;
    v14 = v8;
  }
  v16 = *(void **)&v1[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_connection];
  objc_msgSend(v16, sel_setExportedInterface_, v15);
  objc_msgSend(v16, sel_setExportedObject_, v10);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v1;
  v29 = sub_24976CC28;
  v30 = v17;
  v18 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v26 = 1107296256;
  v27 = sub_24975ED5C;
  v28 = &block_descriptor_38;
  v19 = _Block_copy(&aBlock);
  v20 = v1;
  swift_release();
  objc_msgSend(v16, sel_setInterruptionHandler_, v19);
  _Block_release(v19);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v20;
  v29 = sub_24976CC48;
  v30 = v21;
  aBlock = v18;
  v26 = 1107296256;
  v27 = sub_24975ED5C;
  v28 = &block_descriptor_44;
  v22 = _Block_copy(&aBlock);
  v23 = v20;
  swift_release();
  objc_msgSend(v16, sel_setInvalidationHandler_, v22);
  _Block_release(v22);
  objc_msgSend(v16, sel_setRemoteObjectInterface_, v14);
  sub_24976D1D4(0, (unint64_t *)&qword_257880238);
  v24 = (void *)sub_249836FE8();
  objc_msgSend(v16, sel__setQueue_, v24);

  objc_msgSend(v16, sel_activate);
  swift_unknownObjectRelease();

}

id sub_249766394()
{
  id v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2578926C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578805D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249838510;
  sub_24976A6BC();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_249838510;
  v3 = sub_24976D1D4(0, &qword_2578805B0);
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(inited + 32) = v2;
  v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_249838510;
  sub_24976A6BC();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_249838510;
  v6 = sub_24976D1D4(0, (unint64_t *)&qword_2578805A8);
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v4 + 32) = v5;
  sub_249767018(inited, (uint64_t)sel_xpcConnectTo_completion_, 0);
  sub_249767018(v4, (uint64_t)sel_xpcConnectTo_completion_, 1);
  swift_setDeallocating();
  sub_24976A6F8();
  swift_setDeallocating();
  sub_24976A6F8();
  v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_249838510;
  sub_24976A6BC();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_249838510;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v7 + 32) = v8;
  v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_249838510;
  sub_24976A6BC();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_249838510;
  *(_QWORD *)(v10 + 32) = v6;
  *(_QWORD *)(v9 + 32) = v10;
  sub_249767018(v7, (uint64_t)sel_xpcDisconnectFrom_completion_, 0);
  sub_249767018(v9, (uint64_t)sel_xpcDisconnectFrom_completion_, 1);
  swift_setDeallocating();
  sub_24976A6F8();
  swift_setDeallocating();
  sub_24976A6F8();
  v11 = swift_initStackObject();
  *(_OWORD *)(v11 + 16) = xmmword_249838510;
  sub_24976A6BC();
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_249838520;
  v13 = sub_24976D1D4(0, &qword_2578805D8);
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v3;
  *(_QWORD *)(v11 + 32) = v12;
  v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_249838510;
  sub_24976A6BC();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_249839510;
  *(_QWORD *)(v15 + 32) = sub_24976D1D4(0, &qword_2578805E0);
  *(_QWORD *)(v15 + 40) = v6;
  *(_QWORD *)(v15 + 48) = sub_24976D1D4(0, &qword_2578805E8);
  *(_QWORD *)(v15 + 56) = v3;
  *(_QWORD *)(v14 + 32) = v15;
  sub_249767018(v11, (uint64_t)sel_xpcSynchronizeWith_completion_, 0);
  sub_249767018(v14, (uint64_t)sel_xpcSynchronizeWith_completion_, 1);
  swift_setDeallocating();
  sub_24976A6F8();
  swift_setDeallocating();
  sub_24976A6F8();
  v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_249838520;
  sub_24976A6BC();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_249838520;
  *(_QWORD *)(v17 + 32) = v13;
  *(_QWORD *)(v17 + 40) = v3;
  *(_QWORD *)(v16 + 32) = v17;
  sub_24976A6BC();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_249838510;
  *(_QWORD *)(v18 + 32) = v6;
  *(_QWORD *)(v16 + 40) = v18;
  v19 = MEMORY[0x24BEE4AF8];
  sub_249767018(MEMORY[0x24BEE4AF8], (uint64_t)sel_xpcGetConnectedDevicesWithCompletion_, 0);
  sub_249767018(v16, (uint64_t)sel_xpcGetConnectedDevicesWithCompletion_, 1);
  swift_setDeallocating();
  sub_24976A6F8();
  v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_249839520;
  sub_24976A6BC();
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_249838510;
  v22 = type metadata accessor for UniversalControlXPCDevice();
  *(_QWORD *)(v21 + 32) = v22;
  *(_QWORD *)(v20 + 32) = v21;
  sub_24976A6BC();
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_249838520;
  *(_QWORD *)(v23 + 32) = v13;
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v20 + 40) = v23;
  sub_24976A6BC();
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_249838510;
  *(_QWORD *)(v24 + 32) = v6;
  *(_QWORD *)(v20 + 48) = v24;
  sub_249767018(v19, (uint64_t)sel_xpcGetDevicesWithCompletion_, 0);
  sub_249767018(v20, (uint64_t)sel_xpcGetDevicesWithCompletion_, 1);
  swift_setDeallocating();
  sub_24976A6F8();
  v25 = swift_initStackObject();
  *(_OWORD *)(v25 + 16) = xmmword_249838520;
  sub_24976A6BC();
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_249838520;
  *(_QWORD *)(v26 + 32) = v13;
  *(_QWORD *)(v26 + 40) = v3;
  *(_QWORD *)(v25 + 32) = v26;
  sub_24976A6BC();
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_249838510;
  *(_QWORD *)(v27 + 32) = v6;
  *(_QWORD *)(v25 + 40) = v27;
  sub_249767018(v19, (uint64_t)sel_xpcGetIDSWithCompletion_, 0);
  sub_249767018(v25, (uint64_t)sel_xpcGetIDSWithCompletion_, 1);
  swift_setDeallocating();
  sub_24976A6F8();
  v28 = swift_initStackObject();
  *(_OWORD *)(v28 + 16) = xmmword_249838520;
  sub_24976A6BC();
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_249838520;
  *(_QWORD *)(v29 + 32) = v13;
  *(_QWORD *)(v29 + 40) = sub_24976D1D4(0, (unint64_t *)&qword_2578805F0);
  *(_QWORD *)(v28 + 32) = v29;
  sub_24976A6BC();
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_249838510;
  *(_QWORD *)(v30 + 32) = v3;
  *(_QWORD *)(v28 + 40) = v30;
  sub_249767018(v28, (uint64_t)sel_xpcMoveWithType_device_completion_, 0);
  sub_249767018(v19, (uint64_t)sel_xpcMoveWithType_device_completion_, 1);
  swift_setDeallocating();
  sub_24976A6F8();
  return v0;
}

void sub_249766A8C()
{
  sub_249766B0C();
}

uint64_t sub_249766AB0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_machServiceName);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_249766AE8()
{
  sub_249766B0C();
}

void sub_249766B0C()
{
  char *v0;
  uint64_t (*v1)(void);
  uint64_t (*v2)(void);
  const char *v3;
  const char *v4;
  uint64_t (*v5)(void);
  uint64_t (*v6)(void);
  uint64_t v7;
  const char *v8;
  const char *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  os_log_type_t v16;
  _DWORD *v17;
  uint64_t v18;
  _QWORD v19[5];
  uint8_t *v20;
  uint64_t v21;

  OUTLINED_FUNCTION_20_2();
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_error])
  {
    v5 = v2;
    v6 = v1;
    v7 = MEMORY[0x24BDAC7A8](v1);
    v19[2] = v0;
    MEMORY[0x24BDAC7A8](v7);
    OUTLINED_FUNCTION_71_0();
    sub_24980FC04(v6, (uint64_t)v19, v5);
    OUTLINED_FUNCTION_18_3();
  }
  else
  {
    v8 = v4;
    v9 = v3;
    v10 = MEMORY[0x24BCF90FC](&v0[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_delegate]);
    swift_unknownObjectRelease();
    v11 = v0;
    v12 = sub_249836AFC();
    if (v10)
    {
      v13 = sub_249836FA0();
      if (OUTLINED_FUNCTION_11_3(v13))
      {
        v14 = (uint8_t *)OUTLINED_FUNCTION_12();
        v21 = OUTLINED_FUNCTION_12();
        *(_DWORD *)v14 = 136446210;
        v20 = v14 + 4;
        OUTLINED_FUNCTION_80_0();
        v15 = OUTLINED_FUNCTION_79_0();
        OUTLINED_FUNCTION_38_0(v15);

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_249741000, v12, (os_log_type_t)v10, v9, v14, 0xCu);
        OUTLINED_FUNCTION_32_1();
        OUTLINED_FUNCTION_3();
      }
    }
    else
    {
      v16 = sub_249836FAC();
      if (OUTLINED_FUNCTION_11_3(v16))
      {
        v17 = (_DWORD *)OUTLINED_FUNCTION_12();
        v21 = OUTLINED_FUNCTION_12();
        *v17 = 136446210;
        v20 = (uint8_t *)(v17 + 1);
        OUTLINED_FUNCTION_80_0();
        v18 = OUTLINED_FUNCTION_79_0();
        OUTLINED_FUNCTION_38_0(v18);

        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_90(&dword_249741000, v12, OS_LOG_TYPE_DEFAULT, v8);
        OUTLINED_FUNCTION_32_1();
        OUTLINED_FUNCTION_3();
      }
    }

  }
  sub_249766D64();
  OUTLINED_FUNCTION_3_5();
}

uint64_t sub_249766D64()
{
  char *v0;
  void *v1;
  uint64_t result;

  v1 = *(void **)&v0[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_connection];
  objc_msgSend(v1, sel_invalidate);
  objc_msgSend(v1, sel_setExportedObject_, 0);
  result = MEMORY[0x24BCF90FC](&v0[OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_delegate]);
  if (result)
  {
    sub_249765528(v0);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_249766DE0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_249766E2C()
{
  return sub_249767928(type metadata accessor for AgentXPCConnection);
}

uint64_t sub_249766ECC()
{
  return sub_249766D64();
}

uint64_t sub_249766EEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_249765BEC();
  *a1 = result;
  return result;
}

uint64_t sub_249766F14(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF0]), sel_init);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    do
    {
      ++v4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257880600);
      objc_msgSend(v2, sel_addObject_, sub_249837624());
      swift_unknownObjectRelease();
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  v2;
  result = sub_249836F34();
  __break(1u);
  return result;
}

uint64_t sub_249767018(uint64_t result, uint64_t a2, char a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v4 = *(_QWORD *)(result + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    v8 = a3 & 1;
    do
    {
      v9 = swift_bridgeObjectRetain();
      sub_249766F14(v9);
      v10 = (void *)sub_249836F28();
      swift_bridgeObjectRelease();
      objc_msgSend(v3, sel_setClasses_forSelector_argumentIndex_ofReply_, v10, a2, v7, v8);
      swift_bridgeObjectRelease();

      ++v7;
    }
    while (v4 != v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249767104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x24BCF90FC](v0 + OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_delegate);
  if (!v2
    || (v3 = v2 + OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_delegate,
        swift_beginAccess(),
        v1 = MEMORY[0x24BCF90FC](v3),
        swift_unknownObjectRelease(),
        !v1))
  {
    sub_24976D1D4(0, (unint64_t *)&qword_2578805A8);
    NSError.init(NSOSStatusErrorDomain:debugDescription:__file:__line:)(-6714, 0xD000000000000014, 0x80000002498407A0);
    swift_willThrow();
  }
  return v1;
}

void sub_2497671EC(void *a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  void *v3;
  char v4;
  char v5;
  void *v6;

  v3 = (void *)sub_249767688(a1, (void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_249767290);
  v5 = v4;
  if ((v4 & 1) != 0)
  {
    v6 = (void *)sub_249836898();
    ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v6);
  }
  else
  {
    type metadata accessor for UniversalControlXPCEdgeRegion();
    v6 = (void *)sub_249836E98();
    ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v6, 0);
  }

  sub_24976CE00(v3, v5 & 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
  _Block_release(a2);
}

uint64_t sub_249767290@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  uint64_t v15;
  objc_super v16;
  uint64_t v17;

  result = sub_249767104();
  if (v2)
  {
    *a1 = v2;
    return result;
  }
  v7 = v6;
  ObjectType = swift_getObjectType();
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 48))(ObjectType, v7);
  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
      goto LABEL_5;
LABEL_13:
    swift_bridgeObjectRelease();
    result = swift_unknownObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
LABEL_14:
    *a2 = v15;
    return result;
  }
  v10 = sub_249837324();
  if (!v10)
    goto LABEL_13;
LABEL_5:
  v17 = MEMORY[0x24BEE4AF8];
  result = sub_2498371F8();
  if ((v10 & 0x8000000000000000) == 0)
  {
    v11 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v12 = MEMORY[0x24BCF8148](v11, v9);
      }
      else
      {
        v12 = *(_QWORD *)(v9 + 8 * v11 + 32);
        swift_retain();
      }
      ++v11;
      v13 = (objc_class *)type metadata accessor for UniversalControlXPCEdgeRegion();
      v14 = (char *)objc_allocWithZone(v13);
      *(_QWORD *)&v14[OBJC_IVAR___UniversalControlXPCEdgeRegion_box] = v12;
      v16.receiver = v14;
      v16.super_class = v13;
      objc_msgSendSuper2(&v16, sel_init);
      sub_2498371D4();
      sub_249837204();
      sub_249837210();
      sub_2498371E0();
    }
    while (v10 != v11);
    v15 = v17;
    swift_bridgeObjectRelease();
    result = swift_unknownObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void UniversalControlXPCEdgeRegion.__allocating_init(rawValue:)(uint64_t a1)
{
  sub_249769988(a1, &OBJC_IVAR___UniversalControlXPCEdgeRegion_box);
}

uint64_t sub_249767450(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_249767970();
  v7 = v6;
  sub_24983685C();
  swift_allocObject();
  sub_249748BCC(a2, a3);
  sub_249836850();
  type metadata accessor for UVC1Config();
  sub_24974BBF4(qword_2578805C0, (void (*)(uint64_t))type metadata accessor for UVC1Config);
  sub_249836844();
  ObjectType = swift_getObjectType();
  swift_retain();
  sub_2497ECFBC();
  qword_257882098 = v10;
  unk_2578820A0 = v11;
  qword_2578820A8 = v12;
  swift_release();
  sub_249748C10(a2, a3);
  swift_release();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(&v12, ObjectType, v7);
  swift_unknownObjectRelease();

  sub_249748C10(a2, a3);
  return ObjectType;
}

uint64_t sub_2497675E4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;

  sub_249767970();
  v3 = v2;
  ObjectType = swift_getObjectType();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 64))(ObjectType, v3);
  (*(void (**)(uint64_t, uint64_t))(v3 + 40))(ObjectType, v3);

  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_249767688(void *a1, void (*a2)(uint64_t *__return_ptr, void *, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;

  a2(&v5, a1, &v4);

  return v5;
}

void sub_2497676F4(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;

  v3 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_adminProxy);
  if (v3)
  {
    a2[2](a2, v3, 0);
  }
  else
  {
    sub_24976D1D4(0, (unint64_t *)&qword_2578805A8);
    v4 = NSError.init(NSOSStatusErrorDomain:debugDescription:__file:__line:)(-71168, 0xD000000000000013, 0x8000000249840850);
    v5 = MEMORY[0x24BDAC7A8](v4);
    MEMORY[0x24BDAC7A8](v5);
    sub_24980FC04(sub_24976D324, v6, sub_24976D328);
    v7 = v4;
    v8 = (void *)sub_249836898();
    ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v8);

  }
  _Block_release(a2);
}

id sub_249767868(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for AgentXPCAdminProxy();
  v3 = objc_msgSendSuper2(&v5, sel_init);

  return v3;
}

void sub_2497678D0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_24976791C()
{
  return sub_249767928((uint64_t (*)(_QWORD))type metadata accessor for AgentXPCAdminProxy);
}

id sub_249767928(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void *sub_249767970()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = MEMORY[0x24BCF90FC](v0 + OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCAdminProxy_parent);
  if (!v2
    || (v1 = (void *)v2,
        v3 = MEMORY[0x24BCF90FC](v2 + OBJC_IVAR____TtC16UniversalControlP33_22B26D9AC92D4CC25624F8FC3B914ED518AgentXPCConnection_delegate),
        v1,
        !v3)
    || (v4 = v3 + OBJC_IVAR____TtC16UniversalControl16AgentXPCListener_delegate,
        swift_beginAccess(),
        v1 = (void *)MEMORY[0x24BCF90FC](v4),
        swift_unknownObjectRelease(),
        !v1))
  {
    sub_24976D1D4(0, (unint64_t *)&qword_2578805A8);
    NSError.init(NSOSStatusErrorDomain:debugDescription:__file:__line:)(-6714, 0xD000000000000014, 0x80000002498407A0);
    swift_willThrow();
  }
  return v1;
}

void sub_249767A74(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;

  sub_249767970();
  v4 = v3;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 8))(&v10, ObjectType, v4);
  v6 = UniversalControlConfiguration.encoded()();
  v8 = v7;
  swift_release();
  swift_unknownObjectRelease();
  sub_249748BCC(v6, v8);
  v9 = (void *)sub_24983691C();
  ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v9, 0);

  sub_249748C10(v6, v8);
  sub_249748C10(v6, v8);
  _Block_release(a2);
}

void sub_249767BA0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  id v8;

  if (a2 >> 60 != 15)
  {
    v6 = (void *)sub_24983691C();
    if (a3)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = 0;
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v7 = sub_249836898();
LABEL_6:
  v8 = (id)v7;
  (*(void (**)(uint64_t, void *))(a4 + 16))(a4, v6);

}

void sub_249767C20(uint64_t a1, unint64_t a2, void *a3, void (**a4)(_QWORD, _QWORD))
{
  id v7;
  uint64_t v8;
  char v9;
  void *v10;
  void *v11;

  v7 = a3;
  sub_249748BCC(a1, a2);
  v8 = sub_249767450(v7, a1, a2);
  if ((v9 & 1) != 0)
  {
    v10 = (void *)v8;
    v11 = (void *)sub_249836898();
    ((void (**)(_QWORD, void *))a4)[2](a4, v11);

    sub_24976CC14(v10, 1);
  }
  else
  {
    a4[2](a4, 0);
  }
  _Block_release(a4);
}

void sub_249767D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_249836898();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_249767D98(void *a1, void (**a2)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  id v8;
  void *v9;

  v3 = (void *)sub_2497675E4(a1);
  v5 = v4;
  v7 = v6;
  if ((v6 & 1) != 0)
  {
    type metadata accessor for UniversalControlXPCDevice();
    v8 = (id)sub_249836E98();
    v9 = (void *)sub_249836898();
    ((void (**)(_QWORD, _QWORD, id, void *))a2)[2](a2, 0, v8, v9);
  }
  else
  {
    type metadata accessor for UniversalControlXPCDevice();
    v8 = v3;
    swift_bridgeObjectRetain();
    v9 = (void *)sub_249836E98();
    ((void (**)(_QWORD, id, void *, _QWORD))a2)[2](a2, v8, v9, 0);
    swift_bridgeObjectRelease();
  }

  sub_24976CBE4(v3, v5, v7 & 1);
  _Block_release(a2);
}

uint64_t sub_249767E88@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  _QWORD *v19;
  uint64_t v20;

  v5 = sub_249836A18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (uint64_t)sub_249767970();
  if (v2)
  {
    *a1 = v2;
  }
  else
  {
    v11 = result;
    v12 = v10;
    ObjectType = swift_getObjectType();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(ObjectType, v12);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v18[2] = v11;
      v19 = a2;
      v20 = MEMORY[0x24BEE4AF8];
      sub_2498371F8();
      v18[1] = v14;
      v16 = v14 + 47;
      do
      {
        sub_2498369E8();
        sub_2498369C4();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        sub_2498371D4();
        sub_249837204();
        sub_249837210();
        sub_2498371E0();
        v16 += 16;
        --v15;
      }
      while (v15);
      v17 = v20;
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRelease();
      a2 = v19;
    }
    else
    {
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRelease();
      v17 = MEMORY[0x24BEE4AF8];
    }
    *a2 = v17;
  }
  return result;
}

void sub_249768040(void *a1, void (**a2)(_QWORD, _QWORD, _QWORD), void (*a3)(uint64_t *__return_ptr, void *, uint64_t *))
{
  void *v4;
  char v5;
  char v6;
  void *v7;
  void *v8;

  v4 = (void *)sub_249767688(a1, a3);
  v6 = v5;
  OUTLINED_FUNCTION_61_0((uint64_t)v4, &qword_2578805B0);
  if ((v6 & 1) != 0)
  {
    v7 = (void *)sub_249836E98();
    v8 = (void *)sub_249836898();
    ((void (**)(_QWORD, void *, void *))a2)[2](a2, v7, v8);

  }
  else
  {
    v8 = (void *)sub_249836E98();
    ((void (**)(_QWORD, void *, _QWORD))a2)[2](a2, v8, 0);
  }

  sub_24976CE00(v4, v6 & 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
  _Block_release(a2);
}

uint64_t sub_249768114@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  _QWORD *v19;
  uint64_t v20;

  v5 = sub_249836A18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (uint64_t)sub_249767970();
  if (v2)
  {
    *a1 = v2;
  }
  else
  {
    v11 = result;
    v12 = v10;
    ObjectType = swift_getObjectType();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 56))(ObjectType, v12);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v18[2] = v11;
      v19 = a2;
      v20 = MEMORY[0x24BEE4AF8];
      sub_2498371F8();
      v18[1] = v14;
      v16 = v14 + 47;
      do
      {
        sub_2498369E8();
        sub_2498369C4();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        sub_2498371D4();
        sub_249837204();
        sub_249837210();
        sub_2498371E0();
        v16 += 16;
        --v15;
      }
      while (v15);
      v17 = v20;
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRelease();
      a2 = v19;
    }
    else
    {
      swift_bridgeObjectRelease();
      result = swift_unknownObjectRelease();
      v17 = MEMORY[0x24BEE4AF8];
    }
    *a2 = v17;
  }
  return result;
}

void sub_2497682CC(int a1, int a2, void *a3)
{
  void (*v3)(uint64_t *__return_ptr, void *, uint64_t *);
  void *v4;
  void *v5;
  id v6;

  v5 = OUTLINED_FUNCTION_84(a1, a2, a3);
  _Block_copy(v5);
  v6 = v4;
  sub_249768040(v6, (void (**)(_QWORD, _QWORD, _QWORD))v5, v3);
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_37_0(v6);
}

uint64_t sub_249768310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t ObjectType;
  _QWORD v19[2];

  v19[0] = a3;
  v4 = sub_249836A18();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v19 - v9;
  sub_249767970();
  v12 = v11;
  sub_2498369D0();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v13 = sub_2498369F4();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 96))(v13, v15, a2, v19[0], ObjectType, v12);
  return swift_unknownObjectRelease();
}

uint64_t sub_249768484(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  sub_249767970();
  v5 = v4;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 104))(a1, a2, ObjectType, v5);
  return swift_unknownObjectRelease();
}

uint64_t sub_249768578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t ObjectType;
  _QWORD v19[2];

  v19[0] = a3;
  v4 = sub_249836A18();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v19 - v9;
  sub_249767970();
  v12 = v11;
  sub_2498369D0();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v13 = sub_2498369F4();
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 112))(v13, v15, a2, v19[0], ObjectType, v12);
  return swift_unknownObjectRelease();
}

uint64_t sub_2497686EC(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(id, uint64_t, uint64_t))
{
  void *v11;
  uint64_t v12;
  id v13;
  id v14;

  v11 = _Block_copy(aBlock);
  v12 = OUTLINED_FUNCTION_18_1();
  *(_QWORD *)(v12 + 16) = v11;
  v13 = a3;
  v14 = a1;
  a7(v13, a6, v12);

  return swift_release();
}

uint64_t sub_249768778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  sub_249767970();
  v1 = v0;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 120))(ObjectType, v1);
  return swift_unknownObjectRelease();
}

void sub_249768814(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  unint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t);
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v6 = sub_249836A18();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v13 = sub_249767970();
  v32 = v14;
  v33 = a2;
  if (a1 >> 62)
  {
    v30 = v13;
    swift_bridgeObjectRetain();
    v15 = sub_249837324();
    swift_bridgeObjectRelease();
    v13 = v30;
  }
  else
  {
    v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v16 = MEMORY[0x24BEE4AF8];
  v34 = a3;
  if (!v15)
  {
LABEL_14:
    ObjectType = swift_getObjectType();
    v27 = swift_allocObject();
    v28 = v32;
    *(_QWORD *)(v27 + 16) = v33;
    *(_QWORD *)(v27 + 24) = v34;
    v29 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v28 + 136);
    swift_retain();
    v29(v16, sub_24976B894, v27, ObjectType, v28);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  v31 = v13;
  v39 = MEMORY[0x24BEE4AF8];
  sub_24974E278();
  if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = 0;
    v35 = a1 & 0xC000000000000001;
    v36 = v15;
    v37 = v7;
    v38 = a1;
    do
    {
      if (v35)
        v18 = (id)MEMORY[0x24BCF8148](v17, a1);
      else
        v18 = *(id *)(a1 + 8 * v17 + 32);
      v19 = v18;
      sub_2498369D0();
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
      v20 = sub_2498369F4();
      v22 = v21;
      v23 = *(void (**)(char *, uint64_t))(v7 + 8);
      v23(v10, v6);
      v23(v12, v6);

      v16 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24974E278();
        v16 = v39;
      }
      v24 = *(_QWORD *)(v16 + 16);
      if (v24 >= *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_24974E278();
        v16 = v39;
      }
      *(_QWORD *)(v16 + 16) = v24 + 1;
      v25 = v16 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v20;
      ++v17;
      *(_QWORD *)(v25 + 40) = v22;
      v7 = v37;
      a1 = v38;
    }
    while (v36 != v17);
    goto LABEL_14;
  }
  __break(1u);
}

uint64_t sub_249768B54(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;

  sub_24975EADC(a1);
  sub_24977DF5C(v4);
  a3();
  return swift_bridgeObjectRelease();
}

void sub_249768C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  sub_24976D1D4(0, &qword_2578805B0);
  sub_24976CCC0(&qword_2578805B8, &qword_2578805B0);
  v5 = (void *)sub_249836C88();
  if (a2)
    v6 = sub_249836898();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

uint64_t sub_249768D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;

  v8 = sub_249836A18();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v35 - v13;
  v15 = sub_249767970();
  v42 = v16;
  v43 = v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v19 = MEMORY[0x24BEE4AF8];
    goto LABEL_24;
  }
  v37 = a2;
  v38 = v9;
  v39 = v8;
  v40 = a3;
  v41 = a4;
  v36 = swift_bridgeObjectRetain();
  v18 = (uint64_t *)(v36 + 40);
  v19 = MEMORY[0x24BEE4AF8];
  do
  {
    v20 = *(v18 - 1);
    v21 = *v18;
    v22 = v20 == 0x7265746E696F70 && v21 == 0xE700000000000000;
    if (v22 || (sub_2498375C4() & 1) != 0)
    {
      v23 = 1;
    }
    else if (v20 == 0x6472616F6279656BLL && v21 == 0xE800000000000000)
    {
      v23 = 0;
    }
    else
    {
      v23 = 0;
      if ((sub_2498375C4() & 1) == 0)
        goto LABEL_14;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_249752FB0(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
      v19 = v27;
    }
    v25 = *(_QWORD *)(v19 + 16);
    v24 = *(_QWORD *)(v19 + 24);
    if (v25 >= v24 >> 1)
    {
      sub_249752FB0(v24 > 1, v25 + 1, 1, v19);
      v19 = v28;
    }
    *(_QWORD *)(v19 + 16) = v25 + 1;
    *(_BYTE *)(v19 + v25 + 32) = v23;
LABEL_14:
    v18 += 2;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  a3 = v40;
  a4 = v41;
  v9 = v38;
  v8 = v39;
LABEL_24:
  sub_2498369D0();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  v29 = sub_2498369F4();
  v31 = v30;
  v32 = *(void (**)(char *, uint64_t))(v9 + 8);
  v32(v12, v8);
  v32(v14, v8);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 128))(v19, v29, v31, a3, a4, ObjectType);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2497690A0(uint64_t a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  char v6;

  sub_249767970();
  v4 = v3;
  ObjectType = swift_getObjectType();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 72))(ObjectType, v4);
  a2[2](a2, v6 & 1, 0);
  swift_unknownObjectRelease();
  _Block_release(a2);
}

void sub_24976912C(int a1, int a2, void *a3)
{
  void (*v3)(void);
  void *v4;
  void *v5;
  id v6;

  v5 = OUTLINED_FUNCTION_84(a1, a2, a3);
  _Block_copy(v5);
  v6 = v4;
  v3();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_37_0(v6);
}

void sub_24976916C(char a1, uint64_t a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  sub_249767970();
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 + 80))(a1 & 1, ObjectType, v6);
  a3[2](a3, 0);
  swift_unknownObjectRelease();
  _Block_release(a3);
}

uint64_t sub_249769260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;

  sub_249767970();
  v13 = v12;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 144))(a1, a2, a3, a4, a5, a6, ObjectType, v13);
  return swift_unknownObjectRelease();
}

uint64_t sub_249769450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  sub_249767970();
  v7 = v6;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 152))(a1, a2, a3, ObjectType, v7);
  return swift_unknownObjectRelease();
}

uint64_t sub_2497695BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_2497695D4(void *a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  id v5;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v10 = a2(0);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_249836D54();
  objc_opt_self();
  if (OUTLINED_FUNCTION_108())
  {
    OUTLINED_FUNCTION_75_0();
    v5 = a1;
    sub_249836FD0();
    OUTLINED_FUNCTION_89();

    return v10;
  }
  sub_24976D1D4(0, &qword_2578806B0);
  v7 = (void *)sub_249837048();
  OUTLINED_FUNCTION_89();
  if (v7)
  {
    sub_2498367C0();
    OUTLINED_FUNCTION_91();
    sub_2498367B4();
    v8 = v7;
    v9 = sub_249836940();

    OUTLINED_FUNCTION_75_0();
    sub_2498367A8();
    OUTLINED_FUNCTION_17_0();

    OUTLINED_FUNCTION_96(v9);
    return v10;
  }

  return 0;
}

uint64_t sub_249769794(void *a1, uint64_t a2, void (*a3)(_QWORD), uint64_t *a4)
{
  id v6;
  uint64_t v8;
  void *v9;
  void *v10;

  a3(0);
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_249836D54();
  objc_opt_self();
  if (OUTLINED_FUNCTION_108())
  {
    OUTLINED_FUNCTION_58_0();
    v6 = a1;
    sub_249836FC4();

    return OUTLINED_FUNCTION_16_0();
  }
  else
  {
    sub_249836808();
    OUTLINED_FUNCTION_91();
    sub_2498367FC();
    OUTLINED_FUNCTION_58_0();
    v8 = sub_2498367F0();
    v9 = (void *)sub_24983691C();
    v10 = (void *)sub_249836D18();
    OUTLINED_FUNCTION_16_0();
    objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

    OUTLINED_FUNCTION_96(v8);
    return OUTLINED_FUNCTION_17_0();
  }
}

uint64_t sub_249769918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_2497695BC(a1, *(_QWORD *)(a2 + 16), a3);
  return __swift_storeEnumTagSinglePayload(a3, 0, 1, a2);
}

uint64_t sub_249769954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t static UniversalControlXPCDevice.supportsSecureCoding.getter()
{
  return 1;
}

void UniversalControlXPCDevice.__allocating_init(rawValue:)(uint64_t a1)
{
  sub_249769988(a1, &OBJC_IVAR___UniversalControlXPCDevice_box);
}

void sub_249769988(uint64_t a1, _QWORD *a2)
{
  objc_class *v2;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v12;

  v5 = (char *)OUTLINED_FUNCTION_82();
  *(_QWORD *)&v5[*a2] = a1;
  v12.receiver = v5;
  v12.super_class = v2;
  OUTLINED_FUNCTION_66_0((uint64_t)v5, sel_init, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_12_2();
}

void UniversalControlXPCDevice.init(rawValue:)(uint64_t a1)
{
  sub_249769C0C(a1, &OBJC_IVAR___UniversalControlXPCDevice_box);
}

void UniversalControlXPCDevice.__allocating_init(coder:)()
{
  OUTLINED_FUNCTION_82();
  UniversalControlXPCDevice.init(coder:)();
  OUTLINED_FUNCTION_27();
}

void UniversalControlXPCDevice.init(coder:)()
{
  void *v0;
  void *v1;
  objc_class *v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  v2 = (objc_class *)OUTLINED_FUNCTION_52_0();
  v3 = v0;
  v4 = v1;
  v5 = sub_2497695D4(v4, type metadata accessor for UniversalControlDevice, &qword_2578806C0);
  if (v5)
  {
    *(_QWORD *)&v3[OBJC_IVAR___UniversalControlXPCDevice_box] = v5;

    v13.receiver = v3;
    v13.super_class = v2;
    OUTLINED_FUNCTION_66_0(v6, sel_init, v7, v8, v9, v10, v11, v12, v13);

  }
  else
  {

    OUTLINED_FUNCTION_63_0();
  }
  OUTLINED_FUNCTION_12_2();
}

Swift::Void __swiftcall UniversalControlXPCDevice.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_104(v1, v2, (void (*)(_QWORD))type metadata accessor for UniversalControlDevice, &qword_2578806C0);
  OUTLINED_FUNCTION_17_2();
}

void UniversalControlXPCDevice.init()()
{
  OUTLINED_FUNCTION_110();
  __break(1u);
}

void sub_249769BA0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  UniversalControlXPCDevice.__allocating_init(rawValue:)(*a1);
  *a2 = v3;
}

uint64_t sub_249769BC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = UniversalControlXPCDevice.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t static UniversalControlXPCEdgeRegion.supportsSecureCoding.getter()
{
  return 1;
}

void UniversalControlXPCEdgeRegion.init(rawValue:)(uint64_t a1)
{
  sub_249769C0C(a1, &OBJC_IVAR___UniversalControlXPCEdgeRegion_box);
}

void sub_249769C0C(uint64_t a1, _QWORD *a2)
{
  char *v2;
  uint64_t v3;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v12;

  v5 = (objc_class *)OUTLINED_FUNCTION_52_0();
  *(_QWORD *)&v2[*a2] = v3;
  v12.receiver = v2;
  v12.super_class = v5;
  OUTLINED_FUNCTION_66_0((uint64_t)v5, sel_init, v6, v7, v8, v9, v10, v11, v12);
  OUTLINED_FUNCTION_12_2();
}

void UniversalControlXPCEdgeRegion.__allocating_init(coder:)()
{
  OUTLINED_FUNCTION_82();
  UniversalControlXPCEdgeRegion.init(coder:)();
  OUTLINED_FUNCTION_27();
}

void UniversalControlXPCEdgeRegion.init(coder:)()
{
  void *v0;
  void *v1;
  objc_class *v2;
  char *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  v2 = (objc_class *)OUTLINED_FUNCTION_52_0();
  v3 = v0;
  v4 = v1;
  v5 = sub_2497695D4(v4, (uint64_t (*)(_QWORD))type metadata accessor for UniversalControlEdgeRegion, &qword_2578806A0);
  if (v5)
  {
    *(_QWORD *)&v3[OBJC_IVAR___UniversalControlXPCEdgeRegion_box] = v5;

    v13.receiver = v3;
    v13.super_class = v2;
    OUTLINED_FUNCTION_66_0(v6, sel_init, v7, v8, v9, v10, v11, v12, v13);

  }
  else
  {

    OUTLINED_FUNCTION_63_0();
  }
  OUTLINED_FUNCTION_12_2();
}

Swift::Void __swiftcall UniversalControlXPCEdgeRegion.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_104(v1, v2, (void (*)(_QWORD))type metadata accessor for UniversalControlEdgeRegion, &qword_2578806A0);
  OUTLINED_FUNCTION_17_2();
}

id UniversalControlXPCEdgeRegion.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_82(), sel_init);
}

void UniversalControlXPCEdgeRegion.init()()
{
  OUTLINED_FUNCTION_110();
  __break(1u);
}

id _s16UniversalControl16AgentXPCListenerCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_249769E64(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  UniversalControlXPCEdgeRegion.__allocating_init(rawValue:)(*a1);
  *a2 = v3;
}

uint64_t sub_249769E8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = UniversalControlXPCEdgeRegion.rawValue.getter();
  *a1 = result;
  return result;
}

void sub_249769EB4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24975E0A0();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_24976BA88(v5);
  *a1 = v2;
}

uint64_t sub_249769F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  unint64_t v18;
  uint64_t v20;
  int64_t v21;

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v4 = *(_QWORD *)(a1 + 56);
    v20 = a1 + 56;
    v5 = 1 << *(_BYTE *)(a1 + 32);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v21 = (unint64_t)(v5 + 63) >> 6;
    if ((v6 & v4) != 0)
    {
      v7 = __clz(__rbit64(v6 & v4));
      goto LABEL_27;
    }
    if ((unint64_t)(v5 + 63) >> 6 > 1)
    {
      v8 = *(_QWORD *)(a1 + 64);
      v9 = 1;
      if (v8)
        goto LABEL_26;
      v9 = 2;
      OUTLINED_FUNCTION_103();
      if (v10 == v11)
        return 1;
      OUTLINED_FUNCTION_102();
      if (v8)
        goto LABEL_26;
      v9 = v12 + 2;
      OUTLINED_FUNCTION_103();
      if (v10 == v11)
        return 1;
      OUTLINED_FUNCTION_102();
      if (v8)
        goto LABEL_26;
      v9 = v13 + 3;
      OUTLINED_FUNCTION_103();
      if (v10 == v11)
        return 1;
      OUTLINED_FUNCTION_102();
      if (v8)
      {
LABEL_26:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_27:
        v17 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v7);
        sub_249837690();
        sub_2497CEBD0(v17);
        sub_249836D84();
        OUTLINED_FUNCTION_1();
        v18 = sub_2498376E4() & ~(-1 << *(_BYTE *)(a2 + 32));
        if (((*(_QWORD *)(a2 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
          __asm { BR              X9 }
        return 0;
      }
      v15 = v14 + 4;
      if (v15 < v21)
      {
        v8 = *(_QWORD *)(v20 + 8 * v15);
        if (!v8)
        {
          while (1)
          {
            v9 = v15 + 1;
            if (__OFADD__(v15, 1))
            {
              __break(1u);
              JUMPOUT(0x24976A2B0);
            }
            OUTLINED_FUNCTION_103();
            if (v10 == v11)
              return 1;
            OUTLINED_FUNCTION_102();
            v15 = v16 + 1;
            if (v8)
              goto LABEL_26;
          }
        }
        v9 = v15;
        goto LABEL_26;
      }
    }
  }
  return 1;
}

uint64_t sub_24976A2E8(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t i;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  char __s2;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  __int128 __s1[5];
  uint64_t v61;

  v61 = *MEMORY[0x24BDAC8D0];
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v2 = 0;
    v28 = a1;
    v29 = a1 + 56;
    v3 = 1 << *(_BYTE *)(a1 + 32);
    if (v3 < 64)
      v4 = ~(-1 << v3);
    else
      v4 = -1;
    v5 = v4 & *(_QWORD *)(a1 + 56);
    v30 = (unint64_t)(v3 + 63) >> 6;
    v43 = a2 + 56;
    if (!v5)
      goto LABEL_8;
LABEL_7:
    v31 = (v5 - 1) & v5;
    v32 = v2;
    for (i = __clz(__rbit64(v5)) | (v2 << 6); ; i = __clz(__rbit64(v8)) + (v9 << 6))
    {
      v11 = (char *)(*(_QWORD *)(a1 + 48) + 16 * i);
      v12 = *v11;
      v13 = v11[1];
      v14 = v11[2];
      v15 = v11[3];
      v16 = v11[4];
      v17 = v11[5];
      v18 = v11[6];
      v19 = v11[7];
      v20 = v11[8];
      v21 = v11[9];
      v37 = v11[11];
      v38 = v11[10];
      v35 = v11[13];
      v36 = v11[12];
      v33 = v11[15];
      v34 = v11[14];
      sub_249837690();
      v41 = v13;
      v42 = v12;
      __s2 = v12;
      v45 = v13;
      v40 = v14;
      v46 = v14;
      v47 = v15;
      v48 = v16;
      v49 = v17;
      v50 = v18;
      v51 = v19;
      v52 = v20;
      v53 = v21;
      v54 = v38;
      v55 = v37;
      v56 = v36;
      v57 = v35;
      v58 = v34;
      v59 = v33;
      sub_24983769C();
      v22 = sub_2498376E4();
      v23 = -1 << *(_BYTE *)(a2 + 32);
      v24 = v22 & ~v23;
      if (((*(_QWORD *)(v43 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
        return 0;
      v25 = ~v23;
      v26 = *(_QWORD *)(a2 + 48);
      while (1)
      {
        __s1[0] = *(_OWORD *)(v26 + 16 * v24);
        __s2 = v42;
        v45 = v41;
        v46 = v40;
        v47 = v15;
        v48 = v16;
        v49 = v17;
        v50 = v18;
        v51 = v19;
        v52 = v20;
        v53 = v21;
        v54 = v38;
        v55 = v37;
        v56 = v36;
        v57 = v35;
        v58 = v34;
        v59 = v33;
        if (!memcmp(__s1, &__s2, 0x10uLL))
          break;
        v24 = (v24 + 1) & v25;
        if (((*(_QWORD *)(v43 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
          return 0;
      }
      a1 = v28;
      v5 = v31;
      v2 = v32;
      if (v31)
        goto LABEL_7;
LABEL_8:
      v7 = v2 + 1;
      if (__OFADD__(v2, 1))
        break;
      if (v7 >= v30)
        return 1;
      v8 = *(_QWORD *)(v29 + 8 * v7);
      v9 = v2 + 1;
      if (!v8)
      {
        v9 = v2 + 2;
        if (v2 + 2 >= v30)
          return 1;
        v8 = *(_QWORD *)(v29 + 8 * v9);
        if (!v8)
        {
          v9 = v2 + 3;
          if (v2 + 3 >= v30)
            return 1;
          v8 = *(_QWORD *)(v29 + 8 * v9);
          if (!v8)
          {
            v9 = v2 + 4;
            if (v2 + 4 >= v30)
              return 1;
            v8 = *(_QWORD *)(v29 + 8 * v9);
            if (!v8)
            {
              v10 = v2 + 5;
              if (v2 + 5 >= v30)
                return 1;
              v8 = *(_QWORD *)(v29 + 8 * v10);
              if (!v8)
              {
                while (1)
                {
                  v9 = v10 + 1;
                  if (__OFADD__(v10, 1))
                    break;
                  if (v9 >= v30)
                    return 1;
                  v8 = *(_QWORD *)(v29 + 8 * v9);
                  ++v10;
                  if (v8)
                    goto LABEL_23;
                }
LABEL_34:
                __break(1u);
              }
              v9 = v2 + 5;
            }
          }
        }
      }
LABEL_23:
      v31 = (v8 - 1) & v8;
      v32 = v9;
    }
    __break(1u);
    goto LABEL_34;
  }
  return 0;
}

uint64_t sub_24976A6BC()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880600);
  if (dynamic_cast_existential_0_class_conditional(v0))
    return __swift_instantiateConcreteTypeFromMangledName(&qword_257880610);
  else
    return __swift_instantiateConcreteTypeFromMangledName(&qword_257880608);
}

uint64_t sub_24976A6F8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578805F8);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_24976A748(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_24976A814(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_24974BC28((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_24974BC28((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    OUTLINED_FUNCTION_73_0();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_24976A814(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_24976A968((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_2498370D8();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_24976AA2C(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_2498371C8();
    if (!v8)
    {
      result = sub_249837300();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_24976A968(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_249837360();
  __break(1u);
  return result;
}

uint64_t sub_24976AA2C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_24976AAC0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_24976AC30(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_24976AC30((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24976AAC0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_249836DCC();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  v3 = sub_24980CE74(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_249837174();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_249837360();
  __break(1u);
LABEL_14:
  result = sub_249837300();
  __break(1u);
  return result;
}

char *sub_24976AC30(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578806D8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_24976ADC8(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24976AD04(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_24976AD04(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_249837360();
  __break(1u);
  return result;
}

char *sub_24976ADC8(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_249837360();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_24976AE50()
{
  return type metadata accessor for AgentXPCProxy(0);
}

uint64_t type metadata accessor for AgentXPCProxy(uint64_t a1)
{
  return sub_24976B000(a1, (uint64_t *)&unk_257880340);
}

uint64_t sub_24976AE6C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249836B14();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcConfiguration.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcConfiguration.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcConnectedDevices.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcDevices.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcEdges.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcIDS.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcLocalDevice.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcAutomaticallyReconnect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcAutomaticallyReconnect.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcAutomaticallyReconnect.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcConnect(to:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 96))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcDiagnose(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcDisconnect(from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 112))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcDisconnect()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcMove(focus:to:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 128))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcSynchronize(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 136))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcTakeClientAssertion(_:assertionID:deviceID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 144))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcReleaseClientAssertion(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 152))();
}

uint64_t dispatch thunk of AgentXPCDelegate.xpcConnectionCanceled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t sub_24976AFE4()
{
  return type metadata accessor for AgentXPCListener(0);
}

uint64_t type metadata accessor for AgentXPCListener(uint64_t a1)
{
  return sub_24976B000(a1, (uint64_t *)&unk_2578803D8);
}

uint64_t sub_24976B000(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24976B030()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249836B14();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_24976B0DC()
{
  return type metadata accessor for AgentXPCConnection(0);
}

uint64_t sub_24976B0E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249836B14();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for AgentXPCAdminProxy()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UniversalControlXPCDevice()
{
  return objc_opt_self();
}

uint64_t method lookup function for UniversalControlXPCDevice()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for UniversalControlXPCEdgeRegion()
{
  return objc_opt_self();
}

uint64_t method lookup function for UniversalControlXPCEdgeRegion()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniversalControlXPCEdgeRegion.__allocating_init(rawValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UniversalControlXPCEdgeRegion.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_24976B208()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24976B210()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24976B27C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_24976B2EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_24976B2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_24976B32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_24976B35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_24976B38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_24976B3BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_18;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return __swift_getEnumTagSinglePayload(a1, v6, v4);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return (v6 + v12 + 1);
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_24976B46C + 4 * byte_249839530[(v8 - 1)]))();
}

void sub_24976B4B8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      v14 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v15 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X10 }
}

uint64_t type metadata accessor for UniversalControlXPCBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UniversalControlXPCBox);
}

uint64_t initializeBufferWithCopyOfBuffer for AgentXPCProxy.AdminProxy(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_24976B6B0(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_24976B6B0(id result, char a2)
{
  if (a2 == 1)
    return result;
  if (!a2)
    return (id)swift_unknownObjectRetain();
  return result;
}

void destroy for AgentXPCProxy.AdminProxy(uint64_t a1)
{
  sub_24976B6DC(*(void **)a1, *(_BYTE *)(a1 + 8));
}

void sub_24976B6DC(void *a1, char a2)
{
  if (a2 == 1)
  {

  }
  else if (!a2)
  {
    swift_unknownObjectRelease();
  }
}

uint64_t assignWithCopy for AgentXPCProxy.AdminProxy(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_24976B6B0(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_24976B6DC(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for AgentXPCProxy.AdminProxy(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_24976B6DC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AgentXPCProxy.AdminProxy(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AgentXPCProxy.AdminProxy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_24976B81C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_24976B834(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AgentXPCProxy.AdminProxy()
{
  return &type metadata for AgentXPCProxy.AdminProxy;
}

uint64_t sub_24976B85C()
{
  return MEMORY[0x24BEE0948];
}

void sub_24976B868(uint64_t a1)
{
  uint64_t v1;

  sub_249767D4C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_24976B870()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_81_0();
  return swift_deallocObject();
}

void sub_24976B88C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_249768C50(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_24976B894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_249768B54(a1, a2, *(void (**)(void))(v2 + 16));
}

double sub_24976B89C@<D0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  char v6;
  double result;
  uint64_t v8;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_2497F2594();
  v6 = v5;
  OUTLINED_FUNCTION_78();
  if ((v6 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257880690);
    sub_249837270();
    OUTLINED_FUNCTION_53();
    sub_24974BBA8((_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v4), a1);
    sub_249837288();
    *v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_24976B9B8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = v1;
  v3 = sub_2497F25D8(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v1;
  *v1 = 0x8000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDF0);
  sub_249837270();
  v6 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v5);
  type metadata accessor for AgentXPCConnection(0);
  sub_249837288();
  *v2 = v8;
  swift_bridgeObjectRelease();
  return v6;
}

void sub_24976BA88(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint8x8_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  __int16 v32;
  char *v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  __int16 v58;
  __int128 *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 *v62;
  __int128 v63;
  uint64_t v64;
  _BYTE *v65;
  char *v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 *v90;
  __int128 v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  char *v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  BOOL v118;
  uint64_t v119;
  char v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  BOOL v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  unint64_t v141;
  char *v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _BYTE *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  int v166;
  char v167;
  uint8x8_t v168;
  char v169;
  char v170;
  char v171;
  char v172;
  char v173;
  char v174;
  char v175;
  char v176;
  char v177;
  char v178;
  char v179;
  char v180;
  char v181;
  char v182;
  char v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  __int128 __s2;
  __int32 __s1;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  char v202;
  char v203;
  char v204;
  char v205;
  char v206;
  char v207;
  char v208;
  uint64_t v209;

  v209 = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  v4 = sub_249837534();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_24976C448(0, v3, 1, a1);
      return;
    }
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  v163 = v1;
  v155 = v4;
  sub_24974CFA0(v3 / 2);
  v153 = a1;
  v154 = v6;
  v162 = v7;
  if (v3 > 0)
  {
    v8 = 0;
    v9 = *a1;
    v151 = *a1 - 16;
    v152 = *a1 + 47;
    v150 = *a1 - 8;
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v160 = v3;
    v190 = *a1;
    while (1)
    {
      v11 = v8;
      v12 = v8 + 1;
      v13 = v163;
      v159 = v8;
      if (v8 + 1 < v3)
      {
        v156 = v10;
        v14 = v9 + 16 * v12;
        v15 = *(_BYTE *)(v14 + 4);
        v16 = *(_BYTE *)(v14 + 5);
        v17 = *(_BYTE *)(v14 + 6);
        v18 = *(_BYTE *)(v14 + 7);
        v19 = *(_BYTE *)(v14 + 8);
        v20 = *(_BYTE *)(v14 + 9);
        v21 = *(_BYTE *)(v14 + 10);
        v22 = *(_BYTE *)(v14 + 11);
        v23 = *(_BYTE *)(v14 + 12);
        v24 = *(_BYTE *)(v14 + 13);
        v25 = *(_BYTE *)(v14 + 14);
        v26 = *(_BYTE *)(v14 + 15);
        v5.i32[0] = *(_DWORD *)v14;
        v168 = v5;
        __s1 = *(_DWORD *)v14;
        v171 = v15;
        v174 = v16;
        v197 = v15;
        v198 = v16;
        v176 = v17;
        v179 = v18;
        v199 = v17;
        v200 = v18;
        v182 = v19;
        v185 = v20;
        v201 = v19;
        v202 = v20;
        v188 = v21;
        v203 = v21;
        v191 = v22;
        v204 = v22;
        v27 = v23;
        v205 = v23;
        v28 = v24;
        v206 = v24;
        v29 = v25;
        v207 = v25;
        v30 = v26;
        v208 = v26;
        __s2 = *(_OWORD *)(v9 + 16 * v11);
        v166 = memcmp(&__s1, &__s2, 0x10uLL);
        v12 = v11 + 2;
        if (v11 + 2 < v3)
        {
          v31 = *(_BYTE *)(v14 + 2);
          v32 = vmovl_u8(v168).i16[3];
          v33 = (char *)(v152 + 16 * v11);
          v34 = v30;
          v35 = v28;
          v36 = v27;
          v37 = v191;
          v38 = v188;
          v39 = v182;
          v40 = v185;
          v42 = v176;
          v41 = v179;
          v44 = v171;
          v43 = v174;
          while (1)
          {
            v186 = v29;
            v192 = v12;
            v45 = *(v33 - 13);
            v46 = *(v33 - 12);
            v47 = *(v33 - 11);
            v48 = *(v33 - 10);
            v49 = *(v33 - 9);
            v50 = *(v33 - 8);
            v51 = *(v33 - 7);
            v52 = *(v33 - 6);
            v53 = *(v33 - 5);
            v54 = *(v33 - 4);
            v55 = *(v33 - 3);
            v56 = *(v33 - 2);
            v29 = *(v33 - 1);
            v57 = *v33;
            v58 = *(_WORD *)(v33 - 31);
            LOWORD(__s1) = *(_WORD *)(v33 - 15);
            v180 = v46;
            v183 = v45;
            BYTE2(__s1) = v45;
            HIBYTE(__s1) = v46;
            v177 = v47;
            v197 = v47;
            v198 = v48;
            v172 = v49;
            v199 = v49;
            v169 = v50;
            v200 = v50;
            v201 = v51;
            v202 = v52;
            v203 = v53;
            v204 = v54;
            v205 = v55;
            v206 = v56;
            v207 = v29;
            v208 = v57;
            LOWORD(__s2) = v58;
            BYTE2(__s2) = v31;
            BYTE3(__s2) = v32;
            BYTE4(__s2) = v44;
            BYTE5(__s2) = v43;
            BYTE6(__s2) = v42;
            BYTE7(__s2) = v41;
            BYTE8(__s2) = v39;
            BYTE9(__s2) = v40;
            BYTE10(__s2) = v38;
            BYTE11(__s2) = v37;
            BYTE12(__s2) = v36;
            BYTE13(__s2) = v35;
            BYTE14(__s2) = v186;
            HIBYTE(__s2) = v34;
            if ((memcmp(&__s1, &__s2, 0x10uLL) ^ v166) < 0)
              break;
            v33 += 16;
            v34 = v57;
            v35 = v56;
            v36 = v55;
            v37 = v54;
            v38 = v53;
            v40 = v52;
            v39 = v51;
            v12 = v192 + 1;
            v41 = v169;
            v42 = v172;
            v43 = v48;
            v44 = v177;
            LOBYTE(v32) = v180;
            v31 = v183;
            v3 = v160;
            if (v192 + 1 >= v160)
            {
              v12 = v160;
              v13 = v163;
              goto LABEL_11;
            }
          }
          v13 = v163;
          v3 = v160;
          v12 = v192;
LABEL_11:
          v11 = v159;
        }
        v10 = v156;
        v9 = v190;
        if (v166 < 0)
        {
          if (v12 < v11)
            goto LABEL_133;
          if (v11 < v12)
          {
            v59 = (__int128 *)(v151 + 16 * v12);
            v60 = v12;
            v61 = v11;
            v62 = (__int128 *)(v190 + 16 * v11);
            do
            {
              if (v61 != --v60)
              {
                if (!v190)
                  goto LABEL_139;
                v63 = *v62;
                *v62 = *v59;
                *v59 = v63;
              }
              ++v61;
              --v59;
              ++v62;
            }
            while (v61 < v60);
          }
        }
      }
      if (v12 < v3)
      {
        if (__OFSUB__(v12, v11))
          goto LABEL_130;
        if (v12 - v11 < v155)
        {
          if (__OFADD__(v11, v155))
            goto LABEL_134;
          if (v11 + v155 >= v3)
            v64 = v3;
          else
            v64 = v11 + v155;
          if (v64 < v11)
          {
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
            return;
          }
          if (v12 != v64)
          {
            v157 = v10;
            v158 = v64;
            v164 = v13;
            v65 = (_BYTE *)(v150 + 16 * v12);
            do
            {
              v193 = v12;
              v66 = (char *)(v9 + 16 * v12);
              v67 = *v66;
              v68 = v66[1];
              v69 = v66[2];
              v70 = v66[3];
              v71 = v66[4];
              v72 = v66[5];
              v73 = v66[6];
              v74 = v66[7];
              v75 = v66[8];
              v76 = v66[9];
              v77 = v66[10];
              v78 = v66[11];
              v79 = v66[12];
              v80 = v66[13];
              v81 = v66[14];
              v82 = v11;
              v161 = v65;
              v83 = v66[15];
              v189 = *v66;
              v184 = v75;
              v187 = v74;
              v178 = v77;
              v181 = v76;
              v173 = v79;
              v175 = v78;
              v167 = v81;
              v170 = v80;
              v165 = v83;
              while (1)
              {
                LOBYTE(__s1) = v67;
                v84 = v68;
                BYTE1(__s1) = v68;
                v85 = v69;
                BYTE2(__s1) = v69;
                v86 = v70;
                HIBYTE(__s1) = v70;
                v87 = v71;
                v197 = v71;
                v88 = v72;
                v198 = v72;
                v89 = v73;
                v199 = v73;
                v200 = v74;
                v201 = v75;
                v202 = v76;
                v203 = v77;
                v204 = v78;
                v205 = v79;
                v206 = v80;
                v207 = v81;
                v208 = v83;
                v90 = (__int128 *)(v65 - 8);
                __s2 = *(_OWORD *)(v65 - 8);
                if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                  break;
                v9 = v190;
                if (!v190)
                  goto LABEL_137;
                v91 = *v90;
                v67 = v189;
                *(v65 - 8) = v189;
                v68 = v84;
                *(v65 - 7) = v84;
                v69 = v85;
                *(v65 - 6) = v85;
                v70 = v86;
                *(v65 - 5) = v86;
                v71 = v87;
                *(v65 - 4) = v87;
                v72 = v88;
                *(v65 - 3) = v88;
                v73 = v89;
                *(v65 - 2) = v89;
                v75 = v184;
                v74 = v187;
                *(v65 - 1) = v187;
                *v65 = v184;
                v77 = v178;
                v76 = v181;
                v65[1] = v181;
                v65[2] = v178;
                v79 = v173;
                v78 = v175;
                v65[3] = v175;
                v65[4] = v173;
                v81 = v167;
                v80 = v170;
                v65[5] = v170;
                v65[6] = v167;
                v83 = v165;
                v65[7] = v165;
                v65 -= 16;
                ++v82;
                v90[1] = v91;
                if (v193 == v82)
                  goto LABEL_36;
              }
              v9 = v190;
LABEL_36:
              v12 = v193 + 1;
              v65 = v161 + 16;
              v11 = v159;
            }
            while (v193 + 1 != v158);
            v12 = v158;
            v13 = v164;
            v10 = v157;
          }
        }
      }
      if (v12 < v11)
        goto LABEL_129;
      v163 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_24975DAF4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v93 = *((_QWORD *)v10 + 2);
      v92 = *((_QWORD *)v10 + 3);
      v94 = v93 + 1;
      v9 = v190;
      if (v93 >= v92 >> 1)
      {
        v142 = sub_24975DAF4((char *)(v92 > 1), v93 + 1, 1, v10);
        v9 = v190;
        v10 = v142;
      }
      *((_QWORD *)v10 + 2) = v94;
      v95 = v10 + 32;
      v96 = &v10[16 * v93 + 32];
      *(_QWORD *)v96 = v11;
      *((_QWORD *)v96 + 1) = v12;
      v194 = v12;
      if (v93)
      {
        while (1)
        {
          v97 = v94 - 1;
          if (v94 >= 4)
          {
            v102 = &v95[16 * v94];
            v103 = *((_QWORD *)v102 - 8);
            v104 = *((_QWORD *)v102 - 7);
            v108 = __OFSUB__(v104, v103);
            v105 = v104 - v103;
            if (v108)
              goto LABEL_114;
            v107 = *((_QWORD *)v102 - 6);
            v106 = *((_QWORD *)v102 - 5);
            v108 = __OFSUB__(v106, v107);
            v100 = v106 - v107;
            v101 = v108;
            if (v108)
              goto LABEL_115;
            v109 = v94 - 2;
            v110 = &v95[16 * v94 - 32];
            v112 = *(_QWORD *)v110;
            v111 = *((_QWORD *)v110 + 1);
            v108 = __OFSUB__(v111, v112);
            v113 = v111 - v112;
            if (v108)
              goto LABEL_116;
            v108 = __OFADD__(v100, v113);
            v114 = v100 + v113;
            if (v108)
              goto LABEL_118;
            if (v114 >= v105)
            {
              v132 = &v95[16 * v97];
              v134 = *(_QWORD *)v132;
              v133 = *((_QWORD *)v132 + 1);
              v108 = __OFSUB__(v133, v134);
              v135 = v133 - v134;
              if (v108)
                goto LABEL_124;
              v125 = v100 < v135;
              goto LABEL_75;
            }
          }
          else
          {
            if (v94 != 3)
            {
              v126 = *((_QWORD *)v10 + 4);
              v127 = *((_QWORD *)v10 + 5);
              v108 = __OFSUB__(v127, v126);
              v119 = v127 - v126;
              v120 = v108;
              goto LABEL_69;
            }
            v99 = *((_QWORD *)v10 + 4);
            v98 = *((_QWORD *)v10 + 5);
            v108 = __OFSUB__(v98, v99);
            v100 = v98 - v99;
            v101 = v108;
          }
          if ((v101 & 1) != 0)
            goto LABEL_117;
          v109 = v94 - 2;
          v115 = &v95[16 * v94 - 32];
          v117 = *(_QWORD *)v115;
          v116 = *((_QWORD *)v115 + 1);
          v118 = __OFSUB__(v116, v117);
          v119 = v116 - v117;
          v120 = v118;
          if (v118)
            goto LABEL_119;
          v121 = &v95[16 * v97];
          v123 = *(_QWORD *)v121;
          v122 = *((_QWORD *)v121 + 1);
          v108 = __OFSUB__(v122, v123);
          v124 = v122 - v123;
          if (v108)
            goto LABEL_121;
          if (__OFADD__(v119, v124))
            goto LABEL_123;
          if (v119 + v124 >= v100)
          {
            v125 = v100 < v124;
LABEL_75:
            if (v125)
              v97 = v109;
            goto LABEL_77;
          }
LABEL_69:
          if ((v120 & 1) != 0)
            goto LABEL_120;
          v128 = &v95[16 * v97];
          v130 = *(_QWORD *)v128;
          v129 = *((_QWORD *)v128 + 1);
          v108 = __OFSUB__(v129, v130);
          v131 = v129 - v130;
          if (v108)
            goto LABEL_122;
          if (v131 < v119)
            goto LABEL_86;
LABEL_77:
          v136 = v97 - 1;
          if (v97 - 1 >= v94)
          {
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
            goto LABEL_125;
          }
          if (!v9)
            goto LABEL_138;
          v137 = &v95[16 * v136];
          v138 = *(_QWORD *)v137;
          v139 = &v95[16 * v97];
          v140 = *((_QWORD *)v139 + 1);
          sub_24976C644((char *)(v9 + 16 * *(_QWORD *)v137), (char *)(v9 + 16 * *(_QWORD *)v139), v9 + 16 * v140, v162);
          if (v163)
          {
            v3 = v160;
LABEL_92:
            swift_bridgeObjectRelease();
            if (v3 >= -1)
            {
              *(_QWORD *)(v154 + 16) = 0;
              swift_bridgeObjectRelease();
              return;
            }
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
            goto LABEL_135;
          }
          if (v140 < v138)
            goto LABEL_111;
          if (v97 > *((_QWORD *)v10 + 2))
            goto LABEL_112;
          *(_QWORD *)v137 = v138;
          *(_QWORD *)&v95[16 * v136 + 8] = v140;
          v141 = *((_QWORD *)v10 + 2);
          if (v97 >= v141)
            goto LABEL_113;
          v163 = 0;
          v94 = v141 - 1;
          memmove(&v95[16 * v97], v139 + 16, 16 * (v141 - 1 - v97));
          *((_QWORD *)v10 + 2) = v141 - 1;
          v9 = v190;
          if (v141 <= 2)
            goto LABEL_86;
        }
      }
      v94 = 1;
LABEL_86:
      v3 = v160;
      v8 = v194;
      if (v194 >= v160)
        goto LABEL_96;
    }
  }
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v94 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_96:
  if (v94 >= 2)
  {
    v143 = *v153;
    while (1)
    {
      v144 = v94 - 2;
      if (v94 < 2)
        break;
      if (!v143)
        goto LABEL_140;
      v145 = v10;
      v146 = *(_QWORD *)&v10[16 * v144 + 32];
      v147 = *(_QWORD *)&v10[16 * v94 + 24];
      sub_24976C644((char *)(v143 + 16 * v146), (char *)(v143 + 16 * *(_QWORD *)&v10[16 * v94 + 16]), v143 + 16 * v147, v162);
      if (v163)
        goto LABEL_92;
      if (v147 < v146)
        goto LABEL_126;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v145 = sub_24975DBE8();
      if (v144 >= *((_QWORD *)v145 + 2))
        goto LABEL_127;
      v148 = &v145[16 * v144 + 32];
      *(_QWORD *)v148 = v146;
      *((_QWORD *)v148 + 1) = v147;
      v149 = *((_QWORD *)v145 + 2);
      if (v94 > v149)
        goto LABEL_128;
      v10 = v145;
      memmove(&v145[16 * v94 + 16], &v145[16 * v94 + 32], 16 * (v149 - v94));
      *((_QWORD *)v145 + 2) = v149 - 1;
      v94 = v149 - 1;
      if (v149 <= 2)
        goto LABEL_107;
    }
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
LABEL_107:
  swift_bridgeObjectRelease();
  if (v3 < -1)
    goto LABEL_136;
  *(_QWORD *)(v154 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_24976C448(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _BYTE *v4;
  char *v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  __int128 *v22;
  __int128 v23;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  __int128 __s2;
  _BYTE __s1[16];
  uint64_t v41;

  v25 = result;
  v41 = *MEMORY[0x24BDAC8D0];
  if (a3 != a2)
  {
    v27 = *a4;
    v4 = (_BYTE *)(*a4 + 16 * a3 - 8);
    do
    {
      v5 = (char *)(v27 + 16 * a3);
      v6 = *v5;
      v7 = v5[1];
      v8 = v5[2];
      v9 = v5[3];
      v10 = v5[4];
      v11 = v5[5];
      v12 = v5[6];
      v13 = v5[7];
      v14 = v5[8];
      v15 = v5[9];
      v16 = v5[10];
      v17 = v5[11];
      v18 = v5[12];
      v19 = v5[13];
      v20 = v5[14];
      v37 = a3;
      v38 = v25;
      v26 = v4;
      v21 = v5[15];
      v35 = v14;
      v36 = v10;
      v33 = v16;
      v34 = v15;
      v31 = v18;
      v32 = v17;
      v29 = v20;
      v30 = v19;
      v28 = v21;
      do
      {
        __s1[0] = v6;
        __s1[1] = v7;
        __s1[2] = v8;
        __s1[3] = v9;
        __s1[4] = v10;
        __s1[5] = v11;
        __s1[6] = v12;
        __s1[7] = v13;
        __s1[8] = v14;
        __s1[9] = v15;
        __s1[10] = v16;
        __s1[11] = v17;
        __s1[12] = v18;
        __s1[13] = v19;
        __s1[14] = v20;
        __s1[15] = v21;
        v22 = (__int128 *)(v4 - 8);
        __s2 = *(_OWORD *)(v4 - 8);
        result = memcmp(__s1, &__s2, 0x10uLL);
        v21 = v28;
        v20 = v29;
        v19 = v30;
        v18 = v31;
        v17 = v32;
        v16 = v33;
        v15 = v34;
        v14 = v35;
        v10 = v36;
        if ((result & 0x80000000) == 0)
          break;
        if (!v27)
          __break(1u);
        v23 = *v22;
        *(v4 - 8) = v6;
        *(v4 - 7) = v7;
        *(v4 - 6) = v8;
        *(v4 - 5) = v9;
        *(v4 - 4) = v36;
        *(v4 - 3) = v11;
        *(v4 - 2) = v12;
        *(v4 - 1) = v13;
        *v4 = v35;
        v4[1] = v34;
        v4[2] = v33;
        v4[3] = v32;
        v4[4] = v31;
        v4[5] = v30;
        v4[6] = v29;
        v4[7] = v28;
        v4 -= 16;
        result = v38 + 1;
        v22[1] = v23;
        v38 = result;
      }
      while (v37 != result);
      a3 = v37 + 1;
      v4 = v26 + 16;
    }
    while (v37 + 1 != a2);
  }
  return result;
}

uint64_t sub_24976C644(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v14;
  char *v15;
  BOOL v16;
  char *v19;
  __int128 v20;
  char *v21;
  char *v22;
  BOOL v23;
  BOOL v24;
  __int128 v27;
  __int128 __s1;
  uint64_t v29;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v29 = *MEMORY[0x24BDAC8D0];
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_2497ABFE8(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = &v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_39;
    v19 = (char *)(a3 - 16);
    while (1)
    {
      v20 = *((_OWORD *)v12 - 1);
      v21 = v6 - 16;
      v22 = v19 + 16;
      v27 = *((_OWORD *)v6 - 1);
      __s1 = v20;
      if (memcmp(&__s1, &v27, 0x10uLL) < 0)
      {
        v23 = v22 != v6 || v19 >= v6;
        v6 -= 16;
        if (!v23)
          goto LABEL_35;
      }
      else
      {
        v24 = v22 != v12 || v19 >= v12;
        v21 = v12 - 16;
        v12 -= 16;
        if (!v24)
          goto LABEL_35;
      }
      *(_OWORD *)v19 = *(_OWORD *)v21;
LABEL_35:
      v19 -= 16;
      if (v12 <= v4 || v6 <= v7)
        goto LABEL_39;
    }
  }
  sub_2497ABFE8(a1, (a2 - a1) / 16, a4);
  v12 = &v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *(_OWORD *)v6;
      v27 = *(_OWORD *)v4;
      __s1 = v14;
      if (memcmp(&__s1, &v27, 0x10uLL) < 0)
        break;
      v15 = v4;
      v16 = v7 == v4;
      v4 += 16;
      if (!v16)
        goto LABEL_11;
LABEL_12:
      v7 += 16;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v15 = v6;
    v16 = v7 == v6;
    v6 += 16;
    if (v16)
      goto LABEL_12;
LABEL_11:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_39:
  sub_2497ABFE8(v4, (v12 - v4) / 16, v6);
  return 1;
}

uint64_t sub_24976C81C(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_24;
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_25;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257880658);
  v3 = sub_24983715C();
  if (v2)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      v2 = sub_249837324();
      swift_bridgeObjectRelease();
      if (!v2)
        break;
LABEL_5:
      v4 = 0;
      v5 = v3 + 56;
      v21 = v1;
      v22 = v1 & 0xC000000000000001;
      v19 = v1 & 0xFFFFFFFFFFFFFF8;
      v6 = (void (*)(uint64_t))MEMORY[0x24BDB9B60];
      v20 = v2;
      while (1)
      {
        if (v22)
        {
          v7 = MEMORY[0x24BCF8148](v4, v21);
        }
        else
        {
          if (v4 >= *(_QWORD *)(v19 + 16))
            goto LABEL_23;
          v7 = swift_retain();
        }
        v8 = __OFADD__(v4++, 1);
        if (v8)
          break;
        v23 = v7;
        sub_249836B44();
        sub_24974BBF4(&qword_257880130, v6);
        v9 = sub_249836CC4();
        v10 = -1 << *(_BYTE *)(v3 + 32);
        v1 = v9 & ~v10;
        v11 = v1 >> 6;
        v12 = *(_QWORD *)(v5 + 8 * (v1 >> 6));
        v13 = 1 << v1;
        if (((1 << v1) & v12) != 0)
        {
          v14 = ~v10;
          sub_24974BBF4(qword_257880668, v6);
          while ((sub_249836D0C() & 1) == 0)
          {
            v1 = (v1 + 1) & v14;
            v11 = v1 >> 6;
            v12 = *(_QWORD *)(v5 + 8 * (v1 >> 6));
            v13 = 1 << v1;
            if ((v12 & (1 << v1)) == 0)
            {
              v2 = v20;
              goto LABEL_16;
            }
          }
          swift_release();
          v2 = v20;
        }
        else
        {
LABEL_16:
          *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
          *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v1) = v23;
          v15 = *(_QWORD *)(v3 + 16);
          v8 = __OFADD__(v15, 1);
          v16 = v15 + 1;
          if (v8)
            goto LABEL_22;
          *(_QWORD *)(v3 + 16) = v16;
        }
        v6 = (void (*)(uint64_t))MEMORY[0x24BDB9B60];
        if (v4 == v2)
          goto LABEL_27;
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      swift_bridgeObjectRetain();
      v17 = sub_249837324();
      swift_bridgeObjectRelease();
      if (v17)
        goto LABEL_3;
LABEL_25:
      v3 = MEMORY[0x24BEE4B08];
      if (!v2)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_5;
  }
LABEL_27:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_24976CAA4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_24976CB24(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  if ((a1 & 0xC000000000000001) != 0)
    return sub_249837294();
  v2 = *(_QWORD *)(a1 + 64);
  if (v2)
  {
    v3 = 0;
    return __clz(__rbit64(v2)) + v3;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v1 = 1 << v5;
  if (v6 < 7)
    return v1;
  v2 = *(_QWORD *)(a1 + 72);
  if (v2)
  {
    v3 = 64;
    return __clz(__rbit64(v2)) + v3;
  }
  v3 = 64;
  for (i = 10; i - 8 < (unint64_t)(v1 + 63) >> 6; ++i)
  {
    v2 = *(_QWORD *)(a1 + 8 * i);
    v3 += 64;
    if (v2)
      return __clz(__rbit64(v2)) + v3;
  }
  return v1;
}

void sub_24976CBDC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_249767BA0(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_24976CBE4(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();

  }
}

void sub_24976CC14(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_24976CC20()
{
  uint64_t v0;

  return sub_249766AB0(*(_QWORD *)(v0 + 16));
}

void sub_24976CC28()
{
  sub_249766A8C();
}

void sub_24976CC48()
{
  sub_249766AE8();
}

uint64_t dynamic_cast_existential_0_class_conditional(uint64_t a1)
{
  if (swift_isClassType())
    return a1;
  else
    return 0;
}

uint64_t sub_24976CC94(void *a1)
{
  return sub_249765DD0(a1);
}

uint64_t sub_24976CC9C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

void sub_24976CCC0(_QWORD *a1, unint64_t *a2)
{
  if (!*a1)
  {
    sub_24976D1D4(255, a2);
    OUTLINED_FUNCTION_19_0();
  }
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24976CCF4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880620);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24976CD34()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_81_0();
  return swift_deallocObject();
}

void sub_24976CD50()
{
  uint64_t v0;

  sub_24975F510(v0);
}

uint64_t sub_24976CD58(uint64_t a1)
{
  uint64_t v1;

  return sub_24974B3C0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_24976CD60()
{
  return sub_24975FC6C();
}

uint64_t sub_24976CD68()
{
  OUTLINED_FUNCTION_81_0();
  return swift_deallocObject();
}

uint64_t sub_24976CD78()
{
  OUTLINED_FUNCTION_43_1();
  swift_release();
  OUTLINED_FUNCTION_27_1();
  return swift_deallocObject();
}

uint64_t sub_24976CD98()
{
  uint64_t v0;

  return sub_2497633BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_24976CDA0(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_24976345C(a1, a2, *(NSObject **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_24976CDA8(void *a1, char a2)
{
  uint64_t v2;

  sub_249763714(a1, a2 & 1, *(dispatch_group_t *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_24976CDB8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_2497614D4(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24));
}

void sub_24976CDC4(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_2497639D8(a1, a2, a3, *(NSObject **)(v3 + 16), *(_QWORD *)(v3 + 24));
}

void sub_24976CDCC(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;

  sub_249763C3C(a1, a2, a3, *(NSObject **)(v3 + 16), *(_QWORD *)(v3 + 24));
}

void sub_24976CDD4(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_249763FCC(a1, a2, *(NSObject **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_24976CDDC()
{
  OUTLINED_FUNCTION_43_1();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_27_1();
  return swift_deallocObject();
}

void sub_24976CDF8(char a1, void *a2)
{
  uint64_t v2;

  sub_24976437C(a1, a2, *(NSObject **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_24976CE00(id a1, char a2, void (*a3)(id))
{
  if ((a2 & 1) != 0)

  else
    a3(a1);
}

uint64_t sub_24976CE0C()
{
  uint64_t v0;

  return sub_2497636DC(*(_QWORD *)(v0 + 16));
}

void sub_24976CE18(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;

  v4 = a2 & 1;
  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_111();
  sub_249762EF0(a1, v4, *(void **)(v2 + 16), v2 + v5);
}

uint64_t objectdestroy_109Tm()
{
  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_43_1();
  OUTLINED_FUNCTION_67_0();
  return swift_deallocObject();
}

void sub_24976CEC0(void *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_111();
  sub_249763268(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_24976CEF0()
{
  return sub_2497632E4();
}

uint64_t sub_24976CEF8()
{
  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_43_1();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_53();
  return swift_deallocObject();
}

void sub_24976CF78(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(OUTLINED_FUNCTION_9_5() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_2497629FC(a1, v4, *(void **)(v2 + 16), *(void **)(v2 + 24), v2 + v6, *(_QWORD *)v7, *(void **)(v7 + 8));
}

void sub_24976CFDC()
{
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_27();
}

id sub_24976CFFC(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_unknownObjectRetain();
}

void sub_24976D008(void *a1)
{
  sub_249762CD4(a1);
}

uint64_t sub_24976D010()
{
  return sub_249762D84();
}

uint64_t sub_24976D018()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_24976D044(void *a1, char a2)
{
  uint64_t v2;

  sub_249761AC8(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(void *))(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_24976D05C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_24976D088(void *a1, char a2)
{
  uint64_t v2;

  sub_2497615C4(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void (**)(id))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_24976D09C()
{
  swift_release();
  OUTLINED_FUNCTION_27_1();
  return swift_deallocObject();
}

void sub_24976D0B8(void *a1, char a2)
{
  uint64_t v2;

  sub_249761EFC(a1, a2 & 1, *(void (**)(_QWORD, id))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_24976D0C4(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_249762000(a1, a2, *(uint64_t (**)(_QWORD, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_24976D0D0(void *a1, char a2)
{
  uint64_t v2;

  sub_249761950(a1, a2 & 1, *(void (**)(_QWORD, unint64_t, id))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_24976D0E0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_24976D104()
{
  sub_24976D134();
}

void sub_24976D120()
{
  sub_24976D134();
}

void sub_24976D134()
{
  sub_249761764();
}

uint64_t sub_24976D160()
{
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_27_1();
  return swift_deallocObject();
}

void sub_24976D178(void *a1, char a2)
{
  uint64_t v2;

  sub_2497623A0(a1, a2 & 1, *(_BYTE *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_24976D188()
{
  OUTLINED_FUNCTION_43_1();
  OUTLINED_FUNCTION_81_0();
  return swift_deallocObject();
}

void sub_24976D1A0(void *a1)
{
  sub_2497624FC(a1);
}

uint64_t objectdestroy_79Tm()
{
  OUTLINED_FUNCTION_43_1();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24976D1D4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24BCF8F34](a1, v6, a5);
}

uint64_t OUTLINED_FUNCTION_0_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 17) = *(_QWORD *)(v10 - 152);
  *(_BYTE *)(a1 + 18) = *(_QWORD *)(v10 - 176);
  *(_BYTE *)(a1 + 19) = *(_QWORD *)(v10 - 160);
  *(_QWORD *)(v10 - 248) = v2;
  *(_QWORD *)(v10 - 240) = v8;
  *(_BYTE *)(a1 + 20) = v8;
  v11 = *(_QWORD *)(v10 - 216);
  *(_BYTE *)(a1 + 21) = *(_QWORD *)(v10 - 168);
  *(_BYTE *)(a1 + 22) = v2;
  *(_QWORD *)(v10 - 256) = v4;
  *(_BYTE *)(a1 + 23) = v4;
  *(_BYTE *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 25) = v11;
  *(_QWORD *)(v10 - 280) = v7;
  *(_BYTE *)(a1 + 26) = v7;
  *(_BYTE *)(a1 + 27) = *(_QWORD *)(v10 - 208);
  *(_QWORD *)(v10 - 296) = v1;
  *(_BYTE *)(a1 + 28) = v1;
  *(_BYTE *)(a1 + 29) = *(_QWORD *)(v10 - 224);
  *(_QWORD *)(v10 - 304) = v9;
  *(_BYTE *)(a1 + 30) = v9;
  *(_BYTE *)(a1 + 31) = *(_QWORD *)(v10 - 232);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v10 - 144);
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(v10 - 184) = v3;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_2_6(int a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_DWORD *)(v5 - 188) = a1;
  *(_QWORD *)(v5 - 152) = a3 >> 8;
  *(_QWORD *)(v5 - 144) = a5;
  *(_QWORD *)(v5 - 160) = a3 >> 24;
  *(_QWORD *)(v5 - 176) = a3 >> 16;
  *(_QWORD *)(v5 - 168) = a3 >> 40;
  *(_QWORD *)(v5 - 208) = a4 >> 24;
  *(_QWORD *)(v5 - 200) = a2;
  *(_QWORD *)(v5 - 224) = a4 >> 40;
  *(_QWORD *)(v5 - 216) = a4 >> 8;
  *(_QWORD *)(v5 - 232) = HIBYTE(a4);
  return sub_249836A18();
}

uint64_t OUTLINED_FUNCTION_4_6()
{
  return sub_2498369E8();
}

uint64_t OUTLINED_FUNCTION_5_4()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_5()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_9_5()
{
  return sub_249836A18();
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return swift_release();
}

BOOL OUTLINED_FUNCTION_11_3(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void *OUTLINED_FUNCTION_14_2@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  a4 = a1;
  a5 = v5;
  return _Block_copy(&a2);
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_17_2()
{
  return swift_release();
}

void OUTLINED_FUNCTION_18_3()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_21_2()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_22_2()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 272) + 8))(v0, *(_QWORD *)(v1 - 264));
}

uint64_t OUTLINED_FUNCTION_24_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_28_1(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_29_0()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return swift_retain();
}

void *OUTLINED_FUNCTION_31_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = a1;
  *(_QWORD *)(v2 - 112) = v1;
  return _Block_copy((const void *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_34_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_35_1()
{
  void *v0;

  sub_24976B6DC(v0, 0);
}

uint64_t OUTLINED_FUNCTION_36_1()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 144))();
}

void OUTLINED_FUNCTION_37_0(id a1)
{

}

uint64_t OUTLINED_FUNCTION_38_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_2498370CC();
}

uint64_t OUTLINED_FUNCTION_40_1(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 264) = result;
  *(_QWORD *)(v1 - 272) = *(_QWORD *)(result - 8);
  return result;
}

uint64_t OUTLINED_FUNCTION_41_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_43_1()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_44_0()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_45_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 288) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return swift_retain();
}

id OUTLINED_FUNCTION_47_0(id a1, SEL a2)
{
  uint64_t v2;

  return objc_msgSend(a1, a2, v2);
}

id OUTLINED_FUNCTION_48_0(void *a1)
{
  return sub_24976B6B0(a1, 1);
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_53()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_54_0()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_57_0()
{
  return swift_release();
}

void OUTLINED_FUNCTION_58_0()
{
  void (*v0)(uint64_t);
  _QWORD *v1;

  sub_24974BBF4(v1, v0);
}

uint64_t OUTLINED_FUNCTION_60_0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_61_0(uint64_t a1, unint64_t *a2)
{
  return sub_24976D1D4(0, a2);
}

uint64_t OUTLINED_FUNCTION_63_0()
{
  return swift_deallocPartialClassInstance();
}

void OUTLINED_FUNCTION_64_0()
{
  const void *v0;

  _Block_release(v0);
}

void OUTLINED_FUNCTION_65_0()
{
  uint64_t v0;

}

id OUTLINED_FUNCTION_66_0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2);
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1 + v3, v0);
}

id OUTLINED_FUNCTION_68_0(void *a1)
{
  return sub_24976B6B0(a1, 0);
}

void OUTLINED_FUNCTION_69_0()
{
  void *v0;

}

id OUTLINED_FUNCTION_71_0()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_72_0()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_74_0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  os_log_type_t v5;

  _os_log_impl(a1, a2, v5, a4, v4, 0x12u);
}

void OUTLINED_FUNCTION_75_0()
{
  void (*v0)(uint64_t);
  _QWORD *v1;

  sub_24974BBF4(v1, v0);
}

id OUTLINED_FUNCTION_76_0(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  return objc_msgSend(v3, a2, v2, v4);
}

id OUTLINED_FUNCTION_77_0()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_24976A748(v1, v0, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_80_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_81_0()
{
  uint64_t v0;

  return v0;
}

id OUTLINED_FUNCTION_82()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

void *OUTLINED_FUNCTION_84(int a1, int a2, void *aBlock)
{
  return _Block_copy(aBlock);
}

void *OUTLINED_FUNCTION_85@<X0>(uint64_t a1@<X8>, uint64_t a2, char aBlock, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  a5 = a1;
  a6 = v6;
  return _Block_copy(&aBlock);
}

uint64_t OUTLINED_FUNCTION_86()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_88()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_89()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_90(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_91()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_92()
{
  return swift_unknownObjectRetain();
}

void OUTLINED_FUNCTION_93()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_94()
{
  return sub_2498369C4();
}

void OUTLINED_FUNCTION_95()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 1024;
}

uint64_t OUTLINED_FUNCTION_96(uint64_t a1)
{
  unint64_t v1;

  return sub_249748C10(a1, v1);
}

uint64_t OUTLINED_FUNCTION_97()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_99()
{
  return sub_249836B14();
}

uint64_t OUTLINED_FUNCTION_100()
{
  return swift_bridgeObjectRelease();
}

void *OUTLINED_FUNCTION_101@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1;
  *(_QWORD *)(v2 - 88) = v1;
  return _Block_copy((const void *)(v2 - 112));
}

uint64_t OUTLINED_FUNCTION_104(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t *a4)
{
  void *v4;
  uint64_t v5;

  return sub_249769794(v4, v5, a3, a4);
}

id OUTLINED_FUNCTION_105(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_106()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_108()
{
  return swift_dynamicCastObjCClass();
}

uint64_t OUTLINED_FUNCTION_110()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

uint64_t sub_24976DA0C()
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return MEMORY[0x24BCF7FF8](1, ObjectType);
}

uint64_t sub_24976DA38()
{
  uint64_t v0;

  v0 = sub_249836B14();
  __swift_allocate_value_buffer(v0, qword_257890818);
  __swift_project_value_buffer(v0, (uint64_t)qword_257890818);
  return sub_249836B08();
}

id static UniversalControlPreferences.shared.getter()
{
  if (qword_25787F6C0 != -1)
    swift_once();
  return (id)qword_257880740;
}

id sub_24976DAFC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UniversalControlPreferences()), sel_init);
  qword_257880740 = (uint64_t)result;
  return result;
}

void sub_24976DB28()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + OBJC_IVAR___UVCPreferences__testabilityProxy))
    OUTLINED_FUNCTION_21_2();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_27();
}

char *sub_24976DB70()
{
  char *v0;
  objc_class *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  id v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  objc_super v21;

  v1 = (objc_class *)OUTLINED_FUNCTION_29_1();
  v2 = OBJC_IVAR___UVCPreferences__impl;
  type metadata accessor for UniversalControlPreferencesImpl();
  OUTLINED_FUNCTION_18_1();
  v3 = v0;
  sub_24974A990();
  *(_QWORD *)&v0[v2] = v4;
  *(_QWORD *)&v3[OBJC_IVAR___UVCPreferences__testabilityProxy] = 0;
  v5 = OBJC_IVAR___UVCPreferences_lock;
  type metadata accessor for UnfairRecursiveLock();
  v6 = OUTLINED_FUNCTION_18_1();
  v7 = (_QWORD *)OUTLINED_FUNCTION_12();
  *v7 = 0;
  *(_QWORD *)(v6 + 16) = v7;
  *(_QWORD *)&v3[v5] = v6;
  v8 = &v3[OBJC_IVAR___UVCPreferences_sink];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v3[OBJC_IVAR___UVCPreferences__automation] = 2;
  v3[OBJC_IVAR___UVCPreferences__enabled] = 2;
  v3[OBJC_IVAR___UVCPreferences__magicEdgesEnabled] = 2;
  v3[OBJC_IVAR___UVCPreferences__supported] = 2;

  v21.receiver = v3;
  v21.super_class = v1;
  v9 = objc_msgSendSuper2(&v21, sel_init);
  sub_2497708C0();
  v10 = (char *)v9;
  v11 = (void *)sub_249836FE8();
  v12 = OUTLINED_FUNCTION_18_1();
  *(_QWORD *)(v12 + 24) = &off_251AB2558;
  swift_unknownObjectWeakInit();
  v13 = sub_249758D90(v11, (uint64_t)sub_249770920, v12);
  v15 = v14;
  v20 = v13;
  sub_249770928(&qword_2578807E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for UniversalControlPreferencesImpl, (uint64_t)&unk_24983A498);
  swift_retain();
  sub_249836B5C();
  *(_QWORD *)(OUTLINED_FUNCTION_18_1() + 16) = v15;
  sub_249836B8C();
  swift_unknownObjectRetain_n();
  sub_249836BE0();
  swift_release();
  sub_249836B2C();
  swift_release();
  OUTLINED_FUNCTION_10_1();
  swift_unknownObjectRelease();
  swift_release();
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x24BCF7FF8](1, ObjectType);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  v17 = (uint64_t *)&v10[OBJC_IVAR___UVCPreferences_sink];
  v18 = *(_QWORD *)&v10[OBJC_IVAR___UVCPreferences_sink];
  *v17 = v20;
  v17[1] = v15;
  sub_24974C100(v18);
  return v10;
}

id static UniversalControlPreferences.automaticallyNotifiesObservers(forKey:)(uint64_t a1, uint64_t a2)
{
  id v5;
  void *ObjCClassFromMetadata;
  void *v10;
  objc_super v11;

  if (a1 == 0x6974616D6F747561 && a2 == 0xEA00000000006E6FLL)
    return 0;
  OUTLINED_FUNCTION_3_6();
  v5 = 0;
  if ((sub_2498375C4() & 1) == 0)
  {
    if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000)
      return 0;
    v5 = 0;
    if ((OUTLINED_FUNCTION_6_2() & 1) == 0)
    {
      if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000)
        return 0;
      v5 = 0;
      if ((OUTLINED_FUNCTION_6_2() & 1) == 0)
      {
        if (a1 == 0xD000000000000011 && a2 == 0x80000002498398E0)
          return 0;
        v5 = 0;
        if ((OUTLINED_FUNCTION_6_2() & 1) == 0)
        {
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
          v10 = (void *)sub_249836D18();
          v11.receiver = ObjCClassFromMetadata;
          v11.super_class = (Class)&OBJC_METACLASS___UVCPreferences;
          v5 = objc_msgSendSuper2(&v11, sel_automaticallyNotifiesObserversForKey_, v10);

        }
      }
    }
  }
  return v5;
}

void sub_24976E00C()
{
  void *v0;
  void *v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v1 = v0;
  swift_getObjectType();
  swift_retain();
  v2 = sub_24976E280((void (*)(uint64_t *__return_ptr, uint64_t))sub_2497709E0);
  swift_release();
  if ((v2 & 1) != 0)
  {
    sub_249770928((unint64_t *)&unk_2578807D0, v3, (uint64_t (*)(uint64_t))type metadata accessor for UniversalControlPreferences, (uint64_t)&protocol conformance descriptor for UniversalControlPreferences);
    sub_249836B68();
    sub_249836B80();
    swift_release();
    v4 = (void *)sub_249836D18();
    objc_msgSend(v1, sel_willChangeValueForKey_, v4);

    MEMORY[0x24BDAC7A8](v5);
    swift_retain();
    sub_24976E21C((void (*)(uint64_t))sub_2497709FC);
    swift_release();
    v6 = (void *)sub_249836D18();
    objc_msgSend(v1, sel_didChangeValueForKey_, v6);

  }
}

BOOL sub_24976E190(void *a1, uint64_t a2, unsigned __int8 a3)
{
  int v3;
  id v4;
  char v5;
  char v8;

  v3 = a3;
  v4 = a1;
  swift_getAtKeyPath();

  v5 = v8 == 2;
  if (v3 != 2)
    v5 = 0;
  if (v8 != 2 && v3 != 2)
    v5 = ((v3 & 1) == 0) ^ v8;
  return (v5 & 1) == 0;
}

uint64_t sub_24976E21C(void (*a1)(uint64_t))
{
  uint64_t v2;

  v2 = os_unfair_recursive_lock_lock_with_options();
  a1(v2);
  return os_unfair_recursive_lock_unlock();
}

uint64_t sub_24976E280(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v6;

  v3 = os_unfair_recursive_lock_lock_with_options();
  a1(&v6, v3);
  os_unfair_recursive_lock_unlock();
  if (!v1)
    v4 = v6;
  return v4 & 1;
}

void sub_24976E2F0(void *a1)
{
  id v1;

  v1 = a1;
  swift_setAtReferenceWritableKeyPath();

}

uint64_t sub_24976E344()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  swift_retain();
  swift_retain();
  v2 = swift_retain();
  v3 = sub_249788F30(v2, v1);
  swift_release();
  return v3;
}

id UniversalControlPreferences.automation.getter()
{
  return sub_24976E728((uint64_t)&unk_249839918);
}

void UniversalControlPreferences.automation.setter(char a1)
{
  void *v2;

  if (PlatformIsAppleInternal())
  {
    swift_getKeyPath();
    OUTLINED_FUNCTION_3_6();
    sub_24976E00C();
    OUTLINED_FUNCTION_10_1();
    sub_24976DB28();
    UVCPreferencesProxySetAutomation(v2, a1 & 1);
    OUTLINED_FUNCTION_4_7();
  }
  else
  {
    OUTLINED_FUNCTION_81();
  }
}

id UniversalControlPreferences.enabled.getter()
{
  return sub_24976E728((uint64_t)&unk_249839978);
}

id UniversalControlPreferences.enabled.setter(uint64_t a1)
{
  os_log_type_t v1;
  char v2;
  id result;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  const char *v8;
  uint64_t v9;
  os_log_type_t v10;
  void *v11;

  v2 = a1;
  result = OUTLINED_FUNCTION_12_3(a1, sel_isSupported);
  if ((_DWORD)result)
  {
    swift_getKeyPath();
    sub_24976E00C();
    swift_release();
    if ((v2 & 1) != 0)
    {
      if (qword_25787F6B8 != -1)
        swift_once();
      v4 = sub_249836B14();
      __swift_project_value_buffer(v4, (uint64_t)qword_257890818);
      v5 = sub_249836AFC();
      v6 = sub_249836FB8();
      if (!OUTLINED_FUNCTION_18_4(v6))
        goto LABEL_13;
      v7 = (uint8_t *)OUTLINED_FUNCTION_12();
      *(_WORD *)v7 = 0;
      v8 = "=== Universal Control Preference Enabled ===";
    }
    else
    {
      if (qword_25787F6B8 != -1)
        swift_once();
      v9 = sub_249836B14();
      __swift_project_value_buffer(v9, (uint64_t)qword_257890818);
      v5 = sub_249836AFC();
      v10 = sub_249836FB8();
      if (!OUTLINED_FUNCTION_18_4(v10))
        goto LABEL_13;
      v7 = (uint8_t *)OUTLINED_FUNCTION_12();
      *(_WORD *)v7 = 0;
      v8 = "=== Universal Control Preference Disabled ===";
    }
    _os_log_impl(&dword_249741000, v5, v1, v8, v7, 2u);
    MEMORY[0x24BCF906C](v7, -1, -1);
LABEL_13:

    sub_24976DB28();
    UVCPreferencesProxySetEnabled(v11, v2 & 1);
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

id UniversalControlPreferences.magicEdgesEnabled.getter()
{
  return sub_24976E728((uint64_t)&unk_2498399C8);
}

id sub_24976E728(uint64_t a1)
{
  id result;
  char v2;

  result = OUTLINED_FUNCTION_12_3(a1, sel_isSupported);
  if ((_DWORD)result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v2 = sub_24976E344();
    OUTLINED_FUNCTION_10_1();
    swift_release();
    return (id)(v2 & 1);
  }
  return result;
}

void UniversalControlPreferences.magicEdgesEnabled.setter(uint64_t a1)
{
  char v1;
  void *v2;

  v1 = a1;
  if (OUTLINED_FUNCTION_12_3(a1, sel_isSupported))
  {
    swift_getKeyPath();
    OUTLINED_FUNCTION_10_2();
    sub_24976E00C();
    OUTLINED_FUNCTION_10_1();
    sub_24976DB28();
    UVCPreferencesProxySetMagicEdgesEnabled(v2, v1 & 1);
    OUTLINED_FUNCTION_4_7();
  }
  else
  {
    OUTLINED_FUNCTION_81();
  }
}

void sub_24976E84C(id *a1@<X0>, SEL *a2@<X3>, unsigned __int8 *a3@<X8>)
{
  id v5;
  unsigned __int8 v6;

  v5 = *a1;
  if ((objc_msgSend(*a1, sel_respondsToSelector_, *a2) & 1) != 0)
    v6 = objc_msgSend(v5, *a2);
  else
    v6 = 2;
  *a3 = v6;
  OUTLINED_FUNCTION_81();
}

id UniversalControlPreferences.isSupported.getter()
{
  void *v0;
  _BYTE *v1;
  uint64_t v2;
  int v3;
  void *v4;
  void *v5;
  id v6;

  v1 = v0;
  OUTLINED_FUNCTION_21_2();
  os_unfair_recursive_lock_lock_with_options();
  v2 = OBJC_IVAR___UVCPreferences__supported;
  v3 = v1[OBJC_IVAR___UVCPreferences__supported];
  if (v3 == 2)
  {
    sub_24976DB28();
    v5 = v4;
    if ((objc_msgSend(v4, sel_respondsToSelector_, sel_isSupported) & 1) != 0)
      v6 = objc_msgSend(v5, sel_isSupported);
    else
      v6 = 0;
    swift_unknownObjectRelease();
    v1[v2] = (_BYTE)v6;
  }
  else
  {
    v6 = (id)(v3 & 1);
  }
  os_unfair_recursive_lock_unlock();
  swift_release();

  return v6;
}

uint64_t UniversalControlPreferences.isBeta.getter()
{
  return PlatformIsBeta();
}

id UniversalControlPreferences.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_29_1();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_24976EA68()
{
  void *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  _BYTE *v11;

  OUTLINED_FUNCTION_29_1();
  sub_249770928((unint64_t *)&unk_2578807D0, v1, (uint64_t (*)(uint64_t))type metadata accessor for UniversalControlPreferences, (uint64_t)&protocol conformance descriptor for UniversalControlPreferences);
  sub_249836B68();
  sub_249836B80();
  swift_release();
  swift_getKeyPath();
  sub_24976DB28();
  v3 = (uint64_t)OUTLINED_FUNCTION_17_3(v2);
  if ((v3 & 1) != 0)
    OUTLINED_FUNCTION_12_3(v3, sel_automation);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_10_1();
  swift_getKeyPath();
  sub_24976DB28();
  v5 = (uint64_t)OUTLINED_FUNCTION_17_3(v4);
  if ((v5 & 1) != 0)
    OUTLINED_FUNCTION_12_3(v5, sel_enabled);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_10_1();
  swift_getKeyPath();
  sub_24976DB28();
  v7 = (uint64_t)OUTLINED_FUNCTION_17_3(v6);
  if ((v7 & 1) != 0)
    OUTLINED_FUNCTION_12_3(v7, sel_magicEdgesEnabled);
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_10_2();
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_10_1();
  v11 = v0;
  swift_retain();
  os_unfair_recursive_lock_lock_with_options();
  sub_24976DB28();
  v9 = v8;
  if ((OUTLINED_FUNCTION_17_3(v8) & 1) != 0)
  {
    v10 = objc_msgSend(v9, sel_isSupported);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    v10 = 2;
  }
  v11[OBJC_IVAR___UVCPreferences__supported] = v10;
  os_unfair_recursive_lock_unlock();
  OUTLINED_FUNCTION_10_1();

}

uint64_t sub_24976ECA8()
{
  return swift_unknownObjectRetain();
}

void sub_24976ED04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  if (!PlatformIsAppleInternal())
    goto LABEL_9;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR___UVCPreferences__testabilityProxy);
  if (v3)
  {
    if (a1 && v3 == a1)
      goto LABEL_9;
    goto LABEL_7;
  }
  if (a1)
  {
LABEL_7:
    *(_QWORD *)(v1 + OBJC_IVAR___UVCPreferences__testabilityProxy) = a1;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    if (PlatformIsAppleInternal())
      sub_24976EA68();
LABEL_9:
    OUTLINED_FUNCTION_4_7();
    return;
  }
  OUTLINED_FUNCTION_81();
}

void sub_24976ED7C()
{
  if (PlatformIsAppleInternal())
    sub_24976EA68();
}

void UniversalControlPreferences.hiddenDevices.getter()
{
  sub_24974A77C(0x13u);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24976EDF8()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return UniversalControlPreferences.hiddenDevices.setter(v0);
}

uint64_t UniversalControlPreferences.hiddenDevices.setter(uint64_t a1)
{
  return sub_24976EEC0(a1, 0x13u);
}

void UniversalControlPreferences.hiddenDevices.modify(uint64_t *a1)
{
  OUTLINED_FUNCTION_7_5((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  *a1 = sub_24974A77C(0x13u);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24976EE64(uint64_t *a1, char a2)
{
  return sub_24976EF30(a1, a2, 0x13u);
}

void UniversalControlPreferences.preferredDevices.getter()
{
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24976EE90()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return UniversalControlPreferences.preferredDevices.setter(v0);
}

uint64_t UniversalControlPreferences.preferredDevices.setter(uint64_t a1)
{
  return sub_24976EEC0(a1, 0x14u);
}

uint64_t sub_24976EEC0(uint64_t a1, unsigned __int8 a2)
{
  sub_24974A7D8(a1, a2);
  return swift_bridgeObjectRelease();
}

void UniversalControlPreferences.preferredDevices.modify(uint64_t *a1)
{
  OUTLINED_FUNCTION_7_5((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  *a1 = OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_27();
}

uint64_t sub_24976EF28(uint64_t *a1, char a2)
{
  return sub_24976EF30(a1, a2, 0x14u);
}

uint64_t sub_24976EF30(uint64_t *a1, char a2, unsigned __int8 a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = swift_bridgeObjectRetain();
    sub_24974A7D8(v5, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24974A7D8(v4, a3);
  }
  return swift_bridgeObjectRelease();
}

void UniversalControlPreferences.disableNearbyInteraction.getter()
{
  sub_249749F8C();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.disableNearbyInteraction.setter(char a1)
{
  sub_249749FD8(a1);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.disableNearbyInteraction.modify(uint64_t a1)
{
  char v2;

  OUTLINED_FUNCTION_32_2((_QWORD *)a1, OBJC_IVAR___UVCPreferences__impl);
  *(_BYTE *)(a1 + 8) = v2 & 1;
  OUTLINED_FUNCTION_27();
}

void sub_24976F008(uint64_t a1)
{
  sub_249749FD8(*(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.enableNearbyInteraction.getter()
{
  sub_249749F8C();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.enableNearbyInteraction.setter(char a1)
{
  sub_249749FD8((a1 & 1) == 0);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.enableNearbyInteraction.modify(uint64_t a1)
{
  char v2;

  OUTLINED_FUNCTION_32_2((_QWORD *)a1, OBJC_IVAR___UVCPreferences__impl);
  *(_BYTE *)(a1 + 8) = (v2 & 1) == 0;
  OUTLINED_FUNCTION_27();
}

void sub_24976F0BC(uint64_t a1)
{
  sub_249749FD8((*(_BYTE *)(a1 + 8) & 1) == 0);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.hasShownControlNotification.getter()
{
  sub_24974A02C();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.hasShownControlNotification.setter(char a1)
{
  sub_24974A078(a1);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.hasShownControlNotification.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___UVCPreferences__impl);
  sub_24974A02C();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_27();
}

void sub_24976F170(uint64_t a1)
{
  sub_24974A078(*(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.magicEdgeDebounceTime.getter()
{
  sub_24974A0CC();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.magicEdgeDebounceTime.setter(uint64_t a1)
{
  sub_24974A118(a1);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.magicEdgeDebounceTime.modify(_QWORD *a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_7_5((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  sub_24974A0CC();
  *a1 = v2;
  OUTLINED_FUNCTION_27();
}

void sub_24976F210(uint64_t *a1)
{
  sub_24974A118(*a1);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.magicEdgeRejectTime.getter()
{
  sub_24974A170();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.magicEdgeRejectTime.setter(uint64_t a1)
{
  sub_24974A1BC(a1);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.magicEdgeRejectTime.modify(_QWORD *a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_7_5((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  sub_24974A170();
  *a1 = v2;
  OUTLINED_FUNCTION_27();
}

void sub_24976F2AC(uint64_t *a1)
{
  sub_24974A1BC(*a1);
  OUTLINED_FUNCTION_27();
}

uint64_t UniversalControlPreferences.targetDevice.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_26_2();
  if (*(_QWORD *)(v0 + 16))
    v1 = *(_QWORD *)(v0 + 32);
  else
    v1 = 0;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_24976F328@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = UniversalControlPreferences.targetDevice.getter();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_24976F358(uint64_t a1)
{
  return UniversalControlPreferences.targetDevice.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t UniversalControlPreferences.targetDevice.setter(unint64_t a1, unint64_t a2, char a3)
{
  char v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  if ((a3 & 1) != 0)
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v3 = a2;
    v4 = a1;
    v5 = a1 >> 8;
    v6 = a1 >> 16;
    v7 = a1 >> 24;
    v8 = HIDWORD(a1);
    v9 = a1 >> 40;
    v10 = HIWORD(a1);
    v13 = HIBYTE(a1);
    v14 = a2 >> 8;
    v15 = a2 >> 16;
    v16 = a2 >> 24;
    v17 = HIDWORD(a2);
    v18 = a2 >> 40;
    v19 = HIWORD(a2);
    v20 = HIBYTE(a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2578807A0);
    v11 = OUTLINED_FUNCTION_18_1();
    *(_OWORD *)(v11 + 16) = xmmword_249838510;
    *(_BYTE *)(v11 + 32) = v4;
    *(_BYTE *)(v11 + 33) = v5;
    *(_BYTE *)(v11 + 34) = v6;
    *(_BYTE *)(v11 + 35) = v7;
    *(_BYTE *)(v11 + 36) = v8;
    *(_BYTE *)(v11 + 37) = v9;
    *(_BYTE *)(v11 + 38) = v10;
    *(_BYTE *)(v11 + 39) = v13;
    *(_BYTE *)(v11 + 40) = v3;
    *(_BYTE *)(v11 + 41) = v14;
    *(_BYTE *)(v11 + 42) = v15;
    *(_BYTE *)(v11 + 43) = v16;
    *(_BYTE *)(v11 + 44) = v17;
    *(_BYTE *)(v11 + 45) = v18;
    *(_BYTE *)(v11 + 46) = v19;
    *(_BYTE *)(v11 + 47) = v20;
  }
  sub_24974A7D8(v11, 0x14u);
  return swift_bridgeObjectRelease();
}

void UniversalControlPreferences.targetDevice.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 24) = v1;
  *(_QWORD *)a1 = UniversalControlPreferences.targetDevice.getter();
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  OUTLINED_FUNCTION_27();
}

void sub_24976F500(uint64_t a1)
{
  UniversalControlPreferences.targetDevice.setter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  OUTLINED_FUNCTION_27();
}

UniversalControl::UniversalControlPreferences::Transport_optional __swiftcall UniversalControlPreferences.Transport.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char v4;
  UniversalControl::UniversalControlPreferences::Transport_optional result;

  v2 = v1;
  v3 = sub_249837384();
  swift_bridgeObjectRelease();
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v3)
    v4 = 0;
  *v2 = v4;
  OUTLINED_FUNCTION_81();
  return result;
}

void *static UniversalControlPreferences.Transport.allCases.getter()
{
  return &unk_251AB07F0;
}

uint64_t UniversalControlPreferences.Transport.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6172666E49;
  else
    return 1279547201;
}

void sub_24976F5BC(char *a1, char *a2)
{
  sub_2497A0780(*a1, *a2);
}

void sub_24976F5C8()
{
  sub_24975E19C();
}

uint64_t sub_24976F5D0()
{
  return sub_249771678();
}

void sub_24976F5D8()
{
  sub_2497A0DA0();
}

UniversalControl::UniversalControlPreferences::Transport_optional sub_24976F5E0(Swift::String *a1)
{
  return UniversalControlPreferences.Transport.init(rawValue:)(*a1);
}

void sub_24976F5EC(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = UniversalControlPreferences.Transport.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_27();
}

void sub_24976F60C(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AB07F0;
}

void UniversalControlPreferences.transport.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void sub_24976F624(_BYTE *a1@<X8>)
{
  char v2;

  UniversalControlPreferences.transport.getter(&v2);
  *a1 = v2;
}

uint64_t (*UniversalControlPreferences.transport.modify(_BYTE *a1))()
{
  *a1 = 0;
  return nullsub_1;
}

void UniversalControlPreferences.configuration.getter(uint64_t *a1@<X8>)
{
  sub_24974A4F8(a1);
  OUTLINED_FUNCTION_27();
}

void sub_24976F694(_QWORD *a1@<X8>)
{
  uint64_t v2;

  UniversalControlPreferences.configuration.getter(&v2);
  *a1 = v2;
}

void sub_24976F6CC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_retain();
  UniversalControlPreferences.configuration.setter(&v1);
}

void UniversalControlPreferences.configuration.setter(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_24974A628(&v1);
  OUTLINED_FUNCTION_31_2();
}

void UniversalControlPreferences.configuration.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  sub_24974A4F8(a1);
  OUTLINED_FUNCTION_27();
}

void sub_24976F774(uint64_t *a1, char a2)
{
  uint64_t v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_21_2();
    UniversalControlPreferences.configuration.setter(&v2);
    swift_release();
  }
  else
  {
    UniversalControlPreferences.configuration.setter(&v2);
    OUTLINED_FUNCTION_31_2();
  }
}

void UniversalControlPreferences.configurationID.getter()
{
  sub_24974A6C8();
  OUTLINED_FUNCTION_27();
}

void sub_24976F7E8(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_249748C6C(*a1, v2);
  UniversalControlPreferences.configurationID.setter(v1, v2);
}

void UniversalControlPreferences.configurationID.setter(uint64_t a1, unint64_t a2)
{
  sub_24974A72C(a1, a2);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.configurationID.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = *(_QWORD *)(v1 + OBJC_IVAR___UVCPreferences__impl);
  *a1 = sub_24974A6C8();
  a1[1] = v3;
  OUTLINED_FUNCTION_27();
}

void sub_24976F888(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_249748C6C(*a1, v3);
    OUTLINED_FUNCTION_36_2();
    sub_249748C80(v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_36_2();
    OUTLINED_FUNCTION_81();
  }
}

void UniversalControlPreferences.connectedDeviceLimit.getter()
{
  sub_24974A454();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.connectedDeviceLimit.setter(uint64_t a1)
{
  sub_24974A4A0(a1);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.connectedDeviceLimit.modify(_QWORD *a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_7_5((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  sub_24974A454();
  *a1 = v2;
  OUTLINED_FUNCTION_27();
}

void sub_24976F958(uint64_t *a1)
{
  sub_24974A4A0(*a1);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.connectionTimeout.getter()
{
  OUTLINED_FUNCTION_34_2();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.connectionTimeout.setter(double a1)
{
  sub_24974A3D8(4u, a1, 2.5);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.connectionTimeout.modify(double *a1)
{
  OUTLINED_FUNCTION_7_5((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  *a1 = OUTLINED_FUNCTION_34_2();
  OUTLINED_FUNCTION_27();
}

void sub_24976F9FC(double *a1, uint64_t a2)
{
  sub_24976FFF4(a1, 2.5, a2, 4u);
}

void UniversalControlPreferences.alwaysGuardEdges.getter()
{
  sub_24974A214();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.alwaysGuardEdges.setter(char a1)
{
  sub_24974A260(a1);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.alwaysGuardEdges.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR___UVCPreferences__impl);
  sub_24974A214();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_27();
}

void sub_24976FA94(uint64_t a1)
{
  sub_24974A260(*(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_27();
}

uint64_t UniversalControlPreferences.innerRSSIThreshold.getter()
{
  return -60;
}

uint64_t (*UniversalControlPreferences.innerRSSIThreshold.modify(_QWORD *a1))()
{
  *a1 = -60;
  return nullsub_1;
}

uint64_t UniversalControlPreferences.outerRSSIThreshold.getter()
{
  return -60;
}

uint64_t (*UniversalControlPreferences.outerRSSIThreshold.modify(_QWORD *a1))()
{
  *a1 = -60;
  return nullsub_1;
}

uint64_t UniversalControlPreferences.otherRSSIThreshold.getter()
{
  return -65;
}

uint64_t (*UniversalControlPreferences.otherRSSIThreshold.modify(_QWORD *a1))()
{
  *a1 = -65;
  return nullsub_1;
}

void UniversalControlPreferences.nearbyInteractionRSSIThreshold.getter()
{
  sub_24974A2B4();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.nearbyInteractionRSSIThreshold.setter(uint64_t a1)
{
  sub_24974A310(a1);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.rssiThreshold.getter()
{
  sub_24974A2B4();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.rssiThreshold.setter(uint64_t a1)
{
  sub_24974A310(a1);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.nearbyInteractionRSSIThreshold.modify(_QWORD *a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_33_2((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  *a1 = v2;
  OUTLINED_FUNCTION_27();
}

void sub_24976FBDC(uint64_t *a1)
{
  sub_24974A310(*a1);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.idleTimeout.getter()
{
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.idleTimeout.setter(double a1)
{
  sub_24974A3D8(0xCu, a1, 60.0);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.idleTimeout.modify(double *a1)
{
  OUTLINED_FUNCTION_7_5((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  *a1 = OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_27();
}

void sub_24976FC84(double *a1, uint64_t a2)
{
  sub_24976FFF4(a1, 60.0, a2, 0xCu);
}

void UniversalControlPreferences.glueIdleTimeout.getter()
{
  OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.glueIdleTimeout.setter(double a1)
{
  sub_24974A3D8(0xDu, a1, 10.0);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.glueIdleTimeout.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v1 + OBJC_IVAR___UVCPreferences__impl);
  *(double *)a1 = OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_27();
}

void sub_24976FD20(double *a1, uint64_t a2)
{
  sub_24976FFF4(a1, 10.0, a2, 0xDu);
}

void UniversalControlPreferences.disconnectAlertDebounceTime.getter()
{
  OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.disconnectAlertDebounceTime.setter(double a1)
{
  sub_24974A3D8(0xEu, a1, 1.0);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.disconnectAlertDebounceTime.modify(double *a1)
{
  OUTLINED_FUNCTION_7_5((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  *a1 = OUTLINED_FUNCTION_25_3();
  OUTLINED_FUNCTION_27();
}

void sub_24976FDB4(double *a1, uint64_t a2)
{
  sub_24976FFF4(a1, 1.0, a2, 0xEu);
}

void UniversalControlPreferences.deviceRemovalDebounceTime.getter()
{
  sub_24974A37C(0xFu, 45.0);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.deviceRemovalDebounceTime.setter(double a1)
{
  sub_24974A3D8(0xFu, a1, 45.0);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.deviceRemovalDebounceTime.modify(double *a1)
{
  OUTLINED_FUNCTION_7_5((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  *a1 = sub_24974A37C(0xFu, 45.0);
  OUTLINED_FUNCTION_27();
}

void sub_24976FE64(double *a1, uint64_t a2)
{
  sub_24976FFF4(a1, 45.0, a2, 0xFu);
}

void UniversalControlPreferences.rssiThreshold.modify(_QWORD *a1)
{
  uint64_t v2;

  OUTLINED_FUNCTION_33_2((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  *a1 = v2;
  OUTLINED_FUNCTION_27();
}

double UniversalControlPreferences.statusFlagsDebounceTime.getter()
{
  return 0.0;
}

uint64_t (*UniversalControlPreferences.statusFlagsDebounceTime.modify(_QWORD *a1))()
{
  *a1 = 0;
  return nullsub_1;
}

void UniversalControlPreferences.connectionSyncTimeout.getter()
{
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.connectionSyncTimeout.setter(double a1)
{
  sub_24974A3D8(0x10u, a1, 3.0);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.connectionSyncTimeout.modify(double *a1)
{
  OUTLINED_FUNCTION_7_5((uint64_t)a1, OBJC_IVAR___UVCPreferences__impl);
  *a1 = OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_27();
}

void sub_24976FF50(double *a1, uint64_t a2)
{
  sub_24976FFF4(a1, 3.0, a2, 0x10u);
}

void UniversalControlPreferences.syncTimeout.getter()
{
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.syncTimeout.setter(double a1)
{
  sub_24974A3D8(0x11u, a1, 10.0);
  OUTLINED_FUNCTION_27();
}

void UniversalControlPreferences.syncTimeout.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v1 + OBJC_IVAR___UVCPreferences__impl);
  *(double *)a1 = OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_27();
}

void sub_24976FFE8(double *a1, uint64_t a2)
{
  sub_24976FFF4(a1, 10.0, a2, 0x11u);
}

void sub_24976FFF4(double *a1, double a2, uint64_t a3, unsigned __int8 a4)
{
  sub_24974A3D8(a4, *a1, a2);
  OUTLINED_FUNCTION_27();
}

char *keypath_get_selector_automation()
{
  return sel_automation;
}

void sub_249770028(id *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  sub_24976E84C(a1, (SEL *)&selRef_automation, a2);
}

void UVCPreferencesProxySetAutomation(void *a1, uint64_t a2)
{
  id v3;

  v3 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "setAutomation:", a2);

}

char *keypath_get_selector_enabled()
{
  return sel_enabled;
}

void sub_2497700A0(id *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  sub_24976E84C(a1, (SEL *)&selRef_enabled, a2);
}

void UVCPreferencesProxySetEnabled(void *a1, uint64_t a2)
{
  id v3;

  v3 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "setEnabled:", a2);

}

char *keypath_get_selector_magicEdgesEnabled()
{
  return sel_magicEdgesEnabled;
}

void sub_249770118(id *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  sub_24976E84C(a1, (SEL *)&selRef_magicEdgesEnabled, a2);
}

void UVCPreferencesProxySetMagicEdgesEnabled(void *a1, uint64_t a2)
{
  id v3;

  v3 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "setMagicEdgesEnabled:", a2);

}

unint64_t sub_249770188()
{
  unint64_t result;

  result = qword_2578807A8;
  if (!qword_2578807A8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlPreferences.Transport, &type metadata for UniversalControlPreferences.Transport);
    atomic_store(result, (unint64_t *)&qword_2578807A8);
  }
  return result;
}

unint64_t sub_2497701C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578807B0;
  if (!qword_2578807B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578807B8);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578807B0);
  }
  return result;
}

void sub_24977020C(id *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = objc_msgSend(*a1, sel_automation);
  OUTLINED_FUNCTION_27();
}

id sub_249770238(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAutomation_, *a1);
}

void sub_24977024C(id *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = objc_msgSend(*a1, sel_enabled);
  OUTLINED_FUNCTION_27();
}

id sub_249770278(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEnabled_, *a1);
}

void sub_24977028C(id *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = objc_msgSend(*a1, sel_magicEdgesEnabled);
  OUTLINED_FUNCTION_27();
}

id sub_2497702B8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMagicEdgesEnabled_, *a1);
}

void sub_2497702CC()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.hiddenDevices.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_2497702F0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.preferredDevices.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_249770314()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.disableNearbyInteraction.getter();
  OUTLINED_FUNCTION_22_3(v0);
  OUTLINED_FUNCTION_27();
}

void sub_249770334(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_37_1(a1);
  UniversalControlPreferences.disableNearbyInteraction.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249770350()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.enableNearbyInteraction.getter();
  OUTLINED_FUNCTION_22_3(v0);
  OUTLINED_FUNCTION_27();
}

void sub_249770370(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_37_1(a1);
  UniversalControlPreferences.enableNearbyInteraction.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_24977038C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.hasShownControlNotification.getter();
  OUTLINED_FUNCTION_22_3(v0);
  OUTLINED_FUNCTION_27();
}

void sub_2497703AC(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_37_1(a1);
  UniversalControlPreferences.hasShownControlNotification.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497703C8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.magicEdgeDebounceTime.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_2497703E8(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_21_3(a1);
  UniversalControlPreferences.magicEdgeDebounceTime.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249770404()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.magicEdgeRejectTime.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_249770424(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_21_3(a1);
  UniversalControlPreferences.magicEdgeRejectTime.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249770458()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.configurationID.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_27();
}

void sub_24977047C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.connectedDeviceLimit.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_24977049C(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_21_3(a1);
  UniversalControlPreferences.connectedDeviceLimit.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497704B8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.connectionTimeout.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_2497704D8(uint64_t a1)
{
  double v1;

  v1 = OUTLINED_FUNCTION_14_3(a1);
  UniversalControlPreferences.connectionTimeout.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497704F4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.alwaysGuardEdges.getter();
  OUTLINED_FUNCTION_22_3(v0);
  OUTLINED_FUNCTION_27();
}

void sub_249770514(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_37_1(a1);
  UniversalControlPreferences.alwaysGuardEdges.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249770530(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void sub_24977053C(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void sub_249770548(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_11_1(a1);
}

void sub_249770554()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.nearbyInteractionRSSIThreshold.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_249770574(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_21_3(a1);
  UniversalControlPreferences.nearbyInteractionRSSIThreshold.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249770590()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.idleTimeout.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_2497705B0(uint64_t a1)
{
  double v1;

  v1 = OUTLINED_FUNCTION_14_3(a1);
  UniversalControlPreferences.idleTimeout.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497705CC()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.glueIdleTimeout.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_2497705EC(uint64_t a1)
{
  double v1;

  v1 = OUTLINED_FUNCTION_14_3(a1);
  UniversalControlPreferences.glueIdleTimeout.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249770608()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.disconnectAlertDebounceTime.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_249770628(uint64_t a1)
{
  double v1;

  v1 = OUTLINED_FUNCTION_14_3(a1);
  UniversalControlPreferences.disconnectAlertDebounceTime.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249770644()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.deviceRemovalDebounceTime.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_249770664(uint64_t a1)
{
  double v1;

  v1 = OUTLINED_FUNCTION_14_3(a1);
  UniversalControlPreferences.deviceRemovalDebounceTime.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249770680()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.rssiThreshold.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_2497706A0(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_21_3(a1);
  UniversalControlPreferences.rssiThreshold.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_2497706BC(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_2497706C8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.connectionSyncTimeout.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_2497706E8(uint64_t a1)
{
  double v1;

  v1 = OUTLINED_FUNCTION_14_3(a1);
  UniversalControlPreferences.connectionSyncTimeout.setter(v1);
  OUTLINED_FUNCTION_27();
}

void sub_249770704()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  UniversalControlPreferences.syncTimeout.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_249770724(uint64_t a1)
{
  double v1;

  v1 = OUTLINED_FUNCTION_14_3(a1);
  UniversalControlPreferences.syncTimeout.setter(v1);
  OUTLINED_FUNCTION_27();
}

uint64_t type metadata accessor for UniversalControlPreferences()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for UniversalControlPreferences.Transport(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlPreferences.Transport(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249770834 + 4 * byte_2498398F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249770868 + 4 * byte_2498398F0[v4]))();
}

uint64_t sub_249770868(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249770870(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249770878);
  return result;
}

uint64_t sub_249770884(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24977088CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249770890(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249770898(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2497708A4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlPreferences.Transport()
{
  return &type metadata for UniversalControlPreferences.Transport;
}

unint64_t sub_2497708C0()
{
  unint64_t result;

  result = qword_257880238;
  if (!qword_257880238)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257880238);
  }
  return result;
}

uint64_t sub_2497708FC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_249770920()
{
  uint64_t v0;

  return sub_249758FC4(v0);
}

void sub_249770928(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = a3(a2);
    atomic_store(MEMORY[0x24BCF8F94](a4, v6), a1);
  }
  OUTLINED_FUNCTION_27();
}

BOOL sub_249770964@<W0>(void *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  _BOOL8 result;

  result = sub_24976E190(a1, a2, *a3);
  if (!v4)
    *a4 = result;
  return result;
}

void sub_249770994(void *a1)
{
  sub_24976E2F0(a1);
}

uint64_t sub_2497709AC()
{
  return sub_24976DA0C();
}

uint64_t sub_2497709B4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2497709D8()
{
  return sub_24976DA0C();
}

BOOL sub_2497709E0@<W0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_249770964(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 **)(v1 + 32), a1);
}

void sub_2497709FC()
{
  uint64_t v0;

  sub_249770994(*(void **)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_3_6()
{
  return 0x6974616D6F747561;
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_6_2()
{
  return sub_2498375C4();
}

uint64_t OUTLINED_FUNCTION_7_5@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(result + 8) = *(_QWORD *)(v2 + a2);
  return result;
}

unint64_t OUTLINED_FUNCTION_10_2()
{
  return 0xD000000000000011;
}

id OUTLINED_FUNCTION_12_3(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return swift_unknownObjectRelease();
}

double OUTLINED_FUNCTION_14_3(uint64_t a1)
{
  return *(double *)a1;
}

void OUTLINED_FUNCTION_16_3()
{
  sub_24976E00C();
}

id OUTLINED_FUNCTION_17_3(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, (SEL)(v1 + 3912));
}

BOOL OUTLINED_FUNCTION_18_4(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

double OUTLINED_FUNCTION_19_4()
{
  return sub_24974A37C(0xCu, 60.0);
}

uint64_t OUTLINED_FUNCTION_21_3(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_22_3(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

double OUTLINED_FUNCTION_24_3()
{
  return sub_24974A37C(0x10u, 3.0);
}

double OUTLINED_FUNCTION_25_3()
{
  return sub_24974A37C(0xEu, 1.0);
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return sub_24974A77C(0x14u);
}

double OUTLINED_FUNCTION_27_2()
{
  return sub_24974A37C(0x11u, 10.0);
}

double OUTLINED_FUNCTION_28_2()
{
  return sub_24974A37C(0xDu, 10.0);
}

uint64_t OUTLINED_FUNCTION_29_1()
{
  return swift_getObjectType();
}

void OUTLINED_FUNCTION_32_2(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = *(_QWORD *)(v2 + a2);
  sub_249749F8C();
}

void OUTLINED_FUNCTION_33_2(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(v2 + a2);
  sub_24974A2B4();
}

double OUTLINED_FUNCTION_34_2()
{
  return sub_24974A37C(4u, 2.5);
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  uint64_t v0;
  unint64_t v1;

  return sub_24974A72C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_37_1(unsigned __int8 *a1)
{
  return *a1;
}

UniversalControl::UniversalControlFocus_optional __swiftcall UniversalControlFocus.init(stringValue:)(Swift::String stringValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  UniversalControl::UniversalControlFocus_optional result;
  char v9;
  uint64_t v10;
  char v12;

  v2 = v1;
  OUTLINED_FUNCTION_3_7();
  v5 = v5 && v4 == 0xE700000000000000;
  if (v5 || (v6 = v4, v7 = v3, OUTLINED_FUNCTION_2_8(), (OUTLINED_FUNCTION_4_8() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    v9 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_7_6();
    if (v7 == v10 && v6 == 0xE800000000000000)
    {
      result.value = swift_bridgeObjectRelease();
      v9 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_1_6();
      v12 = OUTLINED_FUNCTION_4_8();
      result.value = swift_bridgeObjectRelease();
      v9 = 0;
      if ((v12 & 1) == 0)
        v9 = 2;
    }
  }
  *v2 = v9;
  return result;
}

uint64_t UniversalControlFocus.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249837738();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
  sub_2498375F4();
  v1 = swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_5_3(v1);
}

uint64_t UniversalControlFocus.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  char v15;
  uint64_t v16;
  _QWORD v17[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_5_5();
  sub_249837714();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v17, v17[3]);
    OUTLINED_FUNCTION_5_5();
    v5 = sub_2498375D0();
    v7 = v6;
    OUTLINED_FUNCTION_3_7();
    v9 = v9 && v8 == 0xE700000000000000;
    if (v9 || (OUTLINED_FUNCTION_2_8(), (OUTLINED_FUNCTION_0_8() & 1) != 0))
    {
      v10 = swift_bridgeObjectRelease();
      v11 = 1;
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_7_6();
    if (v5 == v13 && v7 == 0xE800000000000000)
    {
      v10 = swift_bridgeObjectRelease();
      v11 = 0;
      goto LABEL_10;
    }
    OUTLINED_FUNCTION_1_6();
    v15 = OUTLINED_FUNCTION_0_8();
    v10 = swift_bridgeObjectRelease();
    v11 = 0;
    if ((v15 & 1) != 0)
    {
LABEL_10:
      OUTLINED_FUNCTION_5_3(v10);
      *a2 = v11;
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    }
    sub_2498371BC();
    swift_allocError();
    sub_24983718C();
    v16 = swift_willThrow();
    OUTLINED_FUNCTION_5_3(v16);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

BOOL static UniversalControlFocus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t UniversalControlFocus.hash(into:)()
{
  return sub_2498376A8();
}

uint64_t UniversalControlFocus.hashValue.getter()
{
  sub_249837690();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t sub_249770EEC@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return UniversalControlFocus.init(from:)(a1, a2);
}

uint64_t sub_249770F00(_QWORD *a1)
{
  return UniversalControlFocus.encode(to:)(a1);
}

uint64_t UniversalControlFocus.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265746E696F70;
  else
    return 0x6472616F6279656BLL;
}

unint64_t sub_249770F58()
{
  unint64_t result;

  result = qword_2578807E8;
  if (!qword_2578807E8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlFocus, &type metadata for UniversalControlFocus);
    atomic_store(result, (unint64_t *)&qword_2578807E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UniversalControlFocus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249770FE0 + 4 * byte_249839BA5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249771014 + 4 * byte_249839BA0[v4]))();
}

uint64_t sub_249771014(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24977101C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249771024);
  return result;
}

uint64_t sub_249771030(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249771038);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24977103C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249771044(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlFocus()
{
  return &type metadata for UniversalControlFocus;
}

uint64_t OUTLINED_FUNCTION_0_8()
{
  return sub_2498375C4();
}

uint64_t OUTLINED_FUNCTION_1_6()
{
  return 0x6472616F6279656BLL;
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  return 0x7265746E696F70;
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return sub_2498375C4();
}

uint64_t OUTLINED_FUNCTION_5_5()
{
  uint64_t v0;

  return v0;
}

BOOL sub_2497710F4(unint64_t a1, unint64_t a2)
{
  return (double)a2 / 1000.0 < (double)a1 / 1000.0;
}

BOOL sub_249771118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD v6[4];

  v6[2] = a1;
  v6[3] = a2;
  v6[0] = a3;
  v6[1] = a4;
  static UVC1Digest.compare(lhs:rhs:)((uint64_t)v6);
  return v4 == -1;
}

void sub_24977114C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (static UniversalControlUUID.compare(lhs:rhs:)(a5, a6, a1, a2) != -1
    && static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, a5, a6) != -1)
  {
    sub_249772148(a7, a8, a3, a4);
  }
  OUTLINED_FUNCTION_13_1();
}

BOOL sub_2497711EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OUTLINED_FUNCTION_0_6(a1, a2, a3, a4) == -1;
}

uint64_t sub_249771208(unsigned int a1, unsigned int a2)
{
  _BOOL4 v3;

  v3 = a1 >= a2 && HIWORD(a2) < HIWORD(a1);
  return a2 < a1 || v3;
}

void sub_249771234(const void *a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16[9];
  __int16 v17;
  char v18[70];

  v8 = OUTLINED_FUNCTION_9_4((int)a1, a1, a3, a4, a5, a6, a7, a8, v16[0], v16[1], v16[2], v16[3], v16[4], v16[5], v16[6], v16[7], v16[8], v17, v18[0]);
  OUTLINED_FUNCTION_4_5(v8, v9, v10, v11, v12, v13, v14, v15, v16[0], SBYTE4(v16[0]));
  static UniversalControlLink.< infix(_:_:)((unsigned __int8 *)v16 + 4, (unsigned __int8 *)v18);
  OUTLINED_FUNCTION_8_4();
}

uint64_t sub_24977126C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  if (static UniversalControlUUID.compare(lhs:rhs:)(*(_QWORD *)a2, v9, *(_QWORD *)a1, v11) == -1)
    return 1;
  if (static UniversalControlUUID.compare(lhs:rhs:)(v10, v11, v8, v9) == -1)
    return 0;
  v12 = sub_24978B8C8(v8, v9, v4, v5, v10, v11, v6, v7);
  if (v12 == 2)
    v12 = sub_24978B990(*(unsigned __int8 *)(a2 + 32) | (*(unsigned __int16 *)(a2 + 34) << 16), *(unsigned __int8 *)(a1 + 32) | (*(unsigned __int16 *)(a1 + 34) << 16));
  return v12 & 1;
}

void sub_249771354(uint64_t a1, double *a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  double v8;
  double v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  char v30[70];

  v8 = a2[9];
  v9 = *(double *)(a1 + 72);
  if (v9 >= v8 && v8 >= v9)
  {
    v10 = OUTLINED_FUNCTION_9_4(a1, a2, a3, a4, a5, a6, a7, a8, v18, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30[0]);
    OUTLINED_FUNCTION_4_5(v10, v11, v12, v13, v14, v15, v16, v17, v19, v20);
    sub_2497F1164(v30);
  }
  OUTLINED_FUNCTION_8_4();
}

void static UniversalControlDisplayID.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (!OUTLINED_FUNCTION_23_2(a1, a2, a3, a4, a5, a6))
  {
    v6 = OUTLINED_FUNCTION_21_4();
    static UniversalControlUUID.compare(lhs:rhs:)(v6, v7, v8, v9);
  }
  OUTLINED_FUNCTION_81();
}

uint64_t sub_2497713FC(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_249836DA8();
    v1 = sub_249836E44();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

uint64_t sub_2497714B8()
{
  return sub_24983769C();
}

uint64_t sub_249771590()
{
  return sub_2498376A8();
}

void sub_2497715B4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2497715F4()
{
  sub_249836D84();
  return OUTLINED_FUNCTION_13_4();
}

uint64_t sub_249771678()
{
  sub_249836D84();
  return OUTLINED_FUNCTION_13_4();
}

uint64_t sub_2497716C0()
{
  return sub_2498376A8();
}

void static UniversalControlDisplayID.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (OUTLINED_FUNCTION_23_2(a1, a2, a3, a4, a5, a6) != -1
    && static UniversalControlUUID.compare(lhs:rhs:)(a5, a6, a1, a2) != -1)
  {
    v10 = OUTLINED_FUNCTION_21_4();
    sub_249772148(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_13_1();
}

uint64_t UniversalControlDisplayID.deviceID.setter(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  *v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t (*UniversalControlDisplayID.deviceID.modify())()
{
  return nullsub_1;
}

uint64_t UniversalControlDisplayID.displayUUID.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t UniversalControlDisplayID.displayUUID.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*UniversalControlDisplayID.displayUUID.modify())()
{
  return nullsub_1;
}

BOOL sub_24977189C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_2497718AC()
{
  return sub_2498376A8();
}

uint64_t sub_2497718D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x656369766564 && a2 == 0xE600000000000000;
  if (v2 || (sub_2498375C4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79616C70736964 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2498375C4();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2497719B4()
{
  return 2;
}

uint64_t sub_2497719BC()
{
  sub_249837690();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  return 0;
}

uint64_t sub_249771A0C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x79616C70736964;
  else
    return 0x656369766564;
}

BOOL sub_249771A40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24977189C(*a1, *a2);
}

uint64_t sub_249771A4C()
{
  return sub_2497719BC();
}

uint64_t sub_249771A54()
{
  return sub_2497718AC();
}

uint64_t sub_249771A5C()
{
  char *v0;

  return sub_249771A0C(*v0);
}

uint64_t sub_249771A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2497718D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249771A88()
{
  return OUTLINED_FUNCTION_66_1();
}

uint64_t sub_249771AA4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2497719B4();
  *a1 = result;
  return result;
}

uint64_t sub_249771AC8()
{
  sub_249772630();
  return sub_249837750();
}

uint64_t sub_249771AF0()
{
  sub_249772630();
  return sub_24983775C();
}

uint64_t UniversalControlDisplayID.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2578807F0);
  OUTLINED_FUNCTION_15_3();
  MEMORY[0x24BDAC7A8](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249772630();
  sub_249837720();
  sub_24977266C();
  OUTLINED_FUNCTION_6_3();
  sub_2497726A8();
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_20_3();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

uint64_t UniversalControlDisplayID.encode(to:)(_QWORD *a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6;
  char v7;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v6 = a3;
  v7 = a2;
  v9 = a2 >> 8;
  v15 = a5;
  v16 = a2 >> 16;
  v17 = a2 >> 24;
  v18 = HIDWORD(a2);
  v19 = a2 >> 40;
  v20 = HIWORD(a2);
  v21 = HIBYTE(a2);
  v22 = a3 >> 8;
  v23 = a3 >> 16;
  v24 = a3 >> 24;
  v25 = HIDWORD(a3);
  v26 = a3 >> 40;
  v27 = HIWORD(a3);
  v28 = HIBYTE(a3);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880810);
  v30 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249772630();
  sub_249837744();
  LOBYTE(v31) = v7;
  BYTE1(v31) = v9;
  BYTE2(v31) = v16;
  BYTE3(v31) = v17;
  BYTE4(v31) = v18;
  BYTE5(v31) = v19;
  BYTE6(v31) = v20;
  HIBYTE(v31) = v21;
  LOBYTE(v32) = v6;
  BYTE1(v32) = v22;
  BYTE2(v32) = v23;
  BYTE3(v32) = v24;
  BYTE4(v32) = v25;
  BYTE5(v32) = v26;
  BYTE6(v32) = v27;
  HIBYTE(v32) = v28;
  v33 = 0;
  sub_2497726E4();
  OUTLINED_FUNCTION_24_4();
  v13 = v29;
  sub_2498374F8();
  if (!v13)
  {
    v31 = a4;
    v32 = v15;
    v33 = 1;
    sub_249772720();
    OUTLINED_FUNCTION_24_4();
    sub_2498374F8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v10);
}

uint64_t sub_249771EC8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = UniversalControlDisplayID.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_249771FDC(_QWORD *a1)
{
  uint64_t v1;

  return UniversalControlDisplayID.encode(to:)(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void UniversalControlDisplayID.description.getter(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_0_9(a1, a2, a3, a4);
  OUTLINED_FUNCTION_15_3();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_4_9();
  v5 = OUTLINED_FUNCTION_18_5();
  MEMORY[0x24BCF7D34](v5);
  OUTLINED_FUNCTION_12_4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_4_9();
  OUTLINED_FUNCTION_16_4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_5();
}

void sub_249772094()
{
  unint64_t *v0;

  UniversalControlDisplayID.description.getter(*v0, v0[1], v0[2], v0[3]);
}

void UniversalControlDisplayID.debugDescription.getter(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_0_9(a1, a2, a3, a4);
  OUTLINED_FUNCTION_15_3();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_4_9();
  v5 = OUTLINED_FUNCTION_18_5();
  MEMORY[0x24BCF7D34](v5);
  OUTLINED_FUNCTION_12_4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_2_9();
  OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_4_9();
  OUTLINED_FUNCTION_16_4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_5();
}

void sub_24977213C()
{
  unint64_t *v0;

  UniversalControlDisplayID.debugDescription.getter(*v0, v0[1], v0[2], v0[3]);
}

void sub_249772148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (OUTLINED_FUNCTION_9_6(a1, a2, a3, a4) != -1)
    OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_81();
}

uint64_t sub_249772184(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2497721C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))static UniversalControlDisplayID.< infix(_:_:));
}

uint64_t sub_249772190(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2497721C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24975E8A4);
}

uint64_t sub_24977219C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2497721C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2497EC81C);
}

uint64_t sub_2497721A8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2497721C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24977114C);
}

uint64_t sub_2497721B4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2497721C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))static UniversalControlDisplayID.== infix(_:_:));
}

uint64_t sub_2497721C0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t UniversalControlDisplayID.hash(into:)()
{
  OUTLINED_FUNCTION_19_5();
  return OUTLINED_FUNCTION_19_5();
}

uint64_t UniversalControlDisplayID.hashValue.getter()
{
  sub_249837690();
  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_19_5();
  return sub_2498376E4();
}

uint64_t sub_2497725B8()
{
  return UniversalControlDisplayID.hashValue.getter();
}

uint64_t sub_2497725C4()
{
  return UniversalControlDisplayID.hash(into:)();
}

uint64_t sub_2497725D0()
{
  sub_249837690();
  UniversalControlUUID.hash(into:)();
  UniversalControlUUID.hash(into:)();
  return sub_2498376E4();
}

unint64_t sub_249772630()
{
  unint64_t result;

  result = qword_2578807F8;
  if (!qword_2578807F8)
  {
    result = MEMORY[0x24BCF8F94](&unk_249839F00, &type metadata for UniversalControlDisplayID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578807F8);
  }
  return result;
}

unint64_t sub_24977266C()
{
  unint64_t result;

  result = qword_257880800;
  if (!qword_257880800)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDeviceID, &type metadata for UniversalControlDeviceID);
    atomic_store(result, (unint64_t *)&qword_257880800);
  }
  return result;
}

unint64_t sub_2497726A8()
{
  unint64_t result;

  result = qword_257880808;
  if (!qword_257880808)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlUUID, &type metadata for UniversalControlUUID);
    atomic_store(result, (unint64_t *)&qword_257880808);
  }
  return result;
}

unint64_t sub_2497726E4()
{
  unint64_t result;

  result = qword_257880818;
  if (!qword_257880818)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDeviceID, &type metadata for UniversalControlDeviceID);
    atomic_store(result, (unint64_t *)&qword_257880818);
  }
  return result;
}

unint64_t sub_249772720()
{
  unint64_t result;

  result = qword_257880820;
  if (!qword_257880820)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlUUID, &type metadata for UniversalControlUUID);
    atomic_store(result, (unint64_t *)&qword_257880820);
  }
  return result;
}

unint64_t sub_249772760()
{
  unint64_t result;

  result = qword_257880828;
  if (!qword_257880828)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDisplayID, &type metadata for UniversalControlDisplayID);
    atomic_store(result, (unint64_t *)&qword_257880828);
  }
  return result;
}

__n128 __swift_memcpy32_1(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlDisplayID()
{
  return &type metadata for UniversalControlDisplayID;
}

uint64_t storeEnumTagSinglePayload for UniversalControlDisplayID.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_249772804 + 4 * byte_249839CBC[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_249772838 + 4 * byte_249839CB7[v4]))();
}

uint64_t sub_249772838(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249772840(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249772848);
  return result;
}

uint64_t sub_249772854(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24977285CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_249772860(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249772868(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlDisplayID.CodingKeys()
{
  return &type metadata for UniversalControlDisplayID.CodingKeys;
}

unint64_t sub_249772888()
{
  unint64_t result;

  result = qword_257880830;
  if (!qword_257880830)
  {
    result = MEMORY[0x24BCF8F94](&unk_249839ED8, &type metadata for UniversalControlDisplayID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257880830);
  }
  return result;
}

unint64_t sub_2497728C8()
{
  unint64_t result;

  result = qword_257880838;
  if (!qword_257880838)
  {
    result = MEMORY[0x24BCF8F94](&unk_249839E48, &type metadata for UniversalControlDisplayID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257880838);
  }
  return result;
}

unint64_t sub_249772908()
{
  unint64_t result;

  result = qword_257880840;
  if (!qword_257880840)
  {
    result = MEMORY[0x24BCF8F94](&unk_249839E70, &type metadata for UniversalControlDisplayID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257880840);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_9(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 - 232) = a1 >> 16;
  *(_QWORD *)(v4 - 224) = a1 >> 8;
  *(_QWORD *)(v4 - 248) = HIDWORD(a1);
  *(_QWORD *)(v4 - 240) = a1 >> 24;
  *(_QWORD *)(v4 - 256) = a1 >> 40;
  *(_QWORD *)(v4 - 264) = HIWORD(a1);
  *(_QWORD *)(v4 - 272) = HIBYTE(a1);
  *(_QWORD *)(v4 - 280) = a2 >> 8;
  *(_QWORD *)(v4 - 288) = a2 >> 16;
  *(_QWORD *)(v4 - 296) = a2 >> 24;
  *(_QWORD *)(v4 - 304) = HIDWORD(a2);
  *(_QWORD *)(v4 - 120) = a3 >> 16;
  *(_QWORD *)(v4 - 112) = a3 >> 8;
  *(_QWORD *)(v4 - 136) = HIDWORD(a3);
  *(_QWORD *)(v4 - 128) = a3 >> 24;
  *(_QWORD *)(v4 - 152) = HIWORD(a3);
  *(_QWORD *)(v4 - 144) = a3 >> 40;
  *(_QWORD *)(v4 - 168) = a4 >> 8;
  *(_QWORD *)(v4 - 160) = HIBYTE(a3);
  *(_QWORD *)(v4 - 184) = a4 >> 24;
  *(_QWORD *)(v4 - 176) = a4 >> 16;
  *(_QWORD *)(v4 - 200) = a4 >> 40;
  *(_QWORD *)(v4 - 192) = HIDWORD(a4);
  *(_QWORD *)(v4 - 216) = HIBYTE(a4);
  *(_QWORD *)(v4 - 208) = HIWORD(a4);
  return sub_249836A18();
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = 0;
  *(_QWORD *)(v0 - 96) = 0xE000000000000000;
  return sub_2498369E8();
}

uint64_t OUTLINED_FUNCTION_2_9()
{
  return sub_2498369E8();
}

uint64_t OUTLINED_FUNCTION_3_8()
{
  return sub_2498369B8();
}

uint64_t OUTLINED_FUNCTION_4_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return sub_249837438();
}

uint64_t OUTLINED_FUNCTION_9_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return static UniversalControlUUID.compare(lhs:rhs:)(v3, v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v0;
  *(_QWORD *)(v2 - 96) = v1;
  return sub_249836DB4();
}

uint64_t OUTLINED_FUNCTION_12_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_16_4()
{
  return sub_249836DB4();
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return sub_2497713FC(8);
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  return sub_24983769C();
}

uint64_t OUTLINED_FUNCTION_20_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_21_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, a5, a6);
}

uint64_t OUTLINED_FUNCTION_24_4()
{
  uint64_t v0;

  return v0 - 96;
}

uint64_t sub_249772C10(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  if (a1 >> 62)
    goto LABEL_9;
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    while ((a1 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        swift_retain();
        goto LABEL_6;
      }
      __break(1u);
      __break(1u);
LABEL_9:
      if (!sub_249837324())
        goto LABEL_10;
    }
    MEMORY[0x24BCF8148](0, a1);
LABEL_6:
    sub_2497CFB08();
    UniversalControlDevice.bounds.getter();
    __asm { BR              X9 }
  }
LABEL_10:
  v4 = MEMORY[0x24BEE4AF8];
  swift_release();
  swift_bridgeObjectRelease();
  return v4;
}

void sub_249772E9C(_BYTE *a1@<X8>)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_249772F64();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  a1[14] = v16;
  a1[15] = v17;
}

uint64_t sub_249772F38(unint64_t *a1)
{
  return sub_249772F98(*a1, a1[1]);
}

void sub_249772F64()
{
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_24_0();
}

uint64_t sub_249772F98(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  char v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v3 = a2;
  v4 = a1;
  v5 = a1 >> 8;
  v6 = a1 >> 16;
  v7 = a1 >> 24;
  v8 = HIDWORD(a1);
  v9 = a1 >> 40;
  v10 = HIWORD(a1);
  v11 = HIBYTE(a1);
  v14 = a2 >> 8;
  v15 = a2 >> 16;
  v18 = HIDWORD(a2);
  v19 = a2 >> 40;
  v20 = HIWORD(a2);
  v12 = (_BYTE *)(v2 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
  v16 = a2 >> 24;
  v17 = HIBYTE(a2);
  result = OUTLINED_FUNCTION_44_0();
  *v12 = v4;
  v12[1] = v5;
  v12[2] = v6;
  v12[3] = v7;
  v12[4] = v8;
  v12[5] = v9;
  v12[6] = v10;
  v12[7] = v11;
  v12[8] = v3;
  v12[9] = v14;
  v12[10] = v15;
  v12[11] = v16;
  v12[12] = v18;
  v12[13] = v19;
  v12[14] = v20;
  v12[15] = v17;
  return result;
}

void sub_2497730A0(_QWORD *a1)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  _OWORD *v5;

  v3 = (char *)malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  *((_QWORD *)v3 + 3) = v1;
  *((_QWORD *)v3 + 4) = v4;
  v5 = (_OWORD *)(v1 + v4);
  OUTLINED_FUNCTION_44_0();
  *(_OWORD *)(v3 + 40) = *v5;
  OUTLINED_FUNCTION_81();
}

void sub_249773100(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int16 v4;
  char v5;
  int v6;

  v1 = *a1;
  v2 = *(_QWORD *)(v1 + 24) + *(_QWORD *)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 48);
  v4 = *(_WORD *)(v1 + 53);
  v5 = *(_BYTE *)(v1 + 55);
  v6 = *(_DWORD *)(v1 + 49);
  *(_QWORD *)v2 = *(_QWORD *)(v1 + 40);
  *(_BYTE *)(v2 + 8) = v3;
  *(_DWORD *)(v2 + 9) = v6;
  *(_WORD *)(v2 + 13) = v4;
  *(_BYTE *)(v2 + 15) = v5;
  free((void *)v1);
}

void sub_249773138()
{
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_33_3();
  OUTLINED_FUNCTION_24_0();
}

void sub_249773174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_3();
}

void sub_2497731C0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_22_4();
  *v0 = v2;
  v2[5] = v1;
  v3 = v1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  v4 = *(_QWORD *)(v3 + 24);
  v2[3] = *(_QWORD *)(v3 + 16);
  v2[4] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_81();
}

void sub_249773218(void **a1, char a2)
{
  sub_2497736C8(a1, a2);
}

void sub_249773224()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_249773284(v0);
}

void sub_24977324C()
{
  OUTLINED_FUNCTION_16();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_24_0();
}

void sub_249773284(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v3 + 32) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_0();
}

void sub_2497732C8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_50_1();
  *v0 = v2;
  v2[4] = v1;
  v3 = v1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  v2[3] = *(_QWORD *)(v3 + 32);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_81();
}

void sub_249773320(uint64_t a1, char a2)
{
  sub_249773434(a1, a2, sub_249773284);
}

void sub_24977332C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_24977338C(v0);
}

void sub_249773354()
{
  OUTLINED_FUNCTION_16();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_24_0();
}

void sub_24977338C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v3 + 40) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_0();
}

void sub_2497733D0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_50_1();
  *v0 = v2;
  v2[4] = v1;
  v3 = v1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  v2[3] = *(_QWORD *)(v3 + 40);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_81();
}

void sub_249773428(uint64_t a1, char a2)
{
  sub_249773434(a1, a2, sub_24977338C);
}

void sub_249773434(uint64_t a1, char a2, void (*a3)(uint64_t))
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  if ((a2 & 1) != 0)
  {
    v6 = swift_bridgeObjectRetain();
    a3(v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    a3(v5);
  }
  free(v4);
}

void sub_249773488(char *a1)
{
  char v1;

  v1 = *a1;
  sub_2497734F8(&v1);
}

void sub_2497734BC(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  *a1 = *(_BYTE *)(v3 + 48);
  OUTLINED_FUNCTION_24_0();
}

void sub_2497734F8(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v2 = *a1;
  v3 = v1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_44_0();
  *(_BYTE *)(v3 + 48) = v2;
  OUTLINED_FUNCTION_3_3();
}

void sub_249773538()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_22_4();
  *v0 = v2;
  v3 = OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  v2[3] = v1;
  v2[4] = v3;
  v4 = v1 + v3;
  OUTLINED_FUNCTION_44_0();
  *((_BYTE *)v2 + 40) = *(_BYTE *)(v4 + 48);
  OUTLINED_FUNCTION_81();
}

void sub_249773590(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  *(_BYTE *)(*(_QWORD *)(v1 + 24) + *(_QWORD *)(v1 + 32) + 48) = *(_BYTE *)(v1 + 40);
  free((void *)v1);
}

void sub_2497735A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v7 = *a1;
  v6 = a1[1];
  OUTLINED_FUNCTION_73_0();
  a5(v7, v6);
  OUTLINED_FUNCTION_81();
}

void sub_2497735DC()
{
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_33_3();
  OUTLINED_FUNCTION_24_0();
}

void sub_249773618(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = v2 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v5 + 56) = a1;
  *(_QWORD *)(v5 + 64) = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_3();
}

void sub_249773664()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_22_4();
  *v0 = v2;
  v2[5] = v1;
  v3 = v1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  v4 = *(_QWORD *)(v3 + 64);
  v2[3] = *(_QWORD *)(v3 + 56);
  v2[4] = v4;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_81();
}

void sub_2497736BC(void **a1, char a2)
{
  sub_2497736C8(a1, a2);
}

void sub_2497736C8(void **a1, char a2)
{
  void *v2;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_56_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_56_0();
  }
  free(v2);
}

void sub_249773728(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_249836A84();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  sub_24977381C((uint64_t)v4);
}

void sub_2497737A8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  v4 = v3 + *(int *)(type metadata accessor for UniversalControlDevice.Properties(0) + 40);
  v5 = OUTLINED_FUNCTION_5_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
  OUTLINED_FUNCTION_24_0();
}

uint64_t type metadata accessor for UniversalControlDevice.Properties(uint64_t a1)
{
  return sub_24976B000(a1, qword_257880AC0);
}

void sub_24977381C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  v3 = v1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_44_0();
  v4 = v3 + *(int *)(type metadata accessor for UniversalControlDevice.Properties(0) + 40);
  v5 = OUTLINED_FUNCTION_5_6();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(v4, a1, v5);
  swift_endAccess();
  v6 = OUTLINED_FUNCTION_31_3();
  v7(v6);
  OUTLINED_FUNCTION_3_3();
}

void sub_24977389C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = OUTLINED_FUNCTION_5_6();
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  v3[13] = v7;
  v3[14] = v8;
  v9 = v1 + v8;
  OUTLINED_FUNCTION_16();
  v10 = OUTLINED_FUNCTION_54_1();
  v3[15] = v10;
  v11 = v9 + *(int *)(v10 + 40);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v3[16] = v12;
  OUTLINED_FUNCTION_46_1((uint64_t)v7, v11, v12);
  OUTLINED_FUNCTION_10_0();
}

void sub_249773948(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 120);
  if ((a2 & 1) != 0)
  {
    v4 = *(void **)(v2 + 104);
    v6 = *(_QWORD *)(v2 + 88);
    v5 = *(void **)(v2 + 96);
    v7 = *(_QWORD *)(v2 + 80);
    v8 = *(_QWORD *)(v2 + 72) + *(_QWORD *)(v2 + 112);
    OUTLINED_FUNCTION_44_1((uint64_t)v5, (uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 128));
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_44_1(v8 + *(int *)(v3 + 40), (uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 24));
    swift_endAccess();
    v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v5, v7);
    v9(v4, v7);
  }
  else
  {
    v5 = *(void **)(v2 + 96);
    v4 = *(void **)(v2 + 104);
    v10 = *(_QWORD *)(v2 + 80);
    v11 = *(_QWORD *)(v2 + 88);
    v12 = *(_QWORD *)(v2 + 72) + *(_QWORD *)(v2 + 112);
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_44_1(v12 + *(int *)(v3 + 40), (uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 24));
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v11 + 8))(v4, v10);
  }
  free(v4);
  free(v5);
  free((void *)v2);
}

uint64_t UniversalControlDevice.DeviceType.init(model:typeIdentifier:)@<X0>(uint64_t a1@<X2>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  char v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char v26;
  uint64_t v27;
  uint64_t v28;

  v4 = OUTLINED_FUNCTION_5_6();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_66_2();
  v27 = v9;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  sub_249773D10(a1, (uint64_t)&v27 - v14);
  OUTLINED_FUNCTION_35_2((uint64_t)v15);
  v28 = v5;
  if (v16)
  {
    sub_249773D58((uint64_t)v15);
  }
  else
  {
    sub_249836A60();
    v17 = sub_249836A78();
    OUTLINED_FUNCTION_32_3((uint64_t)v7);
    OUTLINED_FUNCTION_32_3((uint64_t)v15);
    if ((v17 & 1) != 0)
      goto LABEL_6;
  }
  if ((OUTLINED_FUNCTION_24_5() & 1) != 0)
  {
LABEL_6:
    sub_249773D58(a1);
    result = OUTLINED_FUNCTION_42();
    v19 = 0;
    goto LABEL_21;
  }
  v20 = a1;
  sub_249773D10(a1, (uint64_t)v13);
  OUTLINED_FUNCTION_35_2((uint64_t)v13);
  if (v16)
  {
    sub_249773D58((uint64_t)v13);
    v22 = v28;
  }
  else
  {
    sub_249836A6C();
    v21 = OUTLINED_FUNCTION_58_1();
    v22 = v28;
    OUTLINED_FUNCTION_32_3((uint64_t)v7);
    OUTLINED_FUNCTION_32_3((uint64_t)v13);
    if ((v21 & 1) != 0)
      goto LABEL_12;
  }
  if ((OUTLINED_FUNCTION_24_5() & 1) != 0)
  {
LABEL_12:
    OUTLINED_FUNCTION_51_1();
    result = OUTLINED_FUNCTION_42();
    v19 = 1;
    goto LABEL_21;
  }
  v23 = v27;
  sub_249773D10(v20, v27);
  OUTLINED_FUNCTION_35_2(v23);
  if (v16)
  {
    sub_249773D58(v23);
  }
  else
  {
    sub_249836A3C();
    v24 = OUTLINED_FUNCTION_58_1();
    v25 = *(void (**)(char *, uint64_t))(v22 + 8);
    v25(v7, v4);
    v25((char *)v23, v4);
    if ((v24 & 1) != 0)
    {
      OUTLINED_FUNCTION_51_1();
      result = OUTLINED_FUNCTION_42();
      v19 = 2;
      goto LABEL_21;
    }
  }
  v26 = OUTLINED_FUNCTION_24_5();
  OUTLINED_FUNCTION_42();
  result = OUTLINED_FUNCTION_51_1();
  if ((v26 & 1) != 0)
    v19 = 2;
  else
    v19 = 3;
LABEL_21:
  *a2 = v19;
  return result;
}

uint64_t sub_249773D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249773D58(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static UniversalControlDevice.DeviceType.isSimulator(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = OUTLINED_FUNCTION_5_6();
  __swift_storeEnumTagSinglePayload((uint64_t)v2, 1, 1, v3);
  OUTLINED_FUNCTION_74();
  UniversalControlDevice.DeviceType.init(model:typeIdentifier:)((uint64_t)v2, &v5);
  OUTLINED_FUNCTION_81();
}

BOOL static UniversalControlDevice.DeviceType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void UniversalControlDevice.DeviceType.hash(into:)()
{
  sub_2498376A8();
  OUTLINED_FUNCTION_27();
}

void UniversalControlDevice.DeviceType.hashValue.getter()
{
  OUTLINED_FUNCTION_3_4();
  sub_2498376A8();
  sub_2498376E4();
  OUTLINED_FUNCTION_40();
}

uint64_t sub_249773EA8(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;

  if (static UniversalControlUUID.compare(lhs:rhs:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8)))
  {
    return 0;
  }
  v5 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (!v5 && (sub_2498375C4() & 1) == 0)
    return 0;
  if ((sub_24977D458(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) == 0
    || (sub_24977D474(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48))
  {
    return 0;
  }
  v6 = *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56) && *(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64);
  if (!v6 && (sub_2498375C4() & 1) == 0)
    return 0;
  type metadata accessor for UniversalControlDevice.Properties(0);
  return sub_249836A54();
}

uint64_t sub_249773F70(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;

  sub_24983769C();
  swift_bridgeObjectRetain();
  sub_249836D84();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  sub_249778468(a1, v3, UniversalControlDisplay.hash(into:));
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain();
  sub_249778468(a1, v4, UniversalControlInputDevice.hash(into:));
  swift_bridgeObjectRelease();
  sub_2498376A8();
  swift_bridgeObjectRetain();
  sub_249836D84();
  swift_bridgeObjectRelease();
  type metadata accessor for UniversalControlDevice.Properties(0);
  sub_249836A84();
  sub_249759088(&qword_2578808C8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE63E0]);
  return sub_249836CD0();
}

uint64_t sub_2497740D8()
{
  _BYTE v1[72];

  sub_249837690();
  sub_249773F70((uint64_t)v1);
  return sub_2498376E4();
}

uint64_t sub_249774120()
{
  _BYTE v1[72];

  sub_249837690();
  sub_249773F70((uint64_t)v1);
  return sub_2498376E4();
}

void UniversalControlDevice.__allocating_init(id:displayName:displays:inputDevices:model:typeIdentifier:)(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_allocObject();
  UniversalControlDevice.init(id:displayName:displays:inputDevices:model:typeIdentifier:)(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_40();
}

uint64_t UniversalControlDevice.init(id:displayName:displays:inputDevices:model:typeIdentifier:)(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v39;

  v12 = a2;
  v13 = a1;
  v14 = a1 >> 8;
  v22 = a1 >> 16;
  v23 = a1 >> 24;
  v24 = HIDWORD(a1);
  v25 = a1 >> 40;
  v26 = HIWORD(a1);
  v27 = HIBYTE(a1);
  v28 = a2 >> 8;
  v29 = a2 >> 16;
  v30 = a2 >> 24;
  v31 = HIDWORD(a2);
  v32 = a2 >> 40;
  v33 = HIWORD(a2);
  v34 = HIBYTE(a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_40_2();
  v16 = OUTLINED_FUNCTION_5_6();
  v17 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_71_1(v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16));
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v16);
  OUTLINED_FUNCTION_74();
  UniversalControlDevice.DeviceType.init(model:typeIdentifier:)(v9, &v39);
  v18 = v39;
  v19 = v8 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  *(_BYTE *)v19 = v13;
  *(_BYTE *)(v19 + 1) = v14;
  *(_BYTE *)(v19 + 2) = v22;
  *(_BYTE *)(v19 + 3) = v23;
  *(_BYTE *)(v19 + 4) = v24;
  *(_BYTE *)(v19 + 5) = v25;
  *(_BYTE *)(v19 + 6) = v26;
  *(_BYTE *)(v19 + 7) = v27;
  *(_BYTE *)(v19 + 8) = v12;
  *(_BYTE *)(v19 + 9) = v28;
  *(_BYTE *)(v19 + 10) = v29;
  *(_BYTE *)(v19 + 11) = v30;
  *(_BYTE *)(v19 + 12) = v31;
  *(_BYTE *)(v19 + 13) = v32;
  *(_BYTE *)(v19 + 14) = v33;
  *(_BYTE *)(v19 + 15) = v34;
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = a4;
  *(_QWORD *)(v19 + 32) = a5;
  *(_QWORD *)(v19 + 40) = a6;
  *(_BYTE *)(v19 + 48) = v18;
  *(_QWORD *)(v19 + 56) = a7;
  *(_QWORD *)(v19 + 64) = a8;
  v20 = type metadata accessor for UniversalControlDevice.Properties(0);
  OUTLINED_FUNCTION_71_1(v19 + *(int *)(v20 + 40), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32));
  return v8;
}

uint64_t sub_2497743CC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v7;
  BOOL v9;
  char v10;

  result = 25705;
  if (a1 != 25705 || a2 != 0xE200000000000000)
  {
    if ((sub_2498375C4() & 1) != 0)
      return a1;
    result = 1701667182;
    if (a1 != 1701667182 || a2 != 0xE400000000000000)
    {
      v7 = sub_2498375C4();
      v9 = a1 == 1701869940 && a2 == 0xE400000000000000;
      if ((v7 & 1) != 0 || v9)
        return a1;
      v10 = sub_2498375C4();
      result = a1;
      if ((v10 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_164()
{
  return 0;
}

uint64_t sub_2497744C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_2498375C4();
}

uint64_t sub_2497744E0()
{
  swift_bridgeObjectRetain();
  sub_249836D84();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249774528()
{
  sub_249837690();
  swift_bridgeObjectRetain();
  sub_249836D84();
  swift_bridgeObjectRelease();
  return sub_2498376E4();
}

uint64_t sub_249774584()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2497745B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_2497743CC(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_2497745D4()
{
  return OUTLINED_FUNCTION_66_1();
}

uint64_t sub_2497745F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = OUTLINED_FUNCTION_164();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_249774614(uint64_t *a1, uint64_t *a2)
{
  return sub_2497744C4(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_249774628()
{
  return sub_249774528();
}

uint64_t sub_249774630()
{
  return sub_2497744E0();
}

uint64_t sub_249774638()
{
  sub_249837690();
  swift_bridgeObjectRetain();
  sub_249836D84();
  swift_bridgeObjectRelease();
  return sub_2498376E4();
}

uint64_t sub_24977468C()
{
  sub_249774D7C();
  return sub_249837750();
}

uint64_t sub_2497746B4()
{
  sub_249774D7C();
  return sub_24983775C();
}

uint64_t UniversalControlDevice.__allocating_init(from:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  UniversalControlDevice.init(from:)(a1);
  return v2;
}

uint64_t UniversalControlDevice.init(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int EnumTagSinglePayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  __int128 v74;
  uint64_t v75;

  v69 = type metadata accessor for UniversalControlDevice.Properties(0);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_65_1();
  v67 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880858);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_65_1();
  v65 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880850);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_66_2();
  v64 = v8;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v68 = (char *)&v53 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v66 = (char *)&v53 - v12;
  v13 = sub_249836A84();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880860);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_38_1();
  v70 = a1;
  v19 = (_QWORD *)OUTLINED_FUNCTION_33_3();
  __swift_project_boxed_opaque_existential_1(v19, v20);
  sub_249774D7C();
  v21 = v75;
  sub_249837720();
  if (v21)
    goto LABEL_3;
  v75 = v14;
  v62 = v16;
  v63 = v18;
  v22 = v69;
  v72 = 25705;
  v73 = 0xE200000000000000;
  sub_24977266C();
  v23 = v1;
  sub_249837438();
  v61 = v74;
  *(_QWORD *)&v74 = 1701667182;
  *((_QWORD *)&v74 + 1) = 0xE400000000000000;
  v24 = OUTLINED_FUNCTION_12_5();
  v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578800E8);
  *(_QWORD *)&v74 = 1886611812;
  *((_QWORD *)&v74 + 1) = 0xE400000000000000;
  sub_249775204(&qword_257880870);
  OUTLINED_FUNCTION_53_0();
  sub_249837438();
  v27 = v72;
  OUTLINED_FUNCTION_49_1();
  *(_QWORD *)&v74 = v28;
  *((_QWORD *)&v74 + 1) = v29;
  v59 = OUTLINED_FUNCTION_12_5();
  v60 = v30;
  *(_QWORD *)&v74 = 1701869940;
  *((_QWORD *)&v74 + 1) = 0xE400000000000000;
  OUTLINED_FUNCTION_12_5();
  v55 = v27;
  v54 = v24;
  v56 = v26;
  v57 = v17;
  v58 = v23;
  v35 = (uint64_t)v68;
  sub_249836A90();
  v36 = v13;
  if (__swift_getEnumTagSinglePayload(v35, 1, v13) == 1)
  {
    v37 = sub_249836A24();
    __swift_storeEnumTagSinglePayload(v65, 1, 1, v37);
    OUTLINED_FUNCTION_73_0();
    v38 = (uint64_t)v66;
    sub_249836A48();
    sub_249773D58(v35);
    v39 = v67;
    v40 = v62;
    v41 = v75;
  }
  else
  {
    v41 = v75;
    v38 = (uint64_t)v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v66, v35, v13);
    __swift_storeEnumTagSinglePayload(v38, 0, 1, v13);
    v39 = v67;
    v40 = v62;
  }
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v38, 1, v36);
  v43 = v63;
  if (EnumTagSinglePayload == 1)
  {
    OUTLINED_FUNCTION_36_3();
    OUTLINED_FUNCTION_36_3();
    swift_bridgeObjectRelease();
    sub_249773D58(v38);
    *(_QWORD *)&v74 = 1701869940;
    *((_QWORD *)&v74 + 1) = 0xE400000000000000;
    sub_2498371BC();
    swift_allocError();
    sub_249774DCC();
    v44 = v57;
    v45 = v58;
    sub_2498371A4();
    swift_bridgeObjectRelease();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v44);
LABEL_3:
    v32 = v70;
    v31 = v71;
    type metadata accessor for UniversalControlDevice(0);
    swift_deallocPartialClassInstance();
    v33 = v32;
    goto LABEL_4;
  }
  v75 = *(_QWORD *)(v41 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v75)(v40, v38, v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880888);
  *(_QWORD *)&v74 = 1935960424;
  *((_QWORD *)&v74 + 1) = 0xE400000000000000;
  sub_249774E10(&qword_257880890);
  OUTLINED_FUNCTION_53_0();
  sub_2498373D8();
  v68 = (char *)v72;
  v46 = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v64, v40, v36);
  __swift_storeEnumTagSinglePayload(v46, 0, 1, v36);
  v47 = v60;
  OUTLINED_FUNCTION_34_0();
  v48 = v59;
  UniversalControlDevice.DeviceType.init(model:typeIdentifier:)(v46, (char *)&v74);
  LODWORD(v67) = v74;
  if (v68)
    v49 = v68;
  else
    v49 = (char *)MEMORY[0x24BEE4AF8];
  v50 = OUTLINED_FUNCTION_45_2();
  v51(v50);
  ((void (*)(uint64_t, char *, uint64_t))v75)(v39 + *(int *)(v22 + 40), v62, v36);
  *(_OWORD *)v39 = v61;
  v52 = v56;
  *(_QWORD *)(v39 + 16) = v54;
  *(_QWORD *)(v39 + 24) = v52;
  *(_QWORD *)(v39 + 32) = v55;
  *(_QWORD *)(v39 + 40) = v49;
  *(_BYTE *)(v39 + 48) = v67;
  *(_QWORD *)(v39 + 56) = v48;
  *(_QWORD *)(v39 + 64) = v47;
  v31 = v71;
  sub_249774E6C(v39, v71 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
  v33 = v70;
LABEL_4:
  __swift_destroy_boxed_opaque_existential_0(v33);
  return v31;
}

unint64_t sub_249774D7C()
{
  unint64_t result;

  result = qword_257880868;
  if (!qword_257880868)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983A2D8, &type metadata for UniversalControlDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257880868);
  }
  return result;
}

uint64_t type metadata accessor for UniversalControlDevice(uint64_t a1)
{
  return sub_24976B000(a1, qword_257880910);
}

unint64_t sub_249774DCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257880880;
  if (!qword_257880880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257880860);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE33F8], v1);
    atomic_store(result, (unint64_t *)&qword_257880880);
  }
  return result;
}

void sub_249774E10(_QWORD *a1)
{
  uint64_t v1;

  if (!*a1)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257880888);
    OUTLINED_FUNCTION_63_1(v1, (uint64_t (*)(uint64_t))type metadata accessor for UniversalControlInputDevice);
    OUTLINED_FUNCTION_20_4();
  }
  OUTLINED_FUNCTION_2_4();
}

uint64_t sub_249774E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UniversalControlDevice.Properties(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249774EB0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for UniversalControlDevice.Properties(0);
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_39_2();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578808A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_38_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249774D7C();
  sub_249837744();
  swift_beginAccess();
  v7 = OUTLINED_FUNCTION_33_3();
  sub_249775184(v7, v8);
  sub_2497726E4();
  sub_2498374F8();
  if (!v12)
  {
    v10 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_13_5();
    if (!v10)
    {
      OUTLINED_FUNCTION_21_5();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2578800E8);
      sub_249775204(&qword_2578808A8);
      OUTLINED_FUNCTION_9_7();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257880888);
      sub_249774E10(&qword_2578808B8);
      OUTLINED_FUNCTION_9_7();
      v11 = *(_QWORD *)(v1 + 56);
      OUTLINED_FUNCTION_49_1();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_13_5();
      OUTLINED_FUNCTION_21_5();
      if (v11)
        goto LABEL_2;
      sub_249836A30();
      OUTLINED_FUNCTION_13_5();
    }
    OUTLINED_FUNCTION_21_5();
  }
LABEL_2:
  sub_2497751C8(v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
}

uint64_t sub_249775184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UniversalControlDevice.Properties(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2497751C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UniversalControlDevice.Properties(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_249775204(_QWORD *a1)
{
  uint64_t v1;

  if (!*a1)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578800E8);
    OUTLINED_FUNCTION_63_1(v1, type metadata accessor for UniversalControlDisplay);
    OUTLINED_FUNCTION_20_4();
  }
  OUTLINED_FUNCTION_2_4();
}

uint64_t UniversalControlDevice.deinit()
{
  uint64_t v0;

  sub_2497751C8(v0 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
  return v0;
}

uint64_t UniversalControlDevice.__deallocating_deinit()
{
  uint64_t v0;

  sub_2497751C8(v0 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
  return swift_deallocClassInstance();
}

uint64_t sub_2497752B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = UniversalControlDevice.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2497752DC(_QWORD *a1)
{
  return sub_249774EB0(a1);
}

void sub_2497752FC(_BYTE *a1@<X8>)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  sub_249772F64();
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = v15;
  a1[14] = v16;
  a1[15] = v17;
}

void UniversalControlDevice.label.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = sub_249836A18();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_16();
  sub_2498369E8();
  v2 = sub_2498369B8();
  v4 = v3;
  OUTLINED_FUNCTION_27_3(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v5 = sub_2497713F8(8, v2, v4);
  MEMORY[0x24BCF7D34](v5);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_0();
}

void *UniversalControlDevice.externalize(link:)@<X0>(_OWORD *__src@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  void *result;
  char v35;
  int v36;
  __int128 v37;
  char v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v46[2];
  uint64_t v47;
  char v48[16];
  uint64_t v49;
  char v50[16];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char __s2[16];
  char v55[16];
  uint64_t v56;
  _BYTE v57[72];
  uint64_t __s1[4];
  uint64_t v59;

  v3 = __src;
  v44 = a2;
  v59 = *MEMORY[0x24BDAC8D0];
  memcpy(&v57[2], __src, 0x46uLL);
  v4 = v2 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  v43 = v4;
  v5 = *(_QWORD *)(v4 + 32);
  v45 = v2;
  if (v5 >> 62)
  {
LABEL_25:
    OUTLINED_FUNCTION_59_0();
    v6 = sub_249837324();
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_59_0();
  }
  if (v6)
  {
    v7 = v57[66];
    *(_OWORD *)v55 = *v3;
    v8 = v3 + 1;
    v9 = 4;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        v3 = (_OWORD *)MEMORY[0x24BCF8148](v9 - 4, v5);
      }
      else
      {
        v3 = *(_OWORD **)(v5 + 8 * v9);
        swift_retain();
      }
      v10 = v9 - 3;
      if (__OFADD__(v9 - 4, 1))
      {
        __break(1u);
        goto LABEL_25;
      }
      v11 = (_OWORD *)((char *)v3 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      v12 = OUTLINED_FUNCTION_16();
      *(_OWORD *)v48 = v11[1];
      *(_OWORD *)__s1 = *v11;
      if (!OUTLINED_FUNCTION_43_2(v12, v13, v14, v15, v16, v17, v18, v19, v43, (uint64_t)v44, v45, v47, *(uint64_t *)v48, *(uint64_t *)&v48[8], v52, v53, v55[0], *(uint64_t *)&v55[8], *(uint64_t *)v55,
                            *(uint64_t *)&v55[8],
                            v56,
                            *(uint64_t *)v57,
                            *(uint64_t *)&v57[8],
                            *(uint64_t *)&v57[16],
                            *(uint64_t *)&v57[24],
                            *(uint64_t *)&v57[32],
                            *(uint64_t *)&v57[40],
                            *(uint64_t *)&v57[48],
                            *(uint64_t *)&v57[56],
                            *(uint64_t *)&v57[64],
                            __s1[0]))
      {
        *(_OWORD *)__s2 = *v8;
        __s1[1] = v51;
        if (!OUTLINED_FUNCTION_43_2(0, v20, v21, v22, v23, v24, v25, v26, v43, (uint64_t)v44, v45, v47, v49, v51, v52, v53, __s2[0], *(uint64_t *)&__s2[8], *(uint64_t *)v55,
                              *(uint64_t *)&v55[8],
                              v56,
                              *(uint64_t *)v57,
                              *(uint64_t *)&v57[8],
                              *(uint64_t *)&v57[16],
                              *(uint64_t *)&v57[24],
                              *(uint64_t *)&v57[32],
                              *(uint64_t *)&v57[40],
                              *(uint64_t *)&v57[48],
                              *(uint64_t *)&v57[56],
                              *(uint64_t *)&v57[64],
                              v49))
          break;
      }
      swift_release();
      ++v9;
      if (v10 == v6)
        goto LABEL_12;
    }
    OUTLINED_FUNCTION_60_1();
    sub_2497CFB08();
    v27 = v45;
    UniversalControlDevice.bounds.getter();
    sub_24977BB2C(v7);
    v39 = v38;
    swift_release();
    if ((v39 & 1) != 0)
      return memcpy(v44, &v57[2], 0x46uLL);
  }
  else
  {
LABEL_12:
    OUTLINED_FUNCTION_60_1();
    v27 = v45;
  }
  swift_retain();
  v28 = OUTLINED_FUNCTION_24();
  v29 = sub_249772C10(v28, v27, (uint64_t)&v57[2]);
  if (v29 < 0 || (v29 & 0x4000000000000000) != 0)
  {
    v40 = OUTLINED_FUNCTION_24();
    sub_249753B68(v40);
    v30 = v41;
    OUTLINED_FUNCTION_1();
  }
  else
  {
    v30 = v29 & 0xFFFFFFFFFFFFFF8;
    OUTLINED_FUNCTION_24();
  }
  __s1[0] = v30;
  sub_249776068(__s1);
  OUTLINED_FUNCTION_1();
  v31 = __s1[0];
  if ((__s1[0] & 0x8000000000000000) == 0 && (__s1[0] & 0x4000000000000000) == 0)
  {
    if (*(_QWORD *)(__s1[0] + 16))
      goto LABEL_19;
LABEL_28:
    OUTLINED_FUNCTION_17_0();
    __break(1u);
LABEL_29:
    OUTLINED_FUNCTION_23_3();
  }
  OUTLINED_FUNCTION_24();
  v42 = sub_249837324();
  OUTLINED_FUNCTION_17_0();
  if (!v42)
    goto LABEL_28;
LABEL_19:
  if ((v31 & 0xC000000000000001) != 0)
    goto LABEL_29;
  if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
    __break(1u);
  v32 = *(_QWORD *)(v31 + 32);
  swift_retain();
  OUTLINED_FUNCTION_17_0();
  v33 = (_OWORD *)(v32 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
  OUTLINED_FUNCTION_16();
  *(_OWORD *)v46 = v33[1];
  *(_OWORD *)v50 = *v33;
  result = (void *)swift_release();
  v35 = v57[66];
  v36 = *(_DWORD *)&v57[68];
  *v44 = *(_OWORD *)v50;
  v44[1] = *(_OWORD *)v46;
  v37 = *(_OWORD *)&v57[50];
  v44[2] = *(_OWORD *)&v57[34];
  v44[3] = v37;
  *((_BYTE *)v44 + 64) = v35;
  *(_DWORD *)((char *)v44 + 66) = v36;
  return result;
}

uint64_t UniversalControlDevice.bounds.getter()
{
  uint64_t v0;
  double MinX;
  double MinY;
  double MaxX;
  double v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double MaxY;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  v5 = v0 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  v6 = *(_QWORD *)(v5 + 32);
  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_24();
    if (v7)
      goto LABEL_3;
    return OUTLINED_FUNCTION_1();
  }
  OUTLINED_FUNCTION_24();
  if (!sub_249837324())
    return OUTLINED_FUNCTION_1();
LABEL_3:
  if ((v6 & 0xC000000000000001) != 0)
    OUTLINED_FUNCTION_23_3();
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_73_0();
    result = OUTLINED_FUNCTION_73();
    v8 = result;
    if (result)
      goto LABEL_7;
LABEL_21:
    swift_release();
    return OUTLINED_FUNCTION_42();
  }
  swift_retain();
  OUTLINED_FUNCTION_1();
  v15.origin.x = sub_2497CFB08();
  MinX = CGRectGetMinX(v15);
  v16.origin.x = sub_2497CFB08();
  MinY = CGRectGetMinY(v16);
  v17.origin.x = sub_2497CFB08();
  MaxX = CGRectGetMaxX(v17);
  v18.origin.x = sub_2497CFB08();
  v4 = CGRectGetMinY(v18);
  v5 = *(_QWORD *)(v5 + 32);
  if (v5 >> 62)
    goto LABEL_26;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = OUTLINED_FUNCTION_73_0();
  if (!v8)
    goto LABEL_21;
LABEL_7:
  if (v8 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        MEMORY[0x24BCF8148](v10, v5);
      else
        OUTLINED_FUNCTION_69_1();
      ++v10;
      v19.origin.x = sub_2497CFB08();
      v11 = CGRectGetMinX(v19);
      if (v11 < MinX)
        MinX = v11;
      v20.origin.x = OUTLINED_FUNCTION_19_6();
      v12 = CGRectGetMinY(v20);
      if (v12 < MinY)
        MinY = v12;
      v21.origin.x = OUTLINED_FUNCTION_19_6();
      v13 = CGRectGetMaxX(v21);
      if (MaxX <= v13)
        MaxX = v13;
      v22.origin.x = OUTLINED_FUNCTION_19_6();
      MaxY = CGRectGetMaxY(v22);
      OUTLINED_FUNCTION_17_0();
      if (v4 <= MaxY)
        v4 = MaxY;
    }
    while (v8 != v10);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t UniversalControlDevice.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = OUTLINED_FUNCTION_5_6();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_37_2();
  sub_249837168();
  v4 = sub_249837768();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_6_4();
  UniversalControlDevice.label.getter();
  sub_249836DB4();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_6_4();
  v5 = v0 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  swift_bridgeObjectRetain();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_4();
  v6 = type metadata accessor for UniversalControlDevice.Properties(0);
  OUTLINED_FUNCTION_46_1(v1, v5 + *(int *)(v6 + 40), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_249836A30();
  OUTLINED_FUNCTION_27_3(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_62_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_52_1();
  return v4;
}

uint64_t sub_249775B2C()
{
  return UniversalControlDevice.description.getter();
}

uint64_t UniversalControlDevice.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];
  uint64_t v15;
  uint64_t v16;

  v2 = OUTLINED_FUNCTION_5_6();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_249836A18();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_40_2();
  v14[1] = 0;
  v14[2] = 0xE000000000000000;
  sub_249837168();
  v8 = sub_249837768();
  v10 = v9;
  OUTLINED_FUNCTION_1();
  v15 = v8;
  v16 = v10;
  OUTLINED_FUNCTION_6_4();
  v11 = v0 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  sub_2498369E8();
  sub_2498369B8();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v6);
  sub_249836DB4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_4();
  swift_bridgeObjectRetain();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_6_4();
  v12 = type metadata accessor for UniversalControlDevice.Properties(0);
  OUTLINED_FUNCTION_46_1((uint64_t)v5, v11 + *(int *)(v12 + 40), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  sub_249836A30();
  OUTLINED_FUNCTION_27_3(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_62_1();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_52_1();
  return v15;
}

uint64_t sub_249775D44()
{
  return UniversalControlDevice.debugDescription.getter();
}

uint64_t static UniversalControlDevice.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE v13[24];

  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_3_9();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v7 = &v13[-v6];
  v8 = a1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  OUTLINED_FUNCTION_16();
  sub_249775184(v8, (uint64_t)v7);
  OUTLINED_FUNCTION_16();
  v9 = OUTLINED_FUNCTION_31_3();
  sub_249775184(v9, v10);
  v11 = sub_249773EA8((uint64_t)v7, (uint64_t)v5);
  sub_2497751C8((uint64_t)v5);
  sub_2497751C8((uint64_t)v7);
  return v11 & 1;
}

uint64_t sub_249775E44(uint64_t *a1)
{
  return static UniversalControlDevice.== infix(_:_:)(*a1) & 1;
}

uint64_t UniversalControlDevice.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_54_1();
  OUTLINED_FUNCTION_3_9();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_16();
  v2 = OUTLINED_FUNCTION_33_3();
  sub_249775184(v2, v3);
  sub_24983769C();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_78();
  v4 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_61_1(v4, v5, UniversalControlDisplay.hash(into:));
  OUTLINED_FUNCTION_1();
  v6 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_61_1(v6, v7, UniversalControlInputDevice.hash(into:));
  OUTLINED_FUNCTION_1();
  sub_2498376A8();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_5_6();
  sub_249759088(&qword_2578808C8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE63B8], MEMORY[0x24BEE63E0]);
  sub_249836CD0();
  return sub_2497751C8(v0);
}

void UniversalControlDevice.hashValue.getter()
{
  OUTLINED_FUNCTION_3_4();
  UniversalControlDevice.hash(into:)();
  sub_2498376E4();
  OUTLINED_FUNCTION_40();
}

void sub_249775FEC()
{
  UniversalControlDevice.hashValue.getter();
}

uint64_t sub_24977600C()
{
  return UniversalControlDevice.hash(into:)();
}

uint64_t sub_24977602C()
{
  sub_249837690();
  UniversalControlDevice.hash(into:)();
  return sub_2498376E4();
}

uint64_t sub_249776068(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24975E100();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_249776128(v6);
  return sub_2498371E0();
}

unint64_t sub_2497760E4(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_249776104(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_249776128(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char *v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char *v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  int v69;
  char v70;
  int v71;
  int v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  char *v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char *v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  char *v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  BOOL v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  BOOL v139;
  uint64_t v140;
  char v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  BOOL v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  unint64_t v163;
  char *v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  int v216;
  uint64_t v217;
  __int128 v218;
  uint64_t v219;
  __int128 v220;
  __int128 v221;
  char v222;
  __int128 v223;
  char v224;
  char v225;
  char v226;
  char v227;
  char v228;
  char v229;
  char v230;
  char v231;
  char v232;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  char v238;
  char v239;
  char v240;
  char v241;
  char v242;
  char v243;
  char v244;
  char v245;
  char v246;
  char v247;
  char v248;
  char v249;
  char v250;
  char v251;
  char v252;
  char v253;
  char v254;
  char v255;
  char v256;
  char v257;
  char v258;
  char v259;
  char v260;
  char v261;
  char v262;
  char v263;
  char v264;
  char v265;
  char v266;
  uint64_t v267;
  uint64_t *v268;
  uint64_t v269;
  char v270;
  char v271;
  char v272;
  char v273;
  char v274;
  char v275;
  char v276;
  char v277;
  char v278;
  char v279;
  char v280;
  char v281;
  char v282;
  char v283;
  char v284;
  char v285;
  uint64_t v286;
  char v287;
  char v288;
  char v289;
  char v290;
  char v291;
  char v292;
  char v293;
  char v294;
  char v295;
  char v296;
  char v297;
  char v298;
  __int128 __s2;
  __int128 __s1;
  uint64_t v301;
  uint64_t v302;

  v2 = v1;
  v302 = *MEMORY[0x24BDAC8D0];
  v4 = a1[1];
  result = sub_249837534();
  if (result < v4)
  {
    v6 = result;
    sub_24974D070(v4 / 2);
    v182 = v7;
    v301 = v8;
    v177 = v4;
    v172 = a1;
    if (v4 <= 0)
      goto LABEL_112;
    v173 = v6;
    v9 = 0;
    v10 = *a1;
    v171 = *a1 - 8;
    v11 = (char *)MEMORY[0x24BEE4AF8];
    v186 = *a1;
    while (1)
    {
      v12 = v9 + 1;
      v175 = v11;
      v176 = v9;
      if (v9 + 1 >= v4)
        goto LABEL_32;
      v179 = v2;
      v183 = v9 + 1;
      v13 = *(_QWORD *)(v10 + 8 * v9);
      v14 = *(_QWORD *)(v10 + 8 * v12) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
      swift_beginAccess();
      v15 = *(_BYTE *)v14;
      v284 = *(_BYTE *)(v14 + 1);
      v288 = *(_BYTE *)(v14 + 2);
      v291 = *(_BYTE *)(v14 + 3);
      v294 = *(_BYTE *)(v14 + 4);
      v297 = *(_BYTE *)(v14 + 5);
      v16 = *(_BYTE *)(v14 + 6);
      v281 = *(_BYTE *)(v14 + 7);
      v17 = *(_BYTE *)(v14 + 8);
      v278 = *(_BYTE *)(v14 + 9);
      v18 = *(_BYTE *)(v14 + 10);
      v275 = *(_BYTE *)(v14 + 11);
      v19 = *(_BYTE *)(v14 + 12);
      v272 = *(_BYTE *)(v14 + 13);
      v20 = *(_BYTE *)(v14 + 14);
      v223 = *(_OWORD *)(v14 + 16);
      v21 = (char *)(v13 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      LOBYTE(v14) = *(_BYTE *)(v14 + 15);
      swift_beginAccess();
      v22 = *v21;
      v23 = v21[1];
      v24 = v21[2];
      v25 = v21[3];
      v26 = v21[4];
      v27 = v21[5];
      v28 = v21[6];
      v29 = v21[7];
      v30 = v21[8];
      v31 = v21[9];
      v32 = v21[10];
      v33 = v21[11];
      v34 = v21[12];
      v35 = v21[13];
      v36 = v21[14];
      v220 = *((_OWORD *)v21 + 1);
      v37 = v21[15];
      LOBYTE(__s1) = v15;
      BYTE1(__s1) = v284;
      BYTE2(__s1) = v288;
      BYTE3(__s1) = v291;
      BYTE4(__s1) = v294;
      BYTE5(__s1) = v297;
      BYTE6(__s1) = v16;
      BYTE7(__s1) = v281;
      BYTE8(__s1) = v17;
      BYTE9(__s1) = v278;
      BYTE10(__s1) = v18;
      BYTE11(__s1) = v275;
      BYTE12(__s1) = v19;
      BYTE13(__s1) = v272;
      v266 = v20;
      BYTE14(__s1) = v20;
      v38 = v14;
      HIBYTE(__s1) = v14;
      v264 = v22;
      LOBYTE(__s2) = v22;
      v262 = v23;
      BYTE1(__s2) = v23;
      v259 = v24;
      BYTE2(__s2) = v24;
      v256 = v25;
      BYTE3(__s2) = v25;
      v253 = v26;
      BYTE4(__s2) = v26;
      v250 = v27;
      BYTE5(__s2) = v27;
      BYTE6(__s2) = v28;
      v246 = v29;
      BYTE7(__s2) = v29;
      v243 = v30;
      BYTE8(__s2) = v30;
      v240 = v31;
      BYTE9(__s2) = v31;
      v238 = v32;
      BYTE10(__s2) = v32;
      v235 = v33;
      BYTE11(__s2) = v33;
      v232 = v34;
      BYTE12(__s2) = v34;
      v229 = v35;
      BYTE13(__s2) = v35;
      v226 = v36;
      BYTE14(__s2) = v36;
      HIBYTE(__s2) = v37;
      swift_retain();
      swift_retain();
      v39 = memcmp(&__s1, &__s2, 0x10uLL);
      if ((v39 & 0x80000000) != 0)
        goto LABEL_7;
      LOBYTE(__s1) = v264;
      BYTE1(__s1) = v262;
      BYTE2(__s1) = v259;
      BYTE3(__s1) = v256;
      BYTE4(__s1) = v253;
      BYTE5(__s1) = v250;
      BYTE6(__s1) = v28;
      BYTE7(__s1) = v246;
      BYTE8(__s1) = v243;
      BYTE9(__s1) = v240;
      BYTE10(__s1) = v238;
      BYTE11(__s1) = v235;
      BYTE12(__s1) = v232;
      BYTE13(__s1) = v229;
      BYTE14(__s1) = v226;
      HIBYTE(__s1) = v37;
      LOBYTE(__s2) = v15;
      BYTE1(__s2) = v284;
      BYTE2(__s2) = v288;
      BYTE3(__s2) = v291;
      BYTE4(__s2) = v294;
      BYTE5(__s2) = v297;
      BYTE6(__s2) = v16;
      BYTE7(__s2) = v281;
      BYTE8(__s2) = v17;
      BYTE9(__s2) = v278;
      BYTE10(__s2) = v18;
      BYTE11(__s2) = v275;
      BYTE12(__s2) = v19;
      BYTE13(__s2) = v272;
      BYTE14(__s2) = v266;
      HIBYTE(__s2) = v38;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
LABEL_7:
        v216 = v39 >> 31;
        swift_release();
        swift_release();
        v9 = v176;
        v4 = v177;
        v40 = v176 + 2;
        v2 = v179;
        v11 = v175;
        v10 = v186;
        if (v176 + 2 >= v177)
          goto LABEL_23;
      }
      else
      {
        __s2 = v220;
        __s1 = v223;
        v72 = memcmp(&__s1, &__s2, 0x10uLL);
        swift_release();
        swift_release();
        v40 = v176 + 2;
        if (v72 < 0)
        {
          v4 = v177;
          v2 = v179;
          v11 = v175;
          v10 = v186;
          if (v40 >= v177)
          {
            v9 = v176;
            goto LABEL_25;
          }
          v216 = 1;
        }
        else
        {
          v4 = v177;
          v2 = v179;
          v11 = v175;
          v10 = v186;
          if (v40 >= v177)
          {
LABEL_105:
            v12 = v40;
            v9 = v176;
            goto LABEL_32;
          }
          v216 = 0;
        }
      }
      v41 = v40;
      v42 = v183;
      while (1)
      {
        v180 = v2;
        v286 = v41;
        v43 = *(_QWORD *)(v10 + 8 * v42);
        v44 = *(_QWORD *)(v10 + 8 * v41) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
        swift_beginAccess();
        v45 = *(_BYTE *)v44;
        v282 = *(_BYTE *)(v44 + 1);
        v289 = *(_BYTE *)(v44 + 2);
        v292 = *(_BYTE *)(v44 + 3);
        v295 = *(_BYTE *)(v44 + 4);
        v298 = *(_BYTE *)(v44 + 5);
        v46 = *(_BYTE *)(v44 + 6);
        v279 = *(_BYTE *)(v44 + 7);
        v47 = *(_BYTE *)(v44 + 8);
        v276 = *(_BYTE *)(v44 + 9);
        v48 = *(_BYTE *)(v44 + 10);
        v273 = *(_BYTE *)(v44 + 11);
        v49 = *(_BYTE *)(v44 + 12);
        v270 = *(_BYTE *)(v44 + 13);
        v50 = *(_BYTE *)(v44 + 14);
        v221 = *(_OWORD *)(v44 + 16);
        v51 = (char *)(v43 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
        LOBYTE(v44) = *(_BYTE *)(v44 + 15);
        swift_beginAccess();
        v52 = *v51;
        v53 = v51[1];
        v54 = v51[2];
        v55 = v51[3];
        v56 = v51[4];
        v57 = v51[5];
        v58 = v51[6];
        v59 = v51[7];
        v60 = v51[8];
        v61 = v51[9];
        v62 = v51[10];
        v63 = v51[11];
        v64 = v51[12];
        v65 = v51[13];
        v66 = v51[14];
        v218 = *((_OWORD *)v51 + 1);
        LOBYTE(v51) = v51[15];
        LOBYTE(__s1) = v45;
        BYTE1(__s1) = v282;
        BYTE2(__s1) = v289;
        BYTE3(__s1) = v292;
        BYTE4(__s1) = v295;
        BYTE5(__s1) = v298;
        BYTE6(__s1) = v46;
        BYTE7(__s1) = v279;
        BYTE8(__s1) = v47;
        BYTE9(__s1) = v276;
        BYTE10(__s1) = v48;
        BYTE11(__s1) = v273;
        BYTE12(__s1) = v49;
        BYTE13(__s1) = v270;
        v265 = v50;
        BYTE14(__s1) = v50;
        v67 = v44;
        v68 = v52;
        HIBYTE(__s1) = v67;
        LOBYTE(__s2) = v52;
        v263 = v53;
        BYTE1(__s2) = v53;
        v260 = v54;
        BYTE2(__s2) = v54;
        v257 = v55;
        BYTE3(__s2) = v55;
        v254 = v56;
        BYTE4(__s2) = v56;
        v251 = v57;
        BYTE5(__s2) = v57;
        BYTE6(__s2) = v58;
        v247 = v59;
        BYTE7(__s2) = v59;
        v244 = v60;
        BYTE8(__s2) = v60;
        v241 = v61;
        BYTE9(__s2) = v61;
        v239 = v62;
        BYTE10(__s2) = v62;
        v236 = v63;
        BYTE11(__s2) = v63;
        v233 = v64;
        BYTE12(__s2) = v64;
        v230 = v65;
        BYTE13(__s2) = v65;
        v227 = v66;
        BYTE14(__s2) = v66;
        v224 = (char)v51;
        HIBYTE(__s2) = (_BYTE)v51;
        swift_retain();
        swift_retain();
        v69 = memcmp(&__s1, &__s2, 0x10uLL);
        if (v69 < 0)
          goto LABEL_11;
        LOBYTE(__s1) = v68;
        BYTE1(__s1) = v263;
        BYTE2(__s1) = v260;
        BYTE3(__s1) = v257;
        BYTE4(__s1) = v254;
        BYTE5(__s1) = v251;
        BYTE6(__s1) = v58;
        BYTE7(__s1) = v247;
        BYTE8(__s1) = v244;
        BYTE9(__s1) = v241;
        BYTE10(__s1) = v239;
        BYTE11(__s1) = v236;
        BYTE12(__s1) = v233;
        BYTE13(__s1) = v230;
        BYTE14(__s1) = v227;
        HIBYTE(__s1) = v224;
        LOBYTE(__s2) = v45;
        BYTE1(__s2) = v282;
        BYTE2(__s2) = v289;
        BYTE3(__s2) = v292;
        BYTE4(__s2) = v295;
        BYTE5(__s2) = v298;
        BYTE6(__s2) = v46;
        BYTE7(__s2) = v279;
        BYTE8(__s2) = v47;
        BYTE9(__s2) = v276;
        BYTE10(__s2) = v48;
        BYTE11(__s2) = v273;
        BYTE12(__s2) = v49;
        BYTE13(__s2) = v270;
        BYTE14(__s2) = v265;
        HIBYTE(__s2) = v67;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        {
LABEL_11:
          swift_release();
          swift_release();
          v70 = v216 ^ (v69 < 0);
          v2 = v180;
          v4 = v177;
          v11 = v175;
          v10 = v186;
          v40 = v286;
          if ((v70 & 1) != 0)
            goto LABEL_22;
          goto LABEL_12;
        }
        __s2 = v218;
        __s1 = v221;
        v71 = memcmp(&__s1, &__s2, 0x10uLL);
        swift_release();
        swift_release();
        if (v71 < 0)
        {
          v2 = v180;
          v4 = v177;
          v11 = v175;
          v10 = v186;
          v40 = v286;
          if ((v216 & 1) == 0)
            goto LABEL_105;
          goto LABEL_12;
        }
        v2 = v180;
        v4 = v177;
        v11 = v175;
        v10 = v186;
        v40 = v286;
        if ((v216 & 1) != 0)
          break;
LABEL_12:
        v41 = v40 + 1;
        v42 = v40;
        if (v40 + 1 >= v4)
        {
          ++v40;
LABEL_22:
          v9 = v176;
LABEL_23:
          v12 = v40;
          if (v216)
            goto LABEL_24;
          goto LABEL_32;
        }
      }
      v9 = v176;
LABEL_24:
      if (v40 < v9)
        goto LABEL_150;
LABEL_25:
      if (v9 < v40)
      {
        v73 = (uint64_t *)(v171 + 8 * v40);
        v74 = v40;
        v75 = v9;
        v76 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v75 != --v74)
          {
            if (!v10)
              goto LABEL_155;
            v77 = *v76;
            *v76 = *v73;
            *v73 = v77;
          }
          ++v75;
          --v73;
          ++v76;
        }
        while (v75 < v74);
      }
      v12 = v40;
LABEL_32:
      if (v12 < v4)
      {
        if (__OFSUB__(v12, v9))
          goto LABEL_147;
        if (v12 - v9 < v173)
        {
          if (__OFADD__(v9, v173))
            goto LABEL_149;
          if (v9 + v173 >= v4)
            v78 = v4;
          else
            v78 = v9 + v173;
          if (v78 < v9)
            goto LABEL_151;
          if (v12 != v78)
          {
            v181 = v2;
            v79 = (_QWORD *)(v171 + 8 * v12);
            v174 = v78;
            do
            {
              v80 = *(_QWORD *)(v10 + 8 * v12);
              v81 = v9;
              v178 = v79;
              v82 = v79;
              v184 = v12;
              while (1)
              {
                v268 = v82;
                v269 = v81;
                v83 = *v82;
                v84 = (char *)(v80 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
                swift_beginAccess();
                v85 = *v84;
                v283 = v84[1];
                v280 = v84[2];
                v271 = v84[3];
                v296 = v84[4];
                v86 = v84[5];
                v87 = v84[6];
                v277 = v84[7];
                v88 = v84[8];
                v274 = v84[9];
                v89 = v84[10];
                v285 = v84[11];
                v90 = v84[12];
                v287 = v84[13];
                v293 = v84[14];
                v290 = v84[15];
                v267 = v84[16];
                v196 = v84[17];
                v197 = v84[18];
                v219 = v84[19];
                v217 = v84[20];
                v215 = v84[21];
                v214 = v84[22];
                v213 = v84[23];
                v212 = v84[24];
                v211 = v84[25];
                v210 = v84[26];
                v209 = v84[27];
                v208 = v84[28];
                v91 = (char *)(v83 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
                v205 = v84[29];
                v206 = v84[30];
                v207 = v84[31];
                swift_beginAccess();
                v92 = *v91;
                v93 = v91[1];
                v94 = v91[2];
                v95 = v91[3];
                v96 = v91[4];
                v97 = v91[5];
                v98 = v91[6];
                v99 = v91[7];
                v100 = v91[8];
                v101 = v91[9];
                v102 = v91[10];
                v103 = v91[11];
                v104 = v91[12];
                v105 = v91[13];
                v106 = v91[14];
                v107 = v91[15];
                v204 = v91[16];
                v203 = v91[17];
                v202 = v91[18];
                v201 = v91[19];
                v200 = v91[20];
                v199 = v91[21];
                v195 = v91[22];
                v194 = v91[23];
                v198 = v91[24];
                v193 = v91[25];
                v192 = v91[26];
                v191 = v91[27];
                v190 = v91[28];
                v189 = v91[29];
                v188 = v91[30];
                v187 = v91[31];
                LOBYTE(__s1) = v85;
                BYTE1(__s1) = v283;
                BYTE2(__s1) = v280;
                BYTE3(__s1) = v271;
                BYTE4(__s1) = v296;
                BYTE5(__s1) = v86;
                BYTE6(__s1) = v87;
                BYTE7(__s1) = v277;
                BYTE8(__s1) = v88;
                BYTE9(__s1) = v274;
                v261 = v89;
                BYTE10(__s1) = v89;
                BYTE11(__s1) = v285;
                v258 = v90;
                BYTE12(__s1) = v90;
                BYTE13(__s1) = v287;
                BYTE14(__s1) = v293;
                HIBYTE(__s1) = v290;
                v108 = v92;
                LOBYTE(__s2) = v92;
                v109 = v93;
                BYTE1(__s2) = v93;
                v110 = v94;
                BYTE2(__s2) = v94;
                v255 = v95;
                BYTE3(__s2) = v95;
                v252 = v96;
                BYTE4(__s2) = v96;
                v249 = v97;
                BYTE5(__s2) = v97;
                v248 = v98;
                BYTE6(__s2) = v98;
                v245 = v99;
                BYTE7(__s2) = v99;
                v242 = v100;
                BYTE8(__s2) = v100;
                BYTE9(__s2) = v101;
                v237 = v102;
                BYTE10(__s2) = v102;
                v234 = v103;
                BYTE11(__s2) = v103;
                v231 = v104;
                BYTE12(__s2) = v104;
                v228 = v105;
                BYTE13(__s2) = v105;
                v225 = v106;
                BYTE14(__s2) = v106;
                v222 = v107;
                HIBYTE(__s2) = v107;
                swift_retain();
                swift_retain();
                if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                {
                  LOBYTE(__s1) = v108;
                  BYTE1(__s1) = v109;
                  BYTE2(__s1) = v110;
                  BYTE3(__s1) = v255;
                  BYTE4(__s1) = v252;
                  BYTE5(__s1) = v249;
                  BYTE6(__s1) = v248;
                  BYTE7(__s1) = v245;
                  BYTE8(__s1) = v242;
                  BYTE9(__s1) = v101;
                  BYTE10(__s1) = v237;
                  BYTE11(__s1) = v234;
                  BYTE12(__s1) = v231;
                  BYTE13(__s1) = v228;
                  BYTE14(__s1) = v225;
                  HIBYTE(__s1) = v222;
                  LOBYTE(__s2) = v85;
                  BYTE1(__s2) = v283;
                  BYTE2(__s2) = v280;
                  BYTE3(__s2) = v271;
                  BYTE4(__s2) = v296;
                  BYTE5(__s2) = v86;
                  BYTE6(__s2) = v87;
                  BYTE7(__s2) = v277;
                  BYTE8(__s2) = v88;
                  BYTE9(__s2) = v274;
                  BYTE10(__s2) = v261;
                  BYTE11(__s2) = v285;
                  BYTE12(__s2) = v258;
                  BYTE13(__s2) = v287;
                  BYTE14(__s2) = v293;
                  HIBYTE(__s2) = v290;
                  if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                    goto LABEL_50;
                  LOBYTE(__s1) = v267;
                  BYTE1(__s1) = v196;
                  BYTE2(__s1) = v197;
                  BYTE3(__s1) = v219;
                  BYTE4(__s1) = v217;
                  BYTE5(__s1) = v215;
                  BYTE6(__s1) = v214;
                  BYTE7(__s1) = v213;
                  BYTE8(__s1) = v212;
                  BYTE9(__s1) = v211;
                  BYTE10(__s1) = v210;
                  BYTE11(__s1) = v209;
                  BYTE12(__s1) = v208;
                  BYTE13(__s1) = v205;
                  BYTE14(__s1) = v206;
                  HIBYTE(__s1) = v207;
                  LOBYTE(__s2) = v204;
                  BYTE1(__s2) = v203;
                  BYTE2(__s2) = v202;
                  BYTE3(__s2) = v201;
                  BYTE4(__s2) = v200;
                  BYTE5(__s2) = v199;
                  BYTE6(__s2) = v195;
                  BYTE7(__s2) = v194;
                  BYTE8(__s2) = v198;
                  BYTE9(__s2) = v193;
                  BYTE10(__s2) = v192;
                  BYTE11(__s2) = v191;
                  BYTE12(__s2) = v190;
                  BYTE13(__s2) = v189;
                  BYTE14(__s2) = v188;
                  HIBYTE(__s2) = v187;
                  if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                    break;
                }
                swift_release();
                swift_release();
                v10 = v186;
                if (!v186)
                  goto LABEL_153;
                v111 = *v268;
                v80 = v268[1];
                *v268 = v80;
                v268[1] = v111;
                v82 = v268 - 1;
                v81 = v269 + 1;
                v112 = v184;
                if (v184 == v269 + 1)
                  goto LABEL_51;
              }
              static UniversalControlUUID.compare(lhs:rhs:)(v204 | (v203 << 8) | (v202 << 16) | (v201 << 24) | (v200 << 32) | (v199 << 40) | (v195 << 48) | (v194 << 56), v198 | (v193 << 8) | (v192 << 16) | (v191 << 24) | (v190 << 32) | (v189 << 40) | (v188 << 48) | (v187 << 56), v267 | (v196 << 8) | (v197 << 16) | (v219 << 24) | (v217 << 32) | (v215 << 40) | (v214 << 48) | (v213 << 56), v212 | (v211 << 8) | (v210 << 16) | (v209 << 24) | (v208 << 32) | (v205 << 40) | (v206 << 48) | (v207 << 56));
LABEL_50:
              swift_release();
              swift_release();
              v112 = v184;
              v10 = v186;
LABEL_51:
              v12 = v112 + 1;
              v79 = v178 + 1;
              v9 = v176;
            }
            while (v12 != v174);
            v12 = v174;
            v2 = v181;
            v11 = v175;
          }
        }
      }
      if (v12 < v9)
        goto LABEL_146;
      v185 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_24975DAF4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v114 = *((_QWORD *)v11 + 2);
      v113 = *((_QWORD *)v11 + 3);
      v115 = v114 + 1;
      v10 = v186;
      if (v114 >= v113 >> 1)
      {
        v164 = sub_24975DAF4((char *)(v113 > 1), v114 + 1, 1, v11);
        v10 = v186;
        v11 = v164;
      }
      *((_QWORD *)v11 + 2) = v115;
      v116 = v11 + 32;
      v117 = &v11[16 * v114 + 32];
      *(_QWORD *)v117 = v9;
      *((_QWORD *)v117 + 1) = v185;
      if (v114)
      {
        while (2)
        {
          v118 = v115 - 1;
          if (v115 >= 4)
          {
            v123 = &v116[16 * v115];
            v124 = *((_QWORD *)v123 - 8);
            v125 = *((_QWORD *)v123 - 7);
            v129 = __OFSUB__(v125, v124);
            v126 = v125 - v124;
            if (v129)
              goto LABEL_131;
            v128 = *((_QWORD *)v123 - 6);
            v127 = *((_QWORD *)v123 - 5);
            v129 = __OFSUB__(v127, v128);
            v121 = v127 - v128;
            v122 = v129;
            if (v129)
              goto LABEL_132;
            v130 = v115 - 2;
            v131 = &v116[16 * v115 - 32];
            v133 = *(_QWORD *)v131;
            v132 = *((_QWORD *)v131 + 1);
            v129 = __OFSUB__(v132, v133);
            v134 = v132 - v133;
            if (v129)
              goto LABEL_133;
            v129 = __OFADD__(v121, v134);
            v135 = v121 + v134;
            if (v129)
              goto LABEL_135;
            if (v135 >= v126)
            {
              v153 = &v116[16 * v118];
              v155 = *(_QWORD *)v153;
              v154 = *((_QWORD *)v153 + 1);
              v129 = __OFSUB__(v154, v155);
              v156 = v154 - v155;
              if (v129)
                goto LABEL_141;
              v146 = v121 < v156;
            }
            else
            {
LABEL_72:
              if ((v122 & 1) != 0)
                goto LABEL_134;
              v130 = v115 - 2;
              v136 = &v116[16 * v115 - 32];
              v138 = *(_QWORD *)v136;
              v137 = *((_QWORD *)v136 + 1);
              v139 = __OFSUB__(v137, v138);
              v140 = v137 - v138;
              v141 = v139;
              if (v139)
                goto LABEL_136;
              v142 = &v116[16 * v118];
              v144 = *(_QWORD *)v142;
              v143 = *((_QWORD *)v142 + 1);
              v129 = __OFSUB__(v143, v144);
              v145 = v143 - v144;
              if (v129)
                goto LABEL_138;
              if (__OFADD__(v140, v145))
                goto LABEL_140;
              if (v140 + v145 < v121)
                goto LABEL_84;
              v146 = v121 < v145;
            }
            if (v146)
              v118 = v130;
          }
          else
          {
            if (v115 == 3)
            {
              v120 = *((_QWORD *)v11 + 4);
              v119 = *((_QWORD *)v11 + 5);
              v129 = __OFSUB__(v119, v120);
              v121 = v119 - v120;
              v122 = v129;
              goto LABEL_72;
            }
            v147 = *((_QWORD *)v11 + 4);
            v148 = *((_QWORD *)v11 + 5);
            v129 = __OFSUB__(v148, v147);
            v140 = v148 - v147;
            v141 = v129;
LABEL_84:
            if ((v141 & 1) != 0)
              goto LABEL_137;
            v149 = &v116[16 * v118];
            v151 = *(_QWORD *)v149;
            v150 = *((_QWORD *)v149 + 1);
            v129 = __OFSUB__(v150, v151);
            v152 = v150 - v151;
            if (v129)
              goto LABEL_139;
            if (v152 < v140)
              goto LABEL_101;
          }
          v157 = v118 - 1;
          if (v118 - 1 >= v115)
          {
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
            goto LABEL_152;
          }
          if (!v10)
            goto LABEL_154;
          v158 = v11;
          v159 = &v116[16 * v157];
          v160 = *(_QWORD *)v159;
          v161 = &v116[16 * v118];
          v162 = *((_QWORD *)v161 + 1);
          sub_249777BD4((_QWORD *)(v10 + 8 * *(_QWORD *)v159), (_QWORD *)(v10 + 8 * *(_QWORD *)v161), v10 + 8 * v162, v182);
          if (v2)
          {
LABEL_110:
            swift_bridgeObjectRelease();
            if (v177 >= -1)
              goto LABEL_125;
            __break(1u);
LABEL_112:
            v11 = (char *)MEMORY[0x24BEE4AF8];
            v115 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_113:
            if (v115 >= 2)
            {
              v165 = *v172;
              do
              {
                v166 = v115 - 2;
                if (v115 < 2)
                  goto LABEL_142;
                if (!v165)
                  goto LABEL_156;
                v167 = *(_QWORD *)&v11[16 * v166 + 32];
                v168 = *(_QWORD *)&v11[16 * v115 + 24];
                sub_249777BD4((_QWORD *)(v165 + 8 * v167), (_QWORD *)(v165 + 8 * *(_QWORD *)&v11[16 * v115 + 16]), v165 + 8 * v168, v182);
                if (v2)
                  goto LABEL_110;
                if (v168 < v167)
                  goto LABEL_143;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v11 = sub_24975DBE8();
                if (v166 >= *((_QWORD *)v11 + 2))
                  goto LABEL_144;
                v169 = &v11[16 * v166 + 32];
                *(_QWORD *)v169 = v167;
                *((_QWORD *)v169 + 1) = v168;
                v170 = *((_QWORD *)v11 + 2);
                if (v115 > v170)
                  goto LABEL_145;
                memmove(&v11[16 * v115 + 16], &v11[16 * v115 + 32], 16 * (v170 - v115));
                *((_QWORD *)v11 + 2) = v170 - 1;
                v115 = v170 - 1;
              }
              while (v170 > 2);
            }
            swift_bridgeObjectRelease();
            if (v177 >= -1)
            {
LABEL_125:
              *(_QWORD *)((v301 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
              sub_249836EB0();
              return swift_bridgeObjectRelease();
            }
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
          }
          if (v162 < v160)
            goto LABEL_128;
          if (v118 > *((_QWORD *)v158 + 2))
            goto LABEL_129;
          *(_QWORD *)v159 = v160;
          *(_QWORD *)&v116[16 * v157 + 8] = v162;
          v163 = *((_QWORD *)v158 + 2);
          if (v118 >= v163)
            goto LABEL_130;
          v11 = v158;
          v115 = v163 - 1;
          memmove(&v116[16 * v118], v161 + 16, 16 * (v163 - 1 - v118));
          *((_QWORD *)v11 + 2) = v163 - 1;
          v10 = v186;
          if (v163 <= 2)
            goto LABEL_101;
          continue;
        }
      }
      v115 = 1;
LABEL_101:
      v4 = v177;
      v9 = v185;
      if (v185 >= v177)
        goto LABEL_113;
    }
  }
  if (v4 < 0)
    goto LABEL_148;
  if (v4)
    return sub_249777500(0, v4, 1, a1);
  return result;
}

uint64_t sub_249777500(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char *v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  uint64_t v99;
  char __s2;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char __s1;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  uint64_t v132;

  v37 = result;
  v132 = *MEMORY[0x24BDAC8D0];
  if (a3 != a2)
  {
    v39 = *a4;
    v4 = (_QWORD *)(*a4 + 8 * a3 - 8);
    do
    {
      v5 = *(_QWORD *)(v39 + 8 * a3);
      v6 = v37;
      v38 = v4;
      v40 = a3;
      while (1)
      {
        v88 = v6;
        v99 = *v4;
        v7 = (char *)(v5 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
        swift_beginAccess();
        v92 = v7[2];
        v93 = v7[1];
        v97 = v7[4];
        v98 = *v7;
        v8 = v7[5];
        v9 = v7[6];
        v91 = v7[7];
        v10 = v7[8];
        v89 = v7[3];
        v90 = v7[9];
        v11 = v7[10];
        v12 = v7[11];
        v13 = v7[12];
        v96 = v7[14];
        v94 = v7[13];
        v95 = v7[15];
        v87 = v7[16];
        v50 = v7[17];
        v51 = v7[18];
        v71 = v7[19];
        v70 = v7[20];
        v69 = v7[21];
        v68 = v7[22];
        v67 = v7[23];
        v66 = v7[24];
        v65 = v7[25];
        v64 = v7[26];
        v63 = v7[27];
        v62 = v7[28];
        v14 = (char *)(v99 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
        v59 = v7[29];
        v60 = v7[30];
        v61 = v7[31];
        swift_beginAccess();
        v15 = *v14;
        v16 = v14[1];
        v17 = v14[2];
        v18 = v14[3];
        v19 = v14[4];
        v20 = v14[5];
        v21 = v14[6];
        v22 = v14[7];
        v23 = v14[8];
        v24 = v14[9];
        v25 = v14[10];
        v26 = v14[11];
        v27 = v14[12];
        v28 = v14[13];
        v29 = v14[14];
        v30 = v14[15];
        v58 = v14[16];
        v57 = v14[17];
        v56 = v14[18];
        v55 = v14[19];
        v54 = v14[20];
        v53 = v14[21];
        v49 = v14[22];
        v48 = v14[23];
        v52 = v14[24];
        v47 = v14[25];
        v46 = v14[26];
        v45 = v14[27];
        v44 = v14[28];
        v43 = v14[29];
        v42 = v14[30];
        v41 = v14[31];
        __s1 = v98;
        v117 = v93;
        v118 = v92;
        v119 = v89;
        v120 = v97;
        v121 = v8;
        v122 = v9;
        v123 = v91;
        v124 = v10;
        v125 = v90;
        v86 = v11;
        v126 = v11;
        v84 = v12;
        v127 = v12;
        v85 = v13;
        v128 = v13;
        v129 = v94;
        v130 = v96;
        v131 = v95;
        v31 = v15;
        __s2 = v15;
        v32 = v16;
        v101 = v16;
        v33 = v17;
        v102 = v17;
        v83 = v18;
        v103 = v18;
        v82 = v19;
        v104 = v19;
        v81 = v20;
        v105 = v20;
        v80 = v21;
        v106 = v21;
        v79 = v22;
        v107 = v22;
        v78 = v23;
        v108 = v23;
        v109 = v24;
        v77 = v25;
        v110 = v25;
        v76 = v26;
        v111 = v26;
        v75 = v27;
        v112 = v27;
        v74 = v28;
        v113 = v28;
        v73 = v29;
        v114 = v29;
        v72 = v30;
        v115 = v30;
        swift_retain();
        swift_retain();
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v31;
          v117 = v32;
          v118 = v33;
          v119 = v83;
          v120 = v82;
          v121 = v81;
          v122 = v80;
          v123 = v79;
          v124 = v78;
          v125 = v24;
          v126 = v77;
          v127 = v76;
          v128 = v75;
          v129 = v74;
          v130 = v73;
          v131 = v72;
          __s2 = v98;
          v101 = v93;
          v102 = v92;
          v103 = v89;
          v104 = v97;
          v105 = v8;
          v106 = v9;
          v107 = v91;
          v108 = v10;
          v109 = v90;
          v110 = v86;
          v111 = v84;
          v112 = v85;
          v113 = v94;
          v114 = v96;
          v115 = v95;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_11;
          __s1 = v87;
          v117 = v50;
          v118 = v51;
          v119 = v71;
          v120 = v70;
          v121 = v69;
          v122 = v68;
          v123 = v67;
          v124 = v66;
          v125 = v65;
          v126 = v64;
          v127 = v63;
          v128 = v62;
          v129 = v59;
          v130 = v60;
          v131 = v61;
          __s2 = v58;
          v101 = v57;
          v102 = v56;
          v103 = v55;
          v104 = v54;
          v105 = v53;
          v106 = v49;
          v107 = v48;
          v108 = v52;
          v109 = v47;
          v110 = v46;
          v111 = v45;
          v112 = v44;
          v113 = v43;
          v114 = v42;
          v115 = v41;
          if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
            break;
        }
        swift_release();
        result = swift_release();
        if (!v39)
          __break(1u);
        v34 = *v4;
        v5 = v4[1];
        *v4 = v5;
        v4[1] = v34;
        --v4;
        v6 = v88 + 1;
        v35 = v40;
        if (v40 == v88 + 1)
          goto LABEL_12;
      }
      static UniversalControlUUID.compare(lhs:rhs:)(v58 | (v57 << 8) | (v56 << 16) | (v55 << 24) | (v54 << 32) | (v53 << 40) | (v49 << 48) | (v48 << 56), v52 | (v47 << 8) | (v46 << 16) | (v45 << 24) | (v44 << 32) | (v43 << 40) | (v42 << 48) | (v41 << 56), v87 | (v50 << 8) | (v51 << 16) | (v71 << 24) | (v70 << 32) | (v69 << 40) | (v68 << 48) | (v67 << 56), v66 | (v65 << 8) | (v64 << 16) | (v63 << 24) | (v62 << 32) | (v59 << 40) | (v60 << 48) | (v61 << 56));
LABEL_11:
      swift_release();
      result = swift_release();
      v35 = v40;
LABEL_12:
      a3 = v35 + 1;
      v4 = v38 + 1;
    }
    while (a3 != a2);
  }
  return result;
}

uint64_t sub_249777BD4(_QWORD *a1, _QWORD *a2, unint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  _QWORD *v45;
  unint64_t v46;
  _QWORD *v47;
  BOOL v48;
  int v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char *v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  unint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  BOOL v82;
  _QWORD *v83;
  int v85;
  BOOL v86;
  __int128 v87;
  __int128 v88;
  _QWORD *v89;
  char v90;
  unint64_t v91;
  char v92;
  __int128 v93;
  char v94;
  __int128 v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  _QWORD *v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  _QWORD *v129;
  char v130;
  _QWORD *v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  _QWORD *v142;
  _QWORD *v143;
  _QWORD *v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD *v147;
  _QWORD *v148;
  _QWORD *v149;
  __int128 __s2;
  __int128 __s1;
  uint64_t v152;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v152 = *MEMORY[0x24BDAC8D0];
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_2497AC1A4(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = &v4[v11];
    if (v7 >= v6 || v10 < 8)
      goto LABEL_13;
    v51 = (_QWORD *)(a3 - 8);
    v145 = v7;
    v147 = v4;
    while (1)
    {
      v143 = v12;
      v89 = v12 - 1;
      v129 = v51;
      v131 = v51 + 1;
      v149 = v6;
      v52 = *(v6 - 1);
      v121 = v6 - 1;
      v53 = *(v12 - 1) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
      swift_beginAccess();
      v54 = *(_BYTE *)v53;
      v133 = *(_BYTE *)(v53 + 2);
      v135 = *(_BYTE *)(v53 + 3);
      v140 = *(_BYTE *)(v53 + 5);
      v55 = *(_BYTE *)(v53 + 6);
      v56 = *(_BYTE *)(v53 + 7);
      v57 = *(_BYTE *)(v53 + 8);
      v125 = *(_BYTE *)(v53 + 9);
      v127 = *(_BYTE *)(v53 + 1);
      v58 = *(_BYTE *)(v53 + 10);
      v137 = *(_BYTE *)(v53 + 4);
      v139 = *(_BYTE *)(v53 + 12);
      v122 = *(_BYTE *)(v53 + 13);
      v123 = *(_BYTE *)(v53 + 11);
      v59 = *(_BYTE *)(v53 + 14);
      v88 = *(_OWORD *)(v53 + 16);
      v60 = (char *)(v52 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      v61 = *(_BYTE *)(v53 + 15);
      swift_beginAccess();
      v62 = *v60;
      v63 = v60[1];
      v64 = v60[2];
      v65 = v60[3];
      v66 = v60[4];
      v67 = v60[5];
      v68 = v60[6];
      v69 = v60[7];
      v70 = v60[8];
      v71 = v60[9];
      v72 = v60[10];
      v73 = v60[11];
      v74 = v60[12];
      v75 = v60[13];
      v76 = v60[14];
      v87 = *((_OWORD *)v60 + 1);
      v77 = v60[15];
      LOBYTE(__s1) = v54;
      BYTE1(__s1) = v127;
      BYTE2(__s1) = v133;
      BYTE3(__s1) = v135;
      BYTE4(__s1) = v137;
      BYTE5(__s1) = v140;
      BYTE6(__s1) = v55;
      v117 = v56;
      BYTE7(__s1) = v56;
      BYTE8(__s1) = v57;
      BYTE9(__s1) = v125;
      BYTE10(__s1) = v58;
      BYTE11(__s1) = v123;
      BYTE12(__s1) = v139;
      BYTE13(__s1) = v122;
      BYTE14(__s1) = v59;
      HIBYTE(__s1) = v61;
      v78 = v62;
      LOBYTE(__s2) = v62;
      v112 = v64;
      v114 = v63;
      BYTE1(__s2) = v63;
      BYTE2(__s2) = v64;
      v109 = v66;
      v111 = v65;
      BYTE3(__s2) = v65;
      BYTE4(__s2) = v66;
      v107 = v67;
      BYTE5(__s2) = v67;
      BYTE6(__s2) = v68;
      v102 = v70;
      v104 = v69;
      BYTE7(__s2) = v69;
      BYTE8(__s2) = v70;
      v98 = v72;
      v100 = v71;
      BYTE9(__s2) = v71;
      BYTE10(__s2) = v72;
      v96 = v73;
      BYTE11(__s2) = v73;
      v94 = v74;
      BYTE12(__s2) = v74;
      v90 = v76;
      v92 = v75;
      BYTE13(__s2) = v75;
      BYTE14(__s2) = v76;
      HIBYTE(__s2) = v77;
      swift_retain();
      swift_retain();
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        break;
      LOBYTE(__s1) = v78;
      BYTE1(__s1) = v114;
      BYTE2(__s1) = v112;
      BYTE3(__s1) = v111;
      BYTE4(__s1) = v109;
      BYTE5(__s1) = v107;
      BYTE6(__s1) = v68;
      BYTE7(__s1) = v104;
      BYTE8(__s1) = v102;
      BYTE9(__s1) = v100;
      BYTE10(__s1) = v98;
      BYTE11(__s1) = v96;
      BYTE12(__s1) = v94;
      BYTE13(__s1) = v92;
      BYTE14(__s1) = v90;
      HIBYTE(__s1) = v77;
      LOBYTE(__s2) = v54;
      BYTE1(__s2) = v127;
      BYTE2(__s2) = v133;
      BYTE3(__s2) = v135;
      BYTE4(__s2) = v137;
      BYTE5(__s2) = v140;
      BYTE6(__s2) = v55;
      BYTE7(__s2) = v117;
      BYTE8(__s2) = v57;
      BYTE9(__s2) = v125;
      BYTE10(__s2) = v58;
      BYTE11(__s2) = v123;
      BYTE12(__s2) = v139;
      BYTE13(__s2) = v122;
      BYTE14(__s2) = v59;
      HIBYTE(__s2) = v61;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
        swift_release();
        swift_release();
        v4 = v147;
        v6 = v149;
        v12 = v143;
        v79 = (unint64_t)v145;
        v81 = v129;
        v80 = v131;
      }
      else
      {
        __s2 = v87;
        __s1 = v88;
        v85 = memcmp(&__s1, &__s2, 0x10uLL);
        swift_release();
        swift_release();
        v4 = v147;
        v6 = v149;
        v12 = v143;
        v79 = (unint64_t)v145;
        v81 = v129;
        v80 = v131;
        if (v85 < 0)
          goto LABEL_32;
      }
      v86 = v80 != v12 || v81 >= v12;
      v12 = v89;
      v83 = v89;
      if (!v86)
        goto LABEL_38;
LABEL_37:
      *v81 = *v83;
LABEL_38:
      v51 = v81 - 1;
      if ((unint64_t)v6 <= v79 || v12 <= v4)
        goto LABEL_13;
    }
    swift_release();
    swift_release();
    v4 = v147;
    v6 = v149;
    v12 = v143;
    v79 = (unint64_t)v145;
    v81 = v129;
    v80 = v131;
LABEL_32:
    v82 = v80 != v6 || v81 >= v6;
    v83 = v121;
    v6 = v121;
    if (!v82)
      goto LABEL_38;
    goto LABEL_37;
  }
  sub_2497AC1A4(a1, a2 - a1, a4);
  v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    v142 = &v4[v9];
    v91 = a3;
    do
    {
      v144 = v7;
      v148 = v6;
      v146 = v4;
      v16 = *v4;
      v17 = *v6 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
      swift_beginAccess();
      v18 = *(_BYTE *)v17;
      v128 = *(_BYTE *)(v17 + 1);
      v132 = *(_BYTE *)(v17 + 2);
      v136 = *(_BYTE *)(v17 + 3);
      v138 = *(_BYTE *)(v17 + 4);
      v141 = *(_BYTE *)(v17 + 5);
      v19 = *(_BYTE *)(v17 + 6);
      v20 = *(_BYTE *)(v17 + 7);
      v21 = *(_BYTE *)(v17 + 8);
      v22 = *(_BYTE *)(v17 + 9);
      v130 = *(_BYTE *)(v17 + 10);
      v23 = *(_BYTE *)(v17 + 12);
      v124 = *(_BYTE *)(v17 + 13);
      v126 = *(_BYTE *)(v17 + 11);
      v134 = *(_BYTE *)(v17 + 14);
      v95 = *(_OWORD *)(v17 + 16);
      v24 = (char *)(v16 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      v25 = *(_BYTE *)(v17 + 15);
      swift_beginAccess();
      v26 = *v24;
      v27 = v24[1];
      v28 = v24[2];
      v29 = v24[3];
      v30 = v24[4];
      v31 = v24[5];
      v32 = v24[6];
      v33 = v24[7];
      v34 = v24[8];
      v35 = v24[9];
      v36 = v24[10];
      v37 = v24[11];
      v38 = v24[12];
      v39 = v24[13];
      v40 = v24[14];
      v93 = *((_OWORD *)v24 + 1);
      v41 = v24[15];
      LOBYTE(__s1) = v18;
      BYTE1(__s1) = v128;
      BYTE2(__s1) = v132;
      BYTE3(__s1) = v136;
      BYTE4(__s1) = v138;
      BYTE5(__s1) = v141;
      BYTE6(__s1) = v19;
      v119 = v21;
      v120 = v20;
      BYTE7(__s1) = v20;
      BYTE8(__s1) = v21;
      v118 = v22;
      BYTE9(__s1) = v22;
      BYTE10(__s1) = v130;
      BYTE11(__s1) = v126;
      BYTE12(__s1) = v23;
      BYTE13(__s1) = v124;
      BYTE14(__s1) = v134;
      HIBYTE(__s1) = v25;
      v42 = v26;
      LOBYTE(__s2) = v26;
      v43 = v27;
      BYTE1(__s2) = v27;
      v44 = v28;
      BYTE2(__s2) = v28;
      v115 = v30;
      v116 = v29;
      BYTE3(__s2) = v29;
      BYTE4(__s2) = v30;
      v113 = v31;
      BYTE5(__s2) = v31;
      BYTE6(__s2) = v32;
      v108 = v34;
      v110 = v33;
      BYTE7(__s2) = v33;
      BYTE8(__s2) = v34;
      v105 = v36;
      v106 = v35;
      BYTE9(__s2) = v35;
      BYTE10(__s2) = v36;
      v101 = v38;
      v103 = v37;
      BYTE11(__s2) = v37;
      BYTE12(__s2) = v38;
      v97 = v40;
      v99 = v39;
      BYTE13(__s2) = v39;
      BYTE14(__s2) = v40;
      HIBYTE(__s2) = v41;
      swift_retain();
      swift_retain();
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
        swift_release();
        swift_release();
        v4 = v146;
        v6 = v148;
        v12 = v142;
        v45 = v144;
        v46 = v91;
      }
      else
      {
        LOBYTE(__s1) = v42;
        BYTE1(__s1) = v43;
        BYTE2(__s1) = v44;
        BYTE3(__s1) = v116;
        BYTE4(__s1) = v115;
        BYTE5(__s1) = v113;
        BYTE6(__s1) = v32;
        BYTE7(__s1) = v110;
        BYTE8(__s1) = v108;
        BYTE9(__s1) = v106;
        BYTE10(__s1) = v105;
        BYTE11(__s1) = v103;
        BYTE12(__s1) = v101;
        BYTE13(__s1) = v99;
        BYTE14(__s1) = v97;
        HIBYTE(__s1) = v41;
        LOBYTE(__s2) = v18;
        BYTE1(__s2) = v128;
        BYTE2(__s2) = v132;
        BYTE3(__s2) = v136;
        BYTE4(__s2) = v138;
        BYTE5(__s2) = v141;
        BYTE6(__s2) = v19;
        BYTE7(__s2) = v120;
        BYTE8(__s2) = v119;
        BYTE9(__s2) = v118;
        BYTE10(__s2) = v130;
        BYTE11(__s2) = v126;
        BYTE12(__s2) = v23;
        BYTE13(__s2) = v124;
        BYTE14(__s2) = v134;
        HIBYTE(__s2) = v25;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        {
          swift_release();
          swift_release();
          v4 = v146;
          v6 = v148;
          v12 = v142;
          v45 = v144;
          v46 = v91;
LABEL_27:
          v47 = v4;
          v48 = v45 == v4++;
          if (v48)
            goto LABEL_18;
LABEL_17:
          *v45 = *v47;
          goto LABEL_18;
        }
        __s2 = v93;
        __s1 = v95;
        v50 = memcmp(&__s1, &__s2, 0x10uLL);
        swift_release();
        swift_release();
        v4 = v146;
        v6 = v148;
        v12 = v142;
        v45 = v144;
        v46 = v91;
        if ((v50 & 0x80000000) == 0)
          goto LABEL_27;
      }
      v47 = v6;
      v48 = v45 == v6++;
      if (!v48)
        goto LABEL_17;
LABEL_18:
      v7 = v45 + 1;
    }
    while (v4 < v12 && (unint64_t)v6 < v46);
  }
  v6 = v7;
LABEL_13:
  sub_2497AC1A4(v4, v12 - v4, v6);
  return 1;
}

uint64_t sub_249778468(uint64_t a1, unint64_t a2, void (*a3)(uint64_t))
{
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t i;

  v6 = a2 >> 62;
  if (a2 >> 62)
  {
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_73();
    OUTLINED_FUNCTION_42();
  }
  result = sub_2498376A8();
  if (v6)
  {
    OUTLINED_FUNCTION_73_0();
    v8 = OUTLINED_FUNCTION_73();
    result = OUTLINED_FUNCTION_42();
    if (!v8)
      return result;
  }
  else
  {
    v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v8)
      return result;
  }
  if (v8 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v8; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0)
        MEMORY[0x24BCF8148](i, a2);
      else
        OUTLINED_FUNCTION_69_1();
      a3(a1);
      result = OUTLINED_FUNCTION_17_0();
    }
  }
  return result;
}

void sub_249778560()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_8_6();
  v2 = OUTLINED_FUNCTION_17_4((uint64_t)v1);
  sub_2497785F0(v2, v3, v4);
  *(_QWORD *)(v0 + 32) = v5;
  OUTLINED_FUNCTION_81();
}

void sub_249778594()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OUTLINED_FUNCTION_8_6();
  v2 = OUTLINED_FUNCTION_17_4((uint64_t)v1);
  sub_2497792FC(v2, v3, v4);
  *(_QWORD *)(v0 + 32) = v5;
  OUTLINED_FUNCTION_81();
}

void sub_2497785C4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void sub_2497785F0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_4_10(a1, a2, a3);
  if (v4)
    OUTLINED_FUNCTION_23_3();
  *v3 = OUTLINED_FUNCTION_28_3();
  OUTLINED_FUNCTION_81();
}

unint64_t sub_249778634()
{
  unint64_t result;

  result = qword_2578808D0;
  if (!qword_2578808D0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDevice.DeviceType, &type metadata for UniversalControlDevice.DeviceType);
    atomic_store(result, (unint64_t *)&qword_2578808D0);
  }
  return result;
}

unint64_t sub_249778674()
{
  unint64_t result;

  result = qword_2578808D8;
  if (!qword_2578808D8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDeviceID, &type metadata for UniversalControlDeviceID);
    atomic_store(result, (unint64_t *)&qword_2578808D8);
  }
  return result;
}

uint64_t sub_2497786B0()
{
  return sub_249759088(&qword_2578808E0, type metadata accessor for UniversalControlDevice, (uint64_t)&protocol conformance descriptor for UniversalControlDevice);
}

void sub_2497786E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_7();
  sub_249773138();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_27();
}

void sub_249778704(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2497735A8(a1, a2, a3, a4, sub_249773174);
}

void sub_249778720()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  sub_24977324C();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_249778744()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  sub_249773354();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_249778768(_BYTE *a1@<X8>)
{
  sub_2497734BC(a1);
  OUTLINED_FUNCTION_27();
}

void sub_249778788()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_7();
  sub_2497735DC();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_27();
}

void sub_2497787A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2497735A8(a1, a2, a3, a4, sub_249773618);
}

void sub_2497787C4(uint64_t a1@<X8>)
{
  sub_2497737A8(a1);
  OUTLINED_FUNCTION_27();
}

uint64_t sub_2497787E4()
{
  return type metadata accessor for UniversalControlDevice(0);
}

uint64_t sub_2497787EC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for UniversalControlDevice.Properties(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for UniversalControlDevice()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniversalControlDevice.id.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of UniversalControlDevice.id.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of UniversalControlDevice.id.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of UniversalControlDevice.displayName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of UniversalControlDevice.displayName.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of UniversalControlDevice.displayName.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of UniversalControlDevice.displays.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of UniversalControlDevice.displays.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of UniversalControlDevice.displays.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of UniversalControlDevice.inputDevices.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of UniversalControlDevice.inputDevices.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of UniversalControlDevice.inputDevices.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of UniversalControlDevice.deviceType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of UniversalControlDevice.deviceType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of UniversalControlDevice.deviceType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of UniversalControlDevice.model.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of UniversalControlDevice.model.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of UniversalControlDevice.model.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of UniversalControlDevice.typeIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of UniversalControlDevice.typeIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of UniversalControlDevice.typeIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of UniversalControlDevice.__allocating_init(id:displayName:displays:inputDevices:model:typeIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of UniversalControlDevice.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of UniversalControlDevice.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t getEnumTagSinglePayload for UniversalControlEdge(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlDevice.DeviceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_249778A78 + 4 * byte_249839F55[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_249778AAC + 4 * byte_249839F50[v4]))();
}

uint64_t sub_249778AAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249778AB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249778ABCLL);
  return result;
}

uint64_t sub_249778AC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249778AD0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_249778AD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249778ADC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlDevice.DeviceType()
{
  return &type metadata for UniversalControlDevice.DeviceType;
}

_QWORD *initializeBufferWithCopyOfBuffer for UniversalControlDevice.CodingKeys(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for UniversalControlDevice.CodingKeys()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for UniversalControlDevice.CodingKeys(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for UniversalControlDevice.CodingKeys(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UniversalControlDevice.CodingKeys(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlDevice.CodingKeys(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlDevice.CodingKeys()
{
  return &type metadata for UniversalControlDevice.CodingKeys;
}

_QWORD *sub_249778C28(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v5;
    v6 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v6;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v7 = a2[8];
    v8 = *(int *)(a3 + 40);
    v9 = (uint64_t)a2 + v8;
    v10 = a1 + v8;
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v7;
    v11 = sub_249836A84();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t sub_249778D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_249836A84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_249778D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(int *)(a3 + 40);
  v8 = a2 + v7;
  v9 = a1 + v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v10 = sub_249836A84();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

uint64_t sub_249778E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(a2 + 5);
  *(_BYTE *)(a1 + 6) = *(_BYTE *)(a2 + 6);
  *(_BYTE *)(a1 + 7) = *(_BYTE *)(a2 + 7);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 40);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_249836A84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_249778F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 40);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_249836A84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_249778FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 40);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_249836A84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_249779098()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2497790A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_81();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_5_6();
    __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 40), a2, v6);
  }
}

uint64_t sub_24977910C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_249779118(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
    OUTLINED_FUNCTION_81();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_5_6();
    __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 40), a2, a2, v7);
  }
}

uint64_t sub_249779178()
{
  uint64_t result;
  unint64_t v1;

  result = sub_249836A84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_249779210()
{
  return sub_249759088(&qword_257880B10, type metadata accessor for UniversalControlDevice.Properties, (uint64_t)&unk_24983A1F8);
}

unint64_t sub_249779240()
{
  unint64_t result;

  result = qword_257880B18;
  if (!qword_257880B18)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983A2B0, &type metadata for UniversalControlDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257880B18);
  }
  return result;
}

unint64_t sub_249779280()
{
  unint64_t result;

  result = qword_257880B20;
  if (!qword_257880B20)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983A220, &type metadata for UniversalControlDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257880B20);
  }
  return result;
}

unint64_t sub_2497792C0()
{
  unint64_t result;

  result = qword_257880B28;
  if (!qword_257880B28)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983A248, &type metadata for UniversalControlDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257880B28);
  }
  return result;
}

void sub_2497792FC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_4_10(a1, a2, a3);
  if (v4)
    OUTLINED_FUNCTION_23_3();
  *v3 = OUTLINED_FUNCTION_28_3();
  OUTLINED_FUNCTION_81();
}

uint64_t sub_24977933C()
{
  return swift_release();
}

unint64_t OUTLINED_FUNCTION_4_10(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_249776104(a2, (a3 & 0xC000000000000001) == 0, a3);
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return sub_249836A84();
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  return sub_249836DB4();
}

void *OUTLINED_FUNCTION_8_6()
{
  return malloc(0x28uLL);
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  return sub_2498374F8();
}

uint64_t OUTLINED_FUNCTION_12_5()
{
  return sub_2498373FC();
}

uint64_t OUTLINED_FUNCTION_13_5()
{
  return sub_2498374BC();
}

uint64_t OUTLINED_FUNCTION_17_4(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

double OUTLINED_FUNCTION_19_6()
{
  double v0;

  return v0;
}

void OUTLINED_FUNCTION_20_4()
{
  JUMPOUT(0x24BCF8F94);
}

uint64_t OUTLINED_FUNCTION_21_5()
{
  return swift_bridgeObjectRelease();
}

void *OUTLINED_FUNCTION_22_4()
{
  return malloc(0x30uLL);
}

void OUTLINED_FUNCTION_23_3()
{
  JUMPOUT(0x24BCF8148);
}

uint64_t OUTLINED_FUNCTION_24_5()
{
  return sub_249836E14();
}

uint64_t OUTLINED_FUNCTION_27_3@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_31_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_32_3(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_33_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  return sub_249836D84();
}

uint64_t OUTLINED_FUNCTION_35_2(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_36_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_43_2(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char __s2, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char __s1)
{
  return memcmp(&__s1, &__s2, 0x10uLL);
}

uint64_t OUTLINED_FUNCTION_44_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_46_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void *OUTLINED_FUNCTION_50_1()
{
  return malloc(0x28uLL);
}

uint64_t OUTLINED_FUNCTION_51_1()
{
  uint64_t v0;

  return sub_249773D58(v0);
}

uint64_t OUTLINED_FUNCTION_52_1()
{
  return sub_249836DB4();
}

uint64_t OUTLINED_FUNCTION_53_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_54_1()
{
  return type metadata accessor for UniversalControlDevice.Properties(0);
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_58_1()
{
  return sub_249836A78();
}

uint64_t OUTLINED_FUNCTION_59_0()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_60_1()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_61_1(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  unint64_t v3;
  uint64_t v4;

  return sub_249778468(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_62_1()
{
  return sub_249836DB4();
}

uint64_t OUTLINED_FUNCTION_63_1(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  unint64_t *v3;

  return sub_249759088(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_69_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_71_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t UniversalControlInputDevice.servicePropertyDictionary.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_16();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(id *)(v0 + 24);
  HIDServiceProperties.dictionaryRepresentation.getter(v1, v2);
  v4 = v3;

  return v4;
}

uint64_t UniversalControlInputDevice.__allocating_init(senderID:serviceProperties:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v5 = OUTLINED_FUNCTION_2_10();
  v6 = HIDServiceProperties.init(serviceID:properties:)(a1, a2);
  if (v2)
  {
    OUTLINED_FUNCTION_1_8();
  }
  else
  {
    *(_QWORD *)(v5 + 16) = v6;
    *(_QWORD *)(v5 + 24) = v7;
  }
  return v5;
}

uint64_t UniversalControlInputDevice.init(senderID:serviceProperties:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  v4 = HIDServiceProperties.init(serviceID:properties:)(a1, a2);
  if (v3)
  {
    OUTLINED_FUNCTION_1_8();
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
  }
  return v2;
}

uint64_t UniversalControlInputDevice.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_2_10();
  UniversalControlInputDevice.init(from:)(a1);
  return v2;
}

uint64_t UniversalControlInputDevice.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249837714();
  if (v2)
  {
    OUTLINED_FUNCTION_1_8();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    sub_249779854();
    sub_2498375DC();
    *(_QWORD *)(v1 + 16) = v5;
    *(_QWORD *)(v1 + 24) = v6;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

unint64_t sub_249779854()
{
  unint64_t result;

  result = qword_257880B30;
  if (!qword_257880B30)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServiceProperties, &type metadata for HIDServiceProperties);
    atomic_store(result, (unint64_t *)&qword_257880B30);
  }
  return result;
}

uint64_t UniversalControlInputDevice.encode(to:)(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249837738();
  swift_beginAccess();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_24977994C();
  sub_249837600();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
}

unint64_t sub_24977994C()
{
  unint64_t result;

  result = qword_257880B38;
  if (!qword_257880B38)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for HIDServiceProperties, &type metadata for HIDServiceProperties);
    atomic_store(result, (unint64_t *)&qword_257880B38);
  }
  return result;
}

BOOL UniversalControlInputDevice.conformsToMouse.getter()
{
  return sub_2497799A0(131073);
}

BOOL UniversalControlInputDevice.conformsToKeyboard.getter()
{
  return sub_2497799A0(393217);
}

BOOL sub_2497799A0(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  HIDServiceProperties.deviceUsagePairs.getter();
  v3 = v2;
  swift_endAccess();
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
    goto LABEL_5;
  result = static HIDUsage.== infix(_:_:)(*(_DWORD *)(v3 + 32), a1);
  if (result)
  {
    v6 = 1;
LABEL_6:
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
  if (v4 == 1)
  {
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  v7 = v3 + 38;
  v8 = 1;
  while (1)
  {
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    result = static HIDUsage.== infix(_:_:)(*(_DWORD *)(v7 - 2), a1);
    v6 = result;
    if (!result)
    {
      v7 += 4;
      ++v8;
      if (v9 != v4)
        continue;
    }
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t UniversalControlInputDevice.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t UniversalControlInputDevice.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_249779AB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = UniversalControlInputDevice.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_249779AE0(_QWORD *a1)
{
  return UniversalControlInputDevice.encode(to:)(a1);
}

uint64_t static UniversalControlInputDevice.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  OUTLINED_FUNCTION_16();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(void **)(a1 + 24);
  OUTLINED_FUNCTION_16();
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  v8 = v5;
  v9 = v7;
  LOBYTE(v6) = static HIDServiceProperties.== infix(_:_:)(v4, (uint64_t)v8, v6);

  return v6 & 1;
}

uint64_t sub_249779B8C(uint64_t *a1, uint64_t *a2)
{
  return static UniversalControlInputDevice.== infix(_:_:)(*a1, *a2) & 1;
}

void UniversalControlInputDevice.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  OUTLINED_FUNCTION_16();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(id *)(v1 + 24);
  HIDServiceProperties.hash(into:)(a1, v3, v4);

}

uint64_t UniversalControlInputDevice.hashValue.getter()
{
  _BYTE v1[72];

  sub_249837690();
  UniversalControlInputDevice.hash(into:)((uint64_t)v1);
  return sub_2498376E4();
}

uint64_t sub_249779C40()
{
  return UniversalControlInputDevice.hashValue.getter();
}

void sub_249779C60(uint64_t a1)
{
  UniversalControlInputDevice.hash(into:)(a1);
}

uint64_t sub_249779C80()
{
  _BYTE v1[72];

  sub_249837690();
  UniversalControlInputDevice.hash(into:)((uint64_t)v1);
  return sub_2498376E4();
}

uint64_t UniversalControlInputDevice.id.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16();
  return *(_QWORD *)(v0 + 16);
}

unint64_t sub_249779CE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257880B40;
  if (!qword_257880B40)
  {
    v1 = type metadata accessor for UniversalControlInputDevice();
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlInputDevice, v1);
    atomic_store(result, (unint64_t *)&qword_257880B40);
  }
  return result;
}

uint64_t type metadata accessor for UniversalControlInputDevice()
{
  return objc_opt_self();
}

uint64_t sub_249779D44()
{
  return MEMORY[0x24BEE4578];
}

uint64_t sub_249779D50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = UniversalControlInputDevice.id.getter();
  *a1 = result;
  return result;
}

uint64_t method lookup function for UniversalControlInputDevice()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniversalControlInputDevice.__allocating_init(senderID:serviceProperties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of UniversalControlInputDevice.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  return swift_deallocPartialClassInstance();
}

uint64_t OUTLINED_FUNCTION_2_10()
{
  return swift_allocObject();
}

uint64_t sub_249779DD4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_249779E24()
{
  type metadata accessor for PreferencesController();
  sub_24977A3BC();
  sub_249836B68();
  sub_249836B80();
  OUTLINED_FUNCTION_17_0();
  swift_retain();
  OUTLINED_FUNCTION_22_1();
  sub_249788D28();
  return swift_release();
}

void sub_249779E98()
{
  uint64_t v0;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 48) + 16));
}

void *sub_249779EA4(uint64_t a1, uint64_t a2)
{
  return sub_249779EEC(a1, a2, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t))sub_249788DB0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))sub_2497E5684, &qword_257880E20);
}

void *sub_249779EC8(uint64_t a1, uint64_t a2)
{
  return sub_249779EEC(a1, a2, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t))sub_249788F0C, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))sub_2497E569C, &qword_2578805D8);
}

void *sub_249779EEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD *, uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD), unint64_t *a5)
{
  _QWORD *v5;
  uint64_t v11;
  void *v12;
  id v13;

  OUTLINED_FUNCTION_22_1();
  OUTLINED_FUNCTION_74();
  v11 = swift_retain();
  v12 = (void *)a3(v11, v5, a1, a2);
  swift_release();
  if (!v12)
  {
    v12 = (void *)a4(a1, a2, v5[2], v5[3], v5[4]);
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_74();
    v13 = v12;
    swift_retain();
    os_unfair_recursive_lock_lock_with_options();
    sub_24977A23C((uint64_t)v5, a1, a2, v12, a5);
    os_unfair_recursive_lock_unlock();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_17_0();
    swift_release();
  }
  return v12;
}

uint64_t sub_24977A000(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24977A038(a1, a2, a3, &qword_257880E20, 0x24BDD16E0, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2497E578C);
}

uint64_t sub_24977A01C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24977A038(a1, a2, a3, &qword_2578805D8, 0x24BDBCE30, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2497E578C);
}

uint64_t sub_24977A038(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t (*a6)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  _QWORD *v6;
  _QWORD *v8;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v8 = v6;
  swift_retain();
  OUTLINED_FUNCTION_74();
  v12 = a1;
  swift_retain();
  os_unfair_recursive_lock_lock_with_options();
  sub_24977A23C((uint64_t)v8, a2, a3, a1, a4);
  os_unfair_recursive_lock_unlock();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v13 = v8[2];
  v14 = v8[3];
  v15 = v8[4];
  OUTLINED_FUNCTION_74();
  v16 = v12;
  return a6(a1, a2, a3, v13, v14, v15);
}

uint64_t sub_24977A134(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;

  v2 = sub_249779EEC(a1, a2, (uint64_t (*)(uint64_t, _QWORD *, uint64_t, uint64_t))sub_249788DD4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))sub_2497E5690, &qword_2578806B0);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_249836940();

  return v4;
}

uint64_t sub_24977A1A4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;

  if (a2 >> 60 == 15)
    v8 = 0;
  else
    v8 = (void *)sub_24983691C();
  sub_24977A038(v8, a3, a4, &qword_2578806B0, 0x24BDBCE50, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2497E578C);
  swift_bridgeObjectRelease();

  return sub_249748C80(a1, a2);
}

void sub_24977A23C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5)
{
  id v8;
  __int128 v9;
  __int128 v10;

  if (a4)
  {
    *((_QWORD *)&v10 + 1) = sub_24976D1D4(0, a5);
    *(_QWORD *)&v9 = a4;
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  swift_beginAccess();
  v8 = a4;
  swift_bridgeObjectRetain();
  sub_2498100B4((uint64_t)&v9, a2, a3);
  swift_endAccess();
  sub_249779E98();
}

uint64_t sub_24977A2F4()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_249779E24();
    return OUTLINED_FUNCTION_17_0();
  }
  return result;
}

uint64_t sub_24977A344()
{
  sub_249779DD4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PreferencesController()
{
  return objc_opt_self();
}

uint64_t sub_24977A384@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for PreferencesController();
  result = sub_249836B68();
  *a1 = result;
  return result;
}

unint64_t sub_24977A3BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257880E18;
  if (!qword_257880E18)
  {
    v1 = type metadata accessor for PreferencesController();
    result = MEMORY[0x24BCF8F94](&unk_24983A498, v1);
    atomic_store(result, (unint64_t *)&qword_257880E18);
  }
  return result;
}

BOOL static UniversalControlUUID.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, a3, a4) == 0;
}

void UniversalControlUUID.debugDescription.getter(unint64_t a1, unint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_0_10(a1, a2);
  OUTLINED_FUNCTION_5_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_7_7();
  OUTLINED_FUNCTION_3_5();
}

unint64_t UniversalControlUUID.init(rawValue:)(unsigned __int8 a1, unsigned __int8 a2, unsigned __int8 a3, unsigned __int8 a4, unsigned __int8 a5, unsigned __int8 a6, unsigned __int8 a7, uint64_t a8)
{
  return a1 | (unint64_t)(unsigned __int16)(a2 << 8) | ((unint64_t)a3 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)a4 << 24) | ((unint64_t)a5 << 32) | ((unint64_t)a6 << 40) | ((unint64_t)a7 << 48) | (a8 << 56);
}

uint64_t UniversalControlUUID.uuidValue.getter()
{
  return sub_2498369E8();
}

uint64_t static UniversalControlUUID.random()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_9_5();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_4_11();
  sub_249836A0C();
  v3 = sub_2498369F4();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return v3;
}

uint64_t UniversalControlUUID.init(uuid:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_2498369F4();
  v3 = OUTLINED_FUNCTION_9_5();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return v2;
}

uint64_t UniversalControlUUID.init(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[40];

  v5 = sub_249836A18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_11();
  sub_24977AEF8(a1, (uint64_t)v8);
  sub_2498369DC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    v3 = sub_2498369F4();
    __swift_destroy_boxed_opaque_existential_0(a1);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v5);
  }
  return v3;
}

uint64_t UniversalControlUUID.encode(to:)(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[10];
  uint64_t v8;
  uint64_t v9;

  v9 = a1;
  v7[8] = a2 >> 16;
  v7[9] = a2 >> 8;
  v7[6] = HIDWORD(a2);
  v7[7] = a2 >> 24;
  v7[4] = HIWORD(a2);
  v7[5] = a2 >> 40;
  v7[2] = a3 >> 8;
  v7[3] = HIBYTE(a2);
  v7[1] = a3 >> 16;
  v8 = sub_249836A18();
  v3 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498369E8();
  sub_249836A00();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v8);
}

uint64_t static UniversalControlUUID.compare(lhs:rhs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  _QWORD __s2[2];
  _QWORD __s1[3];

  __s1[2] = *MEMORY[0x24BDAC8D0];
  __s1[0] = a1;
  __s1[1] = a2;
  __s2[0] = a3;
  __s2[1] = a4;
  v4 = memcmp(__s1, __s2, 0x10uLL);
  v5 = v4 >> 31;
  if (v4 >= 1)
    return 1;
  return v5;
}

uint64_t sub_24977A93C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = UniversalControlUUID.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_24977A9D8(uint64_t a1)
{
  unint64_t *v1;

  return UniversalControlUUID.encode(to:)(a1, *v1, v1[1]);
}

uint64_t UniversalControlUUID.intValue.getter()
{
  return 0;
}

uint64_t UniversalControlUUID.init(intValue:)()
{
  return 0;
}

void UniversalControlUUID.stringValue.getter(unint64_t a1, unint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_0_10(a1, a2);
  OUTLINED_FUNCTION_5_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_7_7();
  OUTLINED_FUNCTION_3_5();
}

uint64_t UniversalControlUUID.init(stringValue:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25787FDE0);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_4_11();
  v2 = OUTLINED_FUNCTION_9_5();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498369AC();
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v0, 1, v2) == 1)
  {
    sub_24974BC70(v0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v0, v2);
    v6 = sub_2498369F4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v6;
}

void sub_24977AB74()
{
  unint64_t *v0;

  UniversalControlUUID.stringValue.getter(*v0, v0[1]);
}

uint64_t sub_24977AB7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = UniversalControlUUID.init(stringValue:)();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

void sub_24977ABA8(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
}

void UniversalControlUUID.description.getter(unint64_t a1, unint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_0_10(a1, a2);
  OUTLINED_FUNCTION_5_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_7_7();
  OUTLINED_FUNCTION_3_5();
}

void sub_24977AC04()
{
  unint64_t *v0;

  UniversalControlUUID.description.getter(*v0, v0[1]);
}

void sub_24977AC0C()
{
  unint64_t *v0;

  UniversalControlUUID.debugDescription.getter(*v0, v0[1]);
}

BOOL sub_24977AC14(uint64_t *a1, uint64_t *a2)
{
  return static UniversalControlUUID.== infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

uint64_t UniversalControlUUID.hash(into:)()
{
  return sub_24983769C();
}

uint64_t UniversalControlUUID.hashValue.getter()
{
  sub_249837690();
  sub_24983769C();
  return sub_2498376E4();
}

uint64_t sub_24977AE38()
{
  return UniversalControlUUID.hashValue.getter();
}

uint64_t sub_24977AE40()
{
  return UniversalControlUUID.hash(into:)();
}

uint64_t sub_24977AE48()
{
  sub_249837690();
  UniversalControlUUID.hash(into:)();
  return sub_2498376E4();
}

BOOL static UniversalControlUUID.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, a3, a4) == -1;
}

BOOL sub_24977AEA8(uint64_t *a1, uint64_t *a2)
{
  return static UniversalControlUUID.< infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_24977AEBC(uint64_t *a1, uint64_t *a2)
{
  return sub_24975E860(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_24977AED0(uint64_t *a1, uint64_t *a2)
{
  return sub_2497EC7DC(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_24977AEE4(uint64_t *a1, uint64_t *a2)
{
  return sub_2497711EC(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_24977AEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_24977AF40()
{
  unint64_t result;

  result = qword_257880E28;
  if (!qword_257880E28)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlUUID, &type metadata for UniversalControlUUID);
    atomic_store(result, (unint64_t *)&qword_257880E28);
  }
  return result;
}

unint64_t sub_24977AF80()
{
  unint64_t result;

  result = qword_257880E30;
  if (!qword_257880E30)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlUUID, &type metadata for UniversalControlUUID);
    atomic_store(result, (unint64_t *)&qword_257880E30);
  }
  return result;
}

unint64_t sub_24977AFC0()
{
  unint64_t result;

  result = qword_257880E38;
  if (!qword_257880E38)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlUUID, &type metadata for UniversalControlUUID);
    atomic_store(result, (unint64_t *)&qword_257880E38);
  }
  return result;
}

__n128 __swift_memcpy16_1(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlUUID()
{
  return &type metadata for UniversalControlUUID;
}

uint64_t OUTLINED_FUNCTION_0_10(unint64_t a1, unint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = a1 >> 16;
  *(_QWORD *)(v2 - 88) = a1 >> 8;
  *(_QWORD *)(v2 - 112) = HIDWORD(a1);
  *(_QWORD *)(v2 - 104) = a1 >> 24;
  *(_QWORD *)(v2 - 128) = HIWORD(a1);
  *(_QWORD *)(v2 - 120) = a1 >> 40;
  *(_QWORD *)(v2 - 144) = a2 >> 8;
  *(_QWORD *)(v2 - 136) = HIBYTE(a1);
  *(_QWORD *)(v2 - 152) = a2 >> 16;
  return sub_249836A18();
}

uint64_t OUTLINED_FUNCTION_1_9()
{
  return sub_2498369E8();
}

uint64_t OUTLINED_FUNCTION_2_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_7()
{
  return sub_2498369B8();
}

uint64_t UniversalControlDeviceID.init(uuid:)(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  uint64_t v9;

  v2 = sub_249836A18();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = sub_2498369F4();
  v7 = *(void (**)(char *, uint64_t))(v3 + 8);
  v7(v5, v2);
  v7(a1, v2);
  return v6;
}

void UniversalControlDeviceID.stringValue.getter()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_0_10(v0, v1);
  OUTLINED_FUNCTION_5_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_7_7();
  OUTLINED_FUNCTION_3_5();
}

uint64_t UniversalControlDeviceID.uuidValue.getter()
{
  return sub_2498369E8();
}

void UniversalControlDeviceID.description.getter()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_0_10(v0, v1);
  OUTLINED_FUNCTION_5_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_7_7();
  OUTLINED_FUNCTION_3_5();
}

void UniversalControlDeviceID.debugDescription.getter()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_0_10(v0, v1);
  OUTLINED_FUNCTION_5_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_2_11();
  OUTLINED_FUNCTION_7_7();
  OUTLINED_FUNCTION_3_5();
}

void UniversalControlDeviceID.label.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_0_10(v2, v3);
  OUTLINED_FUNCTION_5_7();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_8_7();
  OUTLINED_FUNCTION_2_11();
  v5 = sub_2497713F8(8, v0, v1);
  MEMORY[0x24BCF7D34](v5);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_5();
}

uint64_t UniversalControlDeviceID.rawValue.setter(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  *v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t (*UniversalControlDeviceID.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t sub_24977B424@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = UniversalControlDeviceID.init(rawValue:)(*a1, a1[1]);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

__n128 sub_24977B454@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

uint64_t UniversalControlDeviceID.init(from:)(uint64_t a1)
{
  uint64_t v2;
  _BYTE v4[40];

  sub_24977AEF8(a1, (uint64_t)v4);
  v2 = UniversalControlUUID.init(from:)((uint64_t)v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v2;
}

uint64_t UniversalControlDeviceID.encode(to:)(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[10];
  uint64_t v8;
  uint64_t v9;

  v9 = a1;
  v7[8] = a2 >> 16;
  v7[9] = a2 >> 8;
  v7[6] = HIDWORD(a2);
  v7[7] = a2 >> 24;
  v7[4] = HIWORD(a2);
  v7[5] = a2 >> 40;
  v7[2] = a3 >> 8;
  v7[3] = HIBYTE(a2);
  v7[1] = a3 >> 16;
  v8 = sub_249836A18();
  v3 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498369E8();
  sub_249836A00();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v8);
}

uint64_t sub_24977B608@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = UniversalControlDeviceID.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_24977B6A4(uint64_t a1)
{
  unint64_t *v1;

  return UniversalControlDeviceID.encode(to:)(a1, *v1, v1[1]);
}

uint64_t UniversalControlDeviceID.init(stringValue:)()
{
  uint64_t result;
  char v1;

  result = UniversalControlUUID.init(stringValue:)();
  if ((v1 & 1) != 0)
    return 0;
  return result;
}

uint64_t UniversalControlDeviceID.intValue.getter()
{
  return 0;
}

uint64_t UniversalControlDeviceID.init(intValue:)()
{
  return 0;
}

void sub_24977B6F8()
{
  UniversalControlDeviceID.stringValue.getter();
}

uint64_t sub_24977B700@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  result = UniversalControlDeviceID.init(stringValue:)();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  return result;
}

void sub_24977B72C()
{
  UniversalControlDeviceID.description.getter();
}

void sub_24977B734()
{
  UniversalControlDeviceID.debugDescription.getter();
}

BOOL static UniversalControlDeviceID.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, a3, a4) == -1;
}

BOOL sub_24977B758(uint64_t *a1, uint64_t *a2)
{
  return static UniversalControlDeviceID.< infix(_:_:)(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_24977B76C(uint64_t *a1, uint64_t *a2)
{
  return sub_2497A0634(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_24977B780()
{
  return sub_24975E1A8();
}

uint64_t sub_24977B788()
{
  return sub_2497714B8();
}

uint64_t sub_24977B790()
{
  return sub_2497A0BAC();
}

unint64_t sub_24977B79C()
{
  unint64_t result;

  result = qword_257880E40;
  if (!qword_257880E40)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDeviceID, &type metadata for UniversalControlDeviceID);
    atomic_store(result, (unint64_t *)&qword_257880E40);
  }
  return result;
}

unint64_t sub_24977B7DC()
{
  unint64_t result;

  result = qword_257880E48;
  if (!qword_257880E48)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDeviceID, &type metadata for UniversalControlDeviceID);
    atomic_store(result, (unint64_t *)&qword_257880E48);
  }
  return result;
}

unint64_t sub_24977B81C()
{
  unint64_t result;

  result = qword_257880E50;
  if (!qword_257880E50)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDeviceID, &type metadata for UniversalControlDeviceID);
    atomic_store(result, (unint64_t *)&qword_257880E50);
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlDeviceID()
{
  return &type metadata for UniversalControlDeviceID;
}

uint64_t sub_24977B868@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24977B87C(a1, a2);
}

uint64_t sub_24977B87C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MinX;
  double MinY;
  double MaxX;
  double MaxY;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = v3 + 56;
    while (1)
    {
      v45.origin.x = sub_2497A1E9C();
      x = v45.origin.x;
      y = v45.origin.y;
      width = v45.size.width;
      height = v45.size.height;
      MinX = CGRectGetMinX(v45);
      v46.origin.x = OUTLINED_FUNCTION_2_12();
      MinY = CGRectGetMinY(v46);
      v47.origin.x = OUTLINED_FUNCTION_2_12();
      MaxX = CGRectGetMaxX(v47);
      v48.origin.x = x;
      v48.origin.y = y;
      v48.size.width = width;
      v48.size.height = height;
      MaxY = CGRectGetMaxY(v48);
      v15 = OUTLINED_FUNCTION_0_11();
      if ((sub_249749554(v15, v16, v17, v18, v19, MinY, MinX, MinY) & 1) != 0)
        break;
      v20 = OUTLINED_FUNCTION_1_10();
      if ((sub_249749554(v20, v21, v22, v23, v24, MinY, MinX, MaxY) & 1) != 0)
        break;
      v25 = OUTLINED_FUNCTION_1_10();
      if ((sub_249749554(v25, v26, v27, v28, v29, MaxY, MaxX, MaxY) & 1) != 0)
        break;
      v30 = OUTLINED_FUNCTION_0_11();
      if ((sub_249749554(v30, v31, v32, v33, v34, MaxY, MaxX, MinY) & 1) != 0)
        break;
      ++v5;
      v6 += 32;
      if (v4 == v5)
      {
        OUTLINED_FUNCTION_65();
        result = swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_24977BA4C(v5);
    v37 = v36;
    v39 = v38;
    v41 = v40;
    v43 = v42;
    result = OUTLINED_FUNCTION_65();
    v44 = 0;
  }
  else
  {
    result = OUTLINED_FUNCTION_65();
LABEL_11:
    v44 = 1;
    v37 = 0;
    v39 = 0;
    v41 = 0;
    v43 = 0;
  }
  *(_QWORD *)a2 = v37;
  *(_QWORD *)(a2 + 8) = v39;
  *(_QWORD *)(a2 + 16) = v41;
  *(_QWORD *)(a2 + 24) = v43;
  *(_BYTE *)(a2 + 32) = v44;
  return result;
}

void sub_24977BA4C(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_2497C7A70();
    v3 = v6;
  }
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    sub_2497AC0F8((char *)(v3 + 32 * a1 + 64), v4 - 1 - a1, (char *)(v3 + 32 * a1 + 32));
    *(_QWORD *)(v3 + 16) = v5;
    *v1 = v3;
  }
}

double OUTLINED_FUNCTION_0_11()
{
  double v0;

  return v0;
}

double OUTLINED_FUNCTION_1_10()
{
  double v0;

  return v0;
}

double OUTLINED_FUNCTION_2_12()
{
  double v0;

  return v0;
}

void sub_24977BB2C(char a1)
{
  __asm { BR              X10 }
}

BOOL sub_24977BB6C(double a1, double a2, double a3, double a4, double a5)
{
  double v5;
  CGRect v7;
  CGRect v8;

  v7.origin.x = OUTLINED_FUNCTION_1_11(a1, a2, a3, a4, a5);
  CGRectGetMinY(v7);
  v8.origin.x = OUTLINED_FUNCTION_0_12();
  return v5 == CGRectGetMinY(v8);
}

double OUTLINED_FUNCTION_0_12()
{
  double v0;

  return v0;
}

double OUTLINED_FUNCTION_1_11(double a1, double a2, double a3, double a4, double a5)
{
  return a5;
}

_QWORD *sub_24977BC00()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[5];
  v4 = v0[6];
  v5 = (_QWORD *)OUTLINED_FUNCTION_1_12();
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = MEMORY[0x24BEE4AF8];
  v5[5] = v3;
  v5[6] = v4;
  sub_249748BCC(v1, v2);
  swift_bridgeObjectRetain();
  return v5;
}

_QWORD *sub_24977BC68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;
  uint64_t v15;
  _QWORD v16[4];

  v0 = sub_249836C7C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249836C40();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v16 - v9;
  sub_249836C70();
  sub_249836C58();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  sub_249836C34();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v8, v4);
  v12 = v16[2];
  v13 = v16[3];
  v11(v10, v4);
  result = (_QWORD *)OUTLINED_FUNCTION_1_12();
  result[2] = v12;
  result[3] = v13;
  v15 = MEMORY[0x24BEE4AF8];
  result[4] = MEMORY[0x24BEE4AF8];
  result[5] = v15;
  result[6] = 0;
  return result;
}

_QWORD *sub_24977BDC4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v1 = *a1;
  v2 = a1[1];
  result = (_QWORD *)OUTLINED_FUNCTION_1_12();
  result[2] = v1;
  result[3] = v2;
  v4 = MEMORY[0x24BEE4AF8];
  result[4] = MEMORY[0x24BEE4AF8];
  result[5] = v4;
  result[6] = 0;
  return result;
}

void sub_24977BE04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  v3 = sub_249837558();
  if (!v1)
  {
    v4 = v3;
    sub_249753058();
    if (v4 < 0)
    {
      __break(1u);
    }
    else
    {
      for (i = v5; v4; --v4)
      {
        __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
        sub_24977C928();
        sub_249837564();
        sub_249748BCC(v10, v11);
        v7 = *(_QWORD *)(i + 16);
        if (v7 >= *(_QWORD *)(i + 24) >> 1)
        {
          sub_249753058();
          i = v9;
        }
        *(_QWORD *)(i + 16) = v7 + 1;
        v8 = i + 16 * v7;
        *(_QWORD *)(v8 + 32) = v10;
        *(_QWORD *)(v8 + 40) = v11;
        sub_249748C10(v10, v11);
      }
    }
  }
}

void sub_24977BF68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  __int16 v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;

  v2 = a1;
  __swift_mutable_project_boxed_opaque_existential_1(a1, *(_QWORD *)(a1 + 24));
  v3 = sub_249837558();
  if (!v1)
  {
    v4 = v3;
    sub_249752C44();
    if (v4 < 0)
    {
      __break(1u);
    }
    else
    {
      v6 = v5;
      if (v4)
      {
        v22 = v2;
        do
        {
          __swift_mutable_project_boxed_opaque_existential_1(v2, *(_QWORD *)(v2 + 24));
          sub_24977C9A0();
          sub_249837564();
          v7 = v14;
          v8 = v15;
          v9 = v16;
          v10 = v17;
          v11 = *(_QWORD *)(v6 + 16);
          if (v11 >= *(_QWORD *)(v6 + 24) >> 1)
          {
            sub_249752C44();
            v10 = v17;
            v9 = v16;
            v8 = v15;
            v7 = v14;
            v6 = v13;
          }
          *(_QWORD *)(v6 + 16) = v11 + 1;
          v12 = v6 + 80 * v11;
          *(_OWORD *)(v12 + 32) = v7;
          *(_OWORD *)(v12 + 48) = v8;
          *(_OWORD *)(v12 + 64) = v9;
          *(_OWORD *)(v12 + 80) = v10;
          *(_BYTE *)(v12 + 96) = v18;
          *(_WORD *)(v12 + 98) = v19;
          *(_WORD *)(v12 + 100) = v20;
          *(_QWORD *)(v12 + 104) = v21;
          --v4;
          v2 = v22;
        }
        while (v4);
      }
    }
  }
}

uint64_t sub_24977C0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  unint64_t *v7;
  uint64_t v8;
  unint64_t v9;

  v5 = *(_QWORD *)(a1 + 16);
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  result = sub_249837588();
  if (!v2 && v5)
  {
    swift_bridgeObjectRetain();
    v7 = (unint64_t *)(a1 + 40);
    do
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
      sub_249748BCC(v8, v9);
      sub_24977C874();
      sub_249837594();
      v7 += 2;
      sub_249748C10(v8, v9);
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24977C210(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = *(_QWORD *)(a1 + 16);
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
  result = sub_249837588();
  if (!v2 && v5)
  {
    swift_bridgeObjectRetain();
    v7 = a1 + 104;
    do
    {
      __swift_mutable_project_boxed_opaque_existential_1(a2, *(_QWORD *)(a2 + 24));
      sub_24977C8EC();
      sub_249837594();
      v7 += 80;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24977C32C(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_24977C378(a1);
  return v2;
}

uint64_t sub_24977C378(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31[8];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v4 = sub_249837708();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    OUTLINED_FUNCTION_5_8(v4, v5, v6, v7, v8, v9, v10, v11, v25, v28, v29, v31[0], v32, v33, v34);
    sub_24977C928();
    v12 = OUTLINED_FUNCTION_0_13();
    *(_OWORD *)(v1 + 16) = v26;
    OUTLINED_FUNCTION_5_8(v12, v13, v14, v15, v16, v17, v18, v19, v26, *((uint64_t *)&v26 + 1), v30, v31[0], v32, v33, v34);
    sub_24977C964();
    OUTLINED_FUNCTION_0_13();
    *(_QWORD *)(v1 + 48) = v27;
    sub_24977BE04((uint64_t)v31);
    *(_QWORD *)(v1 + 40) = v21;
    sub_24977BF68((uint64_t)v31);
    *(_QWORD *)(v1 + 32) = v22;
    OUTLINED_FUNCTION_9_3(v22, v23, v24);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_24977C4CC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23[8];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v3 = sub_24983772C();
  OUTLINED_FUNCTION_3_10(v3, v4, v5, v6, v7, v8, v9, v10, v1[2], v1[3], v21, v23[0], v24, v25, v26);
  sub_24977C874();
  v11 = OUTLINED_FUNCTION_2_13();
  if (!v2)
  {
    OUTLINED_FUNCTION_3_10(v11, v12, v13, v14, v15, v16, v17, v18, v1[6], v20, v22, v23[0], v24, v25, v26);
    sub_24977C8B0();
    OUTLINED_FUNCTION_2_13();
    sub_24977C0F4(v1[5], (uint64_t)v23);
    v11 = sub_24977C210(v1[4], (uint64_t)v23);
  }
  return OUTLINED_FUNCTION_9_3(v11, v12, v13);
}

uint64_t sub_24977C5B8()
{
  uint64_t v0;

  sub_249748C10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24977C5E4()
{
  sub_24977C5B8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UVC1Object()
{
  return objc_opt_self();
}

unint64_t sub_24977C628()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257880F20;
  if (!qword_257880F20)
  {
    v1 = type metadata accessor for UVC1Object();
    result = MEMORY[0x24BCF8F94](&unk_24983A90C, v1);
    atomic_store(result, (unint64_t *)&qword_257880F20);
  }
  return result;
}

uint64_t sub_24977C664@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_24977C32C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_24977C68C(_QWORD *a1)
{
  return sub_24977C4CC(a1);
}

uint64_t sub_24977C6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  OUTLINED_FUNCTION_7_8();
  sub_249748BCC(v4, v5);
  v6 = MEMORY[0x24BCF78FC](v2, v3, v4, v5);
  sub_249748C10(v4, v5);
  OUTLINED_FUNCTION_1_4();
  return v6 & 1;
}

uint64_t sub_24977C718(uint64_t *a1, uint64_t *a2)
{
  return sub_24977C6AC(*a1, *a2) & 1;
}

uint64_t sub_24977C738()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_249748BCC(v2, v1);
  sub_24983694C();
  return sub_249748C10(v2, v1);
}

uint64_t sub_24977C784()
{
  sub_249837690();
  OUTLINED_FUNCTION_7_8();
  sub_24983694C();
  OUTLINED_FUNCTION_1_4();
  return sub_2498376E4();
}

uint64_t sub_24977C7D4()
{
  return sub_24977C784();
}

uint64_t sub_24977C7F4()
{
  return sub_24977C738();
}

uint64_t sub_24977C814()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *v0;
  sub_249837690();
  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  sub_249748BCC(v2, v3);
  sub_24983694C();
  sub_249748C10(v2, v3);
  return sub_2498376E4();
}

unint64_t sub_24977C874()
{
  unint64_t result;

  result = qword_257880F28;
  if (!qword_257880F28)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UVC1Digest, &type metadata for UVC1Digest);
    atomic_store(result, (unint64_t *)&qword_257880F28);
  }
  return result;
}

unint64_t sub_24977C8B0()
{
  unint64_t result;

  result = qword_257880F30;
  if (!qword_257880F30)
  {
    result = MEMORY[0x24BCF8F94](&unk_2498393F8, &type metadata for UVC1Timestamp);
    atomic_store(result, (unint64_t *)&qword_257880F30);
  }
  return result;
}

unint64_t sub_24977C8EC()
{
  unint64_t result;

  result = qword_257880F38;
  if (!qword_257880F38)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983C794, &type metadata for UVC1Link);
    atomic_store(result, (unint64_t *)&qword_257880F38);
  }
  return result;
}

unint64_t sub_24977C928()
{
  unint64_t result;

  result = qword_257880F40;
  if (!qword_257880F40)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UVC1Digest, &type metadata for UVC1Digest);
    atomic_store(result, (unint64_t *)&qword_257880F40);
  }
  return result;
}

unint64_t sub_24977C964()
{
  unint64_t result;

  result = qword_257880F48;
  if (!qword_257880F48)
  {
    result = MEMORY[0x24BCF8F94](&unk_249839420, &type metadata for UVC1Timestamp);
    atomic_store(result, (unint64_t *)&qword_257880F48);
  }
  return result;
}

unint64_t sub_24977C9A0()
{
  unint64_t result;

  result = qword_257880F50;
  if (!qword_257880F50)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983C7BC, &type metadata for UVC1Link);
    atomic_store(result, (unint64_t *)&qword_257880F50);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_13()
{
  return sub_249837564();
}

uint64_t OUTLINED_FUNCTION_1_12()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_13()
{
  return sub_249837594();
}

uint64_t OUTLINED_FUNCTION_3_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&a12, a15);
}

uint64_t OUTLINED_FUNCTION_5_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&a12, a15);
}

uint64_t OUTLINED_FUNCTION_7_8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748BCC(v0, v1);
}

ValueMetadata *type metadata accessor for UVC1Refs()
{
  return &type metadata for UVC1Refs;
}

uint64_t sub_24977CA50(void (*a1)(__int128 *__return_ptr, __int128 *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *i;
  __int128 v10;
  __int128 v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v21 = MEMORY[0x24BEE4AF8];
    sub_24974E2E0();
    v6 = v21;
    for (i = (__int128 *)(a3 + 32); ; ++i)
    {
      v18 = *i;
      a1(&v19, &v18, &v17);
      if (v4)
        break;
      v4 = 0;
      v10 = v19;
      v11 = v20;
      v21 = v6;
      v12 = *(_QWORD *)(v6 + 16);
      if (v12 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        v15 = v20;
        v16 = v19;
        sub_24974E2E0();
        v11 = v15;
        v10 = v16;
        v6 = v21;
      }
      *(_QWORD *)(v6 + 16) = v12 + 1;
      v13 = v6 + 32 * v12;
      *(_OWORD *)(v13 + 32) = v10;
      *(_OWORD *)(v13 + 48) = v11;
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_24977CB68(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257880F60);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24977D3C4();
  sub_249837720();
  if (!v1)
  {
    v8 = sub_24983745C();
    MEMORY[0x24BDAC7A8](v8);
    *(&v11 - 2) = (uint64_t)v6;
    v9 = sub_24977CA50((void (*)(__int128 *__return_ptr, __int128 *, uint64_t *))sub_24977D400, (uint64_t)(&v11 - 4), v8);
    swift_bridgeObjectRelease();
    v7 = sub_24977DF70(v9);
    OUTLINED_FUNCTION_1_13((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v7;
}

uint64_t sub_24977CCC8@<X0>(char *a1@<X0>, _QWORD *a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t result;

  v5 = v3;
  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  v9 = a1[3];
  v10 = a1[4];
  v11 = a1[5];
  v12 = a1[6];
  v13 = a1[7];
  v14 = a1[8];
  v15 = a1[9];
  v16 = a1[10];
  v17 = a1[11];
  v18 = a1[12];
  v19 = a1[13];
  v20 = a1[14];
  v21 = a1[15];
  *a3 = v6;
  a3[1] = v7;
  a3[2] = v8;
  a3[3] = v9;
  a3[4] = v10;
  a3[5] = v11;
  a3[6] = v12;
  a3[7] = v13;
  a3[8] = v14;
  a3[9] = v15;
  a3[10] = v16;
  a3[11] = v17;
  a3[12] = v18;
  a3[13] = v19;
  a3[14] = v20;
  a3[15] = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880F60);
  sub_24977C928();
  result = sub_249837438();
  if (v5)
    *a2 = v5;
  return result;
}

uint64_t sub_24977CE0C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  int64_t v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257880F70);
  v23 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24977D3C4();
  sub_249837744();
  v24 = a2 + 64;
  OUTLINED_FUNCTION_0_14();
  v10 = v9 & v8;
  v28 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v10)
    goto LABEL_3;
LABEL_2:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * i);
    v20 = v19[1];
    v21 = *(_OWORD *)(*(_QWORD *)(a2 + 48) + 16 * i);
    v26 = *v19;
    v27 = v20;
    v25 = v21;
    sub_249748BCC(v26, v20);
    sub_24977C874();
    sub_2498374F8();
    if (v2)
    {
      swift_release();
      OUTLINED_FUNCTION_1_13((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8));
      return OUTLINED_FUNCTION_4_12();
    }
    result = OUTLINED_FUNCTION_4_12();
    if (v10)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v13 >= v28)
      goto LABEL_22;
    v17 = *(_QWORD *)(v24 + 8 * v13);
    if (!v17)
      break;
LABEL_13:
    v10 = (v17 - 1) & v17;
  }
  v18 = v13 + 1;
  if (v13 + 1 >= v28)
    goto LABEL_22;
  v17 = *(_QWORD *)(v24 + 8 * v18);
  if (v17)
    goto LABEL_12;
  v18 = v13 + 2;
  if (v13 + 2 >= v28)
    goto LABEL_22;
  v17 = *(_QWORD *)(v24 + 8 * v18);
  if (v17)
    goto LABEL_12;
  v18 = v13 + 3;
  if (v13 + 3 >= v28)
  {
LABEL_22:
    v22 = v23;
    swift_release();
    return OUTLINED_FUNCTION_1_13((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  }
  v17 = *(_QWORD *)(v24 + 8 * v18);
  if (v17)
  {
LABEL_12:
    v13 = v18;
    goto LABEL_13;
  }
  while (1)
  {
    v13 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v13 >= v28)
      goto LABEL_22;
    v17 = *(_QWORD *)(v24 + 8 * v13);
    ++v18;
    if (v17)
      goto LABEL_13;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_24977D074@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_24977CB68(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_24977D09C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_24977CE0C(a1, *v1);
}

unint64_t sub_24977D0B8()
{
  unint64_t result;

  result = qword_257880F58;
  if (!qword_257880F58)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983AA2C, &type metadata for UVC1Refs);
    atomic_store(result, (unint64_t *)&qword_257880F58);
  }
  return result;
}

uint64_t sub_24977D0F8(_QWORD *a1, _QWORD *a2)
{
  return sub_24977D0F4(*a1, *a2);
}

uint64_t sub_24977D104(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_24977D1F0(a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24977D13C(uint64_t a1)
{
  _BYTE v3[72];

  sub_249837690();
  swift_bridgeObjectRetain();
  sub_24977D1F0((uint64_t)v3, a1);
  swift_bridgeObjectRelease();
  return sub_2498376E4();
}

uint64_t sub_24977D190()
{
  uint64_t *v0;

  return sub_24977D13C(*v0);
}

uint64_t sub_24977D198(uint64_t a1)
{
  uint64_t *v1;

  return sub_24977D104(a1, *v1);
}

uint64_t sub_24977D1A0()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_249837690();
  swift_bridgeObjectRetain();
  sub_24977D1F0((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_2498376E4();
}

uint64_t sub_24977D1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v13;

  v13 = a2 + 64;
  OUTLINED_FUNCTION_0_14();
  v4 = v3 & v2;
  v6 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  if (!v4)
    goto LABEL_3;
LABEL_2:
  for (v4 &= v4 - 1; ; v4 = (v10 - 1) & v10)
  {
    sub_24983769C();
    OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_29();
    sub_24983694C();
    OUTLINED_FUNCTION_28();
    OUTLINED_FUNCTION_28();
    v7 ^= sub_2498376E4();
    if (v4)
      goto LABEL_2;
LABEL_3:
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v9 >= v6)
      goto LABEL_17;
    v10 = *(_QWORD *)(v13 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v6)
        goto LABEL_17;
      v10 = *(_QWORD *)(v13 + 8 * v8);
      if (!v10)
        break;
    }
LABEL_14:
    ;
  }
  v11 = v9 + 2;
  if (v11 < v6)
  {
    v10 = *(_QWORD *)(v13 + 8 * v11);
    if (!v10)
    {
      while (1)
      {
        v8 = v11 + 1;
        if (__OFADD__(v11, 1))
          break;
        if (v8 >= v6)
          goto LABEL_17;
        v10 = *(_QWORD *)(v13 + 8 * v8);
        ++v11;
        if (v10)
          goto LABEL_14;
      }
LABEL_19:
      __break(1u);
    }
    v8 = v11;
    goto LABEL_14;
  }
LABEL_17:
  swift_release();
  return sub_2498376A8();
}

unint64_t sub_24977D3C4()
{
  unint64_t result;

  result = qword_257880F68;
  if (!qword_257880F68)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDeviceID, &type metadata for UniversalControlDeviceID);
    atomic_store(result, (unint64_t *)&qword_257880F68);
  }
  return result;
}

uint64_t sub_24977D400@<X0>(char *a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_24977CCC8(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_1_13@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  uint64_t v0;
  unint64_t v1;

  return sub_249748C10(v0, v1);
}

uint64_t sub_24977D450()
{
  _QWORD *v0;

  return UVCClientAssertion.description.getter(*v0);
}

uint64_t sub_24977D458(uint64_t a1, uint64_t a2)
{
  return sub_24977D490(a1, a2, sub_2497760E0, type metadata accessor for UniversalControlDisplay, static UniversalControlDisplay.== infix(_:_:));
}

uint64_t sub_24977D474(uint64_t a1, uint64_t a2)
{
  return sub_24977D490(a1, a2, sub_2497760E0, type metadata accessor for UniversalControlInputDevice, static UniversalControlInputDevice.== infix(_:_:));
}

#error "24977D558: call analysis failed (funcsize=119)"

void sub_24977D684()
{
  JUMPOUT(0x24977D550);
}

BOOL sub_24977D68C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 *v3;
  __int128 *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  int v9;
  _BOOL8 result;
  BOOL v12;
  __int128 v13;
  __int128 __s1;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (__int128 *)(a1 + 32);
  v4 = (__int128 *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v6 = *v3++;
    v7 = v6;
    v8 = *v4++;
    v13 = v8;
    __s1 = v7;
    v9 = memcmp(&__s1, &v13, 0x10uLL);
    result = v9 == 0;
    v12 = v5-- != 0;
  }
  while (!v9 && v12);
  return result;
}

uint64_t sub_24977D750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v13;
  uint64_t v15;
  uint64_t v16;

  v8 = *(_QWORD *)(a1 + 16);
  if (v8 == *(_QWORD *)(a2 + 16))
  {
    if (!v8 || a1 == a2)
    {
      LOBYTE(a1) = 1;
    }
    else
    {
      v9 = v8 - 1;
      v10 = a2 + 100;
      v11 = a1 + 100;
      do
      {
        LOBYTE(v15) = *(_BYTE *)(v10 - 4);
        *(_DWORD *)((char *)&v15 + 2) = *(_DWORD *)(v10 - 2);
        OUTLINED_FUNCTION_68_1(a1, a2, a3, a4, a5, a6, a7, a8, *(_QWORD *)(v10 - 68), *(_QWORD *)(v10 - 60), *(_QWORD *)(v10 - 52), *(_QWORD *)(v10 - 44), *(_QWORD *)(v10 - 36), *(_QWORD *)(v10 - 28), *(_QWORD *)(v10 - 20), *(_QWORD *)(v10 - 12), v15, v16, *(_OWORD *)(v11 - 68));
        v13 = v9-- != 0;
        if ((a1 & 1) == 0)
          break;
        v10 += 70;
        v11 += 70;
      }
      while (v13);
    }
  }
  else
  {
    LOBYTE(a1) = 0;
  }
  return a1 & 1;
}

uint64_t sub_24977D820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t i;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v8 = *(_QWORD *)(a1 + 16);
  if (v8 == *(_QWORD *)(a2 + 16))
  {
    if (!v8 || a1 == a2)
      return 1;
    for (i = 0; ; i += 80)
    {
      v12 = *(_QWORD *)(a1 + i + 104);
      v13 = *(_QWORD *)(a2 + i + 104);
      LOBYTE(v15) = *(_BYTE *)(a2 + i + 96);
      *(_DWORD *)((char *)&v15 + 2) = *(_DWORD *)(a2 + i + 98);
      OUTLINED_FUNCTION_68_1(a1, a2, a3, a4, a5, a6, a7, a8, *(_QWORD *)(a2 + i + 32), *(_QWORD *)(a2 + i + 40), *(_QWORD *)(a2 + i + 48), *(_QWORD *)(a2 + i + 56), *(_QWORD *)(a2 + i + 64), *(_QWORD *)(a2 + i + 72), *(_QWORD *)(a2 + i + 80), *(_QWORD *)(a2 + i + 88), v15, v16, *(_OWORD *)(a1 + i + 32));
      if ((a1 & 1) == 0 || (double)v12 / 1000.0 != (double)v13 / 1000.0)
        break;
      if (!--v8)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_24977D910(uint64_t a1, uint64_t a2)
{
  return sub_24977D948(a1, a2, sub_2497760E0, type metadata accessor for UniversalControlDevice, static UniversalControlDevice.== infix(_:_:));
}

uint64_t sub_24977D92C(uint64_t a1, uint64_t a2)
{
  return sub_24977D948(a1, a2, sub_2497760E0, type metadata accessor for UniversalControlEdgeRegion, static UniversalControlEdgeRegion.== infix(_:_:));
}

#error "24977D9FC: call analysis failed (funcsize=115)"

void sub_24977DB2C()
{
  JUMPOUT(0x24977D9F4);
}

void sub_24977DB34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  void (*v34)(_QWORD *, _QWORD);
  _QWORD v35[3];
  unint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[6];
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;

  v2 = sub_249836A18();
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v38 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)v35 - v5;
  v36 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
    v6 = sub_2498372D0();
  else
    v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v46 = MEMORY[0x24BEE4AF8];
    sub_24974E314();
    v43 = sub_24976CB24(a1);
    v44 = v7;
    v45 = v8 & 1;
    if (v6 < 0)
    {
      __break(1u);
LABEL_26:
      __break(1u);
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFFF8;
      if (a1 < 0)
        v9 = a1;
      v35[1] = v9;
      v35[2] = MEMORY[0x24BEE4AD0] + 8;
      v41 = a1;
      v10 = v37;
      do
      {
        sub_249783AE0(v42, v43, v44, v45, a1);
        v12 = v11;
        v13 = v42[0];
        sub_2498369D0();
        v14 = v38;
        v15 = v39;
        v16 = v40;
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v38, v10, v40);
        v17 = sub_2498369F4();
        v19 = v18;
        v20 = *(void (**)(char *, uint64_t))(v15 + 8);
        v20(v14, v16);
        v20(v10, v16);
        v42[5] = v13;
        sub_249783D14(0, (unint64_t *)&qword_2578805A8);
        swift_unknownObjectRetain();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v21 = v42[4];
          swift_unknownObjectRelease();

        }
        else
        {
          swift_unknownObjectRelease();

          v21 = 0;
        }
        v22 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_24974E314();
          v22 = v46;
        }
        v23 = *(_QWORD *)(v22 + 16);
        if (v23 >= *(_QWORD *)(v22 + 24) >> 1)
        {
          sub_24974E314();
          v22 = v46;
        }
        *(_QWORD *)(v22 + 16) = v23 + 1;
        v24 = (_QWORD *)(v22 + 24 * v23);
        v24[4] = v17;
        v24[5] = v19;
        v24[6] = v21;
        if (v36)
        {
          if ((v45 & 1) == 0)
            goto LABEL_26;
          if (sub_2498372AC())
            swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257881288);
          v34 = (void (*)(_QWORD *, _QWORD))sub_249836CAC();
          sub_2498372F4();
          v34(v42, 0);
        }
        else
        {
          v25 = v43;
          v26 = v44;
          v27 = v45;
          sub_249783944(v43, v44, v45, v41);
          v29 = v28;
          v31 = v30;
          v33 = v32;
          sub_249783CBC(v25, v26, v27);
          v43 = v29;
          v44 = v31;
          v45 = v33 & 1;
        }
        --v6;
        a1 = v41;
      }
      while (v6);
      sub_249783CBC(v43, v44, v45);
    }
  }
}

uint64_t sub_24977DEFC(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  OUTLINED_FUNCTION_22_1();
  swift_unknownObjectRetain();
  v6 = a3;
  v5(a2, a3);
  OUTLINED_FUNCTION_17_0();

  return swift_unknownObjectRelease();
}

uint64_t sub_24977DF5C(uint64_t a1)
{
  return sub_24977DF98(a1, &qword_257881250, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249782634);
}

uint64_t sub_24977DF70(uint64_t a1)
{
  return sub_24977DF98(a1, &qword_257881230, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249782910);
}

uint64_t sub_24977DF84(uint64_t a1)
{
  return sub_24977DF98(a1, &qword_257881260, (void (*)(uint64_t, uint64_t, uint64_t *))sub_2497832B8);
}

uint64_t sub_24977DF98(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = sub_249837354();
  }
  else
  {
    v4 = MEMORY[0x24BEE4B00];
  }
  v7 = v4;
  v5 = swift_bridgeObjectRetain();
  a3(v5, 1, &v7);
  swift_bridgeObjectRelease();
  return v7;
}

_QWORD *sub_24977E040()
{
  uint64_t v0;
  _QWORD *result;

  sub_249783D14(0, (unint64_t *)&qword_257880238);
  sub_249836FE8();
  type metadata accessor for UniversalControlManager();
  v0 = swift_allocObject();
  result = sub_24977F624();
  qword_257880F80 = v0;
  return result;
}

uint64_t static UniversalControlManager.shared.getter()
{
  if (qword_25787F6C8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_24977E0E0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_24977E110(v0);
}

uint64_t sub_24977E108()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24977E110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  if (!PlatformIsAppleInternal())
    return swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_73_0();
  v4 = sub_24977D948(a1, v3, sub_2497760E0, type metadata accessor for UniversalControlDevice, static UniversalControlDevice.== infix(_:_:));
  OUTLINED_FUNCTION_42();
  if ((v4 & 1) != 0)
    return swift_bridgeObjectRelease();
  sub_24977E6C0(a1);
  return OUTLINED_FUNCTION_25_4();
}

#error "24977E2AC: call analysis failed (funcsize=285)"

void sub_24977E64C(_QWORD *a1)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_27();
}

void sub_24977E680(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    sub_24977E110(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24977E110(*a1);
    OUTLINED_FUNCTION_27();
  }
}

uint64_t sub_24977E6C0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_32_4();
}

void sub_24977E6CC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_24977E71C(v0);
}

void sub_24977E6F4()
{
  OUTLINED_FUNCTION_16();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_57_1();
}

void sub_24977E71C(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v1 + 24) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_0();
}

void sub_24977E754()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_24977E7A4(v0);
}

void sub_24977E77C()
{
  OUTLINED_FUNCTION_16();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_57_1();
}

void sub_24977E7A4(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v1 + 32) = a1;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_24_0();
}

uint64_t sub_24977E7DC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return OUTLINED_FUNCTION_32_4();
}

uint64_t sub_24977E7E8()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_24977E818(v0);
}

uint64_t sub_24977E810()
{
  return swift_bridgeObjectRetain();
}

id sub_24977E81C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 88), sel_enabled);
}

id sub_24977E83C()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_31_4(sel_setEnabled_, *(void **)(v0 + 88));
}

void sub_24977E850(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + 88);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v3, sel_enabled);
  OUTLINED_FUNCTION_27();
}

id sub_24977E88C(void **a1)
{
  return OUTLINED_FUNCTION_31_4(sel_setEnabled_, *a1);
}

uint64_t sub_24977E8A0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_24977E8A8(uint64_t result)
{
  uint64_t v1;
  char v2;
  id v3;

  v2 = result & 1;
  if (*(_BYTE *)(v1 + 48) != (result & 1))
  {
    v3 = *(id *)(v1 + 80);
    sub_24976038C(1, v3, v2, v3);

    return OUTLINED_FUNCTION_25_4();
  }
  return result;
}

void (*sub_24977E908(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 48);
  return sub_24977E924;
}

void sub_24977E924(uint64_t a1)
{
  sub_24977E8A8(*(unsigned __int8 *)(a1 + 8));
  OUTLINED_FUNCTION_27();
}

void sub_24977E944()
{
  uint64_t v0;

  v0 = swift_retain();
  sub_24977E994(v0);
}

void sub_24977E96C()
{
  OUTLINED_FUNCTION_16();
  swift_retain();
  OUTLINED_FUNCTION_57_1();
}

void sub_24977E994(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v1 + 56) = a1;
  swift_release();
  OUTLINED_FUNCTION_24_0();
}

void sub_24977E9CC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_retain();
  sub_24977EA38(&v1);
}

void sub_24977EA04(_QWORD *a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_16();
  *a1 = *(_QWORD *)(v1 + 64);
  swift_retain();
  OUTLINED_FUNCTION_24_0();
}

void sub_24977EA38(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  OUTLINED_FUNCTION_44_0();
  *(_QWORD *)(v1 + 64) = v2;
  swift_release();
  OUTLINED_FUNCTION_24_0();
}

uint64_t sub_24977EA70()
{
  return 0;
}

uint64_t sub_24977EA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24977EB58(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))sub_24977EA8C);
}

uint64_t sub_24977EA8C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_47_1();
  v0 = OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_60_2(v0);
  OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_48_1();
  sub_249760638();
  return OUTLINED_FUNCTION_20_5();
}

uint64_t sub_24977EAD8()
{
  swift_release();
  return swift_deallocObject();
}

id sub_24977EAFC(void *a1)
{
  id v2;
  id v3;

  if (!a1)
    return 0;
  v2 = a1;
  v3 = sub_2498109AC(a1);

  return v3;
}

void sub_24977EB40()
{
  uint64_t v0;

  sub_249760864(0, *(char **)(v0 + 80));
}

uint64_t sub_24977EB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24977EB58(a1, a2, a3, (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))sub_24977EBBC);
}

uint64_t sub_24977EB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, uint64_t))
{
  _QWORD *v7;

  v7 = (_QWORD *)(a1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
  OUTLINED_FUNCTION_16();
  return a4(*v7, v7[1], a2, a3);
}

uint64_t sub_24977EBBC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_47_1();
  v0 = OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_60_2(v0);
  OUTLINED_FUNCTION_21_2();
  OUTLINED_FUNCTION_48_1();
  sub_249760994();
  return OUTLINED_FUNCTION_20_5();
}

void sub_24977EC08(void *a1, void (*a2)(void))
{
  id v4;

  if (qword_25787F6E0 != -1)
    swift_once();
  v4 = sub_24977EAFC(a1);
  a2();

}

void sub_24977EC7C(void *a1)
{
  uint64_t v1;

  sub_24977EC08(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_24977EC94(uint64_t a1, uint64_t a2)
{
  return sub_24977ECAC(a1, a2, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_249760BC0);
}

uint64_t sub_24977ECA0(uint64_t a1, uint64_t a2)
{
  return sub_24977ECAC(a1, a2, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_249760DC4);
}

uint64_t sub_24977ECAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(_QWORD *)(v3 + 80);
  swift_retain();
  return a3(0, v6, a1, a2);
}

void sub_24977ED00(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;

  v6 = *a1;
  v7 = *(char **)(v3 + 80);
  swift_retain();
  OUTLINED_FUNCTION_21_2();
  sub_249760124(0, v7, v6, a2, a3);
}

void sub_24977ED50(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  id v5;

  OUTLINED_FUNCTION_69_2(a1, (unint64_t *)&qword_2578805A8);
  v5 = NSError.init(NSOSStatusErrorDomain:debugDescription:__file:__line:)(-6772, 0xD000000000000043, 0x8000000249841100);
  a4();

}

uint64_t sub_24977EDDC(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v3;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  char *v25;
  _QWORD aBlock[6];

  v7 = *(char **)(v3 + 80);
  v8 = OUTLINED_FUNCTION_18_1();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = (_QWORD *)OUTLINED_FUNCTION_18_1();
  v9[2] = a1;
  v9[3] = sub_24977F164;
  v9[4] = v8;
  swift_retain_n();
  OUTLINED_FUNCTION_61_2();
  swift_retain_n();
  v10 = sub_24975FDAC();
  if (v10)
  {
    v11 = (void *)v10;
    v12 = *(void **)&v7[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy];
    if (v7[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8])
    {
      if (v7[OBJC_IVAR____TtC16UniversalControl13AgentXPCProxy__adminRemoteObjectProxy + 8] != 1)
      {
        v23 = (_QWORD *)OUTLINED_FUNCTION_18_1();
        v23[2] = v7;
        v23[3] = sub_24977F198;
        v23[4] = v9;
        aBlock[4] = sub_24976CDB8;
        aBlock[5] = v23;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24977DEFC;
        aBlock[3] = &block_descriptor_1;
        v24 = _Block_copy(aBlock);
        swift_unknownObjectRetain();
        v25 = v7;
        OUTLINED_FUNCTION_15_4();
        swift_release();
        objc_msgSend(v11, sel_xpcAdminInterfaceWithCompletion_, v24);
        OUTLINED_FUNCTION_67_1();
        _Block_release(v24);
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_34_4();
      swift_unknownObjectRetain();
      v13 = OUTLINED_FUNCTION_34_4();
      OUTLINED_FUNCTION_69_2((uint64_t)v13, &qword_2578805B0);
      sub_24977F1A8();
      v14 = sub_249836CA0();
      OUTLINED_FUNCTION_34_4();
      sub_24977DB34(v14);
      sub_24977DF98(v15, &qword_257881278, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249782DF4);
      a2();
      OUTLINED_FUNCTION_42();
      OUTLINED_FUNCTION_63_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_63_2();
      OUTLINED_FUNCTION_67_1();
      v16 = v12;
      v17 = 1;
    }
    else
    {
      swift_unknownObjectRetain();
      sub_2497625BC();
      v16 = v12;
      v17 = 0;
    }
    sub_24976B6DC(v16, v17);
LABEL_9:
    OUTLINED_FUNCTION_78();
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_67_1();
    goto LABEL_10;
  }
  sub_249761470(0);
  v19 = v18;
  OUTLINED_FUNCTION_69_2((uint64_t)v18, &qword_2578805B0);
  sub_24977F1A8();
  v20 = sub_249836CA0();
  v21 = v19;
  sub_24977DB34(v20);
  sub_24977DF98(v22, &qword_257881278, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249782DF4);
  a2();
  OUTLINED_FUNCTION_42();
  OUTLINED_FUNCTION_66_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_66_3();
  OUTLINED_FUNCTION_66_3();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_34_1();
LABEL_10:
  swift_release();
  return swift_release_n();
}

uint64_t sub_24977F0FC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;

  sub_24977DB34(a1);
  sub_24977DF98(v4, &qword_257881278, (void (*)(uint64_t, uint64_t, uint64_t *))sub_249782DF4);
  a3();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24977F164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24977F0FC(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_24977F16C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_24977F198()
{
  sub_2497625BC();
}

unint64_t sub_24977F1A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578805B8;
  if (!qword_2578805B8)
  {
    sub_249783D14(255, &qword_2578805B0);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_2578805B8);
  }
  return result;
}

uint64_t sub_24977F1F8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_24977F23C(uint64_t a1, unint64_t a2, unint64_t a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v5;
  char *v11;

  v11 = *(char **)(v5 + 80);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_21_2();
  return sub_249760FE4(0, v11, a1, a2, a3, a4, a5);
}

#error "24977F31C: call analysis failed (funcsize=67)"

void sub_24977F3B4(uint64_t a1, uint64_t a2)
{
  sub_249762E24(a2);
}

uint64_t sub_24977F3DC()
{
  return sub_24977F590((uint64_t (*)(_QWORD, uint64_t))sub_24977F3B4);
}

uint64_t sub_24977F3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t var50[12];

  v6 = OUTLINED_FUNCTION_9_5();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_37_3();
  sub_24976290C((uint64_t)CFSTR("UVCClientAssertionSingleDeviceMode"), v3, a1, a2, v10, v11, v12, v13, var50[0], var50[1], var50[2], var50[3], var50[4], var50[5], var50[6], var50[7], var50[8], var50[9], var50[10],
    var50[11]);
  OUTLINED_FUNCTION_46_1((uint64_t)var50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  v14 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  OUTLINED_FUNCTION_46_1(v15 + v14, (uint64_t)var50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
  sub_249836B44();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_30_1();
  v16 = OUTLINED_FUNCTION_74_1();
  OUTLINED_FUNCTION_56_1(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  return v16;
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = OUTLINED_FUNCTION_9_5();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_24977F584()
{
  return sub_24977F590((uint64_t (*)(_QWORD, uint64_t))sub_249783DA8);
}

uint64_t sub_24977F590(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_9_5() - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_24977F5CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16();
  return *(unsigned __int8 *)(v0 + 72);
}

void sub_24977F5F4(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_44_0();
  *(_BYTE *)(v1 + 72) = a1;
  OUTLINED_FUNCTION_24_0();
}

_QWORD *sub_24977F624()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v20;
  uint64_t v21;

  OUTLINED_FUNCTION_51_2();
  v1 = (_QWORD *)v0;
  v3 = v2;
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 24) = v4;
  *(_QWORD *)(v0 + 32) = v4;
  *(_QWORD *)(v0 + 40) = v4;
  *(_BYTE *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 56) = 0;
  type metadata accessor for UVC1Config();
  *(_QWORD *)(v0 + 64) = sub_2497E7F28();
  *(_BYTE *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 96) = 0;
  *(_QWORD *)(v0 + 104) = 0;
  if (qword_25787F6B0 != -1)
    swift_once();
  v5 = (void *)qword_257890810;
  v1[10] = qword_257890810;
  v6 = (void *)type metadata accessor for UniversalControlPreferences();
  v7 = v5;
  v8 = objc_msgSend(v6, sel_sharedPreferences);
  v1[11] = v8;
  v9 = OUTLINED_FUNCTION_18_1();
  *(_QWORD *)(v9 + 24) = &off_251AB3390;
  swift_unknownObjectWeakInit();
  v20 = v8;
  v10 = v3;
  v11 = sub_249758D90(v10, (uint64_t)sub_249770920, v9);
  v13 = v12;
  v21 = v11;
  v14 = (void *)v1[10];
  type metadata accessor for AgentXPCProxy(0);
  sub_249783CD4(&qword_257880680, 255, type metadata accessor for AgentXPCProxy, (uint64_t)&unk_2498398A0);
  v15 = v14;
  sub_249836B5C();
  *(_QWORD *)(OUTLINED_FUNCTION_18_1() + 16) = v13;
  sub_249836B8C();
  OUTLINED_FUNCTION_52_2();
  OUTLINED_FUNCTION_71_2();
  OUTLINED_FUNCTION_41_1();
  sub_249836B2C();

  OUTLINED_FUNCTION_49_0();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_17_0();
  v16 = (void *)v1[11];
  sub_249783CD4((unint64_t *)&unk_2578807D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for UniversalControlPreferences, (uint64_t)&protocol conformance descriptor for UniversalControlPreferences);
  v17 = v16;
  sub_249836B5C();
  *(_QWORD *)(OUTLINED_FUNCTION_18_1() + 16) = v13;
  OUTLINED_FUNCTION_52_2();
  OUTLINED_FUNCTION_71_2();
  OUTLINED_FUNCTION_34_1();
  sub_249836B2C();

  OUTLINED_FUNCTION_41_1();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_17_0();
  v18 = v1[12];
  v1[12] = v21;
  v1[13] = v13;
  sub_24974C100(v18);
  return v1;
}

uint64_t UniversalControlManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_24974C100(*(_QWORD *)(v0 + 96));
  return v0;
}

uint64_t UniversalControlManager.__deallocating_deinit()
{
  UniversalControlManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24977F948@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for UniversalControlManager();
  result = sub_249836B68();
  *a1 = result;
  return result;
}

uint64_t UniversalControlManager.description.getter()
{
  return sub_249837768();
}

uint64_t sub_24977F990()
{
  return UniversalControlManager.description.getter();
}

uint64_t UniversalControlManager.debugDescription.getter()
{
  sub_249837768();
  sub_249836DB4();
  OUTLINED_FUNCTION_42();
  sub_249836DB4();
  sub_24974C0C4();
  sub_249836E20();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  sub_249836DB4();
  return 60;
}

uint64_t sub_24977FA64()
{
  return UniversalControlManager.debugDescription.getter();
}

Swift::Void __swiftcall UniversalControlManager.waitUntilSynchronized(in:forInterval:)(NSRunLoopMode in, Swift::Double forInterval)
{
  uint64_t v2;
  __CFString *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __CFRunLoopSource *v8;
  __CFRunLoop *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  unint64_t v14;
  double v15;
  uint64_t v16;
  CFRunLoopSourceContext context;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  OUTLINED_FUNCTION_22_1();
  v4 = (__CFString *)sub_249836D18();
  OUTLINED_FUNCTION_42();
  v5 = mach_absolute_time();
  HIDTime.init(nanoseconds:)(forInterval * 1000000000.0);
  memset(&context.hash, 0, 32);
  if (__CFADD__(v5, v6))
    v7 = -1;
  else
    v7 = v5 + v6;
  memset(&context, 0, 48);
  v8 = CFRunLoopSourceCreate(0, 0, &context);
  v9 = CFRunLoopGetCurrent();
  CFRunLoopAddSource(v9, v8, v4);
  OUTLINED_FUNCTION_16();
  for (; (*(_BYTE *)(v2 + 72) & 1) == 0; v5 = v16)
  {
    if (v7 >= v5)
      v10 = v7 - v5;
    else
      v10 = 0;
    v11 = static HIDTime.timebase.getter();
    v13 = round((double)v10 * (double)(unint64_t)v11 / (double)v12);
    if (v13 >= 1.84467441e19)
    {
      v14 = -1;
    }
    else
    {
      if ((~*(_QWORD *)&v13 & 0x7FF0000000000000) == 0)
      {
        __break(1u);
LABEL_18:
        __break(1u);
      }
      if (v13 <= -1.0)
        goto LABEL_18;
      v14 = (unint64_t)v13;
    }
    v15 = (double)v14 * 0.000000001;
    if (v15 <= 0.0)
      break;
    CFRunLoopRunInMode(v4, v15, 1u);
    v16 = mach_absolute_time();
    if (v16 >= v7)
      break;
  }
  CFRunLoopRemoveSource(v9, v8, v4);
  OUTLINED_FUNCTION_17_0();

}

void sub_24977FC58()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_2_7();
  *v0 = sub_24977E108();
  OUTLINED_FUNCTION_27();
}

void sub_24977FC7C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  sub_24977E6F4();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_24977FCA0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  sub_24977E77C();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_24977FCC4()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_2_7();
  *v0 = sub_24977E810();
  OUTLINED_FUNCTION_27();
}

void sub_24977FCE8()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_2_7();
  *v0 = sub_24977E81C() & 1;
  OUTLINED_FUNCTION_27();
}

void sub_24977FD0C()
{
  sub_24977E83C();
  OUTLINED_FUNCTION_27();
}

void sub_24977FD2C()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_2_7();
  *v0 = sub_24977E8A0() & 1;
  OUTLINED_FUNCTION_27();
}

void sub_24977FD50(unsigned __int8 *a1)
{
  sub_24977E8A8(*a1);
  OUTLINED_FUNCTION_27();
}

void sub_24977FD70()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_7();
  sub_24977E96C();
  *v0 = v1;
  OUTLINED_FUNCTION_27();
}

void sub_24977FD94(_QWORD *a1@<X8>)
{
  sub_24977EA04(a1);
  OUTLINED_FUNCTION_27();
}

void sub_24977FDB4()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_2_7();
  *v0 = sub_24977F5CC() & 1;
  OUTLINED_FUNCTION_27();
}

void sub_24977FDD8(char *a1)
{
  sub_24977F5F4(*a1);
  OUTLINED_FUNCTION_27();
}

uint64_t type metadata accessor for UniversalControlManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for UniversalControlManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniversalControlManager.testableDevices.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of UniversalControlManager.testableDevices.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of UniversalControlManager.testableDevices.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of UniversalControlManager.availableDevices.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of UniversalControlManager.connectedDevices.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of UniversalControlManager.activeEdges.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of UniversalControlManager.enabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of UniversalControlManager.enabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of UniversalControlManager.enabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of UniversalControlManager.automaticallyReconnect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of UniversalControlManager.automaticallyReconnect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of UniversalControlManager.automaticallyReconnect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of UniversalControlManager.localDevice.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of UniversalControlManager.configuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of UniversalControlManager.dynamicTargetOverride.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of UniversalControlManager.connect(to:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of UniversalControlManager.disconnect()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of UniversalControlManager.disconnect(from:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of UniversalControlManager.diagnose(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of UniversalControlManager.getIDS(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of UniversalControlManager.setConfiguration(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of UniversalControlManager.setDynamicTargetOverride(_:completion:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v3 + 504))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of UniversalControlManager.synchronize(with:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of UniversalControlManager.move(focus:to:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of UniversalControlManager.takeClientAssertion(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of UniversalControlManager.takeSingleDeviceClientAssertion(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of UniversalControlManager.isSynchronized.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t sub_24977FFA0(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24975E100();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_249781B80(v6);
  return sub_2498371E0();
}

uint64_t sub_249780018()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_249780060(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  __int128 *v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t result;
  uint64_t *v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  __int128 v61;

  v4 = v2;
  OUTLINED_FUNCTION_11_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578812A0);
  v46 = a2;
  v6 = sub_249837348();
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_36:
    result = OUTLINED_FUNCTION_10_1();
    goto LABEL_37;
  }
  v7 = 0;
  v42 = v4;
  v43 = v3 + 64;
  v8 = 1 << *(_BYTE *)(v3 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v44 = (unint64_t)(v8 + 63) >> 6;
  v45 = v3;
  if ((v9 & *(_QWORD *)(v3 + 64)) == 0)
    goto LABEL_7;
LABEL_6:
  OUTLINED_FUNCTION_22_5();
  v49 = v11;
  v50 = v12;
  for (i = v13 | (v12 << 6); ; i = v20 + (v19 << 6))
  {
    v21 = *(_QWORD *)(v3 + 56);
    v22 = (char *)(*(_QWORD *)(v3 + 48) + 16 * i);
    v23 = *v22;
    v24 = v22[1];
    v25 = v22[2];
    v26 = v22[3];
    v27 = v22[4];
    v28 = v22[5];
    v51 = v22[6];
    v52 = v22[7];
    v53 = v22[8];
    v54 = v22[9];
    v55 = v22[10];
    v56 = v22[11];
    v57 = v22[12];
    v58 = v22[13];
    v59 = v22[14];
    v60 = v22[15];
    v29 = (__int128 *)(v21 + i * v10);
    v47 = *v29;
    v48 = v29[1];
    v61 = v29[2];
    v30 = *((_QWORD *)v29 + 6);
    if ((v46 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      OUTLINED_FUNCTION_65_2();
    }
    OUTLINED_FUNCTION_55_1();
    sub_24983769C();
    sub_2498376E4();
    OUTLINED_FUNCTION_4_13();
    if (!v31)
    {
      OUTLINED_FUNCTION_10_4();
      goto LABEL_28;
    }
    OUTLINED_FUNCTION_8_8();
    do
    {
      OUTLINED_FUNCTION_72_1();
      if (v31 && (v33 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      OUTLINED_FUNCTION_23_4();
    }
    while (v31);
    OUTLINED_FUNCTION_7_9();
LABEL_28:
    OUTLINED_FUNCTION_14_4(v32);
    *v34 = v23;
    v34[1] = v24;
    v34[2] = v25;
    v34[3] = v26;
    v34[4] = v27;
    v34[5] = v28;
    v34[6] = v51;
    v34[7] = v52;
    v34[8] = v53;
    v34[9] = v54;
    v34[10] = v55;
    v34[11] = v56;
    v34[12] = v57;
    v34[13] = v58;
    v34[14] = v59;
    v34[15] = v60;
    v36 = *(_QWORD *)(v6 + 56) + 56 * v35;
    *(_OWORD *)v36 = v47;
    *(_OWORD *)(v36 + 16) = v48;
    *(_OWORD *)(v36 + 32) = v61;
    *(_QWORD *)(v36 + 48) = v30;
    ++*(_QWORD *)(v6 + 16);
    v3 = v45;
    v7 = v50;
    if (v49)
      goto LABEL_6;
LABEL_7:
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_39;
    if (v15 >= v44)
      break;
    if (*(_QWORD *)(v43 + 8 * v15))
      goto LABEL_17;
    if (v7 + 2 >= v44)
      break;
    if (*(_QWORD *)(v43 + 8 * (v7 + 2)))
      goto LABEL_17;
    v16 = v7 + 3;
    if (v7 + 3 >= v44)
      break;
    if (!*(_QWORD *)(v43 + 8 * v16))
    {
      while (1)
      {
        v17 = v16 + 1;
        if (__OFADD__(v16, 1))
          break;
        if (v17 >= v44)
          goto LABEL_30;
        ++v16;
        if (*(_QWORD *)(v43 + 8 * v17))
          goto LABEL_17;
      }
LABEL_40:
      __break(1u);
    }
LABEL_17:
    OUTLINED_FUNCTION_26_3();
    v49 = v18;
    v50 = v19;
  }
LABEL_30:
  if ((v46 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_6();
    v4 = v42;
    if (v39 != v40)
      OUTLINED_FUNCTION_43_3(v37, v38);
    else
      OUTLINED_FUNCTION_19_7(v37, v38);
    *(_QWORD *)(v3 + 16) = 0;
    goto LABEL_36;
  }
  result = OUTLINED_FUNCTION_10_1();
  v4 = v42;
LABEL_37:
  *v4 = v6;
  return result;
}

void sub_249780444(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __int128 v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t *v28;
  int64_t v29;
  _QWORD *v30;
  __int128 v31;

  v4 = v2;
  OUTLINED_FUNCTION_11_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578801B0);
  v6 = sub_249837348();
  v7 = v6;
  if (*(_QWORD *)(v3 + 16))
  {
    v28 = v2;
    v8 = 1 << *(_BYTE *)(v3 + 32);
    v30 = (_QWORD *)(v3 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 64);
    v29 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    OUTLINED_FUNCTION_30_1();
    v12 = 0;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * i);
      v31 = *(_OWORD *)(*(_QWORD *)(v3 + 48) + 16 * i);
      v19 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * i + 8);
      if ((a2 & 1) == 0)
      {
        sub_249748BCC(v31, v19);
        OUTLINED_FUNCTION_77();
      }
      sub_249837690();
      sub_249748BCC(v31, v19);
      sub_24983694C();
      sub_249748C10(v31, v19);
      v20 = sub_2498376E4() & ~(-1 << *(_BYTE *)(v7 + 32));
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) == 0)
      {
        OUTLINED_FUNCTION_8_8();
        while (1)
        {
          OUTLINED_FUNCTION_72_1();
          if (v24)
          {
            if ((v23 & 1) != 0)
              break;
          }
          OUTLINED_FUNCTION_23_4();
          if (!v24)
          {
            OUTLINED_FUNCTION_7_9();
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_10_4();
      v22 = v31;
LABEL_29:
      *(_QWORD *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(_OWORD *)(*(_QWORD *)(v7 + 48) + 16 * v21) = v22;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v21) = v18;
      ++*(_QWORD *)(v7 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v15 = v12 + 1;
      if (__OFADD__(v12, 1))
        goto LABEL_38;
      if (v15 >= v29)
        goto LABEL_31;
      v16 = v30[v15];
      ++v12;
      if (!v16)
      {
        v12 = v15 + 1;
        if (v15 + 1 >= v29)
          goto LABEL_31;
        v16 = v30[v12];
        if (!v16)
        {
          v17 = v15 + 2;
          if (v17 >= v29)
          {
LABEL_31:
            OUTLINED_FUNCTION_10_1();
            v4 = v28;
            if ((a2 & 1) != 0)
            {
              OUTLINED_FUNCTION_13_6();
              if (v26 != v27)
                *v30 = -1 << v25;
              else
                sub_249781B64(0, (unint64_t)(v25 + 63) >> 6, v30);
              *(_QWORD *)(v3 + 16) = 0;
            }
            break;
          }
          v16 = v30[v17];
          if (!v16)
          {
            while (1)
            {
              v12 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_39;
              if (v12 >= v29)
                goto LABEL_31;
              v16 = v30[v12];
              ++v17;
              if (v16)
                goto LABEL_18;
            }
          }
          v12 = v17;
        }
      }
LABEL_18:
      v10 = (v16 - 1) & v16;
    }
  }
  OUTLINED_FUNCTION_10_1();
  *v4 = v7;
}

uint64_t sub_249780704(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881250);
  v6 = sub_249837348();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v33 = v2;
    v34 = v5 + 64;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 64;
    result = swift_retain();
    v14 = 0;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v19)) + (v14 << 6))
    {
      v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * i);
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
      if ((a2 & 1) == 0)
      {
        v23 = v21;
        swift_unknownObjectRetain();
      }
      result = sub_249837054();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) == 0)
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          v30 = v26 == v29;
          if (v26 == v29)
            v26 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v26);
          if (v31 != -1)
          {
            v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v27) = v21;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v27) = v22;
      ++*(_QWORD *)(v7 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_41;
      if (v17 >= v11)
        break;
      v18 = (_QWORD *)(v5 + 64);
      v19 = *(_QWORD *)(v34 + 8 * v17);
      ++v14;
      if (!v19)
      {
        v14 = v17 + 1;
        if (v17 + 1 >= v11)
          goto LABEL_32;
        v19 = *(_QWORD *)(v34 + 8 * v14);
        if (!v19)
        {
          v20 = v17 + 2;
          if (v20 >= v11)
          {
LABEL_32:
            swift_release();
            v3 = v33;
            if ((a2 & 1) == 0)
              goto LABEL_39;
            goto LABEL_35;
          }
          v19 = *(_QWORD *)(v34 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              v14 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_42;
              if (v14 >= v11)
                goto LABEL_32;
              v19 = *(_QWORD *)(v34 + 8 * v14);
              ++v20;
              if (v19)
                goto LABEL_18;
            }
          }
          v14 = v20;
        }
      }
LABEL_18:
      v10 = (v19 - 1) & v19;
    }
    swift_release();
    v3 = v33;
    v18 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) == 0)
      goto LABEL_39;
LABEL_35:
    v32 = 1 << *(_BYTE *)(v5 + 32);
    if (v32 >= 64)
      sub_249781B64(0, (unint64_t)(v32 + 63) >> 6, v18);
    else
      *v18 = -1 << v32;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2497809C8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t result;
  uint64_t *v41;
  _QWORD *v42;
  int64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int64_t v47;
  __int128 v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881230);
  v45 = a2;
  v6 = sub_249837348();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_38:
    result = swift_release();
    goto LABEL_39;
  }
  v8 = 0;
  v41 = v3;
  v42 = (_QWORD *)(v5 + 64);
  v9 = 1 << *(_BYTE *)(v5 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v43 = (unint64_t)(v9 + 63) >> 6;
  v44 = v5;
  v12 = v6 + 64;
  if (!v11)
    goto LABEL_7;
  while (2)
  {
    v46 = (v11 - 1) & v11;
    v47 = v8;
    v13 = __clz(__rbit64(v11)) | (v8 << 6);
LABEL_19:
    v18 = *(_QWORD *)(v5 + 56);
    v19 = (char *)(*(_QWORD *)(v5 + 48) + 16 * v13);
    v49 = *v19;
    v50 = v19[1];
    v51 = v19[2];
    v52 = v19[3];
    v53 = v19[4];
    v54 = v19[5];
    v55 = v19[6];
    v56 = v19[7];
    v20 = v19[8];
    v21 = v19[9];
    v22 = v19[10];
    v23 = v19[11];
    v24 = v19[12];
    v25 = v19[13];
    v26 = v19[14];
    v27 = v19[15];
    v48 = *(_OWORD *)(v18 + 16 * v13);
    if ((v45 & 1) == 0)
      sub_249748BCC(v48, *((unint64_t *)&v48 + 1));
    sub_249837690();
    sub_24983769C();
    v28 = sub_2498376E4();
    v29 = -1 << *(_BYTE *)(v7 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      v33 = v20;
      goto LABEL_30;
    }
    v34 = 0;
    v35 = (unint64_t)(63 - v29) >> 6;
    v33 = v20;
    do
    {
      if (++v31 == v35 && (v34 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      v36 = v31 == v35;
      if (v31 == v35)
        v31 = 0;
      v34 |= v36;
      v37 = *(_QWORD *)(v12 + 8 * v31);
    }
    while (v37 == -1);
    v32 = __clz(__rbit64(~v37)) + (v31 << 6);
LABEL_30:
    *(_QWORD *)(v12 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    v38 = (_BYTE *)(*(_QWORD *)(v7 + 48) + 16 * v32);
    *v38 = v49;
    v38[1] = v50;
    v38[2] = v51;
    v38[3] = v52;
    v38[4] = v53;
    v38[5] = v54;
    v38[6] = v55;
    v38[7] = v56;
    v38[8] = v33;
    v38[9] = v21;
    v38[10] = v22;
    v38[11] = v23;
    v38[12] = v24;
    v38[13] = v25;
    v38[14] = v26;
    v38[15] = v27;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v32) = v48;
    ++*(_QWORD *)(v7 + 16);
    v5 = v44;
    v11 = v46;
    v8 = v47;
    if (v46)
      continue;
    break;
  }
LABEL_7:
  v14 = v8 + 1;
  if (__OFADD__(v8, 1))
    goto LABEL_41;
  if (v14 < v43)
  {
    v15 = v42[v14];
    v16 = v8 + 1;
    if (v15)
      goto LABEL_18;
    v16 = v8 + 2;
    if (v8 + 2 < v43)
    {
      v15 = v42[v16];
      if (v15)
        goto LABEL_18;
      v17 = v8 + 3;
      if (v8 + 3 < v43)
      {
        v15 = v42[v17];
        if (v15)
        {
          v16 = v8 + 3;
LABEL_18:
          v46 = (v15 - 1) & v15;
          v47 = v16;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          goto LABEL_19;
        }
        while (1)
        {
          v16 = v17 + 1;
          if (__OFADD__(v17, 1))
            break;
          if (v16 >= v43)
            goto LABEL_32;
          v15 = v42[v16];
          ++v17;
          if (v15)
            goto LABEL_18;
        }
LABEL_42:
        __break(1u);
      }
    }
  }
LABEL_32:
  if ((v45 & 1) != 0)
  {
    v39 = 1 << *(_BYTE *)(v5 + 32);
    v3 = v41;
    if (v39 >= 64)
      sub_249781B64(0, (unint64_t)(v39 + 63) >> 6, v42);
    else
      *v42 = -1 << v39;
    *(_QWORD *)(v5 + 16) = 0;
    goto LABEL_38;
  }
  result = swift_release();
  v3 = v41;
LABEL_39:
  *v3 = v7;
  return result;
}

uint64_t sub_249780E54(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t result;
  uint64_t *v40;
  _QWORD *v41;
  int64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  int64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881278);
  v44 = a2;
  v6 = sub_249837348();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_38:
    result = swift_release();
    goto LABEL_39;
  }
  v8 = 0;
  v40 = v3;
  v41 = (_QWORD *)(v5 + 64);
  v9 = 1 << *(_BYTE *)(v5 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v42 = (unint64_t)(v9 + 63) >> 6;
  v43 = v5;
  v12 = v6 + 64;
  if (!v11)
    goto LABEL_7;
  while (2)
  {
    v45 = (v11 - 1) & v11;
    v46 = v8;
    v13 = __clz(__rbit64(v11)) | (v8 << 6);
LABEL_19:
    v18 = *(_QWORD *)(v5 + 56);
    v19 = (char *)(*(_QWORD *)(v5 + 48) + 16 * v13);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    v24 = v19[4];
    v25 = v19[5];
    v47 = v19[6];
    v48 = v19[7];
    v49 = v19[8];
    v50 = v19[9];
    v51 = v19[10];
    v52 = v19[11];
    v53 = v19[12];
    v54 = v19[13];
    v55 = v19[14];
    v56 = v19[15];
    v26 = *(void **)(v18 + 8 * v13);
    if ((v44 & 1) == 0)
      v27 = v26;
    sub_249837690();
    sub_24983769C();
    v28 = sub_2498376E4();
    v29 = -1 << *(_BYTE *)(v7 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_30;
    }
    v33 = 0;
    v34 = (unint64_t)(63 - v29) >> 6;
    do
    {
      if (++v31 == v34 && (v33 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      v35 = v31 == v34;
      if (v31 == v34)
        v31 = 0;
      v33 |= v35;
      v36 = *(_QWORD *)(v12 + 8 * v31);
    }
    while (v36 == -1);
    v32 = __clz(__rbit64(~v36)) + (v31 << 6);
LABEL_30:
    *(_QWORD *)(v12 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    v37 = (_BYTE *)(*(_QWORD *)(v7 + 48) + 16 * v32);
    *v37 = v20;
    v37[1] = v21;
    v37[2] = v22;
    v37[3] = v23;
    v37[4] = v24;
    v37[5] = v25;
    v37[6] = v47;
    v37[7] = v48;
    v37[8] = v49;
    v37[9] = v50;
    v37[10] = v51;
    v37[11] = v52;
    v37[12] = v53;
    v37[13] = v54;
    v37[14] = v55;
    v37[15] = v56;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v32) = v26;
    ++*(_QWORD *)(v7 + 16);
    v5 = v43;
    v11 = v45;
    v8 = v46;
    if (v45)
      continue;
    break;
  }
LABEL_7:
  v14 = v8 + 1;
  if (__OFADD__(v8, 1))
    goto LABEL_41;
  if (v14 < v42)
  {
    v15 = v41[v14];
    v16 = v8 + 1;
    if (v15)
      goto LABEL_18;
    v16 = v8 + 2;
    if (v8 + 2 < v42)
    {
      v15 = v41[v16];
      if (v15)
        goto LABEL_18;
      v17 = v8 + 3;
      if (v8 + 3 < v42)
      {
        v15 = v41[v17];
        if (v15)
        {
          v16 = v8 + 3;
LABEL_18:
          v45 = (v15 - 1) & v15;
          v46 = v16;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          goto LABEL_19;
        }
        while (1)
        {
          v16 = v17 + 1;
          if (__OFADD__(v17, 1))
            break;
          if (v16 >= v42)
            goto LABEL_32;
          v15 = v41[v16];
          ++v17;
          if (v15)
            goto LABEL_18;
        }
LABEL_42:
        __break(1u);
      }
    }
  }
LABEL_32:
  if ((v44 & 1) != 0)
  {
    v38 = 1 << *(_BYTE *)(v5 + 32);
    v3 = v40;
    if (v38 >= 64)
      sub_249781B64(0, (unint64_t)(v38 + 63) >> 6, v41);
    else
      *v41 = -1 << v38;
    *(_QWORD *)(v5 + 16) = 0;
    goto LABEL_38;
  }
  result = swift_release();
  v3 = v40;
LABEL_39:
  *v3 = v7;
  return result;
}

uint64_t sub_2497812BC()
{
  return OUTLINED_FUNCTION_28_4();
}

uint64_t sub_249781304()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  unint64_t v33;
  char v34;
  _BYTE *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t result;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;

  v2 = v0;
  OUTLINED_FUNCTION_11_5();
  __swift_instantiateConcreteTypeFromMangledName(v3);
  v4 = OUTLINED_FUNCTION_17_5();
  if (!v1[2])
    goto LABEL_35;
  OUTLINED_FUNCTION_2_14();
  if (!v6)
    goto LABEL_4;
LABEL_3:
  OUTLINED_FUNCTION_22_5();
  v43 = v7;
  v44 = v8;
  for (i = v9 | (v8 << 6); ; i = v23 + (v22 << 6))
  {
    v24 = (char *)(v1[6] + 32 * i);
    v25 = *v24;
    v26 = v24[1];
    v45 = v24[2];
    v46 = v24[3];
    v47 = v24[4];
    v48 = v24[5];
    v49 = v24[6];
    v50 = v24[7];
    v51 = v24[8];
    v52 = v24[9];
    v53 = v24[10];
    v27 = v24[11];
    v28 = v24[12];
    v29 = v24[13];
    v30 = v24[14];
    v31 = v24[15];
    v54 = v24[16];
    v55 = v24[17];
    v56 = v24[18];
    v57 = v24[19];
    v58 = v24[20];
    v59 = v24[21];
    v60 = v24[22];
    v61 = v24[23];
    v62 = v24[24];
    v63 = v24[25];
    v64 = v24[26];
    v1 = *(_QWORD **)(v1[7] + 8 * i);
    v65 = v24[28];
    v66 = v24[27];
    v67 = v24[29];
    v68 = v24[30];
    v69 = v24[31];
    if ((v42 & 1) == 0)
      OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_55_1();
    sub_24983769C();
    sub_24983769C();
    sub_2498376E4();
    OUTLINED_FUNCTION_4_13();
    if (!v32)
    {
      OUTLINED_FUNCTION_10_4();
      goto LABEL_27;
    }
    OUTLINED_FUNCTION_8_8();
    do
    {
      OUTLINED_FUNCTION_72_1();
      if (v32 && (v34 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
      }
      OUTLINED_FUNCTION_23_4();
    }
    while (v32);
    OUTLINED_FUNCTION_7_9();
LABEL_27:
    *(_QWORD *)(v4 + 64 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    v35 = (_BYTE *)(*(_QWORD *)(v4 + 48) + 32 * v33);
    *v35 = v25;
    v35[1] = v26;
    v35[2] = v45;
    v35[3] = v46;
    v35[4] = v47;
    v35[5] = v48;
    v35[6] = v49;
    v35[7] = v50;
    v35[8] = v51;
    v35[9] = v52;
    v35[10] = v53;
    v35[11] = v27;
    v35[12] = v28;
    v35[13] = v29;
    v35[14] = v30;
    v35[15] = v31;
    v35[16] = v54;
    v35[17] = v55;
    v35[18] = v56;
    v35[19] = v57;
    v35[20] = v58;
    v35[21] = v59;
    v35[22] = v60;
    v35[23] = v61;
    v35[24] = v62;
    v35[25] = v63;
    v35[26] = v64;
    v35[27] = v66;
    v35[28] = v65;
    v35[29] = v67;
    v35[30] = v68;
    v35[31] = v69;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v33) = v1;
    OUTLINED_FUNCTION_58_2();
    v5 = v44;
    if (v43)
      goto LABEL_3;
LABEL_4:
    v11 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_38;
    if (v11 >= v41)
      goto LABEL_29;
    if (!*(_QWORD *)(v40 + 8 * v11))
      break;
LABEL_16:
    OUTLINED_FUNCTION_26_3();
    v43 = v21;
    v44 = v22;
  }
  OUTLINED_FUNCTION_64_1();
  if (v15 != v16)
  {
    if (!*(_QWORD *)(v12 + 8 * v14))
    {
      v17 = v13 + 2;
      if (v17 >= v41)
        goto LABEL_29;
      if (!*(_QWORD *)(v12 + 8 * v17))
      {
        while (!__OFADD__(v17, 1))
        {
          OUTLINED_FUNCTION_64_1();
          if (v15 == v16)
            goto LABEL_29;
          v17 = v19 + 1;
          if (*(_QWORD *)(v18 + 8 * v20))
            goto LABEL_16;
        }
        goto LABEL_39;
      }
    }
    goto LABEL_16;
  }
LABEL_29:
  if ((v42 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_6();
    v2 = v39;
    if (v15 != v16)
      OUTLINED_FUNCTION_43_3(v36, v37);
    else
      OUTLINED_FUNCTION_19_7(v36, v37);
    v1[2] = 0;
LABEL_35:
    result = OUTLINED_FUNCTION_10_1();
  }
  else
  {
    result = OUTLINED_FUNCTION_10_1();
    v2 = v39;
  }
  *v2 = v4;
  return result;
}

uint64_t sub_2497817F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  unint64_t v37;
  char v38;
  _BYTE *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t result;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;

  v2 = v0;
  OUTLINED_FUNCTION_11_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881268);
  v3 = OUTLINED_FUNCTION_17_5();
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_35;
  OUTLINED_FUNCTION_2_14();
  if (!v5)
    goto LABEL_4;
LABEL_3:
  OUTLINED_FUNCTION_22_5();
  v50 = v6;
  v51 = v7;
  for (i = v8 | (v7 << 6); ; i = v22 + (v21 << 6))
  {
    v23 = (char *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v52 = *v23;
    v53 = v23[1];
    v54 = v23[2];
    v55 = v23[3];
    v56 = v23[4];
    v57 = v23[5];
    v58 = v23[6];
    v59 = v23[7];
    v24 = v23[9];
    v25 = v23[10];
    v26 = v23[11];
    v27 = v23[12];
    v28 = v23[13];
    v29 = v23[14];
    v30 = v23[15];
    if ((v49 & 1) == 0)
      swift_retain();
    sub_249837690();
    v31 = v24;
    v32 = v25;
    v33 = v26;
    v34 = v27;
    v35 = v28;
    v1 = v29;
    sub_24983769C();
    sub_2498376E4();
    OUTLINED_FUNCTION_4_13();
    if (!v36)
    {
      OUTLINED_FUNCTION_10_4();
      goto LABEL_27;
    }
    OUTLINED_FUNCTION_8_8();
    do
    {
      OUTLINED_FUNCTION_72_1();
      if (v36 && (v38 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
      }
      OUTLINED_FUNCTION_23_4();
    }
    while (v36);
    OUTLINED_FUNCTION_7_9();
LABEL_27:
    OUTLINED_FUNCTION_14_4(v37);
    *v39 = v52;
    v39[1] = v53;
    v39[2] = v54;
    v39[3] = v55;
    v39[4] = v56;
    v39[5] = v57;
    v39[6] = v58;
    v39[7] = v59;
    v39[8] = v40;
    v39[9] = v31;
    v39[10] = v32;
    v39[11] = v33;
    v39[12] = v34;
    v39[13] = v35;
    v39[14] = v29;
    v39[15] = v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v41) = v42;
    OUTLINED_FUNCTION_58_2();
    v4 = v51;
    if (v50)
      goto LABEL_3;
LABEL_4:
    v10 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_38;
    if (v10 >= v48)
      goto LABEL_29;
    if (!*(_QWORD *)(v47 + 8 * v10))
      break;
LABEL_16:
    OUTLINED_FUNCTION_26_3();
    v50 = v20;
    v51 = v21;
  }
  OUTLINED_FUNCTION_64_1();
  if (v14 != v15)
  {
    if (!*(_QWORD *)(v11 + 8 * v13))
    {
      v16 = v12 + 2;
      if (v16 >= v48)
        goto LABEL_29;
      if (!*(_QWORD *)(v11 + 8 * v16))
      {
        while (!__OFADD__(v16, 1))
        {
          OUTLINED_FUNCTION_64_1();
          if (v14 == v15)
            goto LABEL_29;
          v16 = v18 + 1;
          if (*(_QWORD *)(v17 + 8 * v19))
            goto LABEL_16;
        }
        goto LABEL_39;
      }
    }
    goto LABEL_16;
  }
LABEL_29:
  if ((v49 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_6();
    v2 = v46;
    if (v14 != v15)
      OUTLINED_FUNCTION_43_3(v43, v44);
    else
      OUTLINED_FUNCTION_19_7(v43, v44);
    *(_QWORD *)(v1 + 16) = 0;
LABEL_35:
    result = OUTLINED_FUNCTION_10_1();
  }
  else
  {
    result = OUTLINED_FUNCTION_10_1();
    v2 = v46;
  }
  *v2 = v3;
  return result;
}

uint64_t sub_249781B64(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_249781B80(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  __int128 *v35;
  __int128 *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *i;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  __int128 *v98;
  __int128 *v99;
  uint64_t v100;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  __int128 v123;
  __int128 __s2;
  __int128 __s1;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;

  v129 = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  result = sub_249837534();
  v118 = v3;
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return result;
      v90 = (uint64_t *)*a1;
      v91 = -1;
      v92 = 1;
      for (i = (uint64_t *)*a1; ; ++i)
      {
        v94 = v90[v92];
        v95 = v91;
        v96 = i;
        do
        {
          v97 = *v96;
          v98 = (__int128 *)(v94 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
          swift_beginAccess();
          v99 = (__int128 *)(v97 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
          v123 = *v98;
          swift_beginAccess();
          v128 = v123;
          v127 = *v99;
          result = memcmp(&v128, &v127, 0x10uLL);
          if ((result & 0x80000000) == 0)
            break;
          if (!v90)
            goto LABEL_139;
          v100 = *v96;
          v94 = v96[1];
          *v96 = v94;
          v96[1] = v100;
          --v96;
        }
        while (!__CFADD__(v95++, 1));
        ++v92;
        --v91;
        if (v92 == v118)
          return result;
      }
    }
    goto LABEL_134;
  }
  v5 = result;
  sub_24974D058(v3 / 2);
  v116 = v6;
  v126 = v7;
  v112 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v40 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_97:
    v102 = v10;
    if (v40 < 2)
    {
LABEL_108:
      swift_bridgeObjectRelease();
      if (v118 >= -1)
      {
        *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_249836EB0();
        return swift_bridgeObjectRelease();
      }
      goto LABEL_140;
    }
    v103 = *v112;
    while (1)
    {
      v104 = v40 - 2;
      if (v40 < 2)
        break;
      if (!v103)
        goto LABEL_144;
      v105 = v102;
      v106 = *(_QWORD *)&v102[16 * v104 + 32];
      v107 = *(_QWORD *)&v102[16 * v40 + 24];
      sub_249782394((_QWORD *)(v103 + 8 * v106), (_QWORD *)(v103 + 8 * *(_QWORD *)&v102[16 * v40 + 16]), v103 + 8 * v107, v116);
      if (v1)
        goto LABEL_110;
      if (v107 < v106)
        goto LABEL_129;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v105 = sub_24975DBE8();
      if (v104 >= *((_QWORD *)v105 + 2))
        goto LABEL_130;
      v108 = &v105[16 * v104 + 32];
      *(_QWORD *)v108 = v106;
      *((_QWORD *)v108 + 1) = v107;
      v109 = *((_QWORD *)v105 + 2);
      if (v40 > v109)
        goto LABEL_131;
      memmove(&v105[16 * v40 + 16], &v105[16 * v40 + 32], 16 * (v109 - v40));
      v102 = v105;
      *((_QWORD *)v105 + 2) = v109 - 1;
      v40 = v109 - 1;
      if (v109 <= 2)
        goto LABEL_108;
    }
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  v113 = v5;
  v8 = 0;
  v9 = *a1;
  v111 = *a1 - 8;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v117 = *a1;
  while (1)
  {
    v11 = v8;
    v12 = v8 + 1;
    if (v8 + 1 >= v3)
      goto LABEL_20;
    v13 = *(_QWORD *)(v9 + 8 * v8);
    v14 = (__int128 *)(*(_QWORD *)(v9 + 8 * v12) + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
    swift_beginAccess();
    v15 = (__int128 *)(v13 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
    v119 = *v14;
    swift_beginAccess();
    __s2 = *v15;
    __s1 = v119;
    v16 = memcmp(&__s1, &__s2, 0x10uLL);
    v12 = v11 + 2;
    if (v11 + 2 >= v3)
      goto LABEL_10;
    v17 = v11;
    do
    {
      v18 = v9 + 8 * v17;
      v19 = *(_QWORD *)(v18 + 8);
      v20 = (__int128 *)(*(_QWORD *)(v18 + 16) + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      swift_beginAccess();
      v21 = (__int128 *)(v19 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      v120 = *v20;
      swift_beginAccess();
      __s2 = *v21;
      __s1 = v120;
      if ((memcmp(&__s1, &__s2, 0x10uLL) ^ v16) < 0)
      {
        v12 = v17 + 2;
        v9 = v117;
        v3 = v118;
        if ((v16 & 0x80000000) == 0)
          goto LABEL_20;
LABEL_13:
        if (v12 >= v11)
        {
          if (v11 < v12)
          {
            v23 = (uint64_t *)(v111 + 8 * v12);
            v24 = v12;
            v25 = v11;
            v26 = (uint64_t *)(v9 + 8 * v11);
            do
            {
              if (v25 != --v24)
              {
                if (!v9)
                  goto LABEL_143;
                v27 = *v26;
                *v26 = *v23;
                *v23 = v27;
              }
              ++v25;
              --v23;
              ++v26;
            }
            while (v25 < v24);
          }
          goto LABEL_20;
        }
        goto LABEL_136;
      }
      v22 = v17 + 3;
      ++v17;
      v9 = v117;
      v3 = v118;
    }
    while (v22 < v118);
    v12 = v118;
LABEL_10:
    if (v16 < 0)
      goto LABEL_13;
LABEL_20:
    if (v12 >= v3)
      goto LABEL_36;
    if (__OFSUB__(v12, v11))
      goto LABEL_133;
    if (v12 - v11 >= v113)
      goto LABEL_36;
    if (__OFADD__(v11, v113))
      goto LABEL_137;
    if (v11 + v113 >= v3)
      v28 = v3;
    else
      v28 = v11 + v113;
    if (v28 < v11)
      goto LABEL_138;
    if (v12 != v28)
    {
      v114 = v28;
      v115 = v11;
      v110 = v10;
      v29 = (uint64_t *)(v111 + 8 * v12);
      do
      {
        v30 = v12;
        v31 = *(_QWORD *)(v9 + 8 * v12);
        v32 = v115;
        v33 = v29;
        do
        {
          v34 = *v33;
          v35 = (__int128 *)(v31 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
          swift_beginAccess();
          v36 = (__int128 *)(v34 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
          v121 = *v35;
          swift_beginAccess();
          __s2 = *v36;
          __s1 = v121;
          if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
            break;
          if (!v9)
            goto LABEL_141;
          v37 = *v33;
          v31 = v33[1];
          *v33 = v31;
          v33[1] = v37;
          --v33;
          ++v32;
        }
        while (v30 != v32);
        v12 = v30 + 1;
        ++v29;
      }
      while (v30 + 1 != v114);
      v12 = v114;
      v10 = v110;
      v11 = v115;
    }
LABEL_36:
    if (v12 < v11)
    {
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_24975DAF4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v39 = *((_QWORD *)v10 + 2);
    v38 = *((_QWORD *)v10 + 3);
    v40 = v39 + 1;
    if (v39 >= v38 >> 1)
      v10 = sub_24975DAF4((char *)(v38 > 1), v39 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v40;
    v41 = v10 + 32;
    v42 = &v10[16 * v39 + 32];
    *(_QWORD *)v42 = v11;
    *((_QWORD *)v42 + 1) = v12;
    v122 = v12;
    if (v39)
      break;
    v40 = 1;
LABEL_84:
    v3 = v118;
    v8 = v122;
    if (v122 >= v118)
      goto LABEL_97;
  }
  while (2)
  {
    v43 = v40 - 1;
    if (v40 >= 4)
    {
      v48 = &v41[16 * v40];
      v49 = *((_QWORD *)v48 - 8);
      v50 = *((_QWORD *)v48 - 7);
      v54 = __OFSUB__(v50, v49);
      v51 = v50 - v49;
      if (v54)
        goto LABEL_117;
      v53 = *((_QWORD *)v48 - 6);
      v52 = *((_QWORD *)v48 - 5);
      v54 = __OFSUB__(v52, v53);
      v46 = v52 - v53;
      v47 = v54;
      if (v54)
        goto LABEL_118;
      v55 = v40 - 2;
      v56 = &v41[16 * v40 - 32];
      v58 = *(_QWORD *)v56;
      v57 = *((_QWORD *)v56 + 1);
      v54 = __OFSUB__(v57, v58);
      v59 = v57 - v58;
      if (v54)
        goto LABEL_119;
      v54 = __OFADD__(v46, v59);
      v60 = v46 + v59;
      if (v54)
        goto LABEL_121;
      if (v60 >= v51)
      {
        v78 = &v41[16 * v43];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v54 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v54)
          goto LABEL_127;
        v71 = v46 < v81;
      }
      else
      {
LABEL_55:
        if ((v47 & 1) != 0)
          goto LABEL_120;
        v55 = v40 - 2;
        v61 = &v41[16 * v40 - 32];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v64 = __OFSUB__(v62, v63);
        v65 = v62 - v63;
        v66 = v64;
        if (v64)
          goto LABEL_122;
        v67 = &v41[16 * v43];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v54 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v54)
          goto LABEL_124;
        if (__OFADD__(v65, v70))
          goto LABEL_126;
        if (v65 + v70 < v46)
          goto LABEL_67;
        v71 = v46 < v70;
      }
      if (v71)
        v43 = v55;
    }
    else
    {
      if (v40 == 3)
      {
        v45 = *((_QWORD *)v10 + 4);
        v44 = *((_QWORD *)v10 + 5);
        v54 = __OFSUB__(v44, v45);
        v46 = v44 - v45;
        v47 = v54;
        goto LABEL_55;
      }
      v72 = *((_QWORD *)v10 + 4);
      v73 = *((_QWORD *)v10 + 5);
      v54 = __OFSUB__(v73, v72);
      v65 = v73 - v72;
      v66 = v54;
LABEL_67:
      if ((v66 & 1) != 0)
        goto LABEL_123;
      v74 = &v41[16 * v43];
      v76 = *(_QWORD *)v74;
      v75 = *((_QWORD *)v74 + 1);
      v54 = __OFSUB__(v75, v76);
      v77 = v75 - v76;
      if (v54)
        goto LABEL_125;
      if (v77 < v65)
        goto LABEL_84;
    }
    v82 = v43 - 1;
    if (v43 - 1 >= v40)
    {
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
    v83 = v9;
    if (!v9)
      goto LABEL_142;
    v84 = v10;
    v85 = &v41[16 * v82];
    v86 = *(_QWORD *)v85;
    v87 = &v41[16 * v43];
    v88 = *((_QWORD *)v87 + 1);
    sub_249782394((_QWORD *)(v83 + 8 * *(_QWORD *)v85), (_QWORD *)(v83 + 8 * *(_QWORD *)v87), v83 + 8 * v88, v116);
    if (!v1)
    {
      if (v88 < v86)
        goto LABEL_114;
      if (v43 > *((_QWORD *)v84 + 2))
        goto LABEL_115;
      *(_QWORD *)v85 = v86;
      *(_QWORD *)&v41[16 * v82 + 8] = v88;
      v89 = *((_QWORD *)v84 + 2);
      if (v43 >= v89)
        goto LABEL_116;
      v10 = v84;
      v40 = v89 - 1;
      memmove(&v41[16 * v43], v87 + 16, 16 * (v89 - 1 - v43));
      *((_QWORD *)v84 + 2) = v89 - 1;
      v9 = v117;
      if (v89 <= 2)
        goto LABEL_84;
      continue;
    }
    break;
  }
LABEL_110:
  swift_bridgeObjectRelease();
  if (v118 < -1)
  {
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
  }
  *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_249836EB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249782394(_QWORD *a1, _QWORD *a2, unint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  __int128 *v15;
  __int128 *v16;
  _QWORD *v17;
  BOOL v18;
  _QWORD *v20;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  __int128 *v27;
  __int128 *v28;
  BOOL v29;
  BOOL v30;
  _QWORD *v33;
  __int128 v34;
  __int128 v35;
  _QWORD *v36;
  __int128 __s2;
  __int128 __s1;
  uint64_t v39;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v39 = *MEMORY[0x24BDAC8D0];
  v8 = (char *)a2 - (char *)a1;
  v9 = a2 - a1;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_2497AC1A4(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v20 = &v4[v11];
    if (v7 >= v6 || v10 < 8)
    {
      v12 = &v4[v11];
      goto LABEL_40;
    }
    v33 = v4;
    v22 = (_QWORD *)(a3 - 8);
    v12 = v20;
    while (1)
    {
      v23 = (unint64_t)v12;
      v24 = *--v12;
      v36 = v22 + 1;
      v25 = v6 - 1;
      v26 = *(v6 - 1);
      v27 = (__int128 *)(v24 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      swift_beginAccess();
      v28 = (__int128 *)(v26 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      v34 = *v27;
      swift_beginAccess();
      __s2 = *v28;
      __s1 = v34;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
        v29 = v36 != v6 || v22 >= v6;
        --v6;
        v12 = (_QWORD *)v23;
        if (!v29)
          goto LABEL_36;
      }
      else
      {
        v30 = v36 != (_QWORD *)v23 || (unint64_t)v22 >= v23;
        v25 = v12;
        if (!v30)
          goto LABEL_36;
      }
      *v22 = *v25;
LABEL_36:
      --v22;
      v4 = v33;
      if (v6 <= v7 || v12 <= v33)
        goto LABEL_40;
    }
  }
  sub_2497AC1A4(a1, a2 - a1, a4);
  v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v14 = *v4;
      v15 = (__int128 *)(*v6 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      swift_beginAccess();
      v16 = (__int128 *)(v14 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      v35 = *v15;
      swift_beginAccess();
      __s2 = *v16;
      __s1 = v35;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        break;
      v17 = v4;
      v18 = v7 == v4++;
      if (!v18)
        goto LABEL_11;
LABEL_12:
      ++v7;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v17 = v6;
    v18 = v7 == v6++;
    if (v18)
      goto LABEL_12;
LABEL_11:
    *v7 = *v17;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_40:
  sub_2497AC1A4(v4, v12 - v4, v6);
  return 1;
}

void sub_249782634(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *i;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void *v22;
  id v23;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (i = (uint64_t *)(swift_bridgeObjectRetain() + 40); ; i += 2)
  {
    v7 = *i;
    v8 = (_QWORD *)*a3;
    v9 = (id)*(i - 1);
    swift_unknownObjectRetain();
    v11 = sub_2497F2608((uint64_t)v9);
    v12 = v8[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_249783D14(0, &qword_2578805B0);
      sub_24983763C();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v10;
    if (v8[3] < v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257881258);
      sub_24983727C();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    *(_QWORD *)(v18[6] + 8 * v11) = v9;
    *(_QWORD *)(v18[7] + 8 * v11) = v7;
    v19 = v18[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_18;
    v18[2] = v21;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_249780704(v14, a2 & 1);
  v16 = sub_2497F2608((uint64_t)v9);
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v11 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v22 = (void *)swift_allocError();
  swift_willThrow();
  v23 = v22;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257881240);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_249837168();
  sub_249836DB4();
  sub_249783D14(0, &qword_2578805B0);
  sub_249837264();
  sub_249836DB4();
  sub_24983730C();
  __break(1u);
}

void sub_249782910(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  char v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  char v26;
  unint64_t v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  _QWORD *v36;
  _BYTE *v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  void *v42;
  id v43;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v4 = 0;
  v5 = (unsigned __int8 *)(a1 + 32);
  while (1)
  {
    if (v4 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_24983763C();
      __break(1u);
      goto LABEL_24;
    }
    v60 = v5[9];
    v62 = v5[8];
    v6 = v5[10];
    v7 = v5[11];
    v8 = v5[12];
    v9 = v5[13];
    v55 = v5[14];
    v53 = v5[15];
    v61 = v5[1];
    v10 = *v5;
    v66 = v5[2];
    v65 = v5[3];
    v64 = v5[4];
    v63 = v5[5];
    v51 = v5[6];
    v49 = v5[7];
    v12 = *((_QWORD *)v5 + 2);
    v11 = *((_QWORD *)v5 + 3);
    sub_249748BCC(v12, v11);
    if (v11 >> 60 == 15)
      goto LABEL_18;
    v46 = v12;
    v47 = v11;
    v45 = v4;
    v58 = v8;
    v13 = v62 | (v60 << 8) | (v6 << 16) | (v7 << 24) | (v8 << 32) | (v9 << 40);
    v48 = v10;
    v14 = (v49 << 56) | (v51 << 48) | v10 | (v61 << 8) | (v66 << 16) | (v65 << 24) | (v64 << 32) | (v63 << 40);
    v52 = HIWORD(v14);
    v50 = HIBYTE(v14);
    v15 = (v53 << 56) | (v55 << 48) | v13;
    v16 = v6;
    v17 = v7;
    v18 = v9;
    v56 = HIWORD(v15);
    v54 = HIBYTE(v15);
    v19 = (_QWORD *)*a3;
    v21 = sub_2497F1F1C();
    v22 = v19[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    v25 = v58;
    if (__OFADD__(v22, v23))
      goto LABEL_21;
    v26 = v20;
    if (v19[3] < v24)
      break;
    v30 = v61;
    v29 = v62;
    v32 = v65;
    v31 = v66;
    v33 = v64;
    v34 = v63;
    v35 = v48;
    if ((a2 & 1) != 0)
    {
      if ((v20 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257881238);
      sub_24983727C();
      v25 = v58;
      v35 = v48;
      v34 = v63;
      v33 = v64;
      v32 = v65;
      v31 = v66;
      if ((v26 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v36 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    v37 = (_BYTE *)(v36[6] + 16 * v21);
    *v37 = v35;
    v37[1] = v30;
    v37[2] = v31;
    v37[3] = v32;
    v37[4] = v33;
    v37[5] = v34;
    v37[6] = v52;
    v37[7] = v50;
    v37[8] = v29;
    v37[9] = v60;
    v37[10] = v16;
    v37[11] = v17;
    v37[12] = v25;
    v37[13] = v18;
    v37[14] = v56;
    v37[15] = v54;
    v38 = (uint64_t *)(v36[7] + 16 * v21);
    *v38 = v46;
    v38[1] = v47;
    v39 = v36[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_22;
    v4 = v45 + 1;
    v36[2] = v41;
    v5 += 32;
    a2 = 1;
    if (v3 == v45 + 1)
      goto LABEL_18;
  }
  sub_2497809C8(v24, a2 & 1);
  v27 = sub_2497F1F1C();
  if ((v26 & 1) != (v28 & 1))
    goto LABEL_23;
  v21 = v27;
  v30 = v61;
  v29 = v62;
  v32 = v65;
  v31 = v66;
  v33 = v64;
  v34 = v63;
  v35 = v48;
  v25 = v58;
  if ((v26 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v42 = (void *)swift_allocError();
  swift_willThrow();
  v43 = v42;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257881240);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_249748C10(v46, v47);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_24:
  sub_249837168();
  sub_249836DB4();
  sub_249837264();
  sub_249836DB4();
  sub_24983730C();
  __break(1u);
}

void sub_249782DF4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  _QWORD *v37;
  _BYTE *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  void *v42;
  id v43;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  v4 = 0;
  v5 = (id *)(a1 + 48);
  while (1)
  {
    if (v4 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_24983763C();
      __break(1u);
      goto LABEL_24;
    }
    v60 = *((unsigned __int8 *)v5 - 7);
    v6 = *((unsigned __int8 *)v5 - 8);
    v7 = *((unsigned __int8 *)v5 - 6);
    v8 = *((unsigned __int8 *)v5 - 5);
    v9 = *((unsigned __int8 *)v5 - 4);
    v10 = *((unsigned __int8 *)v5 - 3);
    v56 = *((unsigned __int8 *)v5 - 2);
    v54 = *((unsigned __int8 *)v5 - 1);
    v61 = *((unsigned __int8 *)v5 - 15);
    v11 = *((unsigned __int8 *)v5 - 16);
    v65 = *((unsigned __int8 *)v5 - 14);
    v64 = *((unsigned __int8 *)v5 - 13);
    v63 = *((unsigned __int8 *)v5 - 12);
    v62 = *((unsigned __int8 *)v5 - 11);
    v52 = *((unsigned __int8 *)v5 - 10);
    v50 = *((unsigned __int8 *)v5 - 9);
    v12 = *v5;
    v13 = *v5;
    if (v12 == (id)1)
      goto LABEL_18;
    v48 = v12;
    v45 = v4;
    v14 = v7;
    v15 = v9;
    v16 = v6 | (v60 << 8) | (v7 << 16) | (v8 << 24) | (v9 << 32) | (v10 << 40);
    v49 = v11;
    v17 = (v50 << 56) | (v52 << 48) | v11 | (v61 << 8) | (v65 << 16) | (v64 << 24) | (v63 << 32) | (v62 << 40);
    v47 = HIWORD(v17);
    v46 = HIBYTE(v17);
    v18 = (v54 << 56) | (v56 << 48) | v16;
    v55 = v6;
    v57 = v14;
    v19 = v8;
    v20 = v15;
    v53 = HIWORD(v18);
    v51 = HIBYTE(v18);
    v21 = (_QWORD *)*a3;
    v23 = sub_2497F1F1C();
    v24 = v21[2];
    v25 = (v22 & 1) == 0;
    v26 = v24 + v25;
    if (__OFADD__(v24, v25))
      goto LABEL_21;
    v27 = v22;
    if (v21[3] < v26)
      break;
    v30 = v55;
    v32 = v61;
    v31 = v62;
    v34 = v64;
    v33 = v65;
    v35 = v63;
    v36 = v49;
    if ((a2 & 1) != 0)
    {
      if ((v22 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257881280);
      sub_24983727C();
      v36 = v49;
      v31 = v62;
      v35 = v63;
      v34 = v64;
      v33 = v65;
      if ((v27 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v37 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    v38 = (_BYTE *)(v37[6] + 16 * v23);
    *v38 = v36;
    v38[1] = v32;
    v38[2] = v33;
    v38[3] = v34;
    v38[4] = v35;
    v38[5] = v31;
    v38[6] = v47;
    v38[7] = v46;
    v38[8] = v30;
    v38[9] = v60;
    v38[10] = v57;
    v38[11] = v19;
    v38[12] = v20;
    v38[13] = v10;
    v38[14] = v53;
    v38[15] = v51;
    *(_QWORD *)(v37[7] + 8 * v23) = v48;
    v39 = v37[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_22;
    v4 = v45 + 1;
    v37[2] = v41;
    v5 += 3;
    a2 = 1;
    if (v3 == v45 + 1)
      goto LABEL_18;
  }
  sub_249780E54(v26, a2 & 1);
  v28 = sub_2497F1F1C();
  if ((v27 & 1) != (v29 & 1))
    goto LABEL_23;
  v23 = v28;
  v30 = v55;
  v32 = v61;
  v31 = v62;
  v34 = v64;
  v33 = v65;
  v35 = v63;
  v36 = v49;
  if ((v27 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v42 = (void *)swift_allocError();
  swift_willThrow();
  v43 = v42;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257881240);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return;
  }
LABEL_24:
  sub_249837168();
  sub_249836DB4();
  sub_249837264();
  sub_249836DB4();
  sub_24983730C();
  __break(1u);
}

void sub_2497832B8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  _QWORD *v50;
  _BYTE *v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v57 = v3;
  if (!v3)
  {
LABEL_15:
    swift_bridgeObjectRelease_n();
    return;
  }
  v4 = 0;
  v5 = a1 + 64;
  while (1)
  {
    if (v4 >= *(_QWORD *)(a1 + 16))
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      sub_24983763C();
      __break(1u);
      goto LABEL_22;
    }
    v82 = *(unsigned __int8 *)(v5 - 7);
    v95 = *(unsigned __int8 *)(v5 - 8);
    v99 = *(unsigned __int8 *)(v5 - 6);
    v98 = *(unsigned __int8 *)(v5 - 5);
    v97 = *(unsigned __int8 *)(v5 - 4);
    v96 = *(unsigned __int8 *)(v5 - 3);
    v80 = *(unsigned __int8 *)(v5 - 2);
    v78 = *(unsigned __int8 *)(v5 - 1);
    v6 = *(unsigned __int8 *)(v5 - 15);
    v7 = *(unsigned __int8 *)(v5 - 16);
    v8 = *(unsigned __int8 *)(v5 - 14);
    v9 = *(unsigned __int8 *)(v5 - 13);
    v10 = *(unsigned __int8 *)(v5 - 12);
    v11 = *(unsigned __int8 *)(v5 - 11);
    v69 = *(unsigned __int8 *)(v5 - 10);
    v12 = *(unsigned __int8 *)(v5 - 9);
    v94 = *(unsigned __int8 *)(v5 - 23);
    v89 = *(unsigned __int8 *)(v5 - 24);
    v93 = *(unsigned __int8 *)(v5 - 22);
    v92 = *(unsigned __int8 *)(v5 - 21);
    v91 = *(unsigned __int8 *)(v5 - 20);
    v90 = *(unsigned __int8 *)(v5 - 19);
    v77 = *(unsigned __int8 *)(v5 - 18);
    v75 = *(unsigned __int8 *)(v5 - 17);
    v88 = *(unsigned __int8 *)(v5 - 31);
    v13 = *(unsigned __int8 *)(v5 - 32);
    v100 = *(unsigned __int8 *)(v5 - 30);
    v87 = *(unsigned __int8 *)(v5 - 29);
    v86 = *(unsigned __int8 *)(v5 - 28);
    v85 = *(unsigned __int8 *)(v5 - 27);
    v73 = *(unsigned __int8 *)(v5 - 26);
    v71 = *(unsigned __int8 *)(v5 - 25);
    v14 = swift_retain();
    if (!v14)
      goto LABEL_15;
    v67 = v4;
    v68 = v14;
    v15 = v6;
    v16 = (v12 << 56) | (v69 << 48) | v7 | (v6 << 8) | (v8 << 16) | (v9 << 24) | (v10 << 32) | (v11 << 40);
    v17 = (v71 << 56) | (v73 << 48) | v13 | (v88 << 8) | (v100 << 16) | (v87 << 24) | (v86 << 32) | (v85 << 40);
    v66 = v13;
    v65 = HIWORD(v17);
    v18 = (v75 << 56) | (v77 << 48) | v89 | (v94 << 8) | (v93 << 16) | (v92 << 24) | (v91 << 32) | (v90 << 40);
    v59 = HIBYTE(v17);
    v62 = HIWORD(v18);
    v61 = HIBYTE(v18);
    v19 = v78 << 56;
    v70 = v7;
    v79 = v15;
    v76 = v9;
    v72 = v11;
    v74 = v10;
    v63 = HIWORD(v16);
    v64 = HIBYTE(v16);
    v20 = v19 | (v80 << 48) | v95 | (v82 << 8) | (v99 << 16) | (v98 << 24) | (v97 << 32) | (v96 << 40);
    v81 = HIWORD(v20);
    v60 = HIBYTE(v20);
    v21 = (_QWORD *)*a3;
    v23 = sub_2497F2068(v17, v18, v16, v20);
    v24 = v21[2];
    v25 = (v22 & 1) == 0;
    if (__OFADD__(v24, v25))
      goto LABEL_19;
    v26 = v22;
    if (v21[3] < v24 + v25)
      break;
    v30 = v67;
    v29 = v68;
    v31 = v82;
    v49 = v100;
    if ((a2 & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257881270);
      sub_24983727C();
      v49 = v100;
    }
    v33 = v98;
    v32 = v99;
    v35 = v96;
    v34 = v97;
    v36 = v94;
    v37 = v95;
    v38 = v79;
    v40 = v74;
    v39 = v76;
    v42 = v70;
    v41 = v72;
    v44 = v92;
    v43 = v93;
    v46 = v90;
    v45 = v91;
    v48 = v88;
    v47 = v89;
    if ((v26 & 1) != 0)
      goto LABEL_16;
LABEL_13:
    v50 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    v51 = (_BYTE *)(v50[6] + 32 * v23);
    *v51 = v66;
    v51[1] = v48;
    v51[2] = v49;
    v51[3] = v87;
    v51[4] = v86;
    v51[5] = v85;
    v51[6] = v65;
    v51[7] = v59;
    v51[8] = v47;
    v51[9] = v36;
    v51[10] = v43;
    v51[11] = v44;
    v51[12] = v45;
    v51[13] = v46;
    v51[14] = v62;
    v51[15] = v61;
    v51[16] = v42;
    v51[17] = v38;
    v51[18] = v8;
    v51[19] = v39;
    v51[20] = v40;
    v51[21] = v41;
    v51[22] = v63;
    v51[23] = v64;
    v51[24] = v37;
    v51[25] = v31;
    v51[26] = v32;
    v51[27] = v33;
    v51[28] = v34;
    v51[29] = v35;
    v51[30] = v81;
    v51[31] = v60;
    *(_QWORD *)(v50[7] + 8 * v23) = v29;
    v52 = v50[2];
    v53 = __OFADD__(v52, 1);
    v54 = v52 + 1;
    if (v53)
      goto LABEL_20;
    v4 = v30 + 1;
    v50[2] = v54;
    v5 += 40;
    a2 = 1;
    if (v57 == v4)
      goto LABEL_15;
  }
  sub_249781304();
  v27 = sub_2497F2068(v17, v18, v16, v20);
  if ((v26 & 1) != (v28 & 1))
    goto LABEL_21;
  v23 = v27;
  v30 = v67;
  v29 = v68;
  v31 = v82;
  v33 = v98;
  v32 = v99;
  v35 = v96;
  v34 = v97;
  v36 = v94;
  v37 = v95;
  v38 = v79;
  v40 = v74;
  v39 = v76;
  v42 = v70;
  v41 = v72;
  v44 = v92;
  v43 = v93;
  v46 = v90;
  v45 = v91;
  v48 = v88;
  v47 = v89;
  v49 = v100;
  if ((v26 & 1) == 0)
    goto LABEL_13;
LABEL_16:
  v55 = (void *)swift_allocError();
  swift_willThrow();
  v56 = v55;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257881240);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_22:
  sub_249837168();
  sub_249836DB4();
  sub_249837264();
  sub_249836DB4();
  sub_24983730C();
  __break(1u);
}

void sub_249783944(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  char v6;
  char v7;
  void *v8;

  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || -(-1 << *(_BYTE *)(a4 + 32)) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + 64 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8)) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
      {
        sub_249837114();
        return;
      }
      goto LABEL_12;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (sub_2498372B8() != *(_DWORD *)(a4 + 36))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_2498372C4();
  sub_249783CC8(a1, a2, 1);
  sub_249783D14(0, &qword_2578805B0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  sub_2497F2608((uint64_t)v8);
  v7 = v6;

  if ((v7 & 1) != 0)
  {
    sub_2498372A0();
    sub_2498372DC();
    sub_249783CBC(a1, a2, 1);
    swift_unknownObjectRelease();
    return;
  }
LABEL_14:
  __break(1u);
}

void sub_249783AE0(_QWORD *a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  void *v12;
  void *v13;

  v6 = a2;
  if ((a5 & 0xC000000000000001) != 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_2498372E8();
      v9 = v8;
      sub_249783D14(0, &qword_2578805B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      *a1 = v9;
      return;
    }
    goto LABEL_18;
  }
  if ((a4 & 1) != 0)
  {
LABEL_10:
    if (sub_2498372B8() == *(_DWORD *)(a5 + 36))
    {
      sub_2498372C4();
      sub_249783D14(0, &qword_2578805B0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      v6 = sub_2497F2608((uint64_t)v13);
      v11 = v10;

      if ((v11 & 1) != 0)
        goto LABEL_12;
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  v12 = *(void **)(*(_QWORD *)(a5 + 48) + 8 * v6);
  *a1 = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * v6);
  v12;
  swift_unknownObjectRetain();
}

uint64_t sub_249783CBC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_249783CC8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_249783CD4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x24BCF8F94](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_249783D14(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  OUTLINED_FUNCTION_27();
}

uint64_t sub_249783D48()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_249783D6C()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_249783D90()
{
  return sub_2497709AC();
}

void OUTLINED_FUNCTION_14_4(unint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << a1;
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_17_5()
{
  return sub_249837348();
}

uint64_t OUTLINED_FUNCTION_19_7@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  return sub_249781B64(0, (unint64_t)(a2 + 63) >> 6, a1);
}

uint64_t OUTLINED_FUNCTION_20_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_25_4()
{
  return sub_24977E188();
}

uint64_t OUTLINED_FUNCTION_28_4()
{
  return sub_249781304();
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_31_4@<X0>(const char *a1@<X1>, void *a2@<X8>)
{
  return objc_msgSend(a2, a1);
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_33_4()
{
  JUMPOUT(0x24BCF8148);
}

id OUTLINED_FUNCTION_34_4()
{
  void *v0;

  return sub_24976B6B0(v0, 1);
}

uint64_t OUTLINED_FUNCTION_35_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;

  return a12(v13, v12);
}

uint64_t OUTLINED_FUNCTION_37_3()
{
  return sub_249836A0C();
}

void OUTLINED_FUNCTION_41_2()
{
  JUMPOUT(0x24BCF8148);
}

void OUTLINED_FUNCTION_43_3(_QWORD *a1@<X2>, char a2@<W8>)
{
  *a1 = -1 << a2;
}

uint64_t OUTLINED_FUNCTION_48_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_52_2()
{
  return swift_unknownObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_53_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return sub_249837690();
}

uint64_t OUTLINED_FUNCTION_56_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void OUTLINED_FUNCTION_58_2()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_60_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_61_2()
{
  return swift_bridgeObjectRetain_n();
}

void OUTLINED_FUNCTION_63_2()
{
  void *v0;

  sub_24976B6DC(v0, 1);
}

uint64_t OUTLINED_FUNCTION_65_2()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_66_3()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_67_1()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_68_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int8 a19)
{
  static UniversalControlLink.== infix(_:_:)(&a19, (uint64_t)&a9);
}

void OUTLINED_FUNCTION_69_2(uint64_t a1, unint64_t *a2)
{
  sub_249783D14(0, a2);
}

uint64_t OUTLINED_FUNCTION_70_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD, uint64_t, uint64_t);

  return v3(0, a2, v2);
}

uint64_t OUTLINED_FUNCTION_71_2()
{
  return sub_249836BE0();
}

uint64_t OUTLINED_FUNCTION_73_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_24977D948(a1, v5, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  return sub_249836B50();
}

uint64_t sub_249784104(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  double *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double MaxX;
  double MinY;
  double v12;
  uint64_t v13;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  v3 = sub_249785428(a2);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = (double *)(v3 + 56);
    do
    {
      v6 = *(v5 - 3);
      v7 = *(v5 - 2);
      v8 = *(v5 - 1);
      v9 = *v5;
      if (vabdd_f64(v6, v8) >= COERCE_DOUBLE(1))
      {
        if (vabdd_f64(v7, v9) >= COERCE_DOUBLE(1))
          goto LABEL_18;
        if (v6 >= v8)
        {
          if (a1)
            goto LABEL_18;
          v18.origin.x = OUTLINED_FUNCTION_1_14();
          MinY = CGRectGetMinY(v18);
        }
        else
        {
          if (a1 != 2)
            goto LABEL_18;
          v16.origin.x = OUTLINED_FUNCTION_1_14();
          MinY = CGRectGetMaxY(v16);
        }
        v12 = vabdd_f64(v7, MinY);
      }
      else
      {
        if (v7 >= v9)
        {
          if (a1 != 3)
            goto LABEL_18;
          v17.origin.x = OUTLINED_FUNCTION_1_14();
          MaxX = CGRectGetMaxX(v17);
        }
        else
        {
          if (a1 != 1)
            goto LABEL_18;
          v15.origin.x = OUTLINED_FUNCTION_1_14();
          MaxX = CGRectGetMinX(v15);
        }
        v12 = vabdd_f64(v6, MaxX);
      }
      if (v12 < COERCE_DOUBLE(1))
      {
        v13 = 1;
        goto LABEL_20;
      }
LABEL_18:
      v5 += 4;
      --v4;
    }
    while (v4);
  }
  v13 = 0;
LABEL_20:
  OUTLINED_FUNCTION_23_1();
  return v13;
}

uint64_t sub_249784234(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  double v9;
  double v10;
  unint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  double *v37;
  unint64_t v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  double *v52;
  unint64_t v53;
  uint64_t v54;
  double v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  double *v69;
  unint64_t v70;
  unint64_t v71;
  double v72;
  unint64_t v73;
  unint64_t v74;
  double *v75;
  unint64_t v76;
  unint64_t v77;
  double *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  int64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  unint64_t v115;
  _OWORD v116[4];
  uint64_t v117[2];

  v4 = a1;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    swift_bridgeObjectRetain();
    v7 = (double *)(v4 + 56);
    v8 = MEMORY[0x24BEE4AF8];
    do
    {
      v1 = *(v7 - 3);
      v2 = *(v7 - 2);
      v3 = *v7;
      OUTLINED_FUNCTION_10_5();
      OUTLINED_FUNCTION_9_8();
      v9 = OUTLINED_FUNCTION_10_5();
      v10 = OUTLINED_FUNCTION_8_9();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v17 = OUTLINED_FUNCTION_6_5();
        sub_249752E40(v17, v18, v19, v8);
        v8 = v20;
      }
      v11 = *(_QWORD *)(v8 + 24);
      if (*(_QWORD *)(v8 + 16) >= v11 >> 1)
      {
        OUTLINED_FUNCTION_4_14(v11);
        v8 = v21;
      }
      OUTLINED_FUNCTION_12_6();
      *(double *)(v12 + 80) = v9;
      *(double *)(v12 + 88) = v10;
      OUTLINED_FUNCTION_7_10();
      OUTLINED_FUNCTION_8_9();
      v13 = OUTLINED_FUNCTION_7_10();
      v14 = OUTLINED_FUNCTION_9_8();
      v15 = *(_QWORD *)(v8 + 24);
      if (*(_QWORD *)(v8 + 16) >= v15 >> 1)
      {
        OUTLINED_FUNCTION_4_14(v15);
        v8 = v22;
      }
      OUTLINED_FUNCTION_12_6();
      v7 += 4;
      *(double *)(v16 + 80) = v13;
      *(double *)(v16 + 88) = v14;
      --v5;
    }
    while (v5);
    OUTLINED_FUNCTION_23_1();
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
  }
  v117[0] = v6;
  v23 = *(_QWORD *)(v8 + 16);
  if (v23)
  {
    swift_bridgeObjectRetain();
    v24 = (__int128 *)(v8 + 80);
    do
    {
      v25 = *(v24 - 2);
      v26 = *(v24 - 1);
      v27 = *v24;
      v116[0] = *(v24 - 3);
      v116[1] = v25;
      v116[2] = v26;
      v116[3] = v27;
      sub_249784DB4((uint64_t)v117, (uint64_t)v116, v4);
      v24 += 4;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease_n();
    v28 = v117[0];
  }
  else
  {
    OUTLINED_FUNCTION_1();
    v28 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)&v116[0] = v28;
  sub_2497853AC((uint64_t *)v116, (uint64_t (*)(uint64_t))sub_2497C7A5C, (uint64_t (*)(_QWORD *))sub_249786974);
  v29 = *(_QWORD *)&v116[0];
  v30 = *(_QWORD *)(*(_QWORD *)&v116[0] + 16);
  if (v30)
  {
    swift_bridgeObjectRetain_n();
    v31 = MEMORY[0x24BEE4AF8];
    v32 = (double *)(v29 + 56);
    do
    {
      v3 = *(v32 - 3);
      v33 = *(v32 - 2);
      v2 = *(v32 - 1);
      v1 = *v32;
      v34 = *(_QWORD *)(v31 + 16);
      if (v34)
      {
        v35 = v31 + 32 * v34;
        if (vabdd_f64(*(double *)(v35 + 16), v3) >= COERCE_DOUBLE(1)
          || vabdd_f64(*(double *)(v35 + 24), v33) >= COERCE_DOUBLE(1))
        {
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_249752D34();
            v31 = v40;
          }
          v38 = *(_QWORD *)(v31 + 16);
          if (v38 >= *(_QWORD *)(v31 + 24) >> 1)
          {
            OUTLINED_FUNCTION_5_9();
            v31 = v41;
          }
          *(_QWORD *)(v31 + 16) = v38 + 1;
          v37 = (double *)(v31 + 32 * v38);
          v37[4] = v3;
          v37[5] = v33;
          v37[6] = v2;
        }
        else
        {
          v114 = *(_OWORD *)v35;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2497C7A5C();
            v31 = v42;
          }
          v36 = *(_QWORD *)(v31 + 16);
          if (!v36)
            goto LABEL_115;
          *(_QWORD *)(v31 + 16) = v36 - 1;
          if (v36 > *(_QWORD *)(v31 + 24) >> 1)
          {
            OUTLINED_FUNCTION_5_9();
            v31 = v43;
          }
          *(_QWORD *)(v31 + 16) = v36;
          v37 = (double *)(v31 + 32 * (v36 - 1));
          *((_OWORD *)v37 + 2) = v114;
          *((_QWORD *)v37 + 6) = v114;
        }
        v39 = v37 + 7;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_25787FFD8);
        v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_249838510;
        *(double *)(v31 + 32) = v3;
        *(double *)(v31 + 40) = v33;
        *(double *)(v31 + 48) = v2;
        v39 = (double *)(v31 + 56);
      }
      *v39 = v1;
      swift_bridgeObjectRelease();
      v32 += 4;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v31 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v116[0] = v31;
  v44 = *(_QWORD *)(v31 + 16);
  if (v44 && *(double *)(v31 + 56) - *(double *)(v31 + 40) != 0.0)
  {
    if (v44 != 1)
    {
      v46 = (double *)(v31 + 88);
      v47 = 1;
      do
      {
        if (__OFADD__(v47, 1))
          goto LABEL_116;
        OUTLINED_FUNCTION_16_5(v46);
        if (v51)
          goto LABEL_40;
        v47 = v49 + 1;
        v46 = (double *)(v48 + 32);
      }
      while (v50 != v44);
    }
    v52 = (double *)(v31 + 32);
    swift_bridgeObjectRetain();
    v53 = MEMORY[0x24BEE4AF8];
    v54 = MEMORY[0x24BEE4AF8];
    do
    {
      v2 = *v52;
      v1 = v52[1];
      v55 = v52[3];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_6_5();
        sub_249752D88();
        v54 = v62;
      }
      v56 = *(_QWORD *)(v54 + 16);
      v57 = *(_QWORD *)(v54 + 24) >> 1;
      v58 = v56 + 1;
      if (v57 <= v56)
      {
        OUTLINED_FUNCTION_11_6();
        v54 = v63;
        v57 = *(_QWORD *)(v63 + 24) >> 1;
      }
      *(_QWORD *)(v54 + 16) = v58;
      v59 = v54 + 32 * v56;
      *(double *)(v59 + 32) = v2;
      *(double *)(v59 + 40) = v1;
      *(double *)(v59 + 48) = v55;
      *(_BYTE *)(v59 + 56) = v1 < v55;
      v60 = v56 + 2;
      if ((uint64_t)v57 < v60)
      {
        OUTLINED_FUNCTION_11_6();
        v54 = v64;
      }
      *(_QWORD *)(v54 + 16) = v60;
      v61 = v54 + 32 * v58;
      *(double *)(v61 + 32) = v2;
      *(double *)(v61 + 40) = v55;
      *(double *)(v61 + 48) = v1;
      *(_BYTE *)(v61 + 56) = v1 < v55;
      v52 += 4;
      --v44;
    }
    while (v44);
    OUTLINED_FUNCTION_1();
    v117[0] = v54;
    v65 = 0;
    sub_2497853AC(v117, (uint64_t (*)(uint64_t))sub_2497C7A84, (uint64_t (*)(_QWORD *))sub_249785BC8);
    v115 = v53;
    v66 = v117[0];
    v67 = *(_QWORD *)(v117[0] + 16);
    if (v67)
    {
      v68 = 0;
      v69 = (double *)(v117[0] + 64);
      v53 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        v70 = *(_QWORD *)(v66 + 16);
        if (v68 >= v70)
        {
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_42();
          OUTLINED_FUNCTION_23_1();
          v88 = *(_QWORD *)(v31 + 16);
          v4 = v88 + 1;
          if (v88 < *(_QWORD *)(v31 + 24) >> 1)
          {
LABEL_120:
            *(_QWORD *)(v31 + 16) = v4;
            v110 = v31 + 16 * v88;
            *(double *)(v110 + 32) = v1;
            *(double *)(v110 + 40) = v2;
            goto LABEL_41;
          }
LABEL_125:
          OUTLINED_FUNCTION_2_15();
          v31 = v113;
          goto LABEL_120;
        }
        v71 = v68 + 1;
        if (v68 + 1 >= v70)
          goto LABEL_114;
        v2 = *(v69 - 4);
        v1 = *(v69 - 3);
        v72 = *(v69 - 2);
        if (*((_BYTE *)v69 - 8) == 1)
        {
          if (v1 < v72)
            goto LABEL_63;
        }
        else if (v72 < v1)
        {
LABEL_63:
          v55 = *v69;
          goto LABEL_64;
        }
        v55 = *(v69 - 4);
        v2 = *v69;
LABEL_64:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_6_5();
          sub_249752D50();
          v53 = v76;
        }
        v73 = *(_QWORD *)(v53 + 16);
        v74 = v73 + 1;
        if (v73 >= *(_QWORD *)(v53 + 24) >> 1)
        {
          sub_249752D50();
          v53 = v77;
        }
        *(_QWORD *)(v53 + 16) = v74;
        v75 = (double *)(v53 + 32 * v73);
        v75[4] = v55;
        v75[5] = v1;
        v75[6] = v2;
        v75[7] = v1;
        v69 += 8;
        v68 = v71 + 1;
        if (v71 + 1 >= v67)
        {
          v115 = v53;
          goto LABEL_71;
        }
      }
    }
    v74 = *(_QWORD *)(v53 + 16);
    if (!v74)
    {
      OUTLINED_FUNCTION_1();
      goto LABEL_73;
    }
LABEL_71:
    if (*(double *)(v53 + 48) - *(double *)(v53 + 32) == 0.0)
    {
LABEL_72:
      OUTLINED_FUNCTION_1();
LABEL_73:
      swift_bridgeObjectRelease();
      v31 = sub_249784BB8(v4);
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    if (v74 != 1)
    {
      v78 = (double *)(v53 + 80);
      v79 = 1;
      while (!__OFADD__(v79, 1))
      {
        OUTLINED_FUNCTION_16_5(v78);
        if (v51)
          goto LABEL_72;
        v78 = (double *)(v80 + 32);
        v79 = v81 + 1;
        if (v82 == v74)
          goto LABEL_79;
      }
      goto LABEL_118;
    }
LABEL_79:
    sub_2497853AC((uint64_t *)v116, (uint64_t (*)(uint64_t))sub_2497C7A5C, (uint64_t (*)(_QWORD *))sub_2497862AC);
    sub_2497853AC((uint64_t *)&v115, (uint64_t (*)(uint64_t))sub_2497C7A70, (uint64_t (*)(_QWORD *))sub_249785504);
    if (*(_QWORD *)(*(_QWORD *)&v116[0] + 16))
    {
      v55 = *(double *)(*(_QWORD *)&v116[0] + 32);
      v3 = *(double *)(*(_QWORD *)&v116[0] + 40);
      v1 = *(double *)(*(_QWORD *)&v116[0] + 48);
      v2 = *(double *)(*(_QWORD *)&v116[0] + 56);
      sub_249787BAC(0, 1);
      sub_249752D6C();
      v31 = v83;
      v53 = *(_QWORD *)(v83 + 16);
      v84 = *(_QWORD *)(v83 + 24) >> 1;
      v65 = v53 + 1;
      if (v84 > v53)
      {
LABEL_81:
        *(_QWORD *)(v31 + 16) = v65;
        v85 = v31 + 16 * v53;
        *(double *)(v85 + 32) = v55;
        *(double *)(v85 + 40) = v3;
        v86 = v53 + 2;
        if ((uint64_t)v84 < v86)
        {
          OUTLINED_FUNCTION_0_15();
          v31 = v112;
        }
        *(_QWORD *)(v31 + 16) = v86;
        v87 = v31 + 16 * v65;
        *(double *)(v87 + 32) = v1;
        *(double *)(v87 + 40) = v2;
        v88 = v115;
        if (*(_QWORD *)(v115 + 16))
        {
          while (1)
          {
            v89 = 0;
            v90 = 0;
            while (1)
            {
              OUTLINED_FUNCTION_15_5();
              if (v92)
              {
                OUTLINED_FUNCTION_15_5();
                if (v92)
                  break;
              }
              v93 = v90 + 1;
              if (__OFADD__(v90, 1))
                goto LABEL_117;
              ++v90;
              v89 += 32;
              if (v93 == v91)
                goto LABEL_110;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_2497C7A70();
              v88 = v106;
            }
            v94 = *(_QWORD *)(v88 + 16);
            if (v94 <= v90)
              break;
            v95 = v94 - 1;
            v1 = *(double *)(v88 + v89 + 48);
            v2 = *(double *)(v88 + v89 + 56);
            sub_2497AC0F8((char *)(v88 + v89 + 64), ~v90 + v94, (char *)(v88 + v89 + 32));
            *(_QWORD *)(v88 + 16) = v95;
            v96 = *(_QWORD *)(v31 + 16);
            if (v96 >= *(_QWORD *)(v31 + 24) >> 1)
            {
              OUTLINED_FUNCTION_0_15();
              v31 = v107;
            }
            *(_QWORD *)(v31 + 16) = v96 + 1;
            v97 = v31 + 16 * v96;
            *(double *)(v97 + 32) = v1;
            *(double *)(v97 + 40) = v2;
            v98 = *(_QWORD *)&v116[0];
            if (!*(_QWORD *)(*(_QWORD *)&v116[0] + 16))
            {
LABEL_112:
              OUTLINED_FUNCTION_42();
              goto LABEL_72;
            }
            v99 = 0;
            v100 = 32;
            while (1)
            {
              OUTLINED_FUNCTION_15_5();
              if (v92)
              {
                OUTLINED_FUNCTION_15_5();
                if (v92)
                  break;
              }
              ++v99;
              v100 += 32;
              if (v101 == v99)
                goto LABEL_112;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_2497C7A5C();
              v98 = v108;
            }
            v102 = *(_QWORD *)(v98 + 16);
            if (v102 <= v99)
              goto LABEL_124;
            v103 = v102 - 1;
            v1 = *(double *)(v98 + v100 + 16);
            v2 = *(double *)(v98 + v100 + 24);
            sub_2497AC0F8((char *)(v98 + v100 + 32), ~v99 + v102, (char *)(v98 + v100));
            *(_QWORD *)(v98 + 16) = v103;
            *(_QWORD *)&v116[0] = v98;
            if (!v103)
              goto LABEL_119;
            v104 = *(_QWORD *)(v31 + 16);
            if (v104 >= *(_QWORD *)(v31 + 24) >> 1)
            {
              OUTLINED_FUNCTION_0_15();
              v31 = v109;
            }
            *(_QWORD *)(v31 + 16) = v104 + 1;
            v105 = v31 + 16 * v104;
            *(double *)(v105 + 32) = v1;
            *(double *)(v105 + 40) = v2;
            if (!*(_QWORD *)(v88 + 16))
              goto LABEL_110;
          }
          __break(1u);
LABEL_124:
          __break(1u);
          goto LABEL_125;
        }
LABEL_110:
        OUTLINED_FUNCTION_42();
        OUTLINED_FUNCTION_1();
        goto LABEL_73;
      }
    }
    else
    {
      __break(1u);
    }
    OUTLINED_FUNCTION_2_15();
    v31 = v111;
    v84 = *(_QWORD *)(v111 + 24) >> 1;
    goto LABEL_81;
  }
LABEL_40:
  OUTLINED_FUNCTION_1();
  v31 = sub_249784BB8(v4);
LABEL_41:
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_249784BB8(uint64_t a1)
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v5;
  CGFloat *v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  uint64_t v11;
  CGFloat MinX;
  CGFloat MinY;
  CGFloat v14;
  CGFloat MaxY;
  CGFloat MaxX;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  x = *MEMORY[0x24BDBF070];
  y = *(double *)(MEMORY[0x24BDBF070] + 8);
  width = *(double *)(MEMORY[0x24BDBF070] + 16);
  height = *(double *)(MEMORY[0x24BDBF070] + 24);
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = (CGFloat *)(swift_bridgeObjectRetain() + 56);
    do
    {
      v7 = *(v6 - 3);
      v8 = *(v6 - 2);
      v9 = *(v6 - 1);
      v10 = *v6;
      v21.origin.x = v7;
      v21.origin.y = v8;
      v21.size.width = v9;
      v21.size.height = *v6;
      if (CGRectGetWidth(v21) > 0.0)
      {
        v22.origin.x = v7;
        v22.origin.y = v8;
        v22.size.width = v9;
        v22.size.height = v10;
        if (CGRectGetHeight(v22) > 0.0)
        {
          v23.origin.x = x;
          v23.origin.y = y;
          v23.size.width = width;
          v23.size.height = height;
          v34.origin.x = v7;
          v34.origin.y = v8;
          v34.size.width = v9;
          v34.size.height = v10;
          v24 = CGRectUnion(v23, v34);
          x = v24.origin.x;
          y = v24.origin.y;
          width = v24.size.width;
          height = v24.size.height;
        }
      }
      v6 += 4;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  v25.origin.x = x;
  v25.origin.y = y;
  v25.size.width = width;
  v25.size.height = height;
  if (CGRectIsEmpty(v25))
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880118);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_249839510;
  v26.origin.x = x;
  v26.origin.y = y;
  v26.size.width = width;
  v26.size.height = height;
  MinX = CGRectGetMinX(v26);
  v27.origin.x = x;
  v27.origin.y = y;
  v27.size.width = width;
  v27.size.height = height;
  MinY = CGRectGetMinY(v27);
  *(CGFloat *)(v11 + 32) = MinX;
  *(CGFloat *)(v11 + 40) = MinY;
  v28.origin.x = x;
  v28.origin.y = y;
  v28.size.width = width;
  v28.size.height = height;
  v14 = CGRectGetMinX(v28);
  v29.origin.x = x;
  v29.origin.y = y;
  v29.size.width = width;
  v29.size.height = height;
  MaxY = CGRectGetMaxY(v29);
  *(CGFloat *)(v11 + 48) = v14;
  *(CGFloat *)(v11 + 56) = MaxY;
  v30.origin.x = x;
  v30.origin.y = y;
  v30.size.width = width;
  v30.size.height = height;
  MaxX = CGRectGetMaxX(v30);
  v31.origin.x = x;
  v31.origin.y = y;
  v31.size.width = width;
  v31.size.height = height;
  v17 = CGRectGetMaxY(v31);
  *(CGFloat *)(v11 + 64) = MaxX;
  *(CGFloat *)(v11 + 72) = v17;
  v32.origin.x = x;
  v32.origin.y = y;
  v32.size.width = width;
  v32.size.height = height;
  v18 = CGRectGetMaxX(v32);
  v33.origin.x = x;
  v33.origin.y = y;
  v33.size.width = width;
  v33.size.height = height;
  v19 = CGRectGetMinY(v33);
  *(CGFloat *)(v11 + 80) = v18;
  *(CGFloat *)(v11 + 88) = v19;
  return v11;
}

void sub_249784DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CGFloat v4;
  CGFloat v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  CGFloat v13;
  CGFloat v14;
  CGRect *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  double *v19;
  double v20;
  double v21;
  double v22;
  double MinY;
  double v24;
  double MaxX;
  double MaxY;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  BOOL v32;
  double v33;
  BOOL v34;
  double v35;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  BOOL v42;
  double v43;
  BOOL v44;
  double v45;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  double *v61;
  unint64_t v62;
  double *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double MinX;
  double v75;
  CGRect v76;
  __int128 v77;
  uint64_t v78;
  CGRect v79;
  CGRect v80;

  v4 = *(double *)a2;
  v5 = *(double *)(a2 + 8);
  v71 = *(double *)(a2 + 24);
  v72 = *(double *)(a2 + 16);
  v77 = *(_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FFD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249838510;
  *(_OWORD *)(inited + 32) = v77;
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v7;
  v78 = inited;
  v9 = *(_QWORD *)(a3 + 16);
  if (!v9)
    goto LABEL_52;
  v10 = a3 + 32;
  swift_bridgeObjectRetain();
  v11 = 0;
  v12 = MEMORY[0x24BEE4AF8];
  v14 = v71;
  v13 = v72;
  v69 = v5;
  v70 = v4;
  v68 = v9;
  while (1)
  {
    v15 = (CGRect *)(v10 + 32 * v11);
    v79 = *v15;
    v76.origin.x = v15->origin.x;
    v76.origin.y = v79.origin.y;
    v76.size.width = v79.size.width;
    v76.size.height = v79.size.height;
    v80.origin.x = v4;
    v80.origin.y = v5;
    v80.size.width = v13;
    v80.size.height = v14;
    if (!CGRectEqualToRect(*v15, v80))
    {
      v16 = *(_QWORD *)(v78 + 16);
      if (v16)
        break;
    }
LABEL_50:
    if (++v11 == v9)
    {
      swift_bridgeObjectRelease();
LABEL_52:
      sub_24979F2B8();
      return;
    }
  }
  v17 = v78 + 32;
  swift_bridgeObjectRetain();
  v18 = 0;
  while (1)
  {
    v19 = (double *)(v17 + 32 * v18);
    v21 = *v19;
    v20 = v19[1];
    v22 = v19[2];
    v73 = v19[3];
    MinX = CGRectGetMinX(v76);
    MinY = CGRectGetMinY(v76);
    v24 = v20;
    MaxX = CGRectGetMaxX(v76);
    MaxY = CGRectGetMaxY(v76);
    if ((sub_249749554(v21, v24, v22, v73, MaxX, MinY, MinX, MinY) & 1) == 0
      && (sub_249749554(v21, v24, v22, v73, MinX, MinY, MinX, MaxY) & 1) == 0
      && (sub_249749554(v21, v24, v22, v73, MinX, MaxY, MaxX, MaxY) & 1) == 0
      && (sub_249749554(v21, v24, v22, v73, MaxX, MaxY, MaxX, MinY) & 1) == 0)
    {
      goto LABEL_48;
    }
    v75 = v24;
    v27 = CGRectGetMinX(v76);
    v28 = CGRectGetMinY(v76);
    v29 = CGRectGetMinX(v76);
    v30 = CGRectGetMaxY(v76);
    v31 = vabdd_f64(v29, v22);
    v32 = vabdd_f64(v27, v21) < COERCE_DOUBLE(1) && v31 < COERCE_DOUBLE(1);
    v33 = vabdd_f64(v28, v75);
    v34 = v32 && v33 < COERCE_DOUBLE(1);
    v35 = vabdd_f64(v30, v73);
    if (v34 && v35 < COERCE_DOUBLE(1))
      goto LABEL_48;
    v37 = CGRectGetMaxX(v76);
    v38 = CGRectGetMaxY(v76);
    v39 = CGRectGetMaxX(v76);
    v40 = CGRectGetMinY(v76);
    v41 = vabdd_f64(v39, v22);
    v42 = vabdd_f64(v37, v21) < COERCE_DOUBLE(1) && v41 < COERCE_DOUBLE(1);
    v43 = vabdd_f64(v38, v75);
    v44 = v42 && v43 < COERCE_DOUBLE(1);
    v45 = vabdd_f64(v40, v73);
    if (v44 && v45 < COERCE_DOUBLE(1))
      goto LABEL_48;
    x = v76.origin.x;
    y = v76.origin.y;
    width = v76.size.width;
    height = v76.size.height;
    if (v75 >= v73)
    {
      v51 = CGRectGetMaxY(*(CGRect *)&x);
      v52 = CGRectGetMinY(v76);
    }
    else
    {
      v51 = CGRectGetMinY(*(CGRect *)&x);
      v52 = CGRectGetMaxY(v76);
    }
    v53 = v52;
    v54 = v78;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2497C7A5C();
      v54 = v64;
    }
    v55 = *(_QWORD *)(v54 + 16);
    if (v18 >= v55)
      break;
    v56 = v55 - 1;
    v57 = v55 - 1 - v18;
    if (v57 < 0)
      goto LABEL_54;
    memmove((void *)(v54 + 32 * v18 + 32), (const void *)(v54 + 32 * v18 + 64), 32 * v57);
    *(_QWORD *)(v54 + 16) = v56;
    v78 = v54;
    v58 = v12;
    if ((v51 - v75) / (v73 - v75) > 0.0)
    {
      sub_249752D34();
      v58 = v59;
      v60 = *(_QWORD *)(v59 + 16);
      if (v60 >= *(_QWORD *)(v59 + 24) >> 1)
      {
        sub_249752D34();
        v58 = v65;
      }
      *(_QWORD *)(v58 + 16) = v60 + 1;
      v61 = (double *)(v58 + 32 * v60);
      v61[4] = v21;
      v61[5] = v75;
      v61[6] = v21;
      v61[7] = v51;
    }
    if ((v53 - v75) / (v73 - v75) < 1.0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249752D34();
        v58 = v66;
      }
      v62 = *(_QWORD *)(v58 + 16);
      if (v62 >= *(_QWORD *)(v58 + 24) >> 1)
      {
        sub_249752D34();
        v58 = v67;
      }
      *(_QWORD *)(v58 + 16) = v62 + 1;
      v63 = (double *)(v58 + 32 * v62);
      v63[4] = v21;
      v63[5] = v53;
      v63[6] = v21;
      v63[7] = v73;
    }
    sub_24979F2B8();
LABEL_48:
    if (++v18 == v16)
    {
      swift_bridgeObjectRelease();
      v5 = v69;
      v4 = v70;
      v14 = v71;
      v13 = v72;
      v10 = a3 + 32;
      v9 = v68;
      goto LABEL_50;
    }
  }
  __break(1u);
LABEL_54:
  sub_249837360();
  __break(1u);
}

uint64_t sub_2497853AC(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_249785428(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  __int128 *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 < 2)
    return MEMORY[0x24BEE4AF8];
  v2 = v1 - 1;
  v3 = (__int128 *)(a1 + 48);
  v4 = MEMORY[0x24BEE4AF8];
  do
  {
    v10 = *v3;
    v11 = *(v3 - 1);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_5();
      sub_249752D50();
      v4 = v7;
    }
    v5 = *(_QWORD *)(v4 + 16);
    if (v5 >= *(_QWORD *)(v4 + 24) >> 1)
    {
      sub_249752D50();
      v4 = v8;
    }
    *(_QWORD *)(v4 + 16) = v5 + 1;
    v6 = v4 + 32 * v5;
    *(_OWORD *)(v6 + 32) = v11;
    *(_OWORD *)(v6 + 48) = v10;
    ++v3;
    --v2;
  }
  while (v2);
  return v4;
}

void sub_249785504(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  double v14;
  double *v15;
  uint64_t v16;
  _BOOL4 v17;
  uint64_t v18;
  double *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  double *v31;
  double v32;
  double *v33;
  uint64_t v34;
  double v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;

  v3 = a1[1];
  v4 = sub_249837534();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_249787114(0, v3, 1, a1);
      return;
    }
    goto LABEL_145;
  }
  v5 = v4;
  sub_24974CFB8(v3 / 2);
  v99 = a1;
  v100 = v6;
  v104 = v7;
  v102 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v41 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_111:
    if (v41 < 2)
    {
LABEL_122:
      swift_bridgeObjectRelease();
      if (v102 >= -1)
      {
        *(_QWORD *)(v100 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_151;
    }
    v92 = *v99;
    while (1)
    {
      v93 = v41 - 2;
      if (v41 < 2)
        break;
      if (!v92)
        goto LABEL_154;
      v94 = *(_QWORD *)&v10[16 * v93 + 32];
      v95 = *(_QWORD *)&v10[16 * v41 + 24];
      sub_2497873C4((char *)(v92 + 32 * v94), (char *)(v92 + 32 * *(_QWORD *)&v10[16 * v41 + 16]), v92 + 32 * v95, v104);
      if (v1)
        goto LABEL_107;
      if (v95 < v94)
        goto LABEL_140;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_24975DBE8();
      if (v93 >= *((_QWORD *)v10 + 2))
        goto LABEL_141;
      v96 = &v10[16 * v93 + 32];
      *(_QWORD *)v96 = v94;
      *((_QWORD *)v96 + 1) = v95;
      v97 = *((_QWORD *)v10 + 2);
      if (v41 > v97)
        goto LABEL_142;
      memmove(&v10[16 * v41 + 16], &v10[16 * v41 + 32], 16 * (v97 - v41));
      *((_QWORD *)v10 + 2) = v97 - 1;
      v41 = v97 - 1;
      if (v97 <= 2)
        goto LABEL_122;
    }
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v98 = *a1 + 16;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v11 = v3;
  v101 = v5;
  v103 = *a1;
  while (1)
  {
    v12 = v8++;
    if (v8 >= v11)
      goto LABEL_35;
    v13 = (double *)(v9 + 32 * v8);
    v14 = v13[1];
    v15 = (double *)(v9 + 32 * v12);
    if (v14 >= v15[1])
    {
      if (*v13 >= v13[2])
      {
        v16 = v12 + 2;
        if (v12 + 2 >= v11)
          goto LABEL_34;
        v17 = 0;
      }
      else
      {
        v17 = *v15 >= v15[2];
        v16 = v12 + 2;
        if (v12 + 2 >= v11)
          goto LABEL_26;
      }
    }
    else
    {
      v16 = v12 + 2;
      if (v12 + 2 >= v11)
        goto LABEL_28;
      v17 = 1;
    }
    v18 = v11 <= v16 + 1 ? v16 + 1 : v11;
    v19 = (double *)(v98 + 32 * v16);
    do
    {
      v20 = v14;
      v14 = *(v19 - 1);
      if (v14 >= v20)
      {
        if (*(v19 - 2) >= *v19)
        {
          if (v17)
            goto LABEL_27;
        }
        else if (((v17 ^ (*(double *)(v9 + 32 * v8) < *(double *)(v9 + 32 * v8 + 16))) & 1) == 0)
        {
          goto LABEL_26;
        }
      }
      else if (!v17)
      {
        goto LABEL_34;
      }
      v8 = v16;
      v19 += 4;
      ++v16;
    }
    while (v16 < v11);
    v16 = v18;
LABEL_26:
    v8 = v16;
    if (v17)
    {
LABEL_27:
      if (v16 < v12)
        goto LABEL_147;
LABEL_28:
      if (v12 < v16)
      {
        v21 = 32 * v16;
        v22 = 32 * v12;
        v23 = v16;
        v24 = v12;
        do
        {
          if (v24 != --v23)
          {
            if (!v9)
              goto LABEL_153;
            v25 = (_OWORD *)(v9 + v22);
            v26 = v9 + v21;
            v27 = *(_OWORD *)(v9 + v22);
            v28 = *(_OWORD *)(v9 + v22 + 16);
            v29 = *(_OWORD *)(v9 + v21 - 16);
            *v25 = *(_OWORD *)(v9 + v21 - 32);
            v25[1] = v29;
            *(_OWORD *)(v26 - 32) = v27;
            *(_OWORD *)(v26 - 16) = v28;
          }
          ++v24;
          v21 -= 32;
          v22 += 32;
        }
        while (v24 < v23);
      }
LABEL_34:
      v8 = v16;
    }
LABEL_35:
    if (v8 < v11)
    {
      if (__OFSUB__(v8, v12))
        goto LABEL_144;
      if (v8 - v12 < v5)
      {
        v30 = v12 + v5;
        if (__OFADD__(v12, v5))
          goto LABEL_148;
        if (v30 >= v11)
          v30 = v11;
        if (v30 < v12)
          goto LABEL_149;
        if (v8 != v30)
        {
          v31 = (double *)(v9 + 32 * v8);
          do
          {
            v32 = *(double *)(v9 + 32 * v8 + 8);
            v33 = v31;
            v34 = v12;
            do
            {
              if (v32 >= *(v33 - 3) && (*v33 >= v33[2] || *(v33 - 4) < *(v33 - 2)))
                break;
              if (!v9)
                goto LABEL_150;
              v36 = *v33;
              v37 = *((_OWORD *)v33 + 1);
              v38 = *((_OWORD *)v33 - 1);
              *(_OWORD *)v33 = *((_OWORD *)v33 - 2);
              *((_OWORD *)v33 + 1) = v38;
              *(v33 - 3) = v32;
              *((_OWORD *)v33 - 1) = v37;
              *(v33 - 4) = v36;
              v33 -= 4;
              ++v34;
            }
            while (v8 != v34);
            ++v8;
            v31 += 4;
          }
          while (v8 != v30);
          v8 = v30;
        }
      }
    }
    if (v8 < v12)
      goto LABEL_143;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_24975DAF4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v40 = *((_QWORD *)v10 + 2);
    v39 = *((_QWORD *)v10 + 3);
    v41 = v40 + 1;
    v9 = v103;
    if (v40 >= v39 >> 1)
    {
      v91 = sub_24975DAF4((char *)(v39 > 1), v40 + 1, 1, v10);
      v9 = v103;
      v10 = v91;
    }
    *((_QWORD *)v10 + 2) = v41;
    v42 = v10 + 32;
    v43 = &v10[16 * v40 + 32];
    *(_QWORD *)v43 = v12;
    *((_QWORD *)v43 + 1) = v8;
    if (v40)
      break;
    v41 = 1;
LABEL_102:
    v5 = v101;
    v11 = v102;
    if (v8 >= v102)
      goto LABEL_111;
  }
  while (1)
  {
    v44 = v41 - 1;
    if (v41 >= 4)
    {
      v49 = &v42[16 * v41];
      v50 = *((_QWORD *)v49 - 8);
      v51 = *((_QWORD *)v49 - 7);
      v55 = __OFSUB__(v51, v50);
      v52 = v51 - v50;
      if (v55)
        goto LABEL_128;
      v54 = *((_QWORD *)v49 - 6);
      v53 = *((_QWORD *)v49 - 5);
      v55 = __OFSUB__(v53, v54);
      v47 = v53 - v54;
      v48 = v55;
      if (v55)
        goto LABEL_129;
      v56 = v41 - 2;
      v57 = &v42[16 * v41 - 32];
      v59 = *(_QWORD *)v57;
      v58 = *((_QWORD *)v57 + 1);
      v55 = __OFSUB__(v58, v59);
      v60 = v58 - v59;
      if (v55)
        goto LABEL_130;
      v55 = __OFADD__(v47, v60);
      v61 = v47 + v60;
      if (v55)
        goto LABEL_132;
      if (v61 >= v52)
      {
        v79 = &v42[16 * v44];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v55 = __OFSUB__(v80, v81);
        v82 = v80 - v81;
        if (v55)
          goto LABEL_138;
        v72 = v47 < v82;
        goto LABEL_91;
      }
    }
    else
    {
      if (v41 != 3)
      {
        v73 = *((_QWORD *)v10 + 4);
        v74 = *((_QWORD *)v10 + 5);
        v55 = __OFSUB__(v74, v73);
        v66 = v74 - v73;
        v67 = v55;
        goto LABEL_85;
      }
      v46 = *((_QWORD *)v10 + 4);
      v45 = *((_QWORD *)v10 + 5);
      v55 = __OFSUB__(v45, v46);
      v47 = v45 - v46;
      v48 = v55;
    }
    if ((v48 & 1) != 0)
      goto LABEL_131;
    v56 = v41 - 2;
    v62 = &v42[16 * v41 - 32];
    v64 = *(_QWORD *)v62;
    v63 = *((_QWORD *)v62 + 1);
    v65 = __OFSUB__(v63, v64);
    v66 = v63 - v64;
    v67 = v65;
    if (v65)
      goto LABEL_133;
    v68 = &v42[16 * v44];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v55 = __OFSUB__(v69, v70);
    v71 = v69 - v70;
    if (v55)
      goto LABEL_135;
    if (__OFADD__(v66, v71))
      goto LABEL_137;
    if (v66 + v71 >= v47)
    {
      v72 = v47 < v71;
LABEL_91:
      if (v72)
        v44 = v56;
      goto LABEL_93;
    }
LABEL_85:
    if ((v67 & 1) != 0)
      goto LABEL_134;
    v75 = &v42[16 * v44];
    v77 = *(_QWORD *)v75;
    v76 = *((_QWORD *)v75 + 1);
    v55 = __OFSUB__(v76, v77);
    v78 = v76 - v77;
    if (v55)
      goto LABEL_136;
    if (v78 < v66)
      goto LABEL_102;
LABEL_93:
    v83 = v44 - 1;
    if (v44 - 1 >= v41)
    {
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
    if (!v9)
      goto LABEL_152;
    v84 = v10;
    v85 = &v42[16 * v83];
    v86 = *(_QWORD *)v85;
    v87 = v42;
    v88 = &v42[16 * v44];
    v89 = *((_QWORD *)v88 + 1);
    sub_2497873C4((char *)(v9 + 32 * *(_QWORD *)v85), (char *)(v9 + 32 * *(_QWORD *)v88), v9 + 32 * v89, v104);
    if (v1)
      break;
    if (v89 < v86)
      goto LABEL_125;
    if (v44 > *((_QWORD *)v84 + 2))
      goto LABEL_126;
    *(_QWORD *)v85 = v86;
    *(_QWORD *)&v87[16 * v83 + 8] = v89;
    v90 = *((_QWORD *)v84 + 2);
    if (v44 >= v90)
      goto LABEL_127;
    v10 = v84;
    v41 = v90 - 1;
    memmove(v88, v88 + 16, 16 * (v90 - 1 - v44));
    v42 = v87;
    *((_QWORD *)v84 + 2) = v90 - 1;
    v9 = v103;
    if (v90 <= 2)
      goto LABEL_102;
  }
LABEL_107:
  swift_bridgeObjectRelease();
  if (v102 < -1)
    goto LABEL_146;
  *(_QWORD *)(v100 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_249785BC8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  double v14;
  double *v15;
  double v16;
  char v18;
  uint64_t v19;
  double *v20;
  double v21;
  double *v22;
  double v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  unint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;

  v3 = a1[1];
  v4 = sub_249837534();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_2497871A4(0, v3, 1, a1);
      return;
    }
    goto LABEL_155;
  }
  v5 = v4;
  sub_24974CFC4(v3 / 2);
  v109 = v6;
  v110 = v3;
  v112 = v7;
  v107 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v49 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_121:
    v99 = v10;
    if (v49 < 2)
    {
LABEL_132:
      swift_bridgeObjectRelease();
      if (v110 >= -1)
      {
        *(_QWORD *)(v109 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_161;
    }
    v100 = *v107;
    while (1)
    {
      v101 = v49 - 2;
      if (v49 < 2)
        break;
      if (!v100)
        goto LABEL_164;
      v102 = v99;
      v103 = *(_QWORD *)&v99[16 * v101 + 32];
      v104 = *(_QWORD *)&v99[16 * v49 + 24];
      sub_249787584((char *)(v100 + 32 * v103), (char *)(v100 + 32 * *(_QWORD *)&v99[16 * v49 + 16]), v100 + 32 * v104, v112);
      if (v1)
        goto LABEL_117;
      if (v104 < v103)
        goto LABEL_150;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v102 = sub_24975DBE8();
      if (v101 >= *((_QWORD *)v102 + 2))
        goto LABEL_151;
      v105 = &v102[16 * v101 + 32];
      *(_QWORD *)v105 = v103;
      *((_QWORD *)v105 + 1) = v104;
      v106 = *((_QWORD *)v102 + 2);
      if (v49 > v106)
        goto LABEL_152;
      memmove(&v102[16 * v49 + 16], &v102[16 * v49 + 32], 16 * (v106 - v49));
      v99 = v102;
      *((_QWORD *)v102 + 2) = v106 - 1;
      v49 = v106 - 1;
      if (v106 <= 2)
        goto LABEL_132;
    }
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
    return;
  }
  v108 = v5;
  v8 = 0;
  v9 = *a1;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v111 = *a1;
  while (1)
  {
    v11 = v8;
    v12 = v8 + 1;
    if (v8 + 1 >= v3)
    {
      ++v8;
      goto LABEL_44;
    }
    v13 = (double *)(v9 + 32 * v12);
    v14 = v13[1];
    v15 = (double *)(v9 + 32 * v8);
    v16 = v15[1];
    if (v14 >= v16)
    {
      v8 += 2;
      if (vabdd_f64(v14, v16) >= COERCE_DOUBLE(1) || *v13 >= *v15)
      {
        if (v8 >= v3)
          goto LABEL_44;
        v18 = 0;
        goto LABEL_17;
      }
      if (v8 >= v3)
        goto LABEL_32;
    }
    else
    {
      v8 += 2;
      if (v11 + 2 >= v3)
        goto LABEL_32;
    }
    v18 = 1;
LABEL_17:
    v19 = v8;
    while (1)
    {
      while (1)
      {
        v20 = (double *)(v9 + 32 * v19);
        v21 = v20[1];
        v22 = (double *)(v9 + 32 * v12);
        v23 = v22[1];
        if (v21 >= v23 && (vabdd_f64(v21, v23) >= COERCE_DOUBLE(1) || *v20 >= *v22))
          break;
        if ((v18 & 1) == 0)
        {
          v8 = v19;
          goto LABEL_44;
        }
        v8 = v19 + 1;
        v12 = v19;
        v19 = v8;
        if (v8 >= v3)
          goto LABEL_31;
      }
      if ((v18 & 1) != 0)
        break;
      v8 = v19 + 1;
      v12 = v19;
      v19 = v8;
      if (v8 >= v3)
        goto LABEL_44;
    }
    v8 = v19;
LABEL_31:
    if (v8 < v11)
      goto LABEL_156;
LABEL_32:
    if (v11 < v8)
    {
      v25 = 32 * v8 - 32;
      v26 = 32 * v11;
      v27 = v8;
      v28 = v11;
      do
      {
        if (v28 != --v27)
        {
          if (!v9)
            goto LABEL_163;
          v29 = (_OWORD *)(v9 + v26);
          v30 = v9 + v25;
          v31 = *(_OWORD *)(v9 + v26);
          v32 = *(_QWORD *)(v9 + v26 + 16);
          v33 = *(_BYTE *)(v9 + v26 + 24);
          if (v26 != v25 || (unint64_t)v29 >= v9 + v25 + 32)
          {
            v35 = *(_OWORD *)(v30 + 16);
            *v29 = *(_OWORD *)v30;
            v29[1] = v35;
          }
          *(_OWORD *)v30 = v31;
          *(_QWORD *)(v30 + 16) = v32;
          *(_BYTE *)(v30 + 24) = v33;
        }
        ++v28;
        v25 -= 32;
        v26 += 32;
      }
      while (v28 < v27);
    }
LABEL_44:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_154;
      if (v8 - v11 < v108)
      {
        v36 = v11 + v108;
        if (__OFADD__(v11, v108))
          goto LABEL_158;
        if (v36 >= v3)
          v36 = v3;
        if (v36 < v11)
          goto LABEL_159;
        if (v8 != v36)
        {
          v37 = v9 + 32 * v8;
          do
          {
            v38 = v37;
            v39 = v11;
            do
            {
              v40 = *(double *)(v38 + 8);
              v41 = *(double *)(v38 - 24);
              if (v40 >= v41 && (vabdd_f64(v40, v41) >= COERCE_DOUBLE(1) || *(double *)v38 >= *(double *)(v38 - 32)))
                break;
              if (!v9)
                goto LABEL_160;
              v43 = *(double *)v38;
              v44 = *(_QWORD *)(v38 + 16);
              v45 = *(_BYTE *)(v38 + 24);
              v46 = *(_OWORD *)(v38 - 16);
              *(_OWORD *)v38 = *(_OWORD *)(v38 - 32);
              *(_OWORD *)(v38 + 16) = v46;
              *(double *)(v38 - 24) = v40;
              *(_QWORD *)(v38 - 16) = v44;
              *(_BYTE *)(v38 - 8) = v45;
              *(double *)(v38 - 32) = v43;
              v38 -= 32;
              ++v39;
            }
            while (v8 != v39);
            ++v8;
            v37 += 32;
          }
          while (v8 != v36);
          v8 = v36;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_153;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_24975DAF4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v48 = *((_QWORD *)v10 + 2);
    v47 = *((_QWORD *)v10 + 3);
    v49 = v48 + 1;
    v9 = v111;
    if (v48 >= v47 >> 1)
    {
      v98 = sub_24975DAF4((char *)(v47 > 1), v48 + 1, 1, v10);
      v9 = v111;
      v10 = v98;
    }
    *((_QWORD *)v10 + 2) = v49;
    v50 = v10 + 32;
    v51 = &v10[16 * v48 + 32];
    *(_QWORD *)v51 = v11;
    *((_QWORD *)v51 + 1) = v8;
    if (v48)
      break;
    v49 = 1;
LABEL_112:
    v3 = v110;
    if (v8 >= v110)
      goto LABEL_121;
  }
  while (1)
  {
    v52 = v49 - 1;
    if (v49 >= 4)
    {
      v57 = &v50[16 * v49];
      v58 = *((_QWORD *)v57 - 8);
      v59 = *((_QWORD *)v57 - 7);
      v63 = __OFSUB__(v59, v58);
      v60 = v59 - v58;
      if (v63)
        goto LABEL_138;
      v62 = *((_QWORD *)v57 - 6);
      v61 = *((_QWORD *)v57 - 5);
      v63 = __OFSUB__(v61, v62);
      v55 = v61 - v62;
      v56 = v63;
      if (v63)
        goto LABEL_139;
      v64 = v49 - 2;
      v65 = &v50[16 * v49 - 32];
      v67 = *(_QWORD *)v65;
      v66 = *((_QWORD *)v65 + 1);
      v63 = __OFSUB__(v66, v67);
      v68 = v66 - v67;
      if (v63)
        goto LABEL_140;
      v63 = __OFADD__(v55, v68);
      v69 = v55 + v68;
      if (v63)
        goto LABEL_142;
      if (v69 >= v60)
      {
        v87 = &v50[16 * v52];
        v89 = *(_QWORD *)v87;
        v88 = *((_QWORD *)v87 + 1);
        v63 = __OFSUB__(v88, v89);
        v90 = v88 - v89;
        if (v63)
          goto LABEL_148;
        v80 = v55 < v90;
        goto LABEL_101;
      }
    }
    else
    {
      if (v49 != 3)
      {
        v81 = *((_QWORD *)v10 + 4);
        v82 = *((_QWORD *)v10 + 5);
        v63 = __OFSUB__(v82, v81);
        v74 = v82 - v81;
        v75 = v63;
        goto LABEL_95;
      }
      v54 = *((_QWORD *)v10 + 4);
      v53 = *((_QWORD *)v10 + 5);
      v63 = __OFSUB__(v53, v54);
      v55 = v53 - v54;
      v56 = v63;
    }
    if ((v56 & 1) != 0)
      goto LABEL_141;
    v64 = v49 - 2;
    v70 = &v50[16 * v49 - 32];
    v72 = *(_QWORD *)v70;
    v71 = *((_QWORD *)v70 + 1);
    v73 = __OFSUB__(v71, v72);
    v74 = v71 - v72;
    v75 = v73;
    if (v73)
      goto LABEL_143;
    v76 = &v50[16 * v52];
    v78 = *(_QWORD *)v76;
    v77 = *((_QWORD *)v76 + 1);
    v63 = __OFSUB__(v77, v78);
    v79 = v77 - v78;
    if (v63)
      goto LABEL_145;
    if (__OFADD__(v74, v79))
      goto LABEL_147;
    if (v74 + v79 >= v55)
    {
      v80 = v55 < v79;
LABEL_101:
      if (v80)
        v52 = v64;
      goto LABEL_103;
    }
LABEL_95:
    if ((v75 & 1) != 0)
      goto LABEL_144;
    v83 = &v50[16 * v52];
    v85 = *(_QWORD *)v83;
    v84 = *((_QWORD *)v83 + 1);
    v63 = __OFSUB__(v84, v85);
    v86 = v84 - v85;
    if (v63)
      goto LABEL_146;
    if (v86 < v74)
      goto LABEL_112;
LABEL_103:
    v91 = v52 - 1;
    if (v52 - 1 >= v49)
    {
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
      goto LABEL_149;
    }
    if (!v9)
      goto LABEL_162;
    v92 = &v50[16 * v91];
    v93 = *(_QWORD *)v92;
    v94 = v50;
    v95 = &v50[16 * v52];
    v96 = *((_QWORD *)v95 + 1);
    sub_249787584((char *)(v9 + 32 * *(_QWORD *)v92), (char *)(v9 + 32 * *(_QWORD *)v95), v9 + 32 * v96, v112);
    if (v1)
      break;
    if (v96 < v93)
      goto LABEL_135;
    if (v52 > *((_QWORD *)v10 + 2))
      goto LABEL_136;
    *(_QWORD *)v92 = v93;
    *(_QWORD *)&v94[16 * v91 + 8] = v96;
    v97 = *((_QWORD *)v10 + 2);
    if (v52 >= v97)
      goto LABEL_137;
    v49 = v97 - 1;
    memmove(v95, v95 + 16, 16 * (v97 - 1 - v52));
    v50 = v94;
    *((_QWORD *)v10 + 2) = v97 - 1;
    v9 = v111;
    if (v97 <= 2)
      goto LABEL_112;
  }
LABEL_117:
  swift_bridgeObjectRelease();
  if (v110 < -1)
    goto LABEL_157;
  *(_QWORD *)(v109 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_2497862AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  double v14;
  double *v15;
  uint64_t v16;
  _BOOL4 v17;
  uint64_t v18;
  double *v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;

  v3 = a1[1];
  v4 = sub_249837534();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_249787238(0, v3, 1, a1);
      return;
    }
    goto LABEL_145;
  }
  v5 = v4;
  sub_24974CFD0(v3 / 2);
  v99 = a1;
  v100 = v6;
  v104 = v7;
  v102 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v41 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_111:
    if (v41 < 2)
    {
LABEL_122:
      swift_bridgeObjectRelease();
      if (v102 >= -1)
      {
        *(_QWORD *)(v100 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_151;
    }
    v92 = *v99;
    while (1)
    {
      v93 = v41 - 2;
      if (v41 < 2)
        break;
      if (!v92)
        goto LABEL_154;
      v94 = *(_QWORD *)&v10[16 * v93 + 32];
      v95 = *(_QWORD *)&v10[16 * v41 + 24];
      sub_249787750((char *)(v92 + 32 * v94), (char *)(v92 + 32 * *(_QWORD *)&v10[16 * v41 + 16]), v92 + 32 * v95, v104);
      if (v1)
        goto LABEL_107;
      if (v95 < v94)
        goto LABEL_140;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_24975DBE8();
      if (v93 >= *((_QWORD *)v10 + 2))
        goto LABEL_141;
      v96 = &v10[16 * v93 + 32];
      *(_QWORD *)v96 = v94;
      *((_QWORD *)v96 + 1) = v95;
      v97 = *((_QWORD *)v10 + 2);
      if (v41 > v97)
        goto LABEL_142;
      memmove(&v10[16 * v41 + 16], &v10[16 * v41 + 32], 16 * (v97 - v41));
      *((_QWORD *)v10 + 2) = v97 - 1;
      v41 = v97 - 1;
      if (v97 <= 2)
        goto LABEL_122;
    }
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v98 = *a1 - 32;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v11 = v3;
  v101 = v5;
  v103 = *a1;
  while (1)
  {
    v12 = v8++;
    if (v8 >= v11)
      goto LABEL_35;
    v13 = (double *)(v9 + 32 * v8);
    v14 = *v13;
    v15 = (double *)(v9 + 32 * v12);
    if (*v13 >= *v15)
    {
      if (v13[1] >= v13[3])
      {
        v16 = v12 + 2;
        if (v12 + 2 >= v11)
          goto LABEL_34;
        v17 = 0;
      }
      else
      {
        v17 = v15[1] >= v15[3];
        v16 = v12 + 2;
        if (v12 + 2 >= v11)
          goto LABEL_26;
      }
    }
    else
    {
      v16 = v12 + 2;
      if (v12 + 2 >= v11)
        goto LABEL_28;
      v17 = 1;
    }
    v18 = v11 <= v16 + 1 ? v16 + 1 : v11;
    v19 = (double *)(v9 + 32 * v16);
    do
    {
      v20 = v14;
      v14 = *v19;
      if (*v19 >= v20)
      {
        if (v19[1] >= v19[3])
        {
          if (v17)
            goto LABEL_27;
        }
        else if (((v17 ^ (*(double *)(v9 + 32 * v8 + 8) < *(double *)(v9 + 32 * v8 + 24))) & 1) == 0)
        {
          goto LABEL_26;
        }
      }
      else if (!v17)
      {
        goto LABEL_34;
      }
      v8 = v16;
      v19 += 4;
      ++v16;
    }
    while (v16 < v11);
    v16 = v18;
LABEL_26:
    v8 = v16;
    if (v17)
    {
LABEL_27:
      if (v16 < v12)
        goto LABEL_147;
LABEL_28:
      if (v12 < v16)
      {
        v21 = 32 * v16;
        v22 = 32 * v12;
        v23 = v16;
        v24 = v12;
        do
        {
          if (v24 != --v23)
          {
            if (!v9)
              goto LABEL_153;
            v25 = (_OWORD *)(v9 + v22);
            v26 = v9 + v21;
            v27 = *(_OWORD *)(v9 + v22);
            v28 = *(_OWORD *)(v9 + v22 + 16);
            v29 = *(_OWORD *)(v9 + v21 - 16);
            *v25 = *(_OWORD *)(v9 + v21 - 32);
            v25[1] = v29;
            *(_OWORD *)(v26 - 32) = v27;
            *(_OWORD *)(v26 - 16) = v28;
          }
          ++v24;
          v21 -= 32;
          v22 += 32;
        }
        while (v24 < v23);
      }
LABEL_34:
      v8 = v16;
    }
LABEL_35:
    if (v8 < v11)
    {
      if (__OFSUB__(v8, v12))
        goto LABEL_144;
      if (v8 - v12 < v5)
      {
        v30 = v12 + v5;
        if (__OFADD__(v12, v5))
          goto LABEL_148;
        if (v30 >= v11)
          v30 = v11;
        if (v30 < v12)
          goto LABEL_149;
        if (v8 != v30)
        {
          v31 = v98 + 32 * v8;
          do
          {
            v32 = *(double *)(v9 + 32 * v8);
            v33 = v12;
            v34 = v31;
            do
            {
              if (v32 >= *(double *)v34
                && (*(double *)(v34 + 40) >= *(double *)(v34 + 56) || *(double *)(v34 + 8) < *(double *)(v34 + 24)))
              {
                break;
              }
              if (!v9)
                goto LABEL_150;
              v36 = *(_QWORD *)(v34 + 56);
              v37 = *(_OWORD *)(v34 + 40);
              v38 = *(_OWORD *)(v34 + 16);
              *(_OWORD *)(v34 + 32) = *(_OWORD *)v34;
              *(_OWORD *)(v34 + 48) = v38;
              *(double *)v34 = v32;
              *(_OWORD *)(v34 + 8) = v37;
              *(_QWORD *)(v34 + 24) = v36;
              v34 -= 32;
              ++v33;
            }
            while (v8 != v33);
            ++v8;
            v31 += 32;
          }
          while (v8 != v30);
          v8 = v30;
        }
      }
    }
    if (v8 < v12)
      goto LABEL_143;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_24975DAF4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v40 = *((_QWORD *)v10 + 2);
    v39 = *((_QWORD *)v10 + 3);
    v41 = v40 + 1;
    v9 = v103;
    if (v40 >= v39 >> 1)
    {
      v91 = sub_24975DAF4((char *)(v39 > 1), v40 + 1, 1, v10);
      v9 = v103;
      v10 = v91;
    }
    *((_QWORD *)v10 + 2) = v41;
    v42 = v10 + 32;
    v43 = &v10[16 * v40 + 32];
    *(_QWORD *)v43 = v12;
    *((_QWORD *)v43 + 1) = v8;
    if (v40)
      break;
    v41 = 1;
LABEL_102:
    v5 = v101;
    v11 = v102;
    if (v8 >= v102)
      goto LABEL_111;
  }
  while (1)
  {
    v44 = v41 - 1;
    if (v41 >= 4)
    {
      v49 = &v42[16 * v41];
      v50 = *((_QWORD *)v49 - 8);
      v51 = *((_QWORD *)v49 - 7);
      v55 = __OFSUB__(v51, v50);
      v52 = v51 - v50;
      if (v55)
        goto LABEL_128;
      v54 = *((_QWORD *)v49 - 6);
      v53 = *((_QWORD *)v49 - 5);
      v55 = __OFSUB__(v53, v54);
      v47 = v53 - v54;
      v48 = v55;
      if (v55)
        goto LABEL_129;
      v56 = v41 - 2;
      v57 = &v42[16 * v41 - 32];
      v59 = *(_QWORD *)v57;
      v58 = *((_QWORD *)v57 + 1);
      v55 = __OFSUB__(v58, v59);
      v60 = v58 - v59;
      if (v55)
        goto LABEL_130;
      v55 = __OFADD__(v47, v60);
      v61 = v47 + v60;
      if (v55)
        goto LABEL_132;
      if (v61 >= v52)
      {
        v79 = &v42[16 * v44];
        v81 = *(_QWORD *)v79;
        v80 = *((_QWORD *)v79 + 1);
        v55 = __OFSUB__(v80, v81);
        v82 = v80 - v81;
        if (v55)
          goto LABEL_138;
        v72 = v47 < v82;
        goto LABEL_91;
      }
    }
    else
    {
      if (v41 != 3)
      {
        v73 = *((_QWORD *)v10 + 4);
        v74 = *((_QWORD *)v10 + 5);
        v55 = __OFSUB__(v74, v73);
        v66 = v74 - v73;
        v67 = v55;
        goto LABEL_85;
      }
      v46 = *((_QWORD *)v10 + 4);
      v45 = *((_QWORD *)v10 + 5);
      v55 = __OFSUB__(v45, v46);
      v47 = v45 - v46;
      v48 = v55;
    }
    if ((v48 & 1) != 0)
      goto LABEL_131;
    v56 = v41 - 2;
    v62 = &v42[16 * v41 - 32];
    v64 = *(_QWORD *)v62;
    v63 = *((_QWORD *)v62 + 1);
    v65 = __OFSUB__(v63, v64);
    v66 = v63 - v64;
    v67 = v65;
    if (v65)
      goto LABEL_133;
    v68 = &v42[16 * v44];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v55 = __OFSUB__(v69, v70);
    v71 = v69 - v70;
    if (v55)
      goto LABEL_135;
    if (__OFADD__(v66, v71))
      goto LABEL_137;
    if (v66 + v71 >= v47)
    {
      v72 = v47 < v71;
LABEL_91:
      if (v72)
        v44 = v56;
      goto LABEL_93;
    }
LABEL_85:
    if ((v67 & 1) != 0)
      goto LABEL_134;
    v75 = &v42[16 * v44];
    v77 = *(_QWORD *)v75;
    v76 = *((_QWORD *)v75 + 1);
    v55 = __OFSUB__(v76, v77);
    v78 = v76 - v77;
    if (v55)
      goto LABEL_136;
    if (v78 < v66)
      goto LABEL_102;
LABEL_93:
    v83 = v44 - 1;
    if (v44 - 1 >= v41)
    {
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
    if (!v9)
      goto LABEL_152;
    v84 = v10;
    v85 = &v42[16 * v83];
    v86 = *(_QWORD *)v85;
    v87 = v42;
    v88 = &v42[16 * v44];
    v89 = *((_QWORD *)v88 + 1);
    sub_249787750((char *)(v9 + 32 * *(_QWORD *)v85), (char *)(v9 + 32 * *(_QWORD *)v88), v9 + 32 * v89, v104);
    if (v1)
      break;
    if (v89 < v86)
      goto LABEL_125;
    if (v44 > *((_QWORD *)v84 + 2))
      goto LABEL_126;
    *(_QWORD *)v85 = v86;
    *(_QWORD *)&v87[16 * v83 + 8] = v89;
    v90 = *((_QWORD *)v84 + 2);
    if (v44 >= v90)
      goto LABEL_127;
    v10 = v84;
    v41 = v90 - 1;
    memmove(v88, v88 + 16, 16 * (v90 - 1 - v44));
    v42 = v87;
    *((_QWORD *)v84 + 2) = v90 - 1;
    v9 = v103;
    if (v90 <= 2)
      goto LABEL_102;
  }
LABEL_107:
  swift_bridgeObjectRelease();
  if (v102 < -1)
    goto LABEL_146;
  *(_QWORD *)(v100 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_249786974(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double *v12;
  double v13;
  double v14;
  double v15;
  double *v16;
  double v17;
  int v18;
  double v19;
  double v20;
  BOOL v23;
  BOOL v24;
  double v25;
  double v26;
  double v27;
  double *v28;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  double *v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  __int128 v52;
  double v53;
  double v54;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;

  v3 = a1[1];
  v4 = sub_249837534();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_2497872D0(0, v3, 1, a1);
      return;
    }
    goto LABEL_195;
  }
  v5 = v4;
  sub_24974CFD0(v3 / 2);
  v119 = a1;
  v120 = v6;
  v124 = v7;
  v122 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v61 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_161:
    v110 = v10;
    if (v61 < 2)
    {
LABEL_172:
      swift_bridgeObjectRelease();
      if (v122 >= -1)
      {
        *(_QWORD *)(v120 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_200;
    }
    v111 = *v119;
    while (1)
    {
      v112 = v61 - 2;
      if (v61 < 2)
        break;
      if (!v111)
        goto LABEL_204;
      v113 = v110;
      v114 = *(_QWORD *)&v110[16 * v112 + 32];
      v115 = *(_QWORD *)&v110[16 * v61 + 24];
      sub_249787914((char *)(v111 + 32 * v114), (char *)(v111 + 32 * *(_QWORD *)&v110[16 * v61 + 16]), v111 + 32 * v115, v124);
      if (v1)
        goto LABEL_157;
      if (v115 < v114)
        goto LABEL_190;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v113 = sub_24975DBE8();
      if (v112 >= *((_QWORD *)v113 + 2))
        goto LABEL_191;
      v116 = &v113[16 * v112 + 32];
      *(_QWORD *)v116 = v114;
      *((_QWORD *)v116 + 1) = v115;
      v117 = *((_QWORD *)v113 + 2);
      if (v61 > v117)
        goto LABEL_192;
      memmove(&v113[16 * v61 + 16], &v113[16 * v61 + 32], 16 * (v117 - v61));
      v110 = v113;
      *((_QWORD *)v113 + 2) = v117 - 1;
      v61 = v117 - 1;
      if (v117 <= 2)
        goto LABEL_172;
    }
LABEL_189:
    __break(1u);
LABEL_190:
    __break(1u);
LABEL_191:
    __break(1u);
LABEL_192:
    __break(1u);
LABEL_193:
    __break(1u);
LABEL_194:
    __break(1u);
LABEL_195:
    __break(1u);
    goto LABEL_196;
  }
  v8 = 0;
  v9 = *a1;
  v118 = *a1 - 32;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v121 = v5;
  v123 = v9;
  while (1)
  {
    v11 = v8++;
    if (v8 >= v3)
      goto LABEL_68;
    v12 = (double *)(v9 + 32 * v8);
    v13 = *v12;
    v14 = v12[1];
    v15 = v12[3];
    v16 = (double *)(v9 + 32 * v11);
    v17 = *v16;
    if (v13 >= *v16)
    {
      v19 = v16[1];
      v20 = v16[3];
      if (v14 < v15)
      {
        if (v19 >= v20)
          goto LABEL_29;
        if ((vabdd_f64(v13, v17) >= COERCE_DOUBLE(1) || v14 >= v19)
          && (vabdd_f64(v14, v19) >= COERCE_DOUBLE(1) || v15 >= v20))
        {
          goto LABEL_29;
        }
        goto LABEL_6;
      }
      if (v19 < v20
        || (vabdd_f64(v13, v17) < COERCE_DOUBLE(1) ? (v23 = v20 < v15) : (v23 = 0),
            !v23 && (vabdd_f64(v15, v20) < COERCE_DOUBLE(1) ? (v24 = v19 < v14) : (v24 = 0), !v24)))
      {
LABEL_29:
        v8 = v11 + 2;
        if (v11 + 2 >= v3)
          goto LABEL_68;
        v18 = 0;
        while (1)
        {
LABEL_31:
          v25 = v13;
          v26 = v14;
          v27 = v15;
          v28 = (double *)(v9 + 32 * v8);
          v13 = *v28;
          v14 = v28[1];
          v15 = v28[3];
          if (*v28 < v25)
          {
LABEL_32:
            if ((v18 & 1) == 0)
              goto LABEL_68;
            goto LABEL_33;
          }
          if (v14 < v15)
            break;
          if (v26 < v27)
            goto LABEL_47;
          if (vabdd_f64(v13, v25) < COERCE_DOUBLE(1) && v27 < v15)
            goto LABEL_32;
          if (vabdd_f64(v15, v27) < COERCE_DOUBLE(1) && v26 < v14)
          {
            if (!v18)
              goto LABEL_68;
LABEL_33:
            if (++v8 >= v3)
              goto LABEL_61;
          }
          else
          {
LABEL_47:
            if ((v18 & 1) != 0)
            {
LABEL_61:
              if (v8 >= v11)
                goto LABEL_62;
LABEL_196:
              __break(1u);
LABEL_197:
              __break(1u);
LABEL_198:
              __break(1u);
LABEL_199:
              __break(1u);
LABEL_200:
              __break(1u);
LABEL_201:
              __break(1u);
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
              return;
            }
            if (++v8 >= v3)
              goto LABEL_68;
          }
        }
        if (v26 < v27)
        {
          if (vabdd_f64(v13, v25) < COERCE_DOUBLE(1) && v14 < v26)
            goto LABEL_32;
          if (vabdd_f64(v14, v26) < COERCE_DOUBLE(1) && v15 < v27)
            goto LABEL_32;
        }
        goto LABEL_47;
      }
    }
LABEL_6:
    v8 = v11 + 2;
    if (v11 + 2 < v3)
    {
      v18 = 1;
      goto LABEL_31;
    }
LABEL_62:
    if (v11 < v8)
    {
      v33 = 32 * v8;
      v34 = 32 * v11;
      v35 = v8;
      v36 = v11;
      do
      {
        if (v36 != --v35)
        {
          if (!v9)
            goto LABEL_203;
          v37 = (_OWORD *)(v9 + v34);
          v38 = v9 + v33;
          v39 = *(_OWORD *)(v9 + v34);
          v40 = *(_OWORD *)(v9 + v34 + 16);
          v41 = *(_OWORD *)(v9 + v33 - 16);
          *v37 = *(_OWORD *)(v9 + v33 - 32);
          v37[1] = v41;
          *(_OWORD *)(v38 - 32) = v39;
          *(_OWORD *)(v38 - 16) = v40;
        }
        ++v36;
        v33 -= 32;
        v34 += 32;
      }
      while (v36 < v35);
    }
LABEL_68:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_194;
      if (v8 - v11 < v5)
      {
        v42 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_198;
        if (v42 >= v3)
          v42 = v3;
        if (v42 < v11)
          goto LABEL_199;
        if (v8 != v42)
        {
          v43 = v118 + 32 * v8;
          do
          {
            v44 = (double *)(v9 + 32 * v8);
            v45 = *v44;
            v46 = v44[1];
            v47 = v44[3];
            v48 = v11;
            v49 = v43;
            do
            {
              v50 = *(double *)v49;
              if (v45 >= *(double *)v49)
              {
                v53 = *(double *)(v49 + 8);
                v54 = *(double *)(v49 + 24);
                if (v46 >= v47)
                {
                  if (v53 < v54)
                    break;
                  if ((vabdd_f64(v45, v50) >= COERCE_DOUBLE(1) || v54 >= v47)
                    && (vabdd_f64(v47, v54) >= COERCE_DOUBLE(1) || v53 >= v46))
                  {
                    break;
                  }
                }
                else
                {
                  if (v53 >= v54)
                    break;
                  if ((vabdd_f64(v45, v50) >= COERCE_DOUBLE(1) || v46 >= v53)
                    && (vabdd_f64(v46, v53) >= COERCE_DOUBLE(1) || v47 >= v54))
                  {
                    break;
                  }
                }
              }
              if (!v9)
                goto LABEL_201;
              v51 = *(_QWORD *)(v49 + 48);
              v52 = *(_OWORD *)(v49 + 16);
              *(_OWORD *)(v49 + 32) = *(_OWORD *)v49;
              *(_OWORD *)(v49 + 48) = v52;
              *(double *)v49 = v45;
              *(double *)(v49 + 8) = v46;
              *(_QWORD *)(v49 + 16) = v51;
              *(double *)(v49 + 24) = v47;
              v49 -= 32;
              ++v48;
            }
            while (v8 != v48);
            ++v8;
            v43 += 32;
          }
          while (v8 != v42);
          v8 = v42;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_193;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_24975DAF4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v60 = *((_QWORD *)v10 + 2);
    v59 = *((_QWORD *)v10 + 3);
    v61 = v60 + 1;
    v9 = v123;
    if (v60 >= v59 >> 1)
    {
      v109 = sub_24975DAF4((char *)(v59 > 1), v60 + 1, 1, v10);
      v9 = v123;
      v10 = v109;
    }
    *((_QWORD *)v10 + 2) = v61;
    v62 = v10 + 32;
    v63 = &v10[16 * v60 + 32];
    *(_QWORD *)v63 = v11;
    *((_QWORD *)v63 + 1) = v8;
    if (v60)
      break;
    v61 = 1;
LABEL_152:
    v5 = v121;
    v3 = v122;
    if (v8 >= v122)
      goto LABEL_161;
  }
  while (1)
  {
    v64 = v61 - 1;
    if (v61 >= 4)
    {
      v69 = &v62[16 * v61];
      v70 = *((_QWORD *)v69 - 8);
      v71 = *((_QWORD *)v69 - 7);
      v75 = __OFSUB__(v71, v70);
      v72 = v71 - v70;
      if (v75)
        goto LABEL_178;
      v74 = *((_QWORD *)v69 - 6);
      v73 = *((_QWORD *)v69 - 5);
      v75 = __OFSUB__(v73, v74);
      v67 = v73 - v74;
      v68 = v75;
      if (v75)
        goto LABEL_179;
      v76 = v61 - 2;
      v77 = &v62[16 * v61 - 32];
      v79 = *(_QWORD *)v77;
      v78 = *((_QWORD *)v77 + 1);
      v75 = __OFSUB__(v78, v79);
      v80 = v78 - v79;
      if (v75)
        goto LABEL_180;
      v75 = __OFADD__(v67, v80);
      v81 = v67 + v80;
      if (v75)
        goto LABEL_182;
      if (v81 >= v72)
      {
        v99 = &v62[16 * v64];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v75 = __OFSUB__(v100, v101);
        v102 = v100 - v101;
        if (v75)
          goto LABEL_188;
        v92 = v67 < v102;
        goto LABEL_141;
      }
    }
    else
    {
      if (v61 != 3)
      {
        v93 = *((_QWORD *)v10 + 4);
        v94 = *((_QWORD *)v10 + 5);
        v75 = __OFSUB__(v94, v93);
        v86 = v94 - v93;
        v87 = v75;
        goto LABEL_135;
      }
      v66 = *((_QWORD *)v10 + 4);
      v65 = *((_QWORD *)v10 + 5);
      v75 = __OFSUB__(v65, v66);
      v67 = v65 - v66;
      v68 = v75;
    }
    if ((v68 & 1) != 0)
      goto LABEL_181;
    v76 = v61 - 2;
    v82 = &v62[16 * v61 - 32];
    v84 = *(_QWORD *)v82;
    v83 = *((_QWORD *)v82 + 1);
    v85 = __OFSUB__(v83, v84);
    v86 = v83 - v84;
    v87 = v85;
    if (v85)
      goto LABEL_183;
    v88 = &v62[16 * v64];
    v90 = *(_QWORD *)v88;
    v89 = *((_QWORD *)v88 + 1);
    v75 = __OFSUB__(v89, v90);
    v91 = v89 - v90;
    if (v75)
      goto LABEL_185;
    if (__OFADD__(v86, v91))
      goto LABEL_187;
    if (v86 + v91 >= v67)
    {
      v92 = v67 < v91;
LABEL_141:
      if (v92)
        v64 = v76;
      goto LABEL_143;
    }
LABEL_135:
    if ((v87 & 1) != 0)
      goto LABEL_184;
    v95 = &v62[16 * v64];
    v97 = *(_QWORD *)v95;
    v96 = *((_QWORD *)v95 + 1);
    v75 = __OFSUB__(v96, v97);
    v98 = v96 - v97;
    if (v75)
      goto LABEL_186;
    if (v98 < v86)
      goto LABEL_152;
LABEL_143:
    v103 = v64 - 1;
    if (v64 - 1 >= v61)
    {
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
      goto LABEL_189;
    }
    if (!v9)
      goto LABEL_202;
    v104 = &v62[16 * v103];
    v105 = *(_QWORD *)v104;
    v106 = &v62[16 * v64];
    v107 = *((_QWORD *)v106 + 1);
    sub_249787914((char *)(v9 + 32 * *(_QWORD *)v104), (char *)(v9 + 32 * *(_QWORD *)v106), v9 + 32 * v107, v124);
    if (v1)
      break;
    if (v107 < v105)
      goto LABEL_175;
    if (v64 > *((_QWORD *)v10 + 2))
      goto LABEL_176;
    *(_QWORD *)v104 = v105;
    *(_QWORD *)&v62[16 * v103 + 8] = v107;
    v108 = *((_QWORD *)v10 + 2);
    if (v64 >= v108)
      goto LABEL_177;
    v61 = v108 - 1;
    memmove(&v62[16 * v64], v106 + 16, 16 * (v108 - 1 - v64));
    *((_QWORD *)v10 + 2) = v108 - 1;
    v9 = v123;
    if (v108 <= 2)
      goto LABEL_152;
  }
LABEL_157:
  swift_bridgeObjectRelease();
  if (v122 < -1)
    goto LABEL_197;
  *(_QWORD *)(v120 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_249787114(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  double *v7;
  uint64_t v8;
  double v10;
  __int128 v11;
  __int128 v12;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 32 * a3;
    while (2)
    {
      v6 = *(double *)(v4 + 32 * a3 + 8);
      v7 = (double *)v5;
      v8 = result;
      do
      {
        if (v6 >= *(v7 - 3) && (*v7 >= v7[2] || *(v7 - 4) < *(v7 - 2)))
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v10 = *v7;
        v11 = *((_OWORD *)v7 + 1);
        v12 = *((_OWORD *)v7 - 1);
        *(_OWORD *)v7 = *((_OWORD *)v7 - 2);
        *((_OWORD *)v7 + 1) = v12;
        *(v7 - 3) = v6;
        *((_OWORD *)v7 - 1) = v11;
        *(v7 - 4) = v10;
        v7 -= 4;
        ++v8;
      }
      while (a3 != v8);
      ++a3;
      v5 += 32;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_2497871A4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v11;
  uint64_t v12;
  char v13;
  __int128 v14;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 32 * a3;
    while (2)
    {
      v6 = v5;
      v7 = result;
      do
      {
        v8 = *(double *)(v6 + 8);
        v9 = *(double *)(v6 - 24);
        if (v8 >= v9 && (vabdd_f64(v8, v9) >= COERCE_DOUBLE(1) || *(double *)v6 >= *(double *)(v6 - 32)))
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v11 = *(double *)v6;
        v12 = *(_QWORD *)(v6 + 16);
        v13 = *(_BYTE *)(v6 + 24);
        v14 = *(_OWORD *)(v6 - 16);
        *(_OWORD *)v6 = *(_OWORD *)(v6 - 32);
        *(_OWORD *)(v6 + 16) = v14;
        *(double *)(v6 - 24) = v8;
        *(_QWORD *)(v6 - 16) = v12;
        *(_BYTE *)(v6 - 8) = v13;
        *(double *)(v6 - 32) = v11;
        v6 -= 32;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 32;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_249787238(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 32 * a3 - 32;
    while (2)
    {
      v6 = *(double *)(v4 + 32 * a3);
      v7 = result;
      v8 = v5;
      do
      {
        if (v6 >= *(double *)v8
          && (*(double *)(v8 + 40) >= *(double *)(v8 + 56) || *(double *)(v8 + 8) < *(double *)(v8 + 24)))
        {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v10 = *(_QWORD *)(v8 + 56);
        v11 = *(_OWORD *)(v8 + 40);
        v12 = *(_OWORD *)(v8 + 16);
        *(_OWORD *)(v8 + 32) = *(_OWORD *)v8;
        *(_OWORD *)(v8 + 48) = v12;
        *(double *)v8 = v6;
        *(_OWORD *)(v8 + 8) = v11;
        *(_QWORD *)(v8 + 24) = v10;
        v8 -= 32;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 32;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_2497872D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  double *v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  __int128 v14;
  double v15;
  double v16;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 32 * a3 - 32;
    while (2)
    {
      v6 = (double *)(v4 + 32 * a3);
      v7 = *v6;
      v8 = v6[1];
      v9 = v6[3];
      v10 = result;
      v11 = v5;
      do
      {
        v12 = *(double *)v11;
        if (v7 >= *(double *)v11)
        {
          v15 = *(double *)(v11 + 8);
          v16 = *(double *)(v11 + 24);
          if (v8 >= v9)
          {
            if (v15 < v16)
              break;
            if ((vabdd_f64(v7, v12) >= COERCE_DOUBLE(1) || v16 >= v9)
              && (vabdd_f64(v9, v16) >= COERCE_DOUBLE(1) || v15 >= v8))
            {
              break;
            }
          }
          else
          {
            if (v15 >= v16)
              break;
            if ((vabdd_f64(v7, v12) >= COERCE_DOUBLE(1) || v8 >= v15)
              && (vabdd_f64(v8, v15) >= COERCE_DOUBLE(1) || v9 >= v16))
            {
              break;
            }
          }
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v13 = *(_QWORD *)(v11 + 48);
        v14 = *(_OWORD *)(v11 + 16);
        *(_OWORD *)(v11 + 32) = *(_OWORD *)v11;
        *(_OWORD *)(v11 + 48) = v14;
        *(double *)v11 = v7;
        *(double *)(v11 + 8) = v8;
        *(_QWORD *)(v11 + 16) = v13;
        *(double *)(v11 + 24) = v9;
        v11 -= 32;
        ++v10;
      }
      while (a3 != v10);
      ++a3;
      v5 += 32;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_2497873C4(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  BOOL v14;
  char *v15;
  __int128 v18;
  char *v20;
  char *v21;
  BOOL v22;
  char *v23;
  BOOL v24;
  BOOL v25;
  __int128 v26;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 32;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 32;
  if (v9 >= v11)
  {
    sub_2497AC0F8(a2, (uint64_t)(a3 - (_QWORD)a2) / 32, a4);
    v12 = (unint64_t)&v4[32 * v11];
    if (v7 >= v6 || v10 < 32)
      goto LABEL_51;
    v20 = (char *)(a3 - 32);
    while (1)
    {
      v21 = v20 + 32;
      if (*(double *)(v12 - 24) >= *((double *)v6 - 3)
        && (*(double *)(v12 - 32) < *(double *)(v12 - 16)
          ? (v22 = *((double *)v6 - 4) < *((double *)v6 - 2))
          : (v22 = 1),
            v22))
      {
        v23 = (char *)(v12 - 32);
        v24 = v21 != (char *)v12 || (unint64_t)v20 >= v12;
        v12 -= 32;
        if (!v24)
          goto LABEL_47;
      }
      else
      {
        v23 = v6 - 32;
        v25 = v21 != v6 || v20 >= v6;
        v6 -= 32;
        if (!v25)
          goto LABEL_47;
      }
      v26 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v23;
      *((_OWORD *)v20 + 1) = v26;
LABEL_47:
      v20 -= 32;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_51;
    }
  }
  sub_2497AC0F8(a1, (a2 - a1) / 32, a4);
  v12 = (unint64_t)&v4[32 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    do
    {
      if (*((double *)v6 + 1) >= *((double *)v4 + 1)
        && (*(double *)v6 < *((double *)v6 + 2) ? (v13 = *(double *)v4 < *((double *)v4 + 2)) : (v13 = 1), v13))
      {
        v14 = v7 == v4;
        v15 = v4;
        v4 += 32;
        if (v14 && v7 < v4)
          goto LABEL_21;
      }
      else
      {
        v14 = v7 == v6;
        v15 = v6;
        v6 += 32;
        if (v14 && v7 < v6)
          goto LABEL_21;
      }
      v18 = *((_OWORD *)v15 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v15;
      *((_OWORD *)v7 + 1) = v18;
LABEL_21:
      v7 += 32;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_51:
  sub_2497AC0F8(v4, (uint64_t)(v12 - (_QWORD)v4) / 32, v6);
  return 1;
}

uint64_t sub_249787584(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  double v14;
  BOOL v15;
  BOOL v16;
  char *v17;
  __int128 v20;
  char *v22;
  char *v23;
  double v24;
  char *v25;
  double v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  __int128 v30;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 32;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 32;
  if (v9 >= v11)
  {
    sub_2497AC0F8(a2, (uint64_t)(a3 - (_QWORD)a2) / 32, a4);
    v12 = (unint64_t)&v4[32 * v11];
    if (v7 >= v6 || v10 < 32)
      goto LABEL_49;
    v22 = (char *)(a3 - 32);
    while (1)
    {
      v23 = v22 + 32;
      v24 = *(double *)(v12 - 24);
      v25 = v6 - 32;
      v26 = *((double *)v6 - 3);
      if (v24 < v26
        || (vabdd_f64(v24, v26) < COERCE_DOUBLE(1) ? (v27 = *(double *)(v12 - 32) < *(double *)v25) : (v27 = 0), v27))
      {
        v29 = v23 != v6 || v22 >= v6;
        v6 -= 32;
        if (!v29)
          goto LABEL_45;
      }
      else
      {
        v28 = v23 != (char *)v12 || (unint64_t)v22 >= v12;
        v25 = (char *)(v12 - 32);
        v12 -= 32;
        if (!v28)
          goto LABEL_45;
      }
      v30 = *((_OWORD *)v25 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v25;
      *((_OWORD *)v22 + 1) = v30;
LABEL_45:
      v22 -= 32;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_49;
    }
  }
  sub_2497AC0F8(a1, (a2 - a1) / 32, a4);
  v12 = (unint64_t)&v4[32 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    do
    {
      v13 = *((double *)v6 + 1);
      v14 = *((double *)v4 + 1);
      if (v13 < v14
        || (vabdd_f64(v13, v14) < COERCE_DOUBLE(1) ? (v15 = *(double *)v6 < *(double *)v4) : (v15 = 0), v15))
      {
        v16 = v7 == v6;
        v17 = v6;
        v6 += 32;
        if (v16 && v7 < v6)
          goto LABEL_20;
      }
      else
      {
        v16 = v7 == v4;
        v17 = v4;
        v4 += 32;
        if (v16 && v7 < v4)
          goto LABEL_20;
      }
      v20 = *((_OWORD *)v17 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v17;
      *((_OWORD *)v7 + 1) = v20;
LABEL_20:
      v7 += 32;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_49:
  sub_2497AC0F8(v4, (uint64_t)(v12 - (_QWORD)v4) / 32, v6);
  return 1;
}

uint64_t sub_249787750(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v14;
  BOOL v15;
  __int128 v16;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  __int128 v24;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 32;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 32;
  if (v9 >= v11)
  {
    sub_2497AC0F8(a2, (uint64_t)(a3 - (_QWORD)a2) / 32, a4);
    v12 = (unint64_t)&v4[32 * v11];
    if (v7 >= v6 || v10 < 32)
      goto LABEL_45;
    v18 = (char *)(a3 - 32);
    while (1)
    {
      v19 = v18 + 32;
      v20 = v6 - 32;
      if (*(double *)(v12 - 32) >= *((double *)v6 - 4)
        && (*(double *)(v12 - 24) < *(double *)(v12 - 8) ? (v21 = *((double *)v6 - 3) < *((double *)v6 - 1)) : (v21 = 1),
            v21))
      {
        v22 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v20 = (char *)(v12 - 32);
        v12 -= 32;
        if (!v22)
          goto LABEL_41;
      }
      else
      {
        v23 = v19 != v6 || v18 >= v6;
        v6 -= 32;
        if (!v23)
          goto LABEL_41;
      }
      v24 = *((_OWORD *)v20 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v20;
      *((_OWORD *)v18 + 1) = v24;
LABEL_41:
      v18 -= 32;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_45;
    }
  }
  sub_2497AC0F8(a1, (a2 - a1) / 32, a4);
  v12 = (unint64_t)&v4[32 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    while (*(double *)v6 < *(double *)v4
         || *((double *)v6 + 1) < *((double *)v6 + 3) && *((double *)v4 + 1) >= *((double *)v4 + 3))
    {
      v14 = v6;
      v15 = v7 == v6;
      v6 += 32;
      if (!v15)
        goto LABEL_14;
LABEL_15:
      v7 += 32;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_20;
    }
    v14 = v4;
    v15 = v7 == v4;
    v4 += 32;
    if (v15)
      goto LABEL_15;
LABEL_14:
    v16 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v7 = *(_OWORD *)v14;
    *((_OWORD *)v7 + 1) = v16;
    goto LABEL_15;
  }
LABEL_20:
  v6 = v7;
LABEL_45:
  sub_2497AC0F8(v4, (uint64_t)(v12 - (_QWORD)v4) / 32, v6);
  return 1;
}

uint64_t sub_249787914(char *a1, char *a2, unint64_t a3, char *a4)
{
  double *v4;
  double *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  double v14;
  double *v15;
  BOOL v16;
  __int128 v17;
  double v19;
  double v20;
  double v21;
  double v22;
  BOOL v25;
  BOOL v26;
  double *v27;
  double *v28;
  double v29;
  double *v30;
  double v31;
  BOOL v32;
  __int128 v33;
  double v35;
  double v36;
  double v37;
  double v38;
  BOOL v41;

  v4 = (double *)a4;
  v6 = (double *)a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 32;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 32;
  if (v9 >= v11)
  {
    sub_2497AC0F8(a2, (uint64_t)(a3 - (_QWORD)a2) / 32, a4);
    v12 = (unint64_t)&v4[4 * v11];
    if (v7 >= (char *)v6 || v10 < 32)
      goto LABEL_79;
    v27 = (double *)(a3 - 32);
    while (1)
    {
      v28 = v27 + 4;
      v29 = *(double *)(v12 - 32);
      v30 = v6 - 4;
      v31 = *(v6 - 4);
      if (v29 < v31)
        break;
      v35 = *(double *)(v12 - 24);
      v36 = *(double *)(v12 - 8);
      v37 = *(v6 - 3);
      v38 = *(v6 - 1);
      if (v35 >= v36)
      {
        if (v37 >= v38)
        {
          if (vabdd_f64(v29, v31) < COERCE_DOUBLE(1) && v38 < v36)
            break;
          if (vabdd_f64(v36, v38) < COERCE_DOUBLE(1) && v37 < v35)
            break;
        }
      }
      else if (v37 < v38)
      {
        if (vabdd_f64(v29, v31) < COERCE_DOUBLE(1) && v35 < v37)
          break;
        if (vabdd_f64(v35, v37) < COERCE_DOUBLE(1) && v36 < v38)
          break;
      }
      v41 = v28 != (double *)v12 || (unint64_t)v27 >= v12;
      v30 = (double *)(v12 - 32);
      v12 -= 32;
      if (!v41)
        goto LABEL_47;
LABEL_46:
      v33 = *((_OWORD *)v30 + 1);
      *(_OWORD *)v27 = *(_OWORD *)v30;
      *((_OWORD *)v27 + 1) = v33;
LABEL_47:
      v27 -= 4;
      if (v6 <= (double *)v7 || v12 <= (unint64_t)v4)
        goto LABEL_79;
    }
    v32 = v28 != v6 || v27 >= v6;
    v6 -= 4;
    if (!v32)
      goto LABEL_47;
    goto LABEL_46;
  }
  sub_2497AC0F8(a1, (a2 - a1) / 32, a4);
  v12 = (unint64_t)&v4[4 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    do
    {
      v13 = *v6;
      v14 = *v4;
      if (*v6 >= *v4)
      {
        v19 = v6[1];
        v20 = v6[3];
        v21 = v4[1];
        v22 = v4[3];
        if (v19 >= v20)
        {
          if (v21 < v22
            || (vabdd_f64(v13, v14) < COERCE_DOUBLE(1) ? (v25 = v22 < v20) : (v25 = 0),
                !v25 && (vabdd_f64(v20, v22) < COERCE_DOUBLE(1) ? (v26 = v21 < v19) : (v26 = 0), !v26)))
          {
LABEL_25:
            v15 = v4;
            v16 = v7 == (char *)v4;
            v4 += 4;
            if (v16)
              goto LABEL_7;
LABEL_6:
            v17 = *((_OWORD *)v15 + 1);
            *(_OWORD *)v7 = *(_OWORD *)v15;
            *((_OWORD *)v7 + 1) = v17;
            goto LABEL_7;
          }
        }
        else
        {
          if (v21 >= v22)
            goto LABEL_25;
          if ((vabdd_f64(v13, v14) >= COERCE_DOUBLE(1) || v19 >= v21)
            && (vabdd_f64(v19, v21) >= COERCE_DOUBLE(1) || v20 >= v22))
          {
            goto LABEL_25;
          }
        }
      }
      v15 = v6;
      v16 = v7 == (char *)v6;
      v6 += 4;
      if (!v16)
        goto LABEL_6;
LABEL_7:
      v7 += 32;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = (double *)v7;
LABEL_79:
  sub_2497AC0F8((char *)v4, (uint64_t)(v12 - (_QWORD)v4) / 32, (char *)v6);
  return 1;
}

void sub_249787BAC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v9 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (!v8)
      goto LABEL_14;
  }
  else
  {
    sub_249752D34();
    v4 = v10;
    if (!v8)
    {
LABEL_14:
      *v2 = v4;
      return;
    }
  }
  v11 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v11, a2))
    goto LABEL_20;
  sub_2497AC0F8((char *)(v4 + 32 + 32 * a2), v11 - a2, (char *)(v4 + 32 + 32 * a1));
  v12 = *(_QWORD *)(v4 + 16);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *(_QWORD *)(v4 + 16) = v14;
    goto LABEL_14;
  }
LABEL_21:
  __break(1u);
}

ValueMetadata *type metadata accessor for RectHull.Vertical()
{
  return &type metadata for RectHull.Vertical;
}

ValueMetadata *type metadata accessor for RectHull()
{
  return &type metadata for RectHull;
}

void OUTLINED_FUNCTION_0_15()
{
  sub_249752D6C();
}

double OUTLINED_FUNCTION_1_14()
{
  double v0;

  return v0;
}

void OUTLINED_FUNCTION_2_15()
{
  sub_249752D6C();
}

void OUTLINED_FUNCTION_4_14(unint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  sub_249752E40(a1 > 1, v2, 1, v1);
}

void OUTLINED_FUNCTION_5_9()
{
  sub_249752D34();
}

uint64_t OUTLINED_FUNCTION_6_5()
{
  return 0;
}

double OUTLINED_FUNCTION_7_10()
{
  CGFloat v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGRect v5;

  v5.origin.x = v0;
  v5.origin.y = v1;
  v5.size.width = v2;
  v5.size.height = v3;
  return CGRectGetMaxX(v5);
}

double OUTLINED_FUNCTION_8_9()
{
  CGFloat v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGRect v5;

  v5.origin.x = v0;
  v5.origin.y = v1;
  v5.size.width = v2;
  v5.size.height = v3;
  return CGRectGetMaxY(v5);
}

double OUTLINED_FUNCTION_9_8()
{
  CGFloat v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGRect v5;

  v5.origin.x = v0;
  v5.origin.y = v1;
  v5.size.width = v2;
  v5.size.height = v3;
  return CGRectGetMinY(v5);
}

double OUTLINED_FUNCTION_10_5()
{
  CGFloat v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGRect v5;

  v5.origin.x = v0;
  v5.origin.y = v1;
  v5.size.width = v2;
  v5.size.height = v3;
  return CGRectGetMinX(v5);
}

void OUTLINED_FUNCTION_11_6()
{
  sub_249752D88();
}

void OUTLINED_FUNCTION_12_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  *(_QWORD *)(v0 + 16) = v1;
  v9 = (_QWORD *)(v0 + (v2 << 6));
  v9[4] = v3;
  v9[5] = v4;
  v9[6] = v5;
  v9[7] = v6;
  v9[8] = v7;
  v9[9] = v8;
}

double OUTLINED_FUNCTION_16_5@<D0>(double *a1@<X8>)
{
  return *a1 - *(a1 - 2);
}

uint64_t sub_249787DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t result;
  uint64_t v12;

  sub_249788CE0(a1, a6);
  result = type metadata accessor for SignpostInterval();
  v12 = a6 + *(int *)(result + 20);
  *(_QWORD *)v12 = a2;
  *(_QWORD *)(v12 + 8) = a3;
  *(_BYTE *)(v12 + 16) = a4;
  *(_BYTE *)(v12 + 17) = HIBYTE(a4) & 1;
  *(_QWORD *)(a6 + *(int *)(result + 24)) = a5;
  return result;
}

uint64_t sub_249787E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t (*a5)(char *, uint64_t, uint64_t, uint64_t, char *)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t, uint64_t, char *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;

  v37 = a6;
  v38 = a5;
  v36 = a4;
  v34 = a3;
  v33 = a2;
  v39 = a7;
  v35 = sub_249836AA8();
  v8 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_249836ACC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v31 - v19;
  v21 = type metadata accessor for SignpostInterval();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v20, a1, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  v40 = 0;
  v41 = 0;
  v42 = 256;
  sub_249787DC4((uint64_t)v20, 0, 0, 256, 0, (uint64_t)v23);
  sub_249788118((uint64_t)v23, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11) == 1)
  {
    sub_249788160((uint64_t)v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v18, v11);
    v24 = &v23[*(int *)(v21 + 20)];
    v32 = v21;
    v25 = v8;
    v26 = v33;
    *(_QWORD *)v24 = v33;
    v27 = v34;
    *((_QWORD *)v24 + 1) = v34;
    v28 = v36;
    *((_WORD *)v24 + 8) = v36;
    sub_249836AB4();
    v29 = v38(v14, v26, v27, v28, v10);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v35);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    *(_QWORD *)&v23[*(int *)(v32 + 24)] = v29;
    swift_release();
  }
  sub_2497881A0((uint64_t)v23, v39);
  return sub_2497881E4((uint64_t)v23);
}

uint64_t type metadata accessor for SignpostInterval()
{
  uint64_t result;

  result = qword_257881308;
  if (!qword_257881308)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_249788118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249788160(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2497881A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SignpostInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2497881E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SignpostInterval();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249788220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  const char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_249836ACC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249788118(v0, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_249788160((uint64_t)v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  result = type metadata accessor for SignpostInterval();
  v9 = v0 + *(int *)(result + 20);
  v10 = *(const char **)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_BYTE *)(v9 + 16);
  if ((*(_BYTE *)(v9 + 17) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + *(int *)(result + 24));
    result = swift_retain();
    if (v13)
    {
      sub_2497883D4((uint64_t)v7, v10, v11, v12);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2497883D4(uint64_t a1, const char *a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  uint64_t result;
  const char *v15;
  const char *v16;
  uint8_t *v17;
  os_signpost_id_t v18;
  uint64_t v19;
  int v20;
  const char *v21;
  char v22;

  v21 = a2;
  v5 = sub_249836AD8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_249836AA8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_249836AC0();
  sub_249836AE4();
  v20 = sub_249837024();
  result = sub_24983709C();
  if ((result & 1) == 0)
  {
LABEL_13:

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v19 = v10;
  if ((a4 & 1) == 0)
  {
    v15 = v21;
    if (v21)
    {
LABEL_9:
      swift_retain();
      sub_249836AF0();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == *MEMORY[0x24BEE7810])
      {
        v16 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v16 = "";
      }
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      v18 = sub_249836A9C();
      _os_signpost_emit_with_name_impl(&dword_249741000, v13, (os_signpost_type_t)v20, v18, v15, v16, v17, 2u);
      MEMORY[0x24BCF906C](v17, -1, -1);
      v10 = v19;
      goto LABEL_13;
    }
    __break(1u);
  }
  if ((unint64_t)v21 >> 32)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v21 >> 11 != 27)
  {
    if (v21 >> 16 <= 0x10)
    {
      v15 = &v22;
      goto LABEL_9;
    }
    goto LABEL_15;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t *sub_2497885D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_249836ACC();
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v10 = *(int *)(a3 + 20);
    v11 = *(int *)(a3 + 24);
    v12 = (char *)a1 + v10;
    v13 = (char *)a2 + v10;
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *((_WORD *)v12 + 8) = *((_WORD *)v13 + 8);
    *(uint64_t *)((char *)a1 + v11) = *(uint64_t *)((char *)a2 + v11);
  }
  swift_retain();
  return a1;
}

uint64_t sub_2497886C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_249836ACC();
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

char *sub_249788728(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = sub_249836ACC();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  swift_retain();
  return a1;
}

char *sub_2497887F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;

  v6 = sub_249836ACC();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_OWORD *)v13;
  *((_WORD *)v12 + 8) = *((_WORD *)v13 + 8);
  *(_OWORD *)v12 = v14;
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_249788918(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = sub_249836ACC();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v8 = *(int *)(a3 + 20);
  v9 = *(int *)(a3 + 24);
  v10 = &a1[v8];
  v11 = &a2[v8];
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_WORD *)v10 + 8) = *((_WORD *)v11 + 8);
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  return a1;
}

char *sub_2497889DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = sub_249836ACC();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = *(int *)(a3 + 24);
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_WORD *)v13 + 8) = *((_WORD *)v14 + 8);
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  swift_release();
  return a1;
}

uint64_t sub_249788AF8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_249788B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t sub_249788B8C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_249788B98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

void sub_249788C10()
{
  unint64_t v0;

  sub_249788C8C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_249788C8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257881318[0])
  {
    sub_249836ACC();
    v0 = sub_2498370A8();
    if (!v1)
      atomic_store(v0, qword_257881318);
  }
}

uint64_t sub_249788CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2578812A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249788D28()
{
  OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_44_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257881498);
  sub_249836CB8();
  swift_endAccess();
  sub_249779E98();
  os_unfair_recursive_lock_unlock();
  return swift_release();
}

uint64_t sub_249788DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249788DF8(a1, a2, a3, a4, &qword_257880E20);
}

uint64_t sub_249788DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249788DF8(a1, a2, a3, a4, &qword_2578806B0);
}

uint64_t sub_249788DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_44_0();
  v7 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2497A080C(v7, &v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_24976D1D4(0, a5);
    if (swift_dynamicCast())
      v8 = v12;
    else
      v8 = 0;
  }
  else
  {
    sub_24978917C((uint64_t)&v10);
    v8 = 0;
  }
  os_unfair_recursive_lock_unlock();
  swift_bridgeObjectRelease();
  swift_release();
  return v8;
}

uint64_t sub_249788F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249788DF8(a1, a2, a3, a4, &qword_2578805D8);
}

uint64_t sub_249788F30(uint64_t a1, void *a2)
{
  id v3;
  void (*v4)(id *, _QWORD);
  unsigned __int8 *v5;
  int v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v11[4];
  id v12;

  OUTLINED_FUNCTION_0_16();
  v12 = a2;
  v3 = a2;
  v4 = (void (*)(id *, _QWORD))swift_readAtKeyPath();
  v6 = *v5;
  v4(v11, 0);

  if (v6 == 2)
  {
    sub_24976DB28();
    v11[0] = v7;
    swift_getAtKeyPath();
    swift_unknownObjectRelease();
    v11[0] = v3;
    v8 = v3;
    swift_setAtReferenceWritableKeyPath();

    v9 = v12;
  }
  else
  {
    v9 = v6 & 1;
  }
  os_unfair_recursive_lock_unlock();
  swift_release();
  swift_release();

  return v9;
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

uint64_t sub_249789058(uint64_t a1, char *a2)
{
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 16));
  v4 = &a2[OBJC_IVAR____TtCV16UniversalControl11PreferencesP33_E97794F8E31B248CD291BA178D3BF85D8KVOProxy_subjects];
  OUTLINED_FUNCTION_44_0();
  v5 = *(_QWORD *)v4;
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    v6 = sub_2497F2594();
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
      swift_retain();
    }
    else
    {
      v8 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 16));
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_249789130()
{
  uint64_t v0;

  MEMORY[0x24BCF906C](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnfairRecursiveLock()
{
  return objc_opt_self();
}

uint64_t sub_24978917C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881490);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  return os_unfair_recursive_lock_lock_with_options();
}

BOOL static UniversalControlEdge.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t UniversalControlEdge.inverted.getter(char a1)
{
  return 0x1000302u >> (8 * a1);
}

uint64_t UniversalControlEdge.intValue.getter(uint64_t result)
{
  return result;
}

void *static UniversalControlEdge.allCases.getter()
{
  return &unk_251AB0778;
}

uint64_t UniversalControlEdge.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_249789230
                                                            + 4 * asc_24983ACB0[a1]))(7368564, 0xE300000000000000);
}

uint64_t sub_249789230()
{
  return 1952867692;
}

uint64_t sub_249789240()
{
  return 0x6D6F74746F62;
}

uint64_t sub_249789254()
{
  return 0x7468676972;
}

void sub_249789268(_QWORD *a1@<X8>)
{
  *a1 = &unk_251AB0778;
}

UniversalControl::UniversalControlEdge_optional __swiftcall UniversalControlEdge.init(stringValue:)(Swift::String stringValue)
{
  UniversalControl::UniversalControlEdge_optional v1;

  v1.value = sub_2497892A8(stringValue._countAndFlagsBits, (uint64_t)stringValue._object);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2497892A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5;
  BOOL v6;
  BOOL v8;

  if (a1 == 7368564 && a2 == 0xE300000000000000)
    return 0;
  v5 = 0;
  if ((sub_2498375C4() & 1) == 0)
  {
    v6 = a1 == 1952867692 && a2 == 0xE400000000000000;
    if (v6 || (sub_2498375C4() & 1) != 0)
    {
      return 1;
    }
    else
    {
      v8 = a1 == 0x6D6F74746F62 && a2 == 0xE600000000000000;
      if (v8 || (sub_2498375C4() & 1) != 0)
      {
        return 2;
      }
      else
      {
        v5 = 3;
        if (a1 != 0x7468676972 || a2 != 0xE500000000000000)
        {
          if ((sub_2498375C4() & 1) != 0)
            return 3;
          else
            return 4;
        }
      }
    }
  }
  return v5;
}

void UniversalControlEdge.encode(to:)(_QWORD *a1, char a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249837738();
  __asm { BR              X10 }
}

uint64_t sub_249789450()
{
  uint64_t v0;
  uint64_t v2[13];

  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_2498375F4();
  v0 = swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_5_3(v0);
}

uint64_t UniversalControlEdge.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_7_4();
  sub_249837714();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    OUTLINED_FUNCTION_7_4();
    v4 = sub_2498375D0();
    v1 = sub_2497892A8(v4, v5);
    v6 = swift_bridgeObjectRelease();
    if (v1 != 4)
    {
      OUTLINED_FUNCTION_5_3(v6);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
      return v1;
    }
    sub_2498371BC();
    swift_allocError();
    sub_24983718C();
    v7 = swift_willThrow();
    OUTLINED_FUNCTION_5_3(v7);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v1;
}

uint64_t sub_2497895EC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = UniversalControlEdge.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_249789614(_QWORD *a1)
{
  char *v1;

  UniversalControlEdge.encode(to:)(a1, *v1);
}

uint64_t sub_24978962C()
{
  unsigned __int8 *v0;

  return UniversalControlEdge.description.getter(*v0);
}

BOOL sub_249789634(char *a1, char *a2)
{
  return static UniversalControlEdge.== infix(_:_:)(*a1, *a2);
}

uint64_t UniversalControlEdge.hash(into:)()
{
  return sub_2498376A8();
}

void UniversalControlEdge.hashValue.getter()
{
  sub_249837690();
  sub_2498376A8();
  sub_2498376E4();
  OUTLINED_FUNCTION_2_5();
}

void sub_2497896A0()
{
  UniversalControlEdge.hashValue.getter();
}

uint64_t sub_2497896A8()
{
  return UniversalControlEdge.hash(into:)();
}

void sub_2497896B0()
{
  sub_249837690();
  sub_2498376A8();
  sub_2498376E4();
  OUTLINED_FUNCTION_2_5();
}

UniversalControl::UniversalControlEdge_optional __swiftcall UniversalControlEdge.init(intValue:)(Swift::Int intValue)
{
  if ((unint64_t)intValue >= 4)
    LOBYTE(intValue) = 4;
  return (UniversalControl::UniversalControlEdge_optional)intValue;
}

double UniversalControlEdge.normalUnitVector.getter(char a1)
{
  return dbl_24983ADF8[a1];
}

unint64_t sub_24978971C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2578814A0;
  if (!qword_2578814A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2578814A8);
    result = MEMORY[0x24BCF8F94](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2578814A0);
  }
  return result;
}

unint64_t sub_249789764()
{
  unint64_t result;

  result = qword_2578814B0;
  if (!qword_2578814B0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlEdge, &type metadata for UniversalControlEdge);
    atomic_store(result, (unint64_t *)&qword_2578814B0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UniversalControlEdge(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2497897EC + 4 * byte_24983ACBD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_249789820 + 4 * byte_24983ACB8[v4]))();
}

uint64_t sub_249789820(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249789828(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249789830);
  return result;
}

uint64_t sub_24978983C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x249789844);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_249789848(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249789850(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlEdge()
{
  return &type metadata for UniversalControlEdge;
}

uint64_t UniversalControlLink.normalized()@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t v6;
  __int128 v7;
  uint64_t v8;
  unsigned int v9;
  int8x16_t v10;
  uint64x2_t v11;
  int8x16_t v12;
  unint64_t v13;
  uint64x2_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  int64x2_t v25;
  uint64_t v26;
  int64x2_t v27;
  char v28;
  uint64_t result;
  __int16 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;
  signed __int8 v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  uint64_t v44;
  int8x16_t v45;
  __int16 v46;
  unsigned __int8 v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  unsigned __int8 v50;

  v3 = v1[7];
  v36 = v1[7];
  v4 = v1[8];
  v5 = *(_QWORD *)(v1 + 9);
  v41 = v1[17];
  v42 = v1[18];
  v43 = v1[19];
  v6 = *(int8x16_t *)(v1 + 20);
  v32 = v1[39];
  v7 = *(_OWORD *)(v1 + 41);
  v50 = v1[57];
  v49 = v1[58];
  v48 = v1[59];
  v47 = v1[60];
  v8 = v6.u8[12];
  v9 = v6.u8[15];
  v45 = v6;
  v10.i64[0] = v6.u8[13];
  v10.i64[1] = v6.u8[14];
  v6.i64[0] = 255;
  v6.i64[1] = 255;
  v11 = (uint64x2_t)vandq_s8(v10, v6);
  v34 = v1[36];
  v10.i64[0] = v9;
  v10.i64[1] = v34;
  v12 = vorrq_s8((int8x16_t)vshlq_u64(v11, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v10, v6), (uint64x2_t)xmmword_24983AE40));
  v35 = v1[37];
  v33 = v1[38];
  v13 = *(_QWORD *)&vorr_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)) | (v35 << 40) | ((unint64_t)v32 << 56) | (v33 << 48) | v8;
  v10.i64[0] = v7;
  v10.i64[1] = BYTE1(v7);
  v14 = (uint64x2_t)vandq_s8(v10, v6);
  v10.i64[0] = BYTE2(v7);
  v10.i64[1] = BYTE3(v7);
  v15 = vorrq_s8((int8x16_t)vshlq_u64(v14, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v10, v6), (uint64x2_t)xmmword_24983AE40));
  *(int8x8_t *)v15.i8 = vorr_s8(*(int8x8_t *)v15.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
  v40 = v7;
  v15.i64[1] = (unint64_t)BYTE6(v7) << 56;
  v31 = v1[61];
  v10.i64[0] = BYTE2(v5);
  v10.i64[1] = BYTE3(v5);
  v16 = (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v10, v6), (uint64x2_t)xmmword_24983AE40);
  v10.i64[0] = v5;
  v10.i64[1] = BYTE1(v5);
  v17 = vorrq_s8((int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v10, v6), (uint64x2_t)xmmword_24983AE50), v16);
  *(int8x8_t *)v17.i8 = vorr_s8(*(int8x8_t *)v17.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL));
  v44 = v5;
  v17.i64[1] = (unint64_t)BYTE6(v5) << 56;
  v37 = v1[1];
  v38 = v1[2];
  v18 = *v1;
  v39 = v1[3];
  v19 = v1[4];
  v20 = v1[5];
  v21 = v1[6];
  v22 = v1[62];
  v23 = v1[63];
  v24 = v1[64];
  v46 = *((_WORD *)v1 + 33);
  v30 = *((_WORD *)v1 + 34);
  v10.i64[0] = BYTE4(v7);
  v10.i64[1] = BYTE5(v7);
  v25 = (int64x2_t)vorrq_s8(v15, (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v10, v6), (uint64x2_t)xmmword_24983AE60));
  v26 = v1[40];
  v10.i64[0] = BYTE4(v5);
  v10.i64[1] = BYTE5(v5);
  v27 = (int64x2_t)vorrq_s8(v17, (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v10, v6), (uint64x2_t)xmmword_24983AE60));
  v28 = v4;
  if (static UniversalControlUUID.compare(lhs:rhs:)(v13, vorrq_s8((int8x16_t)v25, (int8x16_t)vdupq_laneq_s64(v25, 1)).u64[0] | v26, v18 | (v37 << 8) | (v38 << 16) | (v39 << 24) | (v19 << 32) | (v20 << 40) | (v21 << 48) | (v3 << 56), vorrq_s8((int8x16_t)v27, (int8x16_t)vdupq_laneq_s64(v27, 1)).u64[0] | v4) == -1)
    __asm { BR              X15 }
  result = v33;
  *(_BYTE *)a1 = v18;
  *(_BYTE *)(a1 + 1) = v37;
  *(_BYTE *)(a1 + 2) = v38;
  *(_BYTE *)(a1 + 3) = v39;
  *(_BYTE *)(a1 + 4) = v19;
  *(_BYTE *)(a1 + 5) = v20;
  *(_BYTE *)(a1 + 6) = v21;
  *(_BYTE *)(a1 + 7) = v36;
  *(_BYTE *)(a1 + 8) = v28;
  *(_QWORD *)(a1 + 9) = v44;
  *(_BYTE *)(a1 + 17) = v41;
  *(_BYTE *)(a1 + 18) = v42;
  *(_BYTE *)(a1 + 19) = v43;
  *(int8x16_t *)(a1 + 20) = v45;
  *(_BYTE *)(a1 + 36) = v34;
  *(_BYTE *)(a1 + 37) = v35;
  *(_BYTE *)(a1 + 38) = v33;
  *(_BYTE *)(a1 + 39) = v32;
  *(_BYTE *)(a1 + 40) = v26;
  *(_OWORD *)(a1 + 41) = v40;
  *(_BYTE *)(a1 + 57) = v50;
  *(_BYTE *)(a1 + 58) = v49;
  *(_BYTE *)(a1 + 59) = v48;
  *(_BYTE *)(a1 + 60) = v47;
  *(_BYTE *)(a1 + 61) = v31;
  *(_BYTE *)(a1 + 62) = v22;
  *(_BYTE *)(a1 + 63) = v23;
  *(_BYTE *)(a1 + 64) = v24;
  *(_WORD *)(a1 + 66) = v46;
  *(_WORD *)(a1 + 68) = v30;
  return result;
}

uint64_t UniversalControlLink.edge.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t UniversalControlLink.display2.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

BOOL UniversalControlLink.isNormalized.getter()
{
  uint64_t *v0;

  return static UniversalControlUUID.compare(lhs:rhs:)(v0[4], v0[5], *v0, v0[1]) != -1;
}

uint64_t UniversalControlLink.fixedOffset1.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 66);
}

uint64_t UniversalControlLink.fixedOffset2.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 68);
}

uint64_t UniversalControlLink.Endpoint.device.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t UniversalControlLink.init(display1:display2:edge:fixedOffset1:fixedOffset2:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>, uint64_t a6)
{
  uint64_t result;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;

  result = OUTLINED_FUNCTION_1_15(a1, a2, a3, a4, a5);
  *(_BYTE *)(v8 + 33) = v7;
  *(_BYTE *)(v8 + 34) = v9;
  *(_BYTE *)(v8 + 35) = v10;
  *(_BYTE *)(v8 + 36) = v11;
  *(_BYTE *)(v8 + 37) = v12;
  *(_BYTE *)(v8 + 38) = v13;
  *(_BYTE *)(v8 + 32) = v14;
  *(_BYTE *)(v8 + 39) = v15;
  *(_BYTE *)(v8 + 41) = v16;
  *(_BYTE *)(v8 + 42) = v17;
  *(_BYTE *)(v8 + 43) = v18;
  *(_BYTE *)(v8 + 44) = v19;
  *(_BYTE *)(v8 + 45) = v20;
  *(_BYTE *)(v8 + 46) = v21;
  *(_BYTE *)(v8 + 40) = v22;
  *(_BYTE *)(v8 + 47) = v23;
  *(_BYTE *)(v8 + 49) = v24;
  *(_BYTE *)(v8 + 50) = v25;
  *(_BYTE *)(v8 + 51) = v26;
  *(_BYTE *)(v8 + 52) = v27;
  *(_BYTE *)(v8 + 53) = v28;
  *(_BYTE *)(v8 + 54) = v29;
  *(_BYTE *)(v8 + 48) = v30;
  *(_BYTE *)(v8 + 55) = v31;
  *(_BYTE *)(v8 + 57) = v32;
  *(_BYTE *)(v8 + 58) = v33;
  *(_BYTE *)(v8 + 59) = v34;
  *(_BYTE *)(v8 + 60) = v35;
  *(_BYTE *)(v8 + 61) = v36;
  *(_BYTE *)(v8 + 62) = v37;
  *(_BYTE *)(v8 + 56) = v38;
  *(_BYTE *)(v8 + 63) = v39;
  *(_BYTE *)(v8 + 64) = a6;
  *(_DWORD *)(v8 + 66) = *(_DWORD *)((char *)&a6 + 2);
  return result;
}

void sub_249789F24(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_249789F5C()
{
  sub_249836DB4();
  return swift_bridgeObjectRelease();
}

void UniversalControlLink.endpoint1.getter(__n128 *a1@<X8>)
{
  __n128 *v1;

  OUTLINED_FUNCTION_35_4(a1, *v1, v1[1]);
}

uint64_t sub_249789FB8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_24975E0C0();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  result = sub_249790944(v6);
  *a1 = v2;
  return result;
}

uint64_t UniversalControlLink.Endpoint.display.setter(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  *v4 = result;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
  return result;
}

uint64_t (*UniversalControlLink.Endpoint.display.modify())()
{
  return nullsub_1;
}

void UniversalControlLink.Endpoint.anchor.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;

  v2 = *(_WORD *)(v1 + 34);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 32);
  *(_WORD *)(a1 + 2) = v2;
}

uint64_t UniversalControlLink.Endpoint.anchor.setter(uint64_t result)
{
  uint64_t v1;
  __int16 v2;

  v2 = *(_WORD *)(result + 2);
  *(_BYTE *)(v1 + 32) = *(_BYTE *)result;
  *(_WORD *)(v1 + 34) = v2;
  return result;
}

uint64_t (*UniversalControlLink.Endpoint.anchor.modify())()
{
  return nullsub_1;
}

uint64_t UniversalControlLink.Endpoint.init(display:anchor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = OUTLINED_FUNCTION_1_15(a1, a2, a3, a4, a5);
  *(_BYTE *)(v7 + 32) = *(_BYTE *)v6;
  *(_WORD *)(v7 + 34) = *(_WORD *)(v6 + 2);
  return result;
}

void UniversalControlLink.endpoint2.getter(__n128 *a1@<X8>)
{
  __n128 *v1;

  OUTLINED_FUNCTION_35_4(a1, v1[2], v1[3]);
}

__n128 UniversalControlLink.init(endpoint1:endpoint2:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  __int16 v4;
  __int16 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;

  v3 = *(_BYTE *)(a1 + 32);
  v4 = *(_WORD *)(a1 + 34);
  v5 = *(_WORD *)(a2 + 34);
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  result = *(__n128 *)a2;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 48) = v8;
  *(_BYTE *)(a3 + 64) = v3;
  *(_WORD *)(a3 + 66) = v4;
  *(_WORD *)(a3 + 68) = v5;
  return result;
}

__n128 UniversalControlLink.flipped()@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unsigned int v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  HIDWORD(v2) = *(_DWORD *)(v1 + 66);
  LODWORD(v2) = HIDWORD(v2);
  v3 = 0x1000302u >> (8 * *(_BYTE *)(v1 + 64));
  v4 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  result = *(__n128 *)v1;
  v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 64) = v3;
  *(_DWORD *)(a1 + 66) = v2 >> 16;
  return result;
}

uint64_t UniversalControlLink.normalized(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int8x16_t v15;
  int8x16_t v16;
  uint64x2_t v17;
  uint64_t v18;
  int8x16_t v19;
  __int16 v20;
  __int16 v21;
  int64x2_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  char v44;
  char v45;
  char v46;

  OUTLINED_FUNCTION_39_3();
  v3 = *(unsigned __int8 *)(v1 + 4);
  v4 = *(unsigned __int8 *)(v1 + 5);
  v5 = *(unsigned __int8 *)(v1 + 6);
  v6 = *(unsigned __int8 *)(v1 + 7);
  v43 = *(_BYTE *)(v1 + 7);
  v7 = *(unsigned __int8 *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 9);
  v46 = *(_BYTE *)(v1 + 17);
  v45 = *(_BYTE *)(v1 + 18);
  v44 = *(_BYTE *)(v1 + 19);
  v42 = *(_OWORD *)(v1 + 20);
  v29 = *(_BYTE *)(v1 + 36);
  v27 = *(_BYTE *)(v1 + 37);
  v26 = *(_BYTE *)(v1 + 38);
  v9 = *(_BYTE *)(v1 + 39);
  v10 = *(_BYTE *)(v1 + 40);
  v40 = *(_OWORD *)(v1 + 41);
  v30 = *(_BYTE *)(v1 + 57);
  v31 = *(_BYTE *)(v1 + 58);
  v32 = *(_BYTE *)(v1 + 59);
  v33 = *(_BYTE *)(v1 + 60);
  v34 = *(_BYTE *)(v1 + 61);
  v35 = *(_BYTE *)(v1 + 62);
  v38 = v12;
  v39 = v11;
  v36 = v14;
  v37 = v13;
  v28 = *(_BYTE *)(v1 + 63);
  v15.i64[0] = v8;
  v15.i64[1] = BYTE1(v8);
  v16.i64[0] = 255;
  v16.i64[1] = 255;
  v17 = (uint64x2_t)vandq_s8(v15, v16);
  v15.i64[0] = BYTE2(v8);
  v15.i64[1] = BYTE3(v8);
  v18 = *(unsigned __int8 *)(v1 + 64);
  v41 = v8;
  v19 = vorrq_s8((int8x16_t)vshlq_u64(v17, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v15, v16), (uint64x2_t)xmmword_24983AE40));
  *(int8x8_t *)v19.i8 = vorr_s8(*(int8x8_t *)v19.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v19, v19, 8uLL));
  v19.i64[1] = (unint64_t)BYTE6(v8) << 56;
  v20 = *(_WORD *)(v1 + 66);
  v21 = *(_WORD *)(v1 + 68);
  v15.i64[0] = BYTE4(v8);
  v15.i64[1] = BYTE5(v8);
  v22 = (int64x2_t)vorrq_s8(v19, (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v15, v16), (uint64x2_t)xmmword_24983AE60));
  if (static UniversalControlUUID.compare(lhs:rhs:)(v11 | (v12 << 8) | (v13 << 16) | (v14 << 24) | (v3 << 32) | (v4 << 40) | (v5 << 48) | (v6 << 56), vorrq_s8((int8x16_t)v22, (int8x16_t)vdupq_laneq_s64(v22, 1)).u64[0] | v7, v23, v24))
  {
    __asm { BR              X15 }
  }
  result = v36;
  *(_BYTE *)a1 = v39;
  *(_BYTE *)(a1 + 1) = v38;
  *(_BYTE *)(a1 + 2) = v37;
  *(_BYTE *)(a1 + 3) = v36;
  *(_BYTE *)(a1 + 4) = v3;
  *(_BYTE *)(a1 + 5) = v4;
  *(_BYTE *)(a1 + 6) = v5;
  *(_BYTE *)(a1 + 7) = v43;
  *(_BYTE *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 9) = v41;
  *(_BYTE *)(a1 + 17) = v46;
  *(_BYTE *)(a1 + 18) = v45;
  *(_BYTE *)(a1 + 19) = v44;
  *(_OWORD *)(a1 + 20) = v42;
  *(_BYTE *)(a1 + 36) = v29;
  *(_BYTE *)(a1 + 37) = v27;
  *(_BYTE *)(a1 + 38) = v26;
  *(_BYTE *)(a1 + 39) = v9;
  *(_BYTE *)(a1 + 40) = v10;
  *(_OWORD *)(a1 + 41) = v40;
  *(_BYTE *)(a1 + 57) = v30;
  *(_BYTE *)(a1 + 58) = v31;
  *(_BYTE *)(a1 + 59) = v32;
  *(_BYTE *)(a1 + 60) = v33;
  *(_BYTE *)(a1 + 61) = v34;
  *(_BYTE *)(a1 + 62) = v35;
  *(_BYTE *)(a1 + 63) = v28;
  *(_BYTE *)(a1 + 64) = v18;
  *(_WORD *)(a1 + 66) = v20;
  *(_WORD *)(a1 + 68) = v21;
  return result;
}

BOOL sub_24978A650(char a1, char a2)
{
  return a1 == a2;
}

uint64_t _s8HIDUtils13HIDDeviceTypeO4hash4intoys6HasherVz_tF_0()
{
  return sub_2498376A8();
}

uint64_t sub_24978A684(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x656369766564 && a2 == 0xE600000000000000;
  if (v2 || (sub_2498375C4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x79616C70736964 && a2 == 0xE700000000000000;
    if (v6 || (sub_2498375C4() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x726F68636E61 && a2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2498375C4();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_24978A7C0()
{
  return 3;
}

uint64_t sub_24978A7C8()
{
  sub_249837690();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t sub_24978A80C(char a1)
{
  if (!a1)
    return 0x656369766564;
  if (a1 == 1)
    return 0x79616C70736964;
  return 0x726F68636E61;
}

BOOL sub_24978A85C(char *a1, char *a2)
{
  return sub_24978A650(*a1, *a2);
}

uint64_t sub_24978A868()
{
  return sub_24978A7C8();
}

uint64_t sub_24978A870()
{
  return _s8HIDUtils13HIDDeviceTypeO4hash4intoys6HasherVz_tF_0();
}

uint64_t sub_24978A878()
{
  char *v0;

  return sub_24978A80C(*v0);
}

uint64_t sub_24978A880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24978A684(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24978A8A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24978A7C0();
  *a1 = result;
  return result;
}

uint64_t sub_24978A8C8()
{
  sub_249790404();
  return sub_249837750();
}

uint64_t sub_24978A8F0()
{
  sub_249790404();
  return sub_24983775C();
}

void UniversalControlLink.Endpoint.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  __int128 v6;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578814B8);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249790404();
  sub_249837720();
  if (!v2)
  {
    sub_24977266C();
    OUTLINED_FUNCTION_5_10();
    sub_2497726A8();
    OUTLINED_FUNCTION_5_10();
    sub_249790440();
    OUTLINED_FUNCTION_5_10();
    OUTLINED_FUNCTION_32_5();
    *(_OWORD *)a2 = v6;
    *(_OWORD *)(a2 + 16) = v6;
    *(_BYTE *)(a2 + 32) = v6;
    *(_WORD *)(a2 + 34) = WORD1(v6);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  OUTLINED_FUNCTION_10_6();
}

void UniversalControlLink.Endpoint.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int16 v9;
  char v10;
  __int128 v11;
  __int128 v12;
  int v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578814D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3[1];
  v13 = *((unsigned __int8 *)v3 + 32);
  v9 = *((_WORD *)v3 + 17);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_249790404();
  sub_249837744();
  v12 = *v3;
  v14 = 0;
  sub_2497726E4();
  OUTLINED_FUNCTION_8_10();
  if (!v2)
  {
    v10 = v13;
    v12 = v11;
    v14 = 1;
    sub_249772720();
    OUTLINED_FUNCTION_8_10();
    LOBYTE(v12) = v10;
    WORD1(v12) = v9;
    v14 = 2;
    sub_24979047C();
    OUTLINED_FUNCTION_8_10();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  OUTLINED_FUNCTION_10_6();
}

void sub_24978ABD0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  UniversalControlLink.Endpoint.init(from:)(a1, a2);
}

void sub_24978ABE4(_QWORD *a1)
{
  UniversalControlLink.Endpoint.encode(to:)(a1);
}

void UniversalControlLink.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  uint64_t v36;
  uint64_t v37;

  v30 = *v1;
  v23 = v1[1];
  v21 = v1[2];
  v31 = v1[3];
  v24 = v1[4];
  v22 = v1[5];
  v32 = v1[6];
  v2 = v1[7];
  v20 = v1[8];
  v37 = v1[9];
  v34 = v1[10];
  v29 = v1[11];
  v33 = v1[12];
  v19 = v1[13];
  v18 = v1[14];
  v3 = v1[15];
  v17 = v1[32];
  v16 = v1[33];
  v15 = v1[34];
  v14 = v1[35];
  v13 = v1[36];
  v12 = v1[37];
  v11 = v1[38];
  v4 = v1[39];
  v28 = v1[40];
  v27 = v1[41];
  v26 = v1[42];
  v25 = v1[43];
  v5 = v1[44];
  v6 = v1[45];
  v10 = v1[46];
  v7 = v1[47];
  v8 = v1[64];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24983772C();
  if (static UniversalControlUUID.compare(lhs:rhs:)(v17 | (v16 << 8) | (v15 << 16) | (v14 << 24) | (v13 << 32) | (v12 << 40) | (v11 << 48) | (v4 << 56), v28 | (v27 << 8) | (v26 << 16) | (v25 << 24) | (v5 << 32) | (v6 << 40) | (v10 << 48) | (v7 << 56), v30 | (v23 << 8) | (v21 << 16) | (v31 << 24) | (v24 << 32) | (v22 << 40) | (v32 << 48) | (v2 << 56), v20 | (v37 << 8) | (v34 << 16) | (v29 << 24) | (v33 << 32) | (v19 << 40) | (v18 << 48) | (v3 << 56)) == -1)
    __asm { BR              X23 }
  v37 = v27;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  sub_2497904B8();
  OUTLINED_FUNCTION_48_2();
  if (!v9)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
    OUTLINED_FUNCTION_48_2();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
  OUTLINED_FUNCTION_10_6();
}

void sub_24978B418()
{
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_27_4();
  JUMPOUT(0x24978B0DCLL);
}

void sub_24978B480()
{
  JUMPOUT(0x24978B0DCLL);
}

void sub_24978B548()
{
  OUTLINED_FUNCTION_7_11();
  OUTLINED_FUNCTION_27_4();
  JUMPOUT(0x24978B0DCLL);
}

uint64_t UniversalControlLink.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int16 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v5 = sub_249837708();
  if (!v2)
  {
    OUTLINED_FUNCTION_33_5(v5, v6, v7, v8, v9, v10, v11, v12, v27, v29, v31, v33, v35, v37, v38, v40, v41, v44, v46,
      v49,
      v51,
      v54,
      v55,
      v56,
      v57);
    sub_2497904F4();
    v13 = OUTLINED_FUNCTION_23_5();
    v21 = v52;
    v22 = WORD1(v52);
    OUTLINED_FUNCTION_33_5(v13, v14, v15, v16, v17, v18, v19, v20, v28, v30, v32, v34, v47, v50, v42, v45, v42, v45, v47,
      v50,
      v52,
      v54,
      v55,
      v56,
      v57);
    OUTLINED_FUNCTION_23_5();
    __swift_project_boxed_opaque_existential_1(&v54, v57);
    if ((sub_24983757C() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v54);
      *(_OWORD *)a2 = v39;
      *(_OWORD *)(a2 + 16) = v36;
      *(_OWORD *)(a2 + 32) = v43;
      *(_OWORD *)(a2 + 48) = v48;
      *(_BYTE *)(a2 + 64) = v21;
      *(_WORD *)(a2 + 66) = v22;
      *(_WORD *)(a2 + 68) = v53;
    }
    else
    {
      v23 = sub_2498371BC();
      swift_allocError();
      v25 = v24;
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_2498376FC();
      sub_2498371B0();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D8], v23);
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v54);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_24978B788@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UniversalControlLink.init(from:)(a1, a2);
}

void sub_24978B79C(_QWORD *a1)
{
  UniversalControlLink.encode(to:)(a1);
}

uint64_t static UniversalControlLink.Endpoint.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  int v15;
  int v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v15 = *(unsigned __int16 *)(a1 + 34);
  v16 = *(unsigned __int8 *)(a1 + 32);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(unsigned __int8 *)(a2 + 32);
  v7 = *(unsigned __int16 *)(a2 + 34);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  sub_24978B870(*(_QWORD *)a1, v9, *(_QWORD *)a2, v11);
  OUTLINED_FUNCTION_9_9();
  if (v13)
  {
    sub_24978B8C8(v8, v9, v2, v3, v10, v11, v4, v5);
    OUTLINED_FUNCTION_9_9();
    if (v13)
      v12 = sub_24978B990(v16 | (v15 << 16), v6 | (v7 << 16));
  }
  return v12 & 1;
}

uint64_t sub_24978B870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, a3, a4) == -1)
    return 1;
  v4 = OUTLINED_FUNCTION_43_4();
  return 2 * (static UniversalControlUUID.compare(lhs:rhs:)(v4, v5, v6, v7) != -1);
}

uint64_t sub_24978B8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  sub_249772148(a1, a2, a5, a6);
  OUTLINED_FUNCTION_9_9();
  if (!v17 || (v18 = OUTLINED_FUNCTION_43_4(), sub_249772148(v18, v19, v20, v21), OUTLINED_FUNCTION_9_9(), !v17))
  {
    if ((v16 & 1) != 0)
      return 1;
  }
  sub_249772148(a5, a6, a1, a2);
  OUTLINED_FUNCTION_9_9();
  if (v17)
  {
    sub_249772148(a7, a8, a3, a4);
    OUTLINED_FUNCTION_9_9();
    if (v17)
      return 2;
  }
  if ((v22 & 1) == 0)
    return 2;
  else
    return 0;
}

uint64_t sub_24978B990(unsigned int a1, unsigned int a2)
{
  unsigned int v2;

  if (HIWORD(a1) >= HIWORD(a2))
    v2 = 2 * (HIWORD(a2) >= HIWORD(a1));
  else
    v2 = 1;
  if (a2 < a1)
    v2 = 0;
  if (a1 >= a2)
    return v2;
  else
    return 1;
}

uint64_t sub_24978B9D4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  int v6;
  _OWORD v7[2];
  int v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_DWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_DWORD *)(a2 + 32);
  return sub_24975E738((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_24978BA1C()
{
  char v0;

  sub_2497EC6B4();
  return v0 & 1;
}

uint64_t sub_24978BA64(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  int v6;
  _OWORD v7[2];
  int v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_DWORD *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_DWORD *)(a2 + 32);
  return sub_24977126C((uint64_t)v5, (uint64_t)v7) & 1;
}

void static UniversalControlLink.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  char v12;
  uint64_t v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  unsigned __int8 v47;
  unsigned __int8 v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  unsigned __int8 v53;
  __int16 v54;
  unsigned __int8 v55;
  unsigned __int8 v56;
  unsigned __int8 v57;
  unsigned __int8 v58;
  unsigned __int8 v59;
  unsigned __int8 v60;
  unsigned __int8 v61;
  unsigned __int8 v62;
  __int16 v63;
  unsigned __int8 v64;
  unsigned __int8 v65;
  unsigned __int8 v66;
  unsigned __int8 v67;
  unsigned __int8 v68;
  unsigned __int8 v69;
  __int16 v70;
  unsigned __int8 v71;
  unsigned __int8 v72;
  unsigned __int8 v73;
  unsigned __int8 v74;
  unsigned __int8 v75;
  unsigned __int8 v76;
  unsigned __int8 v77;
  unsigned __int8 v78;
  unsigned __int8 v79;
  unsigned __int8 v80;
  unsigned __int8 v81;
  unsigned __int8 v82;
  unsigned __int8 v83;
  unsigned __int8 v84;
  unsigned __int8 v85;
  unsigned __int8 v86;
  __int16 v87;
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned __int8 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE v136[34];
  __int16 v137;
  _BYTE v138[34];
  __int16 v139;
  _BYTE v140[34];
  __int16 v141;
  _BYTE v142[34];
  __int16 v143;

  v96 = a1[7];
  v88 = a1[15];
  v103 = *a1;
  v102 = a1[1];
  v101 = a1[2];
  v100 = a1[3];
  v99 = a1[4];
  v98 = a1[5];
  v97 = a1[6];
  v95 = a1[8];
  v94 = a1[9];
  v93 = a1[10];
  v92 = a1[11];
  v91 = a1[12];
  v90 = a1[13];
  v89 = a1[14];
  v35 = a1[33];
  v36 = a1[32];
  v33 = a1[35];
  v34 = a1[34];
  v31 = a1[37];
  v32 = a1[36];
  v29 = a1[40];
  v30 = a1[38];
  v26 = a1[39];
  v28 = a1[42];
  v27 = a1[43];
  v42 = a1[44];
  v44 = a1[45];
  v46 = a1[46];
  v47 = a1[47];
  v2 = a1[16];
  v69 = a1[17];
  v3 = a1[18];
  v4 = a1[19];
  v5 = a1[20];
  v68 = a1[21];
  v6 = a1[22];
  v7 = a1[23];
  v8 = a1[24];
  v67 = a1[25];
  v9 = a1[26];
  v66 = a1[27];
  v10 = a1[28];
  v65 = a1[29];
  v11 = a1[30];
  v64 = a1[31];
  v43 = a1[48];
  v45 = a1[49];
  v48 = a1[50];
  v49 = a1[51];
  v50 = a1[52];
  v51 = a1[53];
  v52 = a1[54];
  v53 = a1[56];
  v37 = a1[57];
  v39 = a1[58];
  v38 = a1[59];
  v40 = a1[60];
  v41 = a1[55];
  v25 = a1[62];
  v23 = a1[61];
  v24 = a1[63];
  v22 = a1[64];
  v70 = *((_WORD *)a1 + 33);
  v54 = *((_WORD *)a1 + 34);
  v123 = *a2;
  v122 = a2[1];
  v121 = a2[2];
  v120 = a2[3];
  v130 = a2[4];
  v131 = a2[5];
  v132 = a2[6];
  v124 = a2[7];
  v125 = a2[8];
  v126 = a2[9];
  v127 = a2[10];
  v128 = a2[11];
  v129 = a2[12];
  v133 = a2[13];
  v134 = a2[14];
  v135 = a2[15];
  v71 = a2[16];
  v72 = a2[17];
  v73 = a2[18];
  v74 = a2[19];
  v75 = a2[20];
  v76 = a2[21];
  v77 = a2[22];
  v78 = a2[23];
  v79 = a2[24];
  v80 = a2[25];
  v81 = a2[26];
  v82 = a2[27];
  v83 = a2[28];
  v84 = a2[29];
  v85 = a2[30];
  v86 = a2[31];
  v104 = a2[32];
  v105 = a2[33];
  v106 = a2[34];
  v107 = a2[35];
  v108 = a2[36];
  v109 = a2[37];
  v110 = a2[38];
  v111 = a2[39];
  v112 = a2[40];
  v113 = a2[41];
  v114 = a2[42];
  v115 = a2[43];
  v116 = a2[44];
  v117 = a2[45];
  v118 = a2[46];
  v119 = a2[47];
  v55 = a2[48];
  v56 = a2[49];
  v57 = a2[51];
  v14 = a2[50];
  v15 = a2[52];
  v16 = a2[53];
  v17 = a2[54];
  v18 = a2[55];
  v19 = a2[56];
  v20 = a2[57];
  v21 = a2[58];
  v58 = a2[59];
  v59 = a2[60];
  v60 = a2[61];
  v61 = a2[62];
  v62 = a2[63];
  v13 = a2[64];
  v87 = *((_WORD *)a2 + 33);
  v63 = *((_WORD *)a2 + 34);
  if (OUTLINED_FUNCTION_46_2(v103 | (v102 << 8) | (v101 << 16) | (v100 << 24) | (v99 << 32) | (v98 << 40) | (v97 << 48) | ((unint64_t)v96 << 56), v95 | (v94 << 8) | (v93 << 16) | (v92 << 24) | (v91 << 32) | (v90 << 40) | (v89 << 48) | ((unint64_t)v88 << 56), v36 | (v35 << 8) | (v34 << 16) | (v33 << 24) | (v32 << 32) | (v31 << 40) | (v30 << 48) | ((unint64_t)v26 << 56)) == -1)
    __asm { BR              X25 }
  if (static UniversalControlUUID.compare(lhs:rhs:)(v104 | (v105 << 8) | (v106 << 16) | (v107 << 24) | (v108 << 32) | (v109 << 40) | (v110 << 48) | (v111 << 56), v112 | (v113 << 8) | (v114 << 16) | (v115 << 24) | (v116 << 32) | (v117 << 40) | (v118 << 48) | (v119 << 56), v123 | (v122 << 8) | (v121 << 16) | (v120 << 24) | (v130 << 32) | (v131 << 40) | (v132 << 48) | (v124 << 56), v125 | (v126 << 8) | (v127 << 16) | (v128 << 24) | (v129 << 32) | (v133 << 40) | (v134 << 48) | (v135 << 56)) == -1)
    __asm { BR              X13 }
  v140[0] = v103;
  v140[1] = v102;
  v140[2] = v101;
  v140[3] = v100;
  v140[4] = v99;
  v140[5] = v98;
  v140[6] = v97;
  v140[7] = v96;
  v140[8] = v95;
  v140[9] = v94;
  v140[10] = v93;
  v140[11] = v92;
  v140[12] = v91;
  v140[13] = v90;
  v140[14] = v89;
  v140[15] = v88;
  v140[16] = v2;
  v140[17] = v69;
  v140[18] = v3;
  v140[19] = v4;
  v140[20] = v5;
  v140[21] = v68;
  v140[22] = v6;
  v140[23] = v7;
  v140[24] = v8;
  v140[25] = v67;
  v140[26] = v9;
  v140[27] = v66;
  v140[28] = v10;
  v140[29] = v65;
  v140[30] = v11;
  v140[31] = v64;
  v141 = v70;
  v142[0] = v123;
  v142[1] = v122;
  v140[32] = v22;
  v142[2] = v121;
  v142[3] = v120;
  v142[4] = v130;
  v142[5] = v131;
  v142[6] = v132;
  v142[7] = v124;
  v142[8] = v125;
  v142[9] = v126;
  v142[10] = v127;
  v142[11] = v128;
  v142[12] = v129;
  v142[13] = v133;
  v142[14] = v134;
  v142[15] = v135;
  v142[16] = v71;
  v142[17] = v72;
  v142[18] = v73;
  v142[19] = v74;
  v142[20] = v75;
  v142[21] = v76;
  v142[22] = v77;
  v142[23] = v78;
  v142[24] = v79;
  v142[25] = v80;
  v142[26] = v81;
  v142[27] = v82;
  v142[28] = v83;
  v142[29] = v84;
  v142[30] = v85;
  v142[31] = v86;
  v142[32] = v13;
  v143 = v87;
  sub_24978CDCC((uint64_t)v140, (uint64_t)v142);
  OUTLINED_FUNCTION_9_9();
  if (v12)
  {
    v136[0] = v36;
    v136[1] = v35;
    v136[2] = v34;
    v136[3] = v33;
    v136[4] = v32;
    v136[5] = v31;
    v136[6] = v30;
    v136[7] = v26;
    v136[8] = v29;
    v136[9] = v81;
    v136[10] = v28;
    v136[11] = v27;
    v136[12] = v42;
    v136[13] = v44;
    v136[14] = v46;
    v136[15] = v47;
    v136[16] = v43;
    v136[17] = v45;
    v136[18] = v48;
    v136[19] = v49;
    v136[20] = v50;
    v136[21] = v51;
    v136[22] = v52;
    v136[23] = v41;
    v136[24] = v53;
    v136[25] = v37;
    v136[26] = v39;
    v136[27] = v38;
    v136[28] = v40;
    v136[29] = v23;
    v136[30] = v25;
    v136[31] = v24;
    v137 = v54;
    v138[0] = v104;
    v138[1] = v105;
    v138[2] = v106;
    v138[3] = v107;
    v136[32] = 0x1000302u >> (8 * v22);
    v138[4] = v108;
    v138[5] = v109;
    v138[6] = v110;
    v138[7] = v111;
    v138[8] = v112;
    v138[9] = v113;
    v138[10] = v114;
    v138[11] = v115;
    v138[12] = v116;
    v138[13] = v117;
    v138[14] = v118;
    v138[15] = v119;
    v138[16] = v55;
    v138[17] = v56;
    v138[18] = v14;
    v138[19] = v57;
    v138[20] = v15;
    v138[21] = v16;
    v138[22] = v17;
    v138[23] = v18;
    v138[24] = v19;
    v138[25] = v20;
    v138[26] = v21;
    v138[27] = v58;
    v138[28] = v59;
    v138[29] = v60;
    v138[30] = v61;
    v138[31] = v62;
    v138[32] = 0x1000302u >> (8 * v13);
    v139 = v63;
    sub_24978CDCC((uint64_t)v136, (uint64_t)v138);
  }
  OUTLINED_FUNCTION_3_5();
}

void sub_24978CB58()
{
  OUTLINED_FUNCTION_3_11();
  JUMPOUT(0x24978C40CLL);
}

void sub_24978CC04()
{
  OUTLINED_FUNCTION_0_17();
  JUMPOUT(0x24978C110);
}

void sub_24978CC3C()
{
  OUTLINED_FUNCTION_0_17();
  JUMPOUT(0x24978C110);
}

void sub_24978CC74()
{
  OUTLINED_FUNCTION_3_11();
  JUMPOUT(0x24978C40CLL);
}

void sub_24978CD20()
{
  OUTLINED_FUNCTION_3_11();
  JUMPOUT(0x24978C40CLL);
}

uint64_t sub_24978CDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v24;
  int v25;

  v24 = *(unsigned __int16 *)(a1 + 34);
  v25 = *(unsigned __int8 *)(a1 + 32);
  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 32);
  v5 = *(unsigned __int16 *)(a2 + 34);
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = sub_24978B870(*(_QWORD *)a1, v3, *(_QWORD *)a2, v6);
  v9 = v25 | (v24 << 16);
  v10 = v4 | (v5 << 16);
  if (v8 != 2)
    goto LABEL_5;
  OUTLINED_FUNCTION_12_7();
  OUTLINED_FUNCTION_11_7();
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_14_5();
  sub_24978B8C8(v2, v3, v13, v14, v7, v6, v15, v11 | (v12 << 56));
  OUTLINED_FUNCTION_9_9();
  if (!v16 || (sub_24978B990(v9, v10), OUTLINED_FUNCTION_9_9(), !v16))
  {
LABEL_5:
    if ((v8 & 1) != 0)
      return 1;
  }
  sub_24978B870(v7, v6, v2, v3);
  OUTLINED_FUNCTION_9_9();
  if (v16)
  {
    OUTLINED_FUNCTION_15_6();
    OUTLINED_FUNCTION_14_5();
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_11_7();
    sub_24978B8C8(v7, v6, v20, v21, v2, v3, v22, v18 | (v19 << 56));
    OUTLINED_FUNCTION_9_9();
    if (v16)
    {
      sub_24978B990(v10, v9);
      OUTLINED_FUNCTION_9_9();
      if (v16)
        return 2;
    }
  }
  if ((v17 & 1) == 0)
    return 2;
  else
    return 0;
}

uint64_t sub_24978D03C(void *__src, const void *a2)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE __dst[70];
  _BYTE v12[70];

  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v12, a2, sizeof(v12));
  sub_24975E824(__dst, (uint64_t)v12, v3, v4, v5, v6, v7, v8);
  return v9 & 1;
}

BOOL sub_24978D090(void *__src, const void *a2)
{
  _BYTE __dst[70];
  _BYTE v5[70];

  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v5, a2, sizeof(v5));
  return sub_2497EC790(__dst);
}

uint64_t sub_24978D0E4(void *__src, const void *a2)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  _BYTE __dst[70];
  _BYTE v12[70];

  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v12, a2, sizeof(v12));
  sub_249771234(__dst, (uint64_t)v12, v3, v4, v5, v6, v7, v8);
  return v9 & 1;
}

uint64_t UniversalControlLink.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v3 = *(_QWORD *)v0;
  v4 = *(_QWORD *)(v0 + 8);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);
  v13 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 32);
  v11 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 48);
  v7 = *(_BYTE *)(v0 + 64);
  LOWORD(v1) = *(_WORD *)(v0 + 66);
  LOWORD(v2) = *(_WORD *)(v0 + 68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578814F0);
  v8 = OUTLINED_FUNCTION_42_1();
  *(_OWORD *)(v8 + 16) = xmmword_249838510;
  OUTLINED_FUNCTION_19_8(v8, (double)v1);
  v9 = OUTLINED_FUNCTION_42_1();
  *(_OWORD *)(v9 + 16) = xmmword_249838510;
  OUTLINED_FUNCTION_19_8(v9, (double)v2);
  sub_249837168();
  UniversalControlDisplayID.description.getter(v3, v4, v5, v6);
  OUTLINED_FUNCTION_49_2();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_28_5();
  sub_249789F24(v7);
  OUTLINED_FUNCTION_28_5();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_5();
  sub_249789F24(0x1000302u >> (8 * v7));
  OUTLINED_FUNCTION_28_5();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_5();
  UniversalControlDisplayID.description.getter(v14, v13, v12, v11);
  OUTLINED_FUNCTION_49_2();
  OUTLINED_FUNCTION_23_1();
  return 0;
}

BOOL static UniversalControlLink.Endpoint.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  BOOL v9;
  uint64_t v11;
  uint64_t v12;

  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 16);
  v2 = *(unsigned __int8 *)(a1 + 32);
  v3 = *(unsigned __int16 *)(a1 + 34);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(unsigned __int8 *)(a2 + 32);
  v7 = *(unsigned __int16 *)(a2 + 34);
  if (OUTLINED_FUNCTION_30_3() || OUTLINED_FUNCTION_30_3())
    return 0;
  if (static UniversalControlUUID.compare(lhs:rhs:)(v12, v11, v4, v5))
    v9 = 0;
  else
    v9 = v2 == v6;
  return v9 && v3 == v7;
}

void static UniversalControlLink.== infix(_:_:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = a1[45];
  v3 = a1[46];
  v13 = a1[64];
  v26 = *((unsigned __int16 *)a1 + 33);
  v21 = *(unsigned __int8 *)(a2 + 28);
  v22 = *(unsigned __int8 *)(a2 + 29);
  v23 = *(unsigned __int8 *)(a2 + 30);
  v24 = *(unsigned __int8 *)(a2 + 31);
  v15 = *(unsigned __int8 *)(a2 + 32);
  v31 = *(unsigned __int8 *)(a2 + 33);
  v16 = *(unsigned __int8 *)(a2 + 34);
  v32 = *(unsigned __int8 *)(a2 + 35);
  v17 = *(unsigned __int8 *)(a2 + 36);
  v33 = *(unsigned __int8 *)(a2 + 37);
  v18 = *(unsigned __int8 *)(a2 + 38);
  v19 = *(unsigned __int8 *)(a2 + 39);
  v34 = *(unsigned __int8 *)(a2 + 40);
  v35 = *(unsigned __int8 *)(a2 + 41);
  v36 = *(unsigned __int8 *)(a2 + 42);
  v37 = *(unsigned __int8 *)(a2 + 43);
  v38 = *(unsigned __int8 *)(a2 + 44);
  v39 = *(unsigned __int8 *)(a2 + 45);
  v40 = *(unsigned __int8 *)(a2 + 46);
  v20 = *(unsigned __int8 *)(a2 + 47);
  v27 = *(unsigned __int8 *)(a2 + 60);
  v28 = *(unsigned __int8 *)(a2 + 61);
  v29 = *(unsigned __int8 *)(a2 + 62);
  v30 = *(unsigned __int8 *)(a2 + 63);
  v14 = *(unsigned __int8 *)(a2 + 64);
  v25 = *(unsigned __int16 *)(a2 + 66);
  if (OUTLINED_FUNCTION_46_2(*a1 | ((unint64_t)a1[1] << 8) | ((unint64_t)a1[2] << 16) | ((unint64_t)a1[3] << 24) | ((unint64_t)a1[4] << 32) | ((unint64_t)a1[5] << 40) | ((unint64_t)a1[6] << 48) | ((unint64_t)a1[7] << 56), a1[8] | ((unint64_t)a1[9] << 8) | ((unint64_t)a1[10] << 16) | ((unint64_t)a1[11] << 24) | ((unint64_t)a1[12] << 32) | ((unint64_t)a1[13] << 40) | ((unint64_t)a1[14] << 48) | ((unint64_t)a1[15] << 56), a1[32] | ((unint64_t)a1[33] << 8) | ((unint64_t)a1[34] << 16) | ((unint64_t)a1[35] << 24) | ((unint64_t)a1[36] << 32) | ((unint64_t)a1[37] << 40) | ((unint64_t)a1[38] << 48) | ((unint64_t)a1[39] << 56)) == -1)
    __asm { BR              X9 }
  OUTLINED_FUNCTION_17_6();
  OUTLINED_FUNCTION_18_7();
  if (static UniversalControlUUID.compare(lhs:rhs:)(v15 | (v31 << 8) | (v16 << 16) | (v32 << 24) | (v17 << 32) | (v33 << 40) | (v18 << 48) | (v19 << 56), v34 | (v35 << 8) | (v36 << 16) | (v37 << 24) | (v38 << 32) | (v39 << 40) | (v40 << 48) | (v20 << 56), v3, v2) == -1)
    __asm { BR              X9 }
  if (!OUTLINED_FUNCTION_31_5() && !OUTLINED_FUNCTION_31_5())
  {
    OUTLINED_FUNCTION_21_6();
    OUTLINED_FUNCTION_20_6();
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_21_6();
    OUTLINED_FUNCTION_20_6();
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_21_6();
    OUTLINED_FUNCTION_20_6();
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_21_6();
    OUTLINED_FUNCTION_20_6();
    OUTLINED_FUNCTION_22_6();
    if (!static UniversalControlUUID.compare(lhs:rhs:)(v5, v6, v7, v4 | (v21 << 32) | (v22 << 40) | (v23 << 48) | (v24 << 56))&& (_DWORD)v13 == (_DWORD)v14&& v26 == v25)
    {
      OUTLINED_FUNCTION_21_6();
      OUTLINED_FUNCTION_20_6();
      OUTLINED_FUNCTION_21_6();
      OUTLINED_FUNCTION_20_6();
      OUTLINED_FUNCTION_21_6();
      OUTLINED_FUNCTION_20_6();
      OUTLINED_FUNCTION_17_6();
      OUTLINED_FUNCTION_21_6();
      OUTLINED_FUNCTION_20_6();
      OUTLINED_FUNCTION_18_7();
      if (!OUTLINED_FUNCTION_29_2() && !OUTLINED_FUNCTION_29_2())
      {
        OUTLINED_FUNCTION_21_6();
        OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_22_6();
        OUTLINED_FUNCTION_21_6();
        OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_22_6();
        OUTLINED_FUNCTION_21_6();
        OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_22_6();
        OUTLINED_FUNCTION_21_6();
        OUTLINED_FUNCTION_20_6();
        OUTLINED_FUNCTION_22_6();
        static UniversalControlUUID.compare(lhs:rhs:)(v10, v11, v12, v9 | ((unint64_t)v27 << 32) | ((unint64_t)v28 << 40) | ((unint64_t)v29 << 48) | ((unint64_t)v30 << 56));
      }
    }
  }
  OUTLINED_FUNCTION_3_5();
}

uint64_t UniversalControlLink.Endpoint.hash(into:)()
{
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_26_4();
  sub_2498376A8();
  return sub_2498376C0();
}

uint64_t UniversalControlLink.Endpoint.hashValue.getter()
{
  sub_249837690();
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_24_6();
  OUTLINED_FUNCTION_24_6();
  sub_2498376A8();
  sub_2498376C0();
  return sub_2498376E4();
}

uint64_t sub_24978E978()
{
  sub_249837690();
  UniversalControlUUID.hash(into:)();
  UniversalControlUUID.hash(into:)();
  UniversalControlUUID.hash(into:)();
  sub_2498376A8();
  sub_2498376C0();
  return sub_2498376E4();
}

uint64_t UniversalControlLink.hash(into:)(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  int v114;
  char v115;
  int v116;
  char v117;
  uint64_t v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  uint64_t v127;
  _BYTE v128[12];
  uint64_t v129;
  uint64_t v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  OUTLINED_FUNCTION_39_3();
  v2 = v1[7];
  *(_DWORD *)v128 = v1[7];
  v133 = v4;
  v134 = v3;
  v5 = v1[12];
  v6 = v1[13];
  v131 = v8;
  v132 = v7;
  v9 = v3 | (v4 << 8) | (v7 << 16);
  v10 = v1[14];
  v11 = v1[15];
  v136 = v1[15];
  v129 = v1[5];
  v130 = v1[4];
  *(_QWORD *)&v128[4] = v1[6];
  v127 = v1[8];
  v138 = v1[10];
  v139 = v1[9];
  v137 = v1[11];
  v48 = v1[32];
  v50 = *(unsigned __int8 *)(v12 + 33);
  v52 = *(unsigned __int8 *)(v12 + 34);
  v54 = *(unsigned __int8 *)(v12 + 35);
  v56 = *(unsigned __int8 *)(v12 + 36);
  v58 = *(unsigned __int8 *)(v12 + 38);
  v60 = *(unsigned __int8 *)(v12 + 37);
  v62 = *(unsigned __int8 *)(v12 + 41);
  HIDWORD(v66) = *(unsigned __int8 *)(v12 + 39);
  v64 = *(unsigned __int8 *)(v12 + 40);
  v70 = *(unsigned __int8 *)(v12 + 42);
  v72 = *(unsigned __int8 *)(v12 + 43);
  v74 = *(unsigned __int8 *)(v12 + 44);
  v76 = *(unsigned __int8 *)(v12 + 45);
  v68 = *(unsigned __int8 *)(v12 + 46);
  LODWORD(v66) = *(unsigned __int8 *)(v12 + 47);
  v13 = *(unsigned __int8 *)(v12 + 16);
  v125 = *(unsigned __int8 *)(v12 + 17);
  v14 = *(unsigned __int8 *)(v12 + 18);
  v124 = *(unsigned __int8 *)(v12 + 19);
  v15 = *(unsigned __int8 *)(v12 + 20);
  v123 = *(unsigned __int8 *)(v12 + 21);
  v16 = *(unsigned __int8 *)(v12 + 22);
  v122 = *(unsigned __int8 *)(v12 + 23);
  v17 = *(unsigned __int8 *)(v12 + 24);
  v121 = *(unsigned __int8 *)(v12 + 25);
  v18 = *(unsigned __int8 *)(v12 + 26);
  v120 = *(unsigned __int8 *)(v12 + 27);
  v19 = *(unsigned __int8 *)(v12 + 28);
  v119 = *(unsigned __int8 *)(v12 + 29);
  HIDWORD(v118) = *(unsigned __int8 *)(v12 + 30);
  LODWORD(v118) = *(unsigned __int8 *)(v12 + 31);
  HIDWORD(v78) = *(unsigned __int8 *)(v12 + 48);
  LODWORD(v78) = *(unsigned __int8 *)(v12 + 49);
  v135 = *(unsigned __int8 *)(v12 + 50);
  LODWORD(v92) = *(unsigned __int8 *)(v12 + 51);
  v96 = *(unsigned __int8 *)(v12 + 52);
  HIDWORD(v90) = *(unsigned __int8 *)(v12 + 53);
  HIDWORD(v92) = *(unsigned __int8 *)(v12 + 54);
  HIDWORD(v42) = *(unsigned __int8 *)(v12 + 55);
  LODWORD(v46) = *(unsigned __int8 *)(v12 + 56);
  LODWORD(v44) = *(unsigned __int8 *)(v12 + 57);
  HIDWORD(v46) = *(unsigned __int8 *)(v12 + 58);
  HIDWORD(v44) = *(unsigned __int8 *)(v12 + 59);
  HIDWORD(v40) = *(unsigned __int8 *)(v12 + 60);
  HIDWORD(v88) = *(unsigned __int8 *)(v12 + 61);
  LODWORD(v90) = *(unsigned __int8 *)(v12 + 62);
  LODWORD(v42) = *(unsigned __int8 *)(v12 + 63);
  v94 = *(unsigned __int8 *)(v12 + 64);
  v126 = *(unsigned __int16 *)(v12 + 66);
  LODWORD(v80) = *(unsigned __int16 *)(v12 + 68);
  if (static UniversalControlUUID.compare(lhs:rhs:)(v48 | (v50 << 8) | (v52 << 16) | (v54 << 24) | (v56 << 32) | (v60 << 40) | (v58 << 48) | ((unint64_t)*(unsigned __int8 *)(v12 + 39) << 56), v64 | (v62 << 8) | (v70 << 16) | (v72 << 24) | (v74 << 32) | (v76 << 40) | (v68 << 48) | ((unint64_t)*(unsigned __int8 *)(v12 + 47) << 56), v9 | (v8 << 24) | (v130 << 32) | (v129 << 40) | (*(_QWORD *)&v128[4] << 48) | (v2 << 56), v127 | (v139 << 8) | (v138 << 16) | (v137 << 24) | (v5 << 32) | (v6 << 40) | (v10 << 48) | (v11 << 56)) == -1)
    __asm { BR              X5 }
  HIDWORD(v99) = v127;
  v83 = __PAIR64__(v96, HIDWORD(v92));
  HIDWORD(v80) = HIDWORD(v40);
  v20 = v94;
  LODWORD(v94) = v126;
  HIDWORD(v92) = v136;
  v97 = v20;
  OUTLINED_FUNCTION_6_6();
  sub_24983769C();
  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_36_4();
  sub_2498376A8();
  v21 = sub_2498376C0();
  OUTLINED_FUNCTION_4_15(v21, v22, v23, v24, v25, v26, v27, v28, v38, v40, v42, v44, v46, v48, v50, v52, v54, v56, v58,
    v60,
    v62,
    v64,
    v66,
    v68,
    v70,
    v72,
    v74,
    v76,
    v78,
    v80,
    __SPAIR64__(v46, HIDWORD(v46)),
    v83,
    __SPAIR64__(HIDWORD(v78), v135),
    a1,
    v88,
    v90,
    v92,
    v94,
    v97,
    v99,
    *(uint64_t *)v128,
    __SPAIR64__(v129, v16),
    __SPAIR64__(v131, v130),
    __SPAIR64__(v133, v132),
    __SPAIR64__(v125, v134),
    v118,
    __SPAIR64__(v19, v119),
    __SPAIR64__(v18, v120),
    __SPAIR64__(v13, v121),
    __SPAIR64__(v122, v17),
    __SPAIR64__(v15, v123),
    __SPAIR64__(v14, v124),
    v74,
    SHIDWORD(v74),
    v68,
    SHIDWORD(v68),
    v76);
  v29 = sub_24983769C();
  OUTLINED_FUNCTION_4_15(v29, v30, v31, v32, v33, v34, v35, v36, v39, v41, v43, v45, v47, v49, v51, v53, v55, v57, v59,
    v61,
    v63,
    v65,
    v67,
    v69,
    v71,
    v73,
    v75,
    v77,
    v79,
    v81,
    v82,
    v84,
    v85,
    v87,
    v89,
    v91,
    v93,
    v95,
    v98,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117);
  OUTLINED_FUNCTION_36_4();
  OUTLINED_FUNCTION_36_4();
  sub_2498376A8();
  return sub_2498376C0();
}

void UniversalControlLink.hashValue.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_6();
  v0 = sub_249837690();
  OUTLINED_FUNCTION_40_3(v0);
  sub_2498376E4();
  OUTLINED_FUNCTION_47_2();
}

void sub_24978F4F4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_6();
  v0 = sub_249837690();
  OUTLINED_FUNCTION_40_3(v0);
  sub_2498376E4();
  OUTLINED_FUNCTION_47_2();
}

uint64_t Collection<>.links(for:where:)()
{
  return sub_249836E68();
}

{
  return sub_249836E68();
}

double sub_24978F5E4@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_BYTE *)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  double result;
  char *v17;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unint64_t v73;
  unsigned int v74;
  unint64_t v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  __int16 v85;
  _BYTE v86[66];
  __int16 v87;
  __int16 v88;
  unsigned int v89;
  unsigned int v90;

  v53 = a1[7];
  v42 = a1[16];
  v40 = a1[17];
  v41 = a1[18];
  v44 = a1[19];
  v46 = a1[20];
  v45 = a1[21];
  v59 = a1[1];
  v60 = *a1;
  v57 = a1[3];
  v58 = a1[2];
  v55 = a1[5];
  v56 = a1[4];
  v54 = a1[6];
  v51 = a1[10];
  v52 = a1[8];
  v37 = a1[9];
  v38 = a1[11];
  v49 = a1[13];
  v50 = a1[12];
  v47 = a1[14];
  v5 = a1[15];
  v36 = a1[22];
  v39 = a1[23];
  v6 = a1[24];
  v7 = a1[25];
  v8 = a1[26];
  v9 = a1[27];
  v10 = a1[28];
  v11 = a1[29];
  v12 = a1[30];
  v13 = a1[31];
  v26 = a1[32];
  v27 = a1[33];
  v23 = a1[34];
  v25 = a1[35];
  v21 = a1[36];
  v61 = a1[37];
  v77 = a1[38];
  v62 = a1[39];
  v78 = a1[40];
  v63 = a1[41];
  v80 = a1[42];
  v69 = a1[43];
  v82 = a1[44];
  v64 = a1[45];
  v72 = a1[46];
  v65 = a1[47];
  v74 = a1[48];
  v66 = a1[49];
  v76 = a1[50];
  v67 = a1[51];
  v68 = a1[52];
  v29 = a1[53];
  v70 = a1[54];
  v79 = a1[55];
  v24 = a1[56];
  v22 = a1[57];
  v20 = a1[58];
  v28 = a1[59];
  v71 = a1[60];
  v83 = a1[61];
  v81 = a1[62];
  v84 = a1[63];
  v32 = a1[64];
  v35 = *((unsigned __int16 *)a1 + 33);
  v85 = *((_WORD *)a1 + 34);
  if (static UniversalControlUUID.compare(lhs:rhs:)(v60 | (v59 << 8) | (v58 << 16) | (v57 << 24) | (v56 << 32) | (v55 << 40) | (v54 << 48) | (v53 << 56), v52 | (v37 << 8) | (v51 << 16) | (v38 << 24) | (v50 << 32) | (v49 << 40) | (v47 << 48) | (v5 << 56), a2, a3))
  {
    v17 = (char *)&loc_24978F978 + 4 * byte_24983AEC8[v32];
    v89 = v27;
    v90 = v26;
    __asm { BR              X8 }
  }
  v90 = v60;
  v89 = v59;
  v14 = v47;
  v33 = v42;
  v34 = v10;
  v48 = v72;
  v43 = v74;
  v15 = v14;
  v75 = v60 | ((unint64_t)v59 << 8) | ((unint64_t)v58 << 16) | ((unint64_t)v57 << 24) | (v56 << 32) | (v55 << 40) | (v54 << 48) | (v53 << 56);
  v73 = v52 | ((unint64_t)v37 << 8) | ((unint64_t)v51 << 16) | ((unint64_t)v38 << 24) | (v50 << 32) | (v49 << 40) | (v14 << 48) | (v5 << 56);
  if (static UniversalControlUUID.compare(lhs:rhs:)(v75, v73, a2, a3))
    goto LABEL_6;
  v86[0] = v90;
  v86[1] = v89;
  v86[2] = v58;
  v86[3] = v57;
  v86[4] = v56;
  v86[5] = v55;
  v86[6] = v54;
  v86[7] = v53;
  v86[8] = v52;
  v86[9] = v37;
  v86[10] = v51;
  v86[11] = v38;
  v86[12] = v50;
  v86[13] = v49;
  v86[14] = v15;
  v86[15] = v5;
  v86[16] = v33;
  v86[17] = v40;
  v86[18] = v41;
  v86[19] = v44;
  v86[20] = v46;
  v86[21] = v45;
  v86[22] = v36;
  v86[23] = v39;
  v86[24] = v6;
  v86[25] = v7;
  v86[26] = v8;
  v86[27] = v9;
  v86[28] = v34;
  v86[29] = v11;
  v86[30] = v12;
  v86[31] = v13;
  v86[32] = v26;
  v86[33] = v27;
  v86[34] = v23;
  v86[35] = v25;
  v86[36] = v21;
  v86[37] = v61;
  v86[38] = v77;
  v86[39] = v62;
  v86[40] = v78;
  v86[41] = v63;
  v86[42] = v80;
  v86[43] = v69;
  v86[44] = v82;
  v86[45] = v64;
  v86[46] = v48;
  v86[47] = v65;
  v86[48] = v43;
  v86[49] = v66;
  v86[50] = v76;
  v86[51] = v67;
  v86[52] = v68;
  v86[53] = v29;
  v86[54] = v70;
  v86[55] = v79;
  v86[56] = v24;
  v86[57] = v22;
  v86[58] = v20;
  v86[59] = v28;
  v86[60] = v71;
  v86[61] = v83;
  v86[62] = v81;
  v86[63] = v84;
  v86[64] = v32;
  v87 = v35;
  v88 = v85;
  if ((a4(v86) & 1) == 0)
  {
LABEL_6:
    result = 0.0;
    *(_OWORD *)(a5 + 32) = 0u;
    *(_OWORD *)(a5 + 48) = 0u;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
    *(_WORD *)(a5 + 68) = 0;
    *(_DWORD *)(a5 + 64) = 4;
  }
  else
  {
    *(_QWORD *)a5 = v75;
    *(_QWORD *)(a5 + 8) = v73;
    *(_DWORD *)(a5 + 64) = v32 | (v35 << 16);
    *(_WORD *)(a5 + 68) = v85;
    *(_QWORD *)(a5 + 16) = v33 | ((unint64_t)v40 << 8) | ((unint64_t)v41 << 16) | ((unint64_t)v44 << 24) | (v46 << 32) | (v45 << 40) | (v36 << 48) | (v39 << 56);
    *(_QWORD *)(a5 + 24) = v6 | ((unint64_t)v7 << 8) | ((unint64_t)v8 << 16) | ((unint64_t)v9 << 24) | (v34 << 32) | (v11 << 40) | (v12 << 48) | (v13 << 56);
    *(_QWORD *)(a5 + 32) = v26 | ((unint64_t)v27 << 8) | ((unint64_t)v23 << 16) | ((unint64_t)v25 << 24) | ((unint64_t)v21 << 32) | ((unint64_t)v61 << 40) | ((unint64_t)v77 << 48) | ((unint64_t)v62 << 56);
    *(_QWORD *)(a5 + 40) = v78 | ((unint64_t)v63 << 8) | ((unint64_t)v80 << 16) | ((unint64_t)v69 << 24) | ((unint64_t)v82 << 32) | ((unint64_t)v64 << 40) | (v48 << 48) | ((unint64_t)v65 << 56);
    *(_QWORD *)(a5 + 48) = v43 | ((unint64_t)v66 << 8) | ((unint64_t)v76 << 16) | ((unint64_t)v67 << 24) | ((unint64_t)v68 << 32) | ((unint64_t)v29 << 40) | ((unint64_t)v70 << 48) | ((unint64_t)v79 << 56);
    *(_QWORD *)(a5 + 56) = v24 | ((unint64_t)v22 << 8) | ((unint64_t)v20 << 16) | ((unint64_t)v28 << 24) | ((unint64_t)v71 << 32) | ((unint64_t)v83 << 40) | ((unint64_t)v81 << 48) | ((unint64_t)v84 << 56);
  }
  return result;
}

uint64_t Collection<>.links(for:)()
{
  uint64_t v1;

  v1 = Collection<>.links(for:where:)();
  swift_bridgeObjectRetain();
  sub_249789FB8(&v1);
  OUTLINED_FUNCTION_23_1();
  return v1;
}

BOOL sub_24979039C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;

  v7 = a1[2];
  v8 = a1[3];
  return !static UniversalControlUUID.compare(lhs:rhs:)(*a1, a1[1], a2, a3)
      && static UniversalControlUUID.compare(lhs:rhs:)(v7, v8, a4, a5) == 0;
}

unint64_t sub_249790404()
{
  unint64_t result;

  result = qword_2578814C0;
  if (!qword_2578814C0)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983B204, &type metadata for UniversalControlLink.Endpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2578814C0);
  }
  return result;
}

unint64_t sub_249790440()
{
  unint64_t result;

  result = qword_2578814C8;
  if (!qword_2578814C8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlAnchor, &type metadata for UniversalControlAnchor);
    atomic_store(result, (unint64_t *)&qword_2578814C8);
  }
  return result;
}

unint64_t sub_24979047C()
{
  unint64_t result;

  result = qword_2578814D8;
  if (!qword_2578814D8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlAnchor, &type metadata for UniversalControlAnchor);
    atomic_store(result, (unint64_t *)&qword_2578814D8);
  }
  return result;
}

unint64_t sub_2497904B8()
{
  unint64_t result;

  result = qword_2578814E0;
  if (!qword_2578814E0)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlLink.Endpoint, &type metadata for UniversalControlLink.Endpoint);
    atomic_store(result, (unint64_t *)&qword_2578814E0);
  }
  return result;
}

unint64_t sub_2497904F4()
{
  unint64_t result;

  result = qword_2578814E8;
  if (!qword_2578814E8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlLink.Endpoint, &type metadata for UniversalControlLink.Endpoint);
    atomic_store(result, (unint64_t *)&qword_2578814E8);
  }
  return result;
}

double sub_249790530@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24978F5E4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(uint64_t (**)(_BYTE *))(v2 + 32), a2);
}

BOOL sub_24979054C(uint64_t *a1)
{
  uint64_t *v1;

  return sub_24979039C(a1, v1[2], v1[3], v1[4], v1[5]);
}

unint64_t sub_24979055C()
{
  unint64_t result;

  result = qword_2578814F8;
  if (!qword_2578814F8)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlLink.Endpoint, &type metadata for UniversalControlLink.Endpoint);
    atomic_store(result, (unint64_t *)&qword_2578814F8);
  }
  return result;
}

unint64_t sub_24979059C()
{
  unint64_t result;

  result = qword_257881500;
  if (!qword_257881500)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlLink, &type metadata for UniversalControlLink);
    atomic_store(result, (unint64_t *)&qword_257881500);
  }
  return result;
}

void *__swift_memcpy70_2(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x46uLL);
}

uint64_t getEnumTagSinglePayload for UniversalControlLink(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 70))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 64);
      v4 = v3 >= 4;
      v2 = v3 - 4;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlLink(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 68) = 0;
    *(_DWORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 70) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 70) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlLink()
{
  return &type metadata for UniversalControlLink;
}

__n128 __swift_memcpy36_2(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UniversalControlLink.Endpoint(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 36))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      v4 = v3 >= 4;
      v2 = v3 - 4;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlLink.Endpoint(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 36) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 36) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlLink.Endpoint()
{
  return &type metadata for UniversalControlLink.Endpoint;
}

uint64_t getEnumTagSinglePayload for UniversalControlLink.Endpoint.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlLink.Endpoint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_249790804 + 4 * byte_24983AED1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_249790838 + 4 * byte_24983AECC[v4]))();
}

uint64_t sub_249790838(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_249790840(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x249790848);
  return result;
}

uint64_t sub_249790854(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24979085CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_249790860(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_249790868(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlLink.Endpoint.CodingKeys()
{
  return &type metadata for UniversalControlLink.Endpoint.CodingKeys;
}

unint64_t sub_249790888()
{
  unint64_t result;

  result = qword_257881508;
  if (!qword_257881508)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983B1DC, &type metadata for UniversalControlLink.Endpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881508);
  }
  return result;
}

unint64_t sub_2497908C8()
{
  unint64_t result;

  result = qword_257881510;
  if (!qword_257881510)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983B14C, &type metadata for UniversalControlLink.Endpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881510);
  }
  return result;
}

unint64_t sub_249790908()
{
  unint64_t result;

  result = qword_257881518;
  if (!qword_257881518)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983B174, &type metadata for UniversalControlLink.Endpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881518);
  }
  return result;
}

uint64_t sub_249790944(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  unsigned int v53;
  char v54;
  char v55;
  char v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  unsigned __int8 *v68;
  uint64_t v69;
  unsigned __int8 *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  char v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  int v127;
  uint64_t v128;
  unsigned __int16 *v129;
  uint64_t v130;
  unsigned __int8 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unsigned __int16 *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int v175;
  char v176;
  int v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  char *v200;
  char *v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  BOOL v213;
  unint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  BOOL v223;
  uint64_t v224;
  char v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  BOOL v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  char *v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unsigned __int16 *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  int v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  unsigned __int8 v297;
  uint64_t v298;
  uint64_t v299;
  unsigned int v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  unsigned __int8 v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  int v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  int v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  unsigned __int8 v444;
  int v445;
  uint64_t v446;
  unsigned __int8 v447;
  int v448;
  unsigned __int8 v449;
  uint64_t v450;
  int v451;
  unsigned __int8 v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  unsigned __int8 v456;
  uint64_t v457;
  uint64_t v458;
  unsigned int v459;
  uint64_t v460;
  uint64_t v461;
  unsigned __int8 v462;
  uint64_t v463;
  uint64_t v464;
  unsigned __int8 v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  int v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  int v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  int v522;
  uint64_t v523;
  uint64_t v524;
  int v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  int v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  int v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  int v574;
  uint64_t v575;
  uint64_t v576;
  unsigned int v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  unint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  int8x16_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  __int128 v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  int v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  unsigned __int16 v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  unsigned int v685;
  __int128 v686;
  uint64_t v687;
  uint64_t v688;
  unsigned int v689;
  uint64_t v690;
  unsigned int v691;
  unsigned int v692;
  __int128 v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  __int128 v700;
  uint64_t v701;
  unsigned int v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  __int128 v709;
  unsigned __int8 v710;
  uint64_t v711;
  unsigned __int8 v712;
  unsigned __int8 __s2;
  char v714;
  char v715;
  char v716;
  char v717;
  char v718;
  char v719;
  char v720;
  char v721;
  char v722;
  char v723;
  char v724;
  char v725;
  char v726;
  char v727;
  char v728;
  char __s1;
  char v730;
  char v731;
  char v732;
  char v733;
  char v734;
  char v735;
  char v736;
  char v737;
  unsigned __int8 v738;
  char v739;
  char v740;
  char v741;
  char v742;
  char v743;
  char v744;
  uint64_t v745;

  v745 = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  result = sub_249837534();
  if (result < v3)
  {
    v5 = result;
    v265 = v1;
    sub_24974CF94(v3 / 2);
    v257 = v6;
    v264 = v7;
    v261 = v3;
    v255 = a1;
    if (v3 <= 0)
    {
      v9 = (char *)MEMORY[0x24BEE4AF8];
      v199 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      goto LABEL_166;
    }
    v256 = v5;
    v8 = 0;
    v269 = *a1;
    v253 = *a1 + 68;
    v254 = *a1 + 34;
    v9 = (char *)MEMORY[0x24BEE4AF8];
LABEL_4:
    v10 = v8 + 1;
    v262 = v8;
    if (v8 + 1 >= v3)
    {
      v43 = v269;
      v44 = v8;
      goto LABEL_76;
    }
    v258 = v9;
    v272 = v8 + 1;
    v11 = (unsigned __int8 *)(v269 + 70 * v10);
    v673 = *v11;
    v12 = v11[1];
    v13 = v11[2];
    v14 = v11[3];
    v683 = v11[4];
    v678 = v11[5];
    v15 = v11[6];
    v16 = v11[7];
    v540 = v11[8];
    v538 = v11[9];
    v537 = v11[10];
    v535 = v11[11];
    v17 = v11[12];
    v18 = v11[13];
    v19 = v11[14];
    v20 = v11[15];
    v470 = v11[16];
    v466 = v11[17];
    v473 = v11[18];
    v427 = v11[19];
    v425 = v11[20];
    v422 = v11[21];
    v418 = v11[22];
    v415 = v11[23];
    v463 = v11[24];
    v460 = v11[25];
    v411 = v11[26];
    v408 = v11[27];
    v405 = v11[28];
    v402 = v11[29];
    v399 = v11[30];
    v396 = v11[31];
    v21 = v11[32];
    v22 = v11[33];
    v23 = v11[34];
    v24 = v11[35];
    v25 = v11[36];
    v26 = v11[37];
    v27 = v11[38];
    v28 = v11[39];
    v29 = v11[40];
    v30 = v11[41];
    v31 = v11[42];
    v32 = v11[43];
    v33 = v11[44];
    v34 = v11[45];
    v35 = v11[46];
    v36 = v11[47];
    v326 = v11[48];
    v543 = v11[49];
    v323 = v11[50];
    v320 = v11[51];
    v317 = v11[52];
    v544 = v11[53];
    v314 = v11[54];
    v311 = v11[55];
    v308 = v11[56];
    v556 = v11[57];
    v305 = v11[58];
    v568 = v11[59];
    v303 = v11[60];
    v565 = v11[61];
    v301 = v11[62];
    v571 = v11[63];
    v298 = v11[64];
    v445 = *((unsigned __int16 *)v11 + 33);
    v574 = *((unsigned __int16 *)v11 + 34);
    v37 = (unsigned __int8 *)(v269 + 70 * v8);
    v533 = *v37;
    v531 = v37[1];
    v529 = v37[2];
    v526 = v37[3];
    v523 = v37[4];
    v520 = v37[5];
    v518 = v37[6];
    v516 = v37[7];
    v669 = v37[8];
    v513 = v37[9];
    v665 = v37[10];
    v660 = v37[11];
    v654 = v37[12];
    v649 = v37[13];
    v645 = v37[14];
    v641 = v37[15];
    v442 = v37[16];
    v439 = v37[17];
    v393 = v37[18];
    v390 = v37[19];
    v386 = v37[20];
    v382 = v37[21];
    v379 = v37[22];
    v376 = v37[23];
    v436 = v37[24];
    v433 = v37[25];
    v373 = v37[26];
    v370 = v37[27];
    v367 = v37[28];
    v364 = v37[29];
    v361 = v37[30];
    v358 = v37[31];
    v589 = v37[32];
    v592 = v37[33];
    v595 = v37[34];
    v598 = v37[35];
    v601 = v37[36];
    v604 = v37[37];
    v607 = v37[38];
    v610 = v37[39];
    v613 = v37[40];
    v616 = v37[41];
    v620 = v37[42];
    v624 = v37[43];
    v628 = v37[44];
    v631 = v37[45];
    v634 = v37[46];
    v637 = v37[47];
    v476 = v37[48];
    v479 = v37[49];
    v482 = v37[50];
    v486 = v37[51];
    v489 = v37[52];
    v343 = v37[53];
    v492 = v37[54];
    v345 = v37[55];
    v346 = v37[56];
    v347 = v37[57];
    v348 = v37[58];
    v349 = v37[59];
    v350 = v37[60];
    v351 = v37[61];
    v352 = v37[62];
    v354 = v23;
    v494 = v37[63];
    v339 = v25;
    v341 = v37[64];
    v430 = *((unsigned __int16 *)v37 + 33);
    v497 = *((unsigned __int16 *)v37 + 34);
    __s1 = v21;
    v730 = v22;
    v731 = v23;
    v559 = v24;
    v732 = v24;
    v733 = v25;
    v561 = v26;
    v734 = v26;
    v335 = v27;
    v337 = v29;
    v735 = v27;
    v736 = v28;
    v737 = v29;
    v738 = v30;
    v328 = v31;
    v331 = v35;
    v739 = v31;
    v553 = v32;
    v740 = v32;
    v333 = v33;
    v741 = v33;
    v546 = v34;
    v742 = v34;
    v743 = v35;
    v548 = v36;
    v744 = v36;
    __s2 = v673;
    v453 = v12;
    v714 = v12;
    v450 = v13;
    v715 = v13;
    v716 = v14;
    v717 = v683;
    v718 = v678;
    v457 = v15;
    v719 = v15;
    v38 = v16;
    v720 = v16;
    v721 = v540;
    v722 = v538;
    v723 = v537;
    v724 = v535;
    v39 = v17;
    v725 = v17;
    v40 = v18;
    v726 = v18;
    v41 = v19;
    v727 = v19;
    v42 = v20;
    v728 = v20;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      __asm { BR              X4 }
    v511 = v673;
    v509 = v453;
    v580 = v41;
    v674 = v21;
    v454 = v22;
    v271 = v28;
    __s1 = v589;
    v730 = v592;
    v731 = v595;
    v732 = v598;
    v733 = v601;
    v734 = v604;
    v735 = v607;
    v736 = v610;
    v737 = v613;
    v738 = v616;
    v739 = v620;
    v740 = v624;
    v741 = v628;
    v742 = v631;
    v743 = v634;
    v744 = v637;
    __s2 = v533;
    v714 = v531;
    v715 = v529;
    v716 = v526;
    v717 = v523;
    v718 = v520;
    v719 = v518;
    v720 = v516;
    v721 = v669;
    v722 = v513;
    v723 = v665;
    v724 = v660;
    v725 = v654;
    v726 = v649;
    v727 = v645;
    v728 = v641;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      __asm { BR              X8 }
    __s1 = v511;
    v730 = v509;
    v731 = v450;
    v732 = v14;
    v733 = v683;
    v734 = v678;
    v735 = v457;
    v736 = v38;
    v737 = v540;
    v738 = v538;
    v739 = v537;
    v740 = v535;
    v741 = v39;
    v742 = v40;
    v743 = v41;
    v744 = v42;
    __s2 = v533;
    v714 = v531;
    v715 = v529;
    v716 = v526;
    v717 = v523;
    v718 = v520;
    v719 = v518;
    v720 = v516;
    v721 = v669;
    v722 = v513;
    v723 = v665;
    v724 = v660;
    v725 = v654;
    v726 = v649;
    v727 = v645;
    v728 = v641;
    if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
    {
      v45 = v533 | (v531 << 8) | (v529 << 16) | (v526 << 24) | (v523 << 32) | (v520 << 40) | (v518 << 48) | (v516 << 56);
      v46 = v511 | (v509 << 8) | (v450 << 16) | (v14 << 24) | (v683 << 32) | (v678 << 40) | (v457 << 48) | (v38 << 56);
      v47 = v669 | (v513 << 8) | (v665 << 16) | (v660 << 24) | (v654 << 32) | (v649 << 40) | (v645 << 48) | (v641 << 56);
      v48 = v540 | (v538 << 8) | (v537 << 16) | (v535 << 24) | (v39 << 32) | (v40 << 40) | (v580 << 48) | (v42 << 56);
      v49 = v442 | (v439 << 8);
      v50 = v436 | (v433 << 8);
      v51 = v470 | (v466 << 8);
      v704 = v463 | (v460 << 8);
      v52 = v341 | (v430 << 16);
      v53 = v298 | (v445 << 16);
      if (static UniversalControlUUID.compare(lhs:rhs:)(v45, v47, v46, v48) == -1
        || ((sub_249772148(v46, v48, v45, v47), v54 == 2)
         && (sub_249772148(v51 | (v473 << 16) | (v427 << 24) | (v425 << 32) | (v422 << 40) | (v418 << 48) | (v415 << 56), v704 | (v411 << 16) | (v408 << 24) | (v405 << 32) | (v402 << 40) | (v399 << 48) | (v396 << 56), v49 | (v393 << 16) | (v390 << 24) | (v386 << 32) | (v382 << 40) | (v379 << 48) | (v376 << 56), v50 | (v373 << 16) | (v370 << 24) | (v367 << 32) | (v364 << 40) | (v361 << 48) | (v358 << 56)), v54 == 2)|| (v54 & 1) == 0)&& (((sub_249772148(v45, v47, v46, v48), v55 != 2)|| (sub_249772148(v49 | (v393 << 16) | (v390 << 24) | (v386 << 32) | (v382 << 40) | (v379 << 48) | (v376 << 56), v50 | (v373 << 16) | (v370 << 24) | (v367 << 32) | (v364 << 40) | (v361 << 48) | (v358 << 56), v51 | (v473 << 16) | (v427 << 24) | (v425 << 32) | (v422 << 40) | (v418 << 48) | (v415 << 56), v704 | (v411 << 16) | (v408 << 24) | (v405 << 32) | (v402 << 40) | (v399 << 48) | (v396 << 56)), v55 != 2))&& (v55 & 1) != 0|| (sub_24978B990(v53, v52) & 1) == 0))
      {
        if (static UniversalControlUUID.compare(lhs:rhs:)(v45, v47, v46, v48) == -1
          || static UniversalControlUUID.compare(lhs:rhs:)(v46, v48, v45, v47) != -1
          && ((v56 = sub_24978B8C8(v45, v47, v49 | (v393 << 16) | (v390 << 24) | (v386 << 32) | (v382 << 40) | (v379 << 48) | (v376 << 56), v50 | (v373 << 16) | (v370 << 24) | (v367 << 32) | (v364 << 40) | (v361 << 48) | (v358 << 56), v46, v48, v51 | (v473 << 16) | (v427 << 24) | (v425 << 32) | (v422 << 40) | (v418 << 48) | (v415 << 56), v704 | (v411 << 16) | (v408 << 24) | (v405 << 32) | (v402 << 40) | (v399 << 48) | (v396 << 56)), v56 != 2)|| (v56 = sub_24978B990(v52, v53), v56 != 2))&& (v56 & 1) != 0)
        {
          v3 = v261;
          v10 = v262 + 2;
          if (v262 + 2 >= v261)
            goto LABEL_65;
LABEL_37:
          v270 = 0;
LABEL_38:
          v43 = v269;
          v68 = (unsigned __int8 *)(v254 + 70 * v10);
          v69 = v272;
          while (1)
          {
            v70 = (unsigned __int8 *)(v43 + 70 * v69);
            v587 = *v70;
            v584 = v70[1];
            v274 = v10;
            v581 = v70[2];
            v578 = v70[3];
            v575 = v70[4];
            v572 = v70[5];
            v569 = v70[6];
            v566 = v70[7];
            v684 = v70[8];
            v679 = v70[9];
            v675 = v70[10];
            v670 = v70[11];
            v666 = v70[12];
            v661 = v70[13];
            v655 = v70[14];
            v650 = v70[15];
            v464 = v70[16];
            v461 = v70[17];
            v426 = v70[18];
            v423 = v70[19];
            v419 = v70[20];
            v416 = v70[21];
            v412 = v70[22];
            v409 = v70[23];
            v458 = v70[24];
            v455 = v70[25];
            v406 = v70[26];
            v403 = v70[27];
            v400 = v70[28];
            v397 = v70[29];
            v394 = v70[30];
            v391 = v70[31];
            v590 = v70[32];
            v593 = v70[33];
            v596 = v70[34];
            v599 = v70[35];
            v602 = v70[36];
            v605 = v70[37];
            v608 = v70[38];
            v611 = v70[39];
            v614 = v70[40];
            v617 = v70[41];
            v621 = v70[42];
            v625 = v70[43];
            v629 = v70[44];
            v690 = v70[45];
            v697 = v70[46];
            v706 = v70[47];
            v278 = v70[48];
            v280 = v70[49];
            v282 = v70[50];
            v284 = v70[51];
            v519 = v70[52];
            v521 = v70[53];
            v524 = v70[54];
            v527 = v70[55];
            v286 = v70[56];
            v288 = v70[57];
            v290 = v70[58];
            v292 = v70[59];
            v294 = v70[60];
            v295 = v70[61];
            v296 = v70[62];
            v299 = v70[63];
            v276 = v70[64];
            v451 = *((unsigned __int16 *)v70 + 33);
            v562 = *((unsigned __int16 *)v70 + 34);
            v71 = *(v68 - 34);
            v72 = *(v68 - 33);
            v73 = *(v68 - 32);
            v74 = *(v68 - 31);
            v75 = *(v68 - 30);
            v76 = *(v68 - 29);
            v77 = *(v68 - 28);
            v78 = *(v68 - 27);
            v79 = *(v68 - 26);
            v80 = *(v68 - 25);
            v81 = *(v68 - 24);
            v632 = *(v68 - 23);
            v635 = *(v68 - 22);
            v638 = *(v68 - 21);
            v642 = *(v68 - 20);
            v646 = *(v68 - 19);
            v446 = *(v68 - 18);
            v443 = *(v68 - 17);
            v356 = *(v68 - 16);
            v359 = *(v68 - 15);
            v362 = *(v68 - 14);
            v365 = *(v68 - 13);
            v371 = *(v68 - 12);
            v377 = *(v68 - 11);
            v440 = *(v68 - 10);
            v437 = *(v68 - 9);
            v368 = *(v68 - 8);
            v374 = *(v68 - 7);
            v380 = *(v68 - 6);
            v383 = *(v68 - 5);
            v387 = *(v68 - 4);
            v467 = *(v68 - 3);
            v82 = *v68;
            v83 = v68[1];
            v84 = v68[2];
            v85 = v68[3];
            v86 = v68[4];
            v87 = v68[5];
            v88 = v68[6];
            v89 = v68[7];
            v90 = v68[8];
            v91 = v68[9];
            v92 = v68[10];
            v93 = v68[11];
            v94 = v68[12];
            v95 = v68[13];
            v507 = v68[14];
            v329 = v68[15];
            v510 = v68[16];
            v332 = v68[17];
            v503 = v68[18];
            v334 = v68[19];
            v336 = v68[20];
            v338 = v68[21];
            v501 = v68[22];
            v471 = v68[23];
            v504 = v68[24];
            v474 = v68[25];
            v505 = v68[26];
            v477 = v68[27];
            v480 = v68[28];
            v483 = v68[29];
            v517 = v68[30];
            v448 = *((unsigned __int16 *)v68 + 16);
            v514 = *((unsigned __int16 *)v68 + 17);
            v306 = *(v68 - 2);
            v309 = *(v68 - 1);
            __s1 = *(v68 - 2);
            v730 = v309;
            v487 = v82;
            v731 = v82;
            v312 = v83;
            v315 = v85;
            v732 = v83;
            v490 = v84;
            v733 = v84;
            v734 = v85;
            v735 = v86;
            v318 = v87;
            v321 = v89;
            v736 = v87;
            v495 = v88;
            v737 = v88;
            v738 = v89;
            v498 = v90;
            v739 = v90;
            v324 = v91;
            v327 = v95;
            v740 = v91;
            v499 = v92;
            v741 = v92;
            v500 = v93;
            v742 = v93;
            v512 = v94;
            v743 = v94;
            v744 = v95;
            v431 = v71;
            __s2 = v71;
            v428 = v72;
            v714 = v72;
            v96 = v73;
            v715 = v73;
            v97 = v74;
            v716 = v74;
            v98 = v75;
            v717 = v75;
            v99 = v76;
            v718 = v76;
            v100 = v77;
            v719 = v77;
            v101 = v78;
            v720 = v78;
            v434 = v79;
            v721 = v79;
            v722 = v80;
            v723 = v81;
            v724 = v632;
            v725 = v635;
            v726 = v638;
            v727 = v642;
            v728 = v646;
            if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
              __asm { BR              X26 }
            v557 = v97;
            v554 = v98;
            v550 = v101;
            v344 = v383;
            v342 = v387;
            v340 = v467;
            v384 = v477;
            v388 = v480;
            v468 = v483;
            __s1 = v590;
            v730 = v593;
            v731 = v596;
            v732 = v599;
            v733 = v602;
            v734 = v605;
            v735 = v608;
            v736 = v611;
            v737 = v614;
            v738 = v617;
            v739 = v621;
            v740 = v625;
            v741 = v629;
            v742 = v690;
            v743 = v697;
            v744 = v706;
            __s2 = v587;
            v714 = v584;
            v715 = v581;
            v716 = v578;
            v717 = v575;
            v718 = v572;
            v719 = v569;
            v720 = v566;
            v721 = v684;
            v722 = v679;
            v723 = v675;
            v724 = v670;
            v725 = v666;
            v726 = v661;
            v727 = v655;
            v728 = v650;
            if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
              __asm { BR              X16 }
            v484 = v661;
            v481 = v655;
            v478 = v650;
            v662 = v690;
            v651 = v706;
            v656 = v697;
            v102 = v431 | (v428 << 8) | (v96 << 16) | (v97 << 24) | (v98 << 32) | (v99 << 40) | (v77 << 48) | (v101 << 56);
            v103 = v434 | (v80 << 8) | (v81 << 16) | (v632 << 24) | (v635 << 32) | (v638 << 40) | (v642 << 48) | (v646 << 56);
            v104 = v587 | (v584 << 8) | (v581 << 16) | (v578 << 24) | (v575 << 32) | (v572 << 40) | (v569 << 48) | (v566 << 56);
            v105 = v684 | (v679 << 8) | (v675 << 16) | (v670 << 24) | (v666 << 32) | (v484 << 40) | (v481 << 48) | (v478 << 56);
            v106 = sub_24978B870(v431 | (v428 << 8) | (v96 << 16) | (v557 << 24) | (v554 << 32) | (v99 << 40) | (v100 << 48) | (v550 << 56), v103, v104, v105);
            v698 = v446 | (v443 << 8);
            v707 = v440 | (v437 << 8);
            v107 = v464 | (v461 << 8);
            v108 = v458 | (v455 << 8);
            v691 = v517 | (v448 << 16);
            v109 = v276 | (v451 << 16);
            if (v106 == 2
              && (v106 = sub_24978B8C8(v102, v103, v698 | (v356 << 16) | (v359 << 24) | (v362 << 32) | (v365 << 40) | (v371 << 48) | (v377 << 56), v707 | (v368 << 16) | (v374 << 24) | (v380 << 32) | (v344 << 40) | (v342 << 48) | (v340 << 56), v104, v105, v107 | (v426 << 16) | (v423 << 24) | (v419 << 32) | (v416 << 40) | (v412 << 48) | (v409 << 56), v108 | (v406 << 16) | (v403 << 24) | (v400 << 32) | (v397 << 40) | (v394 << 48) | (v391 << 56)), v106 == 2)&& (v106 = sub_24978B990(v691, v109), v106 == 2)|| (v106 & 1) == 0)
            {
              v110 = sub_24978B870(v104, v105, v102, v103);
              if (v110 != 2
                || (v110 = sub_24978B8C8(v104, v105, v107 | (v426 << 16) | (v423 << 24) | (v419 << 32) | (v416 << 40) | (v412 << 48) | (v409 << 56), v108 | (v406 << 16) | (v403 << 24) | (v400 << 32) | (v397 << 40) | (v394 << 48) | (v391 << 56), v102, v103, v698 | (v356 << 16) | (v359 << 24) | (v362 << 32) | (v365 << 40) | (v371 << 48) | (v377 << 56), v707 | (v368 << 16) | (v374 << 24) | (v380 << 32) | (v344 << 40) | (v342 << 48) | (v340 << 56)), v110 != 2)|| (v110 = sub_24978B990(v109, v691), v110 != 2))
              {
                if ((v110 & 1) != 0)
                {
                  v3 = v261;
                  goto LABEL_61;
                }
              }
              v111 = dword_24983AE80[(char)v517];
              v112 = dword_24983AE80[(char)v276];
              v113 = v306 | (v309 << 8) | (v487 << 16) | (v312 << 24) | (v490 << 32) | (v315 << 40) | (v86 << 48) | (v318 << 56);
              v114 = v495 | (v321 << 8) | (v498 << 16) | (v324 << 24) | (v499 << 32) | (v500 << 40) | (v512 << 48) | (v327 << 56);
              v115 = v590 | (v593 << 8) | (v596 << 16) | (v599 << 24) | (v602 << 32) | (v605 << 40) | (v608 << 48) | (v611 << 56);
              v116 = v614 | (v617 << 8) | (v621 << 16) | (v625 << 24) | (v629 << 32) | (v662 << 40) | (v656 << 48) | (v651 << 56);
              v117 = sub_24978B870(v113, v114, v115, v116);
              v699 = v507 | (v329 << 8);
              v708 = v501 | (v471 << 8);
              v118 = v278 | (v280 << 8);
              v119 = v286 | (v288 << 8);
              v120 = v111 | (v514 << 16);
              v692 = v112 | (v562 << 16);
              if (v117 == 2
                && (v117 = sub_24978B8C8(v113, v114, v699 | (v510 << 16) | (v332 << 24) | (v503 << 32) | (v334 << 40) | (v336 << 48) | (v338 << 56), v708 | (v504 << 16) | (v474 << 24) | (v505 << 32) | (v384 << 40) | (v388 << 48) | (v468 << 56), v115, v116, v118 | (v282 << 16) | (v284 << 24) | (v519 << 32) | (v521 << 40) | (v524 << 48) | (v527 << 56), v119 | (v290 << 16) | (v292 << 24) | (v294 << 32) | (v295 << 40) | (v296 << 48) | (v299 << 56)), v117 == 2)&& (v117 = sub_24978B990(v120, v692), v117 == 2)|| (v117 & 1) == 0)
              {
                v685 = v120;
                v3 = v261;
                if (sub_24978B870(v115, v116, v113, v114) == 2
                  && sub_24978B8C8(v115, v116, v118 | (v282 << 16) | (v284 << 24) | (v519 << 32) | (v521 << 40) | (v524 << 48) | (v527 << 56), v119 | (v290 << 16) | (v292 << 24) | (v294 << 32) | (v295 << 40) | (v296 << 48) | (v299 << 56), v113, v114, v699 | (v510 << 16) | (v332 << 24) | (v503 << 32) | (v334 << 40) | (v336 << 48) | (v338 << 56), v708 | (v504 << 16) | (v474 << 24) | (v505 << 32) | (v384 << 40) | (v388 << 48) | (v468 << 56)) == 2)
                {
                  sub_24978B990(v692, v685);
                }
LABEL_61:
                if ((v270 & 1) != 0)
                {
                  v10 = v274;
                  v9 = v258;
                  v43 = v269;
                  v44 = v262;
                  goto LABEL_68;
                }
                goto LABEL_62;
              }
            }
            v3 = v261;
            if ((v270 & 1) == 0)
            {
              v10 = v274;
LABEL_65:
              v9 = v258;
LABEL_66:
              v43 = v269;
              v44 = v262;
              goto LABEL_76;
            }
LABEL_62:
            v68 += 70;
            v69 = v274;
            v10 = v274 + 1;
            v43 = v269;
            if (v274 + 1 >= v3)
            {
              v9 = v258;
              v44 = v262;
              if (!v270)
                goto LABEL_76;
LABEL_68:
              if (v10 < v44)
                goto LABEL_204;
LABEL_69:
              if (v44 < v10)
              {
                v121 = 70 * v10;
                v266 = v10;
                v122 = v10;
                v123 = v44;
                v124 = 70 * v44;
                do
                {
                  if (v123 != --v122)
                  {
                    if (!v43)
                      goto LABEL_211;
                    v125 = v43 + v121;
                    v126 = *(_BYTE *)(v43 + v124 + 64);
                    v127 = *(_DWORD *)(v43 + v124 + 66);
                    v700 = *(_OWORD *)(v43 + v124 + 16);
                    v709 = *(_OWORD *)(v43 + v124);
                    v686 = *(_OWORD *)(v43 + v124 + 48);
                    v693 = *(_OWORD *)(v43 + v124 + 32);
                    memmove((void *)(v43 + v124), (const void *)(v43 + v121 - 70), 0x46uLL);
                    *(_OWORD *)(v125 - 70) = v709;
                    *(_OWORD *)(v125 - 54) = v700;
                    *(_OWORD *)(v125 - 38) = v693;
                    *(_OWORD *)(v125 - 22) = v686;
                    *(_BYTE *)(v125 - 6) = v126;
                    *(_DWORD *)(v125 - 4) = v127;
                  }
                  ++v123;
                  v121 -= 70;
                  v124 += 70;
                }
                while (v123 < v122);
                v3 = v261;
                v44 = v262;
                v10 = v266;
              }
LABEL_76:
              if (v10 < v3)
              {
                if (__OFSUB__(v10, v44))
                  goto LABEL_202;
                if (v10 - v44 < v256)
                {
                  if (__OFADD__(v44, v256))
                    goto LABEL_206;
                  if (v44 + v256 >= v3)
                    v128 = v3;
                  else
                    v128 = v44 + v256;
                  if (v128 >= v44)
                  {
                    if (v10 != v128)
                    {
                      v259 = v9;
                      v260 = v128;
                      v129 = (unsigned __int16 *)(v253 + 70 * v10);
                      do
                      {
                        v130 = v43 + 70 * v10;
                        v131 = *(_BYTE *)v130;
                        v132 = *(unsigned __int8 *)(v130 + 1);
                        v133 = *(unsigned __int8 *)(v130 + 2);
                        v134 = *(unsigned __int8 *)(v130 + 3);
                        v135 = *(unsigned __int8 *)(v130 + 4);
                        v136 = *(unsigned __int8 *)(v130 + 5);
                        v137 = *(unsigned __int8 *)(v130 + 6);
                        v138 = *(unsigned __int8 *)(v130 + 7);
                        v139 = *(unsigned __int8 *)(v130 + 8);
                        v140 = *(unsigned __int8 *)(v130 + 9);
                        v141 = *(unsigned __int8 *)(v130 + 10);
                        v142 = *(unsigned __int8 *)(v130 + 11);
                        v143 = *(unsigned __int8 *)(v130 + 12);
                        v144 = *(unsigned __int8 *)(v130 + 13);
                        v145 = *(unsigned __int8 *)(v130 + 14);
                        v146 = *(unsigned __int8 *)(v130 + 15);
                        v622 = *(unsigned __int8 *)(v130 + 16);
                        v542 = *(unsigned __int8 *)(v130 + 17);
                        v609 = *(unsigned __int8 *)(v130 + 18);
                        v404 = *(unsigned __int8 *)(v130 + 19);
                        v401 = *(unsigned __int8 *)(v130 + 20);
                        v398 = *(unsigned __int8 *)(v130 + 21);
                        v395 = *(unsigned __int8 *)(v130 + 22);
                        v392 = *(unsigned __int8 *)(v130 + 23);
                        v147 = *(_QWORD *)(v130 + 25);
                        v263 = v129;
                        v148 = v129;
                        v389 = *(_BYTE *)(v130 + 24);
                        v267 = v10;
                        while (1)
                        {
                          v618 = v147;
                          v657 = v143;
                          v663 = v142;
                          v541 = v144;
                          v667 = v140;
                          v539 = v145;
                          v671 = v139;
                          v676 = v138;
                          v680 = v134;
                          v687 = v133;
                          v701 = v132;
                          v710 = v131;
                          v694 = v135;
                          v273 = v44;
                          v149 = *((unsigned __int8 *)v148 - 35);
                          v150 = *((unsigned __int8 *)v148 - 34);
                          v151 = *((unsigned __int8 *)v148 - 33);
                          v152 = *((unsigned __int8 *)v148 - 32);
                          v153 = *((unsigned __int8 *)v148 - 31);
                          v154 = *((unsigned __int8 *)v148 - 30);
                          v155 = *((unsigned __int8 *)v148 - 29);
                          v156 = *((unsigned __int8 *)v148 - 28);
                          v157 = *((unsigned __int8 *)v148 - 27);
                          v158 = *((unsigned __int8 *)v148 - 26);
                          v159 = *((unsigned __int8 *)v148 - 25);
                          v160 = *((unsigned __int8 *)v148 - 24);
                          v161 = *((unsigned __int8 *)v148 - 23);
                          v162 = *((unsigned __int8 *)v148 - 22);
                          v163 = *((unsigned __int8 *)v148 - 21);
                          v413 = *((unsigned __int8 *)v148 - 20);
                          v307 = *((unsigned __int8 *)v148 - 19);
                          v407 = *((unsigned __int8 *)v148 - 18);
                          v304 = *((unsigned __int8 *)v148 - 17);
                          v435 = *((unsigned __int8 *)v148 - 16);
                          v302 = *((unsigned __int8 *)v148 - 15);
                          v441 = *((unsigned __int8 *)v148 - 14);
                          v300 = *((unsigned __int8 *)v148 - 13);
                          v444 = *((_BYTE *)v148 - 12);
                          v447 = *((_BYTE *)v148 - 11);
                          v449 = *((_BYTE *)v148 - 10);
                          v452 = *((_BYTE *)v148 - 9);
                          v462 = *((_BYTE *)v148 - 8);
                          v456 = *((_BYTE *)v148 - 7);
                          v465 = *((_BYTE *)v148 - 6);
                          v459 = *((unsigned __int8 *)v148 - 5);
                          v469 = *((unsigned __int8 *)v148 - 4);
                          v536 = *(v148 - 1);
                          v652 = *((unsigned __int8 *)v148 - 138);
                          v438 = *v148;
                          v647 = *((unsigned __int8 *)v148 - 137);
                          v643 = *((unsigned __int8 *)v148 - 136);
                          v639 = *((unsigned __int8 *)v148 - 135);
                          v636 = *((unsigned __int8 *)v148 - 134);
                          v633 = *((unsigned __int8 *)v148 - 133);
                          v630 = *((unsigned __int8 *)v148 - 132);
                          v606 = *((unsigned __int8 *)v148 - 131);
                          v603 = *((unsigned __int8 *)v148 - 130);
                          v600 = *((unsigned __int8 *)v148 - 129);
                          v597 = *((unsigned __int8 *)v148 - 128);
                          v594 = *((unsigned __int8 *)v148 - 127);
                          v591 = *((unsigned __int8 *)v148 - 126);
                          v626 = *((unsigned __int8 *)v148 - 125);
                          v588 = *((unsigned __int8 *)v148 - 124);
                          v585 = *((unsigned __int8 *)v148 - 123);
                          v534 = *((unsigned __int8 *)v148 - 122);
                          v532 = *((unsigned __int8 *)v148 - 121);
                          v385 = *((unsigned __int8 *)v148 - 120);
                          v381 = *((unsigned __int8 *)v148 - 119);
                          v378 = *((unsigned __int8 *)v148 - 118);
                          v375 = *((unsigned __int8 *)v148 - 117);
                          v372 = *((unsigned __int8 *)v148 - 116);
                          v369 = *((unsigned __int8 *)v148 - 115);
                          v530 = *((unsigned __int8 *)v148 - 114);
                          v528 = *((unsigned __int8 *)v148 - 113);
                          v366 = *((unsigned __int8 *)v148 - 112);
                          v363 = *((unsigned __int8 *)v148 - 111);
                          v360 = *((unsigned __int8 *)v148 - 110);
                          v357 = *((unsigned __int8 *)v148 - 109);
                          v355 = *((unsigned __int8 *)v148 - 108);
                          v353 = *((unsigned __int8 *)v148 - 107);
                          v545 = *((unsigned __int8 *)v148 - 106);
                          v547 = *((unsigned __int8 *)v148 - 105);
                          v549 = *((unsigned __int8 *)v148 - 104);
                          v551 = *((unsigned __int8 *)v148 - 103);
                          v552 = *((unsigned __int8 *)v148 - 102);
                          v555 = *((unsigned __int8 *)v148 - 101);
                          v558 = *((unsigned __int8 *)v148 - 100);
                          v560 = *((unsigned __int8 *)v148 - 99);
                          v563 = *((unsigned __int8 *)v148 - 98);
                          v564 = *((unsigned __int8 *)v148 - 97);
                          v567 = *((unsigned __int8 *)v148 - 96);
                          v570 = *((unsigned __int8 *)v148 - 95);
                          v573 = *((unsigned __int8 *)v148 - 94);
                          v576 = *((unsigned __int8 *)v148 - 93);
                          v579 = *((unsigned __int8 *)v148 - 92);
                          v582 = *((unsigned __int8 *)v148 - 91);
                          v472 = *((unsigned __int8 *)v148 - 90);
                          v475 = *((unsigned __int8 *)v148 - 89);
                          v277 = *((unsigned __int8 *)v148 - 88);
                          v279 = *((unsigned __int8 *)v148 - 87);
                          v485 = *((unsigned __int8 *)v148 - 86);
                          v488 = *((unsigned __int8 *)v148 - 85);
                          v491 = *((unsigned __int8 *)v148 - 84);
                          v281 = *((unsigned __int8 *)v148 - 83);
                          v493 = *((unsigned __int8 *)v148 - 82);
                          v283 = *((unsigned __int8 *)v148 - 81);
                          v285 = *((unsigned __int8 *)v148 - 80);
                          v287 = *((unsigned __int8 *)v148 - 79);
                          v289 = *((unsigned __int8 *)v148 - 78);
                          v291 = *((unsigned __int8 *)v148 - 77);
                          v293 = *((unsigned __int8 *)v148 - 76);
                          v496 = *((unsigned __int8 *)v148 - 75);
                          v275 = *((unsigned __int8 *)v148 - 74);
                          v525 = *(v148 - 36);
                          v522 = *(v148 - 35);
                          __s1 = HIBYTE(v147);
                          v330 = v149;
                          v730 = v149;
                          v410 = v150;
                          v731 = v150;
                          v732 = v151;
                          v417 = v152;
                          v733 = v152;
                          v322 = v155;
                          v325 = v153;
                          v734 = v153;
                          v424 = v154;
                          v735 = v154;
                          v736 = v155;
                          v429 = v156;
                          v737 = v156;
                          v316 = v159;
                          v319 = v157;
                          v738 = v157;
                          v432 = v158;
                          v739 = v158;
                          v740 = v159;
                          v420 = v160;
                          v741 = v160;
                          v310 = v163;
                          v313 = v161;
                          v742 = v161;
                          v743 = v162;
                          v744 = v163;
                          __s2 = v710;
                          v714 = v701;
                          v164 = v680;
                          v715 = v687;
                          v716 = v680;
                          v717 = v694;
                          v718 = v136;
                          v719 = v137;
                          v720 = v138;
                          v721 = v139;
                          v722 = v140;
                          v723 = v141;
                          v724 = v142;
                          v725 = v143;
                          v726 = v144;
                          v727 = v145;
                          v728 = v146;
                          v297 = HIBYTE(v147);
                          v165 = v136;
                          v166 = v137;
                          v167 = v141;
                          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                            return v420;
                          v515 = v165;
                          v506 = v167;
                          v502 = v657;
                          v508 = v622;
                          v681 = v151;
                          v658 = v420;
                          v623 = v413;
                          __s1 = v545;
                          v730 = v547;
                          v731 = v549;
                          v732 = v551;
                          v733 = v552;
                          v734 = v555;
                          v735 = v558;
                          v736 = v560;
                          v737 = v563;
                          v738 = v564;
                          v739 = v567;
                          v740 = v570;
                          v741 = v573;
                          v742 = v576;
                          v743 = v579;
                          v744 = v582;
                          __s2 = v652;
                          v714 = v647;
                          v715 = v643;
                          v716 = v639;
                          v717 = v636;
                          v718 = v633;
                          v719 = v630;
                          v720 = v606;
                          v721 = v603;
                          v722 = v600;
                          v723 = v597;
                          v724 = v594;
                          v725 = v591;
                          v726 = v626;
                          v727 = v588;
                          v728 = v585;
                          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                            __asm { BR              X5 }
                          v421 = v626;
                          v414 = v585;
                          v627 = v576;
                          v586 = v582;
                          v168 = v710 | (unint64_t)(v701 << 8) | (v687 << 16) | (v164 << 24) | (v694 << 32) | (v165 << 40) | (v166 << 48) | (v676 << 56);
                          v169 = v671 | (v667 << 8) | (v506 << 16) | (v663 << 24) | (v502 << 32) | (v541 << 40) | (v539 << 48) | (v146 << 56);
                          v170 = v652 | (v647 << 8) | (v643 << 16) | (v639 << 24) | (v636 << 32) | (v633 << 40) | (v630 << 48) | (v606 << 56);
                          v171 = v603 | (v600 << 8) | (v597 << 16) | (v594 << 24) | (v591 << 32) | (v421 << 40) | (v588 << 48) | (v414 << 56);
                          v172 = sub_24978B870(v710 | (unint64_t)(v701 << 8) | (v687 << 16) | (v164 << 24) | (v694 << 32) | (v515 << 40) | (v166 << 48) | (v676 << 56), v169, v170, v171);
                          v583 = v508 | (v542 << 8);
                          v173 = v534 | (v532 << 8);
                          v174 = v530 | (v528 << 8);
                          v577 = v469 | (v536 << 16);
                          v175 = v275 | (v525 << 16);
                          if (v172 == 2)
                          {
                            v172 = sub_24978B8C8(v168, v169, v583 | (v609 << 16) | (v404 << 24) | (v401 << 32) | (v398 << 40) | (v395 << 48) | (v392 << 56), v389 | (unint64_t)(unsigned __int16)(v618 << 8) | ((unint64_t)BYTE1(v618) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE2(v618) << 24) | ((unint64_t)BYTE3(v618) << 32) | ((unint64_t)BYTE4(v618) << 40) | ((unint64_t)BYTE5(v618) << 48) | ((unint64_t)BYTE6(v618) << 56), v170, v171, v173 | (v385 << 16) | (v381 << 24) | (v378 << 32) | (v375 << 40) | (v372 << 48) | (v369 << 56), v174 | (v366 << 16) | (v363 << 24) | (v360 << 32) | (v357 << 40) | (v355 << 48) | (v353 << 56));
                            if (v172 == 2)
                            {
                              v172 = sub_24978B990(v577, v175);
                              if (v172 == 2)
                                goto LABEL_95;
                            }
                          }
                          if ((v172 & 1) == 0)
                          {
LABEL_95:
                            v176 = sub_24978B870(v170, v171, v168, v169);
                            if (v176 != 2
                              || (v176 = sub_24978B8C8(v170, v171, v173 | (v385 << 16) | (v381 << 24) | (v378 << 32) | (v375 << 40) | (v372 << 48) | (v369 << 56), v174 | (v366 << 16) | (v363 << 24) | (v360 << 32) | (v357 << 40) | (v355 << 48) | (v353 << 56), v168, v169, v583 | (v609 << 16) | (v404 << 24) | (v401 << 32) | (v398 << 40) | (v395 << 48) | (v392 << 56), v389 | (unint64_t)(unsigned __int16)(v618 << 8) | ((unint64_t)BYTE1(v618) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE2(v618) << 24) | ((unint64_t)BYTE3(v618) << 32) | ((unint64_t)BYTE4(v618) << 40) | ((unint64_t)BYTE5(v618) << 48) | ((unint64_t)BYTE6(v618) << 56)), v176 != 2)|| (v176 = sub_24978B990(v175, v577), v176 != 2))
                            {
                              if ((v176 & 1) != 0)
                                goto LABEL_109;
                            }
                            v177 = dword_24983AE80[(char)v469];
                            v178 = dword_24983AE80[(char)v275];
                            v179 = v297 | (unint64_t)(v330 << 8) | (v410 << 16) | (v681 << 24) | (v417 << 32) | (v325 << 40) | (v424 << 48) | (v322 << 56);
                            v180 = v429 | (v319 << 8) | (v432 << 16) | (v316 << 24) | (v658 << 32) | (v313 << 40) | (v162 << 48) | (v310 << 56);
                            v181 = v545 | (v547 << 8) | (v549 << 16) | (v551 << 24) | (v552 << 32) | (v555 << 40) | (v558 << 48) | (v560 << 56);
                            v182 = v563 | (v564 << 8) | (v567 << 16) | (v570 << 24) | (v573 << 32) | (v627 << 40) | (v579 << 48) | (v586 << 56);
                            v183 = sub_24978B870(v179, v180, v181, v182);
                            v711 = v623 | (v307 << 8);
                            v184 = v472 | (v475 << 8);
                            v185 = v493 | (v283 << 8);
                            v702 = v177 | (v438 << 16);
                            v186 = v178 | (v522 << 16);
                            if (v183 == 2)
                            {
                              v183 = sub_24978B8C8(v179, v180, v711 | (v407 << 16) | (v304 << 24) | (v435 << 32) | (v302 << 40) | (v441 << 48) | ((unint64_t)v300 << 56), v444 | (unint64_t)(unsigned __int16)(v447 << 8) | ((unint64_t)v449 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v452 << 24) | ((unint64_t)v462 << 32) | ((unint64_t)v456 << 40) | ((unint64_t)v465 << 48) | ((unint64_t)v459 << 56), v181, v182, v184 | (v277 << 16) | (v279 << 24) | (v485 << 32) | (v488 << 40) | (v491 << 48) | (v281 << 56), v185 | (v285 << 16) | (v287 << 24) | (v289 << 32) | (v291 << 40) | (v293 << 48) | (v496 << 56));
                              if (v183 == 2)
                              {
                                v183 = sub_24978B990(v702, v186);
                                if (v183 == 2)
                                  break;
                              }
                            }
                            if ((v183 & 1) == 0)
                              break;
                          }
                          if (!v269)
                            goto LABEL_209;
                          v712 = *((_BYTE *)v148 - 68);
                          v703 = *((unsigned __int8 *)v148 - 67);
                          v688 = *((unsigned __int8 *)v148 - 66);
                          v682 = *((unsigned __int8 *)v148 - 65);
                          v695 = *((unsigned __int8 *)v148 - 64);
                          v619 = *((unsigned __int8 *)v148 - 63);
                          v615 = *((unsigned __int8 *)v148 - 62);
                          v677 = *((unsigned __int8 *)v148 - 61);
                          v672 = *((unsigned __int8 *)v148 - 60);
                          v668 = *((unsigned __int8 *)v148 - 59);
                          v612 = *((unsigned __int8 *)v148 - 58);
                          v664 = *((unsigned __int8 *)v148 - 57);
                          v659 = *((unsigned __int8 *)v148 - 56);
                          v187 = *((unsigned __int8 *)v148 - 55);
                          v188 = *((unsigned __int8 *)v148 - 54);
                          v189 = *((unsigned __int8 *)v148 - 53);
                          v622 = *((unsigned __int8 *)v148 - 52);
                          v190 = *((unsigned __int8 *)v148 - 51);
                          v609 = *((unsigned __int8 *)v148 - 50);
                          v191 = *((unsigned __int8 *)v148 - 49);
                          v192 = *((unsigned __int8 *)v148 - 48);
                          v193 = *((unsigned __int8 *)v148 - 47);
                          v194 = *((unsigned __int8 *)v148 - 46);
                          v653 = *(unsigned __int16 *)((char *)v148 - 5);
                          v648 = *(_DWORD *)(v148 - 1);
                          v640 = *(int8x16_t *)((char *)v148 - 45);
                          v644 = *(_OWORD *)((char *)v148 - 29);
                          v195 = *(_QWORD *)((char *)v148 - 13);
                          memcpy(v148 - 34, v148 - 69, 0x46uLL);
                          v146 = v189;
                          v145 = v188;
                          v144 = v187;
                          v143 = v659;
                          v142 = v664;
                          v141 = v612;
                          v140 = v668;
                          v139 = v672;
                          v138 = v677;
                          v134 = v682;
                          v137 = v615;
                          v133 = v688;
                          v136 = v619;
                          v135 = v695;
                          v132 = v703;
                          v131 = v712;
                          *((_BYTE *)v148 - 138) = v712;
                          *((_BYTE *)v148 - 137) = v703;
                          *((_BYTE *)v148 - 136) = v688;
                          *((_BYTE *)v148 - 135) = v682;
                          *((_BYTE *)v148 - 134) = v695;
                          *((_BYTE *)v148 - 133) = v619;
                          *((_BYTE *)v148 - 132) = v615;
                          *((_BYTE *)v148 - 131) = v677;
                          *((_BYTE *)v148 - 130) = v672;
                          *((_BYTE *)v148 - 129) = v668;
                          *((_BYTE *)v148 - 128) = v612;
                          *((_BYTE *)v148 - 127) = v664;
                          *((_BYTE *)v148 - 126) = v659;
                          *((_BYTE *)v148 - 125) = v187;
                          *((_BYTE *)v148 - 124) = v188;
                          *((_BYTE *)v148 - 123) = v189;
                          *((_BYTE *)v148 - 122) = v622;
                          v542 = v190;
                          *((_BYTE *)v148 - 121) = v190;
                          *((_BYTE *)v148 - 120) = v609;
                          v404 = v191;
                          *((_BYTE *)v148 - 119) = v191;
                          v401 = v192;
                          *((_BYTE *)v148 - 118) = v192;
                          v398 = v193;
                          *((_BYTE *)v148 - 117) = v193;
                          v395 = v194;
                          *((_BYTE *)v148 - 116) = v194;
                          *(int8x16_t *)((char *)v148 - 115) = v640;
                          *(_OWORD *)((char *)v148 - 99) = v644;
                          *(_QWORD *)((char *)v148 - 83) = v195;
                          *(unsigned __int16 *)((char *)v148 - 75) = v653;
                          *((_DWORD *)v148 - 18) = v648;
                          v148 -= 35;
                          v147 = vextq_s8(v640, v640, 2uLL).u64[0];
                          v44 = v273 + 1;
                          v392 = v640.u8[0];
                          v389 = v640.u8[1];
                          v196 = v267;
                          if (v267 == v273 + 1)
                            goto LABEL_110;
                        }
                        if (sub_24978B870(v181, v182, v179, v180) == 2
                          && sub_24978B8C8(v181, v182, v184 | (v277 << 16) | (v279 << 24) | (v485 << 32) | (v488 << 40) | (v491 << 48) | (v281 << 56), v185 | (v285 << 16) | (v287 << 24) | (v289 << 32) | (v291 << 40) | (v293 << 48) | (v496 << 56), v179, v180, v711 | (v407 << 16) | (v304 << 24) | (v435 << 32) | (v302 << 40) | (v441 << 48) | ((unint64_t)v300 << 56), v444 | (unint64_t)(unsigned __int16)(v447 << 8) | ((unint64_t)v449 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v452 << 24) | ((unint64_t)v462 << 32) | ((unint64_t)v456 << 40) | ((unint64_t)v465 << 48) | ((unint64_t)v459 << 56)) == 2)
                        {
                          sub_24978B990(v186, v702);
                        }
LABEL_109:
                        v196 = v267;
LABEL_110:
                        v10 = v196 + 1;
                        v44 = v262;
                        v129 = v263 + 35;
                        v43 = v269;
                      }
                      while (v10 != v260);
                      v10 = v260;
                      v9 = v259;
                    }
                    goto LABEL_112;
                  }
LABEL_207:
                  __break(1u);
LABEL_208:
                  __break(1u);
LABEL_209:
                  __break(1u);
LABEL_210:
                  __break(1u);
LABEL_211:
                  __break(1u);
LABEL_212:
                  __break(1u);
                }
              }
LABEL_112:
              if (v10 < v44)
                goto LABEL_201;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v9 = sub_24975DAF4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
              v198 = *((_QWORD *)v9 + 2);
              v197 = *((_QWORD *)v9 + 3);
              v199 = v198 + 1;
              if (v198 >= v197 >> 1)
                v9 = sub_24975DAF4((char *)(v197 > 1), v198 + 1, 1, v9);
              *((_QWORD *)v9 + 2) = v199;
              v200 = v9 + 32;
              v201 = &v9[16 * v198 + 32];
              *(_QWORD *)v201 = v262;
              *((_QWORD *)v201 + 1) = v10;
              v268 = v10;
              if (v198)
              {
                while (2)
                {
                  v202 = v199 - 1;
                  if (v199 >= 4)
                  {
                    v207 = &v200[16 * v199];
                    v208 = *((_QWORD *)v207 - 8);
                    v209 = *((_QWORD *)v207 - 7);
                    v213 = __OFSUB__(v209, v208);
                    v210 = v209 - v208;
                    if (v213)
                      goto LABEL_186;
                    v212 = *((_QWORD *)v207 - 6);
                    v211 = *((_QWORD *)v207 - 5);
                    v213 = __OFSUB__(v211, v212);
                    v205 = v211 - v212;
                    v206 = v213;
                    if (v213)
                      goto LABEL_187;
                    v214 = v199 - 2;
                    v215 = &v200[16 * v199 - 32];
                    v217 = *(_QWORD *)v215;
                    v216 = *((_QWORD *)v215 + 1);
                    v213 = __OFSUB__(v216, v217);
                    v218 = v216 - v217;
                    if (v213)
                      goto LABEL_188;
                    v213 = __OFADD__(v205, v218);
                    v219 = v205 + v218;
                    if (v213)
                      goto LABEL_190;
                    if (v219 >= v210)
                    {
                      v237 = &v200[16 * v202];
                      v239 = *(_QWORD *)v237;
                      v238 = *((_QWORD *)v237 + 1);
                      v213 = __OFSUB__(v238, v239);
                      v240 = v238 - v239;
                      if (v213)
                        goto LABEL_196;
                      v230 = v205 < v240;
                    }
                    else
                    {
LABEL_131:
                      if ((v206 & 1) != 0)
                        goto LABEL_189;
                      v214 = v199 - 2;
                      v220 = &v200[16 * v199 - 32];
                      v222 = *(_QWORD *)v220;
                      v221 = *((_QWORD *)v220 + 1);
                      v223 = __OFSUB__(v221, v222);
                      v224 = v221 - v222;
                      v225 = v223;
                      if (v223)
                        goto LABEL_191;
                      v226 = &v200[16 * v202];
                      v228 = *(_QWORD *)v226;
                      v227 = *((_QWORD *)v226 + 1);
                      v213 = __OFSUB__(v227, v228);
                      v229 = v227 - v228;
                      if (v213)
                        goto LABEL_193;
                      if (__OFADD__(v224, v229))
                        goto LABEL_195;
                      if (v224 + v229 < v205)
                        goto LABEL_143;
                      v230 = v205 < v229;
                    }
                    if (v230)
                      v202 = v214;
                  }
                  else
                  {
                    if (v199 == 3)
                    {
                      v204 = *((_QWORD *)v9 + 4);
                      v203 = *((_QWORD *)v9 + 5);
                      v213 = __OFSUB__(v203, v204);
                      v205 = v203 - v204;
                      v206 = v213;
                      goto LABEL_131;
                    }
                    v231 = *((_QWORD *)v9 + 4);
                    v232 = *((_QWORD *)v9 + 5);
                    v213 = __OFSUB__(v232, v231);
                    v224 = v232 - v231;
                    v225 = v213;
LABEL_143:
                    if ((v225 & 1) != 0)
                      goto LABEL_192;
                    v233 = &v200[16 * v202];
                    v235 = *(_QWORD *)v233;
                    v234 = *((_QWORD *)v233 + 1);
                    v213 = __OFSUB__(v234, v235);
                    v236 = v234 - v235;
                    if (v213)
                      goto LABEL_194;
                    if (v236 < v224)
                      goto LABEL_160;
                  }
                  v241 = v202 - 1;
                  if (v202 - 1 >= v199)
                  {
                    __break(1u);
LABEL_183:
                    __break(1u);
LABEL_184:
                    __break(1u);
LABEL_185:
                    __break(1u);
LABEL_186:
                    __break(1u);
LABEL_187:
                    __break(1u);
LABEL_188:
                    __break(1u);
LABEL_189:
                    __break(1u);
LABEL_190:
                    __break(1u);
LABEL_191:
                    __break(1u);
LABEL_192:
                    __break(1u);
LABEL_193:
                    __break(1u);
LABEL_194:
                    __break(1u);
LABEL_195:
                    __break(1u);
LABEL_196:
                    __break(1u);
LABEL_197:
                    __break(1u);
LABEL_198:
                    __break(1u);
LABEL_199:
                    __break(1u);
LABEL_200:
                    __break(1u);
LABEL_201:
                    __break(1u);
LABEL_202:
                    __break(1u);
LABEL_203:
                    __break(1u);
LABEL_204:
                    __break(1u);
                    goto LABEL_205;
                  }
                  if (!v269)
                    goto LABEL_210;
                  v242 = &v200[16 * v241];
                  v243 = *(_QWORD *)v242;
                  v244 = &v200[16 * v202];
                  v245 = *((_QWORD *)v244 + 1);
                  sub_24979862C((char *)(v269 + 70 * *(_QWORD *)v242), (char *)(v269 + 70 * *(_QWORD *)v244), v269 + 70 * v245, v264);
                  if (v265)
                  {
LABEL_179:
                    swift_bridgeObjectRelease();
                    if (v261 >= -1)
                    {
                      *(_QWORD *)(v257 + 16) = 0;
                      return swift_bridgeObjectRelease();
                    }
LABEL_205:
                    __break(1u);
LABEL_206:
                    __break(1u);
                    goto LABEL_207;
                  }
                  if (v245 < v243)
                    goto LABEL_183;
                  if (v202 > *((_QWORD *)v9 + 2))
                    goto LABEL_184;
                  *(_QWORD *)v242 = v243;
                  *(_QWORD *)&v200[16 * v241 + 8] = v245;
                  v246 = *((_QWORD *)v9 + 2);
                  if (v202 >= v246)
                    goto LABEL_185;
                  v265 = 0;
                  v199 = v246 - 1;
                  memmove(&v200[16 * v202], v244 + 16, 16 * (v246 - 1 - v202));
                  *((_QWORD *)v9 + 2) = v246 - 1;
                  if (v246 <= 2)
                    goto LABEL_160;
                  continue;
                }
              }
              v199 = 1;
LABEL_160:
              v3 = v261;
              v8 = v268;
              if (v268 >= v261)
              {
LABEL_166:
                if (v199 >= 2)
                {
                  v247 = *v255;
                  do
                  {
                    v248 = v199 - 2;
                    if (v199 < 2)
                      goto LABEL_197;
                    if (!v247)
                      goto LABEL_212;
                    v249 = *(_QWORD *)&v9[16 * v248 + 32];
                    v250 = *(_QWORD *)&v9[16 * v199 + 24];
                    sub_24979862C((char *)(v247 + 70 * v249), (char *)(v247 + 70 * *(_QWORD *)&v9[16 * v199 + 16]), v247 + 70 * v250, v264);
                    if (v265)
                      goto LABEL_179;
                    if (v250 < v249)
                      goto LABEL_198;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v9 = sub_24975DBE8();
                    if (v248 >= *((_QWORD *)v9 + 2))
                      goto LABEL_199;
                    v251 = &v9[16 * v248 + 32];
                    *(_QWORD *)v251 = v249;
                    *((_QWORD *)v251 + 1) = v250;
                    v252 = *((_QWORD *)v9 + 2);
                    if (v199 > v252)
                      goto LABEL_200;
                    memmove(&v9[16 * v199 + 16], &v9[16 * v199 + 32], 16 * (v252 - v199));
                    *((_QWORD *)v9 + 2) = v252 - 1;
                    v199 = v252 - 1;
                  }
                  while (v252 > 2);
                }
                swift_bridgeObjectRelease();
                if (v261 >= -1)
                {
                  *(_QWORD *)(v257 + 16) = 0;
                  return swift_bridgeObjectRelease();
                }
                goto LABEL_208;
              }
              goto LABEL_4;
            }
          }
        }
        v57 = dword_24983AE80[(char)v298];
        v58 = dword_24983AE80[(char)v341];
        v59 = v674 | (v454 << 8) | (v354 << 16) | (v559 << 24) | (v339 << 32) | (v561 << 40) | (v335 << 48) | (v271 << 56);
        v60 = v337 | (v665 << 8) | (v328 << 16) | (v553 << 24) | (v333 << 32) | (v546 << 40) | (v331 << 48) | (v548 << 56);
        v61 = v589 | (v592 << 8) | (v595 << 16) | (v598 << 24) | (v601 << 32) | (v604 << 40) | (v607 << 48) | (v610 << 56);
        v62 = v613 | (v616 << 8) | (v620 << 16) | (v624 << 24) | (v628 << 32) | (v631 << 40) | (v634 << 48) | (v637 << 56);
        v63 = sub_24978B870(v59, v60, v61, v62);
        v696 = v326 | (v543 << 8);
        v705 = v308 | (v556 << 8);
        v64 = v476 | (v479 << 8);
        v65 = v346 | (v347 << 8);
        v66 = v57 | (v574 << 16);
        v67 = v58 | (v497 << 16);
        if (v63 == 2
          && (v63 = sub_24978B8C8(v59, v60, v696 | (v323 << 16) | (v320 << 24) | (v317 << 32) | (v544 << 40) | (v314 << 48) | (v311 << 56), v705 | (v305 << 16) | (v568 << 24) | (v303 << 32) | (v565 << 40) | (v301 << 48) | (v571 << 56), v61, v62, v64 | (v482 << 16) | (v486 << 24) | (v489 << 32) | (v343 << 40) | (v492 << 48) | (v345 << 56), v65 | (v348 << 16) | (v349 << 24) | (v350 << 32) | (v351 << 40) | (v352 << 48) | (v494 << 56)), v63 == 2)&& (v63 = sub_24978B990(v66, v67), v63 == 2)|| (v63 & 1) == 0)
        {
          v689 = v67;
          v9 = v258;
          if (sub_24978B870(v61, v62, v59, v60) == 2
            && sub_24978B8C8(v61, v62, v64 | (v482 << 16) | (v486 << 24) | (v489 << 32) | (v343 << 40) | (v492 << 48) | (v345 << 56), v65 | (v348 << 16) | (v349 << 24) | (v350 << 32) | (v351 << 40) | (v352 << 48) | (v494 << 56), v59, v60, v696 | (v323 << 16) | (v320 << 24) | (v317 << 32) | (v544 << 40) | (v314 << 48) | (v311 << 56), v705 | (v305 << 16) | (v568 << 24) | (v303 << 32) | (v565 << 40) | (v301 << 48) | (v571 << 56)) == 2)
          {
            sub_24978B990(v689, v66);
          }
          v3 = v261;
          v10 = v262 + 2;
          if (v262 + 2 >= v261)
            goto LABEL_66;
          goto LABEL_37;
        }
      }
    }
    v3 = v261;
    v10 = v262 + 2;
    if (v262 + 2 >= v261)
    {
      v9 = v258;
      v43 = v269;
      v44 = v262;
      goto LABEL_69;
    }
    v270 = 1;
    goto LABEL_38;
  }
  if (v3 < 0)
    goto LABEL_203;
  if (v3)
    return sub_2497957DC(0, v3, 1, a1);
  return result;
}

uint64_t sub_2497957DC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unsigned __int16 *v4;
  char *v5;
  char v6;
  unsigned __int8 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  unsigned __int8 v36;
  char v37;
  int v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  unsigned __int8 v45;
  int v46;
  char v47;
  char v48;
  int v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v67;
  char v68;
  unsigned __int8 v69;
  char v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  unsigned __int16 *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  unsigned __int8 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned __int8 v124;
  unsigned __int8 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int v140;
  unsigned __int8 v141;
  char v142;
  char v143;
  char v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  unsigned __int8 v160;
  char v161;
  char v162;
  char v163;
  unsigned __int8 v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  char v177;
  char v178;
  char v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  char v185;
  char v186;
  unsigned __int8 v187;
  char v188;
  char v189;
  char v190;
  uint64_t v191;
  char v192;
  char v193;
  unsigned __int8 v194;
  char v195;
  uint64_t v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  uint64_t v210;
  char v211;
  unsigned __int8 v212;
  char v213;
  unsigned __int8 v214;
  unsigned __int8 v215;
  unsigned __int8 v216;
  unsigned __int8 v217;
  uint64_t v218;
  unsigned __int8 v219;
  unsigned int v220;
  char v221;
  char v222;
  char v223;
  unsigned int v224;
  unsigned int v225;
  int8x16_t v226;
  char v227;
  uint64_t v228;
  int v229;
  uint64_t v230;
  __int128 v231;
  unint64_t v232;
  uint64_t v233;
  int v234;
  char __s2;
  char v236;
  char v237;
  char v238;
  char v239;
  unsigned __int8 v240;
  unsigned __int8 v241;
  unint64_t v242;
  char v243;
  char __s1;
  char v245;
  char v246;
  char v247;
  char v248;
  unsigned __int8 v249;
  unsigned __int8 v250;
  unint64_t v251;
  char v252;
  uint64_t v253;

  v77 = result;
  v253 = *MEMORY[0x24BDAC8D0];
  if (a3 == a2)
    return result;
  v79 = *a4;
  v4 = (unsigned __int16 *)(*a4 + 70 * a3 + 68);
  do
  {
    v80 = a3;
    v5 = (char *)(v79 + 70 * a3);
    v221 = *v5;
    v201 = v5[1];
    v6 = v5[2];
    v189 = v5[3];
    v188 = v5[4];
    v187 = v5[5];
    v7 = v5[6];
    v8 = v5[7];
    v197 = v5[8];
    v195 = v5[9];
    v9 = v5[10];
    v10 = v5[11];
    v198 = v5[12];
    v11 = v5[13];
    v12 = v5[14];
    v13 = v5[15];
    v167 = v5[16];
    v165 = v5[17];
    v158 = v5[18];
    v126 = v5[19];
    v127 = v5[20];
    v125 = v5[21];
    v14 = *(_QWORD *)(v5 + 23);
    v108 = v77;
    v78 = v4;
    v124 = v5[22];
    while (1)
    {
      v232 = v14;
      v144 = v13;
      v145 = v12;
      v111 = *((unsigned __int8 *)v4 - 37);
      v15 = *((unsigned __int8 *)v4 - 34);
      v16 = *((unsigned __int8 *)v4 - 33);
      v17 = *((unsigned __int8 *)v4 - 32);
      v18 = *((unsigned __int8 *)v4 - 31);
      v19 = *((unsigned __int8 *)v4 - 30);
      v20 = *((unsigned __int8 *)v4 - 29);
      v21 = *((unsigned __int8 *)v4 - 28);
      v22 = *((unsigned __int8 *)v4 - 27);
      v23 = *((unsigned __int8 *)v4 - 26);
      v24 = *((unsigned __int8 *)v4 - 25);
      v25 = *((unsigned __int8 *)v4 - 24);
      v26 = *((unsigned __int8 *)v4 - 23);
      v27 = *((unsigned __int8 *)v4 - 22);
      v28 = *((unsigned __int8 *)v4 - 21);
      v89 = *((unsigned __int8 *)v4 - 20);
      v208 = *((unsigned __int8 *)v4 - 19);
      v88 = *((unsigned __int8 *)v4 - 18);
      v87 = *((unsigned __int8 *)v4 - 17);
      v86 = *((unsigned __int8 *)v4 - 16);
      v97 = *((_BYTE *)v4 - 15);
      v84 = *((unsigned __int8 *)v4 - 13);
      v85 = *((_BYTE *)v4 - 14);
      v98 = *((_BYTE *)v4 - 12);
      v212 = *((_BYTE *)v4 - 11);
      v214 = *((_BYTE *)v4 - 10);
      v215 = *((_BYTE *)v4 - 9);
      v217 = *((_BYTE *)v4 - 8);
      v219 = *((_BYTE *)v4 - 7);
      v216 = *((_BYTE *)v4 - 6);
      v218 = *((unsigned __int8 *)v4 - 5);
      v83 = *((unsigned __int8 *)v4 - 4);
      v110 = *(v4 - 1);
      v220 = *v4;
      v143 = *((_BYTE *)v4 - 138);
      v142 = *((_BYTE *)v4 - 137);
      v161 = *((_BYTE *)v4 - 136);
      v177 = *((_BYTE *)v4 - 135);
      v176 = *((_BYTE *)v4 - 134);
      v164 = *((_BYTE *)v4 - 133);
      v160 = *((_BYTE *)v4 - 132);
      v159 = *((_BYTE *)v4 - 131);
      v163 = *((_BYTE *)v4 - 130);
      v162 = *((_BYTE *)v4 - 129);
      v186 = *((_BYTE *)v4 - 128);
      v185 = *((_BYTE *)v4 - 127);
      v183 = *((_BYTE *)v4 - 126);
      v181 = *((_BYTE *)v4 - 125);
      v179 = *((_BYTE *)v4 - 124);
      v178 = *((_BYTE *)v4 - 123);
      v128 = *((unsigned __int8 *)v4 - 122);
      v129 = *((unsigned __int8 *)v4 - 121);
      v123 = *((unsigned __int8 *)v4 - 120);
      v122 = *((unsigned __int8 *)v4 - 119);
      v121 = *((unsigned __int8 *)v4 - 118);
      v120 = *((unsigned __int8 *)v4 - 117);
      v119 = *((unsigned __int8 *)v4 - 116);
      v118 = *((unsigned __int8 *)v4 - 115);
      v130 = *((unsigned __int8 *)v4 - 114);
      v131 = *((unsigned __int8 *)v4 - 113);
      v117 = *((unsigned __int8 *)v4 - 112);
      v116 = *((unsigned __int8 *)v4 - 111);
      v115 = *((unsigned __int8 *)v4 - 110);
      v114 = *((unsigned __int8 *)v4 - 109);
      v113 = *((unsigned __int8 *)v4 - 108);
      v112 = *((unsigned __int8 *)v4 - 107);
      v147 = *((unsigned __int8 *)v4 - 106);
      v148 = *((unsigned __int8 *)v4 - 105);
      v149 = *((unsigned __int8 *)v4 - 104);
      v150 = *((unsigned __int8 *)v4 - 103);
      v151 = *((unsigned __int8 *)v4 - 102);
      v152 = *((unsigned __int8 *)v4 - 101);
      v153 = *((unsigned __int8 *)v4 - 100);
      v154 = *((unsigned __int8 *)v4 - 99);
      v155 = *((unsigned __int8 *)v4 - 98);
      v156 = *((unsigned __int8 *)v4 - 97);
      v157 = *((unsigned __int8 *)v4 - 96);
      v168 = *((unsigned __int8 *)v4 - 95);
      v169 = *((unsigned __int8 *)v4 - 94);
      v171 = *((unsigned __int8 *)v4 - 93);
      v173 = *((unsigned __int8 *)v4 - 92);
      v175 = *((unsigned __int8 *)v4 - 91);
      v132 = *((unsigned __int8 *)v4 - 90);
      v133 = *((unsigned __int8 *)v4 - 89);
      v100 = *((unsigned __int8 *)v4 - 88);
      v101 = *((unsigned __int8 *)v4 - 87);
      v102 = *((unsigned __int8 *)v4 - 86);
      v103 = *((unsigned __int8 *)v4 - 85);
      v104 = *((unsigned __int8 *)v4 - 84);
      v105 = *((unsigned __int8 *)v4 - 83);
      v106 = *((unsigned __int8 *)v4 - 82);
      v107 = *((unsigned __int8 *)v4 - 81);
      v134 = *((unsigned __int8 *)v4 - 80);
      v135 = *((unsigned __int8 *)v4 - 79);
      v136 = *((unsigned __int8 *)v4 - 78);
      v137 = *((unsigned __int8 *)v4 - 77);
      v138 = *((unsigned __int8 *)v4 - 76);
      v139 = *((unsigned __int8 *)v4 - 75);
      v99 = *((unsigned __int8 *)v4 - 74);
      v109 = *(v4 - 36);
      v140 = *(v4 - 35);
      v95 = *((unsigned __int8 *)v4 - 35);
      v96 = *((unsigned __int8 *)v4 - 36);
      __s1 = *((_BYTE *)v4 - 36);
      v245 = v95;
      v93 = v17;
      v94 = v15;
      v246 = v15;
      v203 = v16;
      v247 = v16;
      v248 = v17;
      v205 = v18;
      v249 = v18;
      v91 = v21;
      v92 = v19;
      v250 = v19;
      v207 = v20;
      LOBYTE(v251) = v20;
      BYTE1(v251) = v21;
      v210 = v22;
      BYTE2(v251) = v22;
      v90 = v25;
      BYTE3(v251) = v23;
      v202 = v24;
      BYTE4(v251) = v24;
      BYTE5(v251) = v25;
      v204 = v26;
      BYTE6(v251) = v26;
      HIBYTE(v251) = v27;
      v206 = v28;
      v252 = v28;
      __s2 = v221;
      v236 = v201;
      v199 = v6;
      v237 = v6;
      v238 = v189;
      v239 = v188;
      v240 = v187;
      v241 = v7;
      LOBYTE(v242) = v8;
      BYTE1(v242) = v197;
      BYTE2(v242) = v195;
      BYTE3(v242) = v9;
      BYTE4(v242) = v10;
      BYTE5(v242) = v198;
      BYTE6(v242) = v11;
      HIBYTE(v242) = v12;
      v243 = v13;
      v29 = v7;
      v30 = v8;
      v31 = v9;
      v32 = v10;
      v33 = v11;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X9 }
      v141 = v29;
      v227 = v195;
      v223 = v33;
      v222 = v145;
      v82 = v165;
      v196 = v210;
      v191 = v23;
      v146 = v27;
      v166 = v208;
      v81 = v212;
      __s1 = v147;
      v245 = v148;
      v246 = v149;
      v247 = v150;
      v248 = v151;
      v249 = v152;
      v250 = v153;
      LOBYTE(v251) = v154;
      BYTE1(v251) = v155;
      BYTE2(v251) = v156;
      BYTE3(v251) = v157;
      BYTE4(v251) = v168;
      BYTE5(v251) = v169;
      BYTE6(v251) = v171;
      HIBYTE(v251) = v173;
      v252 = v175;
      __s2 = v143;
      v236 = v142;
      v237 = v161;
      v238 = v177;
      v239 = v176;
      v240 = v164;
      v241 = v160;
      LOBYTE(v242) = v159;
      BYTE1(v242) = v163;
      BYTE2(v242) = v162;
      BYTE3(v242) = v186;
      BYTE4(v242) = v185;
      BYTE5(v242) = v183;
      BYTE6(v242) = v181;
      HIBYTE(v242) = v179;
      v243 = v178;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X2 }
      v213 = v183;
      v211 = v181;
      v209 = v179;
      v184 = v169;
      v182 = v171;
      v180 = v173;
      __s1 = v221;
      v245 = v201;
      v34 = v199;
      v246 = v199;
      v35 = v189;
      v247 = v189;
      v248 = v188;
      v249 = v187;
      v36 = v29;
      v250 = v29;
      LOBYTE(v251) = v30;
      BYTE1(v251) = v197;
      BYTE2(v251) = v227;
      v37 = v31;
      BYTE3(v251) = v31;
      BYTE4(v251) = v32;
      BYTE5(v251) = v198;
      BYTE6(v251) = v223;
      HIBYTE(v251) = v222;
      v252 = v144;
      __s2 = v143;
      v236 = v142;
      v237 = v161;
      v238 = v177;
      v239 = v176;
      v240 = v164;
      v241 = v160;
      LOBYTE(v242) = v159;
      BYTE1(v242) = v163;
      BYTE2(v242) = v162;
      BYTE3(v242) = v186;
      BYTE4(v242) = v185;
      BYTE5(v242) = v213;
      BYTE6(v242) = v211;
      HIBYTE(v242) = v209;
      v243 = v178;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_54;
      __s1 = v143;
      v245 = v142;
      v246 = v161;
      v247 = v177;
      v248 = v176;
      v249 = v164;
      v250 = v160;
      LOBYTE(v251) = v159;
      BYTE1(v251) = v163;
      BYTE2(v251) = v162;
      BYTE3(v251) = v186;
      BYTE4(v251) = v185;
      BYTE5(v251) = v213;
      BYTE6(v251) = v211;
      HIBYTE(v251) = v209;
      v252 = v178;
      __s2 = v221;
      v236 = v201;
      v237 = v199;
      v238 = v189;
      v239 = v188;
      v240 = v187;
      v241 = v141;
      LOBYTE(v242) = v30;
      BYTE1(v242) = v197;
      BYTE2(v242) = v227;
      BYTE3(v242) = v31;
      BYTE4(v242) = v32;
      BYTE5(v242) = v198;
      BYTE6(v242) = v223;
      HIBYTE(v242) = v222;
      v243 = v144;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v221;
        v245 = v201;
        v246 = v199;
        v247 = v189;
        v248 = v188;
        v249 = v187;
        v250 = v141;
        LOBYTE(v251) = v30;
        BYTE1(v251) = v197;
        BYTE2(v251) = v227;
        BYTE3(v251) = v31;
        BYTE4(v251) = v32;
        BYTE5(v251) = v198;
        BYTE6(v251) = v223;
        HIBYTE(v251) = v222;
        v252 = v144;
        __s2 = v143;
        v236 = v142;
        v237 = v161;
        v238 = v177;
        v239 = v176;
        v240 = v164;
        v241 = v160;
        LOBYTE(v242) = v159;
        BYTE1(v242) = v163;
        BYTE2(v242) = v162;
        BYTE3(v242) = v186;
        BYTE4(v242) = v185;
        BYTE5(v242) = v213;
        BYTE6(v242) = v211;
        HIBYTE(v242) = v209;
        v243 = v178;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_54;
        __s1 = v143;
        v245 = v142;
        v246 = v161;
        v247 = v177;
        v248 = v176;
        v249 = v164;
        v250 = v160;
        LOBYTE(v251) = v159;
        BYTE1(v251) = v163;
        BYTE2(v251) = v162;
        BYTE3(v251) = v186;
        BYTE4(v251) = v185;
        BYTE5(v251) = v213;
        BYTE6(v251) = v211;
        HIBYTE(v251) = v209;
        v252 = v178;
        __s2 = v221;
        v236 = v201;
        v237 = v199;
        v238 = v189;
        v239 = v188;
        v240 = v187;
        v241 = v141;
        LOBYTE(v242) = v30;
        BYTE1(v242) = v197;
        BYTE2(v242) = v227;
        BYTE3(v242) = v31;
        BYTE4(v242) = v32;
        BYTE5(v242) = v198;
        BYTE6(v242) = v223;
        HIBYTE(v242) = v222;
        v243 = v144;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v167;
          v245 = v82;
          v246 = v158;
          v247 = v126;
          v248 = v127;
          v249 = v125;
          v250 = v124;
          v251 = v232;
          v252 = v111;
          __s2 = v128;
          v236 = v129;
          v237 = v123;
          v238 = v122;
          v239 = v121;
          v240 = v120;
          v241 = v119;
          LOBYTE(v242) = v118;
          BYTE1(v242) = v130;
          BYTE2(v242) = v131;
          BYTE3(v242) = v117;
          BYTE4(v242) = v116;
          BYTE5(v242) = v115;
          BYTE6(v242) = v114;
          HIBYTE(v242) = v113;
          v243 = v112;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_54;
        }
        __s1 = v143;
        v245 = v142;
        v246 = v161;
        v247 = v177;
        v248 = v176;
        v249 = v164;
        v250 = v160;
        LOBYTE(v251) = v159;
        BYTE1(v251) = v163;
        BYTE2(v251) = v162;
        BYTE3(v251) = v186;
        BYTE4(v251) = v185;
        BYTE5(v251) = v213;
        BYTE6(v251) = v211;
        HIBYTE(v251) = v209;
        v252 = v178;
        __s2 = v221;
        v236 = v201;
        v237 = v199;
        v238 = v189;
        v239 = v188;
        v240 = v187;
        v241 = v141;
        LOBYTE(v242) = v30;
        BYTE1(v242) = v197;
        BYTE2(v242) = v227;
        BYTE3(v242) = v31;
        BYTE4(v242) = v32;
        BYTE5(v242) = v198;
        BYTE6(v242) = v223;
        HIBYTE(v242) = v222;
        v243 = v144;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v221;
          v245 = v201;
          v246 = v199;
          v247 = v189;
          v248 = v188;
          v249 = v187;
          v250 = v141;
          LOBYTE(v251) = v30;
          BYTE1(v251) = v197;
          BYTE2(v251) = v227;
          BYTE3(v251) = v31;
          BYTE4(v251) = v32;
          BYTE5(v251) = v198;
          BYTE6(v251) = v223;
          HIBYTE(v251) = v222;
          v252 = v144;
          __s2 = v143;
          v236 = v142;
          v237 = v161;
          v238 = v177;
          v239 = v176;
          v240 = v164;
          v241 = v160;
          LOBYTE(v242) = v159;
          BYTE1(v242) = v163;
          BYTE2(v242) = v162;
          BYTE3(v242) = v186;
          BYTE4(v242) = v185;
          BYTE5(v242) = v213;
          BYTE6(v242) = v211;
          HIBYTE(v242) = v209;
          v243 = v178;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_53;
          __s1 = v128;
          v245 = v129;
          v246 = v123;
          v247 = v122;
          v248 = v121;
          v249 = v120;
          v250 = v119;
          LOBYTE(v251) = v118;
          BYTE1(v251) = v130;
          BYTE2(v251) = v131;
          BYTE3(v251) = v117;
          BYTE4(v251) = v116;
          BYTE5(v251) = v115;
          BYTE6(v251) = v114;
          HIBYTE(v251) = v113;
          v252 = v112;
          __s2 = v167;
          v236 = v82;
          v237 = v158;
          v238 = v126;
          v239 = v127;
          v240 = v125;
          v241 = v124;
          v242 = v232;
          v243 = v111;
          if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
          {
LABEL_53:
            if (v83 < v99)
              goto LABEL_54;
            if (v99 >= v83 && v110 < v109)
              goto LABEL_54;
          }
        }
      }
      __s1 = v143;
      v245 = v142;
      v246 = v161;
      v247 = v177;
      v248 = v176;
      v249 = v164;
      v250 = v160;
      LOBYTE(v251) = v159;
      BYTE1(v251) = v163;
      BYTE2(v251) = v162;
      BYTE3(v251) = v186;
      BYTE4(v251) = v185;
      BYTE5(v251) = v213;
      BYTE6(v251) = v211;
      HIBYTE(v251) = v209;
      v252 = v178;
      __s2 = v221;
      v236 = v201;
      v237 = v199;
      v238 = v189;
      v239 = v188;
      v240 = v187;
      v241 = v141;
      LOBYTE(v242) = v30;
      BYTE1(v242) = v197;
      BYTE2(v242) = v227;
      BYTE3(v242) = v31;
      BYTE4(v242) = v32;
      BYTE5(v242) = v198;
      BYTE6(v242) = v223;
      HIBYTE(v242) = v222;
      v243 = v144;
      result = memcmp(&__s1, &__s2, 0x10uLL);
      if ((result & 0x80000000) != 0)
        goto LABEL_56;
      __s1 = v221;
      v245 = v201;
      v246 = v199;
      v247 = v189;
      v248 = v188;
      v249 = v187;
      v250 = v141;
      LOBYTE(v251) = v30;
      BYTE1(v251) = v197;
      BYTE2(v251) = v227;
      BYTE3(v251) = v31;
      BYTE4(v251) = v32;
      BYTE5(v251) = v198;
      BYTE6(v251) = v223;
      HIBYTE(v251) = v222;
      v252 = v144;
      __s2 = v143;
      v236 = v142;
      v237 = v161;
      v238 = v177;
      v239 = v176;
      v240 = v164;
      v241 = v160;
      LOBYTE(v242) = v159;
      BYTE1(v242) = v163;
      BYTE2(v242) = v162;
      BYTE3(v242) = v186;
      BYTE4(v242) = v185;
      BYTE5(v242) = v213;
      BYTE6(v242) = v211;
      HIBYTE(v242) = v209;
      v243 = v178;
      v38 = memcmp(&__s1, &__s2, 0x10uLL);
      v39 = v206;
      v40 = v27;
      v41 = v204;
      v42 = v202;
      v43 = v191;
      v44 = v207;
      v45 = v92;
      if ((v38 & 0x80000000) == 0)
      {
        __s1 = v143;
        v245 = v142;
        v246 = v161;
        v247 = v177;
        v248 = v176;
        v249 = v164;
        v250 = v160;
        LOBYTE(v251) = v159;
        BYTE1(v251) = v163;
        BYTE2(v251) = v162;
        BYTE3(v251) = v186;
        BYTE4(v251) = v185;
        BYTE5(v251) = v213;
        BYTE6(v251) = v211;
        HIBYTE(v251) = v209;
        v252 = v178;
        __s2 = v221;
        v236 = v201;
        v237 = v199;
        v238 = v189;
        v239 = v188;
        v240 = v187;
        v241 = v141;
        LOBYTE(v242) = v30;
        BYTE1(v242) = v197;
        BYTE2(v242) = v227;
        BYTE3(v242) = v31;
        BYTE4(v242) = v32;
        BYTE5(v242) = v198;
        BYTE6(v242) = v223;
        HIBYTE(v242) = v222;
        v243 = v144;
        result = memcmp(&__s1, &__s2, 0x10uLL);
        if ((result & 0x80000000) != 0)
          goto LABEL_56;
        __s1 = v221;
        v245 = v201;
        v246 = v199;
        v247 = v189;
        v248 = v188;
        v249 = v187;
        v250 = v141;
        LOBYTE(v251) = v30;
        BYTE1(v251) = v197;
        BYTE2(v251) = v227;
        BYTE3(v251) = v31;
        BYTE4(v251) = v32;
        BYTE5(v251) = v198;
        BYTE6(v251) = v223;
        HIBYTE(v251) = v222;
        v252 = v144;
        __s2 = v143;
        v236 = v142;
        v237 = v161;
        v238 = v177;
        v239 = v176;
        v240 = v164;
        v241 = v160;
        LOBYTE(v242) = v159;
        BYTE1(v242) = v163;
        BYTE2(v242) = v162;
        BYTE3(v242) = v186;
        BYTE4(v242) = v185;
        BYTE5(v242) = v213;
        BYTE6(v242) = v211;
        HIBYTE(v242) = v209;
        v243 = v178;
        v46 = memcmp(&__s1, &__s2, 0x10uLL);
        v170 = v167 | (v82 << 8);
        v172 = v128 | (v129 << 8);
        v174 = v130 | (v131 << 8);
        v47 = v221;
        if ((v46 & 0x80000000) == 0)
        {
          result = static UniversalControlUUID.compare(lhs:rhs:)(v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56), v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56));
          if (result == -1)
            goto LABEL_56;
          static UniversalControlUUID.compare(lhs:rhs:)(v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56), v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56));
          v47 = v221;
          v34 = v199;
          v35 = v189;
          v36 = v141;
          v37 = v31;
        }
        __s1 = v47;
        v245 = v201;
        v246 = v34;
        v247 = v35;
        v248 = v188;
        v249 = v187;
        v250 = v36;
        LOBYTE(v251) = v30;
        BYTE1(v251) = v197;
        BYTE2(v251) = v227;
        BYTE3(v251) = v37;
        BYTE4(v251) = v32;
        BYTE5(v251) = v198;
        BYTE6(v251) = v223;
        HIBYTE(v251) = v222;
        v252 = v144;
        __s2 = v143;
        v236 = v142;
        v237 = v161;
        v238 = v177;
        v239 = v176;
        v240 = v164;
        v241 = v160;
        LOBYTE(v242) = v159;
        BYTE1(v242) = v163;
        BYTE2(v242) = v162;
        BYTE3(v242) = v186;
        BYTE4(v242) = v185;
        BYTE5(v242) = v213;
        BYTE6(v242) = v211;
        HIBYTE(v242) = v209;
        v243 = v178;
        v48 = v47;
        v49 = memcmp(&__s1, &__s2, 0x10uLL);
        v45 = v92;
        v44 = v207;
        v43 = v191;
        v42 = v202;
        v41 = v204;
        v40 = v27;
        v39 = v206;
        if ((v49 & 0x80000000) == 0)
        {
          __s1 = v143;
          v245 = v142;
          v246 = v161;
          v247 = v177;
          v248 = v176;
          v249 = v164;
          v250 = v160;
          LOBYTE(v251) = v159;
          BYTE1(v251) = v163;
          BYTE2(v251) = v162;
          BYTE3(v251) = v186;
          BYTE4(v251) = v185;
          BYTE5(v251) = v213;
          BYTE6(v251) = v211;
          HIBYTE(v251) = v209;
          v252 = v178;
          __s2 = v48;
          v236 = v201;
          v237 = v34;
          v238 = v35;
          v239 = v188;
          v240 = v187;
          v241 = v36;
          LOBYTE(v242) = v30;
          BYTE1(v242) = v197;
          BYTE2(v242) = v227;
          BYTE3(v242) = v37;
          BYTE4(v242) = v32;
          BYTE5(v242) = v198;
          BYTE6(v242) = v223;
          HIBYTE(v242) = v222;
          v243 = v144;
          result = memcmp(&__s1, &__s2, 0x10uLL);
          if ((result & 0x80000000) == 0)
          {
            v50 = static UniversalControlUUID.compare(lhs:rhs:)(v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56), v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56));
            v45 = v92;
            v44 = v207;
            v43 = v191;
            v42 = v202;
            v41 = v204;
            v40 = v27;
            v39 = v206;
            if (v50 == -1)
              goto LABEL_26;
            result = static UniversalControlUUID.compare(lhs:rhs:)(v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56), v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56));
          }
          v45 = v92;
          v44 = v207;
          v43 = v191;
          v42 = v202;
          v41 = v204;
          v40 = v27;
          v39 = v206;
          if (v99 < v83)
            goto LABEL_56;
          if (v83 >= v99 && v109 < v110)
            goto LABEL_56;
        }
      }
LABEL_26:
      __s1 = v96;
      v245 = v95;
      v246 = v94;
      v247 = v203;
      v248 = v93;
      v249 = v205;
      v250 = v45;
      LOBYTE(v251) = v44;
      BYTE1(v251) = v91;
      BYTE2(v251) = v196;
      BYTE3(v251) = v43;
      BYTE4(v251) = v42;
      BYTE5(v251) = v90;
      BYTE6(v251) = v41;
      HIBYTE(v251) = v40;
      v252 = v39;
      __s2 = v147;
      v236 = v148;
      v237 = v149;
      v238 = v150;
      v239 = v151;
      v240 = v152;
      v241 = v153;
      LOBYTE(v242) = v154;
      BYTE1(v242) = v155;
      BYTE2(v242) = v156;
      BYTE3(v242) = v157;
      BYTE4(v242) = v168;
      BYTE5(v242) = v184;
      BYTE6(v242) = v182;
      HIBYTE(v242) = v180;
      v243 = v175;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_54;
      __s1 = v147;
      v245 = v148;
      v225 = 0x1000302u >> (8 * v83);
      v246 = v149;
      v247 = v150;
      v224 = 0x1000302u >> (8 * v99);
      v248 = v151;
      v249 = v152;
      v250 = v153;
      LOBYTE(v251) = v154;
      BYTE1(v251) = v155;
      BYTE2(v251) = v156;
      BYTE3(v251) = v157;
      BYTE4(v251) = v168;
      BYTE5(v251) = v184;
      BYTE6(v251) = v182;
      HIBYTE(v251) = v180;
      v252 = v175;
      __s2 = v96;
      v236 = v95;
      v237 = v94;
      v238 = v203;
      v239 = v93;
      v240 = v205;
      v241 = v92;
      LOBYTE(v242) = v207;
      BYTE1(v242) = v91;
      BYTE2(v242) = v196;
      BYTE3(v242) = v191;
      BYTE4(v242) = v202;
      BYTE5(v242) = v90;
      BYTE6(v242) = v204;
      HIBYTE(v242) = v27;
      v243 = v206;
      v228 = v132 | (v133 << 8);
      v230 = v106 | (v107 << 8);
      v233 = v89 | (v166 << 8);
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        break;
      __s1 = v96;
      v245 = v95;
      v246 = v94;
      v247 = v203;
      v248 = v93;
      v249 = v205;
      v250 = v92;
      LOBYTE(v251) = v207;
      BYTE1(v251) = v91;
      BYTE2(v251) = v196;
      BYTE3(v251) = v191;
      BYTE4(v251) = v202;
      BYTE5(v251) = v90;
      BYTE6(v251) = v204;
      HIBYTE(v251) = v27;
      v252 = v206;
      __s2 = v147;
      v236 = v148;
      v237 = v149;
      v238 = v150;
      v239 = v151;
      v240 = v152;
      v241 = v153;
      LOBYTE(v242) = v154;
      BYTE1(v242) = v155;
      BYTE2(v242) = v156;
      BYTE3(v242) = v157;
      BYTE4(v242) = v168;
      BYTE5(v242) = v184;
      BYTE6(v242) = v182;
      HIBYTE(v242) = v180;
      v243 = v175;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v147;
        v245 = v148;
        BYTE1(v251) = v155;
        BYTE2(v251) = v156;
        __s2 = v96;
        v236 = v95;
        BYTE1(v242) = v91;
        BYTE2(v242) = v196;
        v246 = v149;
        v247 = v150;
        v248 = v151;
        v52 = v152;
        v249 = v152;
        v250 = v153;
        LOBYTE(v251) = v154;
        v53 = v157;
        BYTE3(v251) = v157;
        v54 = v168;
        BYTE4(v251) = v168;
        v55 = v184;
        BYTE5(v251) = v184;
        v56 = v182;
        BYTE6(v251) = v182;
        v57 = v180;
        HIBYTE(v251) = v180;
        v58 = v175;
        v252 = v175;
        v59 = v94;
        v237 = v94;
        v238 = v203;
        v239 = v93;
        v240 = v205;
        v241 = v92;
        LOBYTE(v242) = v207;
        BYTE3(v242) = v191;
        BYTE4(v242) = v202;
        BYTE5(v242) = v90;
        BYTE6(v242) = v204;
        HIBYTE(v242) = v146;
        v243 = v206;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v89;
          v245 = v166;
          __s2 = v132;
          v236 = v133;
          BYTE1(v242) = v106;
          BYTE2(v242) = v107;
          v246 = v88;
          v247 = v87;
          v248 = v86;
          v249 = v97;
          v250 = v85;
          LOBYTE(v251) = v84;
          BYTE1(v251) = v98;
          BYTE2(v251) = v81;
          BYTE3(v251) = v214;
          BYTE4(v251) = v215;
          BYTE5(v251) = v217;
          BYTE6(v251) = v219;
          HIBYTE(v251) = v216;
          v252 = v218;
          v237 = v100;
          v238 = v101;
          v239 = v102;
          v240 = v103;
          v241 = v104;
          LOBYTE(v242) = v105;
          BYTE3(v242) = v134;
          BYTE4(v242) = v135;
          BYTE5(v242) = v136;
          BYTE6(v242) = v137;
          HIBYTE(v242) = v138;
          v243 = v139;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_54;
          static UniversalControlUUID.compare(lhs:rhs:)(v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56), v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56));
          v52 = v152;
          v53 = v157;
          v54 = v168;
          v55 = v184;
          v56 = v182;
          v57 = v180;
          v58 = v175;
          v59 = v94;
        }
        v60 = v155 | (v156 << 8) | (v53 << 16) | (v54 << 24) | (v55 << 32) | (v56 << 40) | (v57 << 48) | (v58 << 56);
        v61 = v96 | (v95 << 8) | (v59 << 16);
        v62 = v147 | (v148 << 8) | (v149 << 16) | (v150 << 24) | (v151 << 32) | (v52 << 40) | (v153 << 48) | (v154 << 56);
        v63 = v61 | (v203 << 24) | (v93 << 32) | (v205 << 40) | (v92 << 48) | (v207 << 56);
        v64 = v91 | (v196 << 8) | (v191 << 16) | (v202 << 24) | (v90 << 32) | (v204 << 40) | (v146 << 48) | (v206 << 56);
        if (static UniversalControlUUID.compare(lhs:rhs:)(v62, v60, v63, v64) == -1)
          goto LABEL_59;
        if (static UniversalControlUUID.compare(lhs:rhs:)(v63, v64, v62, v60) != -1)
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56), v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56)) == -1)goto LABEL_59;
          static UniversalControlUUID.compare(lhs:rhs:)(v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56), v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56));
        }
        if (v225 >= v224
          && (v224 < v225 || v220 >= v140))
        {
          goto LABEL_59;
        }
      }
LABEL_54:
      if (!v79)
        __break(1u);
      v221 = *((_BYTE *)v4 - 68);
      v201 = *((_BYTE *)v4 - 67);
      v200 = *((_BYTE *)v4 - 66);
      v67 = *((_BYTE *)v4 - 65);
      v68 = *((_BYTE *)v4 - 64);
      v69 = *((_BYTE *)v4 - 63);
      v194 = *((_BYTE *)v4 - 62);
      v193 = *((_BYTE *)v4 - 61);
      v197 = *((_BYTE *)v4 - 60);
      v195 = *((_BYTE *)v4 - 59);
      v192 = *((_BYTE *)v4 - 58);
      v190 = *((_BYTE *)v4 - 57);
      v198 = *((_BYTE *)v4 - 56);
      v70 = *((_BYTE *)v4 - 55);
      v71 = *((_BYTE *)v4 - 54);
      v72 = *((_BYTE *)v4 - 53);
      v167 = *((unsigned __int8 *)v4 - 52);
      v165 = *((unsigned __int8 *)v4 - 51);
      v158 = *((unsigned __int8 *)v4 - 50);
      v73 = *((unsigned __int8 *)v4 - 49);
      v74 = *((unsigned __int8 *)v4 - 48);
      v234 = *(_DWORD *)(v4 - 1);
      v226 = *(int8x16_t *)((char *)v4 - 47);
      v231 = *(_OWORD *)((char *)v4 - 31);
      v75 = *(_QWORD *)((char *)v4 - 15);
      v229 = *(_DWORD *)((char *)v4 - 7);
      result = (uint64_t)memcpy(v4 - 34, v4 - 69, 0x46uLL);
      v6 = v200;
      v13 = v72;
      v12 = v71;
      v11 = v70;
      v10 = v190;
      v9 = v192;
      v8 = v193;
      v7 = v194;
      *((_BYTE *)v4 - 138) = v221;
      *((_BYTE *)v4 - 137) = v201;
      *((_BYTE *)v4 - 136) = v200;
      v189 = v67;
      *((_BYTE *)v4 - 135) = v67;
      v188 = v68;
      *((_BYTE *)v4 - 134) = v68;
      v187 = v69;
      *((_BYTE *)v4 - 133) = v69;
      *((_BYTE *)v4 - 132) = v194;
      *((_BYTE *)v4 - 131) = v193;
      *((_BYTE *)v4 - 130) = v197;
      *((_BYTE *)v4 - 129) = v195;
      *((_BYTE *)v4 - 128) = v192;
      *((_BYTE *)v4 - 127) = v190;
      *((_BYTE *)v4 - 126) = v198;
      *((_BYTE *)v4 - 125) = v70;
      *((_BYTE *)v4 - 124) = v71;
      *((_BYTE *)v4 - 123) = v72;
      *((_BYTE *)v4 - 122) = v167;
      *((_BYTE *)v4 - 121) = v165;
      *((_BYTE *)v4 - 120) = v158;
      v126 = v73;
      *((_BYTE *)v4 - 119) = v73;
      v127 = v74;
      *((_BYTE *)v4 - 118) = v74;
      *(int8x16_t *)((char *)v4 - 117) = v226;
      *(_OWORD *)((char *)v4 - 101) = v231;
      *(_QWORD *)((char *)v4 - 85) = v75;
      *(_DWORD *)((char *)v4 - 77) = v229;
      *((_DWORD *)v4 - 18) = v234;
      v4 -= 35;
      v14 = vextq_s8(v226, v226, 2uLL).u64[0];
      v125 = v226.i8[0];
      v124 = v226.u8[1];
      if (v80 == ++v108)
        goto LABEL_56;
    }
    v62 = v147 | (v148 << 8) | (v149 << 16) | (v150 << 24) | (v151 << 32) | (v152 << 40) | (v153 << 48) | (v154 << 56);
    v60 = v155 | (v156 << 8) | (v157 << 16) | (v168 << 24) | (v184 << 32) | (v182 << 40) | (v180 << 48) | (v175 << 56);
    v63 = v96 | (v95 << 8) | (v94 << 16) | (v203 << 24) | (v93 << 32) | (v205 << 40) | (v92 << 48) | (v207 << 56);
    v64 = v91 | (v196 << 8) | (v191 << 16) | (v202 << 24) | (v90 << 32) | (v204 << 40) | (v146 << 48) | (v206 << 56);
LABEL_59:
    result = sub_24978B870(v62, v60, v63, v64);
    if (result == 2)
    {
      result = sub_24978B8C8(v62, v60, v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56), v63, v64, v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56));
      if (result == 2)
        result = sub_24978B990((0x1000302u >> (8 * v99)) & 3 | (v140 << 16), (0x1000302u >> (8 * v83)) & 3 | (v220 << 16));
    }
LABEL_56:
    a3 = v80 + 1;
    v4 = v78 + 35;
  }
  while (v80 + 1 != a2);
  return result;
}

uint64_t sub_24979862C(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned __int8 *v12;
  char *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  BOOL v58;
  unsigned __int8 *v59;
  int v61;
  unsigned __int8 v62;
  char v63;
  char v64;
  char v65;
  char v66;
  unsigned __int8 v67;
  char v68;
  char v69;
  uint64_t v70;
  char v71;
  char v72;
  unsigned __int8 v73;
  char v74;
  unsigned __int8 v75;
  char v76;
  BOOL v77;
  int v78;
  uint64_t v79;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int v89;
  char v90;
  char v91;
  char v92;
  char v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  BOOL v135;
  BOOL v137;
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int v148;
  unsigned int v149;
  char v150;
  char v151;
  char v152;
  char v153;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unsigned __int8 *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unsigned int v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unsigned int v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unsigned int v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  unsigned int v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  int v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  unsigned __int8 *v394;
  uint64_t v395;
  char *__dst;
  unint64_t __dsta;
  unint64_t v398;
  unint64_t v399;
  char *v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  char v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  int v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  char *v506;
  unsigned __int8 __s2;
  char v508;
  char v509;
  char v510;
  char v511;
  char v512;
  char v513;
  char v514;
  char v515;
  char v516;
  char v517;
  char v518;
  char v519;
  char v520;
  char v521;
  char v522;
  unsigned __int8 __s1;
  char v524;
  char v525;
  char v526;
  char v527;
  char v528;
  char v529;
  char v530;
  char v531;
  char v532;
  unsigned __int8 v533;
  unsigned __int8 v534;
  unsigned __int8 v535;
  unsigned __int8 v536;
  unsigned __int8 v537;
  unsigned __int8 v538;
  uint64_t v539;

  v454 = a4;
  v5 = a1;
  v539 = *MEMORY[0x24BDAC8D0];
  v6 = a2 - a1;
  v7 = (a2 - a1) / 70;
  v506 = a2;
  v8 = a3 - (_QWORD)a2;
  v9 = (uint64_t)(a3 - (_QWORD)a2) / 70;
  if (v7 >= v9)
  {
    sub_2497AC098(a2, (uint64_t)(a3 - (_QWORD)a2) / 70, a4);
    v12 = (unsigned __int8 *)&v454[70 * v9];
    if (v8 < 70 || v5 >= v506)
    {
LABEL_139:
      sub_2497AC098(v454, (v12 - (unsigned __int8 *)v454) / 70, v506);
      return 1;
    }
    v14 = (char *)(a3 - 70);
    v400 = v5;
    while (1)
    {
      __dst = v14;
      v398 = (unint64_t)v12;
      v15 = v12 - 70;
      v437 = *(v12 - 70);
      v16 = *(v12 - 69);
      v17 = *(v12 - 68);
      v18 = *(v12 - 67);
      v443 = *(v12 - 66);
      v19 = *(v12 - 65);
      v20 = *(v12 - 64);
      v21 = *(v12 - 63);
      v22 = *(v12 - 62);
      v23 = *(v12 - 61);
      v350 = *(v12 - 60);
      v348 = *(v12 - 59);
      v347 = *(v12 - 58);
      v24 = *(v12 - 57);
      v25 = *(v12 - 56);
      v26 = *(v12 - 55);
      v290 = *(v12 - 54);
      v269 = *(v12 - 53);
      v267 = *(v12 - 52);
      v264 = *(v12 - 51);
      v262 = *(v12 - 50);
      v260 = *(v12 - 49);
      v258 = *(v12 - 48);
      v255 = *(v12 - 47);
      v288 = *(v12 - 46);
      v285 = *(v12 - 45);
      v253 = *(v12 - 44);
      v250 = *(v12 - 43);
      v248 = *(v12 - 42);
      v246 = *(v12 - 41);
      v244 = *(v12 - 40);
      v242 = *(v12 - 39);
      v27 = *(v12 - 38);
      v28 = *(v12 - 37);
      v29 = v15[35];
      v30 = v15[36];
      v31 = v15[37];
      v32 = v15[38];
      v33 = v15[39];
      v34 = v15[40];
      v35 = v15[41];
      v36 = v15[42];
      v37 = v15[43];
      v38 = v15[44];
      v39 = v15[45];
      v40 = v15[46];
      v41 = v15[47];
      v186 = v15[48];
      v406 = v15[49];
      v184 = v15[50];
      v402 = v15[51];
      v182 = v15[52];
      v180 = v15[53];
      v178 = v15[54];
      v413 = v15[55];
      v176 = v15[56];
      v409 = v15[57];
      v174 = v15[58];
      v450 = v15[59];
      v172 = v15[60];
      v171 = v15[61];
      v170 = v15[62];
      v476 = v15[63];
      v169 = v15[64];
      v283 = *((unsigned __int16 *)v15 + 33);
      v159 = v15;
      v497 = *((unsigned __int16 *)v15 + 34);
      v346 = *(v506 - 70);
      v345 = *(v506 - 69);
      v344 = *(v506 - 68);
      v440 = *(v506 - 67);
      v342 = *(v506 - 66);
      v339 = *(v506 - 65);
      v336 = *(v506 - 64);
      v333 = *(v506 - 63);
      v330 = *(v506 - 62);
      v327 = *(v506 - 61);
      v434 = *(v506 - 60);
      v431 = *(v506 - 59);
      v427 = *(v506 - 58);
      v424 = *(v506 - 57);
      v421 = *(v506 - 56);
      v417 = *(v506 - 55);
      v279 = *(v506 - 54);
      v281 = *(v506 - 53);
      v240 = *(v506 - 52);
      v238 = *(v506 - 51);
      v236 = *(v506 - 50);
      v234 = *(v506 - 49);
      v232 = *(v506 - 48);
      v230 = *(v506 - 47);
      v277 = *(v506 - 46);
      v275 = *(v506 - 45);
      v228 = *(v506 - 44);
      v226 = *(v506 - 43);
      v224 = *(v506 - 42);
      v222 = *(v506 - 41);
      v220 = *(v506 - 40);
      v218 = *(v506 - 39);
      v354 = *(v506 - 38);
      v356 = *(v506 - 37);
      v358 = *(v506 - 36);
      v360 = *(v506 - 35);
      v362 = *(v506 - 34);
      v365 = *(v506 - 33);
      v368 = *(v506 - 32);
      v371 = *(v506 - 31);
      v374 = *(v506 - 30);
      v377 = *(v506 - 29);
      v380 = *(v506 - 28);
      v383 = *(v506 - 27);
      v386 = *(v506 - 26);
      v389 = *(v506 - 25);
      v391 = *(v506 - 24);
      v393 = *(v506 - 23);
      v202 = *(v506 - 22);
      v204 = *(v506 - 21);
      v304 = *(v506 - 20);
      v305 = *(v506 - 19);
      v206 = *(v506 - 18);
      v307 = *(v506 - 17);
      v310 = *(v506 - 16);
      v208 = *(v506 - 15);
      v313 = *(v506 - 14);
      v210 = *(v506 - 13);
      v316 = *(v506 - 12);
      v212 = *(v506 - 11);
      v319 = *(v506 - 10);
      v214 = *(v506 - 9);
      v321 = *(v506 - 8);
      v216 = *(v506 - 7);
      v198 = v15[34];
      v200 = *(v506 - 6);
      v273 = *((unsigned __int16 *)v506 - 2);
      v323 = *((unsigned __int16 *)v506 - 1);
      v325 = v27;
      __s1 = v27;
      v524 = v28;
      v525 = v198;
      v526 = v29;
      v194 = v30;
      v196 = v32;
      v527 = v30;
      v471 = v31;
      v528 = v31;
      v529 = v32;
      v464 = v33;
      v530 = v33;
      v192 = v34;
      v531 = v34;
      v478 = v35;
      v532 = v35;
      v190 = v36;
      v533 = v36;
      v461 = v37;
      v534 = v37;
      v535 = v38;
      v495 = v39;
      v536 = v39;
      v188 = v40;
      v537 = v40;
      v455 = v41;
      v538 = v41;
      __s2 = v437;
      v298 = v16;
      v508 = v16;
      v509 = v17;
      v294 = v18;
      v510 = v18;
      v511 = v443;
      v301 = v19;
      v512 = v19;
      v292 = v20;
      v513 = v20;
      v42 = v21;
      v514 = v21;
      v43 = v22;
      v515 = v22;
      v44 = v23;
      v516 = v23;
      v517 = v350;
      v518 = v348;
      v519 = v347;
      v45 = v24;
      v520 = v24;
      v46 = v25;
      v521 = v25;
      v47 = v26;
      v522 = v26;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X22 }
      v458 = v298;
      v499 = v17;
      v503 = v294;
      v493 = v301;
      v490 = v42;
      v352 = v43;
      v446 = v44;
      v485 = v45;
      v481 = v47;
      v483 = v46;
      v168 = v269;
      v164 = v264;
      v163 = v255;
      v167 = v285;
      v162 = v250;
      v299 = v28;
      v295 = v29;
      v302 = v471;
      v158 = v464;
      v156 = v455;
      v270 = v406;
      v265 = v402;
      v256 = v413;
      v286 = v409;
      v251 = v450;
      __s1 = v354;
      v524 = v356;
      v525 = v358;
      v526 = v360;
      v527 = v362;
      v528 = v365;
      v529 = v368;
      v530 = v371;
      v531 = v374;
      v532 = v377;
      v533 = v380;
      v534 = v383;
      v535 = v386;
      v536 = v389;
      v537 = v391;
      v538 = v393;
      __s2 = v346;
      v508 = v345;
      v509 = v344;
      v510 = v440;
      v511 = v342;
      v48 = v339;
      v512 = v339;
      v513 = v336;
      v49 = v333;
      v514 = v333;
      v50 = v330;
      v515 = v330;
      v51 = v327;
      v516 = v327;
      v517 = v434;
      v518 = v431;
      v519 = v427;
      v520 = v424;
      v521 = v421;
      v522 = v417;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X8 }
      v474 = v339;
      v472 = v336;
      v468 = v333;
      v451 = v330;
      v456 = v327;
      v414 = v434;
      v410 = v431;
      v407 = v427;
      v465 = v417;
      v340 = v365;
      v337 = v368;
      v334 = v371;
      v331 = v374;
      v328 = v377;
      v435 = v380;
      v432 = v383;
      v428 = v386;
      v418 = v393;
      v394 = (unsigned __int8 *)(__dst + 70);
      __s1 = v437;
      v524 = v458;
      v525 = v17;
      v526 = v503;
      v527 = v443;
      v528 = v493;
      v529 = v292;
      v530 = v490;
      v531 = v43;
      v532 = v446;
      v533 = v350;
      v534 = v348;
      v535 = v347;
      v536 = v485;
      v537 = v483;
      v538 = v47;
      __s2 = v346;
      v508 = v345;
      v509 = v344;
      v52 = v440;
      v510 = v440;
      v511 = v342;
      v512 = v48;
      v513 = v472;
      v514 = v49;
      v515 = v50;
      v516 = v51;
      v53 = v414;
      v517 = v414;
      v54 = v410;
      v518 = v410;
      v55 = v407;
      v519 = v407;
      v56 = v424;
      v520 = v424;
      v521 = v421;
      v522 = v465;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
LABEL_18:
        v57 = __dst;
        v58 = v394 != (unsigned __int8 *)v506 || __dst >= v506;
        v59 = (unsigned __int8 *)(v506 - 70);
        v506 -= 70;
        v12 = (unsigned __int8 *)v398;
        if (!v58)
          goto LABEL_24;
        goto LABEL_23;
      }
      __s1 = v346;
      v524 = v345;
      v525 = v344;
      v526 = v440;
      v527 = v342;
      v528 = v474;
      v529 = v472;
      v530 = v468;
      v531 = v50;
      v532 = v51;
      v533 = v414;
      v534 = v410;
      v535 = v407;
      v536 = v424;
      v537 = v421;
      v538 = v465;
      __s2 = v437;
      v508 = v458;
      v509 = v17;
      v510 = v503;
      v511 = v443;
      v512 = v493;
      v513 = v292;
      v514 = v490;
      v515 = v352;
      v516 = v446;
      v517 = v350;
      v518 = v348;
      v519 = v347;
      v520 = v485;
      v521 = v483;
      v522 = v481;
      v61 = memcmp(&__s1, &__s2, 0x10uLL);
      v63 = v345;
      v62 = v346;
      v64 = v456;
      v65 = v451;
      v66 = v458;
      v67 = v437;
      v68 = v352;
      v69 = v446;
      v70 = v499;
      v366 = v437 | (v458 << 8);
      v369 = v352 | (v446 << 8);
      v372 = v346 | (v345 << 8);
      v375 = v451 | (v456 << 8);
      v384 = v279 | (v281 << 8);
      v387 = v277 | (v275 << 8);
      v378 = v290 | (v168 << 8);
      v381 = v288 | (v167 << 8);
      if ((v61 & 0x80000000) == 0)
      {
        __s1 = v437;
        v524 = v458;
        v525 = v499;
        v526 = v503;
        v527 = v443;
        v528 = v493;
        v529 = v292;
        v530 = v490;
        v531 = v352;
        v532 = v446;
        v533 = v350;
        v534 = v348;
        v535 = v347;
        v536 = v485;
        v537 = v483;
        v538 = v481;
        __s2 = v346;
        v508 = v345;
        v509 = v344;
        v510 = v440;
        v511 = v342;
        v512 = v474;
        v513 = v472;
        v514 = v468;
        v515 = v451;
        v516 = v456;
        v517 = v414;
        v518 = v410;
        v519 = v407;
        v520 = v424;
        v521 = v421;
        v522 = v465;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_18;
        __s1 = v346;
        v524 = v345;
        v525 = v344;
        v526 = v440;
        v527 = v342;
        v528 = v474;
        v529 = v472;
        v530 = v468;
        v531 = v451;
        v532 = v456;
        v533 = v414;
        v534 = v410;
        v535 = v407;
        v536 = v424;
        v537 = v421;
        v538 = v465;
        __s2 = v437;
        v508 = v458;
        v509 = v499;
        v510 = v503;
        v511 = v443;
        v512 = v493;
        v513 = v292;
        v514 = v490;
        v515 = v352;
        v516 = v446;
        v517 = v350;
        v518 = v348;
        v519 = v347;
        v520 = v485;
        v521 = v483;
        v522 = v481;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v290;
          v524 = v168;
          v531 = v288;
          v532 = v167;
          __s2 = v279;
          v508 = v281;
          v515 = v277;
          v516 = v275;
          v525 = v267;
          v526 = v164;
          v527 = v262;
          v528 = v260;
          v529 = v258;
          v530 = v163;
          v533 = v253;
          v534 = v162;
          v535 = v248;
          v536 = v246;
          v537 = v244;
          v538 = v242;
          v509 = v240;
          v510 = v238;
          v511 = v236;
          v512 = v234;
          v513 = v232;
          v514 = v230;
          v517 = v228;
          v518 = v226;
          v519 = v224;
          v520 = v222;
          v521 = v220;
          v522 = v218;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_18;
          static UniversalControlUUID.compare(lhs:rhs:)(v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56), v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56));
        }
        __s1 = v346;
        v524 = v345;
        v525 = v344;
        v526 = v440;
        v527 = v342;
        v528 = v474;
        v529 = v472;
        v530 = v468;
        v531 = v451;
        v532 = v456;
        v533 = v414;
        v534 = v410;
        v535 = v407;
        v536 = v424;
        v537 = v421;
        v538 = v465;
        __s2 = v437;
        v508 = v458;
        v509 = v499;
        v510 = v503;
        v511 = v443;
        v512 = v493;
        v513 = v292;
        v514 = v490;
        v515 = v352;
        v516 = v446;
        v517 = v350;
        v518 = v348;
        v519 = v347;
        v520 = v485;
        v521 = v483;
        v522 = v481;
        v78 = memcmp(&__s1, &__s2, 0x10uLL);
        v63 = v345;
        v62 = v346;
        v70 = v499;
        v69 = v446;
        v68 = v352;
        v67 = v437;
        v66 = v458;
        v65 = v451;
        v64 = v456;
        if ((v78 & 0x80000000) == 0)
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v366 | (v499 << 16) | (v503 << 24) | (v443 << 32) | (v493 << 40) | (v292 << 48) | (v490 << 56), v369 | (v350 << 16) | (v348 << 24) | (v347 << 32) | (v485 << 40) | (v483 << 48) | (v481 << 56), v372 | (v344 << 16) | (v440 << 24) | (v342 << 32) | (v474 << 40) | (v472 << 48) | (v468 << 56), v375 | (v414 << 16) | (v410 << 24) | (v407 << 32) | (v424 << 40) | (v421 << 48) | (v465 << 56)) != -1)
          {
            v79 = static UniversalControlUUID.compare(lhs:rhs:)(v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56), v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56));
            v67 = v437;
            v66 = v458;
            v68 = v352;
            v69 = v446;
            v52 = v440;
            v53 = v414;
            v54 = v410;
            v55 = v407;
            v56 = v424;
            v62 = v346;
            v70 = v499;
            v65 = v451;
            v64 = v456;
            v63 = v345;
            if (v79 == -1)
              goto LABEL_30;
            static UniversalControlUUID.compare(lhs:rhs:)(v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56), v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56));
          }
          v67 = v437;
          v66 = v458;
          v68 = v352;
          v69 = v446;
          v52 = v440;
          v53 = v414;
          v54 = v410;
          v55 = v407;
          v56 = v424;
          v62 = v346;
          v70 = v499;
          v65 = v451;
          v64 = v456;
          v63 = v345;
          if (v169 < v200)
            goto LABEL_18;
          if (v200 >= v169 && v283 < v273)
            goto LABEL_18;
        }
      }
LABEL_30:
      v447 = v69;
      v500 = v70;
      v411 = v54;
      v415 = v53;
      v403 = v56;
      __s1 = v62;
      v524 = v63;
      v525 = v344;
      v526 = v52;
      v527 = v342;
      v528 = v474;
      v529 = v472;
      v530 = v468;
      v531 = v65;
      v532 = v64;
      v533 = v53;
      v534 = v54;
      v535 = v55;
      v536 = v56;
      v537 = v421;
      v538 = v465;
      __s2 = v67;
      v508 = v66;
      v509 = v70;
      v510 = v503;
      v511 = v443;
      v512 = v493;
      v513 = v292;
      v514 = v490;
      v515 = v68;
      v516 = v69;
      v517 = v350;
      v518 = v348;
      v519 = v347;
      v520 = v485;
      v521 = v483;
      v522 = v481;
      v71 = v64;
      v72 = v65;
      v73 = v62;
      v74 = v68;
      v75 = v67;
      v76 = v66;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v75;
        v524 = v76;
        v525 = v500;
        v526 = v503;
        v527 = v443;
        v528 = v493;
        v529 = v292;
        v530 = v490;
        v531 = v74;
        v532 = v447;
        v533 = v350;
        v534 = v348;
        v535 = v347;
        v536 = v485;
        v537 = v483;
        v538 = v481;
        __s2 = v73;
        v508 = v63;
        v509 = v344;
        v510 = v52;
        v511 = v342;
        v512 = v474;
        v513 = v472;
        v514 = v468;
        v515 = v72;
        v516 = v71;
        v517 = v415;
        v518 = v411;
        v519 = v55;
        v520 = v403;
        v521 = v421;
        v522 = v465;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_52;
        __s1 = v73;
        v524 = v63;
        v531 = v72;
        v532 = v71;
        __s2 = v75;
        v508 = v76;
        v515 = v74;
        v516 = v447;
        v525 = v344;
        v526 = v52;
        v527 = v342;
        v528 = v474;
        v529 = v472;
        v530 = v468;
        v533 = v415;
        v534 = v411;
        v535 = v55;
        v536 = v403;
        v537 = v421;
        v538 = v465;
        v509 = v500;
        v510 = v503;
        v511 = v443;
        v512 = v493;
        v513 = v292;
        v514 = v490;
        v517 = v350;
        v518 = v348;
        v519 = v347;
        v520 = v485;
        v521 = v483;
        v522 = v481;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v366 | (v500 << 16) | (v503 << 24) | (v443 << 32) | (v493 << 40) | (v292 << 48) | (v490 << 56), v369 | (v350 << 16) | (v348 << 24) | (v347 << 32) | (v485 << 40) | (v483 << 48) | (v481 << 56), v372 | (v344 << 16) | (v52 << 24) | (v342 << 32) | (v474 << 40) | (v472 << 48) | (v468 << 56), v375 | (v415 << 16) | (v411 << 24) | (v55 << 32) | (v403 << 40) | (v421 << 48) | (v465 << 56)) == -1|| (sub_249772148(v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56), v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56)), (v92 & 1) == 0))
          {
            if (((sub_249772148(v366 | (v500 << 16) | (v503 << 24) | (v443 << 32) | (v493 << 40) | (v292 << 48) | (v490 << 56), v369 | (v350 << 16) | (v348 << 24) | (v347 << 32) | (v485 << 40) | (v483 << 48) | (v481 << 56), v372 | (v344 << 16) | (v52 << 24) | (v342 << 32) | (v474 << 40) | (v472 << 48) | (v468 << 56), v375 | (v415 << 16) | (v411 << 24) | (v55 << 32) | (v403 << 40) | (v421 << 48) | (v465 << 56)), v93 != 2)|| (sub_249772148(v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56), v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56)), v93 != 2))&& (v93 & 1) != 0|| v200 >= v169&& (v169 >= v200 ? (v94 = v273 >= v283) : (v94 = 1), v94))
            {
LABEL_52:
              v81 = dword_24983AE80[(char)v169];
              v82 = dword_24983AE80[(char)v200];
              v83 = v325 | (v299 << 8) | (v198 << 16) | (v295 << 24) | (v194 << 32) | (v302 << 40) | (v196 << 48) | (v158 << 56);
              v84 = v192 | (v478 << 8) | (v190 << 16) | (v461 << 24) | (v240 << 32) | (v495 << 40) | (v188 << 48) | (v156 << 56);
              v85 = v354 | (v356 << 8) | (v358 << 16) | (v360 << 24) | (v362 << 32) | (v340 << 40) | (v337 << 48) | (v334 << 56);
              v86 = v331 | (v328 << 8) | (v435 << 16) | (v432 << 24) | (v428 << 32) | (v389 << 40) | (v391 << 48) | (v418 << 56);
              if (static UniversalControlUUID.compare(lhs:rhs:)(v83, v84, v85, v86) == -1)
                goto LABEL_18;
              v501 = v202 | (v204 << 8);
              v502 = v313 | (v210 << 8);
              v504 = v186 | (v270 << 8);
              v87 = v176 | (v286 << 8);
              v88 = v82 | (v323 << 16);
              v89 = v81 | (v497 << 16);
              if (static UniversalControlUUID.compare(lhs:rhs:)(v85, v86, v83, v84) != -1)
              {
                sub_249772148(v83, v84, v85, v86);
                if (v90 != 2
                  || (sub_249772148(v504 | (v184 << 16) | (v265 << 24) | (v182 << 32) | (v180 << 40) | (v178 << 48) | (v256 << 56), v87 | (v174 << 16) | (v251 << 24) | (v172 << 32) | (v171 << 40) | (v170 << 48) | (v476 << 56), v501 | (v304 << 16) | (v305 << 24) | (v206 << 32) | (v307 << 40) | (v310 << 48) | (v208 << 56), v502 | (v316 << 16) | (v212 << 24) | (v319 << 32) | (v214 << 40) | (v321 << 48) | (v216 << 56)), v90 != 2))
                {
                  if ((v90 & 1) != 0)
                    goto LABEL_18;
                }
                if ((sub_249772148(v85, v86, v83, v84), v91 == 2)
                  && (sub_249772148(v501 | (v304 << 16) | (v305 << 24) | (v206 << 32) | (v307 << 40) | (v310 << 48) | (v208 << 56), v502 | (v316 << 16) | (v212 << 24) | (v319 << 32) | (v214 << 40) | (v321 << 48) | (v216 << 56), v504 | (v184 << 16) | (v265 << 24) | (v182 << 32) | (v180 << 40) | (v178 << 48) | (v256 << 56), v87 | (v174 << 16) | (v251 << 24) | (v172 << 32) | (v171 << 40) | (v170 << 48) | (v476 << 56)), v91 == 2)|| (v91 & 1) == 0)
                {
                  if ((sub_24978B990(v89, v88) & 1) != 0)
                    goto LABEL_18;
                }
              }
              if (static UniversalControlUUID.compare(lhs:rhs:)(v85, v86, v83, v84) != -1
                && static UniversalControlUUID.compare(lhs:rhs:)(v83, v84, v85, v86) != -1
                && sub_24978B8C8(v85, v86, v501 | (v304 << 16) | (v305 << 24) | (v206 << 32) | (v307 << 40) | (v310 << 48) | (v208 << 56), v502 | (v316 << 16) | (v212 << 24) | (v319 << 32) | (v214 << 40) | (v321 << 48) | (v216 << 56), v83, v84, v504 | (v184 << 16) | (v265 << 24) | (v182 << 32) | (v180 << 40) | (v178 << 48) | (v256 << 56), v87 | (v174 << 16) | (v251 << 24) | (v172 << 32) | (v171 << 40) | (v170 << 48) | (v476 << 56)) == 2)
              {
                sub_24978B990(v88, v89);
              }
            }
          }
        }
      }
      v57 = __dst;
      v77 = v394 != (unsigned __int8 *)v398 || (unint64_t)__dst >= v398;
      v59 = v159;
      v12 = v159;
      if (!v77)
        goto LABEL_24;
LABEL_23:
      memmove(v57, v59, 0x46uLL);
LABEL_24:
      v14 = v57 - 70;
      if (v12 <= (unsigned __int8 *)v454 || v506 <= v400)
        goto LABEL_139;
    }
  }
  sub_2497AC098(a1, (a2 - a1) / 70, a4);
  v10 = (unsigned __int8 *)&v454[70 * v7];
  if (v6 >= 70 && (unint64_t)v506 < a3)
  {
    v399 = (unint64_t)v10;
    v157 = a3;
    while (1)
    {
      v401 = v5;
      v95 = *v506;
      v96 = v506[1];
      v97 = v506[2];
      v98 = v506[3];
      v99 = v506[4];
      v100 = v506[5];
      v101 = v506[6];
      v102 = v506[7];
      v103 = v506[8];
      v104 = v506[9];
      v105 = v506[10];
      v106 = v506[33];
      v107 = v506[34];
      v108 = v506[35];
      v109 = v506[36];
      v110 = v506[37];
      v111 = v506[38];
      v112 = v506[39];
      v113 = v506[40];
      v114 = v506[41];
      v379 = *v454;
      v453 = v454[1];
      v376 = v454[2];
      v452 = v454[3];
      v373 = v454[4];
      v370 = v454[5];
      v367 = v454[6];
      v363 = v454[7];
      v361 = v454[8];
      v359 = v454[9];
      v475 = v506[32];
      __s1 = v506[32];
      v473 = v106;
      v524 = v106;
      v469 = v107;
      v525 = v107;
      v466 = v108;
      v526 = v108;
      v462 = v109;
      v527 = v109;
      v459 = v110;
      v528 = v110;
      v457 = v111;
      v529 = v111;
      v343 = v112;
      v530 = v112;
      v205 = v114;
      v207 = v113;
      v531 = v113;
      v532 = v114;
      v357 = v454[10];
      v533 = v506[42];
      v115 = v506[11];
      v448 = v454[11];
      v189 = v506[43];
      v534 = v506[43];
      v116 = v506[12];
      v444 = v454[12];
      v187 = v506[44];
      v535 = v506[44];
      v117 = v506[13];
      v441 = v454[13];
      v185 = v506[45];
      v536 = v506[45];
      v118 = v506[14];
      v438 = v454[14];
      v183 = v506[46];
      v537 = v506[46];
      v119 = v506[15];
      v436 = v454[15];
      v181 = v506[47];
      v538 = v506[47];
      v322 = v95;
      __s2 = v95;
      v320 = v96;
      v508 = v96;
      v317 = v97;
      v509 = v97;
      v314 = v98;
      v510 = v98;
      v311 = v99;
      v511 = v99;
      v308 = v100;
      v512 = v100;
      v306 = v101;
      v513 = v101;
      v514 = v102;
      v303 = v103;
      v515 = v103;
      v300 = v104;
      v516 = v104;
      v297 = v105;
      v517 = v105;
      v518 = v115;
      v519 = v116;
      v520 = v117;
      v521 = v118;
      v522 = v119;
      v120 = v506[16];
      v293 = v506[17];
      v257 = v506[18];
      v259 = v506[19];
      v261 = v506[20];
      v263 = v506[21];
      v266 = v506[22];
      v271 = v506[23];
      v291 = v506[24];
      v289 = v506[25];
      v121 = v506[26];
      v268 = v506[27];
      v122 = v506[28];
      v274 = v506[29];
      v123 = v506[30];
      v276 = v506[31];
      v191 = v506[48];
      v193 = v506[49];
      v195 = v506[50];
      v197 = v506[51];
      v199 = v506[52];
      v201 = v506[53];
      v203 = v506[54];
      v479 = v506[55];
      v482 = v506[56];
      v484 = v506[57];
      v486 = v506[58];
      v488 = v506[59];
      v487 = v506[60];
      v177 = v506[61];
      v477 = v506[62];
      v179 = v506[63];
      v175 = v506[64];
      v296 = *((unsigned __int16 *)v506 + 33);
      v489 = *((unsigned __int16 *)v506 + 34);
      v284 = v454[16];
      v282 = v454[17];
      v231 = v454[18];
      v233 = v454[19];
      v235 = v454[20];
      v237 = v454[21];
      v241 = v454[22];
      v245 = v454[23];
      v280 = v454[24];
      v278 = v454[25];
      v239 = v454[26];
      v243 = v454[27];
      v247 = v454[28];
      v249 = v454[29];
      v252 = v454[30];
      v254 = v454[31];
      v382 = v454[32];
      v385 = v454[33];
      v388 = v454[34];
      v390 = v454[35];
      v392 = v454[36];
      v395 = v454[37];
      __dsta = v454[38];
      v404 = v454[39];
      v408 = v454[40];
      v412 = v454[41];
      v416 = v454[42];
      v419 = v454[43];
      v422 = v454[44];
      v425 = v454[45];
      v429 = v454[46];
      v433 = v454[47];
      v324 = v454[48];
      v326 = v454[49];
      v329 = v454[50];
      v211 = v454[51];
      v332 = v454[52];
      v213 = v454[53];
      v215 = v454[54];
      v217 = v454[55];
      v219 = v454[56];
      v221 = v454[57];
      v223 = v454[58];
      v225 = v454[59];
      v227 = v454[60];
      v335 = v454[61];
      v229 = v454[62];
      v338 = v454[63];
      v209 = v454[64];
      v287 = *((unsigned __int16 *)v454 + 33);
      v341 = *((unsigned __int16 *)v454 + 34);
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X14 }
      v355 = v317;
      v353 = v314;
      v351 = v311;
      v349 = v308;
      v498 = v115;
      v494 = v117;
      v496 = v116;
      v491 = v119;
      v492 = v118;
      v173 = v120;
      v166 = v271;
      v165 = v122;
      v318 = v469;
      v315 = v466;
      v312 = v462;
      v309 = v459;
      v272 = v479;
      v160 = v123;
      v161 = v121;
      __s1 = v382;
      v524 = v385;
      v525 = v388;
      v526 = v390;
      v527 = v392;
      v528 = v395;
      v529 = __dsta;
      v530 = v404;
      v531 = v408;
      v532 = v412;
      v533 = v416;
      v534 = v419;
      v535 = v422;
      v536 = v425;
      v537 = v429;
      v538 = v433;
      __s2 = v379;
      v508 = v453;
      v509 = v376;
      v510 = v452;
      v511 = v373;
      v512 = v370;
      v513 = v367;
      v514 = v363;
      v515 = v361;
      v516 = v359;
      v517 = v357;
      v518 = v448;
      v519 = v444;
      v520 = v441;
      v521 = v438;
      v522 = v436;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X8 }
      v480 = v363;
      v470 = v448;
      v467 = v444;
      v463 = v441;
      v460 = v438;
      v364 = v404;
      v449 = v419;
      v445 = v422;
      v442 = v425;
      v439 = v429;
      __s1 = v322;
      v524 = v320;
      v124 = v355;
      v525 = v355;
      v125 = v353;
      v526 = v353;
      v126 = v351;
      v527 = v351;
      v127 = v349;
      v528 = v349;
      v128 = v306;
      v529 = v306;
      v129 = v102;
      v530 = v102;
      v130 = v303;
      v531 = v303;
      v131 = v300;
      v532 = v300;
      v533 = v297;
      v534 = v498;
      v535 = v496;
      v536 = v494;
      v537 = v492;
      v538 = v491;
      v132 = v379;
      __s2 = v379;
      v508 = v453;
      v509 = v376;
      v510 = v452;
      v511 = v373;
      v512 = v370;
      v513 = v367;
      v514 = v480;
      v515 = v361;
      v516 = v359;
      v517 = v357;
      v518 = v470;
      v519 = v467;
      v520 = v463;
      v521 = v460;
      v522 = v436;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_83;
      __s1 = v379;
      v524 = v453;
      v525 = v376;
      v526 = v452;
      v527 = v373;
      v528 = v370;
      v529 = v367;
      v530 = v480;
      v531 = v361;
      v532 = v359;
      v533 = v357;
      v534 = v470;
      v535 = v467;
      v536 = v463;
      v537 = v460;
      v538 = v436;
      __s2 = v322;
      v508 = v320;
      v509 = v355;
      v510 = v353;
      v511 = v351;
      v512 = v349;
      v513 = v306;
      v514 = v102;
      v515 = v303;
      v516 = v300;
      v517 = v297;
      v518 = v498;
      v519 = v496;
      v520 = v494;
      v521 = v492;
      v522 = v491;
      v426 = v284 | (v282 << 8);
      v430 = v280 | (v278 << 8);
      v420 = v173 | (v293 << 8);
      v423 = v291 | (v289 << 8);
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v322;
        v524 = v320;
        v525 = v355;
        v526 = v353;
        v527 = v351;
        v528 = v349;
        v529 = v306;
        v530 = v102;
        v531 = v303;
        v532 = v300;
        v533 = v297;
        v534 = v498;
        v535 = v496;
        v536 = v494;
        v537 = v492;
        v538 = v491;
        __s2 = v379;
        v508 = v453;
        v509 = v376;
        v510 = v452;
        v511 = v373;
        v512 = v370;
        v513 = v367;
        v514 = v480;
        v515 = v361;
        v516 = v359;
        v517 = v357;
        v518 = v470;
        v519 = v467;
        v520 = v463;
        v521 = v460;
        v522 = v436;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_83;
        __s1 = v379;
        v524 = v453;
        v525 = v376;
        v526 = v452;
        v527 = v373;
        v528 = v370;
        v529 = v367;
        v530 = v480;
        v531 = v361;
        v532 = v359;
        v533 = v357;
        v534 = v470;
        v535 = v467;
        v536 = v463;
        v537 = v460;
        v538 = v436;
        __s2 = v322;
        v508 = v320;
        v509 = v355;
        v510 = v353;
        v511 = v351;
        v512 = v349;
        v513 = v306;
        v514 = v102;
        v515 = v303;
        v516 = v300;
        v517 = v297;
        v518 = v498;
        v519 = v496;
        v520 = v494;
        v521 = v492;
        v522 = v491;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v173;
          v524 = v293;
          v531 = v291;
          v532 = v289;
          __s2 = v284;
          v508 = v282;
          v515 = v280;
          v516 = v278;
          v525 = v257;
          v526 = v259;
          v527 = v261;
          v528 = v263;
          v529 = v266;
          v530 = v166;
          v533 = v161;
          v534 = v268;
          v535 = v165;
          v536 = v274;
          v537 = v160;
          v538 = v276;
          v509 = v231;
          v510 = v233;
          v511 = v235;
          v512 = v237;
          v513 = v241;
          v514 = v245;
          v517 = v239;
          v518 = v243;
          v519 = v247;
          v520 = v249;
          v521 = v252;
          v522 = v254;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_83;
        }
        __s1 = v379;
        v524 = v453;
        v525 = v376;
        v526 = v452;
        v527 = v373;
        v528 = v370;
        v529 = v367;
        v530 = v480;
        v531 = v361;
        v532 = v359;
        v533 = v357;
        v534 = v470;
        v535 = v467;
        v536 = v463;
        v537 = v460;
        v538 = v436;
        __s2 = v322;
        v508 = v320;
        v509 = v355;
        v510 = v353;
        v511 = v351;
        v512 = v349;
        v513 = v306;
        v514 = v102;
        v515 = v303;
        v516 = v300;
        v517 = v297;
        v518 = v498;
        v519 = v496;
        v520 = v494;
        v521 = v492;
        v522 = v491;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v322;
          v524 = v320;
          v525 = v355;
          v526 = v353;
          v527 = v351;
          v528 = v349;
          v529 = v306;
          v530 = v102;
          v531 = v303;
          v532 = v300;
          v533 = v297;
          v534 = v498;
          v535 = v496;
          v536 = v494;
          v537 = v492;
          v538 = v491;
          __s2 = v379;
          v508 = v453;
          v509 = v376;
          v510 = v452;
          v511 = v373;
          v512 = v370;
          v513 = v367;
          v514 = v480;
          v515 = v361;
          v516 = v359;
          v517 = v357;
          v518 = v470;
          v519 = v467;
          v520 = v463;
          v521 = v460;
          v522 = v436;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_105;
          v405 = v423 | (v161 << 16) | (v268 << 24) | (v165 << 32) | (v274 << 40) | (v160 << 48) | (v276 << 56);
          v124 = v355;
          v125 = v353;
          v126 = v351;
          v127 = v349;
          v128 = v306;
          v129 = v102;
          v130 = v303;
          v131 = v300;
          v132 = v379;
          if (static UniversalControlUUID.compare(lhs:rhs:)(v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56), v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v405) != -1)break;
        }
      }
LABEL_92:
      __s1 = v132;
      v524 = v453;
      v525 = v376;
      v526 = v452;
      v527 = v373;
      v528 = v370;
      v529 = v367;
      v530 = v480;
      v531 = v361;
      v532 = v359;
      v533 = v357;
      v534 = v470;
      v535 = v467;
      v536 = v463;
      v537 = v460;
      v538 = v436;
      __s2 = v322;
      v508 = v320;
      v509 = v124;
      v510 = v125;
      v511 = v126;
      v512 = v127;
      v513 = v128;
      v514 = v129;
      v515 = v130;
      v516 = v131;
      v517 = v297;
      v518 = v498;
      v519 = v496;
      v520 = v494;
      v521 = v492;
      v522 = v491;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_93;
      __s1 = v322;
      v524 = v320;
      v525 = v124;
      v526 = v125;
      v527 = v126;
      v528 = v127;
      v529 = v128;
      v530 = v129;
      v531 = v130;
      v532 = v131;
      v533 = v297;
      v534 = v498;
      v535 = v496;
      v536 = v494;
      v537 = v492;
      v538 = v491;
      __s2 = v132;
      v508 = v453;
      v509 = v376;
      v510 = v452;
      v511 = v373;
      v512 = v370;
      v513 = v367;
      v514 = v480;
      v515 = v361;
      v516 = v359;
      v517 = v357;
      v518 = v470;
      v519 = v467;
      v520 = v463;
      v521 = v460;
      v522 = v436;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v132;
        v524 = v453;
        v525 = v376;
        v526 = v452;
        v527 = v373;
        v528 = v370;
        v529 = v367;
        v530 = v480;
        v531 = v361;
        v532 = v359;
        v533 = v357;
        v534 = v470;
        v535 = v467;
        v536 = v463;
        v537 = v460;
        v538 = v436;
        __s2 = v322;
        v508 = v320;
        v509 = v124;
        v510 = v125;
        v511 = v126;
        v512 = v127;
        v513 = v128;
        v514 = v129;
        v515 = v130;
        v516 = v131;
        v517 = v297;
        v518 = v498;
        v519 = v496;
        v520 = v494;
        v521 = v492;
        v522 = v491;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_93;
        __s1 = v322;
        v524 = v320;
        v525 = v124;
        v526 = v125;
        v527 = v126;
        v528 = v127;
        v529 = v128;
        v530 = v129;
        v531 = v130;
        v532 = v131;
        v533 = v297;
        v534 = v498;
        v535 = v496;
        v536 = v494;
        v537 = v492;
        v538 = v491;
        __s2 = v132;
        v508 = v453;
        v509 = v376;
        v510 = v452;
        v511 = v373;
        v512 = v370;
        v513 = v367;
        v514 = v480;
        v515 = v361;
        v516 = v359;
        v517 = v357;
        v518 = v470;
        v519 = v467;
        v520 = v463;
        v521 = v460;
        v522 = v436;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          sub_249772148(v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56), v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v423 | (v161 << 16) | (v268 << 24) | (v165 << 32) | (v274 << 40) | (v160 << 48) | (v276 << 56));
          if ((v152 & 1) != 0)
            goto LABEL_93;
        }
        if ((sub_249772148(v322 | (v320 << 8) | (v124 << 16) | (v125 << 24) | (v126 << 32) | (v127 << 40) | (v128 << 48) | (v129 << 56), v130 | (v131 << 8) | (v297 << 16) | (v498 << 24) | (v496 << 32) | (v494 << 40) | (v492 << 48) | (v491 << 56), v132 | (v453 << 8) | (v376 << 16) | (v452 << 24) | (v373 << 32) | (v370 << 40) | (v367 << 48) | (v480 << 56), v361 | (v359 << 8) | (v357 << 16) | (v470 << 24) | (v467 << 32) | (v463 << 40) | (v460 << 48) | (v436 << 56)), v153 == 2)&& (sub_249772148(v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v423 | (v161 << 16) | (v268 << 24) | (v165 << 32) | (v274 << 40) | (v160 << 48) | (v276 << 56), v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56)), v153 == 2)|| (v153 & 1) == 0)
        {
          if (v209 < v175)
            goto LABEL_93;
          if (v175 >= v209 && v287 < v296)
            goto LABEL_93;
        }
      }
      v139 = dword_24983AE80[(char)v175];
      v140 = dword_24983AE80[(char)v209];
      __s1 = v475;
      v524 = v473;
      v525 = v318;
      v526 = v315;
      v527 = v312;
      v528 = v309;
      v529 = v457;
      v530 = v343;
      v531 = v207;
      v532 = v205;
      v533 = v245;
      v534 = v189;
      v535 = v187;
      v536 = v185;
      v537 = v183;
      v538 = v181;
      __s2 = v382;
      v508 = v385;
      v509 = v388;
      v510 = v390;
      v511 = v392;
      v512 = v395;
      v513 = __dsta;
      v514 = v364;
      v515 = v408;
      v516 = v412;
      v517 = v416;
      v518 = v449;
      v519 = v445;
      v520 = v442;
      v521 = v439;
      v522 = v433;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        v141 = v382 | (v385 << 8) | (v388 << 16) | (v390 << 24) | (v392 << 32) | (v395 << 40) | (__dsta << 48) | (v364 << 56);
        v142 = v408 | (v412 << 8) | (v416 << 16) | (v449 << 24) | (v445 << 32) | (v442 << 40) | (v439 << 48) | (v433 << 56);
        v143 = v475 | (v473 << 8) | (v318 << 16) | (v315 << 24) | (v312 << 32) | (v309 << 40) | (v457 << 48) | (v343 << 56);
        v144 = v207 | (v205 << 8) | (v245 << 16) | (v189 << 24) | (v187 << 32) | (v185 << 40) | (v183 << 48) | (v181 << 56);
        v145 = v324 | (v326 << 8);
        v146 = v219 | (v221 << 8);
        v147 = v191 | (v193 << 8);
        v505 = v482 | (v484 << 8);
        v148 = v140 | (v341 << 16);
        v149 = v139 | (v489 << 16);
        if (static UniversalControlUUID.compare(lhs:rhs:)(v141, v142, v143, v144) == -1
          || ((sub_249772148(v143, v144, v141, v142), v150 == 2)
           && (sub_249772148(v147 | (v195 << 16) | (v197 << 24) | (v199 << 32) | (v201 << 40) | (v203 << 48) | (v272 << 56), v505 | (v486 << 16) | (v488 << 24) | (v487 << 32) | (v177 << 40) | (v477 << 48) | (v179 << 56), v145 | (v329 << 16) | (v211 << 24) | (v332 << 32) | (v213 << 40) | (v215 << 48) | (v217 << 56), v146 | (v223 << 16) | (v225 << 24) | (v227 << 32) | (v335 << 40) | (v229 << 48) | (v338 << 56)), v150 == 2)|| (v150 & 1) == 0)&& (((sub_249772148(v141, v142, v143, v144), v151 != 2)|| (sub_249772148(v145 | (v329 << 16) | (v211 << 24) | (v332 << 32) | (v213 << 40) | (v215 << 48) | (v217 << 56), v146 | (v223 << 16) | (v225 << 24) | (v227 << 32) | (v335 << 40) | (v229 << 48) | (v338 << 56), v147 | (v195 << 16) | (v197 << 24) | (v199 << 32) | (v201 << 40) | (v203 << 48) | (v272 << 56), v505 | (v486 << 16) | (v488 << 24) | (v487 << 32) | (v177 << 40) | (v477 << 48) | (v179 << 56)), v151 != 2))&& (v151 & 1) != 0|| (sub_24978B990(v149, v148) & 1) == 0))
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v141, v142, v143, v144) != -1
            && static UniversalControlUUID.compare(lhs:rhs:)(v143, v144, v141, v142) != -1
            && sub_24978B8C8(v141, v142, v145 | (v329 << 16) | (v211 << 24) | (v332 << 32) | (v213 << 40) | (v215 << 48) | (v217 << 56), v146 | (v223 << 16) | (v225 << 24) | (v227 << 32) | (v335 << 40) | (v229 << 48) | (v338 << 56), v143, v144, v147 | (v195 << 16) | (v197 << 24) | (v199 << 32) | (v201 << 40) | (v203 << 48) | (v272 << 56), v505 | (v486 << 16) | (v488 << 24) | (v487 << 32) | (v177 << 40) | (v477 << 48) | (v179 << 56)) == 2)
          {
            sub_24978B990(v148, v149);
          }
LABEL_93:
          v134 = v401;
          v133 = v454;
          v137 = v401 != v454 || v401 >= v454 + 70;
          v454 += 70;
          if (!v137)
            goto LABEL_85;
LABEL_84:
          memmove(v134, v133, 0x46uLL);
          goto LABEL_85;
        }
      }
LABEL_83:
      v133 = v506;
      v134 = v401;
      v135 = v401 == v506;
      v506 += 70;
      if (!v135)
        goto LABEL_84;
LABEL_85:
      v5 = v134 + 70;
      if ((unint64_t)v454 >= v399 || (unint64_t)v506 >= v157)
      {
        sub_2497AC098(v454, (uint64_t)(v399 - (_QWORD)v454) / 70, v5);
        return 1;
      }
    }
    static UniversalControlUUID.compare(lhs:rhs:)(v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v405, v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56));
LABEL_105:
    v124 = v355;
    v125 = v353;
    v126 = v351;
    v127 = v349;
    v128 = v306;
    v129 = v102;
    v130 = v303;
    v131 = v300;
    v132 = v379;
    if (v175 < v209)
      goto LABEL_83;
    if (v209 >= v175 && v296 < v287)
      goto LABEL_83;
    goto LABEL_92;
  }
  sub_2497AC098(v454, (v10 - (unsigned __int8 *)v454) / 70, v5);
  return 1;
}

uint64_t OUTLINED_FUNCTION_1_15@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,int a54,char a55,int a56,char a57)
{
  uint64_t v57;

  *(_BYTE *)(v57 - 103) = *(_QWORD *)(v57 - 120);
  *(_BYTE *)(v57 - 102) = *(_QWORD *)(v57 - 128);
  *(_BYTE *)(v57 - 101) = *(_QWORD *)(v57 - 136);
  *(_BYTE *)(v57 - 100) = a53;
  *(_BYTE *)(v57 - 99) = a57;
  *(_BYTE *)(v57 - 98) = a55;
  *(_BYTE *)(v57 - 97) = *(_DWORD *)(v57 - 140);
  return v57 - 112;
}

uint64_t OUTLINED_FUNCTION_5_10()
{
  return sub_249837438();
}

void OUTLINED_FUNCTION_6_6()
{
  char v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 105) = v0;
  *(_BYTE *)(v2 - 104) = v1;
  *(_BYTE *)(v2 - 103) = *(_DWORD *)(v2 - 160);
  *(_BYTE *)(v2 - 102) = *(_DWORD *)(v2 - 168);
  *(_BYTE *)(v2 - 101) = *(_DWORD *)(v2 - 164);
  *(_BYTE *)(v2 - 100) = *(_DWORD *)(v2 - 172);
  *(_BYTE *)(v2 - 99) = *(_DWORD *)(v2 - 176);
  *(_BYTE *)(v2 - 98) = *(_DWORD *)(v2 - 180);
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  return sub_2498374F8();
}

__n128 OUTLINED_FUNCTION_16_6()
{
  __n128 *v0;

  return v0[2];
}

uint64_t OUTLINED_FUNCTION_19_8(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  double v4;

  *(_QWORD *)(a1 + 56) = v2;
  *(_QWORD *)(a1 + 64) = v3;
  *(double *)(a1 + 32) = a2 / v4;
  return sub_249836D48();
}

uint64_t OUTLINED_FUNCTION_23_5()
{
  return sub_249837564();
}

uint64_t OUTLINED_FUNCTION_24_6()
{
  return sub_24983769C();
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  return sub_24983769C();
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  return sub_249836DB4();
}

uint64_t OUTLINED_FUNCTION_29_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return static UniversalControlUUID.compare(lhs:rhs:)(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_30_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return static UniversalControlUUID.compare(lhs:rhs:)(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_31_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return static UniversalControlUUID.compare(lhs:rhs:)(v1, v2, v3, v0);
}

uint64_t OUTLINED_FUNCTION_32_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_33_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&a22, a25);
}

void OUTLINED_FUNCTION_35_4(__n128 *a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  unsigned __int8 v3;
  unsigned __int16 v4;

  *a1 = a2;
  a1[1] = a3;
  a1[2].n128_u8[0] = v3;
  a1[2].n128_u16[1] = v4;
}

uint64_t OUTLINED_FUNCTION_36_4()
{
  return sub_24983769C();
}

uint64_t OUTLINED_FUNCTION_40_3(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return UniversalControlLink.hash(into:)((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_41_3()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OUTLINED_FUNCTION_42_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_43_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_46_2@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return static UniversalControlUUID.compare(lhs:rhs:)(a3, v3, a1, a2);
}

uint64_t OUTLINED_FUNCTION_48_2()
{
  return sub_249837594();
}

uint64_t OUTLINED_FUNCTION_49_2()
{
  return sub_249836DB4();
}

uint64_t sub_24979D4BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  result = sub_24979D600();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 9) = v3;
  *(_BYTE *)(a1 + 10) = v4;
  *(_BYTE *)(a1 + 11) = v5;
  *(_BYTE *)(a1 + 12) = v6;
  *(_BYTE *)(a1 + 13) = v7;
  *(_BYTE *)(a1 + 14) = v8;
  *(_BYTE *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 15) = v10;
  *(_BYTE *)(a1 + 17) = v11;
  *(_BYTE *)(a1 + 18) = v12;
  *(_BYTE *)(a1 + 19) = v13;
  *(_BYTE *)(a1 + 20) = v14;
  *(_BYTE *)(a1 + 21) = v15;
  *(_BYTE *)(a1 + 22) = v16;
  *(_BYTE *)(a1 + 16) = v17;
  *(_BYTE *)(a1 + 23) = v18;
  *(_BYTE *)(a1 + 25) = v19;
  *(_BYTE *)(a1 + 26) = v20;
  *(_BYTE *)(a1 + 27) = v21;
  *(_BYTE *)(a1 + 28) = v22;
  *(_BYTE *)(a1 + 29) = v23;
  *(_BYTE *)(a1 + 30) = v24;
  *(_BYTE *)(a1 + 24) = v25;
  *(_BYTE *)(a1 + 31) = v26;
  return result;
}

uint64_t sub_24979D5D0(uint64_t *a1)
{
  return sub_24979D60C(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_24979D600()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_24979D60C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = result;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return result;
}

void (*sub_24979D700())(void **a1)
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  __int128 v3;

  v2 = (char *)OUTLINED_FUNCTION_50_1();
  *v0 = v2;
  *(_QWORD *)v2 = v1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 8) = v3;
  return sub_24979D73C;
}

void sub_24979D73C(void **a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  v1 = (char *)*a1;
  v2 = *(_QWORD *)v1;
  v3 = *((_QWORD *)v1 + 3);
  v5 = *((_DWORD *)v1 + 8);
  v4 = *((_DWORD *)v1 + 9);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v1 + 8);
  *(_QWORD *)(v2 + 32) = v3;
  *(_DWORD *)(v2 + 40) = v5;
  *(_DWORD *)(v2 + 44) = v4;
  free(v1);
}

uint64_t sub_24979D760(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

_BYTE *(*sub_24979D768(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 48);
  return sub_24979D784;
}

_BYTE *sub_24979D784(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 48) = result[8];
  return result;
}

void sub_24979D794(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = sub_24979D7E8();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
}

Swift::Int sub_24979D7C0(double *a1)
{
  return sub_24979D804(*a1, a1[1], a1[2], a1[3]);
}

double sub_24979D7E8()
{
  uint64_t v0;

  return (double)*(uint64_t *)(v0 + 56);
}

Swift::Int sub_24979D804(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  UniversalControl::UniversalControlDisplay::Rectangle v6;

  v6 = UniversalControlDisplay.Rectangle.init(_:)(*(__C::CGRect *)&a1);
  *(UniversalControl::UniversalControlDisplay::Rectangle *)(v4 + 56) = v6;
  return v6.x;
}

void (*sub_24979D820())(__C::CGRect **a1)
{
  double **v0;
  uint64_t v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (double *)OUTLINED_FUNCTION_50_1();
  *v0 = v2;
  *((_QWORD *)v2 + 4) = v1;
  *v2 = sub_24979D7E8();
  *((_QWORD *)v2 + 1) = v3;
  *((_QWORD *)v2 + 2) = v4;
  *((_QWORD *)v2 + 3) = v5;
  return sub_24979D868;
}

void sub_24979D868(__C::CGRect **a1)
{
  __C::CGRect *v1;
  CGFloat x;

  v1 = *a1;
  x = (*a1)[1].origin.x;
  *(UniversalControl::UniversalControlDisplay::Rectangle *)(*(_QWORD *)&x + 56) = UniversalControlDisplay.Rectangle.init(_:)(**a1);
  free(v1);
}

BOOL sub_24979D8A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  return !static UniversalControlUUID.compare(lhs:rhs:)(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)a2, *(_QWORD *)(a2 + 8))&& !static UniversalControlUUID.compare(lhs:rhs:)(v4, v5, v6, v7)&& *(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32)&& static UniversalControlDisplay.Rectangle.== infix(_:_:)(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a2 + 40), *(_QWORD *)(a2 + 48), *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64));
}

uint64_t sub_24979D93C()
{
  sub_24983769C();
  sub_24983769C();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  return sub_2498376A8();
}

uint64_t sub_24979D9FC()
{
  sub_249837690();
  sub_24983769C();
  sub_24983769C();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  return sub_2498376E4();
}

BOOL sub_24979DAE8(void *__src, const void *a2)
{
  _BYTE v4[72];
  _BYTE __dst[72];

  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_24979D8A0((uint64_t)v4, (uint64_t)__dst);
}

uint64_t sub_24979DB3C()
{
  const void *v0;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_24979D9FC();
}

uint64_t sub_24979DB74()
{
  const void *v0;
  _BYTE __dst[72];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_24979D93C();
}

uint64_t sub_24979DBB4()
{
  sub_249837690();
  UniversalControlUUID.hash(into:)();
  UniversalControlUUID.hash(into:)();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t sub_24979DC74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = nullsub_1();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24979DC98()
{
  sub_24979EDC4();
  return sub_249837750();
}

uint64_t sub_24979DCC0()
{
  sub_24979EDC4();
  return sub_24983775C();
}

uint64_t UniversalControlEdgeRegion.__allocating_init(id:edge:rect:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, char a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  char v9;
  char v10;
  char v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  UniversalControl::UniversalControlDisplay::Rectangle v48;
  __C::CGRect v49;

  v9 = a4;
  v10 = a3;
  v15 = a2;
  v16 = a1;
  v17 = a1 >> 8;
  v18 = a1 >> 16;
  v19 = a1 >> 24;
  v20 = HIDWORD(a1);
  v21 = a1 >> 40;
  v24 = HIWORD(a1);
  v25 = HIBYTE(a1);
  v26 = a2 >> 8;
  v27 = a2 >> 16;
  v28 = a2 >> 24;
  v29 = HIDWORD(a2);
  v30 = a2 >> 40;
  v31 = HIWORD(a2);
  v32 = HIBYTE(a2);
  v33 = a3 >> 8;
  v34 = a3 >> 16;
  v35 = a3 >> 24;
  v36 = HIDWORD(a3);
  v37 = a3 >> 40;
  v38 = HIWORD(a3);
  v39 = HIBYTE(a3);
  v40 = a4 >> 8;
  v41 = a4 >> 16;
  v42 = a4 >> 24;
  v43 = HIDWORD(a4);
  v44 = a4 >> 40;
  v45 = HIWORD(a4);
  v46 = HIBYTE(a4);
  v22 = swift_allocObject();
  v49.origin.x = a6;
  v49.origin.y = a7;
  v49.size.width = a8;
  v49.size.height = a9;
  v48 = UniversalControlDisplay.Rectangle.init(_:)(v49);
  *(_BYTE *)(v22 + 16) = v16;
  *(_BYTE *)(v22 + 17) = v17;
  *(_BYTE *)(v22 + 18) = v18;
  *(_BYTE *)(v22 + 19) = v19;
  *(_BYTE *)(v22 + 20) = v20;
  *(_BYTE *)(v22 + 21) = v21;
  *(_BYTE *)(v22 + 22) = v24;
  *(_BYTE *)(v22 + 23) = v25;
  *(_BYTE *)(v22 + 24) = v15;
  *(_BYTE *)(v22 + 25) = v26;
  *(_BYTE *)(v22 + 26) = v27;
  *(_BYTE *)(v22 + 27) = v28;
  *(_BYTE *)(v22 + 28) = v29;
  *(_BYTE *)(v22 + 29) = v30;
  *(_BYTE *)(v22 + 30) = v31;
  *(_BYTE *)(v22 + 31) = v32;
  *(_BYTE *)(v22 + 32) = v10;
  *(_BYTE *)(v22 + 33) = v33;
  *(_BYTE *)(v22 + 34) = v34;
  *(_BYTE *)(v22 + 35) = v35;
  *(_BYTE *)(v22 + 36) = v36;
  *(_BYTE *)(v22 + 37) = v37;
  *(_BYTE *)(v22 + 38) = v38;
  *(_BYTE *)(v22 + 39) = v39;
  *(_BYTE *)(v22 + 40) = v9;
  *(_BYTE *)(v22 + 41) = v40;
  *(_BYTE *)(v22 + 42) = v41;
  *(_BYTE *)(v22 + 43) = v42;
  *(_BYTE *)(v22 + 44) = v43;
  *(_BYTE *)(v22 + 45) = v44;
  *(_BYTE *)(v22 + 46) = v45;
  *(_BYTE *)(v22 + 47) = v46;
  *(_BYTE *)(v22 + 48) = a5;
  *(UniversalControl::UniversalControlDisplay::Rectangle *)(v22 + 56) = v48;
  return v22;
}

uint64_t UniversalControlEdgeRegion.init(id:edge:rect:)(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, char a5, double a6, double a7, double a8, double a9)
{
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  UniversalControl::UniversalControlDisplay::Rectangle v44;

  v10 = a4;
  v11 = a3;
  v12 = a2;
  v13 = a1;
  v14 = a1 >> 8;
  v15 = a1 >> 16;
  v16 = a1 >> 24;
  v17 = HIDWORD(a1);
  v18 = a1 >> 40;
  v20 = HIWORD(a1);
  v21 = HIBYTE(a1);
  v22 = a2 >> 8;
  v23 = a2 >> 16;
  v24 = a2 >> 24;
  v25 = HIDWORD(a2);
  v26 = a2 >> 40;
  v27 = HIWORD(a2);
  v28 = HIBYTE(a2);
  v29 = a3 >> 8;
  v30 = a3 >> 16;
  v31 = a3 >> 24;
  v32 = HIDWORD(a3);
  v33 = a3 >> 40;
  v34 = HIWORD(a3);
  v35 = HIBYTE(a3);
  v36 = a4 >> 8;
  v37 = a4 >> 16;
  v38 = a4 >> 24;
  v39 = HIDWORD(a4);
  v40 = a4 >> 40;
  v41 = HIWORD(a4);
  v42 = HIBYTE(a4);
  v44 = UniversalControlDisplay.Rectangle.init(_:)(*(__C::CGRect *)&a6);
  *(_BYTE *)(v9 + 16) = v13;
  *(_BYTE *)(v9 + 17) = v14;
  *(_BYTE *)(v9 + 18) = v15;
  *(_BYTE *)(v9 + 19) = v16;
  *(_BYTE *)(v9 + 20) = v17;
  *(_BYTE *)(v9 + 21) = v18;
  *(_BYTE *)(v9 + 22) = v20;
  *(_BYTE *)(v9 + 23) = v21;
  *(_BYTE *)(v9 + 24) = v12;
  *(_BYTE *)(v9 + 25) = v22;
  *(_BYTE *)(v9 + 26) = v23;
  *(_BYTE *)(v9 + 27) = v24;
  *(_BYTE *)(v9 + 28) = v25;
  *(_BYTE *)(v9 + 29) = v26;
  *(_BYTE *)(v9 + 30) = v27;
  *(_BYTE *)(v9 + 31) = v28;
  *(_BYTE *)(v9 + 32) = v11;
  *(_BYTE *)(v9 + 33) = v29;
  *(_BYTE *)(v9 + 34) = v30;
  *(_BYTE *)(v9 + 35) = v31;
  *(_BYTE *)(v9 + 36) = v32;
  *(_BYTE *)(v9 + 37) = v33;
  *(_BYTE *)(v9 + 38) = v34;
  *(_BYTE *)(v9 + 39) = v35;
  *(_BYTE *)(v9 + 40) = v10;
  *(_BYTE *)(v9 + 41) = v36;
  *(_BYTE *)(v9 + 42) = v37;
  *(_BYTE *)(v9 + 43) = v38;
  *(_BYTE *)(v9 + 44) = v39;
  *(_BYTE *)(v9 + 45) = v40;
  *(_BYTE *)(v9 + 46) = v41;
  *(_BYTE *)(v9 + 47) = v42;
  *(_BYTE *)(v9 + 48) = a5;
  *(UniversalControl::UniversalControlDisplay::Rectangle *)(v9 + 56) = v44;
  return v9;
}

uint64_t UniversalControlEdgeRegion.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  UniversalControlEdgeRegion.init(from:)(a1);
  return v2;
}

uint64_t UniversalControlEdgeRegion.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  int v25;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881520);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24979EDC4();
  sub_249837720();
  if (v2)
  {
    type metadata accessor for UniversalControlEdgeRegion();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v21 = 25705;
    v22 = 0xE200000000000000;
    sub_24979EE20();
    OUTLINED_FUNCTION_2_17();
    v19 = v24;
    v20 = v23;
    OUTLINED_FUNCTION_8_11();
    sub_249759954();
    OUTLINED_FUNCTION_2_17();
    v25 = v21;
    v10 = sub_24979E31C((uint64_t)v8, 1952671090, 0xE400000000000000);
    v12 = v11;
    v14 = v13;
    v15 = v5;
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
    v18 = v19;
    *(_OWORD *)(v3 + 16) = v20;
    *(_OWORD *)(v3 + 32) = v18;
    *(_BYTE *)(v3 + 48) = v25;
    *(_QWORD *)(v3 + 56) = v10;
    *(_QWORD *)(v3 + 64) = v12;
    *(_QWORD *)(v3 + 72) = v14;
    *(_QWORD *)(v3 + 80) = v17;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v3;
}

uint64_t sub_24979E31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE v8[40];
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = a3;
  v11 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881520);
  if ((sub_249837468() & 1) == 0)
    return 0;
  sub_249837390();
  if (!v3)
  {
    v4 = v10;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    v5 = sub_24983754C();
    if ((v6 & 1) != 0 || v5 != 4)
    {
      sub_24977AEF8((uint64_t)v9, (uint64_t)v8);
      sub_2498371BC();
      swift_allocError();
      sub_249837198();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    }
    else
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      v4 = sub_249837558();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_249837558();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_249837558();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
      sub_249837558();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
    }
  }
  return v4;
}

uint64_t sub_24979E528(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __int128 v22;
  __int128 v23;
  int v24;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257881538);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24979EDC4();
  sub_249837744();
  v24 = *(unsigned __int8 *)(v3 + 48);
  v9 = *(_QWORD *)(v3 + 56);
  v10 = *(_QWORD *)(v3 + 64);
  v12 = *(_QWORD *)(v3 + 72);
  v11 = *(_QWORD *)(v3 + 80);
  v13 = *(_OWORD *)(v3 + 32);
  v22 = *(_OWORD *)(v3 + 16);
  v23 = v13;
  v19 = v9;
  v20 = 25705;
  v21 = 0xE200000000000000;
  sub_24979EE5C();
  OUTLINED_FUNCTION_5_11();
  if (!v2)
  {
    v16 = v11;
    v17 = v12;
    v18 = v10;
    v14 = v19;
    LOBYTE(v20) = v24;
    OUTLINED_FUNCTION_8_11();
    sub_249759A9C();
    OUTLINED_FUNCTION_5_11();
    sub_24979E6AC(v14, v18, v17, v16, (uint64_t)v8, 1952671090, 0xE400000000000000);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24979E6AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a6;
  v11 = a7;
  if (result || a2 || a3 || a4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257881538);
    sub_249837474();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
    sub_249837588();
    if (!v7)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
      sub_249837588();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
      sub_249837588();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
      sub_249837588();
    }
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  }
  return result;
}

uint64_t UniversalControlEdgeRegion.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t UniversalControlEdgeRegion.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_24979E80C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = UniversalControlEdgeRegion.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_24979E834(_QWORD *a1)
{
  return sub_24979E528(a1);
}

uint64_t UniversalControlEdgeRegion.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  CGRect v3;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v1 = sub_249837768();
  UniversalControlDisplayID.description.getter(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  OUTLINED_FUNCTION_4_16();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_5();
  swift_bridgeObjectRetain();
  sub_249836DB4();
  OUTLINED_FUNCTION_16_0();
  swift_bridgeObjectRelease();
  sub_249836DB4();
  sub_249789F24(*(_BYTE *)(v0 + 48));
  OUTLINED_FUNCTION_28_5();
  swift_bridgeObjectRetain();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249837168();
  swift_bridgeObjectRelease();
  v3.origin.x = OUTLINED_FUNCTION_7_12();
  CGRectGetMinX(v3);
  sub_249836F1C();
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_0_18();
  v4.origin.x = OUTLINED_FUNCTION_7_12();
  CGRectGetMinY(v4);
  sub_249836F1C();
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_0_18();
  v5.origin.x = OUTLINED_FUNCTION_7_12();
  CGRectGetMaxX(v5);
  sub_249836F1C();
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_0_18();
  v6.origin.x = OUTLINED_FUNCTION_7_12();
  CGRectGetMaxY(v6);
  sub_249836F1C();
  OUTLINED_FUNCTION_4_16();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28_5();
  swift_bridgeObjectRetain();
  sub_249836DB4();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16_0();
  return v1;
}

uint64_t sub_24979EA50()
{
  return UniversalControlEdgeRegion.description.getter();
}

uint64_t sub_24979EA74()
{
  return UniversalControlEdgeRegion.debugDescription.getter();
}

BOOL static UniversalControlEdgeRegion.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(unsigned __int8 *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 72);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(unsigned __int8 *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 80);
  return !static UniversalControlUUID.compare(lhs:rhs:)(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24))&& !static UniversalControlUUID.compare(lhs:rhs:)(v2, v3, v5, v6)&& v4 == v7&& static UniversalControlDisplay.Rectangle.== infix(_:_:)(v16, v15, v14, v13, v8, v9, v10, v11);
}

BOOL sub_24979EB78(uint64_t *a1, uint64_t *a2)
{
  return static UniversalControlEdgeRegion.== infix(_:_:)(*a1, *a2);
}

uint64_t UniversalControlEdgeRegion.hash(into:)()
{
  sub_24983769C();
  sub_24983769C();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  return sub_2498376A8();
}

uint64_t UniversalControlEdgeRegion.hashValue.getter()
{
  sub_249837690();
  OUTLINED_FUNCTION_6_7();
  OUTLINED_FUNCTION_6_7();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  sub_2498376A8();
  return sub_2498376E4();
}

uint64_t sub_24979ED48()
{
  return UniversalControlEdgeRegion.hashValue.getter();
}

uint64_t sub_24979ED68()
{
  return UniversalControlEdgeRegion.hash(into:)();
}

uint64_t sub_24979ED88()
{
  sub_249837690();
  UniversalControlEdgeRegion.hash(into:)();
  return sub_2498376E4();
}

unint64_t sub_24979EDC4()
{
  unint64_t result;

  result = qword_257881528;
  if (!qword_257881528)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983B508, &type metadata for UniversalControlEdgeRegion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881528);
  }
  return result;
}

uint64_t type metadata accessor for UniversalControlEdgeRegion()
{
  return objc_opt_self();
}

unint64_t sub_24979EE20()
{
  unint64_t result;

  result = qword_257881530;
  if (!qword_257881530)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDisplayID, &type metadata for UniversalControlDisplayID);
    atomic_store(result, (unint64_t *)&qword_257881530);
  }
  return result;
}

unint64_t sub_24979EE5C()
{
  unint64_t result;

  result = qword_257881540;
  if (!qword_257881540)
  {
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlDisplayID, &type metadata for UniversalControlDisplayID);
    atomic_store(result, (unint64_t *)&qword_257881540);
  }
  return result;
}

unint64_t sub_24979EE9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257881548;
  if (!qword_257881548)
  {
    v1 = type metadata accessor for UniversalControlEdgeRegion();
    result = MEMORY[0x24BCF8F94](&protocol conformance descriptor for UniversalControlEdgeRegion, v1);
    atomic_store(result, (unint64_t *)&qword_257881548);
  }
  return result;
}

uint64_t sub_24979EEE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24977E8A0();
  *a1 = result;
  return result;
}

uint64_t sub_24979EF08(unsigned __int8 *a1)
{
  return sub_24979D760(*a1);
}

uint64_t method lookup function for UniversalControlEdgeRegion()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.id.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.id.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.id.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.edge.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.edge.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.edge.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.rect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.__allocating_init(id:edge:rect:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of UniversalControlEdgeRegion.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

void *__swift_memcpy72_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t getEnumTagSinglePayload for UniversalControlEdgeRegion.Properties(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 72))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      v4 = v3 >= 4;
      v2 = v3 - 4;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UniversalControlEdgeRegion.Properties(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for UniversalControlEdgeRegion.Properties()
{
  return &type metadata for UniversalControlEdgeRegion.Properties;
}

ValueMetadata *type metadata accessor for UniversalControlEdgeRegion.CodingKeys()
{
  return &type metadata for UniversalControlEdgeRegion.CodingKeys;
}

unint64_t sub_24979F0A4()
{
  unint64_t result;

  result = qword_257881660;
  if (!qword_257881660)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983B478, &type metadata for UniversalControlEdgeRegion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881660);
  }
  return result;
}

unint64_t sub_24979F0E4()
{
  unint64_t result;

  result = qword_257881668;
  if (!qword_257881668)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983B4E0, &type metadata for UniversalControlEdgeRegion.Properties);
    atomic_store(result, (unint64_t *)&qword_257881668);
  }
  return result;
}

unint64_t sub_24979F124()
{
  unint64_t result;

  result = qword_257881670;
  if (!qword_257881670)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983B3E8, &type metadata for UniversalControlEdgeRegion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881670);
  }
  return result;
}

unint64_t sub_24979F164()
{
  unint64_t result;

  result = qword_257881678;
  if (!qword_257881678)
  {
    result = MEMORY[0x24BCF8F94](&unk_24983B410, &type metadata for UniversalControlEdgeRegion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257881678);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_18()
{
  return sub_249836DB4();
}

uint64_t OUTLINED_FUNCTION_2_17()
{
  return sub_249837438();
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  return sub_249836DB4();
}

uint64_t OUTLINED_FUNCTION_5_11()
{
  return sub_2498374F8();
}

uint64_t OUTLINED_FUNCTION_6_7()
{
  return sub_24983769C();
}

double OUTLINED_FUNCTION_7_12()
{
  return sub_24979D7E8();
}

void OUTLINED_FUNCTION_8_11()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = 1701274725;
  *(_QWORD *)(v0 - 104) = 0xE400000000000000;
}

void sub_24979F208()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_197();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = v4;
  if (!OUTLINED_FUNCTION_195() || v3 > *(_QWORD *)(v1 + 24) >> 1)
  {
    sub_249752C44();
    v1 = v7;
  }
  if (!*(_QWORD *)(v6 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_193();
  if (v8 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_24974D218(v6 + 32, v2);
  if (!v2)
  {
LABEL_11:
    OUTLINED_FUNCTION_23_1();
    *v0 = v1;
    OUTLINED_FUNCTION_10_0();
    return;
  }
  v9 = *(_QWORD *)(v1 + 16);
  v5 = __OFADD__(v9, v2);
  v10 = v9 + v2;
  if (!v5)
  {
    *(_QWORD *)(v1 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_24979F2B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_197();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = v4;
  if (!OUTLINED_FUNCTION_195() || v3 > *(_QWORD *)(v1 + 24) >> 1)
  {
    sub_249752D34();
    v1 = v7;
  }
  if (!*(_QWORD *)(v6 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_193();
  if (v8 != v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_24974D490(v6 + 32, v2);
  if (!v2)
  {
LABEL_11:
    OUTLINED_FUNCTION_23_1();
    *v0 = v1;
    OUTLINED_FUNCTION_10_0();
    return;
  }
  v9 = *(_QWORD *)(v1 + 16);
  v5 = __OFADD__(v9, v2);
  v10 = v9 + v2;
  if (!v5)
  {
    *(_QWORD *)(v1 + 16) = v10;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_24979F364(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  BOOL v31;
  int64_t v32;
  int64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;

  v3 = *(_QWORD *)(result + 16);
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v6 = result;
  if (!swift_isUniquelyReferenced_nonNull_native() || (v7 = *(_QWORD *)(v4 + 24) >> 1, v7 < v5 + v3))
  {
    sub_249753110();
    v4 = v8;
    v7 = *(_QWORD *)(v8 + 24) >> 1;
  }
  v9 = *(_QWORD *)(v4 + 16);
  v10 = v7 - v9;
  result = sub_249757C44(v44, v4 + 40 * v9 + 32, v7 - v9, v6);
  if (result < v3)
    goto LABEL_12;
  if (result)
  {
    v12 = *(_QWORD *)(v4 + 16);
    v13 = __OFADD__(v12, result);
    v14 = v12 + result;
    if (v13)
    {
      __break(1u);
      goto LABEL_48;
    }
    *(_QWORD *)(v4 + 16) = v14;
  }
  if (result != v10)
    goto LABEL_10;
LABEL_13:
  v2 = *(_QWORD *)(v4 + 16);
  v41 = v44[0];
  v10 = v45;
  v40 = v44[1];
  v11 = v46;
  v38 = v45;
  if (!v47)
  {
LABEL_48:
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      return result;
    }
    v24 = (unint64_t)(v10 + 64) >> 6;
    if (v23 >= v24)
      goto LABEL_10;
    v35 = *(_QWORD *)(v40 + 8 * v23);
    if (!v35)
    {
      v36 = v11 + 2;
      if (v11 + 2 >= v24)
        goto LABEL_10;
      v35 = *(_QWORD *)(v40 + 8 * v36);
      if (v35)
      {
LABEL_57:
        v23 = v36;
      }
      else
      {
        if (v11 + 3 >= v24)
          goto LABEL_10;
        v35 = *(_QWORD *)(v40 + 8 * (v11 + 3));
        if (!v35)
          goto LABEL_63;
        v23 = v11 + 3;
      }
    }
LABEL_51:
    v15 = (v35 - 1) & v35;
    v16 = __clz(__rbit64(v35)) + (v23 << 6);
    v42 = v23;
    v10 = v38;
    goto LABEL_15;
  }
  v15 = (v47 - 1) & v47;
  v42 = v46;
  v16 = __clz(__rbit64(v47)) | (v46 << 6);
LABEL_15:
  v17 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 32 * v16);
  v19 = *v17;
  v18 = v17[1];
  v20 = v17[2];
  v21 = v17[3];
  v22 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v16);
  swift_retain();
  if (!v22)
    goto LABEL_10;
  v39 = (unint64_t)(v10 + 64) >> 6;
  v11 = v42;
  while (1)
  {
    v43 = *(_QWORD *)(v4 + 24) >> 1;
    if (v43 < v2 + 1)
    {
      v33 = v11;
      sub_249753110();
      v11 = v33;
      v4 = v34;
      v43 = *(_QWORD *)(v34 + 24) >> 1;
    }
    if (v2 < v43)
      break;
LABEL_45:
    *(_QWORD *)(v4 + 16) = v2;
    if (!v22)
      goto LABEL_10;
  }
  while (1)
  {
    v23 = v4 + 32 + 40 * v2;
    *(_QWORD *)v23 = v19;
    *(_QWORD *)(v23 + 8) = v18;
    *(_QWORD *)(v23 + 16) = v20;
    *(_QWORD *)(v23 + 24) = v21;
    v24 = HIBYTE(v21);
    *(_QWORD *)(v23 + 32) = v22;
    ++v2;
    if (!v15)
      break;
    v25 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v26 = v11;
    v27 = v25 | (v11 << 6);
LABEL_32:
    v30 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 32 * v27);
    v19 = *v30;
    v18 = v30[1];
    v20 = v30[2];
    v21 = v30[3];
    v22 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v27);
    swift_retain();
    if (v22)
      v31 = v2 < v43;
    else
      v31 = 0;
    v11 = v26;
    if (!v31)
      goto LABEL_45;
  }
  v26 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v26 >= v39)
      goto LABEL_53;
    v28 = *(_QWORD *)(v40 + 8 * v26);
    if (v28)
      goto LABEL_31;
    v29 = v11 + 2;
    if (v11 + 2 >= v39)
      goto LABEL_53;
    v28 = *(_QWORD *)(v40 + 8 * v29);
    if (!v28)
    {
      if (v11 + 3 >= v39)
        goto LABEL_53;
      v28 = *(_QWORD *)(v40 + 8 * (v11 + 3));
      if (v28)
      {
        v26 = v11 + 3;
        goto LABEL_31;
      }
      v29 = v11 + 4;
      if (v11 + 4 >= v39)
        goto LABEL_53;
      v28 = *(_QWORD *)(v40 + 8 * v29);
      if (!v28)
      {
        v26 = v11 + 5;
        if (v11 + 5 >= v39)
          goto LABEL_53;
        v28 = *(_QWORD *)(v40 + 8 * v26);
        if (!v28)
        {
          v32 = v11 + 6;
          while (v32 < v39)
          {
            v28 = *(_QWORD *)(v40 + 8 * v32++);
            if (v28)
            {
              v26 = v32 - 1;
              goto LABEL_31;
            }
          }
LABEL_53:
          *(_QWORD *)(v4 + 16) = v2;
          goto LABEL_10;
        }
        goto LABEL_31;
      }
    }
    v26 = v29;
LABEL_31:
    v15 = (v28 - 1) & v28;
    v27 = __clz(__rbit64(v28)) + (v26 << 6);
    goto LABEL_32;
  }
  __break(1u);
LABEL_63:
  v36 = v23 + 3;
  if (v23 + 3 < v24)
  {
    v35 = *(_QWORD *)(v40 + 8 * v36);
    if (v35)
      goto LABEL_57;
    v23 += 4;
    if (v23 >= v24)
      goto LABEL_10;
    v35 = *(_QWORD *)(v40 + 8 * v23);
    if (!v35)
    {
      v37 = v11 + 6;
      while (v37 < v24)
      {
        v35 = *(_QWORD *)(v40 + 8 * v37++);
        if (v35)
        {
          v23 = v37 - 1;
          goto LABEL_51;
        }
      }
      goto LABEL_10;
    }
    goto LABEL_51;
  }
LABEL_10:
  result = sub_249757AC0();
  *v1 = v4;
  return result;
}

void sub_24979F8C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_249752D50();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_24974D490(a1 + 32, v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_24979F99C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_24975312C();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_24974DC60(a1 + 32, v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_24979FA78(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v5 > *(_QWORD *)(v3 + 24) >> 1)
  {
    if (v4 <= v5)
      v8 = v4 + v2;
    else
      v8 = v4;
    sub_249752C60(isUniquelyReferenced_nonNull_native, v8, 1, v3);
    v3 = v9;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
  v10 = *(_QWORD *)(v3 + 16);
  if ((*(_QWORD *)(v3 + 24) >> 1) - v10 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_24974D298(a1 + 32, v2, v3 + 70 * v10 + 32);
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v11 = *(_QWORD *)(v3 + 16);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *(_QWORD *)(v3 + 16) = v13;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
}

void sub_24979FB54(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_249752EF4();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_24974D218(a1 + 32, v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_24979FC30(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  unint64_t v64;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = a1;
  if (!swift_isUniquelyReferenced_nonNull_native() || (v6 = *(_QWORD *)(v3 + 24) >> 1, v6 < v4 + v2))
  {
    sub_249752EF4();
    v3 = v7;
    v6 = *(_QWORD *)(v7 + 24) >> 1;
  }
  v8 = v6 - *(_QWORD *)(v3 + 16);
  sub_249757F4C();
  if (v9 < v2)
    goto LABEL_12;
  if (v9)
  {
    v12 = *(_QWORD *)(v3 + 16);
    v13 = __OFADD__(v12, v9);
    v14 = v12 + v9;
    if (v13)
    {
      __break(1u);
LABEL_55:
      v31 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        return;
      }
      v20 = (unint64_t)(v10 + 64) >> 6;
      if (v31 >= v20)
        goto LABEL_10;
      v47 = *(_QWORD *)(v5 + 8 * v31);
      if (v47)
        goto LABEL_58;
      v48 = v11 + 2;
      if (v11 + 2 >= v20)
        goto LABEL_10;
      v47 = *(_QWORD *)(v5 + 8 * v48);
      if (!v47)
      {
LABEL_64:
        if (v31 + 2 >= v20)
          goto LABEL_10;
        v47 = *(_QWORD *)(v5 + 8 * (v31 + 2));
        if (v47)
        {
          v31 += 2;
          goto LABEL_58;
        }
        v48 = v31 + 3;
        if (v31 + 3 >= v20)
          goto LABEL_10;
        v47 = *(_QWORD *)(v5 + 8 * v48);
        if (!v47)
        {
          v31 += 4;
          if (v31 >= v20)
            goto LABEL_10;
          v47 = *(_QWORD *)(v5 + 8 * v31);
          if (!v47)
          {
            v49 = v11 + 6;
            while (v49 < v20)
            {
              v47 = *(_QWORD *)(v5 + 8 * v49++);
              if (v47)
              {
                v31 = v49 - 1;
                goto LABEL_58;
              }
            }
            goto LABEL_10;
          }
          goto LABEL_58;
        }
      }
      v31 = v48;
LABEL_58:
      v15 = (v47 - 1) & v47;
      v16 = __clz(__rbit64(v47)) + (v31 << 6);
      v11 = v31;
      goto LABEL_15;
    }
    *(_QWORD *)(v3 + 16) = v14;
  }
  if (v9 != v8)
    goto LABEL_10;
LABEL_13:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = v60;
  v5 = v61;
  v10 = v62;
  v11 = v63;
  if (!v64)
    goto LABEL_55;
  v15 = (v64 - 1) & v64;
  v16 = __clz(__rbit64(v64)) | (v63 << 6);
LABEL_15:
  v17 = *(_QWORD *)(v9 + 48);
  v18 = (uint64_t *)(v17 + 80 * v16);
  v19 = *((unsigned __int8 *)v18 + 64);
  if (v19 == 4)
    goto LABEL_10;
  v20 = 80;
  v21 = *(_QWORD *)(v17 + 80 * v16 + 72);
  v22 = ((unint64_t)*((unsigned __int16 *)v18 + 34) << 32) | ((unint64_t)*((unsigned __int16 *)v18 + 33) << 16) | v19;
  v24 = v18[6];
  v23 = v18[7];
  v25 = v18[4];
  v26 = v18[5];
  v28 = v18[2];
  v27 = v18[3];
  v30 = *v18;
  v29 = v18[1];
  v31 = (unint64_t)(v10 + 64) >> 6;
  v32 = v31 - 1;
  while (2)
  {
    v33 = *(_QWORD *)(v3 + 24) >> 1;
    if (v33 < v8 + 1)
    {
      v58 = v31;
      v59 = v9;
      v56 = v11;
      v57 = v10;
      v52 = v23;
      v53 = v15;
      v50 = v21;
      v51 = v22;
      v43 = v24;
      v44 = v26;
      v54 = v28;
      v55 = v25;
      v45 = v27;
      sub_249752EF4();
      v28 = v54;
      v25 = v55;
      v27 = v45;
      v26 = v44;
      v22 = v51;
      v23 = v52;
      v24 = v43;
      v21 = v50;
      v10 = v57;
      v31 = v58;
      v20 = 80;
      v15 = v53;
      v11 = v56;
      v3 = v46;
      v9 = v59;
      v33 = *(_QWORD *)(v3 + 24) >> 1;
    }
    while (v22 != 4 && v8 < v33)
    {
      v35 = v3 + 32 + 80 * v8;
      *(_QWORD *)v35 = v30;
      *(_QWORD *)(v35 + 8) = v29;
      *(_QWORD *)(v35 + 16) = v28;
      *(_QWORD *)(v35 + 24) = v27;
      *(_QWORD *)(v35 + 32) = v25;
      *(_QWORD *)(v35 + 40) = v26;
      *(_QWORD *)(v35 + 48) = v24;
      *(_QWORD *)(v35 + 56) = v23;
      *(_WORD *)(v35 + 66) = WORD1(v22);
      *(_BYTE *)(v35 + 64) = v22;
      *(_WORD *)(v35 + 68) = WORD2(v22);
      *(_QWORD *)(v35 + 72) = v21;
      if (v15)
      {
        v36 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v37 = v36 | (v11 << 6);
        goto LABEL_26;
      }
      v39 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        goto LABEL_64;
      }
      if (v39 >= v31)
      {
        v21 = 0;
        v23 = 0;
        v24 = 0;
        v26 = 0;
        v25 = 0;
        v27 = 0;
        v28 = 0;
        v29 = 0;
        v30 = 0;
        v15 = 0;
        v22 = 4;
      }
      else
      {
        v40 = *(_QWORD *)(v5 + 8 * v39);
        if (v40)
          goto LABEL_31;
        v41 = v11 + 2;
        if (v11 + 2 >= v31)
        {
          v21 = 0;
          v23 = 0;
          v24 = 0;
          v26 = 0;
          v25 = 0;
          v27 = 0;
          v28 = 0;
          v29 = 0;
          v30 = 0;
          v15 = 0;
          v22 = 4;
          ++v11;
        }
        else
        {
          v40 = *(_QWORD *)(v5 + 8 * v41);
          if (v40)
            goto LABEL_35;
          if (v11 + 3 >= v31)
          {
            v21 = 0;
            v23 = 0;
            v24 = 0;
            v26 = 0;
            v25 = 0;
            v27 = 0;
            v28 = 0;
            v29 = 0;
            v30 = 0;
            v15 = 0;
            v22 = 4;
            v11 += 2;
          }
          else
          {
            v40 = *(_QWORD *)(v5 + 8 * (v11 + 3));
            if (v40)
            {
              v39 = v11 + 3;
LABEL_31:
              v15 = (v40 - 1) & v40;
              v37 = __clz(__rbit64(v40)) + (v39 << 6);
              v11 = v39;
LABEL_26:
              v38 = *(_QWORD *)(v9 + 48) + 80 * v37;
              v30 = *(_QWORD *)v38;
              v29 = *(_QWORD *)(v38 + 8);
              v28 = *(_QWORD *)(v38 + 16);
              v27 = *(_QWORD *)(v38 + 24);
              v25 = *(_QWORD *)(v38 + 32);
              v26 = *(_QWORD *)(v38 + 40);
              v24 = *(_QWORD *)(v38 + 48);
              v23 = *(_QWORD *)(v38 + 56);
              v21 = *(_QWORD *)(v38 + 72);
              v22 = *(unsigned __int8 *)(v38 + 64) | ((unint64_t)*(unsigned __int16 *)(v38 + 66) << 16) | ((unint64_t)*(unsigned __int16 *)(v38 + 68) << 32);
              goto LABEL_27;
            }
            v41 = v11 + 4;
            if (v11 + 4 >= v31)
            {
              v21 = 0;
              v23 = 0;
              v24 = 0;
              v26 = 0;
              v25 = 0;
              v27 = 0;
              v28 = 0;
              v29 = 0;
              v30 = 0;
              v15 = 0;
              v22 = 4;
              v11 += 3;
            }
            else
            {
              v40 = *(_QWORD *)(v5 + 8 * v41);
              if (v40)
              {
LABEL_35:
                v39 = v41;
                goto LABEL_31;
              }
              v39 = v11 + 5;
              if (v11 + 5 >= v31)
              {
                v21 = 0;
                v23 = 0;
                v24 = 0;
                v26 = 0;
                v25 = 0;
                v27 = 0;
                v28 = 0;
                v29 = 0;
                v30 = 0;
                v15 = 0;
                v22 = 4;
                v11 += 4;
                v20 = 80;
              }
              else
              {
                v40 = *(_QWORD *)(v5 + 8 * v39);
                v20 = 80;
                if (v40)
                  goto LABEL_31;
                v42 = v11 + 6;
                while (v42 < v31)
                {
                  v40 = *(_QWORD *)(v5 + 8 * v42++);
                  if (v40)
                  {
                    v39 = v42 - 1;
                    v20 = 80;
                    goto LABEL_31;
                  }
                }
                v21 = 0;
                v23 = 0;
                v24 = 0;
                v26 = 0;
                v25 = 0;
                v27 = 0;
                v28 = 0;
                v29 = 0;
                v30 = 0;
                v15 = 0;
                v22 = 4;
                v11 = v32;
                v20 = 80;
              }
            }
          }
        }
      }
LABEL_27:
      ++v8;
    }
    *(_QWORD *)(v3 + 16) = v8;
    if (v22 != 4)
      continue;
    break;
  }
LABEL_10:
  sub_249757AC0();
  *v1 = v3;
}

uint64_t sub_2497A03E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  v16 = MEMORY[0x24BEE4AF8];
  sub_2497C7A24(a1, v15);
  v3 = v15[1];
  v4 = v15[3];
  v5 = v15[4];
  v6 = (unint64_t)(v15[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_20;
    }
    v8 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v8 >= v6)
      goto LABEL_26;
    v9 = *(_QWORD *)(v3 + 8 * v8);
    v10 = v4 + 1;
    if (!v9)
    {
      v10 = v4 + 2;
      if (v4 + 2 >= v6)
        goto LABEL_26;
      v9 = *(_QWORD *)(v3 + 8 * v10);
      if (!v9)
      {
        v10 = v4 + 3;
        if (v4 + 3 >= v6)
          goto LABEL_26;
        v9 = *(_QWORD *)(v3 + 8 * v10);
        if (!v9)
        {
          v10 = v4 + 4;
          if (v4 + 4 >= v6)
            goto LABEL_26;
          v9 = *(_QWORD *)(v3 + 8 * v10);
          if (!v9)
          {
            v10 = v4 + 5;
            if (v4 + 5 >= v6)
              goto LABEL_26;
            v9 = *(_QWORD *)(v3 + 8 * v10);
            if (!v9)
            {
              v11 = v4 + 6;
              while (v11 < v6)
              {
                v9 = *(_QWORD *)(v3 + 8 * v11++);
                if (v9)
                {
                  v10 = v11 - 1;
                  goto LABEL_19;
                }
              }
LABEL_26:
              swift_release();
              v14 = v16;
              swift_release();
              return v14;
            }
          }
        }
      }
    }
LABEL_19:
    v5 = (v9 - 1) & v9;
    v4 = v10;
LABEL_20:
    result = swift_weakLoadStrong();
    if (result)
    {
      v12 = result;
      swift_retain();
      v13 = swift_release();
      if (v12 == a2)
      {
        MEMORY[0x24BCF7E54](v13);
        if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_249836EBC();
        sub_249836ED4();
        result = sub_249836EB0();
      }
      else
      {
        result = swift_release();
      }
    }
  }
  __break(1u);
  return result;
}

void sub_2497A05CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0();
  v2 = v1;
  if (v0 != _sSo18UVCClientAssertiona16UniversalControlE11descriptionSSvg_0() || v2 != v3)
    OUTLINED_FUNCTION_78_1();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_81();
}

BOOL sub_2497A0634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static UniversalControlUUID.compare(lhs:rhs:)(a1, a2, a3, a4) == 0;
}

BOOL sub_2497A0650(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_2497A065C()
{
  OUTLINED_FUNCTION_51_3();
  OUTLINED_FUNCTION_50_2();
  __asm { BR              X10 }
}

uint64_t sub_2497A0694()
{
  uint64_t v0;
  unsigned __int8 v1;

  v0 = OUTLINED_FUNCTION_49_3();
  return ((uint64_t (*)(uint64_t))((char *)sub_2497A070C + 4 * byte_24983B567[v1]))(v0);
}

void sub_2497A070C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_47_3();
  if (v2 != v3 || v0 != v1)
    OUTLINED_FUNCTION_78_1();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_81();
}

void sub_2497A0780(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6172666E49;
  else
    v3 = 1279547201;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6172666E49;
  else
    v5 = 1279547201;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 != v5 || v4 != v6)
    OUTLINED_FUNCTION_78_1();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_81();
}

uint64_t sub_2497A07F8(int a1, char a2)
{
  return (a1 ^ ((a2 & 1) == 0)) & 1;
}

double sub_2497A080C@<D0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  unint64_t v4;
  char v5;
  double result;

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_2497F2594(), (v5 & 1) != 0))
  {
    sub_24974BC28(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)a2);
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_2497A085C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = sub_2497F25D8(a1);
  if ((v4 & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_177(v3);
  return v2;
}

uint64_t sub_2497A0898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16) && (sub_2497F1F1C(), (v3 & 1) != 0))
    return swift_retain();
  else
    return 0;
}

uint64_t sub_2497A08D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_2497F2594();
  if ((v5 & 1) == 0)
    return 0;
  OUTLINED_FUNCTION_177(v4);
  return v3;
}

uint64_t sub_2497A0914(uint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v5;
  __int128 *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_24974E3E4(0, v3, 0);
    v5 = v13;
    v6 = (__int128 *)(a1 + 48);
    do
    {
      v11 = *v6;
      v12 = *(v6 - 1);
      v8 = *(_QWORD *)(v13 + 16);
      v7 = *(_QWORD *)(v13 + 24);
      OUTLINED_FUNCTION_46_0();
      if (v8 >= v7 >> 1)
        sub_24974E3E4(v7 > 1, v8 + 1, 1);
      *(_QWORD *)(v13 + 16) = v8 + 1;
      v9 = v13 + 40 * v8;
      *(_OWORD *)(v9 + 32) = v12;
      *(_OWORD *)(v9 + 48) = v11;
      *(_QWORD *)(v9 + 64) = a2;
      v6 += 2;
      --v3;
    }
    while (v3);
    OUTLINED_FUNCTION_41_1();
  }
  else
  {
    OUTLINED_FUNCTION_41_1();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_2497A0A14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_2498371F8();
    result = sub_24976CAA4(v1);
    if (result < 0 || (v5 = result, result >= 1 << *(_BYTE *)(v1 + 32)))
    {
LABEL_13:
      __break(1u);
      return v9;
    }
    else
    {
      v6 = v4;
      v7 = v1 + 64;
      v8 = v1;
      while ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
      {
        if (v6 != *(_DWORD *)(v1 + 36))
          goto LABEL_17;
        swift_retain();
        sub_2498371D4();
        sub_249837204();
        v1 = v8;
        sub_249837210();
        result = sub_2498371E0();
        if ((uint64_t)v5 >= -(-1 << *(_BYTE *)(v8 + 32)))
          goto LABEL_18;
        if ((*(_QWORD *)(v7 + 8 * (v5 >> 6)) & (1 << v5)) == 0)
          goto LABEL_19;
        if (v6 != *(_DWORD *)(v8 + 36))
          goto LABEL_20;
        result = sub_249837114();
        if (!--v2)
          return v9;
        v5 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          v6 = *(_DWORD *)(v8 + 36);
          if (result < 1 << *(_BYTE *)(v8 + 32))
            continue;
        }
        goto LABEL_13;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_2497A0BAC()
{
  sub_249837690();
  sub_24983769C();
  return sub_2498376E4();
}

void sub_2497A0CE0()
{
  OUTLINED_FUNCTION_69_3();
  sub_2498376D8();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_2497A0D28()
{
  OUTLINED_FUNCTION_69_3();
  sub_2498376A8();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_2497A0D58(uint64_t a1, unsigned __int8 a2)
{
  OUTLINED_FUNCTION_69_3();
  sub_2497CEBD0(a2);
  sub_249836D84();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_2497A0DA0()
{
  OUTLINED_FUNCTION_69_3();
  sub_249836D84();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_2497A0DFC()
{
  OUTLINED_FUNCTION_69_3();
  sub_2498376A8();
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_5();
}

void sub_2497A0E34(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  unint64_t v18;
  int64_t v19;
  CGFloat v20[4];
  __int128 v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;

  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v9 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a1 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = 0;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    v21 = *(_OWORD *)(*(_QWORD *)(a1 + 48) + 16 * i);
    sub_2497ABC40(&v22, a2, v20);
    if (v6)
    {
LABEL_25:
      swift_release();
      swift_release();
      return;
    }
    v22 = v20[0];
    v23 = v20[1];
    v24 = v20[2];
    v25 = v20[3];
    if (v12)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v13)
      goto LABEL_25;
    v18 = *(_QWORD *)(v9 + 8 * v14);
    if (!v18)
      break;
LABEL_17:
    v12 = (v18 - 1) & v18;
  }
  v19 = v14 + 1;
  if (v14 + 1 >= v13)
    goto LABEL_25;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v19 = v14 + 2;
  if (v14 + 2 >= v13)
    goto LABEL_25;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v19 = v14 + 3;
  if (v14 + 3 >= v13)
    goto LABEL_25;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v19 = v14 + 4;
  if (v14 + 4 >= v13)
    goto LABEL_25;
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
LABEL_16:
    v14 = v19;
    goto LABEL_17;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v13)
      goto LABEL_25;
    v18 = *(_QWORD *)(v9 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_17;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_2497A1018(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17[2];
  uint64_t v18;
  _QWORD v19[4];
  unint64_t v20;

  sub_249748CD4();
  v18 = OUTLINED_FUNCTION_185();
  result = sub_2497C7A24(a1, v19);
  v3 = v19[0];
  v4 = v19[1];
  v5 = v19[3];
  v6 = v20;
  v7 = (unint64_t)(v19[2] + 64) >> 6;
  if (!v20)
    goto LABEL_3;
LABEL_2:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v9 = v8 | (v5 << 6);
  while (1)
  {
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    sub_249748BCC(*v14, v16);
    sub_2497C15A4(v17, v15, v16);
    result = sub_249748C10(v17[0], v17[1]);
    if (v6)
      goto LABEL_2;
LABEL_3:
    v10 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v10 >= v7)
      goto LABEL_21;
    v11 = *(_QWORD *)(v4 + 8 * v10);
    v12 = v5 + 1;
    if (!v11)
    {
      v12 = v5 + 2;
      if (v5 + 2 >= v7)
        goto LABEL_21;
      v11 = *(_QWORD *)(v4 + 8 * v12);
      if (!v11)
      {
        v12 = v5 + 3;
        if (v5 + 3 >= v7)
          goto LABEL_21;
        v11 = *(_QWORD *)(v4 + 8 * v12);
        if (!v11)
        {
          v12 = v5 + 4;
          if (v5 + 4 >= v7)
            goto LABEL_21;
          v11 = *(_QWORD *)(v4 + 8 * v12);
          if (!v11)
          {
            v12 = v5 + 5;
            if (v5 + 5 >= v7)
              goto LABEL_21;
            v11 = *(_QWORD *)(v4 + 8 * v12);
            if (!v11)
            {
              v13 = v5 + 6;
              while (v13 < v7)
              {
                v11 = *(_QWORD *)(v4 + 8 * v13++);
                if (v11)
                {
                  v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              OUTLINED_FUNCTION_12_1();
              return v18;
            }
          }
        }
      }
    }
LABEL_18:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v5 = v12;
  }
  __break(1u);
  return result;
}

#error "2497A11E0: call analysis failed (funcsize=33)"

uint64_t sub_2497A121C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7[80];
  uint64_t v8;
  double __dst[10];

  sub_2497CD924();
  v2 = sub_249836F40();
  v8 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 32;
    do
    {
      memcpy(__dst, (const void *)(a1 + v4), sizeof(__dst));
      sub_2497C258C(v7, __dst);
      v4 += 80;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    v5 = v2;
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_2497A12C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7[70];
  uint64_t v8;
  _BYTE v9[70];

  sub_2497CD8E8();
  v2 = OUTLINED_FUNCTION_185();
  v8 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 32;
    do
    {
      OUTLINED_FUNCTION_87(v9, (const void *)(a1 + v4));
      sub_2497C29B8(v7, v9);
      v4 += 70;
      --v3;
    }
    while (v3);
    OUTLINED_FUNCTION_23_1();
    return v8;
  }
  else
  {
    v5 = v2;
    OUTLINED_FUNCTION_23_1();
  }
  return v5;
}

void sub_2497A1354(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(a2 + 16))
  {
    OUTLINED_FUNCTION_69_3();
    sub_2497CEBD0(a1);
    sub_249836D84();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_33();
    OUTLINED_FUNCTION_122();
    if (((*(_QWORD *)(a2 + 56 + (((v4 & (unint64_t)~v5) >> 3) & 0xFFFFFFFFFFFFF8)) >> (v4 & ~(_BYTE)v5)) & 1) != 0)
    {
      OUTLINED_FUNCTION_50_2();
      __asm { BR              X9 }
    }
  }
  OUTLINED_FUNCTION_64_2();
}

void sub_2497A14FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,__int16 a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,__int16 a34,char a35,char a36,char a37,char a38,__int128 a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  __int16 v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char v87;
  char v88;
  char v89;

  OUTLINED_FUNCTION_150();
  a60 = v61;
  a61 = v65;
  a48 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(v64 + 16))
  {
    v66 = v63;
    v67 = v62;
    v84 = HIWORD(v63);
    v85 = HIBYTE(v63);
    v82 = HIDWORD(v63);
    v83 = v63 >> 40;
    v68 = v63 >> 8;
    v69 = HIBYTE(v62);
    v70 = HIWORD(v62);
    v71 = v62 >> 40;
    v72 = HIDWORD(v62);
    v73 = v62 >> 24;
    v74 = v62 >> 16;
    v86 = v64;
    sub_249837690();
    a25 = v67;
    a26 = v74;
    v87 = v73;
    v88 = v72;
    a27 = v73;
    a28 = v72;
    v89 = v71;
    a29 = v71;
    a30 = v70;
    a31 = v69;
    a32 = v66;
    a33 = v68;
    OUTLINED_FUNCTION_186();
    a35 = v82;
    a36 = v83;
    a37 = v84;
    a38 = v85;
    OUTLINED_FUNCTION_184();
    v75 = sub_2498376E4() & ~(-1 << *(_BYTE *)(v86 + 32));
    OUTLINED_FUNCTION_155();
    if (((v78 >> v75) & 1) != 0)
    {
      v79 = ~v76;
      v80 = *(_QWORD *)(v77 + 48);
      do
      {
        a39 = *(_OWORD *)(v80 + 16 * v75);
        a25 = v67;
        a26 = v74;
        a27 = v87;
        a28 = v88;
        a29 = v89;
        a30 = v70;
        a31 = v69;
        a32 = v66;
        a33 = v68;
        OUTLINED_FUNCTION_186();
        a35 = v82;
        a36 = v83;
        a37 = v84;
        a38 = v85;
        if (!OUTLINED_FUNCTION_26_5(&a39, &a25))
          break;
        v75 = (v75 + 1) & v79;
        OUTLINED_FUNCTION_152();
      }
      while (((v81 >> v75) & 1) != 0);
    }
  }
  OUTLINED_FUNCTION_75_1();
}

uint64_t sub_2497A16F8(double *a1, uint64_t a2)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  double v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  unsigned __int8 v16;
  uint64_t result;
  _BYTE v18[70];
  _OWORD v19[4];
  char v20;
  int v21;
  _BYTE __dst[70];

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_249837690();
  memcpy(__dst, a1, sizeof(__dst));
  v4 = a1[9];
  memcpy(v18, a1, sizeof(v18));
  UniversalControlLink.hash(into:)((uint64_t)v19);
  sub_2498376D8();
  v5 = sub_2498376E4();
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = ~v6;
  do
  {
    v9 = *(_QWORD *)(a2 + 48) + 80 * v7;
    v10 = *(_BYTE *)(v9 + 64);
    v11 = *(_DWORD *)(v9 + 66);
    v12 = *(double *)(v9 + 72);
    v13 = *(_OWORD *)(v9 + 16);
    v14 = *(_OWORD *)(v9 + 32);
    v15 = *(_OWORD *)(v9 + 48);
    v19[0] = *(_OWORD *)v9;
    v19[1] = v13;
    v19[2] = v14;
    v19[3] = v15;
    v20 = v10;
    v21 = v11;
    memcpy(v18, __dst, sizeof(v18));
    static UniversalControlLink.== infix(_:_:)((unsigned __int8 *)v19, (uint64_t)v18);
    result = v16 & (v12 == v4);
    if ((result & 1) != 0)
      break;
    v7 = (v7 + 1) & v8;
  }
  while (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  return result;
}

void sub_2497A1844(_QWORD *a1, uint64_t (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t v3;
  char v7;

  v7 = OUTLINED_FUNCTION_181();
  *a1 = v3;
  if ((v7 & 1) == 0)
    *a1 = a2(v3);
  OUTLINED_FUNCTION_143();
  a3();
  sub_2498371E0();
  OUTLINED_FUNCTION_109();
}

uint64_t sub_2497A18A4(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24975E0E0();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2497B2E9C(v6);
  return sub_2498371E0();
}

void sub_2497A191C(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t v3;

  if ((OUTLINED_FUNCTION_181() & 1) == 0)
    v3 = a2(v3);
  OUTLINED_FUNCTION_143();
  a3();
  *a1 = v3;
  OUTLINED_FUNCTION_109();
}

uint64_t static UniversalControlDisplaySolver1.version.getter()
{
  return 2;
}

uint64_t sub_2497A1974()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_2497A19B4(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2497A19B4(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t result;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  _QWORD v10[5];

  sub_2497C7A24(a1, v10);
  v1 = v10[1];
  v2 = v10[3];
  v3 = v10[4];
  v4 = (unint64_t)(v10[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_3;
LABEL_2:
  v3 &= v3 - 1;
  while (1)
  {
    swift_retain();
    sub_2497A1F2C();
    result = swift_release();
    if (v3)
      goto LABEL_2;
LABEL_3:
    v6 = v2 + 1;
    if (__OFADD__(v2, 1))
      break;
    if (v6 >= v4)
      return swift_release();
    v7 = *(_QWORD *)(v1 + 8 * v6);
    v8 = v2 + 1;
    if (!v7)
    {
      v8 = v2 + 2;
      if (v2 + 2 >= v4)
        return swift_release();
      v7 = *(_QWORD *)(v1 + 8 * v8);
      if (!v7)
      {
        v8 = v2 + 3;
        if (v2 + 3 >= v4)
          return swift_release();
        v7 = *(_QWORD *)(v1 + 8 * v8);
        if (!v7)
        {
          v8 = v2 + 4;
          if (v2 + 4 >= v4)
            return swift_release();
          v7 = *(_QWORD *)(v1 + 8 * v8);
          if (!v7)
          {
            v8 = v2 + 5;
            if (v2 + 5 >= v4)
              return swift_release();
            v7 = *(_QWORD *)(v1 + 8 * v8);
            if (!v7)
            {
              v9 = v2 + 6;
              while (v9 < v4)
              {
                v7 = *(_QWORD *)(v1 + 8 * v9++);
                if (v7)
                {
                  v8 = v9 - 1;
                  goto LABEL_18;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_18:
    v3 = (v7 - 1) & v7;
    v2 = v8;
  }
  __break(1u);
  return result;
}

void sub_2497A1B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  _QWORD *v21;

  v2 = v1;
  type metadata accessor for UniversalControlDisplaySolver1.DisplayProxy();
  sub_2497CC9AC();
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v5 = sub_249836CA0();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v5;
  v6 = a1 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
  swift_beginAccess();
  v7 = *(_QWORD *)(v6 + 32);
  if (v7 >> 62)
    goto LABEL_14;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    while (1)
    {
      v21 = v4;
      v4 = &v21;
      sub_24974E348();
      if (v8 < 0)
        break;
      v9 = 0;
      v10 = (uint64_t)v21;
      while (v8 != v9)
      {
        if ((v7 & 0xC000000000000001) != 0)
        {
          v11 = MEMORY[0x24BCF8148](v9, v7);
        }
        else
        {
          v11 = *(_QWORD *)(v7 + 8 * v9 + 32);
          swift_retain();
        }
        v12 = (__int128 *)(v11 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
        swift_beginAccess();
        v19 = v12[1];
        v20 = *v12;
        v13 = swift_allocObject();
        swift_retain();
        v14 = v11;
        v4 = (_QWORD *)v13;
        v15 = sub_2497A1E0C(v14);
        v21 = (_QWORD *)v10;
        v16 = *(_QWORD *)(v10 + 16);
        if (v16 >= *(_QWORD *)(v10 + 24) >> 1)
        {
          v4 = &v21;
          sub_24974E348();
          v10 = (uint64_t)v21;
        }
        ++v9;
        *(_QWORD *)(v10 + 16) = v16 + 1;
        v17 = v10 + 40 * v16;
        *(_OWORD *)(v17 + 32) = v20;
        *(_OWORD *)(v17 + 48) = v19;
        *(_QWORD *)(v17 + 64) = v15;
        if (v8 == v9)
        {
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_14:
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v8 = sub_249837324();
      if (!v8)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_release();
    v10 = MEMORY[0x24BEE4AF8];
LABEL_16:
    v18 = sub_24977DF84(v10);
    swift_release();
    *(_QWORD *)(v2 + 24) = v18;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_2497A1D8C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2497A1DB0()
{
  sub_2497A1D8C();
  return swift_deallocClassInstance();
}

uint64_t (*sub_2497A1DCC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2497A1E0C(uint64_t a1)
{
  uint64_t v1;

  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819C0);
  sub_2497CD8AC();
  *(_QWORD *)(v1 + 32) = sub_249836CA0();
  swift_weakAssign();
  swift_release();
  *(_QWORD *)(v1 + 24) = a1;
  return v1;
}

double sub_2497A1E9C()
{
  double v0;
  uint64_t Strong;
  double v2;
  int v3;
  double v4;

  v0 = sub_2497CFB08();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = *(double *)(Strong + 32);
    v3 = *(unsigned __int8 *)(Strong + 48);
    swift_release();
    v4 = 0.0;
    if (!v3)
      v4 = v2;
  }
  else
  {
    v4 = 0.0;
  }
  return v0 + v4;
}

void sub_2497A1F2C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF20);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_249838510;
  sub_2497A1E9C();
  JUMPOUT(0x2497A1FE0);
}

uint64_t sub_2497A2298()
{
  uint64_t v0;

  swift_weakDestroy();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2497A22C4()
{
  sub_2497A2298();
  return swift_deallocClassInstance();
}

uint64_t UniversalControlDisplaySolver1.__allocating_init<A>(configurationID:devices:links:localDevice:)()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_18_1();
  UniversalControlDisplaySolver1.init<A>(configurationID:devices:links:localDevice:)();
  return v0;
}

uint64_t UniversalControlDisplaySolver1.init<A>(configurationID:devices:links:localDevice:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 *v42;
  uint64_t result;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[16];
  uint64_t v64;
  uint64_t v65;

  OUTLINED_FUNCTION_150();
  v64 = v1;
  v65 = v2;
  v57 = v3;
  v58 = v4;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = v9 >> 8;
  v12 = v9 >> 16;
  v13 = v9 >> 24;
  v14 = HIDWORD(v9);
  v44 = v15;
  v45 = v9 >> 40;
  v46 = HIWORD(v9);
  v47 = HIBYTE(v9);
  v48 = v7 >> 8;
  v49 = v7 >> 16;
  v50 = v7 >> 24;
  v51 = HIDWORD(v7);
  v55 = HIWORD(v7);
  v52 = v7 >> 40;
  v53 = HIBYTE(v7);
  type metadata accessor for UniversalControlDisplaySolver1.DeviceProxy();
  sub_249778674();
  v16 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 40) = sub_249836CA0();
  type metadata accessor for UniversalControlDisplaySolver1.DisplayProxy();
  sub_2497CC9AC();
  *(_QWORD *)(v0 + 48) = sub_249836CA0();
  *(_BYTE *)(v0 + 16) = v10;
  *(_BYTE *)(v0 + 17) = v11;
  *(_BYTE *)(v0 + 18) = v12;
  *(_BYTE *)(v0 + 19) = v13;
  *(_BYTE *)(v0 + 20) = v14;
  *(_BYTE *)(v0 + 21) = v45;
  *(_BYTE *)(v0 + 22) = v46;
  *(_BYTE *)(v0 + 23) = v47;
  *(_BYTE *)(v0 + 24) = v8;
  *(_BYTE *)(v0 + 25) = v48;
  *(_BYTE *)(v0 + 26) = v49;
  *(_BYTE *)(v0 + 27) = v50;
  *(_BYTE *)(v0 + 28) = v51;
  *(_BYTE *)(v0 + 29) = v52;
  *(_BYTE *)(v0 + 30) = v55;
  v56 = v0;
  *(_BYTE *)(v0 + 31) = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2578800D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257880610);
  v17 = OUTLINED_FUNCTION_18_1();
  *(_OWORD *)(v17 + 16) = xmmword_24983B660;
  *(_QWORD *)(v17 + 32) = v6;
  v63[0] = v17;
  sub_249836EB0();
  v62 = v63[0];
  sub_2497CC9E8();
  v54 = v6;
  OUTLINED_FUNCTION_15_4();
  sub_249836F64();
  OUTLINED_FUNCTION_78();
  if ((v63[0] & 0x8000000000000000) != 0 || (v63[0] & 0x4000000000000000) != 0)
  {
    v29 = OUTLINED_FUNCTION_24();
    sub_249753AC4(v29);
    v18 = v30;
    OUTLINED_FUNCTION_1();
  }
  else
  {
    v18 = v63[0] & 0xFFFFFFFFFFFFFF8;
    OUTLINED_FUNCTION_24();
  }
  v62 = v18;
  sub_2497A1844(&v62, (uint64_t (*)(uint64_t))sub_24975E100, (void (*)(void))sub_2497AC418);
  OUTLINED_FUNCTION_1();
  v19 = v62;
  if (v62 < 0 || (v62 & 0x4000000000000000) != 0)
  {
    OUTLINED_FUNCTION_43_0();
    v20 = sub_249837324();
    OUTLINED_FUNCTION_167();
    if (!v20)
      goto LABEL_18;
  }
  else
  {
    v20 = *(_QWORD *)(v62 + 16);
    if (!v20)
      goto LABEL_18;
  }
  v63[0] = MEMORY[0x24BEE4AF8];
  sub_24974E37C();
  if (v20 < 0)
    goto LABEL_41;
  v21 = 0;
  v16 = v63[0];
  do
  {
    if ((v19 & 0xC000000000000001) != 0)
    {
      v22 = MEMORY[0x24BCF8148](v21, v19);
    }
    else
    {
      v22 = *(_QWORD *)(v19 + 8 * v21 + 32);
      OUTLINED_FUNCTION_22_1();
    }
    v23 = (__int128 *)(v22 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
    OUTLINED_FUNCTION_16();
    v59 = *v23;
    OUTLINED_FUNCTION_18_1();
    sub_2497A1B08(v22);
    v25 = v24;
    v63[0] = v16;
    v27 = *(_QWORD *)(v16 + 16);
    v26 = *(_QWORD *)(v16 + 24);
    if (v27 >= v26 >> 1)
    {
      OUTLINED_FUNCTION_80(v26);
      sub_24974E37C();
      v16 = v63[0];
    }
    ++v21;
    *(_QWORD *)(v16 + 16) = v27 + 1;
    v28 = v16 + 24 * v27;
    *(_OWORD *)(v28 + 32) = v59;
    *(_QWORD *)(v28 + 48) = v25;
  }
  while (v20 != v21);
LABEL_18:
  OUTLINED_FUNCTION_167();
  *(_QWORD *)(v56 + 40) = sub_24974F104(v16, &qword_257881268, (void (*)(uint64_t, uint64_t, uint64_t *))sub_2497C128C);
  swift_bridgeObjectRelease();
  v61 = MEMORY[0x24BEE4AF8];
  sub_2497C7A24(*(_QWORD *)(v56 + 40), v63);
  v31 = v63[1];
  v32 = v63[3];
  v33 = v63[4];
  v34 = (unint64_t)(v63[2] + 64) >> 6;
  OUTLINED_FUNCTION_61_2();
  if (!v33)
    goto LABEL_20;
LABEL_19:
  OUTLINED_FUNCTION_163();
  while (1)
  {
    v39 = swift_bridgeObjectRetain();
    sub_24979F364(v39);
    if (v33)
      goto LABEL_19;
LABEL_20:
    v35 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v35 >= v34)
      goto LABEL_39;
    if (!*(_QWORD *)(v31 + 8 * v35))
    {
      if (v32 + 2 >= v34)
        goto LABEL_39;
      if (!*(_QWORD *)(v31 + 8 * (v32 + 2)))
      {
        if (v32 + 3 >= v34)
          goto LABEL_39;
        if (!*(_QWORD *)(v31 + 8 * (v32 + 3)))
        {
          if (v32 + 4 >= v34)
            goto LABEL_39;
          if (!*(_QWORD *)(v31 + 8 * (v32 + 4)))
          {
            if (v32 + 5 >= v34)
              goto LABEL_39;
            if (!*(_QWORD *)(v31 + 8 * (v32 + 5)))
            {
              if (v32 + 6 >= v34)
                goto LABEL_39;
              if (!*(_QWORD *)(v31 + 8 * (v32 + 6)))
              {
                v36 = v32 + 7;
                while (v36 < v34)
                {
                  if (*(_QWORD *)(v31 + 8 * v36++))
                    goto LABEL_36;
                }
LABEL_39:
                swift_bridgeObjectRelease();
                swift_release();
                v40 = sub_2497A2928(v61);
                OUTLINED_FUNCTION_1();
                v41 = sub_24974F104(v40, &qword_257881260, (void (*)(uint64_t, uint64_t, uint64_t *))sub_2497C0DD4);
                (*(void (**)(uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57);
                *(_QWORD *)(v56 + 48) = v41;
                swift_bridgeObjectRelease();
                *(_QWORD *)(v56 + 32) = v44;
                v42 = (__int128 *)(v54 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
                OUTLINED_FUNCTION_16();
                v60 = *v42;
                OUTLINED_FUNCTION_10_1();
                *(_OWORD *)(v56 + 56) = v60;
                return v56;
              }
            }
          }
        }
      }
    }
LABEL_36:
    OUTLINED_FUNCTION_128();
    v32 = v38;
  }
  __break(1u);
LABEL_41:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2497A28A4(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (__OFADD__(*(_QWORD *)(a2 + 16), *(_QWORD *)(result + 16)))
  {
    __break(1u);
  }
  else
  {
    sub_249752EF4();
    v5 = v2;
    v3 = swift_bridgeObjectRetain();
    sub_24979FC30(v3);
    v4 = swift_bridgeObjectRetain();
    sub_24979FB54(v4);
    return v5;
  }
  return result;
}

uint64_t sub_2497A2928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_24974E348();
    v4 = a1 + 64;
    do
    {
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF70);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF88);
      swift_dynamicCast();
      v2 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24974E348();
        v2 = v11;
      }
      v5 = *(_QWORD *)(v2 + 16);
      if (v5 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_24974E348();
        v2 = v11;
      }
      *(_QWORD *)(v2 + 16) = v5 + 1;
      v6 = v2 + 40 * v5;
      *(_OWORD *)(v6 + 32) = v8;
      *(_OWORD *)(v6 + 48) = v9;
      *(_QWORD *)(v6 + 64) = v10;
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2497A2A84()
{
  CGFloat v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGRect v5;
  CGRect v6;

  OUTLINED_FUNCTION_162();
  CGRectGetMinX(v5);
  sub_249836F1C();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_0_18();
  v6.origin.x = v3;
  v6.origin.y = v2;
  v6.size.width = v1;
  v6.size.height = v0;
  CGRectGetMinY(v6);
  sub_249836F1C();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_0_18();
  sub_249836F1C();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_0_18();
  sub_249836F1C();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_23_1();
  sub_249836DB4();
  return 91;
}

void sub_2497A2B34()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  CGFloat v21;
  CGFloat MinY;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD v36[15];
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[5];
  CGRect v42;
  CGRect v43;

  OUTLINED_FUNCTION_160();
  v2 = v1;
  v4 = v3;
  v5 = sub_249836A18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_126();
  v9 = v8 - v7;
  v10 = OUTLINED_FUNCTION_45();
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v36 - v14;
  v16 = *(_QWORD *)(v0 + 40);
  OUTLINED_FUNCTION_74();
  v17 = sub_2497A0898(v4, v2, v16);
  OUTLINED_FUNCTION_23_1();
  if (v17)
  {
    v18 = *(_QWORD *)(v17 + 16) + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties;
    OUTLINED_FUNCTION_16();
    v19 = *(_QWORD *)(v18 + 32);
    if (v19 >> 62)
      goto LABEL_24;
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_61_2();
    if (v20)
    {
      while (1)
      {
        if ((v19 & 0xC000000000000001) != 0)
          MEMORY[0x24BCF8148](0, v19);
        else
          OUTLINED_FUNCTION_77();
        if ((OUTLINED_FUNCTION_157() & 1) != 0)
          break;
        OUTLINED_FUNCTION_49_0();
        if (v20 != 1)
        {
          v31 = 5;
          while (1)
          {
            if ((v19 & 0xC000000000000001) != 0)
              MEMORY[0x24BCF8148](v31 - 4, v19);
            else
              OUTLINED_FUNCTION_77();
            v32 = v31 - 3;
            if (__OFADD__(v31 - 4, 1))
              break;
            if ((OUTLINED_FUNCTION_157() & 1) != 0)
              goto LABEL_7;
            OUTLINED_FUNCTION_49_0();
            ++v31;
            if (v32 == v20)
              goto LABEL_19;
          }
          __break(1u);
LABEL_24:
          OUTLINED_FUNCTION_61_2();
          v20 = sub_249837324();
          if (v20)
            continue;
        }
        goto LABEL_19;
      }
LABEL_7:
      OUTLINED_FUNCTION_151();
      sub_2497CFB08();
      OUTLINED_FUNCTION_86_0();
      v21 = -CGRectGetMinX(v42);
      v43.origin.x = OUTLINED_FUNCTION_28_0();
      MinY = CGRectGetMinY(v43);
      *(CGFloat *)(v17 + 32) = v21;
      *(CGFloat *)(v17 + 40) = -MinY;
      *(_BYTE *)(v17 + 48) = 0;
      OUTLINED_FUNCTION_154();
      OUTLINED_FUNCTION_49_0();
    }
    else
    {
LABEL_19:
      OUTLINED_FUNCTION_151();
      OUTLINED_FUNCTION_18_8();
      v33 = sub_249836AFC();
      v34 = sub_249836FAC();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = (uint8_t *)OUTLINED_FUNCTION_12();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_249741000, v33, v34, "Solver: No Main Display on Root Device", v35, 2u);
        OUTLINED_FUNCTION_3();
      }

      OUTLINED_FUNCTION_10_1();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v40);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_8();
    v23 = sub_249836AFC();
    v24 = sub_249836FAC();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v36[13] = v4 >> 16;
      v36[14] = v4 >> 8;
      v36[11] = HIDWORD(v4);
      v36[12] = v4 >> 24;
      v36[9] = HIWORD(v4);
      v36[10] = v4 >> 40;
      v36[8] = HIBYTE(v4);
      v36[7] = v2 >> 8;
      v36[5] = v2 >> 16;
      v36[4] = v2 >> 24;
      v36[3] = HIDWORD(v2);
      v36[2] = v2 >> 40;
      v36[1] = HIWORD(v2);
      v26 = OUTLINED_FUNCTION_12();
      v37 = v25;
      v27 = (uint8_t *)v26;
      v38 = OUTLINED_FUNCTION_12();
      v41[0] = v38;
      *(_DWORD *)v27 = 136446210;
      v36[6] = v27 + 4;
      sub_2498369E8();
      v28 = sub_2498369B8();
      v30 = v29;
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
      v41[3] = sub_24976A748(v28, v30, v41);
      sub_2498370CC();
      OUTLINED_FUNCTION_21_5();
      _os_log_impl(&dword_249741000, v23, (os_log_type_t)v37, "Solver: No Root Device %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
    }

    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v40);
  }
  OUTLINED_FUNCTION_161();
}

uint64_t sub_2497A3014()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t Strong;
  char v16;
  uint64_t v18;

  OUTLINED_FUNCTION_60_3();
  OUTLINED_FUNCTION_162();
  v2 = v1;
  v18 = MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v3 + 64);
  v5 = v3 + 64;
  v4 = v6;
  v7 = 1 << *(_BYTE *)(*(_QWORD *)(v0 + 48) + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v4;
  v10 = (unint64_t)(v7 + 63) >> 6;
  OUTLINED_FUNCTION_74();
  v11 = 0;
  while (v9)
  {
    v9 &= v9 - 1;
LABEL_20:
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v16 = *(_BYTE *)(Strong + 48);
      OUTLINED_FUNCTION_30_1();
      OUTLINED_FUNCTION_17_0();
      if ((v16 & 1) == 0)
      {
        sub_2497A1E9C();
        __asm { BR              X8 }
      }
      OUTLINED_FUNCTION_10_1();
    }
  }
  v12 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v10)
    goto LABEL_24;
  v13 = *(_QWORD *)(v5 + 8 * v12);
  ++v11;
  if (v13)
    goto LABEL_19;
  v11 = v12 + 1;
  if (v12 + 1 >= v10)
    goto LABEL_24;
  v13 = *(_QWORD *)(v5 + 8 * v11);
  if (v13)
    goto LABEL_19;
  v11 = v12 + 2;
  if (v12 + 2 >= v10)
    goto LABEL_24;
  v13 = *(_QWORD *)(v5 + 8 * v11);
  if (v13)
  {
LABEL_19:
    v9 = (v13 - 1) & v13;
    goto LABEL_20;
  }
  v14 = v12 + 3;
  if (v14 < v10)
  {
    v13 = *(_QWORD *)(v5 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        v11 = v14 + 1;
        if (__OFADD__(v14, 1))
          break;
        if (v11 >= v10)
          goto LABEL_24;
        v13 = *(_QWORD *)(v5 + 8 * v11);
        ++v14;
        if (v13)
          goto LABEL_19;
      }
LABEL_26:
      __break(1u);
      JUMPOUT(0x2497A324CLL);
    }
    v11 = v14;
    goto LABEL_19;
  }
LABEL_24:
  OUTLINED_FUNCTION_12_1();
  return v18;
}

void sub_2497A325C()
{
  uint64_t v0;
  uint64_t v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t Strong;
  uint64_t v32;
  char v33;
  uint64_t v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  unint64_t v39;
  uint64_t v40;
  double v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[6];
  uint64_t v63;
  uint64_t v64;
  CGRect v65;
  CGRect v66;

  OUTLINED_FUNCTION_60_3();
  v63 = v1;
  v64 = v10;
  v12 = v11;
  v13 = OUTLINED_FUNCTION_45();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_126();
  v17 = v16 - v15;
  v18 = *(_QWORD *)(v0 + 48);
  OUTLINED_FUNCTION_61_2();
  swift_retain();
  v60 = v18;
  v19 = sub_2497A3854(v18, v12);
  if (v19 >> 62)
    goto LABEL_60;
  v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v20)
    goto LABEL_61;
  while (1)
  {
    v56 = v17;
    v54 = v14;
    v55 = v13;
    v21 = 0;
    v59 = v19 & 0xC000000000000001;
    v57 = v20;
    v58 = v19;
LABEL_4:
    v13 = v59;
    sub_2497760E0(v21, v59 == 0, v19);
    if (v59)
      MEMORY[0x24BCF8148](v21, v19);
    else
      swift_retain();
    if (!__OFADD__(v21++, 1))
      break;
LABEL_59:
    __break(1u);
LABEL_60:
    v20 = sub_249837324();
    if (!v20)
      goto LABEL_61;
  }
  sub_2497A1E9C();
  OUTLINED_FUNCTION_86_0();
  v61 = MEMORY[0x24BEE4AF8];
  sub_2497C7A24(v60, v62);
  v13 = v62[0];
  v14 = v62[1];
  v19 = v62[3];
  v23 = v62[4];
  v24 = (unint64_t)(v62[2] + 64) >> 6;
  OUTLINED_FUNCTION_24();
  swift_retain();
  while (v23)
  {
    v25 = __clz(__rbit64(v23));
    v23 &= v23 - 1;
    v26 = v25 | (v19 << 6);
LABEL_27:
    v17 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v26);
    Strong = swift_weakLoadStrong();
    OUTLINED_FUNCTION_46_0();
    if (Strong && (swift_release(), Strong == v12)
      || (v32 = swift_weakLoadStrong()) == 0
      || (v33 = *(_BYTE *)(v32 + 48), swift_release(), (v33 & 1) != 0))
    {
      OUTLINED_FUNCTION_41_1();
    }
    else
    {
      sub_2498371D4();
      sub_249837204();
      sub_249837210();
      sub_2498371E0();
    }
  }
  v27 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (v27 >= v24)
    goto LABEL_33;
  v28 = *(_QWORD *)(v14 + 8 * v27);
  v29 = v19 + 1;
  if (v28)
    goto LABEL_26;
  v29 = v19 + 2;
  if ((uint64_t)(v19 + 2) >= v24)
    goto LABEL_33;
  v28 = *(_QWORD *)(v14 + 8 * v29);
  if (v28)
    goto LABEL_26;
  v29 = v19 + 3;
  if ((uint64_t)(v19 + 3) >= v24)
    goto LABEL_33;
  v28 = *(_QWORD *)(v14 + 8 * v29);
  if (v28)
    goto LABEL_26;
  v29 = v19 + 4;
  if ((uint64_t)(v19 + 4) >= v24)
    goto LABEL_33;
  v28 = *(_QWORD *)(v14 + 8 * v29);
  if (v28)
    goto LABEL_26;
  v29 = v19 + 5;
  if ((uint64_t)(v19 + 5) >= v24)
    goto LABEL_33;
  v28 = *(_QWORD *)(v14 + 8 * v29);
  if (v28)
  {
LABEL_26:
    v23 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v29 << 6);
    v19 = v29;
    goto LABEL_27;
  }
  v30 = v19 + 6;
  while (v30 < v24)
  {
    v28 = *(_QWORD *)(v14 + 8 * v30++);
    if (v28)
    {
      v29 = v30 - 1;
      goto LABEL_26;
    }
  }
LABEL_33:
  OUTLINED_FUNCTION_12_1();
  v17 = v61;
  swift_release();
  if ((v61 & 0x8000000000000000) == 0 && (v61 & 0x4000000000000000) == 0)
  {
    v34 = *(_QWORD *)(v61 + 16);
    if (v34)
      goto LABEL_36;
    goto LABEL_48;
  }
  OUTLINED_FUNCTION_138();
  v34 = sub_249837324();
  OUTLINED_FUNCTION_41_1();
  if (!v34)
    goto LABEL_48;
LABEL_36:
  v19 = v61 & 0xC000000000000001;
  sub_2497760E0(0, (v61 & 0xC000000000000001) == 0, v61);
  if ((v61 & 0xC000000000000001) != 0)
  {
    v13 = MEMORY[0x24BCF8148](0, v61);
  }
  else
  {
    v13 = *(_QWORD *)(v61 + 32);
    OUTLINED_FUNCTION_21_2();
  }
  v35 = sub_2497A1E9C();
  if (OUTLINED_FUNCTION_28_6(v35, v36, v37, v38))
  {
LABEL_53:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_41_1();
    v65.origin.x = v2;
    v65.origin.y = v3;
    v65.size.width = v4;
    v65.size.height = v5;
    v66.origin.x = v6;
    v66.origin.y = v7;
    v66.size.width = v8;
    v66.size.height = v9;
    CGRectIntersection(v65, v66);
    OUTLINED_FUNCTION_18_8();
    swift_retain_n();
    v45 = sub_249836AFC();
    v46 = sub_249836FAC();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = OUTLINED_FUNCTION_12();
      OUTLINED_FUNCTION_12();
      *(_DWORD *)v47 = 136446722;
      OUTLINED_FUNCTION_28_0();
      v48 = sub_2497A2A84();
      OUTLINED_FUNCTION_114(v48, v49);
      OUTLINED_FUNCTION_68_2();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_25();
      *(_WORD *)(v47 + 12) = 2082;
      v50 = sub_2497A2A84();
      OUTLINED_FUNCTION_114(v50, v51);
      OUTLINED_FUNCTION_68_2();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_25();
      *(_WORD *)(v47 + 22) = 2082;
      v52 = sub_2497A2A84();
      OUTLINED_FUNCTION_114(v52, v53);
      OUTLINED_FUNCTION_68_2();
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_25();
      _os_log_impl(&dword_249741000, v45, v46, "Solver1: Collision Detected %{public}s x %{public}s -> %{public}s", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_3();
    }

    OUTLINED_FUNCTION_168();
    OUTLINED_FUNCTION_12_1();
    swift_release_n();
    OUTLINED_FUNCTION_166();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v55);
    goto LABEL_62;
  }
  OUTLINED_FUNCTION_12_1();
  if (v34 != 1)
  {
    v14 = 5;
    do
    {
      v39 = v14 - 4;
      if (v19)
      {
        v13 = MEMORY[0x24BCF8148](v14 - 4, v61);
      }
      else
      {
        if (v39 >= *(_QWORD *)(v61 + 16))
          goto LABEL_58;
        v13 = *(_QWORD *)(v61 + 8 * v14);
        OUTLINED_FUNCTION_21_2();
      }
      v40 = v14 - 3;
      if (__OFADD__(v39, 1))
        goto LABEL_57;
      v41 = sub_2497A1E9C();
      if (OUTLINED_FUNCTION_28_6(v41, v42, v43, v44))
        goto LABEL_53;
      OUTLINED_FUNCTION_12_1();
      ++v14;
    }
    while (v40 != v34);
  }
LABEL_48:
  OUTLINED_FUNCTION_168();
  OUTLINED_FUNCTION_41_1();
  v19 = v58;
  if (v21 != v57)
    goto LABEL_4;
LABEL_61:
  OUTLINED_FUNCTION_166();
  OUTLINED_FUNCTION_42();
LABEL_62:
  OUTLINED_FUNCTION_142();
}

uint64_t sub_2497A3854(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  result = sub_2497C7A24(a1, v14);
  v4 = v14[1];
  v5 = v14[3];
  v6 = v14[4];
  v7 = (unint64_t)(v14[2] + 64) >> 6;
  while (1)
  {
    if (v6)
    {
      OUTLINED_FUNCTION_163();
      goto LABEL_19;
    }
    v8 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v8 >= v7)
      goto LABEL_23;
    if (!*(_QWORD *)(v4 + 8 * v8))
    {
      if (v5 + 2 >= v7)
        goto LABEL_23;
      if (!*(_QWORD *)(v4 + 8 * (v5 + 2)))
      {
        if (v5 + 3 >= v7)
          goto LABEL_23;
        if (!*(_QWORD *)(v4 + 8 * (v5 + 3)))
        {
          if (v5 + 4 >= v7)
            goto LABEL_23;
          if (!*(_QWORD *)(v4 + 8 * (v5 + 4)))
          {
            if (v5 + 5 >= v7)
              goto LABEL_23;
            if (!*(_QWORD *)(v4 + 8 * (v5 + 5)))
            {
              v9 = v5 + 6;
              while (v9 < v7)
              {
                if (*(_QWORD *)(v4 + 8 * v9++))
                  goto LABEL_18;
              }
LABEL_23:
              swift_release();
              v13 = v15;
              OUTLINED_FUNCTION_41_1();
              return v13;
            }
          }
        }
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_128();
    v5 = v11;
LABEL_19:
    result = swift_weakLoadStrong();
    if (result)
    {
      v12 = result;
      OUTLINED_FUNCTION_15_4();
      swift_release();
      if (v12 == a2)
      {
        sub_2498371D4();
        sub_249837204();
        sub_249837210();
        result = sub_2498371E0();
      }
      else
      {
        result = swift_release();
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2497A39F0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  unint64_t v8;
  unint64_t v9;
  double v10;
  double v11;
  double v13;
  double v14;
  double v15;
  double v16;
  int v17;
  BOOL v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  int v24;
  BOOL v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  BOOL v31;
  BOOL v33;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  double *v41;
  uint64_t v42;
  uint64_t v43;
  double *v44;
  double *v45;
  double v46;
  BOOL v47;
  double v48;
  uint64_t v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  double v54;
  double v55;
  double v56;
  double v57;
  double *v58;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  uint64_t v67;
  double *v68;
  double v69;
  double v71;
  double v72;
  double v73;
  double v74;
  double v75;
  unint64_t v76;
  double *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  double v112;
  uint64_t v113;
  double v114;
  double v115;
  double v116;
  double v117;
  uint64_t v118;
  uint64_t v119;

  v10 = a7;
  v11 = a5;
  v13 = a1;
  v14 = a7 - a5;
  if (a3 - a1 < 0.0)
  {
    if (v14 >= 0.0 && a8 - a6 >= 0.0)
      goto LABEL_11;
    goto LABEL_10;
  }
  v15 = a4 - a2;
  if (v14 < 0.0)
  {
    if (v15 < 0.0)
    {
LABEL_10:
      v17 = 1;
      v18 = a3 > a7;
      v19 = a7;
      v20 = a8;
      v21 = v11;
      a8 = a6;
      v22 = a3;
      v23 = a4;
      v24 = 1;
      goto LABEL_14;
    }
LABEL_13:
    v24 = 0;
    v17 = 1;
    v19 = a7;
    v18 = v13 > a7;
    v20 = a8;
    v21 = v11;
    a8 = a6;
    v22 = v13;
    v23 = a2;
    v13 = a3;
    a2 = a4;
LABEL_14:
    v11 = a7;
    if (!v18)
      goto LABEL_17;
LABEL_16:
    v10 = v22;
    v11 = v19;
    goto LABEL_17;
  }
  v16 = a8 - a6;
  if (v15 < 0.0)
  {
    if (v16 >= 0.0)
    {
LABEL_11:
      v17 = 0;
      v24 = 1;
      v19 = a5;
      v25 = a3 > a5;
      v20 = a6;
      v21 = a7;
      v22 = a3;
      v23 = a4;
      goto LABEL_181;
    }
    goto LABEL_10;
  }
  if (v16 < 0.0)
    goto LABEL_13;
  v17 = 0;
  v24 = 0;
  v25 = v13 > a5;
  v19 = a5;
  v20 = a6;
  v21 = a7;
  v22 = v13;
  v23 = a2;
  v13 = a3;
  a2 = a4;
LABEL_181:
  v10 = v11;
  if (v25)
    goto LABEL_16;
LABEL_17:
  if (v21 >= v13)
    v26 = v13;
  else
    v26 = v21;
  if (v10 > v26)
    v27 = v10;
  else
    v27 = v26;
  if (v23 > v20)
    v28 = v23;
  else
    v28 = v20;
  if (a8 >= a2)
    v29 = a2;
  else
    v29 = a8;
  if (v28 > v29)
    v30 = v28;
  else
    v30 = v29;
  v31 = v13 < v10 || v27 < v22;
  v33 = v31 || a2 < v28 || v30 < v23;
  v115 = v21;
  v116 = v20;
  v37 = v33 || v21 < v10 || v27 < v11 || a8 < v28 || v30 < v20;
  v117 = a8;
  if (v37)
  {
    OUTLINED_FUNCTION_37_4();
    v39 = v38;
    OUTLINED_FUNCTION_90_0();
    if (v40)
    {
      OUTLINED_FUNCTION_34_6();
      v39 = v104;
    }
    *(_QWORD *)(v39 + 16) = v9;
    v41 = (double *)(v39 + 32 * v8);
    v41[4] = v22;
    v41[5] = v23;
    v41[6] = v13;
    v41[7] = a2;
    OUTLINED_FUNCTION_37_4();
    v43 = v42;
    OUTLINED_FUNCTION_90_0();
    if (v40)
    {
      OUTLINED_FUNCTION_33_6();
      v43 = v105;
    }
    *(_QWORD *)(v43 + 16) = v9;
    v44 = (double *)(v43 + 32 * v8);
    v44[4] = v11;
    v44[5] = v116;
    v44[6] = v115;
    v45 = v44 + 7;
    v46 = v117;
    goto LABEL_140;
  }
  v47 = v22 < v10 || v23 < v28;
  v114 = v30;
  if (v47)
  {
    OUTLINED_FUNCTION_89_0();
    if (v31)
      OUTLINED_FUNCTION_31_6();
    OUTLINED_FUNCTION_88_0();
    if (v31)
      *(_QWORD *)&v48 += (*(uint64_t *)&v48 >> 63) | 1;
    v50 = -v48;
    if (v23 >= v50)
      v50 = v23;
    v112 = v50;
    v113 = v49;
    OUTLINED_FUNCTION_37_4();
    v39 = v51;
    OUTLINED_FUNCTION_90_0();
    if (v40)
    {
      OUTLINED_FUNCTION_34_6();
      v39 = v106;
    }
    v20 = v116;
    a8 = v117;
    *(_QWORD *)(v39 + 16) = v9;
    v52 = v39 + 32 * v8;
    *(double *)(v52 + 32) = v22;
    *(double *)(v52 + 40) = v23;
    v30 = v114;
    *(_QWORD *)(v52 + 48) = v113;
    *(double *)(v52 + 56) = v112;
  }
  else
  {
    v39 = MEMORY[0x24BEE4AF8];
  }
  if (v27 < v13 || v30 < a2)
  {
    OUTLINED_FUNCTION_89_0();
    if (v31)
      OUTLINED_FUNCTION_31_6();
    if (v13 >= v54)
      v55 = v54;
    else
      v55 = v13;
    OUTLINED_FUNCTION_88_0();
    if (v31)
      v56 = OUTLINED_FUNCTION_58_3(v56);
    if (a2 >= v56)
      v57 = v56;
    else
      v57 = a2;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_5();
      sub_249752D50();
      v39 = v107;
    }
    v8 = *(_QWORD *)(v39 + 16);
    v9 = v8 + 1;
    v20 = v116;
    a8 = v117;
    v30 = v114;
    if (v8 >= *(_QWORD *)(v39 + 24) >> 1)
    {
      OUTLINED_FUNCTION_34_6();
      v30 = v114;
      v20 = v116;
      a8 = v117;
      v39 = v108;
    }
    *(_QWORD *)(v39 + 16) = v9;
    v58 = (double *)(v39 + 32 * v8);
    v58[4] = v55;
    v58[5] = v57;
    v58[6] = v13;
    v58[7] = a2;
  }
  if (v11 < v10 || v20 < v28)
  {
    OUTLINED_FUNCTION_89_0();
    if (v31)
      OUTLINED_FUNCTION_31_6();
    v61 = -v60;
    if (v11 < v61)
      v62 = v61;
    else
      v62 = v11;
    OUTLINED_FUNCTION_88_0();
    if (v31)
      v63 = OUTLINED_FUNCTION_58_3(v63);
    v69 = v115;
    v65 = -v63;
    if (v64 < v65)
      v66 = v65;
    else
      v66 = v64;
    OUTLINED_FUNCTION_37_4();
    v43 = v67;
    OUTLINED_FUNCTION_90_0();
    if (v40)
    {
      OUTLINED_FUNCTION_33_6();
      v43 = v109;
    }
    *(_QWORD *)(v43 + 16) = v9;
    v68 = (double *)(v43 + 32 * v8);
    a8 = v117;
    v68[4] = v11;
    v68[5] = v116;
    v68[6] = v62;
    v68[7] = v66;
    v30 = v114;
  }
  else
  {
    v43 = MEMORY[0x24BEE4AF8];
    v69 = v115;
  }
  if (v27 < v69 || v30 < a8)
  {
    OUTLINED_FUNCTION_89_0();
    if (v31)
      OUTLINED_FUNCTION_31_6();
    if (v69 >= v71)
      v72 = v71;
    else
      v72 = v69;
    OUTLINED_FUNCTION_88_0();
    if (v31)
      v73 = OUTLINED_FUNCTION_58_3(v73);
    if (v74 >= v73)
      v75 = v73;
    else
      v75 = v74;
    if ((OUTLINED_FUNCTION_195() & 1) == 0)
    {
      OUTLINED_FUNCTION_6_5();
      sub_249752D50();
      v43 = v110;
    }
    v76 = *(_QWORD *)(v43 + 16);
    v46 = v117;
    if (v76 >= *(_QWORD *)(v43 + 24) >> 1)
    {
      OUTLINED_FUNCTION_33_6();
      v46 = v117;
      v43 = v111;
    }
    *(_QWORD *)(v43 + 16) = v76 + 1;
    v77 = (double *)(v43 + 32 * v76);
    v77[4] = v72;
    v77[5] = v75;
    v77[6] = v69;
    v45 = v77 + 7;
LABEL_140:
    *v45 = v46;
  }
  v78 = *(_QWORD *)(v39 + 16);
  v79 = MEMORY[0x24BEE4AF8];
  if (v78)
  {
    v118 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_112();
    v80 = v39;
    v81 = 0;
    v82 = v118;
    v83 = v80 + 32;
    v84 = *(_QWORD *)(v118 + 16);
    v85 = 32 * v84;
    do
    {
      if (v24)
        v86 = *(_QWORD *)(v83 + v81 + 16);
      else
        v86 = *(_QWORD *)(v83 + v81);
      if (v24)
        v87 = *(_QWORD *)(v83 + v81 + 24);
      else
        v87 = *(_QWORD *)(v83 + v81 + 8);
      if (v24)
        v88 = *(_QWORD *)(v83 + v81);
      else
        v88 = *(_QWORD *)(v83 + v81 + 16);
      if (v24)
        v89 = *(_QWORD *)(v83 + v81 + 8);
      else
        v89 = *(_QWORD *)(v83 + v81 + 24);
      v90 = v84 + 1;
      if (v84 >= *(_QWORD *)(v118 + 24) >> 1)
        OUTLINED_FUNCTION_108_0();
      *(_QWORD *)(v118 + 16) = v90;
      v91 = (_QWORD *)(v118 + v85 + v81);
      v91[4] = v86;
      v91[5] = v87;
      v91[6] = v88;
      v91[7] = v89;
      v81 += 32;
      v84 = v90;
      --v78;
    }
    while (v78);
    OUTLINED_FUNCTION_25();
    v79 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v82 = MEMORY[0x24BEE4AF8];
  }
  v92 = *(_QWORD *)(v43 + 16);
  if (v92)
  {
    v119 = v79;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_112();
    v93 = 0;
    v94 = v43 + 32;
    v95 = *(_QWORD *)(v119 + 16);
    v96 = 32 * v95;
    do
    {
      if (v17)
        v97 = *(_QWORD *)(v94 + v93 + 16);
      else
        v97 = *(_QWORD *)(v94 + v93);
      if (v17)
        v98 = *(_QWORD *)(v94 + v93 + 24);
      else
        v98 = *(_QWORD *)(v94 + v93 + 8);
      if (v17)
        v99 = *(_QWORD *)(v94 + v93);
      else
        v99 = *(_QWORD *)(v94 + v93 + 16);
      if (v17)
        v100 = *(_QWORD *)(v94 + v93 + 8);
      else
        v100 = *(_QWORD *)(v94 + v93 + 24);
      v101 = v95 + 1;
      if (v95 >= *(_QWORD *)(v119 + 24) >> 1)
        OUTLINED_FUNCTION_108_0();
      *(_QWORD *)(v119 + 16) = v101;
      v102 = (_QWORD *)(v119 + v96 + v93);
      v102[4] = v97;
      v102[5] = v98;
      v102[6] = v99;
      v102[7] = v100;
      v93 += 32;
      v95 = v101;
      --v92;
    }
    while (v92);
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_151();
  }
  else
  {
    OUTLINED_FUNCTION_25();
    OUTLINED_FUNCTION_42();
  }
  return v82;
}

uint64_t sub_2497A403C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t result;
  unsigned int v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  char v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;

  v5 = *(_BYTE *)(a1 + 64);
  sub_2497A1DCC();
  sub_2497A43C4(&v76, v5);
  if (!*v6)
  {
    OUTLINED_FUNCTION_118((uint64_t)&v76);
    return OUTLINED_FUNCTION_189();
  }
  v7 = v6;
  OUTLINED_FUNCTION_21_2();
  sub_24977B868(v7, (uint64_t)&v66);
  OUTLINED_FUNCTION_118((uint64_t)&v76);
  OUTLINED_FUNCTION_189();
  result = sub_2497CD864((uint64_t)&v66, (uint64_t)&v78);
  if ((v79 & 1) == 0)
  {
    v9 = 0x1000302u >> (8 * v5);
    sub_2497A1DCC();
    sub_2497A43C4(&v61, v9);
    if (!*v10)
    {
      v37 = OUTLINED_FUNCTION_118((uint64_t)&v61);
      return OUTLINED_FUNCTION_187(v37, v38, v39, v40, v41, v42, v43, v44, v53, v55, v57, v60, v61, v62, v63, v64, v65, v66, v67,
               v68,
               v69,
               v70,
               v71,
               v72,
               v73,
               v74,
               v75,
               v76);
    }
    v11 = v10;
    OUTLINED_FUNCTION_15_4();
    sub_24977B868(v11, (uint64_t)&v71);
    v12 = OUTLINED_FUNCTION_118((uint64_t)&v61);
    OUTLINED_FUNCTION_187(v12, v13, v14, v15, v16, v17, v18, v19, v53, v55, v57, v60, v61, v62, v63, v64, v65, v66, v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73,
      v74,
      v75,
      v76);
    result = sub_2497CD864((uint64_t)&v71, (uint64_t)&v76);
    if ((v77 & 1) == 0)
    {
      v20 = OUTLINED_FUNCTION_28_0();
      v28 = sub_2497A39F0(v20, v21, v22, v23, v24, v25, v26, v27);
      v54 = v29;
      v56 = v28;
      OUTLINED_FUNCTION_182();
      swift_isUniquelyReferenced_nonNull_native();
      v30 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a2 + 32) = 0x8000000000000000;
      v31 = sub_2497F2638(v5);
      if (__OFADD__(*(_QWORD *)(v30 + 16), (v32 & 1) == 0))
      {
        __break(1u);
      }
      else
      {
        v33 = v31;
        v34 = v32;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2578819B0);
        if ((sub_249837270() & 1) != 0)
        {
          v35 = sub_2497F2638(v5);
          if ((v34 & 1) != (v36 & 1))
            goto LABEL_29;
          v33 = v35;
        }
        if ((v34 & 1) != 0)
        {
          v58 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v33);
          sub_24979F8C4(v56);
          if (v58)
          {
            *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v33) = v58;
          }
          else
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_2578819C0);
            OUTLINED_FUNCTION_194();
            OUTLINED_FUNCTION_153();
          }
          *(_QWORD *)(a2 + 32) = v30;
          swift_endAccess();
          v45 = (_QWORD *)(a3 + 32);
          OUTLINED_FUNCTION_182();
          swift_isUniquelyReferenced_nonNull_native();
          v46 = *(_QWORD *)(a3 + 32);
          *(_QWORD *)(a3 + 32) = 0x8000000000000000;
          v47 = sub_2497F2638(v9);
          v49 = v48;
          if (!__OFADD__(*(_QWORD *)(v46 + 16), (v48 & 1) == 0))
          {
            v50 = v47;
            if ((sub_249837270() & 1) == 0)
              goto LABEL_19;
            v51 = sub_2497F2638(v9);
            if ((v49 & 1) == (v52 & 1))
            {
              v50 = v51;
LABEL_19:
              if ((v49 & 1) != 0)
              {
                v59 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v50);
                sub_24979F8C4(v54);
                if (v59)
                {
                  *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v50) = v59;
                }
                else
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2578819C0);
                  OUTLINED_FUNCTION_194();
                  OUTLINED_FUNCTION_153();
                }
                *v45 = v46;
                return swift_endAccess();
              }
              goto LABEL_28;
            }
LABEL_29:
            result = sub_24983763C();
            __break(1u);
            return result;
          }
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
      }
      __break(1u);
      goto LABEL_27;
    }
  }
  return result;
}

void (*sub_2497A43C4(_QWORD *a1, unsigned __int8 a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2497C7AAC(v4, a2);
  return sub_2497A4410;
}

void sub_2497A4410(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  OUTLINED_FUNCTION_116(v1);
}

void sub_2497A443C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  BOOL v22;
  int64_t v23;
  char v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  unsigned int v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;
  int16x8_t v54;
  double v55;
  char v56;
  unint64_t v57;
  unint64_t v58;
  __int128 v59;
  char v60;
  __int16 v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned __int8 *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  char v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  int64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  __int16 v133;
  unsigned __int8 v134;
  __int16 v135;
  unsigned __int8 v136;
  uint64_t v137;
  unsigned __int8 v138;
  unsigned int v139;
  unint64_t v140;
  unsigned __int8 v141;
  uint64_t v142;
  unsigned __int8 v143;
  unsigned __int8 v144;
  int v145;
  unsigned __int8 v146;
  unsigned int v147;
  char v148;
  unsigned __int8 v149;
  char v150;
  char v151;
  unsigned __int8 v152;
  __int128 v153;
  unsigned __int8 v154;
  char v155;
  char v156;
  uint64_t v157;
  int64_t v158;
  unsigned int v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  uint64_t v167;
  char v168;
  char v169;
  char v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  char v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  char v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  __int128 v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  char v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  __int128 v202;
  uint64_t v203;
  uint64_t v204;
  int64_t v205;
  unint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  char v210;
  char v211;
  char v212;
  char v213;
  char v214;
  unsigned __int8 v215;
  unsigned __int8 v216;
  unsigned __int8 v217;
  unsigned __int8 v218;
  unsigned __int8 v219;
  unsigned __int8 v220;
  unsigned __int8 v221;
  unsigned __int8 v222;
  unsigned __int8 v223;
  unsigned __int8 v224;
  char v225;
  char v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  CGRect v230;
  CGRect v231;

  OUTLINED_FUNCTION_60_3();
  v228 = v1;
  v229 = v2;
  v124 = v0;
  v105 = v3;
  v5 = v4;
  v131 = v6;
  v227 = *MEMORY[0x24BDAC8D0];
  v104 = OUTLINED_FUNCTION_45();
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  OUTLINED_FUNCTION_126();
  v9 = v8 - v7;
  v207 = MEMORY[0x24BEE4B08];
  if (v5 < 0 || (v5 & 0x4000000000000000) != 0)
    goto LABEL_68;
  v10 = v5 & 0xFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_24();
LABEL_4:
  v208 = v10;
  sub_2497A18A4((uint64_t *)&v208);
  *(_QWORD *)&v112 = 0;
  v203 = sub_2497A5F48(v208);
  v204 = v14;
  v205 = v11;
  v206 = v12;
  if (v11 != v12 >> 1)
  {
    v15 = v12 >> 1;
    v125 = v131 + 56;
    v99 = (char *)&v202 + 8;
    v106 = 0x40EFFFE000000000;
    v101 = 0x800000024983FCD0;
    *(_QWORD *)&v13 = 136446466;
    v97 = v13;
    v96 = MEMORY[0x24BEE4AD8] + 8;
    v102 = v9;
    while (1)
    {
      if (v11 >= (uint64_t)(v12 >> 1))
        goto LABEL_65;
      if ((uint64_t)v15 <= v11)
      {
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        v93 = OUTLINED_FUNCTION_24();
        sub_249753B8C(v93);
        v10 = v94;
        OUTLINED_FUNCTION_1();
        goto LABEL_4;
      }
      if (v12 >> 1 < v15)
        goto LABEL_67;
      v16 = *(_QWORD *)(v204 + 8 * v11);
      v205 = v11 + 1;
      v206 = v12 & 1 | (2 * v15);
      v17 = *(_QWORD *)(v16 + 24) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
      OUTLINED_FUNCTION_16();
      v192 = *(_BYTE *)v17;
      v190 = *(_BYTE *)(v17 + 1);
      v188 = *(_BYTE *)(v17 + 2);
      v186 = *(_BYTE *)(v17 + 3);
      v184 = *(_BYTE *)(v17 + 4);
      v182 = *(_BYTE *)(v17 + 5);
      v180 = *(_BYTE *)(v17 + 6);
      v178 = *(_BYTE *)(v17 + 7);
      v176 = *(_BYTE *)(v17 + 8);
      v174 = *(_BYTE *)(v17 + 9);
      v172 = *(_BYTE *)(v17 + 10);
      v170 = *(_BYTE *)(v17 + 11);
      v169 = *(_BYTE *)(v17 + 12);
      v168 = *(_BYTE *)(v17 + 13);
      v166 = *(_BYTE *)(v17 + 14);
      v9 = v131;
      OUTLINED_FUNCTION_172();
      if (v18 < 64)
        v19 = ~(-1 << v18);
      else
        v19 = -1;
      v20 = v19 & *(_QWORD *)(v131 + 56);
      v165 = *(_BYTE *)(v17 + 15);
      v126 = (unint64_t)(v18 + 63) >> 6;
      v123 = *(_OWORD *)(v17 + 16);
      v113 = v16;
      OUTLINED_FUNCTION_30_1();
      OUTLINED_FUNCTION_74();
      v21 = 0;
      v122 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        if (v20)
        {
          v157 = (v20 - 1) & v20;
          v158 = v21;
          goto LABEL_32;
        }
        v22 = __OFADD__(v21, 1);
        v23 = v21 + 1;
        if (v22)
        {
          __break(1u);
          goto LABEL_64;
        }
        if (v23 >= v126)
          goto LABEL_46;
        if (!*(_QWORD *)(v125 + 8 * v23))
          break;
LABEL_31:
        OUTLINED_FUNCTION_26_3();
        v157 = v30;
        v158 = v23;
LABEL_32:
        OUTLINED_FUNCTION_132();
        v32 = *v31;
        v33 = v31[1];
        v34 = v31[2];
        v35 = v31[3];
        v36 = v31[4];
        v37 = v31[5];
        v38 = v31[6];
        v39 = v31[7];
        v40 = v31[8];
        v41 = v31[9];
        v42 = v31[10];
        v43 = v31[11];
        v44 = v31[12];
        v45 = *(_QWORD *)(v31 + 13);
        v162 = v31[21];
        v164 = v31[22];
        v163 = v31[23];
        v194 = *(_OWORD *)(v31 + 24);
        v147 = v31[40];
        v145 = v31[41];
        HIDWORD(v142) = v31[42];
        LODWORD(v142) = v31[43];
        v139 = v31[44];
        v153 = *(_OWORD *)(v31 + 45);
        v46 = v31[61];
        v47 = v31[62];
        v48 = v31[63];
        v137 = v31[64];
        v133 = *((_WORD *)v31 + 33);
        v135 = *((_WORD *)v31 + 34);
        v49 = *((_QWORD *)v31 + 9);
        LOBYTE(v208) = *v31;
        BYTE1(v208) = v33;
        v198 = v34;
        BYTE2(v208) = v34;
        v196 = v35;
        BYTE3(v208) = v35;
        v161 = v36;
        BYTE4(v208) = v36;
        v160 = v37;
        BYTE5(v208) = v37;
        v159 = v38;
        BYTE6(v208) = v38;
        v150 = v39;
        HIBYTE(v208) = v39;
        LOBYTE(v209) = v40;
        BYTE1(v209) = v41;
        BYTE2(v209) = v42;
        BYTE3(v209) = v43;
        BYTE4(v209) = v44;
        *(_WORD *)((char *)&v209 + 5) = v45;
        v200 = v45;
        HIBYTE(v209) = BYTE2(v45);
        if (OUTLINED_FUNCTION_4_17())
          __asm { BR              X8 }
        HIDWORD(v129) = v48;
        v130 = __PAIR64__(v46, v47);
        v50 = v43;
        LODWORD(v129) = v145;
        v128 = v142;
        v127 = __PAIR64__(v147, v139);
        v132 = v194;
        v51 = v150;
        v151 = v40;
        v148 = v32;
        *(_WORD *)((char *)&v209 + 5) = v200;
        HIBYTE(v209) = BYTE2(v200);
        LOBYTE(v208) = v32;
        BYTE1(v208) = v33;
        BYTE2(v208) = v198;
        BYTE3(v208) = v196;
        BYTE4(v208) = v161;
        BYTE5(v208) = v160;
        BYTE6(v208) = v159;
        HIBYTE(v208) = v51;
        LOBYTE(v209) = v40;
        BYTE1(v209) = v41;
        BYTE2(v209) = v42;
        BYTE3(v209) = v50;
        BYTE4(v209) = v44;
        LOBYTE(v202) = v192;
        BYTE1(v202) = v190;
        BYTE2(v202) = v188;
        BYTE3(v202) = v186;
        BYTE4(v202) = v184;
        BYTE5(v202) = v182;
        BYTE6(v202) = v180;
        BYTE7(v202) = v178;
        BYTE8(v202) = v176;
        BYTE9(v202) = v174;
        BYTE10(v202) = v172;
        BYTE11(v202) = v170;
        BYTE12(v202) = v169;
        BYTE13(v202) = v168;
        BYTE14(v202) = v166;
        HIBYTE(v202) = v165;
        v52 = v42;
        v21 = v158;
        v53 = v51;
        v9 = v159;
        v20 = v157;
        if (!memcmp(&v208, &v202, 0x10uLL))
        {
          *(_WORD *)((char *)&v209 + 5) = v200;
          HIBYTE(v209) = BYTE2(v200);
          LOBYTE(v208) = v148;
          BYTE1(v208) = v33;
          BYTE2(v208) = v198;
          BYTE3(v208) = v196;
          BYTE4(v208) = v161;
          BYTE5(v208) = v160;
          BYTE6(v208) = v159;
          HIBYTE(v208) = v53;
          LOBYTE(v209) = v151;
          BYTE1(v209) = v41;
          BYTE2(v209) = v52;
          BYTE3(v209) = v50;
          BYTE4(v209) = v44;
          if (!OUTLINED_FUNCTION_4_17())
          {
            v55 = OUTLINED_FUNCTION_147(BYTE6(v200), v54);
            BYTE4(v208) = v56;
            LODWORD(v208) = LODWORD(v55);
            BYTE5(v208) = v162;
            BYTE6(v208) = v164;
            HIBYTE(v208) = v163;
            v209 = v194;
            v202 = v123;
            if (!OUTLINED_FUNCTION_26_5(&v208, &v202))
            {
              v155 = v50;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                OUTLINED_FUNCTION_29_3();
                v122 = v67;
              }
              v9 = *(_QWORD *)(v122 + 16);
              v57 = *(_QWORD *)(v122 + 24);
              v58 = v9 + 1;
              v59 = v153;
              v60 = v139;
              v61 = v135;
              v62 = v200;
              v63 = v46;
              v64 = v130;
              v65 = BYTE4(v129);
              if (v9 >= v57 >> 1)
              {
                OUTLINED_FUNCTION_80(v57);
                v140 = v68;
                sub_249752EF4();
                v58 = v140;
                v65 = BYTE4(v129);
                v64 = v130;
                v63 = v46;
                v62 = v200;
                v61 = v135;
                v59 = v153;
                v122 = v69;
              }
              *(_QWORD *)(v122 + 16) = v58;
              v66 = v122 + 80 * v9;
              *(_BYTE *)(v66 + 32) = v148;
              *(_BYTE *)(v66 + 33) = v33;
              *(_BYTE *)(v66 + 34) = v198;
              *(_BYTE *)(v66 + 35) = v196;
              *(_BYTE *)(v66 + 36) = v161;
              *(_BYTE *)(v66 + 37) = v160;
              *(_BYTE *)(v66 + 38) = v159;
              *(_BYTE *)(v66 + 39) = v53;
              *(_BYTE *)(v66 + 40) = v151;
              *(_BYTE *)(v66 + 41) = v41;
              *(_BYTE *)(v66 + 42) = v52;
              *(_BYTE *)(v66 + 43) = v155;
              *(_BYTE *)(v66 + 44) = v44;
              *(_QWORD *)(v66 + 45) = v62;
              *(_BYTE *)(v66 + 53) = v162;
              *(_BYTE *)(v66 + 54) = v164;
              *(_BYTE *)(v66 + 55) = v163;
              *(_OWORD *)(v66 + 56) = v194;
              *(_BYTE *)(v66 + 72) = BYTE4(v127);
              *(_BYTE *)(v66 + 73) = v145;
              *(_BYTE *)(v66 + 74) = BYTE4(v142);
              *(_BYTE *)(v66 + 75) = v142;
              *(_BYTE *)(v66 + 76) = v60;
              *(_OWORD *)(v66 + 77) = v59;
              *(_BYTE *)(v66 + 93) = v63;
              *(_BYTE *)(v66 + 94) = v64;
              *(_BYTE *)(v66 + 95) = v65;
              *(_BYTE *)(v66 + 96) = v137;
              *(_WORD *)(v66 + 98) = v133;
              *(_WORD *)(v66 + 100) = v61;
              *(_QWORD *)(v66 + 104) = v49;
            }
          }
        }
      }
      OUTLINED_FUNCTION_95_0();
      if (v24 == v22)
        goto LABEL_46;
      OUTLINED_FUNCTION_94_0();
      if (v26)
        goto LABEL_30;
      OUTLINED_FUNCTION_95_0();
      if (v24 == v22)
        goto LABEL_46;
      OUTLINED_FUNCTION_94_0();
      if (v27)
        goto LABEL_30;
      OUTLINED_FUNCTION_95_0();
      if (v24 == v22)
        goto LABEL_46;
      OUTLINED_FUNCTION_94_0();
      if (v28)
        goto LABEL_30;
      OUTLINED_FUNCTION_95_0();
      if (v24 != v22)
        break;
LABEL_46:
      OUTLINED_FUNCTION_125();
      v208 = v122;
      swift_bridgeObjectRetain();
      sub_2497ECCF8((uint64_t *)&v208);
      if ((_QWORD)v112)
      {
        swift_release();
        __break(1u);
        JUMPOUT(0x2497A5F28);
      }
      swift_bridgeObjectRelease();
      v75 = *(_QWORD *)(v208 + 16);
      v110 = v208;
      if (v75)
      {
        v76 = (unsigned __int8 *)(v208 + 50);
        while (1)
        {
          v77 = v76[14];
          v78 = v76[17];
          v9 = v76[21];
          v79 = v76[29];
          v80 = *(_QWORD *)(v124 + 40);
          v81 = v77 | ((unint64_t)v76[15] << 8) | ((unint64_t)v76[16] << 16) | (v78 << 24) | ((unint64_t)v76[18] << 32) | ((unint64_t)v76[19] << 40) | ((unint64_t)v76[20] << 48) | (v9 << 56);
          v82 = v76[22] | ((unint64_t)v76[23] << 8) | ((unint64_t)v76[24] << 16) | ((unint64_t)v76[25] << 24) | ((unint64_t)v76[26] << 32) | ((unint64_t)v76[27] << 40) | ((unint64_t)v76[28] << 48) | (v79 << 56);
          if (!*(_QWORD *)(v80 + 16))
            goto LABEL_56;
          HIDWORD(v117) = *(v76 - 18);
          LODWORD(v118) = *(v76 - 17);
          HIDWORD(v118) = *(v76 - 16);
          LODWORD(v119) = *(v76 - 15);
          HIDWORD(v119) = *(v76 - 14);
          LODWORD(v120) = *(v76 - 13);
          HIDWORD(v120) = *(v76 - 12);
          LODWORD(v121) = *(v76 - 11);
          HIDWORD(v121) = *(v76 - 10);
          LODWORD(v122) = *(v76 - 9);
          LODWORD(v123) = *(v76 - 8);
          LODWORD(v126) = *(v76 - 7);
          LODWORD(v127) = *(v76 - 6);
          HIDWORD(v127) = *(v76 - 5);
          LODWORD(v128) = *(v76 - 4);
          HIDWORD(v128) = *(v76 - 3);
          LODWORD(v129) = *(v76 - 2);
          HIDWORD(v129) = *(v76 - 1);
          LODWORD(v130) = *v76;
          HIDWORD(v130) = v76[1];
          LODWORD(v132) = v76[2];
          v134 = v76[3];
          v136 = v76[4];
          v138 = v76[5];
          v141 = v76[6];
          v143 = v76[7];
          v144 = v76[8];
          v146 = v76[9];
          v149 = v76[10];
          v152 = v76[11];
          v154 = v76[12];
          v156 = v76[13];
          v171 = v76[30];
          v173 = v76[31];
          v175 = v76[32];
          v177 = v76[33];
          v179 = v76[34];
          v181 = v76[35];
          v183 = v76[36];
          v185 = v76[37];
          v187 = v76[38];
          v189 = v76[39];
          v191 = v76[40];
          v193 = v76[41];
          v195 = v76[42];
          v197 = v76[43];
          v199 = v76[44];
          v201 = v76[45];
          v167 = v76[46];
          OUTLINED_FUNCTION_24();
          OUTLINED_FUNCTION_170();
          v83 = sub_2497F1F1C();
          if ((v84 & 1) == 0)
            break;
          v115 = v77;
          v85 = *(_QWORD *)(*(_QWORD *)(v80 + 56) + 8 * v83);
          OUTLINED_FUNCTION_91_0();
          OUTLINED_FUNCTION_1();
          if (!*(_QWORD *)(*(_QWORD *)(v124 + 48) + 16))
            goto LABEL_59;
          v114 = v78;
          v116 = v85;
          OUTLINED_FUNCTION_24();
          v86 = OUTLINED_FUNCTION_170();
          *((_QWORD *)&v112 + 1) = v187 | (v189 << 8) | (v191 << 16) | (v193 << 24) | (v195 << 32) | (v197 << 40) | (v199 << 48) | (v201 << 56);
          sub_2497F2068(v86, v87, v171 | (v173 << 8) | (v175 << 16) | (v177 << 24) | (v179 << 32) | (v181 << 40) | (v183 << 48) | (v185 << 56), *((uint64_t *)&v112 + 1));
          if ((v88 & 1) != 0)
          {
            v111 = v171 | (v173 << 8) | (v175 << 16) | (v177 << 24) | (v179 << 32) | (v181 << 40) | (v183 << 48) | (v185 << 56);
            v89 = v9;
            v9 = v79;
            OUTLINED_FUNCTION_91_0();
            OUTLINED_FUNCTION_1();
            if ((*(_BYTE *)(v85 + 48) & 1) != 0)
            {
              sub_2497A1E9C();
              sub_2497A1E9C();
              v230.origin.x = OUTLINED_FUNCTION_41_4();
              CGRectGetMinX(v230);
              v231.origin.x = OUTLINED_FUNCTION_41_4();
              CGRectGetMinY(v231);
              __asm { BR              X8 }
            }
            LOBYTE(v208) = BYTE4(v117);
            BYTE1(v208) = v118;
            BYTE2(v208) = BYTE4(v118);
            BYTE3(v208) = v119;
            BYTE4(v208) = BYTE4(v119);
            BYTE5(v208) = v120;
            BYTE6(v208) = BYTE4(v120);
            HIBYTE(v208) = v121;
            LOBYTE(v209) = BYTE4(v121);
            BYTE1(v209) = v122;
            BYTE2(v209) = v123;
            BYTE3(v209) = v126;
            BYTE4(v209) = v127;
            BYTE5(v209) = BYTE4(v127);
            BYTE6(v209) = v128;
            HIBYTE(v209) = BYTE4(v128);
            v210 = v129;
            v211 = BYTE4(v129);
            v212 = v130;
            v213 = BYTE4(v130);
            v214 = v132;
            v215 = v134;
            v216 = v136;
            v217 = v138;
            v218 = v141;
            v219 = v143;
            v220 = v144;
            v221 = v146;
            v222 = v149;
            v223 = v152;
            v224 = v154;
            OUTLINED_FUNCTION_19_9(v156);
            v225 = v89;
            OUTLINED_FUNCTION_17_7();
            v226 = v79;
            v90 = OUTLINED_FUNCTION_5_12();
            sub_2497A403C(v90, v91, v92);
            swift_release();
LABEL_59:
            swift_release();
            goto LABEL_60;
          }
          OUTLINED_FUNCTION_125();
          OUTLINED_FUNCTION_1();
LABEL_60:
          v76 += 80;
          if (!--v75)
            goto LABEL_61;
        }
        OUTLINED_FUNCTION_1();
LABEL_56:
        sub_2497C219C((uint64_t)&v208, v81, v82, v70, v71, v72, v73, v74, v95, v96, v97, *((uint64_t *)&v97 + 1), v98, (uint64_t)v99, v100, v101, v102, v103, v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          SWORD1(v110),
          SBYTE4(v110),
          SBYTE5(v110),
          SBYTE6(v110),
          SHIBYTE(v110),
          v111,
          SBYTE1(v111),
          SBYTE2(v111),
          SBYTE3(v111),
          SBYTE4(v111),
          SBYTE5(v111),
          SBYTE6(v111),
          SHIBYTE(v111),
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          v122,
          v123,
          *((uint64_t *)&v123 + 1),
          v124,
          v125,
          v126,
          v127,
          v128,
          v129,
          v130,
          v131,
          v132,
          *((uint64_t *)&v132 + 1));
        goto LABEL_60;
      }
LABEL_61:
      OUTLINED_FUNCTION_125();
      OUTLINED_FUNCTION_125();
      v11 = v205;
      v12 = v206;
      v15 = v206 >> 1;
      if (v205 == v206 >> 1)
        goto LABEL_62;
    }
    OUTLINED_FUNCTION_94_0();
    if (!v29)
    {
      while (1)
      {
        v23 = v25 + 1;
        if (__OFADD__(v25, 1))
          break;
        if (v23 >= v126)
          goto LABEL_46;
        ++v25;
        if (*(_QWORD *)(v125 + 8 * v23))
          goto LABEL_31;
      }
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
LABEL_30:
    v23 = v25;
    goto LABEL_31;
  }
LABEL_62:
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_142();
}

uint64_t sub_2497A5F48(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  if ((a1 & 0x8000000000000000) == 0 && (a1 & 0x4000000000000000) == 0)
    return a1 & 0xFFFFFFFFFFFFFF8;
  sub_249753B8C(a1);
  v1 = v3;
  swift_bridgeObjectRelease();
  return v1;
}

void sub_2497A5FA0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;

  v3 = *(_QWORD *)(a1 + 16);
  sub_2497C7D1C(v3);
  v5 = v1[2];
  v4 = v1[3];
  v6 = (v4 >> 1) - v5;
  if (__OFSUB__(v4 >> 1, v5))
  {
    __break(1u);
    goto LABEL_20;
  }
  v7 = v1[1] + 16 * v5 + 16 * v6;
  if ((v4 & 1) == 0)
    goto LABEL_7;
  sub_249837618();
  swift_unknownObjectRetain();
  v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
  }
  v9 = *(_QWORD *)(v8 + 16);
  if (v7 != v8 + 16 * v9 + 32)
  {
    swift_release();
LABEL_7:
    v10 = v6;
    goto LABEL_9;
  }
  v11 = *(_QWORD *)(v8 + 24);
  swift_release();
  v12 = (v11 >> 1) - v9;
  v13 = __OFADD__(v6, v12);
  v10 = v6 + v12;
  if (v13)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_9:
  v14 = v10 - v6;
  if (__OFSUB__(v10, v6))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    if (v14 >= v3)
    {
      sub_24974D17C(a1 + 32, v3, v7);
      if (!v3)
        goto LABEL_16;
      if (!__OFADD__(v6, v3))
      {
        sub_2497C81E8(v6 + v3);
        goto LABEL_16;
      }
LABEL_24:
      __break(1u);
      return;
    }
    goto LABEL_22;
  }
  if (v3)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_16:
  if (v3 == v14)
    sub_2497C8290(a1, v15);
  else
    swift_bridgeObjectRelease();
}

uint64_t sub_2497A60EC(unint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_249837324();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = sub_2497C7E10(v3);
  v6 = v1[2];
  v5 = v1[3];
  v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_21;
  }
  v8 = v1[1] + 8 * v6 + 8 * v7;
  if ((v5 & 1) == 0)
    goto LABEL_9;
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 != v9 + 8 * v10 + 32)
  {
    result = swift_release();
LABEL_9:
    v11 = v7;
    goto LABEL_11;
  }
  v12 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v13 = (v12 >> 1) - v10;
  v14 = __OFADD__(v7, v13);
  v11 = v7 + v13;
  if (v14)
  {
LABEL_24:
    __break(1u);
    return result;
  }
LABEL_11:
  v15 = v11 - v7;
  if (__OFSUB__(v11, v7))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  result = sub_249757A9C(v8, v11 - v7, a1);
  if (v17 < v3)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v18 = result;
  v19 = v16;
  v20 = v17;
  if (v17 <= 0)
    goto LABEL_16;
  result = v7 + v17;
  if (__OFADD__(v7, v17))
    goto LABEL_23;
  sub_2497C81E8(result);
LABEL_16:
  if (v20 == v15)
    return sub_2497C84B0(v18, v19);
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_2497A626C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  result = sub_2497C7F04(v3);
  v6 = v1[2];
  v5 = v1[3];
  v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_20;
  }
  v8 = v1[1] + 40 * v6 + 40 * v7;
  if ((v5 & 1) == 0)
    goto LABEL_7;
  sub_249837618();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 != v9 + 40 * v10 + 32)
  {
    result = swift_release();
LABEL_7:
    v11 = v7;
    goto LABEL_9;
  }
  v12 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v13 = (v12 >> 1) - v10;
  v14 = __OFADD__(v7, v13);
  v11 = v7 + v13;
  if (v14)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_9:
  v15 = v11 - v7;
  if (__OFSUB__(v11, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    if (v15 >= v3)
    {
      sub_24974DC60(a1 + 32, v3);
      if (!v3)
        goto LABEL_16;
      result = v7 + v3;
      if (!__OFADD__(v7, v3))
      {
        sub_2497C81E8(result);
        goto LABEL_16;
      }
LABEL_24:
      __break(1u);
      return result;
    }
    goto LABEL_22;
  }
  if (v3)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_16:
  if (v3 == v15)
    return sub_2497C87E8(a1, v16);
  else
    return swift_bridgeObjectRelease();
}

void sub_2497A63C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  unint64_t v15;

  v3 = *(_QWORD *)(a1 + 16);
  sub_2497C80F0(v3);
  v5 = v1[2];
  v4 = v1[3];
  v6 = (v4 >> 1) - v5;
  if (__OFSUB__(v4 >> 1, v5))
  {
    __break(1u);
    goto LABEL_20;
  }
  v7 = v1[1] + 80 * v5 + 80 * v6;
  if ((v4 & 1) == 0)
    goto LABEL_7;
  sub_249837618();
  swift_unknownObjectRetain();
  v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
  }
  v9 = *(_QWORD *)(v8 + 16);
  if (v7 != v8 + 80 * v9 + 32)
  {
    swift_release();
LABEL_7:
    v10 = v6;
    goto LABEL_9;
  }
  v11 = *(_QWORD *)(v8 + 24);
  swift_release();
  v12 = (v11 >> 1) - v9;
  v13 = __OFADD__(v6, v12);
  v10 = v6 + v12;
  if (v13)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_9:
  v14 = v10 - v6;
  if (__OFSUB__(v10, v6))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    if (v14 >= v3)
    {
      sub_24974D218(a1 + 32, v3);
      if (!v3)
        goto LABEL_16;
      if (!__OFADD__(v6, v3))
      {
        sub_2497C81E8(v6 + v3);
        goto LABEL_16;
      }
LABEL_24:
      __break(1u);
      return;
    }
    goto LABEL_22;
  }
  if (v3)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_16:
  if (v3 == v14)
    sub_2497C8F20(a1, v15);
  else
    swift_bridgeObjectRelease();
}

void sub_2497A6514(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a1 + 16);
  sub_2497C7FFC(v2);
  v4 = v1[2];
  v3 = v1[3];
  v5 = (v3 >> 1) - v4;
  if (__OFSUB__(v3 >> 1, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v6 = v1[1] + 16 * v4 + 16 * v5;
  if ((v3 & 1) == 0)
    goto LABEL_7;
  sub_249837618();
  swift_unknownObjectRetain();
  v7 = swift_dynamicCastClass();
  if (!v7)
  {
    swift_unknownObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
  }
  v8 = *(_QWORD *)(v7 + 16);
  if (v6 != v7 + 16 * v8 + 32)
  {
    swift_release();
LABEL_7:
    v9 = v5;
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v7 + 24);
  swift_release();
  v11 = (v10 >> 1) - v8;
  v12 = __OFADD__(v5, v11);
  v9 = v5 + v11;
  if (v12)
  {
LABEL_21:
    __break(1u);
    return;
  }
LABEL_9:
  v13 = v9 - v5;
  if (__OFSUB__(v9, v5))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_249757AC8();
  if (v14 < v2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15 = v14;
  if (!v14)
    goto LABEL_14;
  v16 = v5 + v14;
  if (__OFADD__(v5, v15))
    goto LABEL_20;
  sub_2497C81E8(v16);
LABEL_14:
  if (v15 == v13)
  {
    v21 = v17;
    v22 = v18;
    v23 = v19;
    v24 = v20;
    sub_2497C8B98(&v21);
  }
  else
  {
    sub_249757AC0();
  }
}

uint64_t sub_2497A6678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20[4];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v0 = MEMORY[0x24BEE4AF8];
  v24 = MEMORY[0x24BEE4AF8];
  v22 = MEMORY[0x24BEE4AF8];
  v23 = MEMORY[0x24BEE4AF8];
  v21 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_61_2();
  sub_249753CA0();
  v2 = v1;
  OUTLINED_FUNCTION_1();
  v20[0] = v2;
  sub_2497A191C(v20, (uint64_t (*)(uint64_t))sub_24975E0F0, (void (*)(void))sub_2497B407C);
  OUTLINED_FUNCTION_1();
  v3 = *(_QWORD *)(v20[0] + 16);
  if (v3)
  {
    v4 = 64;
    do
    {
      OUTLINED_FUNCTION_16();
      OUTLINED_FUNCTION_192();
      if (v5)
      {
        sub_2497F2638(1u);
        if ((v6 & 1) != 0)
          OUTLINED_FUNCTION_38_3();
      }
      OUTLINED_FUNCTION_165();
      OUTLINED_FUNCTION_71_3();
      OUTLINED_FUNCTION_36_5();
      OUTLINED_FUNCTION_134();
      OUTLINED_FUNCTION_192();
      if (v7)
      {
        sub_2497F2638(3u);
        if ((v8 & 1) != 0)
          OUTLINED_FUNCTION_38_3();
      }
      OUTLINED_FUNCTION_91_0();
      OUTLINED_FUNCTION_71_3();
      OUTLINED_FUNCTION_36_5();
      OUTLINED_FUNCTION_134();
      OUTLINED_FUNCTION_192();
      if (v9)
      {
        sub_2497F2638(0);
        if ((v10 & 1) != 0)
          OUTLINED_FUNCTION_38_3();
      }
      OUTLINED_FUNCTION_91_0();
      OUTLINED_FUNCTION_71_3();
      OUTLINED_FUNCTION_36_5();
      OUTLINED_FUNCTION_134();
      OUTLINED_FUNCTION_192();
      if (v11)
      {
        sub_2497F2638(2u);
        if ((v12 & 1) != 0)
          OUTLINED_FUNCTION_38_3();
      }
      OUTLINED_FUNCTION_91_0();
      OUTLINED_FUNCTION_71_3();
      OUTLINED_FUNCTION_36_5();
      OUTLINED_FUNCTION_134();
      swift_release();
      v4 += 40;
      --v3;
    }
    while (v3);
    OUTLINED_FUNCTION_41_1();
    v13 = v24;
    v15 = v22;
    v14 = v23;
    v16 = v21;
  }
  else
  {
    OUTLINED_FUNCTION_41_1();
    v16 = MEMORY[0x24BEE4AF8];
    v15 = MEMORY[0x24BEE4AF8];
    v14 = MEMORY[0x24BEE4AF8];
    v13 = MEMORY[0x24BEE4AF8];
  }
  v17 = sub_2497A68F8(1, v13, v14);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_1();
  sub_24979FA78(v17);
  v18 = sub_2497A68F8(0, v15, v16);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_42();
  sub_24979FA78(v18);
  return v0;
}

uint64_t sub_2497A68F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v9;
  uint64_t v10;
  double *v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  BOOL v26;
  double v27;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  unsigned __int8 *v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  double v73;
  double v74;
  double v75;
  double v76;
  uint64_t v77;
  __int128 v78;
  double v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int64_t v102;
  unint64_t v103;
  CGRect v104;
  CGRect v105;

  v3 = *(_QWORD *)(a2 + 16);
  v100 = a2;
  v101 = a2 + 32;
  v4 = a3 + 32;
  v62 = *(_QWORD *)(a3 + 16);
  v5 = (2 * v62) | 1;
  v96 = a3;
  v97 = a3 + 32;
  v98 = 0;
  v99 = v5;
  if (!v3)
  {
    swift_bridgeObjectRetain();
    v51 = MEMORY[0x24BEE4AF8];
    goto LABEL_54;
  }
  v6 = (2 * v3) | 1;
  v86 = a1;
  swift_bridgeObjectRetain();
  v54 = a3;
  swift_bridgeObjectRetain();
  v9 = 0;
  v65 = 0;
  v10 = MEMORY[0x24BEE4AF8];
  v61 = xmmword_24983B670;
  v60 = xmmword_24983AE40;
  v59 = xmmword_24983AE50;
  v58 = xmmword_24983AE60;
  v53[1] = a1;
  v57 = xmmword_24983B680;
  v56 = xmmword_24983B690;
  v53[0] = 0xF0E0D0C0B020100;
  v55 = a1;
  v87 = a1;
  v85 = 0x40EFFFE000000000;
  while (1)
  {
    if (v9 >= (uint64_t)(v6 >> 1))
      goto LABEL_61;
    if ((uint64_t)v3 <= v9)
    {
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      __break(1u);
      JUMPOUT(0x2497A7E34);
    }
    if (v6 >> 1 < v3)
      goto LABEL_63;
    v77 = v10;
    v11 = (double *)(v101 + 40 * v9);
    v12 = *v11;
    v75 = v11[1];
    v76 = v12;
    v13 = v11[2];
    v73 = v11[3];
    v74 = v13;
    v14 = *((_QWORD *)v11 + 4);
    v102 = v9 + 1;
    v103 = v6 & 1 | (2 * v3);
    v95 = MEMORY[0x24BEE4B08];
    v92 = v14;
    if (v62)
      break;
    swift_retain();
    v33 = 0;
    v90 = v54;
LABEL_32:
    v89 = v53;
    if (v33 != v5 >> 1)
    {
      v35 = v5 >> 1;
      v36 = v95;
      v37 = v95 + 56;
      swift_unknownObjectRetain();
      v38 = 0;
      v34 = MEMORY[0x24BEE4AF8];
      while (1)
      {
        if (v33 >= v35)
        {
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
          goto LABEL_62;
        }
        if (__OFADD__(v38, 1))
          goto LABEL_60;
        v39 = (__int128 *)(v4 + 40 * v33);
        v93 = *v39;
        v91 = v39[1];
        v40 = *((_QWORD *)v39 + 4);
        if (!*(_QWORD *)(v36 + 16))
          goto LABEL_46;
        v41 = sub_249837684();
        v42 = -1 << *(_BYTE *)(v36 + 32);
        v43 = v41 & ~v42;
        if (((*(_QWORD *)(v37 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
          goto LABEL_46;
        v44 = *(_QWORD *)(v36 + 48);
        if (*(_QWORD *)(v44 + 8 * v43) != v38)
          break;
LABEL_51:
        ++v33;
        ++v38;
        if (v33 == v35)
          goto LABEL_34;
      }
      v45 = ~v42;
      while (1)
      {
        v43 = (v43 + 1) & v45;
        if (((*(_QWORD *)(v37 + ((v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
          break;
        if (*(_QWORD *)(v44 + 8 * v43) == v38)
          goto LABEL_51;
      }
LABEL_46:
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24975312C();
        v34 = v49;
      }
      v46 = *(_QWORD *)(v34 + 16);
      if (v46 >= *(_QWORD *)(v34 + 24) >> 1)
      {
        sub_24975312C();
        v34 = v50;
      }
      *(_QWORD *)(v34 + 16) = v46 + 1;
      v47 = v34 + 40 * v46;
      v48 = v91;
      *(_OWORD *)(v47 + 32) = v93;
      *(_OWORD *)(v47 + 48) = v48;
      *(_QWORD *)(v47 + 64) = v40;
      goto LABEL_51;
    }
    swift_unknownObjectRetain();
    v34 = MEMORY[0x24BEE4AF8];
LABEL_34:
    swift_release();
    swift_unknownObjectRelease();
    v4 = v34 + 32;
    v62 = *(_QWORD *)(v34 + 16);
    v5 = (2 * v62) | 1;
    swift_unknownObjectRelease();
    v54 = v34;
    v96 = v34;
    v97 = v34 + 32;
    v98 = 0;
    v99 = v5;
    swift_bridgeObjectRelease();
    v9 = v102;
    v6 = v103;
    v3 = v103 >> 1;
    v10 = v77;
    if (v102 == v103 >> 1)
      goto LABEL_58;
  }
  v66 = v54 + 32;
  v67 = v14 + 16;
  swift_retain();
  swift_unknownObjectRetain();
  v15 = 0;
  v16 = v62;
  while (1)
  {
    v17 = (double *)(v66 + 40 * v15);
    *(double *)&v81 = *v17;
    v18 = *((_QWORD *)v17 + 1);
    v79 = v17[2];
    *(_QWORD *)&v80 = v18;
    *(double *)&v78 = v17[3];
    v19 = *((_QWORD *)v17 + 4);
    Strong = swift_weakLoadStrong();
    *(_QWORD *)&v93 = v19;
    v21 = swift_weakLoadStrong();
    v22 = v21;
    if (Strong)
      break;
    if (v21)
      goto LABEL_13;
LABEL_29:
    if (++v15 == v16)
    {
      swift_unknownObjectRelease();
      v4 = v97;
      v90 = v96;
      v33 = v98;
      v5 = v99;
      goto LABEL_32;
    }
  }
  if (v21)
  {
    swift_retain();
    swift_release();
    swift_release();
    if (Strong == v22)
      goto LABEL_27;
  }
  else
  {
LABEL_13:
    swift_retain();
    swift_release();
    swift_release();
  }
  if ((sub_249749554(*(double *)&v81, *(double *)&v80, v79, *(double *)&v78, v76, v75, v74, v73) & 1) == 0)
  {
LABEL_27:
    swift_release();
    goto LABEL_29;
  }
  sub_2497C2494(&v94, v15);
  if (qword_25787F6F8 != -1)
    swift_once();
  v23 = qword_257890830;
  v89 = *(_QWORD **)(qword_257890830 + 16);
  v64 = v15;
  if (!v89)
  {
    v83 = 0;
    v32 = (unsigned __int8 *)(*(_QWORD *)(v14 + 24)
                            + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
    swift_beginAccess();
    v63 = *v32;
    v89 = (_QWORD *)v32[3];
    v90 = v32[4];
    v68 = v32[22];
    v69 = v32[23];
    v70 = v32[24];
    v71 = v32[29];
    v72 = v32[30];
    LODWORD(v84) = v32[31];
    v91 = *(_OWORD *)(v32 + 6);
    swift_beginAccess();
    goto LABEL_64;
  }
  swift_bridgeObjectRetain();
  LODWORD(v82) = 0;
  v83 = 0;
  v88 = v23;
  v24 = *(double *)(v23 + 32);
  v25 = v24 * 65535.0;
  if (v24 > 1.0)
    v25 = 65535.0;
  v26 = v24 > 0.0;
  v27 = 0.0;
  if (v26)
    v27 = v25;
  if ((~*(_QWORD *)&v27 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_56;
  }
  if (v27 <= -1.0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (v27 < 65536.0)
  {
    v104.origin.x = sub_2497A1E9C();
    x = v104.origin.x;
    y = v104.origin.y;
    width = v104.size.width;
    height = v104.size.height;
    CGRectGetMinX(v104);
    v105.origin.x = x;
    v105.origin.y = y;
    v105.size.width = width;
    v105.size.height = height;
    CGRectGetMinY(v105);
    __asm { BR              X8 }
  }
LABEL_57:
  __break(1u);
LABEL_58:
  v51 = v10;
  swift_bridgeObjectRelease();
LABEL_54:
  swift_unknownObjectRelease();
  return v51;
}

void sub_2497A7E84()
{
  uint64_t v0;
  uint8x8_t v1;
  uint64_t *v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  __int32 v20;
  unsigned __int32 v21;
  int v22;
  uint64_t v23;
  int8x16_t v24;
  double v25;
  int8x16_t v26;
  unsigned __int32 v27;
  uint64_t v28;
  uint64_t v29;
  const void *v30;
  const void *v31;
  char v32;
  int8x16_t v33;
  int8x16_t v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  const void *v43;
  const void *v44;
  uint64_t v45;
  unint64_t v46;
  __int128 v47;
  char v48;
  char v49;
  char v50;
  __int16 v51;
  uint64_t v52;
  char v53;
  char v54;
  __int8 v55;
  char v56;
  char v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  double v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unsigned __int8 *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  int8x16_t v90;
  double v91;
  int8x16_t v92;
  int v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int v98;
  __int8 v99;
  unsigned int v100;
  char v101;
  unsigned __int32 v102;
  uint64_t v103;
  int8x16_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  const void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  char v120;
  int v121;
  int8x16_t v122;
  int8x16_t v123;
  __int8 v124;
  char v125;
  char v126;
  char v127;
  unint64_t v128;
  char v129;
  uint64_t v130;
  __int8 v131;
  __int8 v132;
  char v133;
  char v134;
  char v135;
  char v136;
  const void *v137;
  int8x16_t v138;
  unsigned __int8 v139;
  char v140;
  unsigned __int32 v141;
  uint64_t v142;
  char v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  int8x16_t v149;
  unint64_t v150;
  unint64_t v151;
  unint64_t v152;
  int8x16_t v153;
  char v154;
  char v155;
  uint64_t v156;
  __int16 v157;
  unsigned __int8 v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  int8x16_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  __int128 v171;
  int8x16_t v172;
  uint64_t v173;
  _QWORD *v174;
  char v175;
  char v176;
  char v177;
  char v178;
  char v179;
  char v180;
  char v181;
  char v182;
  char v183;
  int8x16_t v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  int8x16_t v190;
  uint64_t v191;
  char v192;
  char v193;
  int8x16_t v194;
  char v195;
  char v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  char v202;
  char v203;
  char v204;
  char v205;
  char v206;
  char v207;
  char v208;
  __int16 v209;
  int8x16_t v210;
  uint64_t v211;
  char v212;
  char v213;
  char v214;
  char v215;
  unint64_t v216;
  char v217;
  char v218;
  char v219;
  char v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char v230;
  uint64_t v231;
  char v232;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  unsigned __int8 *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  BOOL v265;
  uint64_t v266;
  char v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  char v276;
  char v277;
  char v278;
  char v279;
  char v280;
  char v281;
  char v282;
  char v283;
  char v284;
  int8x16_t v285;
  int8x16_t v286;
  int v287;
  int v288;
  int v289;
  int v290;
  double v291;
  _BYTE *v292;
  int8x16_t v293;
  uint64_t v294;
  char v295;
  char v296;
  char v297;
  char v298;
  char v299;
  uint64x2_t v300;
  uint64x2_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int8x16_t v310;
  int8x16_t v311;
  unsigned int v312;
  int8x16_t v313;
  uint64x2_t v314;
  uint64x2_t v315;
  double v316;
  char v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  char v326;
  char v327;
  uint64_t v328;
  char v329;
  char v330;
  __int8 v331;
  uint64_t v332;
  unint64_t v333;
  int8x16_t v334;
  unsigned __int8 v335;
  __int16 v336;
  uint64_t v337;
  char v338;
  char v339;
  char v340;
  char v341;
  char v342;
  char v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  char v348;
  char v349;
  char v350;
  __int8 v351;
  __int8 v352;
  __int8 v353;
  __int8 v354;
  unint64_t v355;
  uint64_t v356;
  uint64_t v357;
  __int128 v358;
  double v359;
  uint64x2_t v360;
  unsigned int v361;
  unsigned int v362;
  uint64x2_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  __int128 v372;
  uint64x2_t v373;
  uint64x2_t v374;
  uint64x2_t v375;
  uint64x2_t v376;
  unsigned __int8 v377;
  __int16 v378;
  int8x16_t v379;
  uint64_t v380;
  unsigned __int8 v381;
  char v382;
  uint64_t v383;
  char v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  int8x16_t v388;
  int16x8_t v389;
  int8x16_t v390;
  int8x8_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  char v402;
  char v403;
  char v404;
  char v405;
  char v406;
  char v407;
  int8x16_t v408;
  int8x16_t v409;
  int v410;
  int v411;
  int v412;
  int v413;
  uint64_t v414;
  char v415;
  char v416;
  char v417;
  char v418;
  double v419;
  _BYTE *v420;
  int8x16_t v421;
  uint64_t v422;
  int8x16_t v423;
  _BYTE *v424;
  char v425;
  uint64x2_t v426;
  uint64x2_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  int8x16_t v436;
  int8x16_t v437;
  unsigned int v438;
  int8x16_t v439;
  uint64x2_t v440;
  uint64x2_t v441;
  double v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  char v451;
  char v452;
  uint64_t v453;
  unint64_t v454;
  unint64_t v455;
  __int128 v456;
  char v457;
  char v458;
  __int16 v459;
  char v460;
  char v461;
  uint64_t v462;
  char v463;
  char v464;
  char v465;
  char v466;
  char v467;
  char v468;
  unint64_t v469;
  uint64_t v470;
  uint64_t v471;
  char v472;
  char v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  __int128 v479;
  unint64_t v480;
  __int128 v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  int64_t v496;
  int v497;
  int v498;
  char v499;
  int64_t v500;
  uint64_t v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  char v506;
  __int16 v507;
  unint64_t v508;
  unint64_t v509;
  uint64_t v510;
  int64_t v511;
  uint64_t v512;
  char v513;
  char v514;
  char v515;
  char v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  _WORD *v526;
  uint64_t v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  char v532;
  __int16 v533;
  __int16 v534;
  unint64_t v535;
  unint64_t v536;
  uint64_t v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  unint64_t v552;
  _QWORD *v553;
  uint64_t v554;
  char v555;
  uint64_t v556;
  double v557;
  uint64x2_t v558;
  uint64x2_t v559;
  int8x8_t v560;
  __int8 v561;
  int8x16_t v562;
  int8x16_t v563;
  int8x16_t v564;
  int v565;
  char v566;
  char v567;
  double v568;
  __int16 v569;
  int8x16_t v570;
  int8x16_t v571;
  uint64x2_t v572;
  int8x16_t v573;
  char v574;
  char v575;
  int16x8_t v576;
  int16x8_t v577;
  int16x8_t v578;
  char v579;
  char v580;
  char v581;
  char v582;
  __int16 v583;
  int8x16_t v584;
  char v585;
  char v586;
  char v587;
  int8x8_t v588;
  char v589;
  char v590;
  char v591;
  char v592;
  char v593;
  char v594;
  char v595;
  char v596;
  char v597;
  uint64_t v598;
  char v599;
  unint64_t v600;
  int64_t v601;
  uint64_t v602;
  _QWORD *v603;
  uint64_t v604;
  unint64_t v605;
  unint64_t v606;
  unint64_t v607;
  _QWORD *v608;
  uint64_t v610;
  uint64_t v612;
  uint64_t v613;
  unint64_t v614;
  unint64_t v615;
  unint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  _QWORD *v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t *v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685[2];
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  _QWORD *v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710[2];
  uint64x2_t v711;
  uint64_t v712;
  uint64x2_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721[2];
  uint64_t v722;
  uint64_t v723;
  __int128 v724;
  uint64_t v725;
  __int128 v726;
  uint64_t v727;
  uint64_t v728[2];
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  __int8 *v733;
  uint64_t v734;
  uint64_t v735;
  __int128 v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742[2];
  uint64_t v743;
  uint64_t v744;
  uint64_t v745[2];
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  __n128 v757;
  uint64_t v758;
  uint64_t v759;
  __int128 v760;
  uint64_t v761;
  uint64_t v762;
  __n128 v763;
  uint64_t v764;
  uint64_t v765;
  int8x16_t v766;
  __int128 v767;
  uint64_t v768;
  uint64_t v769;
  char v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  char v774;
  uint64_t v775;
  uint64_t v776;
  uint64_t v777;
  char v778;
  char v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  char v784;
  uint64_t v785;
  uint64_t v786;
  __int16 v787;
  uint64_t v788;
  __int8 v789;
  __int16 v790;
  __int16 v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  char v795;
  __int16 v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  int v800;
  uint64_t v801;
  char v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  int v807;
  uint64_t v808;
  char v809;
  unsigned __int32 v810;
  __int16 v811;
  uint64_t v812;
  uint64_t v813;
  int v814;
  uint64_t v815;
  char v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  int v820;
  uint64_t v821;
  uint64_t v822;
  int v823;
  __int16 v824;
  unsigned __int32 v825;
  uint64_t v826[2];
  uint64_t v827[2];
  char v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  char v833;
  uint64_t v834;
  char v835;
  char v836;
  __int16 v837;
  char v838;
  uint64_t v839;
  char v840;
  char v841;
  char v842;
  char v843;
  unsigned __int32 v844;
  uint64_t v845[2];
  uint64_t v846;
  char v847;
  char v848;
  uint64_t v849;
  char v850;
  uint64_t v851;
  char v852;
  __int32 v853;
  char v854;
  uint64_t v855;
  char v856;
  char v857;
  char v858;
  char v859;
  char v860;
  uint64_t v861;
  char v862;
  char v863;
  char v864;
  char v865;
  char v866;
  uint64_t v867;
  uint64_t v868;
  int8x16_t v869;
  char v870;
  char v871;
  char v872;
  uint64_t v873;
  __int16 v874;
  _BYTE *v875;
  char v876;
  char v877;
  char v878;
  uint64_t v879;
  uint64_t v880;
  _BYTE *v881;
  char v882;
  uint64_t v883[2];
  char v884;
  char v885;
  uint64_t v886;
  char v887;
  uint64_t v888;
  char v889;
  uint64_t v890;
  char v891;
  char v892;
  uint64_t v893;
  char v894;
  uint64_t v895[2];
  uint64_t v896;
  char v897;
  _BYTE *v898;
  char v899;
  uint64_t v900;
  char v901;
  char v902;
  char v903;
  char v904;
  char v905;
  uint64_t v906;
  uint64_t v907[2];
  char v908;
  char v909;
  char v910;
  char v911;
  __int16 v912;
  uint64_t v913;
  uint64_t v914;
  char v915;
  char v916;
  char v917;
  int v918;
  uint64_t v919;
  uint64_t v920;
  char v921;
  char v922;
  char v923;
  char v924;
  uint64_t v925;
  char v926;
  int8x16_t v927;
  char v928;
  int8x16_t v929;
  int v930;
  uint64_t v931;
  char v932;
  char v933;
  char v934;
  int16x8_t v935;
  __int16 v936;
  uint64_t v937[2];
  char v938;
  int16x8_t v939;
  char v940;
  char v941;
  int16x8_t v942;
  char v943;
  char v944;
  char v945;
  int8x8_t v946;
  char v947;
  char v948;
  uint64_t v949;
  __int8 v950;
  char v951;
  char v952;
  uint64_t v953;
  char v954;
  uint64_t v955;
  __int8 v956;
  uint64_t v957[2];
  char v958;
  int8x16_t v959;
  __int128 v960;
  uint64_t v961;
  char v962;
  __int128 v963;
  int8x16_t v964;
  __int16 v965;
  __int8 v966;
  char v967;
  uint64_t v968;
  __int16 v969;
  uint64_t v970[2];
  char v971;
  char v972;
  char v973;
  char v974;
  uint64_t v975;
  uint64_t v976;
  char v977;
  char v978;
  unsigned int v979;
  char v980;
  char v981;
  uint64_t v982;
  char v983;
  uint64_t v984[2];
  char v985;
  char v986;
  unsigned int v987;
  char v988;
  char v989;
  uint64_t v990;
  uint64_t v991;
  uint64_t v992[2];
  char v993;
  char v994;
  int8x16_t v995;
  char v996;
  uint64_t v997;
  __int16 v998;
  uint64_t v999[2];
  int8x16_t v1000;
  char v1001;
  uint64_t v1002[2];
  double v1003;
  char v1004;
  unint64_t v1005;
  uint64_t v1006;
  __int8 v1007;
  char v1008;
  uint64_t v1009[2];
  double v1010;
  int8x16_t v1011;
  char v1012;
  char v1013;
  char v1014;
  char v1015;
  uint64_t v1016;
  __int8 v1017;
  uint64_t v1018;
  uint64_t v1019[2];
  char v1020;
  char v1021;
  char v1022;
  char v1023;
  uint64_t v1024;
  __int8 v1025;
  uint64_t v1026[2];
  uint64_t v1027;
  __int8 v1028;
  char v1029;
  char v1030;
  uint64_t v1031;
  __int8 v1032;
  uint64_t v1033;
  uint64_t v1034[2];
  uint64_t v1035;
  uint64_t v1036[2];
  __int8 v1037;
  char v1038;
  char v1039;
  __n128 v1040;
  int8x16_t v1041;
  __n128 v1042;
  uint64_t v1043[2];
  uint64_t v1044;
  __int128 v1045;
  uint64_t v1046;
  uint64_t v1047;
  uint64_t v1048;
  unint64_t v1049;
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  unint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  _OWORD __src[4];
  __int32 __s2;
  _BYTE v1058[12];
  __int8 v1059;
  int8x16_t v1060;
  char v1061;
  char v1062;
  char v1063;
  char v1064;
  char v1065;
  char v1066;
  __int128 v1067;
  char v1068;
  char v1069;
  char v1070;
  char v1071;
  char v1072;
  char v1073;
  char v1074;
  char v1075;
  char v1076;
  char v1077;
  __int16 v1078;
  __int16 v1079;
  uint64_t v1080;
  _OWORD v1081[4];
  uint64_t v1082;
  double v1083[10];
  double v1084;
  char v1085;
  unsigned __int32 v1086;
  __int16 v1087;
  char v1088;
  _BYTE v1089[23];
  __int8 v1090;
  __int8 v1091;
  __int32 v1092;
  __int8 v1093;
  __int8 v1094;
  __int8 v1095;
  unsigned __int8 v1096;
  unsigned __int16 v1097;
  __int16 v1098;
  uint64_t v1099;

  OUTLINED_FUNCTION_160();
  v646 = v2;
  v1099 = *MEMORY[0x24BDAC8D0];
  v708 = __swift_instantiateConcreteTypeFromMangledName(&qword_2578807A0);
  v3 = OUTLINED_FUNCTION_18_1();
  v4 = *(_OWORD *)(v0 + 56);
  *(_OWORD *)v685 = xmmword_249838510;
  *(_OWORD *)(v3 + 16) = xmmword_249838510;
  *(_OWORD *)(v3 + 32) = v4;
  v1055 = sub_2497A1194(v3);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v5 + 16);
  v702 = (_QWORD *)v0;
  *(_QWORD *)&v724 = v5;
  if (v6)
  {
    OUTLINED_FUNCTION_43_0();
    v7 = 0;
    v739 = MEMORY[0x24BEE4AF8];
    v736 = xmmword_24983AE70;
    do
    {
      v867 = v6;
      v781 = v7;
      v8 = v5 + v7;
      v9 = *(_BYTE *)(v5 + v7 + 32);
      v10 = *(_BYTE *)(v5 + v7 + 33);
      v11 = *(_BYTE *)(v5 + v7 + 34);
      v12 = *(_BYTE *)(v5 + v7 + 35);
      v13 = *(_BYTE *)(v8 + 36);
      v14 = *(_BYTE *)(v8 + 37);
      v15 = *(_BYTE *)(v8 + 38);
      v16 = *(_BYTE *)(v8 + 39);
      v17 = *(_BYTE *)(v8 + 40);
      v1001 = *(_BYTE *)(v8 + 49);
      v994 = *(_BYTE *)(v8 + 50);
      v986 = *(_BYTE *)(v8 + 51);
      *(_OWORD *)v1036 = *(_OWORD *)(v8 + 52);
      v825 = *(unsigned __int8 *)(v8 + 68);
      v820 = *(unsigned __int8 *)(v8 + 69);
      v814 = *(unsigned __int8 *)(v8 + 70);
      v807 = *(unsigned __int8 *)(v8 + 71);
      v800 = *(unsigned __int8 *)(v8 + 72);
      *(_OWORD *)v845 = *(_OWORD *)(v8 + 73);
      v18 = *(_BYTE *)(v8 + 89);
      v19 = *(_BYTE *)(v8 + 90);
      v20 = *(unsigned __int8 *)(v8 + 91);
      v21 = *(unsigned __int8 *)(v8 + 92);
      v22 = *(unsigned __int8 *)(v8 + 93);
      v978 = *(_BYTE *)(v8 + 94);
      v972 = *(_BYTE *)(v8 + 95);
      v793 = *(unsigned __int8 *)(v8 + 96);
      v965 = *(_WORD *)(v8 + 98);
      v787 = *(_WORD *)(v8 + 100);
      v23 = *(_QWORD *)(v8 + 104);
      v833 = v9;
      LOBYTE(v1084) = v9;
      v1020 = v10;
      BYTE1(v1084) = v10;
      v1012 = v11;
      BYTE2(v1084) = v11;
      v838 = v12;
      BYTE3(v1084) = v12;
      OUTLINED_FUNCTION_176();
      v1085 = v17;
      v27 = OUTLINED_FUNCTION_140(v24, v25, v26).u32[0];
      *(_DWORD *)(v28 + 249) = v27;
      v1087 = WORD2(v29);
      v1027 = v29;
      v1088 = BYTE6(v29);
      OUTLINED_FUNCTION_8_12();
      if (OUTLINED_FUNCTION_26_5(v30, v31))
        __asm { BR              X8 }
      LODWORD(v760) = v22;
      v763.n128_u32[0] = v21;
      v766.i32[0] = v20;
      v770 = v19;
      v32 = v17;
      v757.n128_u32[0] = v825;
      LODWORD(v755) = v820;
      HIDWORD(v753) = v814;
      LODWORD(v751) = v807;
      LODWORD(v748) = v800;
      *(_OWORD *)v745 = *(_OWORD *)v1036;
      LOBYTE(v1084) = v833;
      BYTE1(v1084) = v1020;
      BYTE2(v1084) = v1012;
      BYTE3(v1084) = v838;
      OUTLINED_FUNCTION_176();
      v1085 = v17;
      v1086 = vmovn_s16((int16x8_t)vzip1q_s8(v34, v33)).u32[0];
      *v35 = v34.i8[4];
      *v36 = v34.i8[5];
      *v37 = v34.i8[6];
      OUTLINED_FUNCTION_8_12();
      v38 = v16;
      v39 = v15;
      v40 = v14;
      v42 = v41;
      if (!memcmp(v43, v44, 0x10uLL))
      {
        v5 = v724;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v45 = v739;
        else
          OUTLINED_FUNCTION_29_3();
        v46 = *(_QWORD *)(v45 + 16);
        v47 = *(_OWORD *)v845;
        v48 = v1001;
        v49 = v994;
        v50 = v986;
        v51 = v787;
        v52 = v1027;
        v53 = v18;
        v54 = v770;
        v55 = v766.i8[0];
        v56 = v21;
        v57 = v760;
        v58 = v978;
        v59 = v972;
        if (v46 >= *(_QWORD *)(v45 + 24) >> 1)
        {
          sub_249752EF4();
          v59 = v972;
          v58 = v978;
          v57 = v760;
          v56 = v21;
          v55 = v766.i8[0];
          v54 = v770;
          v53 = v18;
          v52 = v1027;
          v51 = v787;
          v50 = v986;
          v49 = v994;
          v48 = v1001;
          v47 = *(_OWORD *)v845;
        }
        *(_QWORD *)(v45 + 16) = v46 + 1;
        v739 = v45;
        v60 = v45 + 80 * v46;
        *(_BYTE *)(v60 + 32) = v833;
        *(_BYTE *)(v60 + 33) = v1020;
        *(_BYTE *)(v60 + 34) = v42;
        *(_BYTE *)(v60 + 35) = v838;
        *(_BYTE *)(v60 + 36) = v13;
        *(_BYTE *)(v60 + 37) = v40;
        *(_BYTE *)(v60 + 38) = v39;
        *(_BYTE *)(v60 + 39) = v38;
        *(_BYTE *)(v60 + 40) = v32;
        *(_QWORD *)(v60 + 41) = v52;
        *(_BYTE *)(v60 + 49) = v48;
        *(_BYTE *)(v60 + 50) = v49;
        *(_BYTE *)(v60 + 51) = v50;
        *(_OWORD *)(v60 + 52) = *(_OWORD *)v1036;
        *(_BYTE *)(v60 + 68) = v825;
        *(_BYTE *)(v60 + 69) = v820;
        *(_BYTE *)(v60 + 70) = v814;
        *(_BYTE *)(v60 + 71) = v807;
        *(_BYTE *)(v60 + 72) = v800;
        *(_OWORD *)(v60 + 73) = v47;
        *(_BYTE *)(v60 + 89) = v53;
        *(_BYTE *)(v60 + 90) = v54;
        *(_BYTE *)(v60 + 91) = v55;
        *(_BYTE *)(v60 + 92) = v56;
        *(_BYTE *)(v60 + 93) = v57;
        *(_BYTE *)(v60 + 94) = v58;
        *(_BYTE *)(v60 + 95) = v59;
        *(_BYTE *)(v60 + 96) = v793;
        *(_WORD *)(v60 + 98) = v965;
        *(_WORD *)(v60 + 100) = v51;
        *(_QWORD *)(v60 + 104) = v23;
      }
      else
      {
        v5 = v724;
      }
      v7 = v781 + 80;
      v6 = v867 - 1;
    }
    while (v867 != 1);
    OUTLINED_FUNCTION_25();
    v61 = v739;
  }
  else
  {
    v61 = MEMORY[0x24BEE4AF8];
  }
  v62 = sub_2497A121C(v61);
  v1054 = v62;
  v63 = *(_QWORD *)(v5 + 16);
  v740 = v5 + 32;
  OUTLINED_FUNCTION_43_0();
  v64 = 0;
  v719 = 0;
  v633 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v652 = 32;
  *(double *)&v658 = MEMORY[0x24BEE4AF8];
LABEL_17:
  v65 = 80 * v64 + 32;
  while (v63 != v64)
  {
    if (v64 >= *(_QWORD *)(v5 + 16))
      goto LABEL_243;
    ++v64;
    v66 = v65 + 80;
    OUTLINED_FUNCTION_129(&v1084, (const void *)(v5 + v65));
    OUTLINED_FUNCTION_74();
    v67 = sub_2497A16F8(&v1084, v62);
    OUTLINED_FUNCTION_23_1();
    v65 = v66;
    if ((v67 & 1) == 0)
    {
      v68 = *(double *)&v658;
      *(_QWORD *)&v1083[0] = v658;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24974E1E4();
        v68 = v1083[0];
      }
      v70 = *(_QWORD *)(*(_QWORD *)&v68 + 16);
      v69 = *(_QWORD *)(*(_QWORD *)&v68 + 24);
      if (v70 >= v69 >> 1)
      {
        OUTLINED_FUNCTION_80(v69);
        sub_24974E1E4();
        v68 = v1083[0];
      }
      *(_QWORD *)(*(_QWORD *)&v68 + 16) = v70 + 1;
      *(double *)&v658 = v68;
      OUTLINED_FUNCTION_129((void *)(*(_QWORD *)&v68 + 80 * v70 + 32), &v1084);
      goto LABEL_17;
    }
  }
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_74();
  sub_249753E10();
  v72 = v71;
  OUTLINED_FUNCTION_23_1();
  v78 = *(_QWORD *)(v72 + 16);
  v79 = (2 * v78) | 1;
  v1051 = v72 + 32;
  if (v78)
  {
    v80 = 0;
    v733 = &v1059;
    *(_OWORD *)v728 = xmmword_24983AE70;
    v736 = xmmword_24983B6A0;
    while (1)
    {
      if (v80 >= (uint64_t)(v79 >> 1))
        goto LABEL_244;
      if ((uint64_t)v78 <= v80)
        goto LABEL_245;
      if (v79 >> 1 < v78)
        goto LABEL_246;
      v81 = (unsigned __int8 *)(v1051 + 80 * v80);
      v931 = v81[32];
      v925 = v81[33];
      v919 = v81[34];
      v913 = v81[35];
      v906 = v81[36];
      v900 = v81[37];
      v893 = v81[38];
      v886 = v81[39];
      v879 = v81[40];
      v873 = v81[41];
      v868 = v81[42];
      v861 = v81[43];
      v855 = v81[44];
      v851 = v81[45];
      v839 = v81[47];
      v846 = v81[46];
      v1052 = v80 + 1;
      v1053 = v79 & 1 | (2 * v78);
      v749 = *(_QWORD *)(v5 + 16);
      if (v749)
        break;
      v168 = MEMORY[0x24BEE4AF8];
LABEL_52:
      sub_2497C219C((uint64_t)v1081, v931 | (v925 << 8) | (v919 << 16) | (v913 << 24) | (v906 << 32) | (v900 << 40) | (v893 << 48) | (v886 << 56), v879 | (v873 << 8) | (v868 << 16) | (v861 << 24) | (v855 << 32) | (v851 << 40) | (v846 << 48) | (v839 << 56), v73, v74, v75, v76, v77, v620, v626, (uint64_t)v633, v639, (uint64_t)v646, v652, v658, v664, v670, v678, v685[0],
        v685[1],
        v696,
        (uint64_t)v702,
        v708,
        v715,
        v719,
        SWORD1(v719),
        SBYTE4(v719),
        SBYTE5(v719),
        SBYTE6(v719),
        SHIBYTE(v719),
        v722,
        SBYTE1(v722),
        SBYTE2(v722),
        SBYTE3(v722),
        SBYTE4(v722),
        SBYTE5(v722),
        SBYTE6(v722),
        SHIBYTE(v722),
        v724,
        v728[0],
        v728[1],
        v731,
        (uint64_t)v733,
        v736,
        *((uint64_t *)&v736 + 1),
        v740,
        v743,
        v745[0],
        v745[1],
        v749,
        v751,
        v753,
        v755,
        v757.n128_i64[0],
        v757.n128_i64[1],
        v760,
        *((uint64_t *)&v760 + 1),
        v763.n128_i64[0],
        v763.n128_i64[1],
        v766.i64[0],
        v766.i64[1]);
      if ((v169 & 1) != 0)
      {
        v170 = *(_QWORD *)(v168 + 16);
        v745[0] = v168;
        if (v170)
        {
          OUTLINED_FUNCTION_149(MEMORY[0x24BEE4AF8]);
          sub_24974E1E4();
          v173 = *(_QWORD *)v1089;
          v174 = (_QWORD *)(v168 + 104);
          do
          {
            v914 = v170;
            v920 = v173;
            v175 = *((_BYTE *)v174 - 72);
            v176 = *((_BYTE *)v174 - 71);
            v177 = *((_BYTE *)v174 - 70);
            v178 = *((_BYTE *)v174 - 69);
            v179 = *((_BYTE *)v174 - 68);
            v180 = *((_BYTE *)v174 - 67);
            v181 = *((_BYTE *)v174 - 66);
            v182 = *((_BYTE *)v174 - 65);
            v183 = *((_BYTE *)v174 - 64);
            v172.i64[0] = *(_QWORD *)((char *)v174 - 63);
            v948 = *((_BYTE *)v174 - 55);
            v945 = *((_BYTE *)v174 - 54);
            v940 = *((_BYTE *)v174 - 53);
            v184 = *(int8x16_t *)((char *)v174 - 52);
            v185 = *((_BYTE *)v174 - 36);
            v186 = *((_BYTE *)v174 - 35);
            v187 = *((_BYTE *)v174 - 34);
            v188 = *((_BYTE *)v174 - 33);
            v189 = *((_BYTE *)v174 - 32);
            v190 = *(int8x16_t *)((char *)v174 - 31);
            v1038 = *((_BYTE *)v174 - 15);
            v1029 = *((_BYTE *)v174 - 14);
            v1022 = *((_BYTE *)v174 - 13);
            v1014 = *((_BYTE *)v174 - 12);
            v932 = *((_BYTE *)v174 - 11);
            v926 = *((_BYTE *)v174 - 10);
            v1004 = *((_BYTE *)v174 - 9);
            v880 = *((unsigned __int8 *)v174 - 8);
            v936 = *((_WORD *)v174 - 3);
            v874 = *((_WORD *)v174 - 2);
            v191 = *v174;
            BYTE13(v1081[0]) = BYTE4(*(_QWORD *)((char *)v174 - 31));
            BYTE14(v1081[0]) = v190.i8[5];
            HIBYTE(v1081[0]) = v190.i8[6];
            *(_WORD *)&v1058[9] = v172.i16[2];
            v1058[11] = v172.i8[6];
            v959 = v184;
            v963 = v171;
            v184.i16[0] = v184.u8[12];
            v184.i16[1] = v184.u8[13];
            v184.i16[2] = v184.u8[14];
            v184.i16[3] = v184.u8[15];
            *(int8x8_t *)v184.i8 = vmovn_s16((int16x8_t)v184);
            LODWORD(v1081[0]) = v184.i32[0];
            v192 = v185;
            BYTE4(v1081[0]) = v185;
            v193 = v186;
            BYTE5(v1081[0]) = v186;
            v901 = v187;
            BYTE6(v1081[0]) = v187;
            v894 = v188;
            BYTE7(v1081[0]) = v188;
            v887 = v189;
            BYTE8(v1081[0]) = v189;
            *(int8x16_t *)v907 = v190;
            v194 = vzip1q_s8(v190, v184);
            *(int8x8_t *)v194.i8 = vmovn_s16((int16x8_t)v194);
            *(_DWORD *)((char *)v1081 + 9) = v194.i32[0];
            v195 = v175;
            LOBYTE(__s2) = v175;
            v196 = v176;
            BYTE1(__s2) = v176;
            v980 = v177;
            BYTE2(__s2) = v177;
            v988 = v178;
            HIBYTE(__s2) = v178;
            v197 = v179;
            v1058[0] = v179;
            v198 = v180;
            v1058[1] = v180;
            v199 = v181;
            v1058[2] = v181;
            v200 = v182;
            v1058[3] = v182;
            v201 = v183;
            v1058[4] = v183;
            v953 = v172.i64[0];
            *(_DWORD *)&v1058[5] = vmovn_s16((int16x8_t)vzip1q_s8(v172, v194)).u32[0];
            if ((OUTLINED_FUNCTION_26_5(v1081, &__s2) & 0x80000000) != 0)
              __asm { BR              X8 }
            v202 = v196;
            v203 = v980;
            v204 = v988;
            v974 = v198;
            v205 = v193;
            v206 = v901;
            v207 = v894;
            v208 = v887;
            v209 = v874;
            v171 = v963;
            v210 = v959;
            v172 = *(int8x16_t *)v907;
            v211 = v953;
            v212 = v948;
            v213 = v945;
            v214 = v940;
            v215 = v932;
            v173 = v920;
            *(_QWORD *)v1089 = v920;
            v216 = *(_QWORD *)(v920 + 16);
            v217 = v926;
            v218 = v1029;
            v219 = v1022;
            v220 = v1038;
            if (v216 >= *(_QWORD *)(v920 + 24) >> 1)
            {
              v960 = v963;
              v964 = *(int8x16_t *)v907;
              v908 = v894;
              *(int8x16_t *)v895 = v210;
              sub_24974E1E4();
              v210 = *(int8x16_t *)v895;
              v203 = v980;
              v204 = v988;
              v217 = v926;
              v215 = v932;
              v219 = v1022;
              v218 = v1029;
              v220 = v1038;
              v209 = v874;
              v214 = v940;
              v213 = v945;
              v212 = v948;
              v208 = v887;
              v207 = v908;
              v206 = v901;
              v205 = v193;
              v211 = v953;
              v171 = v960;
              v172 = v964;
              v173 = *(_QWORD *)v1089;
            }
            *(_QWORD *)(v173 + 16) = v216 + 1;
            v221 = v173 + 80 * v216;
            *(_BYTE *)(v221 + 32) = v195;
            *(_BYTE *)(v221 + 33) = v202;
            *(_BYTE *)(v221 + 34) = v203;
            *(_BYTE *)(v221 + 35) = v204;
            *(_BYTE *)(v221 + 36) = v197;
            *(_BYTE *)(v221 + 37) = v974;
            *(_BYTE *)(v221 + 38) = v199;
            *(_BYTE *)(v221 + 39) = v200;
            *(_BYTE *)(v221 + 40) = v201;
            *(_BYTE *)(v221 + 49) = v212;
            *(_BYTE *)(v221 + 50) = v213;
            *(_BYTE *)(v221 + 51) = v214;
            *(_BYTE *)(v221 + 68) = v192;
            *(_BYTE *)(v221 + 69) = v205;
            *(_BYTE *)(v221 + 70) = v206;
            *(_BYTE *)(v221 + 71) = v207;
            *(_BYTE *)(v221 + 72) = v208;
            *(_BYTE *)(v221 + 89) = v220;
            *(_BYTE *)(v221 + 90) = v218;
            *(_BYTE *)(v221 + 91) = v219;
            *(_BYTE *)(v221 + 92) = v1014;
            *(_BYTE *)(v221 + 93) = v215;
            *(_BYTE *)(v221 + 94) = v217;
            *(_BYTE *)(v221 + 95) = v1004;
            *(_BYTE *)(v221 + 96) = v880;
            *(_WORD *)(v221 + 98) = v936;
            *(_WORD *)(v221 + 100) = v209;
            *(_QWORD *)(v221 + 41) = v211;
            *(int8x16_t *)(v221 + 52) = v210;
            *(int8x16_t *)(v221 + 73) = v172;
            *(_QWORD *)(v221 + 104) = v191;
            v174 += 10;
            v170 = v914 - 1;
          }
          while (v914 != 1);
          v5 = v724;
        }
        else
        {
          v173 = MEMORY[0x24BEE4AF8];
        }
        v222 = *(_QWORD *)(v173 + 16);
        if (v222)
        {
          v223 = (char *)(v173 + 32);
          v63 = v745[0];
          do
          {
            OUTLINED_FUNCTION_129(v1083, v223);
            sub_2497C258C((char *)v1081, v1083);
            v223 += 80;
            --v222;
          }
          while (v222);
        }
        else
        {
          v63 = v745[0];
        }
        swift_bridgeObjectRelease();
        sub_2497A63C0(v63);
      }
      else
      {
        OUTLINED_FUNCTION_23_1();
      }
      v80 = v1052;
      v79 = v1053;
      v78 = v1053 >> 1;
      if (v1052 == v1053 >> 1)
        goto LABEL_70;
    }
    OUTLINED_FUNCTION_43_0();
    v82 = 0;
    v745[0] = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v771 = v82;
      OUTLINED_FUNCTION_159();
      v84 = *(_BYTE *)(v83 + 4);
      v85 = *(_BYTE *)(v83 + 5);
      v86 = *(_BYTE *)(v83 + 6);
      v87 = *(_BYTE *)(v83 + 7);
      v88 = *(_BYTE *)(v83 + 8);
      v89 = *(_BYTE *)(v83 + 9);
      v90.i64[0] = *(_QWORD *)(v83 + 10);
      v958 = *(_BYTE *)(v83 + 18);
      v952 = *(_BYTE *)(v83 + 19);
      *(_OWORD *)v1002 = *(_OWORD *)(v83 + 20);
      v1010 = v91;
      LODWORD(v819) = *(unsigned __int8 *)(v83 + 36);
      LODWORD(v813) = *(unsigned __int8 *)(v83 + 37);
      LODWORD(v806) = *(unsigned __int8 *)(v83 + 38);
      LODWORD(v799) = *(unsigned __int8 *)(v83 + 39);
      LODWORD(v793) = *(unsigned __int8 *)(v83 + 40);
      LODWORD(v786) = *(unsigned __int8 *)(v83 + 41);
      v92 = *(int8x16_t *)(v83 + 42);
      *(int8x16_t *)v826 = v92;
      v93 = *(unsigned __int8 *)(v83 + 58);
      v94 = *(unsigned __int8 *)(v83 + 59);
      v95 = *(unsigned __int8 *)(v83 + 60);
      LODWORD(v96) = *(unsigned __int8 *)(v83 + 61);
      v947 = *(_BYTE *)(v83 + 62);
      v944 = *(_BYTE *)(v83 + 63);
      v782 = *(unsigned __int8 *)(v83 + 64);
      LODWORD(v832) = *(unsigned __int16 *)(v83 + 66);
      LODWORD(v776) = *(unsigned __int16 *)(v83 + 68);
      v97 = *(_QWORD *)(v83 + 72);
      v987 = v98;
      LOBYTE(v1081[0]) = v98;
      v966 = v99;
      BYTE1(v1081[0]) = v99;
      v979 = v100;
      BYTE2(v1081[0]) = v100;
      v973 = v101;
      BYTE3(v1081[0]) = v101;
      BYTE4(v1081[0]) = v84;
      BYTE5(v1081[0]) = v85;
      BYTE6(v1081[0]) = v86;
      BYTE7(v1081[0]) = v87;
      BYTE8(v1081[0]) = v88;
      BYTE9(v1081[0]) = v89;
      v102 = OUTLINED_FUNCTION_140(v92, v91, v90).u32[0];
      *(_DWORD *)(v103 + 90) = v102;
      HIWORD(v1081[0]) = v104.i16[2];
      v995 = v104;
      OUTLINED_FUNCTION_9_10(v105, v106, v107, v108, v109, v110, v111, v112, v620, v626, (uint64_t)v633, v639, (uint64_t)v646, v652, v658, v664, v670, v678, v685[0],
        v685[1],
        v696,
        (uint64_t)v702,
        v708,
        v715,
        v719,
        v722,
        v724,
        *((uint64_t *)&v724 + 1),
        v728[0],
        v728[1],
        v731,
        (uint64_t)v733,
        v736,
        *((uint64_t *)&v736 + 1),
        v740,
        v743,
        v745[0],
        v745[1],
        v749,
        v751,
        v753,
        v755,
        v757.n128_i64[0],
        v757.n128_i64[1],
        v760,
        *((uint64_t *)&v760 + 1),
        v763.n128_i64[0],
        v763.n128_i64[1],
        v766.i64[0],
        v766.i64[1],
        v768,
        v771,
        v776,
        v782,
        v786,
        v793,
        v799,
        v806,
        v813,
        v819,
        v826[0],
        v826[1],
        v832);
      v114 = OUTLINED_FUNCTION_26_5(v113, &__s2);
      if ((_DWORD)v114)
        __asm { BR              X8 }
      LODWORD(v752) = v96;
      HIDWORD(v754) = v95;
      LODWORD(v756) = v94;
      LODWORD(v758) = v93;
      v119 = v87;
      v120 = v89;
      v1037 = v821;
      LODWORD(v764) = v815;
      LODWORD(v761) = v808;
      v1028 = v801;
      v1021 = v794;
      v1013 = v788;
      v121 = v834;
      LODWORD(v834) = v777;
      v767 = *(_OWORD *)v1002;
      v122 = *(int8x16_t *)v827;
      v123 = *(int8x16_t *)v827;
      v124 = v966;
      LOBYTE(v96) = v973;
      LODWORD(v827[0]) = v783;
      LODWORD(v821) = v121;
      v1003 = v1010;
      v1011 = v123;
      LOBYTE(v1081[0]) = v987;
      BYTE1(v1081[0]) = v966;
      BYTE2(v1081[0]) = v979;
      BYTE3(v1081[0]) = v973;
      v125 = v84;
      BYTE4(v1081[0]) = v84;
      BYTE5(v1081[0]) = v85;
      BYTE6(v1081[0]) = v86;
      BYTE7(v1081[0]) = v87;
      BYTE8(v1081[0]) = v88;
      BYTE9(v1081[0]) = v120;
      *(_DWORD *)((char *)v1081 + 10) = vmovn_s16((int16x8_t)vzip1q_s8(v995, v122)).u32[0];
      HIWORD(v1081[0]) = v995.i16[2];
      OUTLINED_FUNCTION_9_10(v114, v987, v115, v116, v117, v783, v979, v118, v621, v627, v634, v640, v647, v653, v659, v665, v671, v679, v686,
        v691,
        v697,
        v703,
        v709,
        v716,
        v720,
        v723,
        v725,
        v727,
        v729,
        v730,
        v732,
        v734,
        v737,
        v738,
        v741,
        v744,
        v746,
        v747,
        v750,
        v752,
        v754,
        v756,
        v758,
        v759,
        v761,
        v762,
        v764,
        v765,
        v767,
        *((uint64_t *)&v767 + 1),
        v769,
        v772,
        v777,
        v783,
        v788,
        v794,
        v801,
        v808,
        v815,
        v821,
        v827[0],
        v827[1],
        v834);
      v127 = v126;
      v63 = v128;
      LOBYTE(v130) = v129;
      v132 = v131;
      v134 = v133;
      v136 = v135;
      if (!memcmp(v137, &__s2, 0x10uLL))
      {
        v784 = v134;
        v789 = v132;
        v795 = v119;
        v802 = v130;
        v809 = v63;
        v816 = v125;
        if (*(_QWORD *)(v1055 + 16))
        {
          sub_249837690();
          *(double *)v138.i64 = OUTLINED_FUNCTION_147(v766.u8[15], (int16x8_t)v766);
          __s2 = v138.i32[0];
          v132 = v1037;
          v1058[0] = v1037;
          v139 = v763.n128_u8[0];
          v1058[1] = v763.n128_u8[0];
          v140 = v760;
          v1058[2] = v760;
          v124 = v1028;
          v1058[3] = v1028;
          LOBYTE(v130) = v1021;
          v1058[4] = v1021;
          LOBYTE(v96) = v1013;
          v1058[5] = v1013;
          v141 = OUTLINED_FUNCTION_140(v138, v1003, v1011).u32[0];
          *(_DWORD *)(v142 + 10) = v141;
          v1058[10] = v143;
          v1058[11] = v144;
          sub_24983769C();
          sub_2498376E4();
          OUTLINED_FUNCTION_122();
          v63 = v145 & ~v146;
          OUTLINED_FUNCTION_155();
          if (((v148 >> v63) & 1) != 0)
          {
            v149 = vextq_s8(v766, v766, 8uLL);
            *(int8x8_t *)v149.i8 = vzip2_s8(*(int8x8_t *)v149.i8, *(int8x8_t *)v149.i8);
            v939 = (int16x8_t)v149;
            *(int8x8_t *)v149.i8 = vzip1_s8(*(int8x8_t *)v1011.i8, *(int8x8_t *)v149.i8);
            v935 = (int16x8_t)v149;
            v132 = v1011.i8[4];
            v124 = v1011.i8[5];
            v130 = ~v147;
            OUTLINED_FUNCTION_74();
            v96 = *(_QWORD *)(v1055 + 48);
            while (1)
            {
              v1081[0] = *(_OWORD *)(v96 + 16 * v63);
              __s2 = vmovn_s16(v939).u32[0];
              v1058[0] = v1037;
              v1058[1] = v763.n128_u8[0];
              v1058[2] = v760;
              v1058[3] = v1028;
              v1058[4] = v1021;
              v1058[5] = v1013;
              *(_DWORD *)&v1058[6] = vmovn_s16(v935).u32[0];
              *(_WORD *)&v1058[10] = v1011.i16[2];
              if (!OUTLINED_FUNCTION_26_5(v1081, &__s2))
                break;
              v63 = (v63 + 1) & v130;
              OUTLINED_FUNCTION_152();
              if (((v150 >> v63) & 1) == 0)
              {
                OUTLINED_FUNCTION_23_1();
                OUTLINED_FUNCTION_179();
                goto LABEL_43;
              }
            }
            OUTLINED_FUNCTION_23_1();
            goto LABEL_48;
          }
        }
        else
        {
          OUTLINED_FUNCTION_179();
          v139 = v763.n128_u8[0];
          v140 = v760;
        }
LABEL_43:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_29_3();
          v745[0] = v166;
        }
        v152 = *(_QWORD *)(v745[0] + 16);
        v151 = *(_QWORD *)(v745[0] + 24);
        v153 = v1011;
        v154 = v958;
        v155 = v952;
        v156 = v995.i64[0];
        v157 = v832;
        v158 = v757.n128_u8[0];
        v159 = v755;
        v160 = BYTE4(v753);
        v161 = v751;
        v162 = v947;
        v163 = v944;
        v164 = v766;
        if (v152 >= v151 >> 1)
        {
          OUTLINED_FUNCTION_80(v151);
          sub_249752EF4();
          v164 = v766;
          v162 = v947;
          v161 = v751;
          v160 = BYTE4(v753);
          v159 = v755;
          v158 = v757.n128_u8[0];
          v157 = v832;
          v156 = v995.i64[0];
          v155 = v952;
          v154 = v958;
          v153 = v1011;
          v745[0] = v167;
          v163 = v944;
        }
        *(_QWORD *)(v745[0] + 16) = v152 + 1;
        v165 = v745[0] + 80 * v152;
        *(_BYTE *)(v165 + 32) = v127;
        *(_BYTE *)(v165 + 33) = v966;
        *(_BYTE *)(v165 + 34) = v136;
        *(_BYTE *)(v165 + 35) = v973;
        *(_BYTE *)(v165 + 36) = v816;
        *(_BYTE *)(v165 + 37) = v809;
        *(_BYTE *)(v165 + 38) = v802;
        *(_BYTE *)(v165 + 39) = v795;
        *(_BYTE *)(v165 + 40) = v789;
        *(_BYTE *)(v165 + 41) = v784;
        *(_QWORD *)(v165 + 42) = v156;
        *(_BYTE *)(v165 + 50) = v154;
        *(_BYTE *)(v165 + 51) = v155;
        *(int8x16_t *)(v165 + 52) = v164;
        *(_BYTE *)(v165 + 68) = v132;
        *(_BYTE *)(v165 + 69) = v139;
        *(_BYTE *)(v165 + 70) = v140;
        *(_BYTE *)(v165 + 71) = v124;
        *(_BYTE *)(v165 + 72) = v130;
        *(_BYTE *)(v165 + 73) = v96;
        *(int8x16_t *)(v165 + 74) = v153;
        *(_BYTE *)(v165 + 90) = v158;
        *(_BYTE *)(v165 + 91) = v159;
        *(_BYTE *)(v165 + 92) = v160;
        *(_BYTE *)(v165 + 93) = v161;
        *(_BYTE *)(v165 + 94) = v162;
        *(_BYTE *)(v165 + 95) = v163;
        *(_BYTE *)(v165 + 96) = v828;
        *(_WORD *)(v165 + 98) = v819;
        *(_WORD *)(v165 + 100) = v157;
        *(_QWORD *)(v165 + 104) = v97;
      }
LABEL_48:
      v82 = v773 + 1;
      if (v773 + 1 == v749)
      {
        v5 = v724;
        OUTLINED_FUNCTION_25();
        v168 = v745[0];
        goto LABEL_52;
      }
    }
  }
LABEL_70:
  OUTLINED_FUNCTION_21_2();
  v224 = OUTLINED_FUNCTION_138();
  v63 = v719;
  sub_2497CC090(v224, (uint64_t)v702);
  swift_bridgeObjectRetain();
  sub_249753AEC();
  v226 = v225;
  OUTLINED_FUNCTION_17_0();
  *(_QWORD *)&v1081[0] = v226;
  sub_2497A191C((uint64_t *)v1081, (uint64_t (*)(uint64_t))sub_24975E0A0, (void (*)(void))sub_24976BA88);
  if (v719)
  {
LABEL_260:
    swift_release();
    __break(1u);
    JUMPOUT(0x2497ABBD0);
  }
  OUTLINED_FUNCTION_17_0();
  v227 = *(_QWORD *)&v1081[0];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_255;
  while (1)
  {
    v228 = *(_QWORD *)(v227 + 16);
    if (!v228)
    {
      __break(1u);
      goto LABEL_257;
    }
    v975 = v63;
    v641 = v227;
    v230 = *(_BYTE *)(v227 + 32);
    v229 = (char *)(v227 + 32);
    v231 = v228 - 1;
    v941 = v229[1];
    v1005 = v229[2];
    v1015 = v229[3];
    v1023 = v229[4];
    v1030 = v229[5];
    v1039 = v229[6];
    v232 = v229[7];
    v233 = v229[8];
    v234 = v229[9];
    v235 = v229[10];
    v236 = v229[11];
    v989 = v229[12];
    v996 = v229[13];
    v981 = v229[14];
    v237 = v229[15];
    sub_2497ABFE8(v229 + 16, v228 - 1, v229);
    *((_QWORD *)v229 - 2) = v231;
    v967 = v230;
    v63 = v1005;
    v954 = v234;
    sub_2497A2B34();
    if (!v238)
    {
      swift_release();
      v490 = v702[2];
      v491 = v702[3];
      OUTLINED_FUNCTION_24();
      sub_249753D24();
      v493 = v492;
      OUTLINED_FUNCTION_1();
      v494 = *(_QWORD *)(v1054 + 16);
      v495 = MEMORY[0x24BEE4AF8];
      if (v494)
      {
        v1018 = v493;
        v1033 = v490;
        *(_QWORD *)&v1081[0] = MEMORY[0x24BEE4AF8];
        OUTLINED_FUNCTION_65_2();
        sub_24974E400(0, v494, 0);
        v495 = *(_QWORD *)&v1081[0];
        v496 = sub_2497CC86C(v1054);
        v498 = v497;
        do
        {
          if (v496 < 0)
            goto LABEL_248;
          OUTLINED_FUNCTION_172();
          if (v496 >= v500)
            goto LABEL_248;
          if (((*(_QWORD *)(v1054 + 56 + (((unint64_t)v496 >> 3) & 0xFFFFFFFFFFFFF8)) >> v496) & 1) == 0)
            goto LABEL_249;
          if (*(_DWORD *)(v1054 + 36) != v498)
            goto LABEL_250;
          v501 = *(_QWORD *)(v1054 + 48) + 80 * v496;
          v502 = *(_OWORD *)v501;
          v503 = *(_OWORD *)(v501 + 16);
          v504 = *(_OWORD *)(v501 + 32);
          v505 = *(_OWORD *)(v501 + 48);
          v506 = *(_BYTE *)(v501 + 64);
          v63 = *(unsigned __int16 *)(v501 + 66);
          v507 = *(_WORD *)(v501 + 68);
          *(_QWORD *)&v1081[0] = v495;
          v509 = *(_QWORD *)(v495 + 16);
          v508 = *(_QWORD *)(v495 + 24);
          if (v509 >= v508 >> 1)
          {
            v515 = OUTLINED_FUNCTION_80(v508);
            v1008 = v516;
            *(_OWORD *)v992 = v518;
            *(_OWORD *)v999 = v517;
            *(_OWORD *)v984 = v519;
            *(_OWORD *)v970 = v520;
            sub_24974E400(v515, v509 + 1, 1);
            v505 = *(_OWORD *)v970;
            v504 = *(_OWORD *)v984;
            v503 = *(_OWORD *)v992;
            v502 = *(_OWORD *)v999;
            v499 = v1008;
            v495 = *(_QWORD *)&v1081[0];
          }
          *(_QWORD *)(v495 + 16) = v509 + 1;
          v510 = v495 + 70 * v509;
          *(_OWORD *)(v510 + 32) = v502;
          *(_OWORD *)(v510 + 48) = v503;
          *(_OWORD *)(v510 + 64) = v504;
          *(_OWORD *)(v510 + 80) = v505;
          *(_BYTE *)(v510 + 96) = v506;
          *(_WORD *)(v510 + 98) = v63;
          *(_WORD *)(v510 + 100) = v507;
          v511 = sub_2497CD740(v496, v498, v499 & 1, v1054);
          v496 = v511;
          v498 = v512;
          v514 = v513 & 1;
          --v494;
        }
        while (v494);
        sub_249783CBC(v511, v512, v514);
        OUTLINED_FUNCTION_36_5();
        v490 = v1033;
        v493 = v1018;
      }
      *(_QWORD *)&v1081[0] = v495;
      OUTLINED_FUNCTION_24();
      sub_2497A191C((uint64_t *)v1081, (uint64_t (*)(uint64_t))sub_24975E0C0, (void (*)(void))sub_2497AE004);
      if (!v975)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_1();
        v521 = *(_QWORD *)&v1081[0];
        type metadata accessor for CGRect(0);
        sub_2497CC9AC();
        v522 = sub_249836CA0();
        UniversalControlDisplayLayout.init(configuration:devices:displaysID:links:displayFrames:)(v490, v491, v493, 0, 0, v521, v522, v646);
        OUTLINED_FUNCTION_23_1();
        OUTLINED_FUNCTION_36_5();
        swift_unknownObjectRelease();
        goto LABEL_240;
      }
      goto LABEL_260;
    }
    v239 = v238;
    v240 = OUTLINED_FUNCTION_18_1();
    *(_OWORD *)(v240 + 16) = *(_OWORD *)v685;
    *(_BYTE *)(v240 + 32) = v967;
    *(_BYTE *)(v240 + 33) = v941;
    *(_BYTE *)(v240 + 34) = v1005;
    *(_BYTE *)(v240 + 35) = v1015;
    *(_BYTE *)(v240 + 36) = v1023;
    *(_BYTE *)(v240 + 37) = v1030;
    *(_BYTE *)(v240 + 38) = v1039;
    *(_BYTE *)(v240 + 39) = v232;
    *(_BYTE *)(v240 + 40) = v233;
    *(_BYTE *)(v240 + 41) = v954;
    *(_BYTE *)(v240 + 42) = v235;
    *(_BYTE *)(v240 + 43) = v236;
    *(_BYTE *)(v240 + 44) = v989;
    *(_BYTE *)(v240 + 45) = v996;
    *(_BYTE *)(v240 + 46) = v981;
    *(_BYTE *)(v240 + 47) = v237;
    v1050 = sub_2497A1194(v240);
    swift_retain();
    OUTLINED_FUNCTION_138();
    v241 = OUTLINED_FUNCTION_74();
    v628 = v239;
    v63 = v975;
    sub_2497A3854(v241, v239);
    v680 = v975;
    sub_2497A443C();
    v243 = v242;
    v785 = v1054;
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_23_1();
    if (!*(_QWORD *)(v243 + 16))
    {
      OUTLINED_FUNCTION_1();
      goto LABEL_197;
    }
    sub_249753AEC();
    v245 = v244;
    OUTLINED_FUNCTION_1();
    v246 = *(_QWORD *)(v245 + 16);
    v1046 = v245;
    v1047 = v245 + 32;
    if (!v246)
      goto LABEL_196;
    v247 = 0;
    v248 = (2 * v246) | 1;
    v726 = xmmword_24983AE40;
    *(_OWORD *)v721 = xmmword_24983AE50;
    *(_OWORD *)v710 = xmmword_24983AE60;
    *(_OWORD *)v742 = xmmword_24983B6A0;
LABEL_77:
    if (v247 >= (uint64_t)(v248 >> 1))
      goto LABEL_251;
    if (v246 <= v247)
      goto LABEL_252;
    v249 = (unsigned __int8 *)(v1047 + 16 * v247);
    v1031 = *v249;
    v1024 = v249[1];
    v1016 = v249[2];
    v1006 = v249[3];
    v997 = v249[4];
    v990 = v249[5];
    v982 = v249[6];
    v976 = v249[7];
    v968 = v249[8];
    v961 = v249[9];
    v955 = v249[10];
    v949 = v249[11];
    v250 = v249[12];
    v251 = v249[13];
    v252 = v249[14];
    v253 = v249[15];
    v254 = sub_2497CD6C4(v247 + 1, v246, v1046, v1047, v247, v248);
    v256 = v255;
    v258 = v257;
    v260 = v259;
    swift_unknownObjectRelease();
    v1046 = v254;
    v1047 = v256;
    v1048 = v258;
    v1049 = v260;
    OUTLINED_FUNCTION_21_2();
    v261 = OUTLINED_FUNCTION_24();
    sub_2497A0E34(v261, (uint64_t)v702, 0.0, 0.0, 0.0, 0.0);
    OUTLINED_FUNCTION_86_0();
    v735 = v1050;
    OUTLINED_FUNCTION_1();
    v262 = v702[5];
    v63 = v968 | (v961 << 8) | (v955 << 16) | (v949 << 24) | (v250 << 32) | (v251 << 40) | (v252 << 48) | (v253 << 56);
    OUTLINED_FUNCTION_65_2();
    v263 = sub_2497A0898(v1031 | (v1024 << 8) | (v1016 << 16) | (v1006 << 24) | (v997 << 32) | (v990 << 40) | (v982 << 48) | (v976 << 56), v63, v262);
    OUTLINED_FUNCTION_36_5();
    if (!v263)
      break;
    v672 = v263;
    OUTLINED_FUNCTION_22_7();
    v264 = 0;
    v685[0] = MEMORY[0x24BEE4AF8];
    while (1)
    {
      if (v63)
      {
        OUTLINED_FUNCTION_191();
        v888 = v63;
        v896 = v264;
        goto LABEL_104;
      }
      v265 = __OFADD__(v264, 1);
      v266 = v264 + 1;
      if (v265)
      {
        __break(1u);
LABEL_242:
        __break(1u);
LABEL_243:
        __break(1u);
LABEL_244:
        __break(1u);
LABEL_245:
        __break(1u);
LABEL_246:
        __break(1u);
LABEL_247:
        __break(1u);
LABEL_248:
        __break(1u);
LABEL_249:
        __break(1u);
LABEL_250:
        __break(1u);
LABEL_251:
        __break(1u);
LABEL_252:
        __break(1u);
        goto LABEL_253;
      }
      OUTLINED_FUNCTION_188();
      if (v267 == v265)
        goto LABEL_118;
      if (!*(_QWORD *)(v728[0] + 8 * v266))
        break;
LABEL_103:
      OUTLINED_FUNCTION_26_3();
      v888 = v274;
      v896 = v266;
LABEL_104:
      OUTLINED_FUNCTION_132();
      v276 = v275[1];
      v277 = v275[2];
      v278 = v275[3];
      v279 = v275[4];
      v280 = v275[5];
      v281 = v275[6];
      v282 = v275[7];
      v283 = v275[8];
      v284 = v275[9];
      v285.i64[0] = *(_QWORD *)(v275 + 10);
      v909 = v275[18];
      v902 = v275[19];
      v1040 = *(__n128 *)(v275 + 20);
      v840 = v275[36];
      v835 = v275[37];
      v829 = v275[38];
      v822 = v275[39];
      v817 = v275[40];
      v810 = v275[41];
      v286 = *(int8x16_t *)(v275 + 42);
      v869 = v286;
      v287 = v275[58];
      v288 = v275[59];
      v289 = v275[60];
      v290 = v275[61];
      v921 = v275[62];
      v915 = v275[63];
      v803 = v275[64];
      v790 = *((_WORD *)v275 + 33);
      v796 = *((_WORD *)v275 + 34);
      v1 = *(uint8x8_t *)(v275 + 72);
      v847 = *v275;
      v1089[0] = *v275;
      v852 = v276;
      v1089[1] = v276;
      v856 = v277;
      v1089[2] = v277;
      v862 = v278;
      v1089[3] = v278;
      v1089[4] = v279;
      v1089[5] = v280;
      v1089[6] = v281;
      v1089[7] = v282;
      v1089[8] = v283;
      v1089[9] = v284;
      OUTLINED_FUNCTION_141(v286, v291, v285);
      v881 = v292;
      *v292 = v293.i8[4];
      v875 = (_BYTE *)(v294 + 15);
      v927 = v293;
      *(_BYTE *)(v294 + 15) = v293.i8[5];
      if (OUTLINED_FUNCTION_2_18())
        __asm { BR              X8 }
      LODWORD(v745[0]) = v290;
      LODWORD(v748) = v289;
      LODWORD(v751) = v288;
      HIDWORD(v753) = v287;
      v295 = v284;
      v778 = v840;
      v766.i64[0] = v829;
      *(_QWORD *)&v760 = v822;
      v755 = v817;
      v763.n128_u32[0] = v810;
      v757 = v1040;
      v296 = v847;
      v297 = v856;
      v1089[0] = v847;
      v1089[1] = v852;
      v1089[2] = v856;
      v298 = v862;
      v1089[3] = v862;
      v857 = v279;
      v1089[4] = v279;
      v863 = v280;
      v1089[5] = v280;
      v1089[6] = v281;
      v841 = v282;
      v848 = v283;
      v1089[7] = v282;
      v1089[8] = v283;
      v299 = v295;
      v1089[9] = v295;
      *(_DWORD *)&v1089[10] = vmovn_s16((int16x8_t)vzip1q_s8(v927, v869)).u32[0];
      *v881 = v927.i8[4];
      *v875 = v927.i8[5];
      v264 = v896;
      v63 = v888;
      if (!OUTLINED_FUNCTION_2_18())
      {
        *(double *)v300.i64 = OUTLINED_FUNCTION_44_3(v1040);
        v301.i32[1] = v778;
        *(double *)v310.i64 = OUTLINED_FUNCTION_59_1(v300, v302, v303, v304, v305, v306, v307, v308, v309, v620, v628, (uint64_t)v633, v641, (uint64_t)v646, v652, v658, v664, v672, v680,
                                v685[0],
                                v685[1],
                                v696,
                                (uint64_t)v702,
                                v710[0],
                                v710[1],
                                v301);
        OUTLINED_FUNCTION_135(v310, v311);
        OUTLINED_FUNCTION_72_2();
        OUTLINED_FUNCTION_12_8(v312, v313, v314, v315, v316, v622, v629, v635, v642, v648, v654, v660, v666, v673, v681, v687, v692, v698, v704,
          v711);
        v317 = v296;
        v318 = OUTLINED_FUNCTION_74();
        OUTLINED_FUNCTION_133(v318, v319, v320, v321, v322, v323, v324, v325, v623, v630, v636, v643, v649, v655, v661, v667, v674, v682, v688,
          v693,
          v699,
          v705,
          v712,
          v717,
          v721[0],
          SBYTE2(v721[0]),
          SBYTE3(v721[0]),
          SBYTE4(v721[0]),
          SBYTE5(v721[0]),
          SBYTE6(v721[0]),
          SHIBYTE(v721[0]),
          v721[1],
          SBYTE1(v721[1]),
          SWORD1(v721[1]),
          SBYTE4(v721[1]),
          SBYTE5(v721[1]),
          SBYTE6(v721[1]),
          SHIBYTE(v721[1]),
          v726,
          v728[0],
          v728[1],
          v731,
          v735,
          v736,
          *((uint64_t *)&v736 + 1),
          v742[0],
          v742[1],
          v745[0],
          v745[1],
          v748,
          v751,
          v753,
          v817,
          v1040.n128_i64[0],
          v1040.n128_i64[1],
          v822,
          *((uint64_t *)&v760 + 1),
          v763.n128_i64[0],
          v763.n128_i64[1],
          v829,
          v766.i64[1]);
        v327 = v326;
        OUTLINED_FUNCTION_23_1();
        if ((v327 & 1) != 0)
        {
          v328 = v685[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_6_5();
            sub_249752EF4();
            v328 = v346;
          }
          v329 = v778;
          v330 = v835;
          v331 = v766.i8[0];
          v332 = v328;
          v333 = *(_QWORD *)(v328 + 16);
          v685[0] = v332;
          v334 = v869;
          v335 = v763.n128_u8[0];
          v336 = v796;
          v337 = v927.i64[0];
          v338 = BYTE4(v753);
          v339 = v751;
          v340 = v748;
          v341 = v745[0];
          v342 = v921;
          v343 = v915;
          if (v333 >= *(_QWORD *)(v332 + 24) >> 1)
          {
            sub_249752EF4();
            v335 = v763.n128_u8[0];
            v329 = v778;
            v331 = v766.i8[0];
            v343 = v915;
            v342 = v921;
            v341 = v745[0];
            v340 = v748;
            v339 = v751;
            v338 = BYTE4(v753);
            v337 = v927.i64[0];
            v336 = v796;
            v334 = v869;
            v685[0] = v347;
            v330 = v835;
          }
          *(_QWORD *)(v685[0] + 16) = v333 + 1;
          v344 = v685[0] + 80 * v333;
          *(_BYTE *)(v344 + 32) = v317;
          *(_BYTE *)(v344 + 33) = v852;
          *(_BYTE *)(v344 + 34) = v297;
          *(_BYTE *)(v344 + 35) = v298;
          *(_BYTE *)(v344 + 36) = v857;
          *(_BYTE *)(v344 + 37) = v863;
          *(_BYTE *)(v344 + 38) = v281;
          *(_BYTE *)(v344 + 39) = v841;
          *(_BYTE *)(v344 + 40) = v848;
          *(_BYTE *)(v344 + 41) = v299;
          *(_QWORD *)(v344 + 42) = v337;
          *(_BYTE *)(v344 + 50) = v909;
          *(_BYTE *)(v344 + 51) = v902;
          *(__n128 *)(v344 + 52) = v757;
          *(_BYTE *)(v344 + 68) = v329;
          *(_BYTE *)(v344 + 69) = v330;
          *(_BYTE *)(v344 + 70) = v331;
          *(_BYTE *)(v344 + 71) = v760;
          *(_BYTE *)(v344 + 72) = v755;
          *(_BYTE *)(v344 + 73) = v335;
          *(int8x16_t *)(v344 + 74) = v334;
          *(_BYTE *)(v344 + 90) = v338;
          *(_BYTE *)(v344 + 91) = v339;
          *(_BYTE *)(v344 + 92) = v340;
          *(_BYTE *)(v344 + 93) = v341;
          *(_BYTE *)(v344 + 94) = v342;
          *(_BYTE *)(v344 + 95) = v343;
          *(_BYTE *)(v344 + 96) = v803;
          *(_WORD *)(v344 + 98) = v790;
          *(_WORD *)(v344 + 100) = v336;
          *(uint8x8_t *)(v344 + 104) = v1;
        }
      }
    }
    OUTLINED_FUNCTION_53_2();
    if (v267 == v265)
      goto LABEL_118;
    OUTLINED_FUNCTION_52_3();
    if (v269)
      goto LABEL_102;
    OUTLINED_FUNCTION_53_2();
    if (v267 == v265)
      goto LABEL_118;
    OUTLINED_FUNCTION_52_3();
    if (v270)
      goto LABEL_102;
    OUTLINED_FUNCTION_53_2();
    if (v267 == v265)
      goto LABEL_118;
    OUTLINED_FUNCTION_52_3();
    if (v271)
      goto LABEL_102;
    OUTLINED_FUNCTION_53_2();
    if (v267 == v265)
      goto LABEL_118;
    OUTLINED_FUNCTION_52_3();
    if (v272)
      goto LABEL_102;
    OUTLINED_FUNCTION_53_2();
    if (v267 == v265)
    {
LABEL_118:
      OUTLINED_FUNCTION_12_1();
      OUTLINED_FUNCTION_23_1();
      if (*(_QWORD *)(v685[0] + 16))
      {
        sub_2497760E4(0, 1, v685[0]);
        OUTLINED_FUNCTION_129(v1081, (const void *)(v685[0] + 32));
        OUTLINED_FUNCTION_23_1();
        OUTLINED_FUNCTION_87(__src, v1081);
        UniversalControlDevice.externalize(link:)(__src, v1089);
        v983 = v1089[0];
        v348 = v1089[1];
        v349 = v1089[2];
        v350 = v1089[3];
        v351 = v1089[4];
        v352 = v1089[5];
        v353 = v1089[6];
        v1041 = *(int8x16_t *)&v1089[7];
        v1007 = v1090;
        v1017 = v1091;
        v1.i32[0] = v1092;
        v1025 = v1093;
        v1032 = v1094;
        v354 = v1095;
        v63 = v1097;
        v991 = v1096;
        v998 = v1098;
        OUTLINED_FUNCTION_28_0();
        v355 = sub_2497A3014();
        if (v355 >> 62)
        {
          if (sub_249837324())
            goto LABEL_121;
        }
        else if (*(_QWORD *)((v355 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_121:
          sub_2497760E0(0, (v355 & 0xC000000000000001) == 0, v355);
          if ((v355 & 0xC000000000000001) != 0)
          {
            v356 = MEMORY[0x24BCF8148](0, v355);
          }
          else
          {
            v356 = *(_QWORD *)(v355 + 32);
            OUTLINED_FUNCTION_21_2();
          }
          OUTLINED_FUNCTION_1();
          if (swift_weakLoadStrong())
          {
            v956 = v354;
            v969 = v63;
            v942 = (int16x8_t)vmovl_u8(v1);
            v357 = *(_QWORD *)(v356 + 24) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
            OUTLINED_FUNCTION_16();
            v358 = *(_OWORD *)(v357 + 7);
            v870 = *(_BYTE *)(v357 + 23);
            v882 = *(_BYTE *)(v357 + 24);
            v903 = *(_BYTE *)(v357 + 25);
            v910 = *(_BYTE *)(v357 + 26);
            v916 = *(_BYTE *)(v357 + 27);
            v897 = *(_BYTE *)(v357 + 1);
            v950 = *(_BYTE *)v357;
            v889 = *(_BYTE *)(v357 + 2);
            v876 = *(_BYTE *)(v357 + 3);
            v922 = *(_BYTE *)(v357 + 4);
            v928 = *(_BYTE *)(v357 + 5);
            v933 = *(_BYTE *)(v357 + 6);
            LODWORD(v359) = BYTE2(v358);
            HIDWORD(v359) = BYTE3(v358);
            *(double *)v360.i64 = OUTLINED_FUNCTION_136(v359);
            v363.i64[0] = __PAIR64__(v362, v361);
            OUTLINED_FUNCTION_59_1(v360, v364, v365, v366, v367, v368, v369, v370, v371, v620, v628, (uint64_t)v633, v641, (uint64_t)v646, v652, v658, v664, v672, v680,
              v685[0],
              v685[1],
              v696,
              (uint64_t)v702,
              v710[0],
              v710[1],
              v363);
            *(_OWORD *)v937 = v372;
            OUTLINED_FUNCTION_174();
            v63 = v1041.u8[5];
            v842 = v349;
            OUTLINED_FUNCTION_174();
            v378 = v377;
            v379 = vorrq_s8((int8x16_t)vshlq_u64(v375, v376), (int8x16_t)vshlq_u64(v373, v374));
            v382 = *(_BYTE *)(v357 + 28);
            v858 = *(_BYTE *)(v357 + 29);
            v864 = *(_BYTE *)(v357 + 30);
            v384 = *(_BYTE *)(v357 + 31);
            if (static UniversalControlUUID.compare(lhs:rhs:)(v385, v386, v387, *(_QWORD *)&vorr_s8(*(int8x8_t *)v379.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v379, v379, 8uLL)) | (v380 << 8) | ((unint64_t)v377 << 56) | ((unint64_t)v381 << 16) | v383) == -1)
              __asm { BR              X14 }
            v389.i64[1] = v1041.i64[1];
            v390 = vextq_s8(v1041, v388, 0xAuLL);
            v390.i8[6] = v1007;
            v390.i8[7] = v1017;
            v390.i32[2] = vmovn_s16(v942).u32[0];
            v390.i8[12] = v1025;
            v390.i8[13] = v1032;
            v390.i8[14] = v956;
            v390.i8[15] = v950;
            v391 = vext_s8(*(int8x8_t *)v390.i8, *(int8x8_t *)v1041.i8, 5uLL);
            v391.i8[0] = v351;
            v391.i8[1] = v352;
            v391.i8[2] = v353;
            v389.i16[0] = v1041.u8[5];
            v389.i16[1] = v1041.u8[6];
            v389.i16[2] = v1041.u8[7];
            v389.i16[3] = v378;
            LOBYTE(__s2) = v983;
            BYTE1(__s2) = v348;
            BYTE2(__s2) = v842;
            HIBYTE(__s2) = v350;
            *(int8x8_t *)v1058 = v391;
            *(_DWORD *)&v1058[8] = vmovn_s16(v389).u32[0];
            v1059 = v1041.i8[9];
            v1060 = v390;
            v1061 = v897;
            v1062 = v889;
            v1063 = v876;
            v1064 = v922;
            v1065 = v928;
            v1066 = v933;
            v1067 = *(_OWORD *)v937;
            v1068 = v870;
            v1069 = v882;
            v1070 = v903;
            v1071 = v910;
            v1072 = v916;
            v1073 = v382;
            v1074 = v858;
            v1075 = v864;
            v1076 = v384;
            v1077 = v991;
            v1078 = v969;
            v1079 = v998;
            v1080 = v1082;
            sub_2497CBA64((double *)v1081, (uint64_t)v1089);
            sub_2497C258C(v1089, (double *)&__s2);
            OUTLINED_FUNCTION_74();
            OUTLINED_FUNCTION_24();
            sub_249753AE8();
            OUTLINED_FUNCTION_1();
            sub_2497A443C();
            v489 = v488;
            v785 = v1054;
            OUTLINED_FUNCTION_23_1();
            swift_release();
            sub_2497A6514(v489);
            swift_release();
            OUTLINED_FUNCTION_49_0();
          }
          else
          {
            OUTLINED_FUNCTION_12_1();
          }
          swift_release();
          goto LABEL_180;
        }
        OUTLINED_FUNCTION_12_1();
      }
      else
      {
        swift_release();
      }
      swift_bridgeObjectRelease();
      goto LABEL_180;
    }
    OUTLINED_FUNCTION_52_3();
    if (v273)
    {
LABEL_102:
      v266 = v268;
      goto LABEL_103;
    }
    while (1)
    {
      v266 = v268 + 1;
      if (__OFADD__(v268, 1))
        break;
      OUTLINED_FUNCTION_188();
      if (v267 == v265)
        goto LABEL_118;
      v268 = v345 + 1;
      if (*(_QWORD *)(v728[0] + 8 * v266))
        goto LABEL_103;
    }
LABEL_253:
    __break(1u);
LABEL_254:
    __break(1u);
LABEL_255:
    sub_2497C7A98();
    v227 = v619;
  }
  v664 = v968 | (v961 << 8) | (v955 << 16) | (v949 << 24) | (v250 << 32) | (v251 << 40) | (v252 << 48) | (v253 << 56);
  v675 = v1031 | (v1024 << 8) | (v1016 << 16) | (v1006 << 24) | (v997 << 32) | (v990 << 40) | (v982 << 48) | (v976 << 56);
  OUTLINED_FUNCTION_22_7();
  v392 = 0;
  v685[0] = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v63)
    {
      OUTLINED_FUNCTION_191();
      v797 = v63;
      v804 = v392;
      goto LABEL_150;
    }
    v265 = __OFADD__(v392, 1);
    v393 = v392 + 1;
    if (v265)
      goto LABEL_242;
    OUTLINED_FUNCTION_188();
    if (v267 == v265)
      goto LABEL_165;
    if (!*(_QWORD *)(v728[0] + 8 * v393))
      break;
LABEL_149:
    OUTLINED_FUNCTION_26_3();
    v797 = v400;
    v804 = v393;
LABEL_150:
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_159();
    v402 = *(_BYTE *)(v401 + 4);
    v403 = *(_BYTE *)(v401 + 5);
    v404 = *(_BYTE *)(v401 + 6);
    v405 = *(_BYTE *)(v401 + 7);
    v406 = *(_BYTE *)(v401 + 8);
    v407 = *(_BYTE *)(v401 + 9);
    v408.i64[0] = *(_QWORD *)(v401 + 10);
    v923 = *(_BYTE *)(v401 + 18);
    v917 = *(_BYTE *)(v401 + 19);
    v1042 = *(__n128 *)(v401 + 20);
    v853 = *(unsigned __int8 *)(v401 + 36);
    v849 = *(unsigned __int8 *)(v401 + 37);
    v843 = *(_BYTE *)(v401 + 38);
    v836 = *(_BYTE *)(v401 + 39);
    v830 = *(unsigned __int8 *)(v401 + 40);
    v823 = *(unsigned __int8 *)(v401 + 41);
    v409 = *(int8x16_t *)(v401 + 42);
    *(int8x16_t *)v883 = v409;
    v410 = *(unsigned __int8 *)(v401 + 58);
    v411 = *(unsigned __int8 *)(v401 + 59);
    v412 = *(unsigned __int8 *)(v401 + 60);
    v413 = *(unsigned __int8 *)(v401 + 61);
    v911 = *(_BYTE *)(v401 + 62);
    v904 = *(_BYTE *)(v401 + 63);
    v818 = *(unsigned __int8 *)(v401 + 64);
    v791 = *(_WORD *)(v401 + 66);
    v811 = *(_WORD *)(v401 + 68);
    v414 = *(_QWORD *)(v401 + 72);
    v859 = v415;
    v1089[0] = v415;
    v865 = v416;
    v1089[1] = v416;
    v871 = v417;
    v1089[2] = v417;
    v877 = v418;
    v1089[3] = v418;
    v1089[4] = v402;
    v1089[5] = v403;
    v1089[6] = v404;
    v1089[7] = v405;
    v1089[8] = v406;
    v1089[9] = v407;
    OUTLINED_FUNCTION_141(v409, v419, v408);
    v898 = v420;
    *v420 = v421.i8[4];
    v890 = v422 + 15;
    v929 = v421;
    *(_BYTE *)(v422 + 15) = v421.i8[5];
    if (OUTLINED_FUNCTION_2_18())
      __asm { BR              X8 }
    LODWORD(v745[0]) = v413;
    LODWORD(v748) = v412;
    LODWORD(v751) = v411;
    HIDWORD(v753) = v410;
    v766.i32[0] = v853;
    v755 = v849;
    v757.n128_u64[0] = v830;
    LODWORD(v760) = v823;
    v763 = v1042;
    v423 = *(int8x16_t *)v883;
    v424 = (_BYTE *)v890;
    v1045 = *(_OWORD *)v883;
    v1089[0] = v859;
    v1089[1] = v865;
    v1089[2] = v871;
    v1089[3] = v877;
    v884 = v402;
    v1089[4] = v402;
    v891 = v403;
    v1089[5] = v403;
    v1089[6] = v404;
    v1089[7] = v405;
    v1089[8] = v406;
    v425 = v407;
    v1089[9] = v407;
    *(_DWORD *)&v1089[10] = vmovn_s16((int16x8_t)vzip1q_s8(v929, v423)).u32[0];
    *v898 = v929.i8[4];
    *v424 = v929.i8[5];
    v63 = v797;
    v392 = v804;
    if (!OUTLINED_FUNCTION_2_18())
    {
      *(double *)v426.i64 = OUTLINED_FUNCTION_44_3(v1042);
      v427.i32[1] = (char)v853;
      *(double *)v436.i64 = OUTLINED_FUNCTION_59_1(v426, v428, v429, v430, v431, v432, v433, v434, v435, v620, v628, (uint64_t)v633, v641, (uint64_t)v646, v652, v658, v664, v675, v680,
                              v685[0],
                              v685[1],
                              v696,
                              (uint64_t)v702,
                              v710[0],
                              v710[1],
                              v427);
      OUTLINED_FUNCTION_135(v436, v437);
      OUTLINED_FUNCTION_72_2();
      OUTLINED_FUNCTION_12_8(v438, v439, v440, v441, v442, v624, v631, v637, v644, v650, v656, v662, v668, v676, v683, v689, v694, v700, v706,
        v713);
      v443 = OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_133(v443, v444, v445, v446, v447, v448, v449, v450, v625, v632, v638, v645, v651, v657, v663, v669, v677, v684, v690,
        v695,
        v701,
        v707,
        v714,
        v718,
        v721[0],
        SBYTE2(v721[0]),
        SBYTE3(v721[0]),
        SBYTE4(v721[0]),
        SBYTE5(v721[0]),
        SBYTE6(v721[0]),
        SHIBYTE(v721[0]),
        v721[1],
        SBYTE1(v721[1]),
        SWORD1(v721[1]),
        SBYTE4(v721[1]),
        SBYTE5(v721[1]),
        SBYTE6(v721[1]),
        SHIBYTE(v721[1]),
        v726,
        v728[0],
        v728[1],
        v731,
        v735,
        v736,
        *((uint64_t *)&v736 + 1),
        v742[0],
        v742[1],
        v745[0],
        v745[1],
        v748,
        v751,
        v753,
        v849,
        v830,
        v757.n128_i64[1],
        v760,
        *((uint64_t *)&v760 + 1),
        v1042.n128_i64[0],
        v1042.n128_i64[1],
        v766.i64[0],
        v766.i64[1]);
      v452 = v451;
      OUTLINED_FUNCTION_23_1();
      if ((v452 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v453 = v685[0];
        }
        else
        {
          OUTLINED_FUNCTION_29_3();
          v453 = v471;
        }
        v455 = *(_QWORD *)(v453 + 16);
        v454 = *(_QWORD *)(v453 + 24);
        v456 = v1045;
        v457 = v836;
        v458 = v843;
        v459 = v811;
        v460 = v923;
        v461 = v917;
        v462 = v929.i64[0];
        v463 = BYTE4(v753);
        v464 = v751;
        v465 = v748;
        v466 = v745[0];
        v467 = v911;
        v468 = v904;
        if (v455 >= v454 >> 1)
        {
          OUTLINED_FUNCTION_80(v454);
          v774 = v472;
          v779 = v473;
          sub_249752EF4();
          v457 = v774;
          v458 = v779;
          v468 = v904;
          v467 = v911;
          v466 = v745[0];
          v465 = v748;
          v464 = v751;
          v463 = BYTE4(v753);
          v462 = v929.i64[0];
          v461 = v917;
          v460 = v923;
          v459 = v811;
          v456 = v1045;
          v453 = v474;
        }
        *(_QWORD *)(v453 + 16) = v455 + 1;
        v685[0] = v453;
        v469 = v453 + 80 * v455;
        *(_BYTE *)(v469 + 32) = v859;
        *(_BYTE *)(v469 + 33) = v865;
        *(_BYTE *)(v469 + 34) = v871;
        *(_BYTE *)(v469 + 35) = v877;
        *(_BYTE *)(v469 + 36) = v884;
        *(_BYTE *)(v469 + 37) = v891;
        *(_BYTE *)(v469 + 38) = v404;
        *(_BYTE *)(v469 + 39) = v405;
        *(_BYTE *)(v469 + 40) = v406;
        *(_BYTE *)(v469 + 41) = v425;
        *(_QWORD *)(v469 + 42) = v462;
        *(_BYTE *)(v469 + 50) = v460;
        *(_BYTE *)(v469 + 51) = v461;
        *(__n128 *)(v469 + 52) = v763;
        *(_BYTE *)(v469 + 68) = v766.i8[0];
        *(_BYTE *)(v469 + 69) = v755;
        *(_BYTE *)(v469 + 70) = v458;
        *(_BYTE *)(v469 + 71) = v457;
        *(_BYTE *)(v469 + 72) = v757.n128_u8[0];
        *(_BYTE *)(v469 + 73) = v760;
        *(_OWORD *)(v469 + 74) = v456;
        *(_BYTE *)(v469 + 90) = v463;
        *(_BYTE *)(v469 + 91) = v464;
        *(_BYTE *)(v469 + 92) = v465;
        *(_BYTE *)(v469 + 93) = v466;
        *(_BYTE *)(v469 + 94) = v467;
        *(_BYTE *)(v469 + 95) = v468;
        *(_BYTE *)(v469 + 96) = v818;
        *(_WORD *)(v469 + 98) = v791;
        *(_WORD *)(v469 + 100) = v459;
        *(_QWORD *)(v469 + 104) = v414;
      }
    }
  }
  OUTLINED_FUNCTION_53_2();
  if (v267 == v265)
    goto LABEL_165;
  OUTLINED_FUNCTION_52_3();
  if (v395)
    goto LABEL_148;
  OUTLINED_FUNCTION_53_2();
  if (v267 == v265)
    goto LABEL_165;
  OUTLINED_FUNCTION_52_3();
  if (v396)
    goto LABEL_148;
  OUTLINED_FUNCTION_53_2();
  if (v267 == v265)
    goto LABEL_165;
  OUTLINED_FUNCTION_52_3();
  if (v397)
    goto LABEL_148;
  OUTLINED_FUNCTION_53_2();
  if (v267 == v265)
    goto LABEL_165;
  OUTLINED_FUNCTION_52_3();
  if (v398)
    goto LABEL_148;
  OUTLINED_FUNCTION_53_2();
  if (v267 == v265)
    goto LABEL_165;
  OUTLINED_FUNCTION_52_3();
  if (v399)
  {
LABEL_148:
    v393 = v394;
    goto LABEL_149;
  }
  while (1)
  {
    v393 = v394 + 1;
    if (__OFADD__(v394, 1))
      goto LABEL_254;
    OUTLINED_FUNCTION_188();
    if (v267 == v265)
      break;
    v394 = v470 + 1;
    if (*(_QWORD *)(v728[0] + 8 * v393))
      goto LABEL_149;
  }
LABEL_165:
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_23_1();
  v475 = *(_QWORD *)(v685[0] + 16);
  if (v475)
  {
    OUTLINED_FUNCTION_149(MEMORY[0x24BEE4AF8]);
    sub_24974E278();
    v476 = v685[0];
    v477 = *(_QWORD *)v1089;
    v63 = *(_QWORD *)(*(_QWORD *)v1089 + 16);
    v478 = 64;
    do
    {
      v479 = *(_OWORD *)(v476 + v478);
      *(_QWORD *)v1089 = v477;
      v480 = *(_QWORD *)(v477 + 24);
      if (v63 >= v480 >> 1)
      {
        OUTLINED_FUNCTION_130(v480);
        *(_OWORD *)v1043 = v481;
        sub_24974E278();
        v479 = *(_OWORD *)v1043;
        v476 = v685[0];
        v477 = *(_QWORD *)v1089;
      }
      *(_QWORD *)(v477 + 16) = v63 + 1;
      *(_OWORD *)(v477 + 16 * v63 + 32) = v479;
      v478 += 80;
      ++v63;
      --v475;
    }
    while (v475);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v477 = MEMORY[0x24BEE4AF8];
  }
  v482 = sub_2497A1194(v477);
  sub_2497A6514(v482);
  sub_2497C219C((uint64_t)v1089, v675, v664, v483, v484, v485, v486, v487, v620, v628, (uint64_t)v633, v641, (uint64_t)v646, v652, v658, v664, v675, v680, v685[0],
    v685[1],
    v696,
    (uint64_t)v702,
    v710[0],
    v710[1],
    v721[0],
    SWORD1(v721[0]),
    SBYTE4(v721[0]),
    SBYTE5(v721[0]),
    SBYTE6(v721[0]),
    SHIBYTE(v721[0]),
    v721[1],
    SBYTE1(v721[1]),
    SBYTE2(v721[1]),
    SBYTE3(v721[1]),
    SBYTE4(v721[1]),
    SBYTE5(v721[1]),
    SBYTE6(v721[1]),
    SHIBYTE(v721[1]),
    v726,
    v728[0],
    v728[1],
    v731,
    v735,
    v736,
    *((uint64_t *)&v736 + 1),
    v742[0],
    v742[1],
    v745[0],
    v745[1],
    v748,
    v751,
    v753,
    v755,
    v757.n128_i64[0],
    v757.n128_i64[1],
    v760,
    *((uint64_t *)&v760 + 1),
    v763.n128_i64[0],
    v763.n128_i64[1],
    v766.i64[0],
    v766.i64[1]);
LABEL_180:
  v247 = v1048;
  v248 = v1049;
  v246 = v1049 >> 1;
  if (v1048 != v1049 >> 1)
    goto LABEL_77;
LABEL_196:
  swift_unknownObjectRelease();
LABEL_197:
  v523 = sub_2497A6678();
  v524 = *(_QWORD *)(v523 + 16);
  if (v524)
  {
    OUTLINED_FUNCTION_149(MEMORY[0x24BEE4AF8]);
    sub_24974E1E4();
    v525 = *(_QWORD *)v1089;
    v526 = (_WORD *)(v523 + 100);
    v527 = v658;
    do
    {
      v528 = *(_OWORD *)(v526 - 34);
      v529 = *(_OWORD *)(v526 - 26);
      v530 = *(_OWORD *)(v526 - 18);
      v531 = *(_OWORD *)(v526 - 10);
      v532 = *((_BYTE *)v526 - 4);
      v533 = *(v526 - 1);
      v534 = *v526;
      *(_QWORD *)v1089 = v525;
      v536 = *(_QWORD *)(v525 + 16);
      v535 = *(_QWORD *)(v525 + 24);
      if (v536 >= v535 >> 1)
      {
        OUTLINED_FUNCTION_130(v535);
        *(_OWORD *)v1026 = v539;
        *(_OWORD *)v1034 = v538;
        *(_OWORD *)v1019 = v540;
        *(_OWORD *)v1009 = v541;
        sub_24974E1E4();
        v531 = *(_OWORD *)v1009;
        v530 = *(_OWORD *)v1019;
        v529 = *(_OWORD *)v1026;
        v528 = *(_OWORD *)v1034;
        v527 = v658;
        v525 = *(_QWORD *)v1089;
      }
      v526 += 35;
      *(_QWORD *)(v525 + 16) = v536 + 1;
      v537 = v525 + 80 * v536;
      *(_OWORD *)(v537 + 32) = v528;
      *(_OWORD *)(v537 + 48) = v529;
      *(_OWORD *)(v537 + 64) = v530;
      *(_OWORD *)(v537 + 80) = v531;
      *(_BYTE *)(v537 + 96) = v532;
      *(_WORD *)(v537 + 98) = v533;
      *(_WORD *)(v537 + 100) = v534;
      *(_QWORD *)(v537 + 104) = 0;
      --v524;
    }
    while (v524);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_42();
    v525 = MEMORY[0x24BEE4AF8];
    v527 = v658;
  }
  v63 = v785;
  v542 = swift_bridgeObjectRetain();
  v543 = sub_2497A28A4(v542, v527);
  swift_release();
  OUTLINED_FUNCTION_42();
  *(_QWORD *)v1089 = v543;
  sub_24979FB54(v525);
  v544 = *(_QWORD *)v1089;
  OUTLINED_FUNCTION_21_2();
  v545 = sub_2497ABEB4();
  v547 = v546;
  v548 = v702[2];
  v549 = v702[3];
  OUTLINED_FUNCTION_24();
  sub_249753D24();
  v812 = v550;
  OUTLINED_FUNCTION_1();
  if (*(_QWORD *)(v544 + 16))
  {
    v775 = v549;
    v780 = v548;
    v792 = v547;
    v798 = v545;
    v1044 = *(_QWORD *)(v544 + 16);
    swift_bridgeObjectRetain_n();
    v551 = v1044;
    v805 = 0;
    v552 = 0;
    v766.i64[0] = MEMORY[0x24BEE4AF8] + 32;
    v763.n128_u64[0] = v1044 - 1;
    v760 = xmmword_24983AE70;
    v553 = v702;
    v1035 = v544;
    do
    {
      v554 = 80 * v552;
      while (1)
      {
        if (v552 >= *(_QWORD *)(v544 + 16))
          goto LABEL_247;
        if (*(_QWORD *)(v553[5] + 16))
        {
          v555 = *(_BYTE *)(v544 + v554 + 32);
          v556 = *(_QWORD *)(v544 + v554 + 41);
          v905 = *(_BYTE *)(v544 + v554 + 49);
          v899 = *(_BYTE *)(v544 + v554 + 50);
          v892 = *(_BYTE *)(v544 + v554 + 51);
          v1000 = *(int8x16_t *)(v544 + v554 + 52);
          v962 = *(_BYTE *)(v544 + v554 + 68);
          v971 = *(_BYTE *)(v544 + v554 + 69);
          v977 = *(_BYTE *)(v544 + v554 + 70);
          v985 = *(_BYTE *)(v544 + v554 + 71);
          v993 = *(_BYTE *)(v544 + v554 + 72);
          *(_OWORD *)v957 = *(_OWORD *)(v544 + v554 + 73);
          v885 = *(_BYTE *)(v544 + v554 + 89);
          v878 = *(_BYTE *)(v544 + v554 + 90);
          v872 = *(_BYTE *)(v544 + v554 + 91);
          v866 = *(_BYTE *)(v544 + v554 + 92);
          v860 = *(_BYTE *)(v544 + v554 + 93);
          v854 = *(_BYTE *)(v544 + v554 + 94);
          v850 = *(_BYTE *)(v544 + v554 + 95);
          v831 = *(unsigned __int8 *)(v544 + v554 + 96);
          v912 = *(_WORD *)(v544 + v554 + 98);
          v837 = *(_WORD *)(v544 + v554 + 100);
          v943 = *(_BYTE *)(v544 + v554 + 33);
          v938 = *(_BYTE *)(v544 + v554 + 34);
          v951 = *(_BYTE *)(v544 + v554 + 35);
          v934 = *(_BYTE *)(v544 + v554 + 36);
          v924 = *(_BYTE *)(v544 + v554 + 37);
          v844 = *(unsigned __int8 *)(v544 + v554 + 38);
          LODWORD(v557) = v556;
          HIDWORD(v557) = BYTE1(v556);
          v918 = *(unsigned __int8 *)(v544 + v554 + 39);
          OUTLINED_FUNCTION_136(v557);
          OUTLINED_FUNCTION_174();
          v561 = v560.i8[6];
          v562 = vorrq_s8((int8x16_t)vshlq_u64(v559, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64(v558, (uint64x2_t)xmmword_24983AE40));
          *(int8x8_t *)v562.i8 = vorr_s8(*(int8x8_t *)v562.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v562, v562, 8uLL));
          v946 = v560;
          v563.i64[0] = v560.u8[4];
          v563.i64[1] = v560.u8[5];
          OUTLINED_FUNCTION_24_7((unint64_t)v560.u8[6] << 56, v562, (uint64x2_t)vandq_s8(v563, v564), (uint64x2_t)xmmword_24983AE60);
          v930 = v565;
          OUTLINED_FUNCTION_24();
          v544 = v1035;
          sub_2497F1F1C();
          v567 = v566;
          OUTLINED_FUNCTION_1();
          v551 = v1044;
          v553 = v702;
          if ((v567 & 1) != 0)
          {
            if (*(_QWORD *)(v702[5] + 16))
            {
              v63 = v1000.u8[12];
              LODWORD(v568) = v1000.u8[13];
              HIDWORD(v568) = v1000.u8[14];
              OUTLINED_FUNCTION_136(v568);
              v824 = v569;
              OUTLINED_FUNCTION_174();
              v570.i64[0] = LOBYTE(v957[0]);
              v570.i64[1] = BYTE1(v957[0]);
              v572 = (uint64x2_t)vandq_s8(v570, v571);
              v570.i64[0] = BYTE2(v957[0]);
              v570.i64[1] = BYTE3(v957[0]);
              v573 = vorrq_s8((int8x16_t)vshlq_u64(v572, (uint64x2_t)xmmword_24983AE50), (int8x16_t)vshlq_u64((uint64x2_t)vandq_s8(v570, v571), (uint64x2_t)xmmword_24983AE40));
              *(int8x8_t *)v573.i8 = vorr_s8(*(int8x8_t *)v573.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v573, v573, 8uLL));
              v570.i64[0] = BYTE4(v957[0]);
              v570.i64[1] = BYTE5(v957[0]);
              OUTLINED_FUNCTION_24_7((unint64_t)BYTE6(v957[0]) << 56, v573, (uint64x2_t)vandq_s8(v570, v571), (uint64x2_t)xmmword_24983AE60);
              OUTLINED_FUNCTION_24();
              v544 = v1035;
              sub_2497F1F1C();
              v575 = v574;
              OUTLINED_FUNCTION_1();
              v551 = v1044;
              v553 = v702;
              if ((v575 & 1) != 0)
                break;
            }
          }
        }
        ++v552;
        v554 += 80;
        if (v551 == v552)
          goto LABEL_234;
      }
      v751 = v1000.u8[12];
      v576.i16[0] = v1000.u8[12];
      v576.i16[1] = v1000.u8[13];
      v576.i16[2] = v1000.u8[14];
      v576.i16[3] = v824;
      *(int8x8_t *)v577.i8 = vzip1_s8(v946, *(int8x8_t *)v576.i8);
      *(int8x8_t *)v578.i8 = vzip1_s8((int8x8_t)v957[0], *(int8x8_t *)v576.i8);
      *(_DWORD *)v1089 = vmovn_s16(v576).u32[0];
      v1089[4] = v962;
      v1089[5] = v971;
      v1089[6] = v977;
      v1089[7] = v985;
      v1089[8] = v993;
      *(_DWORD *)&v1089[9] = vmovn_s16(v578).u32[0];
      *(_WORD *)&v1089[13] = WORD2(v957[0]);
      v1089[15] = BYTE6(v957[0]);
      LOBYTE(__src[0]) = v555;
      BYTE1(__src[0]) = v943;
      BYTE2(__src[0]) = v938;
      BYTE3(__src[0]) = v951;
      BYTE4(__src[0]) = v934;
      BYTE5(__src[0]) = v924;
      BYTE6(__src[0]) = v844;
      BYTE7(__src[0]) = v918;
      BYTE8(__src[0]) = v930;
      *(_DWORD *)((char *)__src + 9) = vmovn_s16(v577).u32[0];
      *(_WORD *)((char *)__src + 13) = v946.i16[2];
      HIBYTE(__src[0]) = v561;
      if ((OUTLINED_FUNCTION_26_5(v1089, __src) & 0x80000000) != 0)
        __asm { BR              X8 }
      v757.n128_u32[0] = v844;
      LODWORD(v755) = v918;
      HIDWORD(v753) = v930;
      v579 = v971;
      v580 = v977;
      v581 = v985;
      v582 = v993;
      v583 = v837;
      v584 = v1000;
      v551 = v1044;
      v585 = v905;
      v586 = v899;
      v587 = v892;
      v588 = v946;
      v589 = v943;
      v590 = v938;
      v591 = v885;
      v592 = v878;
      v593 = v872;
      v594 = v866;
      v595 = v860;
      v596 = v854;
      v597 = v850;
      v553 = v702;
      if (v805)
      {
        v598 = v805;
        v599 = v962;
      }
      else
      {
        v600 = v633[3];
        if ((uint64_t)((v600 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_259;
        v601 = v600 & 0xFFFFFFFFFFFFFFFELL;
        if (v601 <= 1)
          v602 = 1;
        else
          v602 = v601;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25787FF50);
        v603 = (_QWORD *)OUTLINED_FUNCTION_18_1();
        v604 = (uint64_t)(_swift_stdlib_malloc_size(v603) - 32) / 70;
        v603[2] = v602;
        v603[3] = 2 * v604;
        v605 = (unint64_t)(v603 + 4);
        v606 = v633[3];
        v607 = v606 >> 1;
        v608 = v633;
        v580 = v977;
        if (v633[2])
        {
          if (v603 != v633 || v605 >= (unint64_t)v633 + 70 * v607 + 32)
          {
            v610 = v604;
            memmove(v603 + 4, v633 + 4, 70 * v607);
            v604 = v610;
            v608 = v633;
          }
          v608[2] = 0;
        }
        v766.i64[0] = v605 + 70 * v607;
        v598 = (v604 & 0x7FFFFFFFFFFFFFFFLL) - (v606 >> 1);
        swift_release();
        v633 = v603;
        v553 = v702;
        v544 = v1035;
        v551 = v1044;
        v599 = v962;
        v579 = v971;
        v581 = v985;
        v582 = v993;
        v583 = v837;
        v585 = v905;
        v586 = v899;
        v587 = v892;
        v588 = v946;
        v589 = v943;
        v590 = v938;
        v591 = v885;
        v592 = v878;
        v593 = v872;
        v594 = v866;
        v595 = v860;
        v596 = v854;
        v597 = v850;
        v584 = v1000;
      }
      v265 = __OFSUB__(v598, 1);
      v63 = v598 - 1;
      v805 = v63;
      if (v265)
        goto LABEL_258;
      *(_BYTE *)v766.i64[0] = v555;
      *(_BYTE *)(v766.i64[0] + 1) = v589;
      *(_BYTE *)(v766.i64[0] + 2) = v590;
      *(_BYTE *)(v766.i64[0] + 3) = v951;
      *(_BYTE *)(v766.i64[0] + 4) = v934;
      *(_BYTE *)(v766.i64[0] + 5) = v924;
      *(_BYTE *)(v766.i64[0] + 6) = v844;
      *(_BYTE *)(v766.i64[0] + 7) = v918;
      *(_BYTE *)(v766.i64[0] + 8) = v930;
      *(int8x8_t *)(v766.i64[0] + 9) = v588;
      *(_BYTE *)(v766.i64[0] + 17) = v585;
      *(_BYTE *)(v766.i64[0] + 18) = v586;
      *(_BYTE *)(v766.i64[0] + 19) = v587;
      *(int8x16_t *)(v766.i64[0] + 20) = v584;
      *(_BYTE *)(v766.i64[0] + 36) = v599;
      *(_BYTE *)(v766.i64[0] + 37) = v579;
      *(_BYTE *)(v766.i64[0] + 38) = v580;
      *(_BYTE *)(v766.i64[0] + 39) = v581;
      *(_BYTE *)(v766.i64[0] + 40) = v582;
      *(_OWORD *)(v766.i64[0] + 41) = *(_OWORD *)v957;
      *(_BYTE *)(v766.i64[0] + 57) = v591;
      *(_BYTE *)(v766.i64[0] + 58) = v592;
      *(_BYTE *)(v766.i64[0] + 59) = v593;
      *(_BYTE *)(v766.i64[0] + 60) = v594;
      *(_BYTE *)(v766.i64[0] + 61) = v595;
      *(_BYTE *)(v766.i64[0] + 62) = v596;
      *(_BYTE *)(v766.i64[0] + 63) = v597;
      *(_BYTE *)(v766.i64[0] + 64) = v831;
      *(_WORD *)(v766.i64[0] + 66) = v912;
      *(_WORD *)(v766.i64[0] + 68) = v583;
      v766.i64[0] += 70;
    }
    while (v763.n128_u64[0] != v552++);
LABEL_234:
    OUTLINED_FUNCTION_21_5();
    v612 = (uint64_t)v633;
    v547 = v792;
    v545 = v798;
    v549 = v775;
    v548 = v780;
    v613 = v805;
  }
  else
  {
    swift_bridgeObjectRetain();
    v613 = 0;
    v612 = MEMORY[0x24BEE4AF8];
  }
  v614 = *(_QWORD *)(v612 + 24);
  if (v614 >= 2)
  {
    v615 = v614 >> 1;
    v265 = __OFSUB__(v615, v613);
    v616 = v615 - v613;
    if (!v265)
    {
      *(_QWORD *)(v612 + 16) = v616;
      goto LABEL_239;
    }
LABEL_257:
    __break(1u);
LABEL_258:
    __break(1u);
LABEL_259:
    __break(1u);
  }
LABEL_239:
  OUTLINED_FUNCTION_21_5();
  v617 = OUTLINED_FUNCTION_24();
  v618 = sub_2497CBE60(v617);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1();
  UniversalControlDisplayLayout.init(configuration:devices:displaysID:links:displayFrames:)(v548, v549, v812, v545, v547, v612, v618, v646);
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_21_5();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_1();
  swift_bridgeObjectRelease();
LABEL_240:
  OUTLINED_FUNCTION_161();
}

void sub_2497ABC40(CGFloat *a1@<X0>, uint64_t a2@<X2>, CGFloat *a3@<X8>)
{
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  int64_t v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  _QWORD v27[15];
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_27;
  swift_bridgeObjectRetain();
  v9 = sub_2497F1F1C();
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_27:
    *a3 = v4;
    a3[1] = v5;
    a3[2] = v6;
    a3[3] = v7;
    return;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_retain();
  swift_bridgeObjectRelease();
  v27[14] = v11;
  sub_2497C7A24(*(_QWORD *)(v11 + 24), v27);
  v12 = v27[1];
  v13 = v27[3];
  v14 = v27[4];
  v15 = (unint64_t)(v27[2] + 64) >> 6;
  swift_bridgeObjectRetain_n();
  x = 0.0;
  y = 0.0;
  width = 0.0;
  height = 0.0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v14 &= v14 - 1;
  while (1)
  {
    v32.origin.x = sub_2497A1E9C();
    v32.origin.y = v24;
    v32.size.width = v25;
    v32.size.height = v26;
    v28.origin.x = x;
    v28.origin.y = y;
    v28.size.width = width;
    v28.size.height = height;
    v29 = CGRectUnion(v28, v32);
    x = v29.origin.x;
    y = v29.origin.y;
    width = v29.size.width;
    height = v29.size.height;
    if (v14)
      goto LABEL_4;
LABEL_5:
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v20 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v12 + 8 * v20);
    v22 = v13 + 1;
    if (!v21)
    {
      v22 = v13 + 2;
      if (v13 + 2 >= v15)
        goto LABEL_26;
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v22 = v13 + 3;
        if (v13 + 3 >= v15)
          goto LABEL_26;
        v21 = *(_QWORD *)(v12 + 8 * v22);
        if (!v21)
        {
          v22 = v13 + 4;
          if (v13 + 4 >= v15)
            goto LABEL_26;
          v21 = *(_QWORD *)(v12 + 8 * v22);
          if (!v21)
          {
            v22 = v13 + 5;
            if (v13 + 5 >= v15)
              goto LABEL_26;
            v21 = *(_QWORD *)(v12 + 8 * v22);
            if (!v21)
            {
              v22 = v13 + 6;
              if (v13 + 6 >= v15)
                goto LABEL_26;
              v21 = *(_QWORD *)(v12 + 8 * v22);
              if (!v21)
              {
                v23 = v13 + 7;
                while (v23 < v15)
                {
                  v21 = *(_QWORD *)(v12 + 8 * v23++);
                  if (v21)
                  {
                    v22 = v23 - 1;
                    goto LABEL_22;
                  }
                }
LABEL_26:
                swift_bridgeObjectRelease();
                swift_release();
                v30.origin.x = v4;
                v30.origin.y = v5;
                v30.size.width = v6;
                v30.size.height = v7;
                v33.origin.x = x;
                v33.origin.y = y;
                v33.size.width = width;
                v33.size.height = height;
                v31 = CGRectUnion(v30, v33);
                v4 = v31.origin.x;
                v5 = v31.origin.y;
                v6 = v31.size.width;
                v7 = v31.size.height;
                swift_release();
                goto LABEL_27;
              }
            }
          }
        }
      }
    }
LABEL_22:
    v14 = (v21 - 1) & v21;
    v13 = v22;
  }
  __break(1u);
}

uint64_t sub_2497ABEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_2497A0A14(v0);
  swift_bridgeObjectRelease();
  if (v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    v5 = swift_bridgeObjectRetain();
    sub_249753B68(v5);
    v2 = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v7 = v2;
  sub_2497A1844(&v7, (uint64_t (*)(uint64_t))sub_24975E100, (void (*)(void))sub_2497ACC2C);
  swift_bridgeObjectRelease();
  v3 = Array<A>.displaysID()();
  swift_release();
  return v3;
}

uint64_t UniversalControlDisplaySolver1.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UniversalControlDisplaySolver1.__deallocating_deinit()
{
  UniversalControlDisplaySolver1.deinit();
  return swift_deallocClassInstance();
}

char *sub_2497ABFE8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_12();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_19(a3, result);
  }
  return result;
}

char *sub_2497AC03C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_12();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[80 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_19(a3, result);
  }
  return result;
}

char *sub_2497AC098(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_12();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[70 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_19(a3, result);
  }
  return result;
}

char *sub_2497AC0F8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_12();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_19(a3, result);
  }
  return result;
}

char *sub_2497AC14C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_12();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[64 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_19(a3, result);
  }
  return result;
}

char *sub_2497AC1A8(char *result, size_t a2, char *a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_3_12();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_107_0(a3, result, a2);
  }
  return result;
}

char *sub_2497AC1FC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_12();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_19(a3, result);
  }
  return result;
}

char *sub_2497AC258(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_12();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_19(a3, result);
  }
  return result;
}

char *sub_2497AC2B4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_12();
    result = (char *)OUTLINED_FUNCTION_1_16();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_0_19(a3, result);
  }
  return result;
}

unint64_t sub_2497AC308(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  char v8;

  result = OUTLINED_FUNCTION_54_2(a1, a2, a3, a4, a5);
  if (v8)
    __break(1u);
  else
    *(_QWORD *)(v6 + 16) = v7;
  return result;
}

_OWORD *sub_2497AC324(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_24974BBA8(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_2497AC38C(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

unint64_t sub_2497AC3D0(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t sub_2497AC418(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  __int128 *v35;
  __int128 *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *i;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  __int128 *v98;
  __int128 *v99;
  uint64_t v100;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;
  __int128 v123;
  __int128 __s2;
  __int128 __s1;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;

  v129 = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  result = sub_249837534();
  v118 = v3;
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2)
        return result;
      v90 = (uint64_t *)*a1;
      v91 = -1;
      v92 = 1;
      for (i = (uint64_t *)*a1; ; ++i)
      {
        v94 = v90[v92];
        v95 = v91;
        v96 = i;
        do
        {
          v97 = *v96;
          v98 = (__int128 *)(v94 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
          swift_beginAccess();
          v99 = (__int128 *)(v97 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
          v123 = *v98;
          swift_beginAccess();
          v128 = v123;
          v127 = *v99;
          result = memcmp(&v128, &v127, 0x10uLL);
          if ((result & 0x80000000) == 0)
            break;
          if (!v90)
            goto LABEL_139;
          v100 = *v96;
          v94 = v96[1];
          *v96 = v94;
          v96[1] = v100;
          --v96;
        }
        while (!__CFADD__(v95++, 1));
        ++v92;
        --v91;
        if (v92 == v118)
          return result;
      }
    }
    goto LABEL_134;
  }
  v5 = result;
  sub_24974D058(v3 / 2);
  v116 = v6;
  v126 = v7;
  v112 = a1;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v40 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_97:
    v102 = v10;
    if (v40 < 2)
    {
LABEL_108:
      swift_bridgeObjectRelease();
      if (v118 >= -1)
      {
        *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
        sub_249836EB0();
        return swift_bridgeObjectRelease();
      }
      goto LABEL_140;
    }
    v103 = *v112;
    while (1)
    {
      v104 = v40 - 2;
      if (v40 < 2)
        break;
      if (!v103)
        goto LABEL_144;
      v105 = v102;
      v106 = *(_QWORD *)&v102[16 * v104 + 32];
      v107 = *(_QWORD *)&v102[16 * v40 + 24];
      sub_2497B9FF8((char *)(v103 + 8 * v106), (char *)(v103 + 8 * *(_QWORD *)&v102[16 * v40 + 16]), v103 + 8 * v107, v116);
      if (v1)
        goto LABEL_110;
      if (v107 < v106)
        goto LABEL_129;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v105 = sub_24975DBE8();
      if (v104 >= *((_QWORD *)v105 + 2))
        goto LABEL_130;
      v108 = &v105[16 * v104 + 32];
      *(_QWORD *)v108 = v106;
      *((_QWORD *)v108 + 1) = v107;
      v109 = *((_QWORD *)v105 + 2);
      if (v40 > v109)
        goto LABEL_131;
      memmove(&v105[16 * v40 + 16], &v105[16 * v40 + 32], 16 * (v109 - v40));
      v102 = v105;
      *((_QWORD *)v105 + 2) = v109 - 1;
      v40 = v109 - 1;
      if (v109 <= 2)
        goto LABEL_108;
    }
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  v113 = v5;
  v8 = 0;
  v9 = *a1;
  v111 = *a1 - 8;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v117 = *a1;
  while (1)
  {
    v11 = v8;
    v12 = v8 + 1;
    if (v8 + 1 >= v3)
      goto LABEL_20;
    v13 = *(_QWORD *)(v9 + 8 * v8);
    v14 = (__int128 *)(*(_QWORD *)(v9 + 8 * v12) + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
    swift_beginAccess();
    v15 = (__int128 *)(v13 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
    v119 = *v14;
    swift_beginAccess();
    __s2 = *v15;
    __s1 = v119;
    v16 = memcmp(&__s1, &__s2, 0x10uLL);
    v12 = v11 + 2;
    if (v11 + 2 >= v3)
      goto LABEL_10;
    v17 = v11;
    do
    {
      v18 = v9 + 8 * v17;
      v19 = *(_QWORD *)(v18 + 8);
      v20 = (__int128 *)(*(_QWORD *)(v18 + 16) + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      swift_beginAccess();
      v21 = (__int128 *)(v19 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      v120 = *v20;
      swift_beginAccess();
      __s2 = *v21;
      __s1 = v120;
      if ((memcmp(&__s1, &__s2, 0x10uLL) ^ v16) < 0)
      {
        v12 = v17 + 2;
        v9 = v117;
        v3 = v118;
        if ((v16 & 0x80000000) == 0)
          goto LABEL_20;
LABEL_13:
        if (v12 >= v11)
        {
          if (v11 < v12)
          {
            v23 = (uint64_t *)(v111 + 8 * v12);
            v24 = v12;
            v25 = v11;
            v26 = (uint64_t *)(v9 + 8 * v11);
            do
            {
              if (v25 != --v24)
              {
                if (!v9)
                  goto LABEL_143;
                v27 = *v26;
                *v26 = *v23;
                *v23 = v27;
              }
              ++v25;
              --v23;
              ++v26;
            }
            while (v25 < v24);
          }
          goto LABEL_20;
        }
        goto LABEL_136;
      }
      v22 = v17 + 3;
      ++v17;
      v9 = v117;
      v3 = v118;
    }
    while (v22 < v118);
    v12 = v118;
LABEL_10:
    if (v16 < 0)
      goto LABEL_13;
LABEL_20:
    if (v12 >= v3)
      goto LABEL_36;
    if (__OFSUB__(v12, v11))
      goto LABEL_133;
    if (v12 - v11 >= v113)
      goto LABEL_36;
    if (__OFADD__(v11, v113))
      goto LABEL_137;
    if (v11 + v113 >= v3)
      v28 = v3;
    else
      v28 = v11 + v113;
    if (v28 < v11)
      goto LABEL_138;
    if (v12 != v28)
    {
      v114 = v28;
      v115 = v11;
      v110 = v10;
      v29 = (uint64_t *)(v111 + 8 * v12);
      do
      {
        v30 = v12;
        v31 = *(_QWORD *)(v9 + 8 * v12);
        v32 = v115;
        v33 = v29;
        do
        {
          v34 = *v33;
          v35 = (__int128 *)(v31 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
          swift_beginAccess();
          v36 = (__int128 *)(v34 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
          v121 = *v35;
          swift_beginAccess();
          __s2 = *v36;
          __s1 = v121;
          if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
            break;
          if (!v9)
            goto LABEL_141;
          v37 = *v33;
          v31 = v33[1];
          *v33 = v31;
          v33[1] = v37;
          --v33;
          ++v32;
        }
        while (v30 != v32);
        v12 = v30 + 1;
        ++v29;
      }
      while (v30 + 1 != v114);
      v12 = v114;
      v10 = v110;
      v11 = v115;
    }
LABEL_36:
    if (v12 < v11)
    {
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_24975DAF4(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v39 = *((_QWORD *)v10 + 2);
    v38 = *((_QWORD *)v10 + 3);
    v40 = v39 + 1;
    if (v39 >= v38 >> 1)
      v10 = sub_24975DAF4((char *)(v38 > 1), v39 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v40;
    v41 = v10 + 32;
    v42 = &v10[16 * v39 + 32];
    *(_QWORD *)v42 = v11;
    *((_QWORD *)v42 + 1) = v12;
    v122 = v12;
    if (v39)
      break;
    v40 = 1;
LABEL_84:
    v3 = v118;
    v8 = v122;
    if (v122 >= v118)
      goto LABEL_97;
  }
  while (2)
  {
    v43 = v40 - 1;
    if (v40 >= 4)
    {
      v48 = &v41[16 * v40];
      v49 = *((_QWORD *)v48 - 8);
      v50 = *((_QWORD *)v48 - 7);
      v54 = __OFSUB__(v50, v49);
      v51 = v50 - v49;
      if (v54)
        goto LABEL_117;
      v53 = *((_QWORD *)v48 - 6);
      v52 = *((_QWORD *)v48 - 5);
      v54 = __OFSUB__(v52, v53);
      v46 = v52 - v53;
      v47 = v54;
      if (v54)
        goto LABEL_118;
      v55 = v40 - 2;
      v56 = &v41[16 * v40 - 32];
      v58 = *(_QWORD *)v56;
      v57 = *((_QWORD *)v56 + 1);
      v54 = __OFSUB__(v57, v58);
      v59 = v57 - v58;
      if (v54)
        goto LABEL_119;
      v54 = __OFADD__(v46, v59);
      v60 = v46 + v59;
      if (v54)
        goto LABEL_121;
      if (v60 >= v51)
      {
        v78 = &v41[16 * v43];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v54 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v54)
          goto LABEL_127;
        v71 = v46 < v81;
      }
      else
      {
LABEL_55:
        if ((v47 & 1) != 0)
          goto LABEL_120;
        v55 = v40 - 2;
        v61 = &v41[16 * v40 - 32];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v64 = __OFSUB__(v62, v63);
        v65 = v62 - v63;
        v66 = v64;
        if (v64)
          goto LABEL_122;
        v67 = &v41[16 * v43];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v54 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v54)
          goto LABEL_124;
        if (__OFADD__(v65, v70))
          goto LABEL_126;
        if (v65 + v70 < v46)
          goto LABEL_67;
        v71 = v46 < v70;
      }
      if (v71)
        v43 = v55;
    }
    else
    {
      if (v40 == 3)
      {
        v45 = *((_QWORD *)v10 + 4);
        v44 = *((_QWORD *)v10 + 5);
        v54 = __OFSUB__(v44, v45);
        v46 = v44 - v45;
        v47 = v54;
        goto LABEL_55;
      }
      v72 = *((_QWORD *)v10 + 4);
      v73 = *((_QWORD *)v10 + 5);
      v54 = __OFSUB__(v73, v72);
      v65 = v73 - v72;
      v66 = v54;
LABEL_67:
      if ((v66 & 1) != 0)
        goto LABEL_123;
      v74 = &v41[16 * v43];
      v76 = *(_QWORD *)v74;
      v75 = *((_QWORD *)v74 + 1);
      v54 = __OFSUB__(v75, v76);
      v77 = v75 - v76;
      if (v54)
        goto LABEL_125;
      if (v77 < v65)
        goto LABEL_84;
    }
    v82 = v43 - 1;
    if (v43 - 1 >= v40)
    {
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
    v83 = v9;
    if (!v9)
      goto LABEL_142;
    v84 = v10;
    v85 = &v41[16 * v82];
    v86 = *(_QWORD *)v85;
    v87 = &v41[16 * v43];
    v88 = *((_QWORD *)v87 + 1);
    sub_2497B9FF8((char *)(v83 + 8 * *(_QWORD *)v85), (char *)(v83 + 8 * *(_QWORD *)v87), v83 + 8 * v88, v116);
    if (!v1)
    {
      if (v88 < v86)
        goto LABEL_114;
      if (v43 > *((_QWORD *)v84 + 2))
        goto LABEL_115;
      *(_QWORD *)v85 = v86;
      *(_QWORD *)&v41[16 * v82 + 8] = v88;
      v89 = *((_QWORD *)v84 + 2);
      if (v43 >= v89)
        goto LABEL_116;
      v10 = v84;
      v40 = v89 - 1;
      memmove(&v41[16 * v43], v87 + 16, 16 * (v89 - 1 - v43));
      *((_QWORD *)v84 + 2) = v89 - 1;
      v9 = v117;
      if (v89 <= 2)
        goto LABEL_84;
      continue;
    }
    break;
  }
LABEL_110:
  swift_bridgeObjectRelease();
  if (v118 < -1)
  {
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
  }
  *(_QWORD *)((v126 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
  sub_249836EB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2497ACC2C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char *v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char *v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  int v69;
  char v70;
  int v71;
  int v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  char *v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char *v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  char *v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  BOOL v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  BOOL v139;
  uint64_t v140;
  char v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  BOOL v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  unint64_t v163;
  char *v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  int v216;
  uint64_t v217;
  __int128 v218;
  uint64_t v219;
  __int128 v220;
  __int128 v221;
  char v222;
  __int128 v223;
  char v224;
  char v225;
  char v226;
  char v227;
  char v228;
  char v229;
  char v230;
  char v231;
  char v232;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  char v238;
  char v239;
  char v240;
  char v241;
  char v242;
  char v243;
  char v244;
  char v245;
  char v246;
  char v247;
  char v248;
  char v249;
  char v250;
  char v251;
  char v252;
  char v253;
  char v254;
  char v255;
  char v256;
  char v257;
  char v258;
  char v259;
  char v260;
  char v261;
  char v262;
  char v263;
  char v264;
  char v265;
  char v266;
  uint64_t v267;
  uint64_t *v268;
  uint64_t v269;
  char v270;
  char v271;
  char v272;
  char v273;
  char v274;
  char v275;
  char v276;
  char v277;
  char v278;
  char v279;
  char v280;
  char v281;
  char v282;
  char v283;
  char v284;
  char v285;
  uint64_t v286;
  char v287;
  char v288;
  char v289;
  char v290;
  char v291;
  char v292;
  char v293;
  char v294;
  char v295;
  char v296;
  char v297;
  char v298;
  __int128 __s2;
  __int128 __s1;
  uint64_t v301;
  uint64_t v302;

  v2 = v1;
  v302 = *MEMORY[0x24BDAC8D0];
  v4 = a1[1];
  result = sub_249837534();
  if (result < v4)
  {
    v6 = result;
    sub_24974D070(v4 / 2);
    v182 = v7;
    v301 = v8;
    v177 = v4;
    v172 = a1;
    if (v4 <= 0)
      goto LABEL_112;
    v173 = v6;
    v9 = 0;
    v10 = *a1;
    v171 = *a1 - 8;
    v11 = (char *)MEMORY[0x24BEE4AF8];
    v186 = *a1;
    while (1)
    {
      v12 = v9 + 1;
      v175 = v11;
      v176 = v9;
      if (v9 + 1 >= v4)
        goto LABEL_32;
      v179 = v2;
      v183 = v9 + 1;
      v13 = *(_QWORD *)(v10 + 8 * v9);
      v14 = *(_QWORD *)(v10 + 8 * v12) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
      swift_beginAccess();
      v15 = *(_BYTE *)v14;
      v284 = *(_BYTE *)(v14 + 1);
      v288 = *(_BYTE *)(v14 + 2);
      v291 = *(_BYTE *)(v14 + 3);
      v294 = *(_BYTE *)(v14 + 4);
      v297 = *(_BYTE *)(v14 + 5);
      v16 = *(_BYTE *)(v14 + 6);
      v281 = *(_BYTE *)(v14 + 7);
      v17 = *(_BYTE *)(v14 + 8);
      v278 = *(_BYTE *)(v14 + 9);
      v18 = *(_BYTE *)(v14 + 10);
      v275 = *(_BYTE *)(v14 + 11);
      v19 = *(_BYTE *)(v14 + 12);
      v272 = *(_BYTE *)(v14 + 13);
      v20 = *(_BYTE *)(v14 + 14);
      v223 = *(_OWORD *)(v14 + 16);
      v21 = (char *)(v13 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      LOBYTE(v14) = *(_BYTE *)(v14 + 15);
      swift_beginAccess();
      v22 = *v21;
      v23 = v21[1];
      v24 = v21[2];
      v25 = v21[3];
      v26 = v21[4];
      v27 = v21[5];
      v28 = v21[6];
      v29 = v21[7];
      v30 = v21[8];
      v31 = v21[9];
      v32 = v21[10];
      v33 = v21[11];
      v34 = v21[12];
      v35 = v21[13];
      v36 = v21[14];
      v220 = *((_OWORD *)v21 + 1);
      v37 = v21[15];
      LOBYTE(__s1) = v15;
      BYTE1(__s1) = v284;
      BYTE2(__s1) = v288;
      BYTE3(__s1) = v291;
      BYTE4(__s1) = v294;
      BYTE5(__s1) = v297;
      BYTE6(__s1) = v16;
      BYTE7(__s1) = v281;
      BYTE8(__s1) = v17;
      BYTE9(__s1) = v278;
      BYTE10(__s1) = v18;
      BYTE11(__s1) = v275;
      BYTE12(__s1) = v19;
      BYTE13(__s1) = v272;
      v266 = v20;
      BYTE14(__s1) = v20;
      v38 = v14;
      HIBYTE(__s1) = v14;
      v264 = v22;
      LOBYTE(__s2) = v22;
      v262 = v23;
      BYTE1(__s2) = v23;
      v259 = v24;
      BYTE2(__s2) = v24;
      v256 = v25;
      BYTE3(__s2) = v25;
      v253 = v26;
      BYTE4(__s2) = v26;
      v250 = v27;
      BYTE5(__s2) = v27;
      BYTE6(__s2) = v28;
      v246 = v29;
      BYTE7(__s2) = v29;
      v243 = v30;
      BYTE8(__s2) = v30;
      v240 = v31;
      BYTE9(__s2) = v31;
      v238 = v32;
      BYTE10(__s2) = v32;
      v235 = v33;
      BYTE11(__s2) = v33;
      v232 = v34;
      BYTE12(__s2) = v34;
      v229 = v35;
      BYTE13(__s2) = v35;
      v226 = v36;
      BYTE14(__s2) = v36;
      HIBYTE(__s2) = v37;
      swift_retain();
      swift_retain();
      v39 = memcmp(&__s1, &__s2, 0x10uLL);
      if ((v39 & 0x80000000) != 0)
        goto LABEL_7;
      LOBYTE(__s1) = v264;
      BYTE1(__s1) = v262;
      BYTE2(__s1) = v259;
      BYTE3(__s1) = v256;
      BYTE4(__s1) = v253;
      BYTE5(__s1) = v250;
      BYTE6(__s1) = v28;
      BYTE7(__s1) = v246;
      BYTE8(__s1) = v243;
      BYTE9(__s1) = v240;
      BYTE10(__s1) = v238;
      BYTE11(__s1) = v235;
      BYTE12(__s1) = v232;
      BYTE13(__s1) = v229;
      BYTE14(__s1) = v226;
      HIBYTE(__s1) = v37;
      LOBYTE(__s2) = v15;
      BYTE1(__s2) = v284;
      BYTE2(__s2) = v288;
      BYTE3(__s2) = v291;
      BYTE4(__s2) = v294;
      BYTE5(__s2) = v297;
      BYTE6(__s2) = v16;
      BYTE7(__s2) = v281;
      BYTE8(__s2) = v17;
      BYTE9(__s2) = v278;
      BYTE10(__s2) = v18;
      BYTE11(__s2) = v275;
      BYTE12(__s2) = v19;
      BYTE13(__s2) = v272;
      BYTE14(__s2) = v266;
      HIBYTE(__s2) = v38;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
LABEL_7:
        v216 = v39 >> 31;
        swift_release();
        swift_release();
        v9 = v176;
        v4 = v177;
        v40 = v176 + 2;
        v2 = v179;
        v11 = v175;
        v10 = v186;
        if (v176 + 2 >= v177)
          goto LABEL_23;
      }
      else
      {
        __s2 = v220;
        __s1 = v223;
        v72 = memcmp(&__s1, &__s2, 0x10uLL);
        swift_release();
        swift_release();
        v40 = v176 + 2;
        if (v72 < 0)
        {
          v4 = v177;
          v2 = v179;
          v11 = v175;
          v10 = v186;
          if (v40 >= v177)
          {
            v9 = v176;
            goto LABEL_25;
          }
          v216 = 1;
        }
        else
        {
          v4 = v177;
          v2 = v179;
          v11 = v175;
          v10 = v186;
          if (v40 >= v177)
          {
LABEL_105:
            v12 = v40;
            v9 = v176;
            goto LABEL_32;
          }
          v216 = 0;
        }
      }
      v41 = v40;
      v42 = v183;
      while (1)
      {
        v180 = v2;
        v286 = v41;
        v43 = *(_QWORD *)(v10 + 8 * v42);
        v44 = *(_QWORD *)(v10 + 8 * v41) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
        swift_beginAccess();
        v45 = *(_BYTE *)v44;
        v282 = *(_BYTE *)(v44 + 1);
        v289 = *(_BYTE *)(v44 + 2);
        v292 = *(_BYTE *)(v44 + 3);
        v295 = *(_BYTE *)(v44 + 4);
        v298 = *(_BYTE *)(v44 + 5);
        v46 = *(_BYTE *)(v44 + 6);
        v279 = *(_BYTE *)(v44 + 7);
        v47 = *(_BYTE *)(v44 + 8);
        v276 = *(_BYTE *)(v44 + 9);
        v48 = *(_BYTE *)(v44 + 10);
        v273 = *(_BYTE *)(v44 + 11);
        v49 = *(_BYTE *)(v44 + 12);
        v270 = *(_BYTE *)(v44 + 13);
        v50 = *(_BYTE *)(v44 + 14);
        v221 = *(_OWORD *)(v44 + 16);
        v51 = (char *)(v43 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
        LOBYTE(v44) = *(_BYTE *)(v44 + 15);
        swift_beginAccess();
        v52 = *v51;
        v53 = v51[1];
        v54 = v51[2];
        v55 = v51[3];
        v56 = v51[4];
        v57 = v51[5];
        v58 = v51[6];
        v59 = v51[7];
        v60 = v51[8];
        v61 = v51[9];
        v62 = v51[10];
        v63 = v51[11];
        v64 = v51[12];
        v65 = v51[13];
        v66 = v51[14];
        v218 = *((_OWORD *)v51 + 1);
        LOBYTE(v51) = v51[15];
        LOBYTE(__s1) = v45;
        BYTE1(__s1) = v282;
        BYTE2(__s1) = v289;
        BYTE3(__s1) = v292;
        BYTE4(__s1) = v295;
        BYTE5(__s1) = v298;
        BYTE6(__s1) = v46;
        BYTE7(__s1) = v279;
        BYTE8(__s1) = v47;
        BYTE9(__s1) = v276;
        BYTE10(__s1) = v48;
        BYTE11(__s1) = v273;
        BYTE12(__s1) = v49;
        BYTE13(__s1) = v270;
        v265 = v50;
        BYTE14(__s1) = v50;
        v67 = v44;
        v68 = v52;
        HIBYTE(__s1) = v67;
        LOBYTE(__s2) = v52;
        v263 = v53;
        BYTE1(__s2) = v53;
        v260 = v54;
        BYTE2(__s2) = v54;
        v257 = v55;
        BYTE3(__s2) = v55;
        v254 = v56;
        BYTE4(__s2) = v56;
        v251 = v57;
        BYTE5(__s2) = v57;
        BYTE6(__s2) = v58;
        v247 = v59;
        BYTE7(__s2) = v59;
        v244 = v60;
        BYTE8(__s2) = v60;
        v241 = v61;
        BYTE9(__s2) = v61;
        v239 = v62;
        BYTE10(__s2) = v62;
        v236 = v63;
        BYTE11(__s2) = v63;
        v233 = v64;
        BYTE12(__s2) = v64;
        v230 = v65;
        BYTE13(__s2) = v65;
        v227 = v66;
        BYTE14(__s2) = v66;
        v224 = (char)v51;
        HIBYTE(__s2) = (_BYTE)v51;
        swift_retain();
        swift_retain();
        v69 = memcmp(&__s1, &__s2, 0x10uLL);
        if (v69 < 0)
          goto LABEL_11;
        LOBYTE(__s1) = v68;
        BYTE1(__s1) = v263;
        BYTE2(__s1) = v260;
        BYTE3(__s1) = v257;
        BYTE4(__s1) = v254;
        BYTE5(__s1) = v251;
        BYTE6(__s1) = v58;
        BYTE7(__s1) = v247;
        BYTE8(__s1) = v244;
        BYTE9(__s1) = v241;
        BYTE10(__s1) = v239;
        BYTE11(__s1) = v236;
        BYTE12(__s1) = v233;
        BYTE13(__s1) = v230;
        BYTE14(__s1) = v227;
        HIBYTE(__s1) = v224;
        LOBYTE(__s2) = v45;
        BYTE1(__s2) = v282;
        BYTE2(__s2) = v289;
        BYTE3(__s2) = v292;
        BYTE4(__s2) = v295;
        BYTE5(__s2) = v298;
        BYTE6(__s2) = v46;
        BYTE7(__s2) = v279;
        BYTE8(__s2) = v47;
        BYTE9(__s2) = v276;
        BYTE10(__s2) = v48;
        BYTE11(__s2) = v273;
        BYTE12(__s2) = v49;
        BYTE13(__s2) = v270;
        BYTE14(__s2) = v265;
        HIBYTE(__s2) = v67;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        {
LABEL_11:
          swift_release();
          swift_release();
          v70 = v216 ^ (v69 < 0);
          v2 = v180;
          v4 = v177;
          v11 = v175;
          v10 = v186;
          v40 = v286;
          if ((v70 & 1) != 0)
            goto LABEL_22;
          goto LABEL_12;
        }
        __s2 = v218;
        __s1 = v221;
        v71 = memcmp(&__s1, &__s2, 0x10uLL);
        swift_release();
        swift_release();
        if (v71 < 0)
        {
          v2 = v180;
          v4 = v177;
          v11 = v175;
          v10 = v186;
          v40 = v286;
          if ((v216 & 1) == 0)
            goto LABEL_105;
          goto LABEL_12;
        }
        v2 = v180;
        v4 = v177;
        v11 = v175;
        v10 = v186;
        v40 = v286;
        if ((v216 & 1) != 0)
          break;
LABEL_12:
        v41 = v40 + 1;
        v42 = v40;
        if (v40 + 1 >= v4)
        {
          ++v40;
LABEL_22:
          v9 = v176;
LABEL_23:
          v12 = v40;
          if (v216)
            goto LABEL_24;
          goto LABEL_32;
        }
      }
      v9 = v176;
LABEL_24:
      if (v40 < v9)
        goto LABEL_150;
LABEL_25:
      if (v9 < v40)
      {
        v73 = (uint64_t *)(v171 + 8 * v40);
        v74 = v40;
        v75 = v9;
        v76 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v75 != --v74)
          {
            if (!v10)
              goto LABEL_155;
            v77 = *v76;
            *v76 = *v73;
            *v73 = v77;
          }
          ++v75;
          --v73;
          ++v76;
        }
        while (v75 < v74);
      }
      v12 = v40;
LABEL_32:
      if (v12 < v4)
      {
        if (__OFSUB__(v12, v9))
          goto LABEL_147;
        if (v12 - v9 < v173)
        {
          if (__OFADD__(v9, v173))
            goto LABEL_149;
          if (v9 + v173 >= v4)
            v78 = v4;
          else
            v78 = v9 + v173;
          if (v78 < v9)
            goto LABEL_151;
          if (v12 != v78)
          {
            v181 = v2;
            v79 = (_QWORD *)(v171 + 8 * v12);
            v174 = v78;
            do
            {
              v80 = *(_QWORD *)(v10 + 8 * v12);
              v81 = v9;
              v178 = v79;
              v82 = v79;
              v184 = v12;
              while (1)
              {
                v268 = v82;
                v269 = v81;
                v83 = *v82;
                v84 = (char *)(v80 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
                swift_beginAccess();
                v85 = *v84;
                v283 = v84[1];
                v280 = v84[2];
                v271 = v84[3];
                v296 = v84[4];
                v86 = v84[5];
                v87 = v84[6];
                v277 = v84[7];
                v88 = v84[8];
                v274 = v84[9];
                v89 = v84[10];
                v285 = v84[11];
                v90 = v84[12];
                v287 = v84[13];
                v293 = v84[14];
                v290 = v84[15];
                v267 = v84[16];
                v196 = v84[17];
                v197 = v84[18];
                v219 = v84[19];
                v217 = v84[20];
                v215 = v84[21];
                v214 = v84[22];
                v213 = v84[23];
                v212 = v84[24];
                v211 = v84[25];
                v210 = v84[26];
                v209 = v84[27];
                v208 = v84[28];
                v91 = (char *)(v83 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
                v205 = v84[29];
                v206 = v84[30];
                v207 = v84[31];
                swift_beginAccess();
                v92 = *v91;
                v93 = v91[1];
                v94 = v91[2];
                v95 = v91[3];
                v96 = v91[4];
                v97 = v91[5];
                v98 = v91[6];
                v99 = v91[7];
                v100 = v91[8];
                v101 = v91[9];
                v102 = v91[10];
                v103 = v91[11];
                v104 = v91[12];
                v105 = v91[13];
                v106 = v91[14];
                v107 = v91[15];
                v204 = v91[16];
                v203 = v91[17];
                v202 = v91[18];
                v201 = v91[19];
                v200 = v91[20];
                v199 = v91[21];
                v195 = v91[22];
                v194 = v91[23];
                v198 = v91[24];
                v193 = v91[25];
                v192 = v91[26];
                v191 = v91[27];
                v190 = v91[28];
                v189 = v91[29];
                v188 = v91[30];
                v187 = v91[31];
                LOBYTE(__s1) = v85;
                BYTE1(__s1) = v283;
                BYTE2(__s1) = v280;
                BYTE3(__s1) = v271;
                BYTE4(__s1) = v296;
                BYTE5(__s1) = v86;
                BYTE6(__s1) = v87;
                BYTE7(__s1) = v277;
                BYTE8(__s1) = v88;
                BYTE9(__s1) = v274;
                v261 = v89;
                BYTE10(__s1) = v89;
                BYTE11(__s1) = v285;
                v258 = v90;
                BYTE12(__s1) = v90;
                BYTE13(__s1) = v287;
                BYTE14(__s1) = v293;
                HIBYTE(__s1) = v290;
                v108 = v92;
                LOBYTE(__s2) = v92;
                v109 = v93;
                BYTE1(__s2) = v93;
                v110 = v94;
                BYTE2(__s2) = v94;
                v255 = v95;
                BYTE3(__s2) = v95;
                v252 = v96;
                BYTE4(__s2) = v96;
                v249 = v97;
                BYTE5(__s2) = v97;
                v248 = v98;
                BYTE6(__s2) = v98;
                v245 = v99;
                BYTE7(__s2) = v99;
                v242 = v100;
                BYTE8(__s2) = v100;
                BYTE9(__s2) = v101;
                v237 = v102;
                BYTE10(__s2) = v102;
                v234 = v103;
                BYTE11(__s2) = v103;
                v231 = v104;
                BYTE12(__s2) = v104;
                v228 = v105;
                BYTE13(__s2) = v105;
                v225 = v106;
                BYTE14(__s2) = v106;
                v222 = v107;
                HIBYTE(__s2) = v107;
                swift_retain();
                swift_retain();
                if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                {
                  LOBYTE(__s1) = v108;
                  BYTE1(__s1) = v109;
                  BYTE2(__s1) = v110;
                  BYTE3(__s1) = v255;
                  BYTE4(__s1) = v252;
                  BYTE5(__s1) = v249;
                  BYTE6(__s1) = v248;
                  BYTE7(__s1) = v245;
                  BYTE8(__s1) = v242;
                  BYTE9(__s1) = v101;
                  BYTE10(__s1) = v237;
                  BYTE11(__s1) = v234;
                  BYTE12(__s1) = v231;
                  BYTE13(__s1) = v228;
                  BYTE14(__s1) = v225;
                  HIBYTE(__s1) = v222;
                  LOBYTE(__s2) = v85;
                  BYTE1(__s2) = v283;
                  BYTE2(__s2) = v280;
                  BYTE3(__s2) = v271;
                  BYTE4(__s2) = v296;
                  BYTE5(__s2) = v86;
                  BYTE6(__s2) = v87;
                  BYTE7(__s2) = v277;
                  BYTE8(__s2) = v88;
                  BYTE9(__s2) = v274;
                  BYTE10(__s2) = v261;
                  BYTE11(__s2) = v285;
                  BYTE12(__s2) = v258;
                  BYTE13(__s2) = v287;
                  BYTE14(__s2) = v293;
                  HIBYTE(__s2) = v290;
                  if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                    goto LABEL_50;
                  LOBYTE(__s1) = v267;
                  BYTE1(__s1) = v196;
                  BYTE2(__s1) = v197;
                  BYTE3(__s1) = v219;
                  BYTE4(__s1) = v217;
                  BYTE5(__s1) = v215;
                  BYTE6(__s1) = v214;
                  BYTE7(__s1) = v213;
                  BYTE8(__s1) = v212;
                  BYTE9(__s1) = v211;
                  BYTE10(__s1) = v210;
                  BYTE11(__s1) = v209;
                  BYTE12(__s1) = v208;
                  BYTE13(__s1) = v205;
                  BYTE14(__s1) = v206;
                  HIBYTE(__s1) = v207;
                  LOBYTE(__s2) = v204;
                  BYTE1(__s2) = v203;
                  BYTE2(__s2) = v202;
                  BYTE3(__s2) = v201;
                  BYTE4(__s2) = v200;
                  BYTE5(__s2) = v199;
                  BYTE6(__s2) = v195;
                  BYTE7(__s2) = v194;
                  BYTE8(__s2) = v198;
                  BYTE9(__s2) = v193;
                  BYTE10(__s2) = v192;
                  BYTE11(__s2) = v191;
                  BYTE12(__s2) = v190;
                  BYTE13(__s2) = v189;
                  BYTE14(__s2) = v188;
                  HIBYTE(__s2) = v187;
                  if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                    break;
                }
                swift_release();
                swift_release();
                v10 = v186;
                if (!v186)
                  goto LABEL_153;
                v111 = *v268;
                v80 = v268[1];
                *v268 = v80;
                v268[1] = v111;
                v82 = v268 - 1;
                v81 = v269 + 1;
                v112 = v184;
                if (v184 == v269 + 1)
                  goto LABEL_51;
              }
              static UniversalControlUUID.compare(lhs:rhs:)(v204 | (v203 << 8) | (v202 << 16) | (v201 << 24) | (v200 << 32) | (v199 << 40) | (v195 << 48) | (v194 << 56), v198 | (v193 << 8) | (v192 << 16) | (v191 << 24) | (v190 << 32) | (v189 << 40) | (v188 << 48) | (v187 << 56), v267 | (v196 << 8) | (v197 << 16) | (v219 << 24) | (v217 << 32) | (v215 << 40) | (v214 << 48) | (v213 << 56), v212 | (v211 << 8) | (v210 << 16) | (v209 << 24) | (v208 << 32) | (v205 << 40) | (v206 << 48) | (v207 << 56));
LABEL_50:
              swift_release();
              swift_release();
              v112 = v184;
              v10 = v186;
LABEL_51:
              v12 = v112 + 1;
              v79 = v178 + 1;
              v9 = v176;
            }
            while (v12 != v174);
            v12 = v174;
            v2 = v181;
            v11 = v175;
          }
        }
      }
      if (v12 < v9)
        goto LABEL_146;
      v185 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_24975DAF4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v114 = *((_QWORD *)v11 + 2);
      v113 = *((_QWORD *)v11 + 3);
      v115 = v114 + 1;
      v10 = v186;
      if (v114 >= v113 >> 1)
      {
        v164 = sub_24975DAF4((char *)(v113 > 1), v114 + 1, 1, v11);
        v10 = v186;
        v11 = v164;
      }
      *((_QWORD *)v11 + 2) = v115;
      v116 = v11 + 32;
      v117 = &v11[16 * v114 + 32];
      *(_QWORD *)v117 = v9;
      *((_QWORD *)v117 + 1) = v185;
      if (v114)
      {
        while (2)
        {
          v118 = v115 - 1;
          if (v115 >= 4)
          {
            v123 = &v116[16 * v115];
            v124 = *((_QWORD *)v123 - 8);
            v125 = *((_QWORD *)v123 - 7);
            v129 = __OFSUB__(v125, v124);
            v126 = v125 - v124;
            if (v129)
              goto LABEL_131;
            v128 = *((_QWORD *)v123 - 6);
            v127 = *((_QWORD *)v123 - 5);
            v129 = __OFSUB__(v127, v128);
            v121 = v127 - v128;
            v122 = v129;
            if (v129)
              goto LABEL_132;
            v130 = v115 - 2;
            v131 = &v116[16 * v115 - 32];
            v133 = *(_QWORD *)v131;
            v132 = *((_QWORD *)v131 + 1);
            v129 = __OFSUB__(v132, v133);
            v134 = v132 - v133;
            if (v129)
              goto LABEL_133;
            v129 = __OFADD__(v121, v134);
            v135 = v121 + v134;
            if (v129)
              goto LABEL_135;
            if (v135 >= v126)
            {
              v153 = &v116[16 * v118];
              v155 = *(_QWORD *)v153;
              v154 = *((_QWORD *)v153 + 1);
              v129 = __OFSUB__(v154, v155);
              v156 = v154 - v155;
              if (v129)
                goto LABEL_141;
              v146 = v121 < v156;
            }
            else
            {
LABEL_72:
              if ((v122 & 1) != 0)
                goto LABEL_134;
              v130 = v115 - 2;
              v136 = &v116[16 * v115 - 32];
              v138 = *(_QWORD *)v136;
              v137 = *((_QWORD *)v136 + 1);
              v139 = __OFSUB__(v137, v138);
              v140 = v137 - v138;
              v141 = v139;
              if (v139)
                goto LABEL_136;
              v142 = &v116[16 * v118];
              v144 = *(_QWORD *)v142;
              v143 = *((_QWORD *)v142 + 1);
              v129 = __OFSUB__(v143, v144);
              v145 = v143 - v144;
              if (v129)
                goto LABEL_138;
              if (__OFADD__(v140, v145))
                goto LABEL_140;
              if (v140 + v145 < v121)
                goto LABEL_84;
              v146 = v121 < v145;
            }
            if (v146)
              v118 = v130;
          }
          else
          {
            if (v115 == 3)
            {
              v120 = *((_QWORD *)v11 + 4);
              v119 = *((_QWORD *)v11 + 5);
              v129 = __OFSUB__(v119, v120);
              v121 = v119 - v120;
              v122 = v129;
              goto LABEL_72;
            }
            v147 = *((_QWORD *)v11 + 4);
            v148 = *((_QWORD *)v11 + 5);
            v129 = __OFSUB__(v148, v147);
            v140 = v148 - v147;
            v141 = v129;
LABEL_84:
            if ((v141 & 1) != 0)
              goto LABEL_137;
            v149 = &v116[16 * v118];
            v151 = *(_QWORD *)v149;
            v150 = *((_QWORD *)v149 + 1);
            v129 = __OFSUB__(v150, v151);
            v152 = v150 - v151;
            if (v129)
              goto LABEL_139;
            if (v152 < v140)
              goto LABEL_101;
          }
          v157 = v118 - 1;
          if (v118 - 1 >= v115)
          {
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
            goto LABEL_152;
          }
          if (!v10)
            goto LABEL_154;
          v158 = v11;
          v159 = &v116[16 * v157];
          v160 = *(_QWORD *)v159;
          v161 = &v116[16 * v118];
          v162 = *((_QWORD *)v161 + 1);
          sub_2497BA298((char *)(v10 + 8 * *(_QWORD *)v159), (char *)(v10 + 8 * *(_QWORD *)v161), v10 + 8 * v162, v182);
          if (v2)
          {
LABEL_110:
            swift_bridgeObjectRelease();
            if (v177 >= -1)
              goto LABEL_125;
            __break(1u);
LABEL_112:
            v11 = (char *)MEMORY[0x24BEE4AF8];
            v115 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_113:
            if (v115 >= 2)
            {
              v165 = *v172;
              do
              {
                v166 = v115 - 2;
                if (v115 < 2)
                  goto LABEL_142;
                if (!v165)
                  goto LABEL_156;
                v167 = *(_QWORD *)&v11[16 * v166 + 32];
                v168 = *(_QWORD *)&v11[16 * v115 + 24];
                sub_2497BA298((char *)(v165 + 8 * v167), (char *)(v165 + 8 * *(_QWORD *)&v11[16 * v115 + 16]), v165 + 8 * v168, v182);
                if (v2)
                  goto LABEL_110;
                if (v168 < v167)
                  goto LABEL_143;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v11 = sub_24975DBE8();
                if (v166 >= *((_QWORD *)v11 + 2))
                  goto LABEL_144;
                v169 = &v11[16 * v166 + 32];
                *(_QWORD *)v169 = v167;
                *((_QWORD *)v169 + 1) = v168;
                v170 = *((_QWORD *)v11 + 2);
                if (v115 > v170)
                  goto LABEL_145;
                memmove(&v11[16 * v115 + 16], &v11[16 * v115 + 32], 16 * (v170 - v115));
                *((_QWORD *)v11 + 2) = v170 - 1;
                v115 = v170 - 1;
              }
              while (v170 > 2);
            }
            swift_bridgeObjectRelease();
            if (v177 >= -1)
            {
LABEL_125:
              *(_QWORD *)((v301 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
              sub_249836EB0();
              return swift_bridgeObjectRelease();
            }
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
          }
          if (v162 < v160)
            goto LABEL_128;
          if (v118 > *((_QWORD *)v158 + 2))
            goto LABEL_129;
          *(_QWORD *)v159 = v160;
          *(_QWORD *)&v116[16 * v157 + 8] = v162;
          v163 = *((_QWORD *)v158 + 2);
          if (v118 >= v163)
            goto LABEL_130;
          v11 = v158;
          v115 = v163 - 1;
          memmove(&v116[16 * v118], v161 + 16, 16 * (v163 - 1 - v118));
          *((_QWORD *)v11 + 2) = v163 - 1;
          v10 = v186;
          if (v163 <= 2)
            goto LABEL_101;
          continue;
        }
      }
      v115 = 1;
LABEL_101:
      v4 = v177;
      v9 = v185;
      if (v185 >= v177)
        goto LABEL_113;
    }
  }
  if (v4 < 0)
    goto LABEL_148;
  if (v4)
    return sub_249777500(0, v4, 1, a1);
  return result;
}

uint64_t sub_2497AE004(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  unsigned int v53;
  char v54;
  char v55;
  char v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  unsigned __int8 *v68;
  uint64_t v69;
  unsigned __int8 *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  char v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  int v127;
  uint64_t v128;
  unsigned __int16 *v129;
  uint64_t v130;
  unsigned __int8 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unsigned __int16 *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int v175;
  char v176;
  int v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  unint64_t v199;
  char *v200;
  char *v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  BOOL v213;
  unint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  BOOL v223;
  uint64_t v224;
  char v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  BOOL v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  char *v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unsigned __int16 *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  int v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  unsigned __int8 v297;
  uint64_t v298;
  uint64_t v299;
  unsigned int v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  unsigned __int8 v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  int v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  int v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  unsigned __int8 v444;
  int v445;
  uint64_t v446;
  unsigned __int8 v447;
  int v448;
  unsigned __int8 v449;
  uint64_t v450;
  int v451;
  unsigned __int8 v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  unsigned __int8 v456;
  uint64_t v457;
  uint64_t v458;
  unsigned int v459;
  uint64_t v460;
  uint64_t v461;
  unsigned __int8 v462;
  uint64_t v463;
  uint64_t v464;
  unsigned __int8 v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  int v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  int v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  int v522;
  uint64_t v523;
  uint64_t v524;
  int v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  int v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  int v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  int v574;
  uint64_t v575;
  uint64_t v576;
  unsigned int v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  unint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  int8x16_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  __int128 v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  int v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  unsigned __int16 v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  unsigned int v685;
  __int128 v686;
  uint64_t v687;
  uint64_t v688;
  unsigned int v689;
  uint64_t v690;
  unsigned int v691;
  unsigned int v692;
  __int128 v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  __int128 v700;
  uint64_t v701;
  unsigned int v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  __int128 v709;
  unsigned __int8 v710;
  uint64_t v711;
  unsigned __int8 v712;
  unsigned __int8 __s2;
  char v714;
  char v715;
  char v716;
  char v717;
  char v718;
  char v719;
  char v720;
  char v721;
  char v722;
  char v723;
  char v724;
  char v725;
  char v726;
  char v727;
  char v728;
  char __s1;
  char v730;
  char v731;
  char v732;
  char v733;
  char v734;
  char v735;
  char v736;
  char v737;
  unsigned __int8 v738;
  char v739;
  char v740;
  char v741;
  char v742;
  char v743;
  char v744;
  uint64_t v745;

  v745 = *MEMORY[0x24BDAC8D0];
  v3 = a1[1];
  result = sub_249837534();
  if (result < v3)
  {
    v5 = result;
    v265 = v1;
    sub_24974CF94(v3 / 2);
    v257 = v6;
    v264 = v7;
    v261 = v3;
    v255 = a1;
    if (v3 <= 0)
    {
      v9 = (char *)MEMORY[0x24BEE4AF8];
      v199 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      goto LABEL_166;
    }
    v256 = v5;
    v8 = 0;
    v269 = *a1;
    v253 = *a1 + 68;
    v254 = *a1 + 34;
    v9 = (char *)MEMORY[0x24BEE4AF8];
LABEL_4:
    v10 = v8 + 1;
    v262 = v8;
    if (v8 + 1 >= v3)
    {
      v43 = v269;
      v44 = v8;
      goto LABEL_76;
    }
    v258 = v9;
    v272 = v8 + 1;
    v11 = (unsigned __int8 *)(v269 + 70 * v10);
    v673 = *v11;
    v12 = v11[1];
    v13 = v11[2];
    v14 = v11[3];
    v683 = v11[4];
    v678 = v11[5];
    v15 = v11[6];
    v16 = v11[7];
    v540 = v11[8];
    v538 = v11[9];
    v537 = v11[10];
    v535 = v11[11];
    v17 = v11[12];
    v18 = v11[13];
    v19 = v11[14];
    v20 = v11[15];
    v470 = v11[16];
    v466 = v11[17];
    v473 = v11[18];
    v427 = v11[19];
    v425 = v11[20];
    v422 = v11[21];
    v418 = v11[22];
    v415 = v11[23];
    v463 = v11[24];
    v460 = v11[25];
    v411 = v11[26];
    v408 = v11[27];
    v405 = v11[28];
    v402 = v11[29];
    v399 = v11[30];
    v396 = v11[31];
    v21 = v11[32];
    v22 = v11[33];
    v23 = v11[34];
    v24 = v11[35];
    v25 = v11[36];
    v26 = v11[37];
    v27 = v11[38];
    v28 = v11[39];
    v29 = v11[40];
    v30 = v11[41];
    v31 = v11[42];
    v32 = v11[43];
    v33 = v11[44];
    v34 = v11[45];
    v35 = v11[46];
    v36 = v11[47];
    v326 = v11[48];
    v543 = v11[49];
    v323 = v11[50];
    v320 = v11[51];
    v317 = v11[52];
    v544 = v11[53];
    v314 = v11[54];
    v311 = v11[55];
    v308 = v11[56];
    v556 = v11[57];
    v305 = v11[58];
    v568 = v11[59];
    v303 = v11[60];
    v565 = v11[61];
    v301 = v11[62];
    v571 = v11[63];
    v298 = v11[64];
    v445 = *((unsigned __int16 *)v11 + 33);
    v574 = *((unsigned __int16 *)v11 + 34);
    v37 = (unsigned __int8 *)(v269 + 70 * v8);
    v533 = *v37;
    v531 = v37[1];
    v529 = v37[2];
    v526 = v37[3];
    v523 = v37[4];
    v520 = v37[5];
    v518 = v37[6];
    v516 = v37[7];
    v669 = v37[8];
    v513 = v37[9];
    v665 = v37[10];
    v660 = v37[11];
    v654 = v37[12];
    v649 = v37[13];
    v645 = v37[14];
    v641 = v37[15];
    v442 = v37[16];
    v439 = v37[17];
    v393 = v37[18];
    v390 = v37[19];
    v386 = v37[20];
    v382 = v37[21];
    v379 = v37[22];
    v376 = v37[23];
    v436 = v37[24];
    v433 = v37[25];
    v373 = v37[26];
    v370 = v37[27];
    v367 = v37[28];
    v364 = v37[29];
    v361 = v37[30];
    v358 = v37[31];
    v589 = v37[32];
    v592 = v37[33];
    v595 = v37[34];
    v598 = v37[35];
    v601 = v37[36];
    v604 = v37[37];
    v607 = v37[38];
    v610 = v37[39];
    v613 = v37[40];
    v616 = v37[41];
    v620 = v37[42];
    v624 = v37[43];
    v628 = v37[44];
    v631 = v37[45];
    v634 = v37[46];
    v637 = v37[47];
    v476 = v37[48];
    v479 = v37[49];
    v482 = v37[50];
    v486 = v37[51];
    v489 = v37[52];
    v343 = v37[53];
    v492 = v37[54];
    v345 = v37[55];
    v346 = v37[56];
    v347 = v37[57];
    v348 = v37[58];
    v349 = v37[59];
    v350 = v37[60];
    v351 = v37[61];
    v352 = v37[62];
    v354 = v23;
    v494 = v37[63];
    v339 = v25;
    v341 = v37[64];
    v430 = *((unsigned __int16 *)v37 + 33);
    v497 = *((unsigned __int16 *)v37 + 34);
    __s1 = v21;
    v730 = v22;
    v731 = v23;
    v559 = v24;
    v732 = v24;
    v733 = v25;
    v561 = v26;
    v734 = v26;
    v335 = v27;
    v337 = v29;
    v735 = v27;
    v736 = v28;
    v737 = v29;
    v738 = v30;
    v328 = v31;
    v331 = v35;
    v739 = v31;
    v553 = v32;
    v740 = v32;
    v333 = v33;
    v741 = v33;
    v546 = v34;
    v742 = v34;
    v743 = v35;
    v548 = v36;
    v744 = v36;
    __s2 = v673;
    v453 = v12;
    v714 = v12;
    v450 = v13;
    v715 = v13;
    v716 = v14;
    v717 = v683;
    v718 = v678;
    v457 = v15;
    v719 = v15;
    v38 = v16;
    v720 = v16;
    v721 = v540;
    v722 = v538;
    v723 = v537;
    v724 = v535;
    v39 = v17;
    v725 = v17;
    v40 = v18;
    v726 = v18;
    v41 = v19;
    v727 = v19;
    v42 = v20;
    v728 = v20;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      __asm { BR              X4 }
    v511 = v673;
    v509 = v453;
    v580 = v41;
    v674 = v21;
    v454 = v22;
    v271 = v28;
    __s1 = v589;
    v730 = v592;
    v731 = v595;
    v732 = v598;
    v733 = v601;
    v734 = v604;
    v735 = v607;
    v736 = v610;
    v737 = v613;
    v738 = v616;
    v739 = v620;
    v740 = v624;
    v741 = v628;
    v742 = v631;
    v743 = v634;
    v744 = v637;
    __s2 = v533;
    v714 = v531;
    v715 = v529;
    v716 = v526;
    v717 = v523;
    v718 = v520;
    v719 = v518;
    v720 = v516;
    v721 = v669;
    v722 = v513;
    v723 = v665;
    v724 = v660;
    v725 = v654;
    v726 = v649;
    v727 = v645;
    v728 = v641;
    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      __asm { BR              X8 }
    __s1 = v511;
    v730 = v509;
    v731 = v450;
    v732 = v14;
    v733 = v683;
    v734 = v678;
    v735 = v457;
    v736 = v38;
    v737 = v540;
    v738 = v538;
    v739 = v537;
    v740 = v535;
    v741 = v39;
    v742 = v40;
    v743 = v41;
    v744 = v42;
    __s2 = v533;
    v714 = v531;
    v715 = v529;
    v716 = v526;
    v717 = v523;
    v718 = v520;
    v719 = v518;
    v720 = v516;
    v721 = v669;
    v722 = v513;
    v723 = v665;
    v724 = v660;
    v725 = v654;
    v726 = v649;
    v727 = v645;
    v728 = v641;
    if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
    {
      v45 = v533 | (v531 << 8) | (v529 << 16) | (v526 << 24) | (v523 << 32) | (v520 << 40) | (v518 << 48) | (v516 << 56);
      v46 = v511 | (v509 << 8) | (v450 << 16) | (v14 << 24) | (v683 << 32) | (v678 << 40) | (v457 << 48) | (v38 << 56);
      v47 = v669 | (v513 << 8) | (v665 << 16) | (v660 << 24) | (v654 << 32) | (v649 << 40) | (v645 << 48) | (v641 << 56);
      v48 = v540 | (v538 << 8) | (v537 << 16) | (v535 << 24) | (v39 << 32) | (v40 << 40) | (v580 << 48) | (v42 << 56);
      v49 = v442 | (v439 << 8);
      v50 = v436 | (v433 << 8);
      v51 = v470 | (v466 << 8);
      v704 = v463 | (v460 << 8);
      v52 = v341 | (v430 << 16);
      v53 = v298 | (v445 << 16);
      if (static UniversalControlUUID.compare(lhs:rhs:)(v45, v47, v46, v48) == -1
        || ((sub_249772148(v46, v48, v45, v47), v54 == 2)
         && (sub_249772148(v51 | (v473 << 16) | (v427 << 24) | (v425 << 32) | (v422 << 40) | (v418 << 48) | (v415 << 56), v704 | (v411 << 16) | (v408 << 24) | (v405 << 32) | (v402 << 40) | (v399 << 48) | (v396 << 56), v49 | (v393 << 16) | (v390 << 24) | (v386 << 32) | (v382 << 40) | (v379 << 48) | (v376 << 56), v50 | (v373 << 16) | (v370 << 24) | (v367 << 32) | (v364 << 40) | (v361 << 48) | (v358 << 56)), v54 == 2)|| (v54 & 1) == 0)&& (((sub_249772148(v45, v47, v46, v48), v55 != 2)|| (sub_249772148(v49 | (v393 << 16) | (v390 << 24) | (v386 << 32) | (v382 << 40) | (v379 << 48) | (v376 << 56), v50 | (v373 << 16) | (v370 << 24) | (v367 << 32) | (v364 << 40) | (v361 << 48) | (v358 << 56), v51 | (v473 << 16) | (v427 << 24) | (v425 << 32) | (v422 << 40) | (v418 << 48) | (v415 << 56), v704 | (v411 << 16) | (v408 << 24) | (v405 << 32) | (v402 << 40) | (v399 << 48) | (v396 << 56)), v55 != 2))&& (v55 & 1) != 0|| (sub_24978B990(v53, v52) & 1) == 0))
      {
        if (static UniversalControlUUID.compare(lhs:rhs:)(v45, v47, v46, v48) == -1
          || static UniversalControlUUID.compare(lhs:rhs:)(v46, v48, v45, v47) != -1
          && ((v56 = sub_24978B8C8(v45, v47, v49 | (v393 << 16) | (v390 << 24) | (v386 << 32) | (v382 << 40) | (v379 << 48) | (v376 << 56), v50 | (v373 << 16) | (v370 << 24) | (v367 << 32) | (v364 << 40) | (v361 << 48) | (v358 << 56), v46, v48, v51 | (v473 << 16) | (v427 << 24) | (v425 << 32) | (v422 << 40) | (v418 << 48) | (v415 << 56), v704 | (v411 << 16) | (v408 << 24) | (v405 << 32) | (v402 << 40) | (v399 << 48) | (v396 << 56)), v56 != 2)|| (v56 = sub_24978B990(v52, v53), v56 != 2))&& (v56 & 1) != 0)
        {
          v3 = v261;
          v10 = v262 + 2;
          if (v262 + 2 >= v261)
            goto LABEL_65;
LABEL_37:
          v270 = 0;
LABEL_38:
          v43 = v269;
          v68 = (unsigned __int8 *)(v254 + 70 * v10);
          v69 = v272;
          while (1)
          {
            v70 = (unsigned __int8 *)(v43 + 70 * v69);
            v587 = *v70;
            v584 = v70[1];
            v274 = v10;
            v581 = v70[2];
            v578 = v70[3];
            v575 = v70[4];
            v572 = v70[5];
            v569 = v70[6];
            v566 = v70[7];
            v684 = v70[8];
            v679 = v70[9];
            v675 = v70[10];
            v670 = v70[11];
            v666 = v70[12];
            v661 = v70[13];
            v655 = v70[14];
            v650 = v70[15];
            v464 = v70[16];
            v461 = v70[17];
            v426 = v70[18];
            v423 = v70[19];
            v419 = v70[20];
            v416 = v70[21];
            v412 = v70[22];
            v409 = v70[23];
            v458 = v70[24];
            v455 = v70[25];
            v406 = v70[26];
            v403 = v70[27];
            v400 = v70[28];
            v397 = v70[29];
            v394 = v70[30];
            v391 = v70[31];
            v590 = v70[32];
            v593 = v70[33];
            v596 = v70[34];
            v599 = v70[35];
            v602 = v70[36];
            v605 = v70[37];
            v608 = v70[38];
            v611 = v70[39];
            v614 = v70[40];
            v617 = v70[41];
            v621 = v70[42];
            v625 = v70[43];
            v629 = v70[44];
            v690 = v70[45];
            v697 = v70[46];
            v706 = v70[47];
            v278 = v70[48];
            v280 = v70[49];
            v282 = v70[50];
            v284 = v70[51];
            v519 = v70[52];
            v521 = v70[53];
            v524 = v70[54];
            v527 = v70[55];
            v286 = v70[56];
            v288 = v70[57];
            v290 = v70[58];
            v292 = v70[59];
            v294 = v70[60];
            v295 = v70[61];
            v296 = v70[62];
            v299 = v70[63];
            v276 = v70[64];
            v451 = *((unsigned __int16 *)v70 + 33);
            v562 = *((unsigned __int16 *)v70 + 34);
            v71 = *(v68 - 34);
            v72 = *(v68 - 33);
            v73 = *(v68 - 32);
            v74 = *(v68 - 31);
            v75 = *(v68 - 30);
            v76 = *(v68 - 29);
            v77 = *(v68 - 28);
            v78 = *(v68 - 27);
            v79 = *(v68 - 26);
            v80 = *(v68 - 25);
            v81 = *(v68 - 24);
            v632 = *(v68 - 23);
            v635 = *(v68 - 22);
            v638 = *(v68 - 21);
            v642 = *(v68 - 20);
            v646 = *(v68 - 19);
            v446 = *(v68 - 18);
            v443 = *(v68 - 17);
            v356 = *(v68 - 16);
            v359 = *(v68 - 15);
            v362 = *(v68 - 14);
            v365 = *(v68 - 13);
            v371 = *(v68 - 12);
            v377 = *(v68 - 11);
            v440 = *(v68 - 10);
            v437 = *(v68 - 9);
            v368 = *(v68 - 8);
            v374 = *(v68 - 7);
            v380 = *(v68 - 6);
            v383 = *(v68 - 5);
            v387 = *(v68 - 4);
            v467 = *(v68 - 3);
            v82 = *v68;
            v83 = v68[1];
            v84 = v68[2];
            v85 = v68[3];
            v86 = v68[4];
            v87 = v68[5];
            v88 = v68[6];
            v89 = v68[7];
            v90 = v68[8];
            v91 = v68[9];
            v92 = v68[10];
            v93 = v68[11];
            v94 = v68[12];
            v95 = v68[13];
            v507 = v68[14];
            v329 = v68[15];
            v510 = v68[16];
            v332 = v68[17];
            v503 = v68[18];
            v334 = v68[19];
            v336 = v68[20];
            v338 = v68[21];
            v501 = v68[22];
            v471 = v68[23];
            v504 = v68[24];
            v474 = v68[25];
            v505 = v68[26];
            v477 = v68[27];
            v480 = v68[28];
            v483 = v68[29];
            v517 = v68[30];
            v448 = *((unsigned __int16 *)v68 + 16);
            v514 = *((unsigned __int16 *)v68 + 17);
            v306 = *(v68 - 2);
            v309 = *(v68 - 1);
            __s1 = *(v68 - 2);
            v730 = v309;
            v487 = v82;
            v731 = v82;
            v312 = v83;
            v315 = v85;
            v732 = v83;
            v490 = v84;
            v733 = v84;
            v734 = v85;
            v735 = v86;
            v318 = v87;
            v321 = v89;
            v736 = v87;
            v495 = v88;
            v737 = v88;
            v738 = v89;
            v498 = v90;
            v739 = v90;
            v324 = v91;
            v327 = v95;
            v740 = v91;
            v499 = v92;
            v741 = v92;
            v500 = v93;
            v742 = v93;
            v512 = v94;
            v743 = v94;
            v744 = v95;
            v431 = v71;
            __s2 = v71;
            v428 = v72;
            v714 = v72;
            v96 = v73;
            v715 = v73;
            v97 = v74;
            v716 = v74;
            v98 = v75;
            v717 = v75;
            v99 = v76;
            v718 = v76;
            v100 = v77;
            v719 = v77;
            v101 = v78;
            v720 = v78;
            v434 = v79;
            v721 = v79;
            v722 = v80;
            v723 = v81;
            v724 = v632;
            v725 = v635;
            v726 = v638;
            v727 = v642;
            v728 = v646;
            if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
              __asm { BR              X26 }
            v557 = v97;
            v554 = v98;
            v550 = v101;
            v344 = v383;
            v342 = v387;
            v340 = v467;
            v384 = v477;
            v388 = v480;
            v468 = v483;
            __s1 = v590;
            v730 = v593;
            v731 = v596;
            v732 = v599;
            v733 = v602;
            v734 = v605;
            v735 = v608;
            v736 = v611;
            v737 = v614;
            v738 = v617;
            v739 = v621;
            v740 = v625;
            v741 = v629;
            v742 = v690;
            v743 = v697;
            v744 = v706;
            __s2 = v587;
            v714 = v584;
            v715 = v581;
            v716 = v578;
            v717 = v575;
            v718 = v572;
            v719 = v569;
            v720 = v566;
            v721 = v684;
            v722 = v679;
            v723 = v675;
            v724 = v670;
            v725 = v666;
            v726 = v661;
            v727 = v655;
            v728 = v650;
            if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
              __asm { BR              X16 }
            v484 = v661;
            v481 = v655;
            v478 = v650;
            v662 = v690;
            v651 = v706;
            v656 = v697;
            v102 = v431 | (v428 << 8) | (v96 << 16) | (v97 << 24) | (v98 << 32) | (v99 << 40) | (v77 << 48) | (v101 << 56);
            v103 = v434 | (v80 << 8) | (v81 << 16) | (v632 << 24) | (v635 << 32) | (v638 << 40) | (v642 << 48) | (v646 << 56);
            v104 = v587 | (v584 << 8) | (v581 << 16) | (v578 << 24) | (v575 << 32) | (v572 << 40) | (v569 << 48) | (v566 << 56);
            v105 = v684 | (v679 << 8) | (v675 << 16) | (v670 << 24) | (v666 << 32) | (v484 << 40) | (v481 << 48) | (v478 << 56);
            v106 = sub_24978B870(v431 | (v428 << 8) | (v96 << 16) | (v557 << 24) | (v554 << 32) | (v99 << 40) | (v100 << 48) | (v550 << 56), v103, v104, v105);
            v698 = v446 | (v443 << 8);
            v707 = v440 | (v437 << 8);
            v107 = v464 | (v461 << 8);
            v108 = v458 | (v455 << 8);
            v691 = v517 | (v448 << 16);
            v109 = v276 | (v451 << 16);
            if (v106 == 2
              && (v106 = sub_24978B8C8(v102, v103, v698 | (v356 << 16) | (v359 << 24) | (v362 << 32) | (v365 << 40) | (v371 << 48) | (v377 << 56), v707 | (v368 << 16) | (v374 << 24) | (v380 << 32) | (v344 << 40) | (v342 << 48) | (v340 << 56), v104, v105, v107 | (v426 << 16) | (v423 << 24) | (v419 << 32) | (v416 << 40) | (v412 << 48) | (v409 << 56), v108 | (v406 << 16) | (v403 << 24) | (v400 << 32) | (v397 << 40) | (v394 << 48) | (v391 << 56)), v106 == 2)&& (v106 = sub_24978B990(v691, v109), v106 == 2)|| (v106 & 1) == 0)
            {
              v110 = sub_24978B870(v104, v105, v102, v103);
              if (v110 != 2
                || (v110 = sub_24978B8C8(v104, v105, v107 | (v426 << 16) | (v423 << 24) | (v419 << 32) | (v416 << 40) | (v412 << 48) | (v409 << 56), v108 | (v406 << 16) | (v403 << 24) | (v400 << 32) | (v397 << 40) | (v394 << 48) | (v391 << 56), v102, v103, v698 | (v356 << 16) | (v359 << 24) | (v362 << 32) | (v365 << 40) | (v371 << 48) | (v377 << 56), v707 | (v368 << 16) | (v374 << 24) | (v380 << 32) | (v344 << 40) | (v342 << 48) | (v340 << 56)), v110 != 2)|| (v110 = sub_24978B990(v109, v691), v110 != 2))
              {
                if ((v110 & 1) != 0)
                {
                  v3 = v261;
                  goto LABEL_61;
                }
              }
              v111 = dword_24983AE80[(char)v517];
              v112 = dword_24983AE80[(char)v276];
              v113 = v306 | (v309 << 8) | (v487 << 16) | (v312 << 24) | (v490 << 32) | (v315 << 40) | (v86 << 48) | (v318 << 56);
              v114 = v495 | (v321 << 8) | (v498 << 16) | (v324 << 24) | (v499 << 32) | (v500 << 40) | (v512 << 48) | (v327 << 56);
              v115 = v590 | (v593 << 8) | (v596 << 16) | (v599 << 24) | (v602 << 32) | (v605 << 40) | (v608 << 48) | (v611 << 56);
              v116 = v614 | (v617 << 8) | (v621 << 16) | (v625 << 24) | (v629 << 32) | (v662 << 40) | (v656 << 48) | (v651 << 56);
              v117 = sub_24978B870(v113, v114, v115, v116);
              v699 = v507 | (v329 << 8);
              v708 = v501 | (v471 << 8);
              v118 = v278 | (v280 << 8);
              v119 = v286 | (v288 << 8);
              v120 = v111 | (v514 << 16);
              v692 = v112 | (v562 << 16);
              if (v117 == 2
                && (v117 = sub_24978B8C8(v113, v114, v699 | (v510 << 16) | (v332 << 24) | (v503 << 32) | (v334 << 40) | (v336 << 48) | (v338 << 56), v708 | (v504 << 16) | (v474 << 24) | (v505 << 32) | (v384 << 40) | (v388 << 48) | (v468 << 56), v115, v116, v118 | (v282 << 16) | (v284 << 24) | (v519 << 32) | (v521 << 40) | (v524 << 48) | (v527 << 56), v119 | (v290 << 16) | (v292 << 24) | (v294 << 32) | (v295 << 40) | (v296 << 48) | (v299 << 56)), v117 == 2)&& (v117 = sub_24978B990(v120, v692), v117 == 2)|| (v117 & 1) == 0)
              {
                v685 = v120;
                v3 = v261;
                if (sub_24978B870(v115, v116, v113, v114) == 2
                  && sub_24978B8C8(v115, v116, v118 | (v282 << 16) | (v284 << 24) | (v519 << 32) | (v521 << 40) | (v524 << 48) | (v527 << 56), v119 | (v290 << 16) | (v292 << 24) | (v294 << 32) | (v295 << 40) | (v296 << 48) | (v299 << 56), v113, v114, v699 | (v510 << 16) | (v332 << 24) | (v503 << 32) | (v334 << 40) | (v336 << 48) | (v338 << 56), v708 | (v504 << 16) | (v474 << 24) | (v505 << 32) | (v384 << 40) | (v388 << 48) | (v468 << 56)) == 2)
                {
                  sub_24978B990(v692, v685);
                }
LABEL_61:
                if ((v270 & 1) != 0)
                {
                  v10 = v274;
                  v9 = v258;
                  v43 = v269;
                  v44 = v262;
                  goto LABEL_68;
                }
                goto LABEL_62;
              }
            }
            v3 = v261;
            if ((v270 & 1) == 0)
            {
              v10 = v274;
LABEL_65:
              v9 = v258;
LABEL_66:
              v43 = v269;
              v44 = v262;
              goto LABEL_76;
            }
LABEL_62:
            v68 += 70;
            v69 = v274;
            v10 = v274 + 1;
            v43 = v269;
            if (v274 + 1 >= v3)
            {
              v9 = v258;
              v44 = v262;
              if (!v270)
                goto LABEL_76;
LABEL_68:
              if (v10 < v44)
                goto LABEL_204;
LABEL_69:
              if (v44 < v10)
              {
                v121 = 70 * v10;
                v266 = v10;
                v122 = v10;
                v123 = v44;
                v124 = 70 * v44;
                do
                {
                  if (v123 != --v122)
                  {
                    if (!v43)
                      goto LABEL_211;
                    v125 = v43 + v121;
                    v126 = *(_BYTE *)(v43 + v124 + 64);
                    v127 = *(_DWORD *)(v43 + v124 + 66);
                    v700 = *(_OWORD *)(v43 + v124 + 16);
                    v709 = *(_OWORD *)(v43 + v124);
                    v686 = *(_OWORD *)(v43 + v124 + 48);
                    v693 = *(_OWORD *)(v43 + v124 + 32);
                    memmove((void *)(v43 + v124), (const void *)(v43 + v121 - 70), 0x46uLL);
                    *(_OWORD *)(v125 - 70) = v709;
                    *(_OWORD *)(v125 - 54) = v700;
                    *(_OWORD *)(v125 - 38) = v693;
                    *(_OWORD *)(v125 - 22) = v686;
                    *(_BYTE *)(v125 - 6) = v126;
                    *(_DWORD *)(v125 - 4) = v127;
                  }
                  ++v123;
                  v121 -= 70;
                  v124 += 70;
                }
                while (v123 < v122);
                v3 = v261;
                v44 = v262;
                v10 = v266;
              }
LABEL_76:
              if (v10 < v3)
              {
                if (__OFSUB__(v10, v44))
                  goto LABEL_202;
                if (v10 - v44 < v256)
                {
                  if (__OFADD__(v44, v256))
                    goto LABEL_206;
                  if (v44 + v256 >= v3)
                    v128 = v3;
                  else
                    v128 = v44 + v256;
                  if (v128 >= v44)
                  {
                    if (v10 != v128)
                    {
                      v259 = v9;
                      v260 = v128;
                      v129 = (unsigned __int16 *)(v253 + 70 * v10);
                      do
                      {
                        v130 = v43 + 70 * v10;
                        v131 = *(_BYTE *)v130;
                        v132 = *(unsigned __int8 *)(v130 + 1);
                        v133 = *(unsigned __int8 *)(v130 + 2);
                        v134 = *(unsigned __int8 *)(v130 + 3);
                        v135 = *(unsigned __int8 *)(v130 + 4);
                        v136 = *(unsigned __int8 *)(v130 + 5);
                        v137 = *(unsigned __int8 *)(v130 + 6);
                        v138 = *(unsigned __int8 *)(v130 + 7);
                        v139 = *(unsigned __int8 *)(v130 + 8);
                        v140 = *(unsigned __int8 *)(v130 + 9);
                        v141 = *(unsigned __int8 *)(v130 + 10);
                        v142 = *(unsigned __int8 *)(v130 + 11);
                        v143 = *(unsigned __int8 *)(v130 + 12);
                        v144 = *(unsigned __int8 *)(v130 + 13);
                        v145 = *(unsigned __int8 *)(v130 + 14);
                        v146 = *(unsigned __int8 *)(v130 + 15);
                        v622 = *(unsigned __int8 *)(v130 + 16);
                        v542 = *(unsigned __int8 *)(v130 + 17);
                        v609 = *(unsigned __int8 *)(v130 + 18);
                        v404 = *(unsigned __int8 *)(v130 + 19);
                        v401 = *(unsigned __int8 *)(v130 + 20);
                        v398 = *(unsigned __int8 *)(v130 + 21);
                        v395 = *(unsigned __int8 *)(v130 + 22);
                        v392 = *(unsigned __int8 *)(v130 + 23);
                        v147 = *(_QWORD *)(v130 + 25);
                        v263 = v129;
                        v148 = v129;
                        v389 = *(_BYTE *)(v130 + 24);
                        v267 = v10;
                        while (1)
                        {
                          v618 = v147;
                          v657 = v143;
                          v663 = v142;
                          v541 = v144;
                          v667 = v140;
                          v539 = v145;
                          v671 = v139;
                          v676 = v138;
                          v680 = v134;
                          v687 = v133;
                          v701 = v132;
                          v710 = v131;
                          v694 = v135;
                          v273 = v44;
                          v149 = *((unsigned __int8 *)v148 - 35);
                          v150 = *((unsigned __int8 *)v148 - 34);
                          v151 = *((unsigned __int8 *)v148 - 33);
                          v152 = *((unsigned __int8 *)v148 - 32);
                          v153 = *((unsigned __int8 *)v148 - 31);
                          v154 = *((unsigned __int8 *)v148 - 30);
                          v155 = *((unsigned __int8 *)v148 - 29);
                          v156 = *((unsigned __int8 *)v148 - 28);
                          v157 = *((unsigned __int8 *)v148 - 27);
                          v158 = *((unsigned __int8 *)v148 - 26);
                          v159 = *((unsigned __int8 *)v148 - 25);
                          v160 = *((unsigned __int8 *)v148 - 24);
                          v161 = *((unsigned __int8 *)v148 - 23);
                          v162 = *((unsigned __int8 *)v148 - 22);
                          v163 = *((unsigned __int8 *)v148 - 21);
                          v413 = *((unsigned __int8 *)v148 - 20);
                          v307 = *((unsigned __int8 *)v148 - 19);
                          v407 = *((unsigned __int8 *)v148 - 18);
                          v304 = *((unsigned __int8 *)v148 - 17);
                          v435 = *((unsigned __int8 *)v148 - 16);
                          v302 = *((unsigned __int8 *)v148 - 15);
                          v441 = *((unsigned __int8 *)v148 - 14);
                          v300 = *((unsigned __int8 *)v148 - 13);
                          v444 = *((_BYTE *)v148 - 12);
                          v447 = *((_BYTE *)v148 - 11);
                          v449 = *((_BYTE *)v148 - 10);
                          v452 = *((_BYTE *)v148 - 9);
                          v462 = *((_BYTE *)v148 - 8);
                          v456 = *((_BYTE *)v148 - 7);
                          v465 = *((_BYTE *)v148 - 6);
                          v459 = *((unsigned __int8 *)v148 - 5);
                          v469 = *((unsigned __int8 *)v148 - 4);
                          v536 = *(v148 - 1);
                          v652 = *((unsigned __int8 *)v148 - 138);
                          v438 = *v148;
                          v647 = *((unsigned __int8 *)v148 - 137);
                          v643 = *((unsigned __int8 *)v148 - 136);
                          v639 = *((unsigned __int8 *)v148 - 135);
                          v636 = *((unsigned __int8 *)v148 - 134);
                          v633 = *((unsigned __int8 *)v148 - 133);
                          v630 = *((unsigned __int8 *)v148 - 132);
                          v606 = *((unsigned __int8 *)v148 - 131);
                          v603 = *((unsigned __int8 *)v148 - 130);
                          v600 = *((unsigned __int8 *)v148 - 129);
                          v597 = *((unsigned __int8 *)v148 - 128);
                          v594 = *((unsigned __int8 *)v148 - 127);
                          v591 = *((unsigned __int8 *)v148 - 126);
                          v626 = *((unsigned __int8 *)v148 - 125);
                          v588 = *((unsigned __int8 *)v148 - 124);
                          v585 = *((unsigned __int8 *)v148 - 123);
                          v534 = *((unsigned __int8 *)v148 - 122);
                          v532 = *((unsigned __int8 *)v148 - 121);
                          v385 = *((unsigned __int8 *)v148 - 120);
                          v381 = *((unsigned __int8 *)v148 - 119);
                          v378 = *((unsigned __int8 *)v148 - 118);
                          v375 = *((unsigned __int8 *)v148 - 117);
                          v372 = *((unsigned __int8 *)v148 - 116);
                          v369 = *((unsigned __int8 *)v148 - 115);
                          v530 = *((unsigned __int8 *)v148 - 114);
                          v528 = *((unsigned __int8 *)v148 - 113);
                          v366 = *((unsigned __int8 *)v148 - 112);
                          v363 = *((unsigned __int8 *)v148 - 111);
                          v360 = *((unsigned __int8 *)v148 - 110);
                          v357 = *((unsigned __int8 *)v148 - 109);
                          v355 = *((unsigned __int8 *)v148 - 108);
                          v353 = *((unsigned __int8 *)v148 - 107);
                          v545 = *((unsigned __int8 *)v148 - 106);
                          v547 = *((unsigned __int8 *)v148 - 105);
                          v549 = *((unsigned __int8 *)v148 - 104);
                          v551 = *((unsigned __int8 *)v148 - 103);
                          v552 = *((unsigned __int8 *)v148 - 102);
                          v555 = *((unsigned __int8 *)v148 - 101);
                          v558 = *((unsigned __int8 *)v148 - 100);
                          v560 = *((unsigned __int8 *)v148 - 99);
                          v563 = *((unsigned __int8 *)v148 - 98);
                          v564 = *((unsigned __int8 *)v148 - 97);
                          v567 = *((unsigned __int8 *)v148 - 96);
                          v570 = *((unsigned __int8 *)v148 - 95);
                          v573 = *((unsigned __int8 *)v148 - 94);
                          v576 = *((unsigned __int8 *)v148 - 93);
                          v579 = *((unsigned __int8 *)v148 - 92);
                          v582 = *((unsigned __int8 *)v148 - 91);
                          v472 = *((unsigned __int8 *)v148 - 90);
                          v475 = *((unsigned __int8 *)v148 - 89);
                          v277 = *((unsigned __int8 *)v148 - 88);
                          v279 = *((unsigned __int8 *)v148 - 87);
                          v485 = *((unsigned __int8 *)v148 - 86);
                          v488 = *((unsigned __int8 *)v148 - 85);
                          v491 = *((unsigned __int8 *)v148 - 84);
                          v281 = *((unsigned __int8 *)v148 - 83);
                          v493 = *((unsigned __int8 *)v148 - 82);
                          v283 = *((unsigned __int8 *)v148 - 81);
                          v285 = *((unsigned __int8 *)v148 - 80);
                          v287 = *((unsigned __int8 *)v148 - 79);
                          v289 = *((unsigned __int8 *)v148 - 78);
                          v291 = *((unsigned __int8 *)v148 - 77);
                          v293 = *((unsigned __int8 *)v148 - 76);
                          v496 = *((unsigned __int8 *)v148 - 75);
                          v275 = *((unsigned __int8 *)v148 - 74);
                          v525 = *(v148 - 36);
                          v522 = *(v148 - 35);
                          __s1 = HIBYTE(v147);
                          v330 = v149;
                          v730 = v149;
                          v410 = v150;
                          v731 = v150;
                          v732 = v151;
                          v417 = v152;
                          v733 = v152;
                          v322 = v155;
                          v325 = v153;
                          v734 = v153;
                          v424 = v154;
                          v735 = v154;
                          v736 = v155;
                          v429 = v156;
                          v737 = v156;
                          v316 = v159;
                          v319 = v157;
                          v738 = v157;
                          v432 = v158;
                          v739 = v158;
                          v740 = v159;
                          v420 = v160;
                          v741 = v160;
                          v310 = v163;
                          v313 = v161;
                          v742 = v161;
                          v743 = v162;
                          v744 = v163;
                          __s2 = v710;
                          v714 = v701;
                          v164 = v680;
                          v715 = v687;
                          v716 = v680;
                          v717 = v694;
                          v718 = v136;
                          v719 = v137;
                          v720 = v138;
                          v721 = v139;
                          v722 = v140;
                          v723 = v141;
                          v724 = v142;
                          v725 = v143;
                          v726 = v144;
                          v727 = v145;
                          v728 = v146;
                          v297 = HIBYTE(v147);
                          v165 = v136;
                          v166 = v137;
                          v167 = v141;
                          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                            return v420;
                          v515 = v165;
                          v506 = v167;
                          v502 = v657;
                          v508 = v622;
                          v681 = v151;
                          v658 = v420;
                          v623 = v413;
                          __s1 = v545;
                          v730 = v547;
                          v731 = v549;
                          v732 = v551;
                          v733 = v552;
                          v734 = v555;
                          v735 = v558;
                          v736 = v560;
                          v737 = v563;
                          v738 = v564;
                          v739 = v567;
                          v740 = v570;
                          v741 = v573;
                          v742 = v576;
                          v743 = v579;
                          v744 = v582;
                          __s2 = v652;
                          v714 = v647;
                          v715 = v643;
                          v716 = v639;
                          v717 = v636;
                          v718 = v633;
                          v719 = v630;
                          v720 = v606;
                          v721 = v603;
                          v722 = v600;
                          v723 = v597;
                          v724 = v594;
                          v725 = v591;
                          v726 = v626;
                          v727 = v588;
                          v728 = v585;
                          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                            __asm { BR              X5 }
                          v421 = v626;
                          v414 = v585;
                          v627 = v576;
                          v586 = v582;
                          v168 = v710 | (unint64_t)(v701 << 8) | (v687 << 16) | (v164 << 24) | (v694 << 32) | (v165 << 40) | (v166 << 48) | (v676 << 56);
                          v169 = v671 | (v667 << 8) | (v506 << 16) | (v663 << 24) | (v502 << 32) | (v541 << 40) | (v539 << 48) | (v146 << 56);
                          v170 = v652 | (v647 << 8) | (v643 << 16) | (v639 << 24) | (v636 << 32) | (v633 << 40) | (v630 << 48) | (v606 << 56);
                          v171 = v603 | (v600 << 8) | (v597 << 16) | (v594 << 24) | (v591 << 32) | (v421 << 40) | (v588 << 48) | (v414 << 56);
                          v172 = sub_24978B870(v710 | (unint64_t)(v701 << 8) | (v687 << 16) | (v164 << 24) | (v694 << 32) | (v515 << 40) | (v166 << 48) | (v676 << 56), v169, v170, v171);
                          v583 = v508 | (v542 << 8);
                          v173 = v534 | (v532 << 8);
                          v174 = v530 | (v528 << 8);
                          v577 = v469 | (v536 << 16);
                          v175 = v275 | (v525 << 16);
                          if (v172 == 2)
                          {
                            v172 = sub_24978B8C8(v168, v169, v583 | (v609 << 16) | (v404 << 24) | (v401 << 32) | (v398 << 40) | (v395 << 48) | (v392 << 56), v389 | (unint64_t)(unsigned __int16)(v618 << 8) | ((unint64_t)BYTE1(v618) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE2(v618) << 24) | ((unint64_t)BYTE3(v618) << 32) | ((unint64_t)BYTE4(v618) << 40) | ((unint64_t)BYTE5(v618) << 48) | ((unint64_t)BYTE6(v618) << 56), v170, v171, v173 | (v385 << 16) | (v381 << 24) | (v378 << 32) | (v375 << 40) | (v372 << 48) | (v369 << 56), v174 | (v366 << 16) | (v363 << 24) | (v360 << 32) | (v357 << 40) | (v355 << 48) | (v353 << 56));
                            if (v172 == 2)
                            {
                              v172 = sub_24978B990(v577, v175);
                              if (v172 == 2)
                                goto LABEL_95;
                            }
                          }
                          if ((v172 & 1) == 0)
                          {
LABEL_95:
                            v176 = sub_24978B870(v170, v171, v168, v169);
                            if (v176 != 2
                              || (v176 = sub_24978B8C8(v170, v171, v173 | (v385 << 16) | (v381 << 24) | (v378 << 32) | (v375 << 40) | (v372 << 48) | (v369 << 56), v174 | (v366 << 16) | (v363 << 24) | (v360 << 32) | (v357 << 40) | (v355 << 48) | (v353 << 56), v168, v169, v583 | (v609 << 16) | (v404 << 24) | (v401 << 32) | (v398 << 40) | (v395 << 48) | (v392 << 56), v389 | (unint64_t)(unsigned __int16)(v618 << 8) | ((unint64_t)BYTE1(v618) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE2(v618) << 24) | ((unint64_t)BYTE3(v618) << 32) | ((unint64_t)BYTE4(v618) << 40) | ((unint64_t)BYTE5(v618) << 48) | ((unint64_t)BYTE6(v618) << 56)), v176 != 2)|| (v176 = sub_24978B990(v175, v577), v176 != 2))
                            {
                              if ((v176 & 1) != 0)
                                goto LABEL_109;
                            }
                            v177 = dword_24983AE80[(char)v469];
                            v178 = dword_24983AE80[(char)v275];
                            v179 = v297 | (unint64_t)(v330 << 8) | (v410 << 16) | (v681 << 24) | (v417 << 32) | (v325 << 40) | (v424 << 48) | (v322 << 56);
                            v180 = v429 | (v319 << 8) | (v432 << 16) | (v316 << 24) | (v658 << 32) | (v313 << 40) | (v162 << 48) | (v310 << 56);
                            v181 = v545 | (v547 << 8) | (v549 << 16) | (v551 << 24) | (v552 << 32) | (v555 << 40) | (v558 << 48) | (v560 << 56);
                            v182 = v563 | (v564 << 8) | (v567 << 16) | (v570 << 24) | (v573 << 32) | (v627 << 40) | (v579 << 48) | (v586 << 56);
                            v183 = sub_24978B870(v179, v180, v181, v182);
                            v711 = v623 | (v307 << 8);
                            v184 = v472 | (v475 << 8);
                            v185 = v493 | (v283 << 8);
                            v702 = v177 | (v438 << 16);
                            v186 = v178 | (v522 << 16);
                            if (v183 == 2)
                            {
                              v183 = sub_24978B8C8(v179, v180, v711 | (v407 << 16) | (v304 << 24) | (v435 << 32) | (v302 << 40) | (v441 << 48) | ((unint64_t)v300 << 56), v444 | (unint64_t)(unsigned __int16)(v447 << 8) | ((unint64_t)v449 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v452 << 24) | ((unint64_t)v462 << 32) | ((unint64_t)v456 << 40) | ((unint64_t)v465 << 48) | ((unint64_t)v459 << 56), v181, v182, v184 | (v277 << 16) | (v279 << 24) | (v485 << 32) | (v488 << 40) | (v491 << 48) | (v281 << 56), v185 | (v285 << 16) | (v287 << 24) | (v289 << 32) | (v291 << 40) | (v293 << 48) | (v496 << 56));
                              if (v183 == 2)
                              {
                                v183 = sub_24978B990(v702, v186);
                                if (v183 == 2)
                                  break;
                              }
                            }
                            if ((v183 & 1) == 0)
                              break;
                          }
                          if (!v269)
                            goto LABEL_209;
                          v712 = *((_BYTE *)v148 - 68);
                          v703 = *((unsigned __int8 *)v148 - 67);
                          v688 = *((unsigned __int8 *)v148 - 66);
                          v682 = *((unsigned __int8 *)v148 - 65);
                          v695 = *((unsigned __int8 *)v148 - 64);
                          v619 = *((unsigned __int8 *)v148 - 63);
                          v615 = *((unsigned __int8 *)v148 - 62);
                          v677 = *((unsigned __int8 *)v148 - 61);
                          v672 = *((unsigned __int8 *)v148 - 60);
                          v668 = *((unsigned __int8 *)v148 - 59);
                          v612 = *((unsigned __int8 *)v148 - 58);
                          v664 = *((unsigned __int8 *)v148 - 57);
                          v659 = *((unsigned __int8 *)v148 - 56);
                          v187 = *((unsigned __int8 *)v148 - 55);
                          v188 = *((unsigned __int8 *)v148 - 54);
                          v189 = *((unsigned __int8 *)v148 - 53);
                          v622 = *((unsigned __int8 *)v148 - 52);
                          v190 = *((unsigned __int8 *)v148 - 51);
                          v609 = *((unsigned __int8 *)v148 - 50);
                          v191 = *((unsigned __int8 *)v148 - 49);
                          v192 = *((unsigned __int8 *)v148 - 48);
                          v193 = *((unsigned __int8 *)v148 - 47);
                          v194 = *((unsigned __int8 *)v148 - 46);
                          v653 = *(unsigned __int16 *)((char *)v148 - 5);
                          v648 = *(_DWORD *)(v148 - 1);
                          v640 = *(int8x16_t *)((char *)v148 - 45);
                          v644 = *(_OWORD *)((char *)v148 - 29);
                          v195 = *(_QWORD *)((char *)v148 - 13);
                          memcpy(v148 - 34, v148 - 69, 0x46uLL);
                          v146 = v189;
                          v145 = v188;
                          v144 = v187;
                          v143 = v659;
                          v142 = v664;
                          v141 = v612;
                          v140 = v668;
                          v139 = v672;
                          v138 = v677;
                          v134 = v682;
                          v137 = v615;
                          v133 = v688;
                          v136 = v619;
                          v135 = v695;
                          v132 = v703;
                          v131 = v712;
                          *((_BYTE *)v148 - 138) = v712;
                          *((_BYTE *)v148 - 137) = v703;
                          *((_BYTE *)v148 - 136) = v688;
                          *((_BYTE *)v148 - 135) = v682;
                          *((_BYTE *)v148 - 134) = v695;
                          *((_BYTE *)v148 - 133) = v619;
                          *((_BYTE *)v148 - 132) = v615;
                          *((_BYTE *)v148 - 131) = v677;
                          *((_BYTE *)v148 - 130) = v672;
                          *((_BYTE *)v148 - 129) = v668;
                          *((_BYTE *)v148 - 128) = v612;
                          *((_BYTE *)v148 - 127) = v664;
                          *((_BYTE *)v148 - 126) = v659;
                          *((_BYTE *)v148 - 125) = v187;
                          *((_BYTE *)v148 - 124) = v188;
                          *((_BYTE *)v148 - 123) = v189;
                          *((_BYTE *)v148 - 122) = v622;
                          v542 = v190;
                          *((_BYTE *)v148 - 121) = v190;
                          *((_BYTE *)v148 - 120) = v609;
                          v404 = v191;
                          *((_BYTE *)v148 - 119) = v191;
                          v401 = v192;
                          *((_BYTE *)v148 - 118) = v192;
                          v398 = v193;
                          *((_BYTE *)v148 - 117) = v193;
                          v395 = v194;
                          *((_BYTE *)v148 - 116) = v194;
                          *(int8x16_t *)((char *)v148 - 115) = v640;
                          *(_OWORD *)((char *)v148 - 99) = v644;
                          *(_QWORD *)((char *)v148 - 83) = v195;
                          *(unsigned __int16 *)((char *)v148 - 75) = v653;
                          *((_DWORD *)v148 - 18) = v648;
                          v148 -= 35;
                          v147 = vextq_s8(v640, v640, 2uLL).u64[0];
                          v44 = v273 + 1;
                          v392 = v640.u8[0];
                          v389 = v640.u8[1];
                          v196 = v267;
                          if (v267 == v273 + 1)
                            goto LABEL_110;
                        }
                        if (sub_24978B870(v181, v182, v179, v180) == 2
                          && sub_24978B8C8(v181, v182, v184 | (v277 << 16) | (v279 << 24) | (v485 << 32) | (v488 << 40) | (v491 << 48) | (v281 << 56), v185 | (v285 << 16) | (v287 << 24) | (v289 << 32) | (v291 << 40) | (v293 << 48) | (v496 << 56), v179, v180, v711 | (v407 << 16) | (v304 << 24) | (v435 << 32) | (v302 << 40) | (v441 << 48) | ((unint64_t)v300 << 56), v444 | (unint64_t)(unsigned __int16)(v447 << 8) | ((unint64_t)v449 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v452 << 24) | ((unint64_t)v462 << 32) | ((unint64_t)v456 << 40) | ((unint64_t)v465 << 48) | ((unint64_t)v459 << 56)) == 2)
                        {
                          sub_24978B990(v186, v702);
                        }
LABEL_109:
                        v196 = v267;
LABEL_110:
                        v10 = v196 + 1;
                        v44 = v262;
                        v129 = v263 + 35;
                        v43 = v269;
                      }
                      while (v10 != v260);
                      v10 = v260;
                      v9 = v259;
                    }
                    goto LABEL_112;
                  }
LABEL_207:
                  __break(1u);
LABEL_208:
                  __break(1u);
LABEL_209:
                  __break(1u);
LABEL_210:
                  __break(1u);
LABEL_211:
                  __break(1u);
LABEL_212:
                  __break(1u);
                }
              }
LABEL_112:
              if (v10 < v44)
                goto LABEL_201;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v9 = sub_24975DAF4(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
              v198 = *((_QWORD *)v9 + 2);
              v197 = *((_QWORD *)v9 + 3);
              v199 = v198 + 1;
              if (v198 >= v197 >> 1)
                v9 = sub_24975DAF4((char *)(v197 > 1), v198 + 1, 1, v9);
              *((_QWORD *)v9 + 2) = v199;
              v200 = v9 + 32;
              v201 = &v9[16 * v198 + 32];
              *(_QWORD *)v201 = v262;
              *((_QWORD *)v201 + 1) = v10;
              v268 = v10;
              if (v198)
              {
                while (2)
                {
                  v202 = v199 - 1;
                  if (v199 >= 4)
                  {
                    v207 = &v200[16 * v199];
                    v208 = *((_QWORD *)v207 - 8);
                    v209 = *((_QWORD *)v207 - 7);
                    v213 = __OFSUB__(v209, v208);
                    v210 = v209 - v208;
                    if (v213)
                      goto LABEL_186;
                    v212 = *((_QWORD *)v207 - 6);
                    v211 = *((_QWORD *)v207 - 5);
                    v213 = __OFSUB__(v211, v212);
                    v205 = v211 - v212;
                    v206 = v213;
                    if (v213)
                      goto LABEL_187;
                    v214 = v199 - 2;
                    v215 = &v200[16 * v199 - 32];
                    v217 = *(_QWORD *)v215;
                    v216 = *((_QWORD *)v215 + 1);
                    v213 = __OFSUB__(v216, v217);
                    v218 = v216 - v217;
                    if (v213)
                      goto LABEL_188;
                    v213 = __OFADD__(v205, v218);
                    v219 = v205 + v218;
                    if (v213)
                      goto LABEL_190;
                    if (v219 >= v210)
                    {
                      v237 = &v200[16 * v202];
                      v239 = *(_QWORD *)v237;
                      v238 = *((_QWORD *)v237 + 1);
                      v213 = __OFSUB__(v238, v239);
                      v240 = v238 - v239;
                      if (v213)
                        goto LABEL_196;
                      v230 = v205 < v240;
                    }
                    else
                    {
LABEL_131:
                      if ((v206 & 1) != 0)
                        goto LABEL_189;
                      v214 = v199 - 2;
                      v220 = &v200[16 * v199 - 32];
                      v222 = *(_QWORD *)v220;
                      v221 = *((_QWORD *)v220 + 1);
                      v223 = __OFSUB__(v221, v222);
                      v224 = v221 - v222;
                      v225 = v223;
                      if (v223)
                        goto LABEL_191;
                      v226 = &v200[16 * v202];
                      v228 = *(_QWORD *)v226;
                      v227 = *((_QWORD *)v226 + 1);
                      v213 = __OFSUB__(v227, v228);
                      v229 = v227 - v228;
                      if (v213)
                        goto LABEL_193;
                      if (__OFADD__(v224, v229))
                        goto LABEL_195;
                      if (v224 + v229 < v205)
                        goto LABEL_143;
                      v230 = v205 < v229;
                    }
                    if (v230)
                      v202 = v214;
                  }
                  else
                  {
                    if (v199 == 3)
                    {
                      v204 = *((_QWORD *)v9 + 4);
                      v203 = *((_QWORD *)v9 + 5);
                      v213 = __OFSUB__(v203, v204);
                      v205 = v203 - v204;
                      v206 = v213;
                      goto LABEL_131;
                    }
                    v231 = *((_QWORD *)v9 + 4);
                    v232 = *((_QWORD *)v9 + 5);
                    v213 = __OFSUB__(v232, v231);
                    v224 = v232 - v231;
                    v225 = v213;
LABEL_143:
                    if ((v225 & 1) != 0)
                      goto LABEL_192;
                    v233 = &v200[16 * v202];
                    v235 = *(_QWORD *)v233;
                    v234 = *((_QWORD *)v233 + 1);
                    v213 = __OFSUB__(v234, v235);
                    v236 = v234 - v235;
                    if (v213)
                      goto LABEL_194;
                    if (v236 < v224)
                      goto LABEL_160;
                  }
                  v241 = v202 - 1;
                  if (v202 - 1 >= v199)
                  {
                    __break(1u);
LABEL_183:
                    __break(1u);
LABEL_184:
                    __break(1u);
LABEL_185:
                    __break(1u);
LABEL_186:
                    __break(1u);
LABEL_187:
                    __break(1u);
LABEL_188:
                    __break(1u);
LABEL_189:
                    __break(1u);
LABEL_190:
                    __break(1u);
LABEL_191:
                    __break(1u);
LABEL_192:
                    __break(1u);
LABEL_193:
                    __break(1u);
LABEL_194:
                    __break(1u);
LABEL_195:
                    __break(1u);
LABEL_196:
                    __break(1u);
LABEL_197:
                    __break(1u);
LABEL_198:
                    __break(1u);
LABEL_199:
                    __break(1u);
LABEL_200:
                    __break(1u);
LABEL_201:
                    __break(1u);
LABEL_202:
                    __break(1u);
LABEL_203:
                    __break(1u);
LABEL_204:
                    __break(1u);
                    goto LABEL_205;
                  }
                  if (!v269)
                    goto LABEL_210;
                  v242 = &v200[16 * v241];
                  v243 = *(_QWORD *)v242;
                  v244 = &v200[16 * v202];
                  v245 = *((_QWORD *)v244 + 1);
                  sub_2497BAB2C((char *)(v269 + 70 * *(_QWORD *)v242), (char *)(v269 + 70 * *(_QWORD *)v244), v269 + 70 * v245, v264);
                  if (v265)
                  {
LABEL_179:
                    swift_bridgeObjectRelease();
                    if (v261 >= -1)
                    {
                      *(_QWORD *)(v257 + 16) = 0;
                      return swift_bridgeObjectRelease();
                    }
LABEL_205:
                    __break(1u);
LABEL_206:
                    __break(1u);
                    goto LABEL_207;
                  }
                  if (v245 < v243)
                    goto LABEL_183;
                  if (v202 > *((_QWORD *)v9 + 2))
                    goto LABEL_184;
                  *(_QWORD *)v242 = v243;
                  *(_QWORD *)&v200[16 * v241 + 8] = v245;
                  v246 = *((_QWORD *)v9 + 2);
                  if (v202 >= v246)
                    goto LABEL_185;
                  v265 = 0;
                  v199 = v246 - 1;
                  memmove(&v200[16 * v202], v244 + 16, 16 * (v246 - 1 - v202));
                  *((_QWORD *)v9 + 2) = v246 - 1;
                  if (v246 <= 2)
                    goto LABEL_160;
                  continue;
                }
              }
              v199 = 1;
LABEL_160:
              v3 = v261;
              v8 = v268;
              if (v268 >= v261)
              {
LABEL_166:
                if (v199 >= 2)
                {
                  v247 = *v255;
                  do
                  {
                    v248 = v199 - 2;
                    if (v199 < 2)
                      goto LABEL_197;
                    if (!v247)
                      goto LABEL_212;
                    v249 = *(_QWORD *)&v9[16 * v248 + 32];
                    v250 = *(_QWORD *)&v9[16 * v199 + 24];
                    sub_2497BAB2C((char *)(v247 + 70 * v249), (char *)(v247 + 70 * *(_QWORD *)&v9[16 * v199 + 16]), v247 + 70 * v250, v264);
                    if (v265)
                      goto LABEL_179;
                    if (v250 < v249)
                      goto LABEL_198;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v9 = sub_24975DBE8();
                    if (v248 >= *((_QWORD *)v9 + 2))
                      goto LABEL_199;
                    v251 = &v9[16 * v248 + 32];
                    *(_QWORD *)v251 = v249;
                    *((_QWORD *)v251 + 1) = v250;
                    v252 = *((_QWORD *)v9 + 2);
                    if (v199 > v252)
                      goto LABEL_200;
                    memmove(&v9[16 * v199 + 16], &v9[16 * v199 + 32], 16 * (v252 - v199));
                    *((_QWORD *)v9 + 2) = v252 - 1;
                    v199 = v252 - 1;
                  }
                  while (v252 > 2);
                }
                swift_bridgeObjectRelease();
                if (v261 >= -1)
                {
                  *(_QWORD *)(v257 + 16) = 0;
                  return swift_bridgeObjectRelease();
                }
                goto LABEL_208;
              }
              goto LABEL_4;
            }
          }
        }
        v57 = dword_24983AE80[(char)v298];
        v58 = dword_24983AE80[(char)v341];
        v59 = v674 | (v454 << 8) | (v354 << 16) | (v559 << 24) | (v339 << 32) | (v561 << 40) | (v335 << 48) | (v271 << 56);
        v60 = v337 | (v665 << 8) | (v328 << 16) | (v553 << 24) | (v333 << 32) | (v546 << 40) | (v331 << 48) | (v548 << 56);
        v61 = v589 | (v592 << 8) | (v595 << 16) | (v598 << 24) | (v601 << 32) | (v604 << 40) | (v607 << 48) | (v610 << 56);
        v62 = v613 | (v616 << 8) | (v620 << 16) | (v624 << 24) | (v628 << 32) | (v631 << 40) | (v634 << 48) | (v637 << 56);
        v63 = sub_24978B870(v59, v60, v61, v62);
        v696 = v326 | (v543 << 8);
        v705 = v308 | (v556 << 8);
        v64 = v476 | (v479 << 8);
        v65 = v346 | (v347 << 8);
        v66 = v57 | (v574 << 16);
        v67 = v58 | (v497 << 16);
        if (v63 == 2
          && (v63 = sub_24978B8C8(v59, v60, v696 | (v323 << 16) | (v320 << 24) | (v317 << 32) | (v544 << 40) | (v314 << 48) | (v311 << 56), v705 | (v305 << 16) | (v568 << 24) | (v303 << 32) | (v565 << 40) | (v301 << 48) | (v571 << 56), v61, v62, v64 | (v482 << 16) | (v486 << 24) | (v489 << 32) | (v343 << 40) | (v492 << 48) | (v345 << 56), v65 | (v348 << 16) | (v349 << 24) | (v350 << 32) | (v351 << 40) | (v352 << 48) | (v494 << 56)), v63 == 2)&& (v63 = sub_24978B990(v66, v67), v63 == 2)|| (v63 & 1) == 0)
        {
          v689 = v67;
          v9 = v258;
          if (sub_24978B870(v61, v62, v59, v60) == 2
            && sub_24978B8C8(v61, v62, v64 | (v482 << 16) | (v486 << 24) | (v489 << 32) | (v343 << 40) | (v492 << 48) | (v345 << 56), v65 | (v348 << 16) | (v349 << 24) | (v350 << 32) | (v351 << 40) | (v352 << 48) | (v494 << 56), v59, v60, v696 | (v323 << 16) | (v320 << 24) | (v317 << 32) | (v544 << 40) | (v314 << 48) | (v311 << 56), v705 | (v305 << 16) | (v568 << 24) | (v303 << 32) | (v565 << 40) | (v301 << 48) | (v571 << 56)) == 2)
          {
            sub_24978B990(v689, v66);
          }
          v3 = v261;
          v10 = v262 + 2;
          if (v262 + 2 >= v261)
            goto LABEL_66;
          goto LABEL_37;
        }
      }
    }
    v3 = v261;
    v10 = v262 + 2;
    if (v262 + 2 >= v261)
    {
      v9 = v258;
      v43 = v269;
      v44 = v262;
      goto LABEL_69;
    }
    v270 = 1;
    goto LABEL_38;
  }
  if (v3 < 0)
    goto LABEL_203;
  if (v3)
    return sub_2497B61BC(0, v3, 1, a1);
  return result;
}

void sub_2497B2E9C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int v37;
  char v38;
  char v39;
  int v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  unsigned __int8 *v52;
  unsigned __int8 *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  unint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  char v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  int64_t v118;
  char v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char v171[16];
  char v172[16];
  uint64_t v173[2];
  uint64_t v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  char v180;
  char v181;
  char v182[8];
  unsigned int v183;
  uint64_t *v184;
  uint64_t v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_249837534();
  if (v5 < v4)
  {
    v6 = v5;
    sub_24974D0F8(v4 / 2);
    v137 = v12;
    v188 = v13;
    v134 = v4;
    v129 = a1;
    if (v4 <= 0)
      goto LABEL_112;
    v130 = v6;
    v14 = 0;
    v15 = *a1;
    v128 = *a1 - 8;
    v16 = MEMORY[0x24BEE4AF8];
    v141 = *a1;
    while (1)
    {
      v17 = v14 + 1;
      v132 = v16;
      v133 = v14;
      if (v14 + 1 >= v4)
        goto LABEL_32;
      v136 = v2;
      v138 = v14 + 1;
      v18 = *(_QWORD *)(v15 + 8 * v14);
      v19 = *(_QWORD *)(*(_QWORD *)(v15 + 8 * v17) + 24)
          + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
      OUTLINED_FUNCTION_16();
      v20 = *(_QWORD *)(v18 + 24) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
      *(_OWORD *)v173 = *(_OWORD *)(v19 + 16);
      OUTLINED_FUNCTION_16();
      v1 = *(unsigned __int8 *)(v20 + 6);
      *(_OWORD *)v172 = *(_OWORD *)(v20 + 16);
      v180 = *(_BYTE *)(v20 + 12);
      v178 = *(unsigned __int8 *)(v20 + 13);
      v176 = *(unsigned __int8 *)(v20 + 14);
      OUTLINED_FUNCTION_91_0();
      OUTLINED_FUNCTION_178();
      v21 = OUTLINED_FUNCTION_13_8();
      v29 = v21;
      if ((v21 & 0x80000000) != 0
        || (OUTLINED_FUNCTION_16_7(v21, v22, v23, v24, v25, v26, v27, v28, v127, v128, (uint64_t)v129, v130, v131, v16, v14, v134, v135, v136, (uint64_t)v137,
              v138,
              v141,
              v142,
              v143,
              v144,
              v145,
              v146,
              v147,
              v148,
              v149,
              v150,
              v151,
              v152,
              v153,
              v154,
              v155,
              v156,
              v157,
              v158,
              v159,
              v160,
              v161,
              v162,
              v163,
              v164,
              v165,
              v166,
              v167,
              v168,
              v169,
              v170,
              *(uint64_t *)v171,
              *(uint64_t *)&v171[8],
              *(uint64_t *)v172,
              *(uint64_t *)&v172[8],
              v173[0],
              v173[1],
              v174,
              v175,
              v176,
              SHIWORD(v176),
              v178,
              SHIWORD(v178),
              v180),
            OUTLINED_FUNCTION_74_2(),
            (OUTLINED_FUNCTION_13_8() & 0x80000000) != 0))
      {
        LODWORD(v170) = v29 >> 31;
        swift_release();
        OUTLINED_FUNCTION_101_0();
        v14 = v133;
        v4 = v134;
        v30 = v133 + 2;
        v2 = v136;
        v16 = v132;
        v15 = v141;
        if (v133 + 2 >= v134)
          goto LABEL_23;
      }
      else
      {
        v40 = OUTLINED_FUNCTION_13_8();
        swift_release();
        OUTLINED_FUNCTION_101_0();
        v30 = v133 + 2;
        if (v40 < 0)
        {
          v4 = v134;
          v2 = v136;
          v16 = v132;
          v15 = v141;
          if (v30 >= v134)
          {
            v14 = v133;
            goto LABEL_25;
          }
          LODWORD(v170) = 1;
        }
        else
        {
          v4 = v134;
          v2 = v136;
          v16 = v132;
          v15 = v141;
          if (v30 >= v134)
          {
LABEL_105:
            v17 = v30;
            v14 = v133;
            goto LABEL_32;
          }
          LODWORD(v170) = 0;
        }
      }
      v31 = v30;
      v32 = v138;
      while (1)
      {
        v136 = v2;
        v187 = v31;
        v33 = *(_QWORD *)(v15 + 8 * v32);
        v34 = *(_QWORD *)(*(_QWORD *)(v15 + 8 * v31) + 24)
            + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
        OUTLINED_FUNCTION_16();
        v186 = *(unsigned __int8 *)(v34 + 9);
        v35 = *(_QWORD *)(v33 + 24) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
        v183 = *(unsigned __int8 *)(v34 + 15);
        *(_OWORD *)v172 = *(_OWORD *)(v34 + 16);
        OUTLINED_FUNCTION_16();
        v1 = *(unsigned __int8 *)(v35 + 6);
        *(_OWORD *)v171 = *(_OWORD *)(v35 + 16);
        v4 = v186;
        v16 = v183;
        OUTLINED_FUNCTION_46_0();
        OUTLINED_FUNCTION_178();
        v2 = OUTLINED_FUNCTION_13_8();
        if ((v2 & 0x80000000) != 0 || (OUTLINED_FUNCTION_74_2(), (OUTLINED_FUNCTION_13_8() & 0x80000000) != 0))
        {
          swift_release();
          OUTLINED_FUNCTION_101_0();
          v36 = v170 ^ ((int)v2 < 0);
          v2 = v136;
          v4 = v134;
          v16 = v132;
          v15 = v141;
          v30 = v187;
          if ((v36 & 1) != 0)
            goto LABEL_22;
          goto LABEL_12;
        }
        v37 = OUTLINED_FUNCTION_13_8();
        swift_release();
        OUTLINED_FUNCTION_101_0();
        if (v37 < 0)
        {
          OUTLINED_FUNCTION_115();
          if ((v38 & 1) == 0)
            goto LABEL_105;
          goto LABEL_12;
        }
        OUTLINED_FUNCTION_115();
        if ((v39 & 1) != 0)
          break;
LABEL_12:
        v31 = v30 + 1;
        v32 = v30;
        if (v30 + 1 >= v4)
        {
          ++v30;
LABEL_22:
          v14 = v133;
LABEL_23:
          v17 = v30;
          if ((_DWORD)v170)
            goto LABEL_24;
          goto LABEL_32;
        }
      }
      v14 = v133;
LABEL_24:
      if (v30 < v14)
        goto LABEL_150;
LABEL_25:
      if (v14 < v30)
      {
        v41 = (uint64_t *)(v128 + 8 * v30);
        v42 = v30;
        v43 = v14;
        v44 = (uint64_t *)(v15 + 8 * v14);
        do
        {
          if (v43 != --v42)
          {
            if (!v15)
              goto LABEL_155;
            v45 = *v44;
            *v44 = *v41;
            *v41 = v45;
          }
          ++v43;
          --v41;
          ++v44;
        }
        while (v43 < v42);
      }
      v17 = v30;
LABEL_32:
      if (v17 < v4)
      {
        if (__OFSUB__(v17, v14))
          goto LABEL_147;
        if (v17 - v14 < v130)
        {
          if (__OFADD__(v14, v130))
            goto LABEL_149;
          if (v14 + v130 >= v4)
            v46 = v4;
          else
            v46 = v14 + v130;
          if (v46 < v14)
            goto LABEL_151;
          if (v17 != v46)
          {
            v136 = v2;
            v47 = (uint64_t *)(v128 + 8 * v17);
            v131 = v46;
            do
            {
              v48 = *(_QWORD *)(v15 + 8 * v17);
              v49 = v14;
              v135 = (uint64_t)v47;
              v50 = v47;
              v139 = v17;
              while (1)
              {
                v184 = v50;
                v185 = v49;
                v51 = *v50;
                v52 = (unsigned __int8 *)(*(_QWORD *)(v48 + 24)
                                        + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
                OUTLINED_FUNCTION_16();
                *(_QWORD *)v182 = v52[16];
                v151 = v52[17];
                v152 = v52[18];
                *(_QWORD *)v172 = v52[19];
                *(_QWORD *)v171 = v52[20];
                v170 = v52[21];
                v169 = v52[22];
                v168 = v52[23];
                v167 = v52[24];
                v166 = v52[25];
                v165 = v52[26];
                v164 = v52[27];
                v53 = (unsigned __int8 *)(*(_QWORD *)(v51 + 24)
                                        + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
                v160 = v52[28];
                v161 = v52[29];
                v162 = v52[30];
                v163 = v52[31];
                OUTLINED_FUNCTION_16();
                v1 = v53[9];
                v159 = v53[16];
                v158 = v53[17];
                v157 = v53[18];
                v156 = v53[19];
                v155 = v53[20];
                v154 = v53[21];
                v150 = v53[22];
                v149 = v53[23];
                v153 = v53[24];
                v148 = v53[25];
                v147 = v53[26];
                v146 = v53[27];
                v145 = v53[28];
                v144 = v53[29];
                v143 = v53[30];
                v142 = v53[31];
                v181 = v53[12];
                v179 = v53[13];
                v177 = v53[14];
                LODWORD(v173[0]) = v53[15];
                OUTLINED_FUNCTION_178();
                swift_retain();
                v54 = OUTLINED_FUNCTION_13_8();
                if ((v54 & 0x80000000) == 0)
                {
                  OUTLINED_FUNCTION_16_7(v54, v55, v56, v57, v58, v59, v60, v61, v127, v128, (uint64_t)v129, v130, v131, v132, v133, v134, v135, v136, (uint64_t)v137,
                    v139,
                    v141,
                    v142,
                    v143,
                    v144,
                    v145,
                    v146,
                    v147,
                    v148,
                    v149,
                    v150,
                    v151,
                    v152,
                    v153,
                    v154,
                    v155,
                    v156,
                    v157,
                    v158,
                    v159,
                    v160,
                    v161,
                    v162,
                    v163,
                    v164,
                    v165,
                    v166,
                    v167,
                    v168,
                    v169,
                    v170,
                    *(uint64_t *)v171,
                    *(uint64_t *)&v171[8],
                    *(uint64_t *)v172,
                    *(uint64_t *)&v172[8],
                    v173[0],
                    v173[1],
                    v174,
                    v175,
                    v177,
                    SHIWORD(v177),
                    v179,
                    SHIWORD(v179),
                    v181);
                  if ((OUTLINED_FUNCTION_13_8() & 0x80000000) != 0)
                    goto LABEL_50;
                  if ((OUTLINED_FUNCTION_13_8() & 0x80000000) == 0)
                    break;
                }
                OUTLINED_FUNCTION_101_0();
                swift_release();
                v15 = v141;
                if (!v141)
                  goto LABEL_153;
                v62 = *v184;
                v48 = v184[1];
                *v184 = v48;
                v184[1] = v62;
                v50 = v184 - 1;
                v49 = v185 + 1;
                v63 = v139;
                if (v139 == v185 + 1)
                  goto LABEL_51;
              }
              OUTLINED_FUNCTION_120();
              static UniversalControlUUID.compare(lhs:rhs:)(v64, v65, *(_QWORD *)v182 | (v151 << 8) | (v152 << 16) | (*(_QWORD *)v172 << 24) | (*(_QWORD *)v171 << 32) | (v170 << 40) | (v169 << 48) | (v168 << 56), v167 | (v166 << 8) | (v165 << 16) | (v164 << 24) | (v160 << 32) | (v161 << 40) | (v162 << 48) | (v163 << 56));
LABEL_50:
              OUTLINED_FUNCTION_101_0();
              swift_release();
              v63 = v139;
              v15 = v141;
LABEL_51:
              v17 = v63 + 1;
              v47 = (uint64_t *)(v135 + 8);
              v14 = v133;
            }
            while (v17 != v131);
            v17 = v131;
            v2 = v136;
            v16 = v132;
          }
        }
      }
      if (v17 < v14)
        goto LABEL_146;
      v140 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v117 = (char *)OUTLINED_FUNCTION_6_5();
        v16 = (uint64_t)sub_24975DAF4(v117, v118, v119, (char *)v16);
      }
      v67 = *(_QWORD *)(v16 + 16);
      v66 = *(_QWORD *)(v16 + 24);
      v68 = v67 + 1;
      v15 = v141;
      if (v67 >= v66 >> 1)
      {
        v120 = sub_24975DAF4((char *)(v66 > 1), v67 + 1, 1, (char *)v16);
        v15 = v141;
        v16 = (uint64_t)v120;
      }
      *(_QWORD *)(v16 + 16) = v68;
      v69 = v16 + 32;
      v70 = (uint64_t *)(v16 + 32 + 16 * v67);
      *v70 = v14;
      v70[1] = v140;
      if (v67)
      {
        while (2)
        {
          v71 = v68 - 1;
          if (v68 >= 4)
          {
            v76 = v69 + 16 * v68;
            v77 = *(_QWORD *)(v76 - 64);
            v78 = *(_QWORD *)(v76 - 56);
            v82 = __OFSUB__(v78, v77);
            v79 = v78 - v77;
            if (v82)
              goto LABEL_131;
            v81 = *(_QWORD *)(v76 - 48);
            v80 = *(_QWORD *)(v76 - 40);
            v82 = __OFSUB__(v80, v81);
            v74 = v80 - v81;
            v75 = v82;
            if (v82)
              goto LABEL_132;
            v83 = v68 - 2;
            v84 = (uint64_t *)(v69 + 16 * (v68 - 2));
            v86 = *v84;
            v85 = v84[1];
            v82 = __OFSUB__(v85, v86);
            v87 = v85 - v86;
            if (v82)
              goto LABEL_133;
            v82 = __OFADD__(v74, v87);
            v88 = v74 + v87;
            if (v82)
              goto LABEL_135;
            if (v88 >= v79)
            {
              v106 = (uint64_t *)(v69 + 16 * v71);
              v108 = *v106;
              v107 = v106[1];
              v82 = __OFSUB__(v107, v108);
              v109 = v107 - v108;
              if (v82)
                goto LABEL_141;
              v99 = v74 < v109;
            }
            else
            {
LABEL_72:
              if ((v75 & 1) != 0)
                goto LABEL_134;
              v83 = v68 - 2;
              v89 = (uint64_t *)(v69 + 16 * (v68 - 2));
              v91 = *v89;
              v90 = v89[1];
              v92 = __OFSUB__(v90, v91);
              v93 = v90 - v91;
              v94 = v92;
              if (v92)
                goto LABEL_136;
              v95 = (uint64_t *)(v69 + 16 * v71);
              v97 = *v95;
              v96 = v95[1];
              v82 = __OFSUB__(v96, v97);
              v98 = v96 - v97;
              if (v82)
                goto LABEL_138;
              if (__OFADD__(v93, v98))
                goto LABEL_140;
              if (v93 + v98 < v74)
                goto LABEL_84;
              v99 = v74 < v98;
            }
            if (v99)
              v71 = v83;
          }
          else
          {
            if (v68 == 3)
            {
              v73 = *(_QWORD *)(v16 + 32);
              v72 = *(_QWORD *)(v16 + 40);
              v82 = __OFSUB__(v72, v73);
              v74 = v72 - v73;
              v75 = v82;
              goto LABEL_72;
            }
            v100 = *(_QWORD *)(v16 + 32);
            v101 = *(_QWORD *)(v16 + 40);
            v82 = __OFSUB__(v101, v100);
            v93 = v101 - v100;
            v94 = v82;
LABEL_84:
            if ((v94 & 1) != 0)
              goto LABEL_137;
            v102 = (uint64_t *)(v69 + 16 * v71);
            v104 = *v102;
            v103 = v102[1];
            v82 = __OFSUB__(v103, v104);
            v105 = v103 - v104;
            if (v82)
              goto LABEL_139;
            if (v105 < v93)
              goto LABEL_101;
          }
          v110 = v71 - 1;
          if (v71 - 1 >= v68)
          {
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
            goto LABEL_152;
          }
          if (!v15)
            goto LABEL_154;
          v111 = v16;
          v112 = (uint64_t *)(v69 + 16 * v110);
          v113 = *v112;
          v114 = (_QWORD *)(v69 + 16 * v71);
          v115 = v114[1];
          OUTLINED_FUNCTION_190((char *)(v15 + 8 * *v112), (char *)(v15 + 8 * *v114), v15 + 8 * v115, v7, v8, v9, v10, v11, v127, v128, (uint64_t)v129, v130, v131, v132, v133, v134, v135, v136, v137);
          v2 = v1;
          if (v1)
          {
LABEL_110:
            swift_bridgeObjectRelease();
            if (v134 >= -1)
              goto LABEL_125;
            __break(1u);
LABEL_112:
            v16 = MEMORY[0x24BEE4AF8];
            v68 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_113:
            if (v68 >= 2)
            {
              v121 = *v129;
              do
              {
                v122 = v68 - 2;
                if (v68 < 2)
                  goto LABEL_142;
                if (!v121)
                  goto LABEL_156;
                v123 = *(_QWORD *)(v16 + 32 + 16 * v122);
                v124 = *(_QWORD *)(v16 + 32 + 16 * (v68 - 1) + 8);
                OUTLINED_FUNCTION_190((char *)(v121 + 8 * v123), (char *)(v121 + 8 * *(_QWORD *)(v16 + 32 + 16 * (v68 - 1))), v121 + 8 * v124, v7, v8, v9, v10, v11, v127, v128, (uint64_t)v129, v130, v131, v132, v133, v134, v135, v136, v137);
                if (v1)
                  goto LABEL_110;
                if (v124 < v123)
                  goto LABEL_143;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  v16 = (uint64_t)sub_24975DBE8();
                if (v122 >= *(_QWORD *)(v16 + 16))
                  goto LABEL_144;
                v125 = (_QWORD *)(v16 + 32 + 16 * v122);
                *v125 = v123;
                v125[1] = v124;
                v126 = *(_QWORD *)(v16 + 16);
                if (v68 > v126)
                  goto LABEL_145;
                memmove((void *)(v16 + 32 + 16 * (v68 - 1)), (const void *)(v16 + 32 + 16 * v68), 16 * (v126 - v68));
                *(_QWORD *)(v16 + 16) = v126 - 1;
                v68 = v126 - 1;
              }
              while (v126 > 2);
            }
            swift_bridgeObjectRelease();
            if (v134 >= -1)
            {
LABEL_125:
              *(_QWORD *)((v188 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
              sub_249836EB0();
              swift_bridgeObjectRelease();
              goto LABEL_126;
            }
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
          }
          if (v115 < v113)
            goto LABEL_128;
          if (v71 > *(_QWORD *)(v111 + 16))
            goto LABEL_129;
          *v112 = v113;
          *(_QWORD *)(v69 + 16 * v110 + 8) = v115;
          v116 = *(_QWORD *)(v111 + 16);
          if (v71 >= v116)
            goto LABEL_130;
          v16 = v111;
          v68 = v116 - 1;
          memmove((void *)(v69 + 16 * v71), v114 + 2, 16 * (v116 - 1 - v71));
          *(_QWORD *)(v16 + 16) = v116 - 1;
          v15 = v141;
          if (v116 <= 2)
            goto LABEL_101;
          continue;
        }
      }
      v68 = 1;
LABEL_101:
      v4 = v134;
      v14 = v140;
      if (v140 >= v134)
        goto LABEL_113;
    }
  }
  if (v4 < 0)
    goto LABEL_148;
  if (v4)
    sub_2497B900C(0, v4, 1, a1);
LABEL_126:
  OUTLINED_FUNCTION_10_6();
}

uint64_t sub_2497B407C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  int v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  int v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char *v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  double v100;
  double v101;
  uint64_t v102;
  double v103;
  double v104;
  double v105;
  double v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  __int128 v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char *v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  double v154;
  double v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  double v160;
  double v161;
  double v162;
  double v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  char *v167;
  char *v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  BOOL v180;
  unint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  BOOL v190;
  uint64_t v191;
  char v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  BOOL v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  unint64_t v214;
  char *v215;
  uint64_t v216;
  unint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  unint64_t v223;
  char v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  int v230;
  char v231;
  char v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  char v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  char v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char v249;
  char v250;
  char v251;
  char v252;
  char v253;
  char v254;
  char v255;
  char v256;
  char v257;
  char v258;
  char v259;
  char v260;
  char v261;
  char v262;
  char v263;
  char v264;
  char v265;
  char v266;
  char v267;
  char v268;
  char v269;
  char v270;
  char v271;
  char v272;
  char v273;
  char v274;
  char v275;
  char v276;
  char v277;
  char v278;
  char v279;
  char v280;
  char v281;
  char v282;
  char v283;
  char v284;
  char v285;
  char v286;
  char v287;
  char v288;
  char v289;
  char v290;
  char v291;
  char v292;
  char v293;
  char v294;
  char v295;
  char v296;
  char v297;
  char v298;
  char v299;
  char v300;
  char v301;
  char v302;
  char v303;
  char v304;
  char v305;
  char v306;
  char v307;
  char v308;
  char v309;
  char v310;
  char v311;
  char v312;
  char v313;
  char v314;
  char v315;
  char v316;
  char v317;
  char v318;
  char v319;
  char v320;
  char v321;
  char v322;
  char v323;
  char v324;
  char v325;
  char v326;
  char v327;
  char v328;
  char v329;
  char v330;
  char v331;
  char v332;
  char v333;
  char v334;
  char v335;
  char v336;
  char v337;
  char v338;
  char v339;
  char v340;
  char v341;
  char v342;
  char v343;
  char v344;
  char v345;
  uint64_t v346;
  char v347;
  char v348;
  uint64_t v349;
  char v350;
  char v351;
  char v352;
  char v353;
  uint64_t v354;
  char v355;
  char v356;
  uint64_t v357;
  char v358;
  char v359;
  char v360;
  char v361;
  char v362;
  char v363;
  char v364;
  char v365;
  char v366;
  char v367;
  char v368;
  char v369;
  char v370;
  char v371;
  char v372;
  char v373;
  char v374;
  char v375;
  char v376;
  char v377;
  char v378;
  char v379;
  char v380;
  char v381;
  char v382;
  char v383;
  char v384;
  char v385;
  char v386;
  char v387;
  char v388;
  char v389;
  char v390;
  char v391;
  char v392;
  char v393;
  char v394;
  char v395;
  char v396;
  char v397;
  char v398;
  char v399;
  char v400;
  char v401;
  char v402;
  char v403;
  char v404;
  char v405;
  char v406;
  char v407;
  char v408;
  char v409;
  char v410;
  char v411;
  char v412;
  char v413;
  char v414;
  char v415;
  char v416;
  char __s2;
  char v418;
  char v419;
  char v420;
  char v421;
  char v422;
  char v423;
  char v424;
  char v425;
  char v426;
  char v427;
  char v428;
  char v429;
  char v430;
  char v431;
  char v432;
  char __s1;
  char v434;
  char v435;
  char v436;
  char v437;
  char v438;
  char v439;
  char v440;
  char v441;
  char v442;
  char v443;
  char v444;
  char v445;
  char v446;
  char v447;
  char v448;
  uint64_t v449;

  v2 = v1;
  v449 = *MEMORY[0x24BDAC8D0];
  v4 = a1[1];
  result = sub_249837534();
  v6 = v4;
  if (result < v4)
  {
    v7 = result;
    v8 = v6;
    sub_24974D07C(v6 / 2);
    v228 = v9;
    v243 = v10;
    v235 = v8;
    v226 = a1;
    if (v8 > 0)
    {
      v227 = v7;
      v11 = 0;
      v12 = *a1;
      v225 = *a1 + 32;
      v13 = (char *)MEMORY[0x24BEE4AF8];
      v248 = *a1;
      while (1)
      {
        v14 = v11;
        v15 = v11 + 1;
        v234 = v13;
        v236 = v11;
        if (v11 + 1 >= v8)
        {
          v64 = v8;
          goto LABEL_57;
        }
        v240 = v2;
        v244 = v11 + 1;
        v16 = *(_QWORD *)(v12 + 40 * v11 + 32);
        v17 = (char *)(*(_QWORD *)(*(_QWORD *)(v12 + 40 * v15 + 32) + 24)
                     + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
        swift_beginAccess();
        v414 = *v17;
        v18 = v17[1];
        v411 = v17[2];
        v19 = v17[3];
        v408 = v17[4];
        v20 = v17[5];
        v21 = v17[6];
        v406 = v17[7];
        v394 = v17[8];
        v404 = v17[9];
        v400 = v17[10];
        v402 = v17[11];
        v22 = v17[12];
        v401 = v17[13];
        v23 = v17[14];
        v353 = v17[16];
        v350 = v17[17];
        v347 = v17[18];
        v341 = v17[20];
        v344 = v17[19];
        v335 = v17[22];
        v338 = v17[21];
        v329 = v17[24];
        v332 = v17[23];
        v323 = v17[26];
        v326 = v17[25];
        v24 = v17[27];
        v25 = (char *)(*(_QWORD *)(v16 + 24) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
        v308 = v17[28];
        v311 = v17[29];
        v314 = v17[30];
        v26 = v17[31];
        LOBYTE(v17) = v17[15];
        v317 = v26;
        v320 = v24;
        swift_beginAccess();
        v27 = *v25;
        v28 = v25[1];
        v29 = v25[2];
        v30 = v25[3];
        v31 = v25[4];
        v32 = v25[5];
        v33 = v25[6];
        v34 = v25[7];
        LOBYTE(v16) = v25[8];
        v35 = v25[9];
        v36 = v25[10];
        v37 = v25[11];
        v38 = v25[12];
        v39 = v25[13];
        v40 = v25[14];
        v41 = v25[15];
        v302 = v25[17];
        v305 = v25[16];
        v296 = v25[19];
        v299 = v25[18];
        v290 = v25[21];
        v293 = v25[20];
        v284 = v25[23];
        v287 = v25[22];
        v278 = v25[25];
        v281 = v25[24];
        v272 = v25[27];
        v275 = v25[26];
        v266 = v25[29];
        v269 = v25[28];
        v260 = v25[31];
        v263 = v25[30];
        __s1 = v414;
        v371 = v18;
        v434 = v18;
        v435 = v411;
        v362 = v19;
        v436 = v19;
        v437 = v408;
        v368 = v20;
        v438 = v20;
        v365 = v21;
        v439 = v21;
        v42 = v39;
        v440 = v406;
        v441 = v394;
        v442 = v404;
        v443 = v400;
        v444 = v402;
        v359 = v22;
        v445 = v22;
        v43 = v38;
        v446 = v401;
        v356 = v23;
        v447 = v23;
        v44 = v36;
        v374 = (char)v17;
        v448 = (char)v17;
        v45 = v16;
        v46 = v27;
        __s2 = v27;
        v47 = v28;
        v418 = v28;
        v383 = v29;
        v419 = v29;
        v48 = v30;
        v420 = v30;
        v49 = v31;
        v421 = v31;
        v380 = v32;
        v422 = v32;
        v377 = v33;
        v423 = v33;
        v424 = v34;
        v425 = v45;
        v391 = v35;
        v426 = v35;
        v427 = v36;
        v397 = v37;
        v428 = v37;
        v429 = v38;
        v430 = v39;
        v431 = v40;
        v386 = v41;
        v432 = v41;
        swift_retain();
        swift_retain();
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          break;
        v237 = v46;
        __s1 = v46;
        v229 = v48;
        v231 = v47;
        v434 = v47;
        v435 = v383;
        v436 = v48;
        v224 = v49;
        v437 = v49;
        v438 = v380;
        v439 = v377;
        v440 = v34;
        v254 = v44;
        v257 = v45;
        v441 = v45;
        v442 = v391;
        v443 = v44;
        v444 = v397;
        v249 = v42;
        v445 = v43;
        v446 = v42;
        v447 = v40;
        v448 = v386;
        __s2 = v414;
        v418 = v371;
        v419 = v411;
        v50 = v362;
        v420 = v362;
        v51 = v408;
        v421 = v408;
        v52 = v368;
        v422 = v368;
        v423 = v365;
        v424 = v406;
        v425 = v394;
        v426 = v404;
        v427 = v400;
        v428 = v402;
        v429 = v359;
        v430 = v401;
        v431 = v356;
        v432 = v374;
        v53 = memcmp(&__s1, &__s2, 0x10uLL);
        v54 = v414;
        v55 = v371;
        v56 = v411;
        v57 = v359;
        v58 = v401;
        v59 = v397;
        v60 = v400;
        v61 = v402;
        v62 = v404;
        if ((v53 & 0x80000000) == 0)
        {
          __s1 = v353;
          v434 = v350;
          v435 = v347;
          v436 = v344;
          v437 = v341;
          v438 = v338;
          v439 = v335;
          v440 = v332;
          v441 = v329;
          v442 = v326;
          v443 = v323;
          v444 = v320;
          v445 = v308;
          v446 = v311;
          v447 = v314;
          v448 = v317;
          __s2 = v305;
          v418 = v302;
          v419 = v299;
          v420 = v296;
          v421 = v293;
          v422 = v290;
          v423 = v287;
          v424 = v284;
          v425 = v281;
          v426 = v278;
          v427 = v275;
          v428 = v272;
          v429 = v269;
          v430 = v266;
          v431 = v263;
          v432 = v260;
          v63 = memcmp(&__s1, &__s2, 0x10uLL);
          v61 = v402;
          v59 = v397;
          v57 = v359;
          v60 = v400;
          v62 = v404;
          v58 = v401;
          v56 = v411;
          v54 = v414;
          v52 = v368;
          v55 = v371;
          v50 = v362;
          v51 = v408;
          if (v63 < 0)
            break;
        }
        __s1 = v237;
        v434 = v231;
        v435 = v383;
        v436 = v229;
        v437 = v49;
        v438 = v380;
        v439 = v377;
        v440 = v34;
        v441 = v45;
        v442 = v391;
        v443 = v44;
        v444 = v59;
        v445 = v43;
        v446 = v249;
        v447 = v40;
        v448 = v386;
        __s2 = v54;
        v418 = v55;
        v419 = v56;
        v420 = v50;
        v421 = v51;
        v422 = v52;
        v65 = v61;
        v423 = v365;
        v66 = v60;
        v424 = v406;
        v425 = v394;
        v426 = v62;
        v427 = v60;
        v428 = v61;
        v429 = v57;
        v430 = v58;
        v431 = v356;
        v432 = v374;
        v67 = v55;
        v68 = v54;
        v69 = v56;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_11;
        __s1 = v68;
        v434 = v67;
        v435 = v69;
        v436 = v362;
        v437 = v408;
        v438 = v368;
        v439 = v365;
        v440 = v406;
        v441 = v394;
        v442 = v62;
        v443 = v66;
        v444 = v65;
        v445 = v359;
        v446 = v401;
        v447 = v356;
        v448 = v374;
        __s2 = v237;
        v418 = v231;
        v419 = v383;
        v420 = v229;
        v421 = v224;
        v422 = v380;
        v423 = v377;
        v424 = v34;
        v425 = v257;
        v426 = v391;
        v427 = v254;
        v428 = v397;
        v429 = v43;
        v430 = v249;
        v431 = v40;
        v432 = v386;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v305;
          v434 = v302;
          v435 = v299;
          v436 = v296;
          v437 = v293;
          v438 = v290;
          v439 = v287;
          v440 = v284;
          v441 = v281;
          v442 = v278;
          v443 = v275;
          v444 = v272;
          v445 = v269;
          v446 = v266;
          v447 = v263;
          v448 = v260;
          __s2 = v353;
          v418 = v350;
          v419 = v347;
          v420 = v344;
          v421 = v341;
          v422 = v338;
          v423 = v335;
          v424 = v332;
          v425 = v329;
          v426 = v326;
          v427 = v323;
          v428 = v320;
          v429 = v308;
          v430 = v311;
          v431 = v314;
          v432 = v317;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          {
LABEL_11:
            v230 = 0;
            goto LABEL_12;
          }
        }
        v119 = sub_2497A1E9C();
        v120 = sub_2497A1E9C();
        v2 = v240;
        v70 = v235;
        v14 = v236;
        v71 = v244;
        if (v119 >= v120)
        {
          v13 = v234;
          if (v120 >= v119)
          {
            sub_2497A1E9C();
            v122 = v121;
            sub_2497A1E9C();
            v124 = v123;
            swift_release();
            swift_release();
            v72 = v236 + 2;
            if (v122 >= v124)
            {
              v12 = v248;
              if (v72 < v235)
              {
                v230 = 0;
LABEL_14:
                v73 = v225 + 40 * v72;
                while (2)
                {
                  v241 = v2;
                  v354 = v73;
                  v357 = v72;
                  v74 = *(_QWORD *)(v12 + 40 * v71 + 32);
                  v75 = (char *)(*(_QWORD *)(*(_QWORD *)v73 + 24)
                               + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
                  swift_beginAccess();
                  v76 = *v75;
                  v351 = v75[1];
                  v77 = v75[2];
                  v348 = v75[3];
                  v415 = v75[5];
                  v78 = v75[6];
                  v79 = v75[7];
                  v80 = v75[8];
                  v342 = v75[9];
                  v345 = v75[4];
                  v336 = v75[11];
                  v339 = v75[10];
                  v81 = v75[12];
                  v412 = v75[13];
                  v82 = v75[14];
                  v409 = v75[15];
                  v330 = v75[17];
                  v333 = v75[16];
                  v324 = v75[19];
                  v327 = v75[18];
                  v318 = v75[21];
                  v321 = v75[20];
                  v312 = v75[23];
                  v315 = v75[22];
                  v306 = v75[25];
                  v309 = v75[24];
                  v300 = v75[27];
                  v303 = v75[26];
                  v83 = (char *)(*(_QWORD *)(v74 + 24)
                               + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
                  v288 = v75[28];
                  v291 = v75[29];
                  v294 = v75[30];
                  v297 = v75[31];
                  swift_beginAccess();
                  v84 = *v83;
                  v85 = v83[1];
                  v86 = v83[2];
                  v87 = v83[3];
                  v88 = v83[4];
                  v89 = v83[5];
                  v90 = v83[6];
                  v91 = v83[7];
                  v92 = v83[8];
                  v93 = v83[9];
                  v94 = v83[10];
                  v95 = v83[11];
                  v96 = v83[12];
                  v97 = v83[13];
                  v98 = v83[14];
                  v99 = v83[15];
                  v285 = v83[16];
                  v282 = v83[17];
                  v279 = v83[18];
                  v276 = v83[19];
                  v273 = v83[20];
                  v270 = v83[21];
                  v267 = v83[22];
                  v264 = v83[23];
                  v261 = v83[24];
                  v258 = v83[25];
                  v255 = v83[26];
                  v252 = v83[27];
                  v250 = v83[28];
                  v245 = v83[29];
                  v238 = v83[30];
                  v232 = v83[31];
                  __s1 = v76;
                  v434 = v351;
                  v435 = v77;
                  v436 = v348;
                  v437 = v345;
                  v438 = v415;
                  v439 = v78;
                  v440 = v79;
                  v441 = v80;
                  v442 = v342;
                  v443 = v339;
                  v444 = v336;
                  v445 = v81;
                  v446 = v412;
                  v447 = v82;
                  v448 = v409;
                  __s2 = v84;
                  v398 = v85;
                  v418 = v85;
                  v395 = v86;
                  v419 = v86;
                  v392 = v87;
                  v420 = v87;
                  v389 = v88;
                  v421 = v88;
                  v387 = v89;
                  v422 = v89;
                  v384 = v90;
                  v423 = v90;
                  v381 = v91;
                  v424 = v91;
                  v378 = v92;
                  v425 = v92;
                  v375 = v93;
                  v426 = v93;
                  v427 = v94;
                  v372 = v95;
                  v428 = v95;
                  v369 = v96;
                  v429 = v96;
                  v366 = v97;
                  v430 = v97;
                  v363 = v98;
                  v431 = v98;
                  v360 = v99;
                  v432 = v99;
                  swift_retain();
                  swift_retain();
                  if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                    goto LABEL_22;
                  __s1 = v84;
                  v434 = v398;
                  v435 = v395;
                  v436 = v392;
                  v437 = v389;
                  v438 = v387;
                  v439 = v384;
                  v440 = v381;
                  v441 = v378;
                  v442 = v375;
                  v443 = v94;
                  v444 = v372;
                  v445 = v369;
                  v446 = v366;
                  v447 = v363;
                  v448 = v360;
                  __s2 = v76;
                  v418 = v351;
                  v419 = v77;
                  v420 = v348;
                  v421 = v345;
                  v422 = v415;
                  v423 = v78;
                  v424 = v79;
                  v425 = v80;
                  v426 = v342;
                  v427 = v339;
                  v428 = v336;
                  v429 = v81;
                  v430 = v412;
                  v431 = v82;
                  v432 = v409;
                  if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                    goto LABEL_18;
                  __s1 = v333;
                  v434 = v330;
                  v435 = v327;
                  v436 = v324;
                  v437 = v321;
                  v438 = v318;
                  v439 = v315;
                  v440 = v312;
                  v441 = v309;
                  v442 = v306;
                  v443 = v303;
                  v444 = v300;
                  v445 = v288;
                  v446 = v291;
                  v447 = v294;
                  v448 = v297;
                  __s2 = v285;
                  v418 = v282;
                  v419 = v279;
                  v420 = v276;
                  v421 = v273;
                  v422 = v270;
                  v423 = v267;
                  v424 = v264;
                  v425 = v261;
                  v426 = v258;
                  v427 = v255;
                  v428 = v252;
                  v429 = v250;
                  v430 = v245;
                  v431 = v238;
                  v432 = v232;
                  if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                  {
LABEL_22:
                    swift_release();
                    swift_release();
                  }
                  else
                  {
LABEL_18:
                    __s1 = v84;
                    v434 = v398;
                    v435 = v395;
                    v436 = v392;
                    v437 = v389;
                    v438 = v387;
                    v439 = v384;
                    v440 = v381;
                    v441 = v378;
                    v442 = v375;
                    v443 = v94;
                    v444 = v372;
                    v445 = v369;
                    v446 = v366;
                    v447 = v363;
                    v448 = v360;
                    __s2 = v76;
                    v418 = v351;
                    v419 = v77;
                    v420 = v348;
                    v421 = v345;
                    v422 = v415;
                    v423 = v78;
                    v424 = v79;
                    v425 = v80;
                    v426 = v342;
                    v427 = v339;
                    v428 = v336;
                    v429 = v81;
                    v430 = v412;
                    v431 = v82;
                    v432 = v409;
                    if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                      goto LABEL_26;
                    __s1 = v76;
                    v434 = v351;
                    v435 = v77;
                    v436 = v348;
                    v437 = v345;
                    v438 = v415;
                    v439 = v78;
                    v440 = v79;
                    v441 = v80;
                    v442 = v342;
                    v443 = v339;
                    v444 = v336;
                    v445 = v81;
                    v446 = v412;
                    v447 = v82;
                    v448 = v409;
                    __s2 = v84;
                    v418 = v398;
                    v419 = v395;
                    v420 = v392;
                    v421 = v389;
                    v422 = v387;
                    v423 = v384;
                    v424 = v381;
                    v425 = v378;
                    v426 = v375;
                    v427 = v94;
                    v428 = v372;
                    v429 = v369;
                    v430 = v366;
                    v431 = v363;
                    v432 = v360;
                    if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
                    {
                      __s1 = v285;
                      v434 = v282;
                      v435 = v279;
                      v436 = v276;
                      v437 = v273;
                      v438 = v270;
                      v439 = v267;
                      v440 = v264;
                      v441 = v261;
                      v442 = v258;
                      v443 = v255;
                      v444 = v252;
                      v445 = v250;
                      v446 = v245;
                      v447 = v238;
                      v448 = v232;
                      __s2 = v333;
                      v418 = v330;
                      v419 = v327;
                      v420 = v324;
                      v421 = v321;
                      v422 = v318;
                      v423 = v315;
                      v424 = v312;
                      v425 = v309;
                      v426 = v306;
                      v427 = v303;
                      v428 = v300;
                      v429 = v288;
                      v430 = v291;
                      v431 = v294;
                      v432 = v297;
                      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                        goto LABEL_26;
                    }
                    v100 = sub_2497A1E9C();
                    v101 = sub_2497A1E9C();
                    if (v100 < v101)
                      goto LABEL_22;
                    if (v101 < v100)
                    {
LABEL_26:
                      swift_release();
                      swift_release();
LABEL_27:
                      v2 = v241;
                      v13 = v234;
                      v64 = v235;
                      v12 = v248;
                      v102 = v354;
                      v71 = v357;
                      if ((v230 & 1) != 0)
                      {
                        v14 = v236;
                        goto LABEL_34;
                      }
LABEL_28:
                      v72 = v71 + 1;
                      v73 = v102 + 40;
                      if (v71 + 1 >= v64)
                      {
                        v14 = v236;
                        goto LABEL_33;
                      }
                      continue;
                    }
                    sub_2497A1E9C();
                    v104 = v103;
                    sub_2497A1E9C();
                    v106 = v105;
                    swift_release();
                    swift_release();
                    if (v104 >= v106)
                      goto LABEL_27;
                  }
                  break;
                }
                v2 = v241;
                v13 = v234;
                v64 = v235;
                v12 = v248;
                v102 = v354;
                v71 = v357;
                if ((v230 & 1) == 0)
                {
                  v15 = v357;
                  v14 = v236;
                  goto LABEL_57;
                }
                goto LABEL_28;
              }
              v64 = v235;
LABEL_56:
              v15 = v72;
              goto LABEL_57;
            }
            v12 = v248;
            if (v72 < v235)
            {
              v230 = 1;
              goto LABEL_14;
            }
            v64 = v235;
            goto LABEL_35;
          }
          v230 = 0;
        }
        else
        {
          v230 = 1;
          v13 = v234;
        }
LABEL_13:
        swift_release();
        swift_release();
        v72 = v14 + 2;
        v12 = v248;
        if (v14 + 2 < v70)
          goto LABEL_14;
        v64 = v70;
LABEL_33:
        v71 = v72;
        v15 = v72;
        if (!v230)
          goto LABEL_57;
LABEL_34:
        v72 = v71;
        if (v71 < v14)
          goto LABEL_180;
LABEL_35:
        if (v14 >= v72)
          goto LABEL_56;
        v107 = v64;
        v108 = 40 * v72;
        v109 = 40 * v14;
        v110 = v72;
        v111 = v14;
        do
        {
          if (v111 != --v110)
          {
            if (!v12)
              goto LABEL_184;
            v112 = v12 + v109;
            v113 = *(_QWORD *)(v12 + v109 + 32);
            v114 = v12 + v108;
            v115 = *(_OWORD *)(v12 + v109);
            v116 = *(_OWORD *)(v12 + v109 + 16);
            v117 = *(_QWORD *)(v12 + v108 - 8);
            v118 = *(_OWORD *)(v12 + v108 - 24);
            *(_OWORD *)v112 = *(_OWORD *)(v12 + v108 - 40);
            *(_OWORD *)(v112 + 16) = v118;
            *(_QWORD *)(v112 + 32) = v117;
            *(_OWORD *)(v114 - 40) = v115;
            *(_OWORD *)(v114 - 24) = v116;
            *(_QWORD *)(v114 - 8) = v113;
          }
          ++v111;
          v108 -= 40;
          v109 += 40;
        }
        while (v111 < v110);
        v15 = v72;
        v64 = v107;
LABEL_57:
        if (v15 >= v64)
          goto LABEL_85;
        if (__OFSUB__(v15, v14))
          goto LABEL_176;
        v125 = v64;
        if (v15 - v14 >= v227)
          goto LABEL_85;
        if (__OFADD__(v14, v227))
          goto LABEL_178;
        if (v14 + v227 < v64)
          v125 = v14 + v227;
        if (v125 < v14)
          goto LABEL_179;
        if (v15 == v125)
          goto LABEL_85;
        v242 = v2;
        v126 = v12 + 40 * v15;
        v233 = v125;
        do
        {
          v127 = *(_QWORD *)(v12 + 40 * v15 + 32);
          v239 = v126;
          v246 = v15;
          while (1)
          {
            v346 = v126;
            v349 = v14;
            v128 = *(_QWORD *)(v126 - 8);
            v129 = (char *)(*(_QWORD *)(v127 + 24)
                          + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
            swift_beginAccess();
            v130 = *v129;
            v131 = v129[1];
            v132 = v129[2];
            v133 = v129[3];
            v134 = v129[4];
            v358 = v129[5];
            v135 = v129[6];
            v352 = v129[7];
            v416 = v129[8];
            v413 = v129[9];
            v410 = v129[10];
            v136 = v129[11];
            v355 = v129[12];
            v407 = v129[13];
            v405 = v129[14];
            v403 = v129[15];
            v340 = v129[17];
            v343 = v129[16];
            v334 = v129[19];
            v337 = v129[18];
            v328 = v129[21];
            v331 = v129[20];
            v322 = v129[23];
            v325 = v129[22];
            v316 = v129[25];
            v319 = v129[24];
            v310 = v129[27];
            v313 = v129[26];
            v137 = (char *)(*(_QWORD *)(v128 + 24)
                          + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
            v298 = v129[28];
            v301 = v129[29];
            v304 = v129[30];
            v307 = v129[31];
            swift_beginAccess();
            v138 = *v137;
            v139 = v137[1];
            v140 = v137[2];
            v141 = v137[3];
            v142 = v137[4];
            v143 = v137[5];
            v144 = v137[6];
            v145 = v137[7];
            v146 = v137[8];
            v147 = v137[9];
            v148 = v137[10];
            v149 = v137[11];
            v150 = v137[12];
            v151 = v137[13];
            v152 = v137[14];
            v153 = v137[15];
            v295 = v137[16];
            v292 = v137[17];
            v289 = v137[18];
            v286 = v137[19];
            v283 = v137[20];
            v280 = v137[21];
            v277 = v137[22];
            v274 = v137[23];
            v271 = v137[24];
            v268 = v137[25];
            v265 = v137[26];
            v262 = v137[27];
            v259 = v137[28];
            v256 = v137[29];
            v253 = v137[30];
            v251 = v137[31];
            __s1 = v130;
            v434 = v131;
            v435 = v132;
            v436 = v133;
            v437 = v134;
            v438 = v358;
            v439 = v135;
            v440 = v352;
            v441 = v416;
            v442 = v413;
            v443 = v410;
            v444 = v136;
            v445 = v355;
            v446 = v407;
            v447 = v405;
            v448 = v403;
            __s2 = v138;
            v399 = v139;
            v418 = v139;
            v396 = v140;
            v419 = v140;
            v393 = v141;
            v420 = v141;
            v390 = v142;
            v421 = v142;
            v388 = v143;
            v422 = v143;
            v385 = v144;
            v423 = v144;
            v382 = v145;
            v424 = v145;
            v379 = v146;
            v425 = v146;
            v376 = v147;
            v426 = v147;
            v427 = v148;
            v373 = v149;
            v428 = v149;
            v370 = v150;
            v429 = v150;
            v367 = v151;
            v430 = v151;
            v364 = v152;
            v431 = v152;
            v361 = v153;
            v432 = v153;
            swift_retain();
            swift_retain();
            if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
              goto LABEL_74;
            __s1 = v138;
            v434 = v399;
            v435 = v396;
            v436 = v393;
            v437 = v390;
            v438 = v388;
            v439 = v385;
            v440 = v382;
            v441 = v379;
            v442 = v376;
            v443 = v148;
            v444 = v373;
            v445 = v370;
            v446 = v367;
            v447 = v364;
            v448 = v361;
            __s2 = v130;
            v418 = v131;
            v419 = v132;
            v420 = v133;
            v421 = v134;
            v422 = v358;
            v423 = v135;
            v424 = v352;
            v425 = v416;
            v426 = v413;
            v427 = v410;
            v428 = v136;
            v429 = v355;
            v430 = v407;
            v431 = v405;
            v432 = v403;
            if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
            {
              __s1 = v343;
              v434 = v340;
              v435 = v337;
              v436 = v334;
              v437 = v331;
              v438 = v328;
              v439 = v325;
              v440 = v322;
              v441 = v319;
              v442 = v316;
              v443 = v313;
              v444 = v310;
              v445 = v298;
              v446 = v301;
              v447 = v304;
              v448 = v307;
              __s2 = v295;
              v418 = v292;
              v419 = v289;
              v420 = v286;
              v421 = v283;
              v422 = v280;
              v423 = v277;
              v424 = v274;
              v425 = v271;
              v426 = v268;
              v427 = v265;
              v428 = v262;
              v429 = v259;
              v430 = v256;
              v431 = v253;
              v432 = v251;
              if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
              {
LABEL_74:
                swift_release();
                swift_release();
                goto LABEL_75;
              }
            }
            __s1 = v138;
            v434 = v399;
            v435 = v396;
            v436 = v393;
            v437 = v390;
            v438 = v388;
            v439 = v385;
            v440 = v382;
            v441 = v379;
            v442 = v376;
            v443 = v148;
            v444 = v373;
            v445 = v370;
            v446 = v367;
            v447 = v364;
            v448 = v361;
            __s2 = v130;
            v418 = v131;
            v419 = v132;
            v420 = v133;
            v421 = v134;
            v422 = v358;
            v423 = v135;
            v424 = v352;
            v425 = v416;
            v426 = v413;
            v427 = v410;
            v428 = v136;
            v429 = v355;
            v430 = v407;
            v431 = v405;
            v432 = v403;
            if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
              break;
            __s1 = v130;
            v434 = v131;
            v435 = v132;
            v436 = v133;
            v437 = v134;
            v438 = v358;
            v439 = v135;
            v440 = v352;
            v441 = v416;
            v442 = v413;
            v443 = v410;
            v444 = v136;
            v445 = v355;
            v446 = v407;
            v447 = v405;
            v448 = v403;
            __s2 = v138;
            v418 = v399;
            v419 = v396;
            v420 = v393;
            v421 = v390;
            v422 = v388;
            v423 = v385;
            v424 = v382;
            v425 = v379;
            v426 = v376;
            v427 = v148;
            v428 = v373;
            v429 = v370;
            v430 = v367;
            v431 = v364;
            v432 = v361;
            if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
            {
              __s1 = v295;
              v434 = v292;
              v435 = v289;
              v436 = v286;
              v437 = v283;
              v438 = v280;
              v439 = v277;
              v440 = v274;
              v441 = v271;
              v442 = v268;
              v443 = v265;
              v444 = v262;
              v445 = v259;
              v446 = v256;
              v447 = v253;
              v448 = v251;
              __s2 = v343;
              v418 = v340;
              v419 = v337;
              v420 = v334;
              v421 = v331;
              v422 = v328;
              v423 = v325;
              v424 = v322;
              v425 = v319;
              v426 = v316;
              v427 = v313;
              v428 = v310;
              v429 = v298;
              v430 = v301;
              v431 = v304;
              v432 = v307;
              if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
                break;
            }
            v154 = sub_2497A1E9C();
            v155 = sub_2497A1E9C();
            if (v154 < v155)
              goto LABEL_74;
            if (v155 < v154)
              break;
            sub_2497A1E9C();
            v161 = v160;
            sub_2497A1E9C();
            v163 = v162;
            swift_release();
            swift_release();
            if (v161 >= v163)
              goto LABEL_82;
LABEL_75:
            v156 = v246;
            v12 = v248;
            if (!v248)
              goto LABEL_182;
            v127 = *(_QWORD *)(v346 + 32);
            v157 = *(_OWORD *)v346;
            v158 = *(_OWORD *)(v346 + 16);
            v159 = *(_OWORD *)(v346 - 24);
            *(_OWORD *)v346 = *(_OWORD *)(v346 - 40);
            *(_OWORD *)(v346 + 16) = v159;
            *(_QWORD *)(v346 + 32) = *(_QWORD *)(v346 - 8);
            *(_OWORD *)(v346 - 24) = v158;
            *(_QWORD *)(v346 - 8) = v127;
            *(_OWORD *)(v346 - 40) = v157;
            v126 = v346 - 40;
            v14 = v349 + 1;
            if (v246 == v349 + 1)
              goto LABEL_83;
          }
          swift_release();
          swift_release();
LABEL_82:
          v156 = v246;
          v12 = v248;
LABEL_83:
          v15 = v156 + 1;
          v14 = v236;
          v126 = v239 + 40;
        }
        while (v15 != v233);
        v15 = v233;
        v2 = v242;
        v13 = v234;
LABEL_85:
        if (v15 < v14)
          goto LABEL_175;
        v247 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_24975DAF4(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
        v165 = *((_QWORD *)v13 + 2);
        v164 = *((_QWORD *)v13 + 3);
        v166 = v165 + 1;
        v12 = v248;
        if (v165 >= v164 >> 1)
        {
          v215 = sub_24975DAF4((char *)(v164 > 1), v165 + 1, 1, v13);
          v12 = v248;
          v13 = v215;
        }
        *((_QWORD *)v13 + 2) = v166;
        v167 = v13 + 32;
        v168 = &v13[16 * v165 + 32];
        *(_QWORD *)v168 = v236;
        *((_QWORD *)v168 + 1) = v247;
        if (v165)
        {
          while (1)
          {
            v169 = v166 - 1;
            if (v166 >= 4)
            {
              v174 = &v167[16 * v166];
              v175 = *((_QWORD *)v174 - 8);
              v176 = *((_QWORD *)v174 - 7);
              v180 = __OFSUB__(v176, v175);
              v177 = v176 - v175;
              if (v180)
                goto LABEL_160;
              v179 = *((_QWORD *)v174 - 6);
              v178 = *((_QWORD *)v174 - 5);
              v180 = __OFSUB__(v178, v179);
              v172 = v178 - v179;
              v173 = v180;
              if (v180)
                goto LABEL_161;
              v181 = v166 - 2;
              v182 = &v167[16 * v166 - 32];
              v184 = *(_QWORD *)v182;
              v183 = *((_QWORD *)v182 + 1);
              v180 = __OFSUB__(v183, v184);
              v185 = v183 - v184;
              if (v180)
                goto LABEL_163;
              v180 = __OFADD__(v172, v185);
              v186 = v172 + v185;
              if (v180)
                goto LABEL_164;
              if (v186 >= v177)
              {
                v204 = &v167[16 * v169];
                v206 = *(_QWORD *)v204;
                v205 = *((_QWORD *)v204 + 1);
                v180 = __OFSUB__(v205, v206);
                v207 = v205 - v206;
                if (v180)
                  goto LABEL_170;
                v197 = v172 < v207;
                goto LABEL_122;
              }
            }
            else
            {
              if (v166 != 3)
              {
                v198 = *((_QWORD *)v13 + 4);
                v199 = *((_QWORD *)v13 + 5);
                v180 = __OFSUB__(v199, v198);
                v191 = v199 - v198;
                v192 = v180;
                goto LABEL_116;
              }
              v171 = *((_QWORD *)v13 + 4);
              v170 = *((_QWORD *)v13 + 5);
              v180 = __OFSUB__(v170, v171);
              v172 = v170 - v171;
              v173 = v180;
            }
            if ((v173 & 1) != 0)
              goto LABEL_162;
            v181 = v166 - 2;
            v187 = &v167[16 * v166 - 32];
            v189 = *(_QWORD *)v187;
            v188 = *((_QWORD *)v187 + 1);
            v190 = __OFSUB__(v188, v189);
            v191 = v188 - v189;
            v192 = v190;
            if (v190)
              goto LABEL_165;
            v193 = &v167[16 * v169];
            v195 = *(_QWORD *)v193;
            v194 = *((_QWORD *)v193 + 1);
            v180 = __OFSUB__(v194, v195);
            v196 = v194 - v195;
            if (v180)
              goto LABEL_167;
            if (__OFADD__(v191, v196))
              goto LABEL_169;
            if (v191 + v196 >= v172)
            {
              v197 = v172 < v196;
LABEL_122:
              if (v197)
                v169 = v181;
              goto LABEL_124;
            }
LABEL_116:
            if ((v192 & 1) != 0)
              goto LABEL_166;
            v200 = &v167[16 * v169];
            v202 = *(_QWORD *)v200;
            v201 = *((_QWORD *)v200 + 1);
            v180 = __OFSUB__(v201, v202);
            v203 = v201 - v202;
            if (v180)
              goto LABEL_168;
            if (v203 < v191)
              goto LABEL_133;
LABEL_124:
            v208 = v169 - 1;
            if (v169 - 1 >= v166)
            {
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
              goto LABEL_171;
            }
            if (!v12)
              goto LABEL_183;
            v209 = v13;
            v210 = &v167[16 * v208];
            v211 = *(_QWORD *)v210;
            v212 = &v167[16 * v169];
            v213 = *((_QWORD *)v212 + 1);
            sub_2497BFB4C((char *)(v12 + 40 * *(_QWORD *)v210), (char *)(v12 + 40 * *(_QWORD *)v212), v12 + 40 * v213, v243);
            if (v2)
            {
LABEL_151:
              swift_bridgeObjectRelease();
              if (v235 >= -1)
                goto LABEL_154;
              __break(1u);
LABEL_153:
              swift_bridgeObjectRelease();
              if (v235 >= -1)
              {
LABEL_154:
                *(_QWORD *)(v228 + 16) = 0;
                return swift_bridgeObjectRelease();
              }
LABEL_181:
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
            }
            if (v213 < v211)
              goto LABEL_157;
            if (v169 > *((_QWORD *)v209 + 2))
              goto LABEL_158;
            *(_QWORD *)v210 = v211;
            *(_QWORD *)&v167[16 * v208 + 8] = v213;
            v214 = *((_QWORD *)v209 + 2);
            if (v169 >= v214)
              goto LABEL_159;
            v13 = v209;
            v166 = v214 - 1;
            memmove(&v167[16 * v169], v212 + 16, 16 * (v214 - 1 - v169));
            *((_QWORD *)v209 + 2) = v214 - 1;
            v12 = v248;
            if (v214 <= 2)
              goto LABEL_133;
          }
        }
        v166 = 1;
LABEL_133:
        v11 = v247;
        v8 = v235;
        if (v247 >= v235)
          goto LABEL_139;
      }
      v230 = 1;
LABEL_12:
      v2 = v240;
      v13 = v234;
      v70 = v235;
      v14 = v236;
      v71 = v244;
      goto LABEL_13;
    }
    v13 = (char *)MEMORY[0x24BEE4AF8];
    v166 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_139:
    if (v166 < 2)
      goto LABEL_153;
    v216 = *v226;
    while (1)
    {
      v217 = v166 - 2;
      if (v166 < 2)
        break;
      if (!v216)
        goto LABEL_185;
      v218 = v13;
      v219 = v13 + 32;
      v220 = *(_QWORD *)&v13[16 * v217 + 32];
      v221 = *(_QWORD *)&v13[16 * v166 + 24];
      sub_2497BFB4C((char *)(v216 + 40 * v220), (char *)(v216 + 40 * *(_QWORD *)&v219[16 * v166 - 16]), v216 + 40 * v221, v243);
      if (v2)
        goto LABEL_151;
      if (v221 < v220)
        goto LABEL_172;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v218 = sub_24975DBE8();
      if (v217 >= *((_QWORD *)v218 + 2))
        goto LABEL_173;
      v222 = &v218[16 * v217 + 32];
      *(_QWORD *)v222 = v220;
      *((_QWORD *)v222 + 1) = v221;
      v223 = *((_QWORD *)v218 + 2);
      if (v166 > v223)
        goto LABEL_174;
      v13 = v218;
      memmove(&v218[16 * v166 + 16], &v218[16 * v166 + 32], 16 * (v223 - v166));
      *((_QWORD *)v218 + 2) = v223 - 1;
      v166 = v223 - 1;
      if (v223 <= 2)
        goto LABEL_153;
    }
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    __break(1u);
LABEL_179:
    __break(1u);
LABEL_180:
    __break(1u);
    goto LABEL_181;
  }
  if (v4 < 0)
    goto LABEL_177;
  if (v4)
    return sub_2497B9690(0, v4, 1, a1);
  return result;
}

uint64_t sub_2497B61BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unsigned __int16 *v4;
  char *v5;
  char v6;
  unsigned __int8 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  unsigned __int8 v36;
  char v37;
  int v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  unsigned __int8 v45;
  int v46;
  char v47;
  char v48;
  int v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v67;
  char v68;
  unsigned __int8 v69;
  char v70;
  char v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  unsigned __int16 *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  unsigned __int8 v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unsigned __int8 v124;
  unsigned __int8 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int v140;
  unsigned __int8 v141;
  char v142;
  char v143;
  char v144;
  char v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  unsigned __int8 v160;
  char v161;
  char v162;
  char v163;
  unsigned __int8 v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  char v177;
  char v178;
  char v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  char v183;
  uint64_t v184;
  char v185;
  char v186;
  unsigned __int8 v187;
  char v188;
  char v189;
  char v190;
  uint64_t v191;
  char v192;
  char v193;
  unsigned __int8 v194;
  char v195;
  uint64_t v196;
  char v197;
  char v198;
  char v199;
  char v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209;
  uint64_t v210;
  char v211;
  unsigned __int8 v212;
  char v213;
  unsigned __int8 v214;
  unsigned __int8 v215;
  unsigned __int8 v216;
  unsigned __int8 v217;
  uint64_t v218;
  unsigned __int8 v219;
  unsigned int v220;
  char v221;
  char v222;
  char v223;
  unsigned int v224;
  unsigned int v225;
  int8x16_t v226;
  char v227;
  uint64_t v228;
  int v229;
  uint64_t v230;
  __int128 v231;
  unint64_t v232;
  uint64_t v233;
  int v234;
  char __s2;
  char v236;
  char v237;
  char v238;
  char v239;
  unsigned __int8 v240;
  unsigned __int8 v241;
  unint64_t v242;
  char v243;
  char __s1;
  char v245;
  char v246;
  char v247;
  char v248;
  unsigned __int8 v249;
  unsigned __int8 v250;
  unint64_t v251;
  char v252;
  uint64_t v253;

  v77 = result;
  v253 = *MEMORY[0x24BDAC8D0];
  if (a3 == a2)
    return result;
  v79 = *a4;
  v4 = (unsigned __int16 *)(*a4 + 70 * a3 + 68);
  do
  {
    v80 = a3;
    v5 = (char *)(v79 + 70 * a3);
    v221 = *v5;
    v201 = v5[1];
    v6 = v5[2];
    v189 = v5[3];
    v188 = v5[4];
    v187 = v5[5];
    v7 = v5[6];
    v8 = v5[7];
    v197 = v5[8];
    v195 = v5[9];
    v9 = v5[10];
    v10 = v5[11];
    v198 = v5[12];
    v11 = v5[13];
    v12 = v5[14];
    v13 = v5[15];
    v167 = v5[16];
    v165 = v5[17];
    v158 = v5[18];
    v126 = v5[19];
    v127 = v5[20];
    v125 = v5[21];
    v14 = *(_QWORD *)(v5 + 23);
    v108 = v77;
    v78 = v4;
    v124 = v5[22];
    while (1)
    {
      v232 = v14;
      v144 = v13;
      v145 = v12;
      v111 = *((unsigned __int8 *)v4 - 37);
      v15 = *((unsigned __int8 *)v4 - 34);
      v16 = *((unsigned __int8 *)v4 - 33);
      v17 = *((unsigned __int8 *)v4 - 32);
      v18 = *((unsigned __int8 *)v4 - 31);
      v19 = *((unsigned __int8 *)v4 - 30);
      v20 = *((unsigned __int8 *)v4 - 29);
      v21 = *((unsigned __int8 *)v4 - 28);
      v22 = *((unsigned __int8 *)v4 - 27);
      v23 = *((unsigned __int8 *)v4 - 26);
      v24 = *((unsigned __int8 *)v4 - 25);
      v25 = *((unsigned __int8 *)v4 - 24);
      v26 = *((unsigned __int8 *)v4 - 23);
      v27 = *((unsigned __int8 *)v4 - 22);
      v28 = *((unsigned __int8 *)v4 - 21);
      v89 = *((unsigned __int8 *)v4 - 20);
      v208 = *((unsigned __int8 *)v4 - 19);
      v88 = *((unsigned __int8 *)v4 - 18);
      v87 = *((unsigned __int8 *)v4 - 17);
      v86 = *((unsigned __int8 *)v4 - 16);
      v97 = *((_BYTE *)v4 - 15);
      v84 = *((unsigned __int8 *)v4 - 13);
      v85 = *((_BYTE *)v4 - 14);
      v98 = *((_BYTE *)v4 - 12);
      v212 = *((_BYTE *)v4 - 11);
      v214 = *((_BYTE *)v4 - 10);
      v215 = *((_BYTE *)v4 - 9);
      v217 = *((_BYTE *)v4 - 8);
      v219 = *((_BYTE *)v4 - 7);
      v216 = *((_BYTE *)v4 - 6);
      v218 = *((unsigned __int8 *)v4 - 5);
      v83 = *((unsigned __int8 *)v4 - 4);
      v110 = *(v4 - 1);
      v220 = *v4;
      v143 = *((_BYTE *)v4 - 138);
      v142 = *((_BYTE *)v4 - 137);
      v161 = *((_BYTE *)v4 - 136);
      v177 = *((_BYTE *)v4 - 135);
      v176 = *((_BYTE *)v4 - 134);
      v164 = *((_BYTE *)v4 - 133);
      v160 = *((_BYTE *)v4 - 132);
      v159 = *((_BYTE *)v4 - 131);
      v163 = *((_BYTE *)v4 - 130);
      v162 = *((_BYTE *)v4 - 129);
      v186 = *((_BYTE *)v4 - 128);
      v185 = *((_BYTE *)v4 - 127);
      v183 = *((_BYTE *)v4 - 126);
      v181 = *((_BYTE *)v4 - 125);
      v179 = *((_BYTE *)v4 - 124);
      v178 = *((_BYTE *)v4 - 123);
      v128 = *((unsigned __int8 *)v4 - 122);
      v129 = *((unsigned __int8 *)v4 - 121);
      v123 = *((unsigned __int8 *)v4 - 120);
      v122 = *((unsigned __int8 *)v4 - 119);
      v121 = *((unsigned __int8 *)v4 - 118);
      v120 = *((unsigned __int8 *)v4 - 117);
      v119 = *((unsigned __int8 *)v4 - 116);
      v118 = *((unsigned __int8 *)v4 - 115);
      v130 = *((unsigned __int8 *)v4 - 114);
      v131 = *((unsigned __int8 *)v4 - 113);
      v117 = *((unsigned __int8 *)v4 - 112);
      v116 = *((unsigned __int8 *)v4 - 111);
      v115 = *((unsigned __int8 *)v4 - 110);
      v114 = *((unsigned __int8 *)v4 - 109);
      v113 = *((unsigned __int8 *)v4 - 108);
      v112 = *((unsigned __int8 *)v4 - 107);
      v147 = *((unsigned __int8 *)v4 - 106);
      v148 = *((unsigned __int8 *)v4 - 105);
      v149 = *((unsigned __int8 *)v4 - 104);
      v150 = *((unsigned __int8 *)v4 - 103);
      v151 = *((unsigned __int8 *)v4 - 102);
      v152 = *((unsigned __int8 *)v4 - 101);
      v153 = *((unsigned __int8 *)v4 - 100);
      v154 = *((unsigned __int8 *)v4 - 99);
      v155 = *((unsigned __int8 *)v4 - 98);
      v156 = *((unsigned __int8 *)v4 - 97);
      v157 = *((unsigned __int8 *)v4 - 96);
      v168 = *((unsigned __int8 *)v4 - 95);
      v169 = *((unsigned __int8 *)v4 - 94);
      v171 = *((unsigned __int8 *)v4 - 93);
      v173 = *((unsigned __int8 *)v4 - 92);
      v175 = *((unsigned __int8 *)v4 - 91);
      v132 = *((unsigned __int8 *)v4 - 90);
      v133 = *((unsigned __int8 *)v4 - 89);
      v100 = *((unsigned __int8 *)v4 - 88);
      v101 = *((unsigned __int8 *)v4 - 87);
      v102 = *((unsigned __int8 *)v4 - 86);
      v103 = *((unsigned __int8 *)v4 - 85);
      v104 = *((unsigned __int8 *)v4 - 84);
      v105 = *((unsigned __int8 *)v4 - 83);
      v106 = *((unsigned __int8 *)v4 - 82);
      v107 = *((unsigned __int8 *)v4 - 81);
      v134 = *((unsigned __int8 *)v4 - 80);
      v135 = *((unsigned __int8 *)v4 - 79);
      v136 = *((unsigned __int8 *)v4 - 78);
      v137 = *((unsigned __int8 *)v4 - 77);
      v138 = *((unsigned __int8 *)v4 - 76);
      v139 = *((unsigned __int8 *)v4 - 75);
      v99 = *((unsigned __int8 *)v4 - 74);
      v109 = *(v4 - 36);
      v140 = *(v4 - 35);
      v95 = *((unsigned __int8 *)v4 - 35);
      v96 = *((unsigned __int8 *)v4 - 36);
      __s1 = *((_BYTE *)v4 - 36);
      v245 = v95;
      v93 = v17;
      v94 = v15;
      v246 = v15;
      v203 = v16;
      v247 = v16;
      v248 = v17;
      v205 = v18;
      v249 = v18;
      v91 = v21;
      v92 = v19;
      v250 = v19;
      v207 = v20;
      LOBYTE(v251) = v20;
      BYTE1(v251) = v21;
      v210 = v22;
      BYTE2(v251) = v22;
      v90 = v25;
      BYTE3(v251) = v23;
      v202 = v24;
      BYTE4(v251) = v24;
      BYTE5(v251) = v25;
      v204 = v26;
      BYTE6(v251) = v26;
      HIBYTE(v251) = v27;
      v206 = v28;
      v252 = v28;
      __s2 = v221;
      v236 = v201;
      v199 = v6;
      v237 = v6;
      v238 = v189;
      v239 = v188;
      v240 = v187;
      v241 = v7;
      LOBYTE(v242) = v8;
      BYTE1(v242) = v197;
      BYTE2(v242) = v195;
      BYTE3(v242) = v9;
      BYTE4(v242) = v10;
      BYTE5(v242) = v198;
      BYTE6(v242) = v11;
      HIBYTE(v242) = v12;
      v243 = v13;
      v29 = v7;
      v30 = v8;
      v31 = v9;
      v32 = v10;
      v33 = v11;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X9 }
      v141 = v29;
      v227 = v195;
      v223 = v33;
      v222 = v145;
      v82 = v165;
      v196 = v210;
      v191 = v23;
      v146 = v27;
      v166 = v208;
      v81 = v212;
      __s1 = v147;
      v245 = v148;
      v246 = v149;
      v247 = v150;
      v248 = v151;
      v249 = v152;
      v250 = v153;
      LOBYTE(v251) = v154;
      BYTE1(v251) = v155;
      BYTE2(v251) = v156;
      BYTE3(v251) = v157;
      BYTE4(v251) = v168;
      BYTE5(v251) = v169;
      BYTE6(v251) = v171;
      HIBYTE(v251) = v173;
      v252 = v175;
      __s2 = v143;
      v236 = v142;
      v237 = v161;
      v238 = v177;
      v239 = v176;
      v240 = v164;
      v241 = v160;
      LOBYTE(v242) = v159;
      BYTE1(v242) = v163;
      BYTE2(v242) = v162;
      BYTE3(v242) = v186;
      BYTE4(v242) = v185;
      BYTE5(v242) = v183;
      BYTE6(v242) = v181;
      HIBYTE(v242) = v179;
      v243 = v178;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X2 }
      v213 = v183;
      v211 = v181;
      v209 = v179;
      v184 = v169;
      v182 = v171;
      v180 = v173;
      __s1 = v221;
      v245 = v201;
      v34 = v199;
      v246 = v199;
      v35 = v189;
      v247 = v189;
      v248 = v188;
      v249 = v187;
      v36 = v29;
      v250 = v29;
      LOBYTE(v251) = v30;
      BYTE1(v251) = v197;
      BYTE2(v251) = v227;
      v37 = v31;
      BYTE3(v251) = v31;
      BYTE4(v251) = v32;
      BYTE5(v251) = v198;
      BYTE6(v251) = v223;
      HIBYTE(v251) = v222;
      v252 = v144;
      __s2 = v143;
      v236 = v142;
      v237 = v161;
      v238 = v177;
      v239 = v176;
      v240 = v164;
      v241 = v160;
      LOBYTE(v242) = v159;
      BYTE1(v242) = v163;
      BYTE2(v242) = v162;
      BYTE3(v242) = v186;
      BYTE4(v242) = v185;
      BYTE5(v242) = v213;
      BYTE6(v242) = v211;
      HIBYTE(v242) = v209;
      v243 = v178;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_54;
      __s1 = v143;
      v245 = v142;
      v246 = v161;
      v247 = v177;
      v248 = v176;
      v249 = v164;
      v250 = v160;
      LOBYTE(v251) = v159;
      BYTE1(v251) = v163;
      BYTE2(v251) = v162;
      BYTE3(v251) = v186;
      BYTE4(v251) = v185;
      BYTE5(v251) = v213;
      BYTE6(v251) = v211;
      HIBYTE(v251) = v209;
      v252 = v178;
      __s2 = v221;
      v236 = v201;
      v237 = v199;
      v238 = v189;
      v239 = v188;
      v240 = v187;
      v241 = v141;
      LOBYTE(v242) = v30;
      BYTE1(v242) = v197;
      BYTE2(v242) = v227;
      BYTE3(v242) = v31;
      BYTE4(v242) = v32;
      BYTE5(v242) = v198;
      BYTE6(v242) = v223;
      HIBYTE(v242) = v222;
      v243 = v144;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v221;
        v245 = v201;
        v246 = v199;
        v247 = v189;
        v248 = v188;
        v249 = v187;
        v250 = v141;
        LOBYTE(v251) = v30;
        BYTE1(v251) = v197;
        BYTE2(v251) = v227;
        BYTE3(v251) = v31;
        BYTE4(v251) = v32;
        BYTE5(v251) = v198;
        BYTE6(v251) = v223;
        HIBYTE(v251) = v222;
        v252 = v144;
        __s2 = v143;
        v236 = v142;
        v237 = v161;
        v238 = v177;
        v239 = v176;
        v240 = v164;
        v241 = v160;
        LOBYTE(v242) = v159;
        BYTE1(v242) = v163;
        BYTE2(v242) = v162;
        BYTE3(v242) = v186;
        BYTE4(v242) = v185;
        BYTE5(v242) = v213;
        BYTE6(v242) = v211;
        HIBYTE(v242) = v209;
        v243 = v178;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_54;
        __s1 = v143;
        v245 = v142;
        v246 = v161;
        v247 = v177;
        v248 = v176;
        v249 = v164;
        v250 = v160;
        LOBYTE(v251) = v159;
        BYTE1(v251) = v163;
        BYTE2(v251) = v162;
        BYTE3(v251) = v186;
        BYTE4(v251) = v185;
        BYTE5(v251) = v213;
        BYTE6(v251) = v211;
        HIBYTE(v251) = v209;
        v252 = v178;
        __s2 = v221;
        v236 = v201;
        v237 = v199;
        v238 = v189;
        v239 = v188;
        v240 = v187;
        v241 = v141;
        LOBYTE(v242) = v30;
        BYTE1(v242) = v197;
        BYTE2(v242) = v227;
        BYTE3(v242) = v31;
        BYTE4(v242) = v32;
        BYTE5(v242) = v198;
        BYTE6(v242) = v223;
        HIBYTE(v242) = v222;
        v243 = v144;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v167;
          v245 = v82;
          v246 = v158;
          v247 = v126;
          v248 = v127;
          v249 = v125;
          v250 = v124;
          v251 = v232;
          v252 = v111;
          __s2 = v128;
          v236 = v129;
          v237 = v123;
          v238 = v122;
          v239 = v121;
          v240 = v120;
          v241 = v119;
          LOBYTE(v242) = v118;
          BYTE1(v242) = v130;
          BYTE2(v242) = v131;
          BYTE3(v242) = v117;
          BYTE4(v242) = v116;
          BYTE5(v242) = v115;
          BYTE6(v242) = v114;
          HIBYTE(v242) = v113;
          v243 = v112;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_54;
        }
        __s1 = v143;
        v245 = v142;
        v246 = v161;
        v247 = v177;
        v248 = v176;
        v249 = v164;
        v250 = v160;
        LOBYTE(v251) = v159;
        BYTE1(v251) = v163;
        BYTE2(v251) = v162;
        BYTE3(v251) = v186;
        BYTE4(v251) = v185;
        BYTE5(v251) = v213;
        BYTE6(v251) = v211;
        HIBYTE(v251) = v209;
        v252 = v178;
        __s2 = v221;
        v236 = v201;
        v237 = v199;
        v238 = v189;
        v239 = v188;
        v240 = v187;
        v241 = v141;
        LOBYTE(v242) = v30;
        BYTE1(v242) = v197;
        BYTE2(v242) = v227;
        BYTE3(v242) = v31;
        BYTE4(v242) = v32;
        BYTE5(v242) = v198;
        BYTE6(v242) = v223;
        HIBYTE(v242) = v222;
        v243 = v144;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v221;
          v245 = v201;
          v246 = v199;
          v247 = v189;
          v248 = v188;
          v249 = v187;
          v250 = v141;
          LOBYTE(v251) = v30;
          BYTE1(v251) = v197;
          BYTE2(v251) = v227;
          BYTE3(v251) = v31;
          BYTE4(v251) = v32;
          BYTE5(v251) = v198;
          BYTE6(v251) = v223;
          HIBYTE(v251) = v222;
          v252 = v144;
          __s2 = v143;
          v236 = v142;
          v237 = v161;
          v238 = v177;
          v239 = v176;
          v240 = v164;
          v241 = v160;
          LOBYTE(v242) = v159;
          BYTE1(v242) = v163;
          BYTE2(v242) = v162;
          BYTE3(v242) = v186;
          BYTE4(v242) = v185;
          BYTE5(v242) = v213;
          BYTE6(v242) = v211;
          HIBYTE(v242) = v209;
          v243 = v178;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_53;
          __s1 = v128;
          v245 = v129;
          v246 = v123;
          v247 = v122;
          v248 = v121;
          v249 = v120;
          v250 = v119;
          LOBYTE(v251) = v118;
          BYTE1(v251) = v130;
          BYTE2(v251) = v131;
          BYTE3(v251) = v117;
          BYTE4(v251) = v116;
          BYTE5(v251) = v115;
          BYTE6(v251) = v114;
          HIBYTE(v251) = v113;
          v252 = v112;
          __s2 = v167;
          v236 = v82;
          v237 = v158;
          v238 = v126;
          v239 = v127;
          v240 = v125;
          v241 = v124;
          v242 = v232;
          v243 = v111;
          if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
          {
LABEL_53:
            if (v83 < v99)
              goto LABEL_54;
            if (v99 >= v83 && v110 < v109)
              goto LABEL_54;
          }
        }
      }
      __s1 = v143;
      v245 = v142;
      v246 = v161;
      v247 = v177;
      v248 = v176;
      v249 = v164;
      v250 = v160;
      LOBYTE(v251) = v159;
      BYTE1(v251) = v163;
      BYTE2(v251) = v162;
      BYTE3(v251) = v186;
      BYTE4(v251) = v185;
      BYTE5(v251) = v213;
      BYTE6(v251) = v211;
      HIBYTE(v251) = v209;
      v252 = v178;
      __s2 = v221;
      v236 = v201;
      v237 = v199;
      v238 = v189;
      v239 = v188;
      v240 = v187;
      v241 = v141;
      LOBYTE(v242) = v30;
      BYTE1(v242) = v197;
      BYTE2(v242) = v227;
      BYTE3(v242) = v31;
      BYTE4(v242) = v32;
      BYTE5(v242) = v198;
      BYTE6(v242) = v223;
      HIBYTE(v242) = v222;
      v243 = v144;
      result = memcmp(&__s1, &__s2, 0x10uLL);
      if ((result & 0x80000000) != 0)
        goto LABEL_56;
      __s1 = v221;
      v245 = v201;
      v246 = v199;
      v247 = v189;
      v248 = v188;
      v249 = v187;
      v250 = v141;
      LOBYTE(v251) = v30;
      BYTE1(v251) = v197;
      BYTE2(v251) = v227;
      BYTE3(v251) = v31;
      BYTE4(v251) = v32;
      BYTE5(v251) = v198;
      BYTE6(v251) = v223;
      HIBYTE(v251) = v222;
      v252 = v144;
      __s2 = v143;
      v236 = v142;
      v237 = v161;
      v238 = v177;
      v239 = v176;
      v240 = v164;
      v241 = v160;
      LOBYTE(v242) = v159;
      BYTE1(v242) = v163;
      BYTE2(v242) = v162;
      BYTE3(v242) = v186;
      BYTE4(v242) = v185;
      BYTE5(v242) = v213;
      BYTE6(v242) = v211;
      HIBYTE(v242) = v209;
      v243 = v178;
      v38 = memcmp(&__s1, &__s2, 0x10uLL);
      v39 = v206;
      v40 = v27;
      v41 = v204;
      v42 = v202;
      v43 = v191;
      v44 = v207;
      v45 = v92;
      if ((v38 & 0x80000000) == 0)
      {
        __s1 = v143;
        v245 = v142;
        v246 = v161;
        v247 = v177;
        v248 = v176;
        v249 = v164;
        v250 = v160;
        LOBYTE(v251) = v159;
        BYTE1(v251) = v163;
        BYTE2(v251) = v162;
        BYTE3(v251) = v186;
        BYTE4(v251) = v185;
        BYTE5(v251) = v213;
        BYTE6(v251) = v211;
        HIBYTE(v251) = v209;
        v252 = v178;
        __s2 = v221;
        v236 = v201;
        v237 = v199;
        v238 = v189;
        v239 = v188;
        v240 = v187;
        v241 = v141;
        LOBYTE(v242) = v30;
        BYTE1(v242) = v197;
        BYTE2(v242) = v227;
        BYTE3(v242) = v31;
        BYTE4(v242) = v32;
        BYTE5(v242) = v198;
        BYTE6(v242) = v223;
        HIBYTE(v242) = v222;
        v243 = v144;
        result = memcmp(&__s1, &__s2, 0x10uLL);
        if ((result & 0x80000000) != 0)
          goto LABEL_56;
        __s1 = v221;
        v245 = v201;
        v246 = v199;
        v247 = v189;
        v248 = v188;
        v249 = v187;
        v250 = v141;
        LOBYTE(v251) = v30;
        BYTE1(v251) = v197;
        BYTE2(v251) = v227;
        BYTE3(v251) = v31;
        BYTE4(v251) = v32;
        BYTE5(v251) = v198;
        BYTE6(v251) = v223;
        HIBYTE(v251) = v222;
        v252 = v144;
        __s2 = v143;
        v236 = v142;
        v237 = v161;
        v238 = v177;
        v239 = v176;
        v240 = v164;
        v241 = v160;
        LOBYTE(v242) = v159;
        BYTE1(v242) = v163;
        BYTE2(v242) = v162;
        BYTE3(v242) = v186;
        BYTE4(v242) = v185;
        BYTE5(v242) = v213;
        BYTE6(v242) = v211;
        HIBYTE(v242) = v209;
        v243 = v178;
        v46 = memcmp(&__s1, &__s2, 0x10uLL);
        v170 = v167 | (v82 << 8);
        v172 = v128 | (v129 << 8);
        v174 = v130 | (v131 << 8);
        v47 = v221;
        if ((v46 & 0x80000000) == 0)
        {
          result = static UniversalControlUUID.compare(lhs:rhs:)(v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56), v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56));
          if (result == -1)
            goto LABEL_56;
          static UniversalControlUUID.compare(lhs:rhs:)(v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56), v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56));
          v47 = v221;
          v34 = v199;
          v35 = v189;
          v36 = v141;
          v37 = v31;
        }
        __s1 = v47;
        v245 = v201;
        v246 = v34;
        v247 = v35;
        v248 = v188;
        v249 = v187;
        v250 = v36;
        LOBYTE(v251) = v30;
        BYTE1(v251) = v197;
        BYTE2(v251) = v227;
        BYTE3(v251) = v37;
        BYTE4(v251) = v32;
        BYTE5(v251) = v198;
        BYTE6(v251) = v223;
        HIBYTE(v251) = v222;
        v252 = v144;
        __s2 = v143;
        v236 = v142;
        v237 = v161;
        v238 = v177;
        v239 = v176;
        v240 = v164;
        v241 = v160;
        LOBYTE(v242) = v159;
        BYTE1(v242) = v163;
        BYTE2(v242) = v162;
        BYTE3(v242) = v186;
        BYTE4(v242) = v185;
        BYTE5(v242) = v213;
        BYTE6(v242) = v211;
        HIBYTE(v242) = v209;
        v243 = v178;
        v48 = v47;
        v49 = memcmp(&__s1, &__s2, 0x10uLL);
        v45 = v92;
        v44 = v207;
        v43 = v191;
        v42 = v202;
        v41 = v204;
        v40 = v27;
        v39 = v206;
        if ((v49 & 0x80000000) == 0)
        {
          __s1 = v143;
          v245 = v142;
          v246 = v161;
          v247 = v177;
          v248 = v176;
          v249 = v164;
          v250 = v160;
          LOBYTE(v251) = v159;
          BYTE1(v251) = v163;
          BYTE2(v251) = v162;
          BYTE3(v251) = v186;
          BYTE4(v251) = v185;
          BYTE5(v251) = v213;
          BYTE6(v251) = v211;
          HIBYTE(v251) = v209;
          v252 = v178;
          __s2 = v48;
          v236 = v201;
          v237 = v34;
          v238 = v35;
          v239 = v188;
          v240 = v187;
          v241 = v36;
          LOBYTE(v242) = v30;
          BYTE1(v242) = v197;
          BYTE2(v242) = v227;
          BYTE3(v242) = v37;
          BYTE4(v242) = v32;
          BYTE5(v242) = v198;
          BYTE6(v242) = v223;
          HIBYTE(v242) = v222;
          v243 = v144;
          result = memcmp(&__s1, &__s2, 0x10uLL);
          if ((result & 0x80000000) == 0)
          {
            v50 = static UniversalControlUUID.compare(lhs:rhs:)(v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56), v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56));
            v45 = v92;
            v44 = v207;
            v43 = v191;
            v42 = v202;
            v41 = v204;
            v40 = v27;
            v39 = v206;
            if (v50 == -1)
              goto LABEL_26;
            result = static UniversalControlUUID.compare(lhs:rhs:)(v172 | (v123 << 16) | (v122 << 24) | (v121 << 32) | (v120 << 40) | (v119 << 48) | (v118 << 56), v174 | (v117 << 16) | (v116 << 24) | (v115 << 32) | (v114 << 40) | (v113 << 48) | (v112 << 56), v170 | (v158 << 16) | (v126 << 24) | (v127 << 32) | ((unint64_t)v125 << 40) | ((unint64_t)v124 << 48) | ((unint64_t)v232 << 56), BYTE1(v232) | (unint64_t)(unsigned __int16)(BYTE2(v232) << 8) | ((unint64_t)BYTE3(v232) << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)BYTE4(v232) << 24) | ((unint64_t)BYTE5(v232) << 32) | ((unint64_t)BYTE6(v232) << 40) | ((unint64_t)HIBYTE(v232) << 48) | (v111 << 56));
          }
          v45 = v92;
          v44 = v207;
          v43 = v191;
          v42 = v202;
          v41 = v204;
          v40 = v27;
          v39 = v206;
          if (v99 < v83)
            goto LABEL_56;
          if (v83 >= v99 && v109 < v110)
            goto LABEL_56;
        }
      }
LABEL_26:
      __s1 = v96;
      v245 = v95;
      v246 = v94;
      v247 = v203;
      v248 = v93;
      v249 = v205;
      v250 = v45;
      LOBYTE(v251) = v44;
      BYTE1(v251) = v91;
      BYTE2(v251) = v196;
      BYTE3(v251) = v43;
      BYTE4(v251) = v42;
      BYTE5(v251) = v90;
      BYTE6(v251) = v41;
      HIBYTE(v251) = v40;
      v252 = v39;
      __s2 = v147;
      v236 = v148;
      v237 = v149;
      v238 = v150;
      v239 = v151;
      v240 = v152;
      v241 = v153;
      LOBYTE(v242) = v154;
      BYTE1(v242) = v155;
      BYTE2(v242) = v156;
      BYTE3(v242) = v157;
      BYTE4(v242) = v168;
      BYTE5(v242) = v184;
      BYTE6(v242) = v182;
      HIBYTE(v242) = v180;
      v243 = v175;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_54;
      __s1 = v147;
      v245 = v148;
      v225 = 0x1000302u >> (8 * v83);
      v246 = v149;
      v247 = v150;
      v224 = 0x1000302u >> (8 * v99);
      v248 = v151;
      v249 = v152;
      v250 = v153;
      LOBYTE(v251) = v154;
      BYTE1(v251) = v155;
      BYTE2(v251) = v156;
      BYTE3(v251) = v157;
      BYTE4(v251) = v168;
      BYTE5(v251) = v184;
      BYTE6(v251) = v182;
      HIBYTE(v251) = v180;
      v252 = v175;
      __s2 = v96;
      v236 = v95;
      v237 = v94;
      v238 = v203;
      v239 = v93;
      v240 = v205;
      v241 = v92;
      LOBYTE(v242) = v207;
      BYTE1(v242) = v91;
      BYTE2(v242) = v196;
      BYTE3(v242) = v191;
      BYTE4(v242) = v202;
      BYTE5(v242) = v90;
      BYTE6(v242) = v204;
      HIBYTE(v242) = v27;
      v243 = v206;
      v228 = v132 | (v133 << 8);
      v230 = v106 | (v107 << 8);
      v233 = v89 | (v166 << 8);
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        break;
      __s1 = v96;
      v245 = v95;
      v246 = v94;
      v247 = v203;
      v248 = v93;
      v249 = v205;
      v250 = v92;
      LOBYTE(v251) = v207;
      BYTE1(v251) = v91;
      BYTE2(v251) = v196;
      BYTE3(v251) = v191;
      BYTE4(v251) = v202;
      BYTE5(v251) = v90;
      BYTE6(v251) = v204;
      HIBYTE(v251) = v27;
      v252 = v206;
      __s2 = v147;
      v236 = v148;
      v237 = v149;
      v238 = v150;
      v239 = v151;
      v240 = v152;
      v241 = v153;
      LOBYTE(v242) = v154;
      BYTE1(v242) = v155;
      BYTE2(v242) = v156;
      BYTE3(v242) = v157;
      BYTE4(v242) = v168;
      BYTE5(v242) = v184;
      BYTE6(v242) = v182;
      HIBYTE(v242) = v180;
      v243 = v175;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v147;
        v245 = v148;
        BYTE1(v251) = v155;
        BYTE2(v251) = v156;
        __s2 = v96;
        v236 = v95;
        BYTE1(v242) = v91;
        BYTE2(v242) = v196;
        v246 = v149;
        v247 = v150;
        v248 = v151;
        v52 = v152;
        v249 = v152;
        v250 = v153;
        LOBYTE(v251) = v154;
        v53 = v157;
        BYTE3(v251) = v157;
        v54 = v168;
        BYTE4(v251) = v168;
        v55 = v184;
        BYTE5(v251) = v184;
        v56 = v182;
        BYTE6(v251) = v182;
        v57 = v180;
        HIBYTE(v251) = v180;
        v58 = v175;
        v252 = v175;
        v59 = v94;
        v237 = v94;
        v238 = v203;
        v239 = v93;
        v240 = v205;
        v241 = v92;
        LOBYTE(v242) = v207;
        BYTE3(v242) = v191;
        BYTE4(v242) = v202;
        BYTE5(v242) = v90;
        BYTE6(v242) = v204;
        HIBYTE(v242) = v146;
        v243 = v206;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v89;
          v245 = v166;
          __s2 = v132;
          v236 = v133;
          BYTE1(v242) = v106;
          BYTE2(v242) = v107;
          v246 = v88;
          v247 = v87;
          v248 = v86;
          v249 = v97;
          v250 = v85;
          LOBYTE(v251) = v84;
          BYTE1(v251) = v98;
          BYTE2(v251) = v81;
          BYTE3(v251) = v214;
          BYTE4(v251) = v215;
          BYTE5(v251) = v217;
          BYTE6(v251) = v219;
          HIBYTE(v251) = v216;
          v252 = v218;
          v237 = v100;
          v238 = v101;
          v239 = v102;
          v240 = v103;
          v241 = v104;
          LOBYTE(v242) = v105;
          BYTE3(v242) = v134;
          BYTE4(v242) = v135;
          BYTE5(v242) = v136;
          BYTE6(v242) = v137;
          HIBYTE(v242) = v138;
          v243 = v139;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_54;
          static UniversalControlUUID.compare(lhs:rhs:)(v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56), v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56));
          v52 = v152;
          v53 = v157;
          v54 = v168;
          v55 = v184;
          v56 = v182;
          v57 = v180;
          v58 = v175;
          v59 = v94;
        }
        v60 = v155 | (v156 << 8) | (v53 << 16) | (v54 << 24) | (v55 << 32) | (v56 << 40) | (v57 << 48) | (v58 << 56);
        v61 = v96 | (v95 << 8) | (v59 << 16);
        v62 = v147 | (v148 << 8) | (v149 << 16) | (v150 << 24) | (v151 << 32) | (v52 << 40) | (v153 << 48) | (v154 << 56);
        v63 = v61 | (v203 << 24) | (v93 << 32) | (v205 << 40) | (v92 << 48) | (v207 << 56);
        v64 = v91 | (v196 << 8) | (v191 << 16) | (v202 << 24) | (v90 << 32) | (v204 << 40) | (v146 << 48) | (v206 << 56);
        if (static UniversalControlUUID.compare(lhs:rhs:)(v62, v60, v63, v64) == -1)
          goto LABEL_59;
        if (static UniversalControlUUID.compare(lhs:rhs:)(v63, v64, v62, v60) != -1)
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56), v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56)) == -1)goto LABEL_59;
          static UniversalControlUUID.compare(lhs:rhs:)(v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56), v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56));
        }
        if (v225 >= v224
          && (v224 < v225 || v220 >= v140))
        {
          goto LABEL_59;
        }
      }
LABEL_54:
      if (!v79)
        __break(1u);
      v221 = *((_BYTE *)v4 - 68);
      v201 = *((_BYTE *)v4 - 67);
      v200 = *((_BYTE *)v4 - 66);
      v67 = *((_BYTE *)v4 - 65);
      v68 = *((_BYTE *)v4 - 64);
      v69 = *((_BYTE *)v4 - 63);
      v194 = *((_BYTE *)v4 - 62);
      v193 = *((_BYTE *)v4 - 61);
      v197 = *((_BYTE *)v4 - 60);
      v195 = *((_BYTE *)v4 - 59);
      v192 = *((_BYTE *)v4 - 58);
      v190 = *((_BYTE *)v4 - 57);
      v198 = *((_BYTE *)v4 - 56);
      v70 = *((_BYTE *)v4 - 55);
      v71 = *((_BYTE *)v4 - 54);
      v72 = *((_BYTE *)v4 - 53);
      v167 = *((unsigned __int8 *)v4 - 52);
      v165 = *((unsigned __int8 *)v4 - 51);
      v158 = *((unsigned __int8 *)v4 - 50);
      v73 = *((unsigned __int8 *)v4 - 49);
      v74 = *((unsigned __int8 *)v4 - 48);
      v234 = *(_DWORD *)(v4 - 1);
      v226 = *(int8x16_t *)((char *)v4 - 47);
      v231 = *(_OWORD *)((char *)v4 - 31);
      v75 = *(_QWORD *)((char *)v4 - 15);
      v229 = *(_DWORD *)((char *)v4 - 7);
      result = (uint64_t)memcpy(v4 - 34, v4 - 69, 0x46uLL);
      v6 = v200;
      v13 = v72;
      v12 = v71;
      v11 = v70;
      v10 = v190;
      v9 = v192;
      v8 = v193;
      v7 = v194;
      *((_BYTE *)v4 - 138) = v221;
      *((_BYTE *)v4 - 137) = v201;
      *((_BYTE *)v4 - 136) = v200;
      v189 = v67;
      *((_BYTE *)v4 - 135) = v67;
      v188 = v68;
      *((_BYTE *)v4 - 134) = v68;
      v187 = v69;
      *((_BYTE *)v4 - 133) = v69;
      *((_BYTE *)v4 - 132) = v194;
      *((_BYTE *)v4 - 131) = v193;
      *((_BYTE *)v4 - 130) = v197;
      *((_BYTE *)v4 - 129) = v195;
      *((_BYTE *)v4 - 128) = v192;
      *((_BYTE *)v4 - 127) = v190;
      *((_BYTE *)v4 - 126) = v198;
      *((_BYTE *)v4 - 125) = v70;
      *((_BYTE *)v4 - 124) = v71;
      *((_BYTE *)v4 - 123) = v72;
      *((_BYTE *)v4 - 122) = v167;
      *((_BYTE *)v4 - 121) = v165;
      *((_BYTE *)v4 - 120) = v158;
      v126 = v73;
      *((_BYTE *)v4 - 119) = v73;
      v127 = v74;
      *((_BYTE *)v4 - 118) = v74;
      *(int8x16_t *)((char *)v4 - 117) = v226;
      *(_OWORD *)((char *)v4 - 101) = v231;
      *(_QWORD *)((char *)v4 - 85) = v75;
      *(_DWORD *)((char *)v4 - 77) = v229;
      *((_DWORD *)v4 - 18) = v234;
      v4 -= 35;
      v14 = vextq_s8(v226, v226, 2uLL).u64[0];
      v125 = v226.i8[0];
      v124 = v226.u8[1];
      if (v80 == ++v108)
        goto LABEL_56;
    }
    v62 = v147 | (v148 << 8) | (v149 << 16) | (v150 << 24) | (v151 << 32) | (v152 << 40) | (v153 << 48) | (v154 << 56);
    v60 = v155 | (v156 << 8) | (v157 << 16) | (v168 << 24) | (v184 << 32) | (v182 << 40) | (v180 << 48) | (v175 << 56);
    v63 = v96 | (v95 << 8) | (v94 << 16) | (v203 << 24) | (v93 << 32) | (v205 << 40) | (v92 << 48) | (v207 << 56);
    v64 = v91 | (v196 << 8) | (v191 << 16) | (v202 << 24) | (v90 << 32) | (v204 << 40) | (v146 << 48) | (v206 << 56);
LABEL_59:
    result = sub_24978B870(v62, v60, v63, v64);
    if (result == 2)
    {
      result = sub_24978B8C8(v62, v60, v228 | (v100 << 16) | (v101 << 24) | (v102 << 32) | (v103 << 40) | (v104 << 48) | (v105 << 56), v230 | (v134 << 16) | (v135 << 24) | (v136 << 32) | (v137 << 40) | (v138 << 48) | (v139 << 56), v63, v64, v233 | (v88 << 16) | (v87 << 24) | (v86 << 32) | ((unint64_t)v97 << 40) | ((unint64_t)v85 << 48) | ((unint64_t)v84 << 56), v98 | (unint64_t)(unsigned __int16)(v81 << 8) | ((unint64_t)v214 << 16) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v215 << 24) | ((unint64_t)v217 << 32) | ((unint64_t)v219 << 40) | ((unint64_t)v216 << 48) | (v218 << 56));
      if (result == 2)
        result = sub_24978B990((0x1000302u >> (8 * v99)) & 3 | (v140 << 16), (0x1000302u >> (8 * v83)) & 3 | (v220 << 16));
    }
LABEL_56:
    a3 = v80 + 1;
    v4 = v78 + 35;
  }
  while (v80 + 1 != a2);
  return result;
}

void sub_2497B900C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (a3 != a2)
  {
    v15 = *a4;
    v4 = (_QWORD *)(*a4 + 8 * a3 - 8);
    do
    {
      v5 = *(_QWORD *)(v15 + 8 * a3);
      v6 = a1;
      v14 = v4;
      v16 = a3;
      while (1)
      {
        v33 = v6;
        v7 = (unsigned __int8 *)(*(_QWORD *)(v5 + 24)
                               + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
        OUTLINED_FUNCTION_16();
        v32 = v7[16];
        v17 = v7[17];
        v18 = v7[18];
        v31 = v7[19];
        v30 = v7[20];
        v29 = v7[21];
        v28 = v7[22];
        v27 = v7[23];
        v26 = v7[24];
        v25 = v7[25];
        v24 = v7[26];
        v23 = v7[27];
        v19 = v7[28];
        v20 = v7[29];
        v21 = v7[30];
        v22 = v7[31];
        OUTLINED_FUNCTION_16();
        swift_retain();
        swift_retain();
        if ((OUTLINED_FUNCTION_14_6() & 0x80000000) == 0)
        {
          if ((OUTLINED_FUNCTION_14_6() & 0x80000000) != 0)
            goto LABEL_11;
          if ((OUTLINED_FUNCTION_14_6() & 0x80000000) == 0)
            break;
        }
        swift_release();
        swift_release();
        if (!v15)
          __break(1u);
        v8 = *v4;
        v5 = v4[1];
        *v4 = v5;
        v4[1] = v8;
        --v4;
        v6 = v33 + 1;
        v9 = v16;
        if (v16 == v33 + 1)
          goto LABEL_12;
      }
      OUTLINED_FUNCTION_120();
      static UniversalControlUUID.compare(lhs:rhs:)(v10, v11, v32 | (v17 << 8) | (v18 << 16) | (v31 << 24) | (v30 << 32) | (v29 << 40) | (v28 << 48) | (v27 << 56), v26 | (v25 << 8) | (v24 << 16) | (v23 << 24) | (v19 << 32) | (v20 << 40) | (v21 << 48) | (v22 << 56));
LABEL_11:
      swift_release();
      swift_release();
      v9 = v16;
LABEL_12:
      a3 = v9 + 1;
      v4 = v14 + 1;
    }
    while (a3 != a2);
  }
  OUTLINED_FUNCTION_10_6();
}

uint64_t sub_2497B9690(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char *v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char __s2;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char __s1;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  uint64_t v139;

  v46 = result;
  v139 = *MEMORY[0x24BDAC8D0];
  if (a3 == a2)
    return result;
  v48 = *a4;
  v4 = *a4 + 40 * a3;
  do
  {
    v5 = *(_QWORD *)(v48 + 40 * a3 + 32);
    v6 = v46;
    v47 = v4;
    v49 = a3;
    while (1)
    {
      v82 = v4;
      v83 = v6;
      v7 = *(_QWORD *)(v4 - 8);
      v8 = (char *)(*(_QWORD *)(v5 + 24) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      swift_beginAccess();
      v9 = *v8;
      v10 = v8[1];
      v11 = v8[2];
      v12 = v8[3];
      v13 = v8[4];
      v86 = v8[5];
      v14 = v8[6];
      v84 = v8[7];
      v105 = v8[9];
      v106 = v8[8];
      v104 = v8[10];
      v15 = v8[11];
      v85 = v8[12];
      v102 = v8[14];
      v103 = v8[13];
      v101 = v8[15];
      v80 = v8[17];
      v81 = v8[16];
      v78 = v8[19];
      v79 = v8[18];
      v76 = v8[21];
      v77 = v8[20];
      v74 = v8[23];
      v75 = v8[22];
      v72 = v8[25];
      v73 = v8[24];
      v70 = v8[27];
      v71 = v8[26];
      v16 = (char *)(*(_QWORD *)(v7 + 24) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      v66 = v8[28];
      v67 = v8[29];
      v68 = v8[30];
      v69 = v8[31];
      swift_beginAccess();
      v17 = *v16;
      v18 = v16[1];
      v19 = v16[2];
      v20 = v16[3];
      v21 = v16[4];
      v22 = v16[5];
      v23 = v16[6];
      v24 = v16[7];
      v25 = v16[8];
      v26 = v16[9];
      v27 = v16[10];
      v28 = v16[11];
      v29 = v16[12];
      v30 = v16[13];
      v31 = v16[14];
      v32 = v16[15];
      v65 = v16[16];
      v64 = v16[17];
      v63 = v16[18];
      v62 = v16[19];
      v61 = v16[20];
      v60 = v16[21];
      v59 = v16[22];
      v58 = v16[23];
      v57 = v16[24];
      v56 = v16[25];
      v55 = v16[26];
      v54 = v16[27];
      v53 = v16[28];
      v52 = v16[29];
      v51 = v16[30];
      v50 = v16[31];
      __s1 = v9;
      v124 = v10;
      v125 = v11;
      v126 = v12;
      v127 = v13;
      v128 = v86;
      v129 = v14;
      v130 = v84;
      v131 = v106;
      v132 = v105;
      v133 = v104;
      v134 = v15;
      v135 = v85;
      v136 = v103;
      v137 = v102;
      v138 = v101;
      __s2 = v17;
      v99 = v19;
      v100 = v18;
      v108 = v18;
      v109 = v19;
      v98 = v20;
      v110 = v20;
      v96 = v22;
      v97 = v21;
      v111 = v21;
      v112 = v22;
      v94 = v24;
      v95 = v23;
      v113 = v23;
      v114 = v24;
      v92 = v26;
      v93 = v25;
      v115 = v25;
      v116 = v26;
      v91 = v28;
      v117 = v27;
      v118 = v28;
      v89 = v30;
      v90 = v29;
      v119 = v29;
      v120 = v30;
      v87 = v32;
      v88 = v31;
      v121 = v31;
      v122 = v32;
      swift_retain();
      swift_retain();
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_11;
      __s1 = v17;
      v124 = v100;
      v125 = v99;
      v126 = v98;
      v127 = v97;
      v128 = v96;
      v129 = v95;
      v130 = v94;
      v131 = v93;
      v132 = v92;
      v133 = v27;
      v134 = v91;
      v135 = v90;
      v136 = v89;
      v137 = v88;
      v138 = v87;
      __s2 = v9;
      v108 = v10;
      v109 = v11;
      v110 = v12;
      v111 = v13;
      v112 = v86;
      v113 = v14;
      v114 = v84;
      v115 = v106;
      v116 = v105;
      v117 = v104;
      v118 = v15;
      v119 = v85;
      v120 = v103;
      v121 = v102;
      v122 = v101;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v81;
        v124 = v80;
        v125 = v79;
        v126 = v78;
        v127 = v77;
        v128 = v76;
        v129 = v75;
        v130 = v74;
        v131 = v73;
        v132 = v72;
        v133 = v71;
        v134 = v70;
        v135 = v66;
        v136 = v67;
        v137 = v68;
        v138 = v69;
        __s2 = v65;
        v108 = v64;
        v109 = v63;
        v110 = v62;
        v111 = v61;
        v112 = v60;
        v113 = v59;
        v114 = v58;
        v115 = v57;
        v116 = v56;
        v117 = v55;
        v118 = v54;
        v119 = v53;
        v120 = v52;
        v121 = v51;
        v122 = v50;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        {
LABEL_11:
          swift_release();
          result = swift_release();
          v35 = v49;
          v37 = v82;
          v36 = v83;
          goto LABEL_12;
        }
      }
      __s1 = v17;
      v124 = v100;
      v125 = v99;
      v126 = v98;
      v127 = v97;
      v128 = v96;
      v129 = v95;
      v130 = v94;
      v131 = v93;
      v132 = v92;
      v133 = v27;
      v134 = v91;
      v135 = v90;
      v136 = v89;
      v137 = v88;
      v138 = v87;
      __s2 = v9;
      v108 = v10;
      v109 = v11;
      v110 = v12;
      v111 = v13;
      v112 = v86;
      v113 = v14;
      v114 = v84;
      v115 = v106;
      v116 = v105;
      v117 = v104;
      v118 = v15;
      v119 = v85;
      v120 = v103;
      v121 = v102;
      v122 = v101;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        break;
      __s1 = v9;
      v124 = v10;
      v125 = v11;
      v126 = v12;
      v127 = v13;
      v128 = v86;
      v129 = v14;
      v130 = v84;
      v131 = v106;
      v132 = v105;
      v133 = v104;
      v134 = v15;
      v135 = v85;
      v136 = v103;
      v137 = v102;
      v138 = v101;
      __s2 = v17;
      v108 = v100;
      v109 = v99;
      v110 = v98;
      v111 = v97;
      v112 = v96;
      v113 = v95;
      v114 = v94;
      v115 = v93;
      v116 = v92;
      v117 = v27;
      v118 = v91;
      v119 = v90;
      v120 = v89;
      v121 = v88;
      v122 = v87;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v65;
        v124 = v64;
        v125 = v63;
        v126 = v62;
        v127 = v61;
        v128 = v60;
        v129 = v59;
        v130 = v58;
        v131 = v57;
        v132 = v56;
        v133 = v55;
        v134 = v54;
        v135 = v53;
        v136 = v52;
        v137 = v51;
        v138 = v50;
        __s2 = v81;
        v108 = v80;
        v109 = v79;
        v110 = v78;
        v111 = v77;
        v112 = v76;
        v113 = v75;
        v114 = v74;
        v115 = v73;
        v116 = v72;
        v117 = v71;
        v118 = v70;
        v119 = v66;
        v120 = v67;
        v121 = v68;
        v122 = v69;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          break;
      }
      v33 = sub_2497A1E9C();
      v34 = sub_2497A1E9C();
      if (v33 < v34)
        goto LABEL_11;
      if (v34 < v33)
        break;
      sub_2497A1E9C();
      v42 = v41;
      sub_2497A1E9C();
      v44 = v43;
      swift_release();
      result = swift_release();
      v35 = v49;
      v37 = v82;
      v36 = v83;
      if (v42 >= v44)
        goto LABEL_19;
LABEL_12:
      if (!v48)
        __break(1u);
      v5 = *(_QWORD *)(v37 + 32);
      v38 = *(_OWORD *)v37;
      v39 = *(_OWORD *)(v37 + 16);
      v40 = *(_OWORD *)(v37 - 24);
      *(_OWORD *)v37 = *(_OWORD *)(v37 - 40);
      *(_OWORD *)(v37 + 16) = v40;
      *(_QWORD *)(v37 + 32) = *(_QWORD *)(v37 - 8);
      *(_OWORD *)(v37 - 24) = v39;
      *(_QWORD *)(v37 - 8) = v5;
      *(_OWORD *)(v37 - 40) = v38;
      v4 = v37 - 40;
      v6 = v36 + 1;
      if (v35 == v6)
        goto LABEL_19;
    }
    swift_release();
    result = swift_release();
    v35 = v49;
LABEL_19:
    a3 = v35 + 1;
    v4 = v47 + 40;
  }
  while (a3 != a2);
  return result;
}

uint64_t sub_2497B9FF8(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  __int128 *v15;
  __int128 *v16;
  char *v17;
  BOOL v18;
  char *v20;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __int128 *v27;
  __int128 *v28;
  BOOL v29;
  BOOL v30;
  char *v33;
  __int128 v34;
  __int128 v35;
  char *v36;
  __int128 __s2;
  __int128 __s1;
  uint64_t v39;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v39 = *MEMORY[0x24BDAC8D0];
  v8 = a2 - a1;
  v9 = (a2 - a1) / 8;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_2497AC2B4(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v20 = &v4[8 * v11];
    if (v7 >= v6 || v10 < 8)
    {
      v12 = &v4[8 * v11];
      goto LABEL_40;
    }
    v33 = v4;
    v22 = (char *)(a3 - 8);
    v12 = v20;
    while (1)
    {
      v23 = (unint64_t)v12;
      v24 = *((_QWORD *)v12 - 1);
      v12 -= 8;
      v36 = v22 + 8;
      v25 = v6 - 8;
      v26 = *((_QWORD *)v6 - 1);
      v27 = (__int128 *)(v24 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      swift_beginAccess();
      v28 = (__int128 *)(v26 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      v34 = *v27;
      swift_beginAccess();
      __s2 = *v28;
      __s1 = v34;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
        v29 = v36 != v6 || v22 >= v6;
        v6 -= 8;
        v12 = (char *)v23;
        if (!v29)
          goto LABEL_36;
      }
      else
      {
        v30 = v36 != (char *)v23 || (unint64_t)v22 >= v23;
        v25 = v12;
        if (!v30)
          goto LABEL_36;
      }
      *(_QWORD *)v22 = *(_QWORD *)v25;
LABEL_36:
      v22 -= 8;
      v4 = v33;
      if (v6 <= v7 || v12 <= v33)
        goto LABEL_40;
    }
  }
  sub_2497AC2B4(a1, (a2 - a1) / 8, a4);
  v12 = &v4[8 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      v14 = *(_QWORD *)v4;
      v15 = (__int128 *)(*(_QWORD *)v6 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      swift_beginAccess();
      v16 = (__int128 *)(v14 + OBJC_IVAR____TtC16UniversalControl22UniversalControlDevice_properties);
      v35 = *v15;
      swift_beginAccess();
      __s2 = *v16;
      __s1 = v35;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        break;
      v17 = v4;
      v18 = v7 == v4;
      v4 += 8;
      if (!v18)
        goto LABEL_11;
LABEL_12:
      v7 += 8;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_17;
    }
    v17 = v6;
    v18 = v7 == v6;
    v6 += 8;
    if (v18)
      goto LABEL_12;
LABEL_11:
    *(_QWORD *)v7 = *(_QWORD *)v17;
    goto LABEL_12;
  }
LABEL_17:
  v6 = v7;
LABEL_40:
  sub_2497AC2B4(v4, (v12 - v4) / 8, v6);
  return 1;
}

uint64_t sub_2497BA298(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char *v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char *v45;
  unint64_t v46;
  char *v47;
  BOOL v48;
  int v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char *v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  unint64_t v79;
  char *v80;
  char *v81;
  BOOL v82;
  char *v83;
  int v85;
  BOOL v86;
  __int128 v87;
  __int128 v88;
  char *v89;
  char v90;
  unint64_t v91;
  char v92;
  __int128 v93;
  char v94;
  __int128 v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char *v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char *v129;
  char v130;
  char *v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  __int128 __s2;
  __int128 __s1;
  uint64_t v152;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v152 = *MEMORY[0x24BDAC8D0];
  v8 = a2 - a1;
  v9 = (a2 - a1) / 8;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_2497AC2B4(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v12 = &v4[8 * v11];
    if (v7 >= v6 || v10 < 8)
      goto LABEL_13;
    v51 = (char *)(a3 - 8);
    v145 = v7;
    v147 = v4;
    while (1)
    {
      v143 = v12;
      v89 = v12 - 8;
      v129 = v51;
      v131 = v51 + 8;
      v149 = v6;
      v52 = *((_QWORD *)v6 - 1);
      v121 = v6 - 8;
      v53 = *((_QWORD *)v12 - 1) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
      swift_beginAccess();
      v54 = *(_BYTE *)v53;
      v133 = *(_BYTE *)(v53 + 2);
      v135 = *(_BYTE *)(v53 + 3);
      v140 = *(_BYTE *)(v53 + 5);
      v55 = *(_BYTE *)(v53 + 6);
      v56 = *(_BYTE *)(v53 + 7);
      v57 = *(_BYTE *)(v53 + 8);
      v125 = *(_BYTE *)(v53 + 9);
      v127 = *(_BYTE *)(v53 + 1);
      v58 = *(_BYTE *)(v53 + 10);
      v137 = *(_BYTE *)(v53 + 4);
      v139 = *(_BYTE *)(v53 + 12);
      v122 = *(_BYTE *)(v53 + 13);
      v123 = *(_BYTE *)(v53 + 11);
      v59 = *(_BYTE *)(v53 + 14);
      v88 = *(_OWORD *)(v53 + 16);
      v60 = (char *)(v52 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      v61 = *(_BYTE *)(v53 + 15);
      swift_beginAccess();
      v62 = *v60;
      v63 = v60[1];
      v64 = v60[2];
      v65 = v60[3];
      v66 = v60[4];
      v67 = v60[5];
      v68 = v60[6];
      v69 = v60[7];
      v70 = v60[8];
      v71 = v60[9];
      v72 = v60[10];
      v73 = v60[11];
      v74 = v60[12];
      v75 = v60[13];
      v76 = v60[14];
      v87 = *((_OWORD *)v60 + 1);
      v77 = v60[15];
      LOBYTE(__s1) = v54;
      BYTE1(__s1) = v127;
      BYTE2(__s1) = v133;
      BYTE3(__s1) = v135;
      BYTE4(__s1) = v137;
      BYTE5(__s1) = v140;
      BYTE6(__s1) = v55;
      v117 = v56;
      BYTE7(__s1) = v56;
      BYTE8(__s1) = v57;
      BYTE9(__s1) = v125;
      BYTE10(__s1) = v58;
      BYTE11(__s1) = v123;
      BYTE12(__s1) = v139;
      BYTE13(__s1) = v122;
      BYTE14(__s1) = v59;
      HIBYTE(__s1) = v61;
      v78 = v62;
      LOBYTE(__s2) = v62;
      v112 = v64;
      v114 = v63;
      BYTE1(__s2) = v63;
      BYTE2(__s2) = v64;
      v109 = v66;
      v111 = v65;
      BYTE3(__s2) = v65;
      BYTE4(__s2) = v66;
      v107 = v67;
      BYTE5(__s2) = v67;
      BYTE6(__s2) = v68;
      v102 = v70;
      v104 = v69;
      BYTE7(__s2) = v69;
      BYTE8(__s2) = v70;
      v98 = v72;
      v100 = v71;
      BYTE9(__s2) = v71;
      BYTE10(__s2) = v72;
      v96 = v73;
      BYTE11(__s2) = v73;
      v94 = v74;
      BYTE12(__s2) = v74;
      v90 = v76;
      v92 = v75;
      BYTE13(__s2) = v75;
      BYTE14(__s2) = v76;
      HIBYTE(__s2) = v77;
      swift_retain();
      swift_retain();
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        break;
      LOBYTE(__s1) = v78;
      BYTE1(__s1) = v114;
      BYTE2(__s1) = v112;
      BYTE3(__s1) = v111;
      BYTE4(__s1) = v109;
      BYTE5(__s1) = v107;
      BYTE6(__s1) = v68;
      BYTE7(__s1) = v104;
      BYTE8(__s1) = v102;
      BYTE9(__s1) = v100;
      BYTE10(__s1) = v98;
      BYTE11(__s1) = v96;
      BYTE12(__s1) = v94;
      BYTE13(__s1) = v92;
      BYTE14(__s1) = v90;
      HIBYTE(__s1) = v77;
      LOBYTE(__s2) = v54;
      BYTE1(__s2) = v127;
      BYTE2(__s2) = v133;
      BYTE3(__s2) = v135;
      BYTE4(__s2) = v137;
      BYTE5(__s2) = v140;
      BYTE6(__s2) = v55;
      BYTE7(__s2) = v117;
      BYTE8(__s2) = v57;
      BYTE9(__s2) = v125;
      BYTE10(__s2) = v58;
      BYTE11(__s2) = v123;
      BYTE12(__s2) = v139;
      BYTE13(__s2) = v122;
      BYTE14(__s2) = v59;
      HIBYTE(__s2) = v61;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
        swift_release();
        swift_release();
        v4 = v147;
        v6 = v149;
        v12 = v143;
        v79 = (unint64_t)v145;
        v81 = v129;
        v80 = v131;
      }
      else
      {
        __s2 = v87;
        __s1 = v88;
        v85 = memcmp(&__s1, &__s2, 0x10uLL);
        swift_release();
        swift_release();
        v4 = v147;
        v6 = v149;
        v12 = v143;
        v79 = (unint64_t)v145;
        v81 = v129;
        v80 = v131;
        if (v85 < 0)
          goto LABEL_32;
      }
      v86 = v80 != v12 || v81 >= v12;
      v12 = v89;
      v83 = v89;
      if (!v86)
        goto LABEL_38;
LABEL_37:
      *(_QWORD *)v81 = *(_QWORD *)v83;
LABEL_38:
      v51 = v81 - 8;
      if ((unint64_t)v6 <= v79 || v12 <= v4)
        goto LABEL_13;
    }
    swift_release();
    swift_release();
    v4 = v147;
    v6 = v149;
    v12 = v143;
    v79 = (unint64_t)v145;
    v81 = v129;
    v80 = v131;
LABEL_32:
    v82 = v80 != v6 || v81 >= v6;
    v83 = v121;
    v6 = v121;
    if (!v82)
      goto LABEL_38;
    goto LABEL_37;
  }
  sub_2497AC2B4(a1, (a2 - a1) / 8, a4);
  v12 = &v4[8 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    v142 = &v4[8 * v9];
    v91 = a3;
    do
    {
      v144 = v7;
      v148 = v6;
      v146 = v4;
      v16 = *(_QWORD *)v4;
      v17 = *(_QWORD *)v6 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties;
      swift_beginAccess();
      v18 = *(_BYTE *)v17;
      v128 = *(_BYTE *)(v17 + 1);
      v132 = *(_BYTE *)(v17 + 2);
      v136 = *(_BYTE *)(v17 + 3);
      v138 = *(_BYTE *)(v17 + 4);
      v141 = *(_BYTE *)(v17 + 5);
      v19 = *(_BYTE *)(v17 + 6);
      v20 = *(_BYTE *)(v17 + 7);
      v21 = *(_BYTE *)(v17 + 8);
      v22 = *(_BYTE *)(v17 + 9);
      v130 = *(_BYTE *)(v17 + 10);
      v23 = *(_BYTE *)(v17 + 12);
      v124 = *(_BYTE *)(v17 + 13);
      v126 = *(_BYTE *)(v17 + 11);
      v134 = *(_BYTE *)(v17 + 14);
      v95 = *(_OWORD *)(v17 + 16);
      v24 = (char *)(v16 + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      v25 = *(_BYTE *)(v17 + 15);
      swift_beginAccess();
      v26 = *v24;
      v27 = v24[1];
      v28 = v24[2];
      v29 = v24[3];
      v30 = v24[4];
      v31 = v24[5];
      v32 = v24[6];
      v33 = v24[7];
      v34 = v24[8];
      v35 = v24[9];
      v36 = v24[10];
      v37 = v24[11];
      v38 = v24[12];
      v39 = v24[13];
      v40 = v24[14];
      v93 = *((_OWORD *)v24 + 1);
      v41 = v24[15];
      LOBYTE(__s1) = v18;
      BYTE1(__s1) = v128;
      BYTE2(__s1) = v132;
      BYTE3(__s1) = v136;
      BYTE4(__s1) = v138;
      BYTE5(__s1) = v141;
      BYTE6(__s1) = v19;
      v119 = v21;
      v120 = v20;
      BYTE7(__s1) = v20;
      BYTE8(__s1) = v21;
      v118 = v22;
      BYTE9(__s1) = v22;
      BYTE10(__s1) = v130;
      BYTE11(__s1) = v126;
      BYTE12(__s1) = v23;
      BYTE13(__s1) = v124;
      BYTE14(__s1) = v134;
      HIBYTE(__s1) = v25;
      v42 = v26;
      LOBYTE(__s2) = v26;
      v43 = v27;
      BYTE1(__s2) = v27;
      v44 = v28;
      BYTE2(__s2) = v28;
      v115 = v30;
      v116 = v29;
      BYTE3(__s2) = v29;
      BYTE4(__s2) = v30;
      v113 = v31;
      BYTE5(__s2) = v31;
      BYTE6(__s2) = v32;
      v108 = v34;
      v110 = v33;
      BYTE7(__s2) = v33;
      BYTE8(__s2) = v34;
      v105 = v36;
      v106 = v35;
      BYTE9(__s2) = v35;
      BYTE10(__s2) = v36;
      v101 = v38;
      v103 = v37;
      BYTE11(__s2) = v37;
      BYTE12(__s2) = v38;
      v97 = v40;
      v99 = v39;
      BYTE13(__s2) = v39;
      BYTE14(__s2) = v40;
      HIBYTE(__s2) = v41;
      swift_retain();
      swift_retain();
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
        swift_release();
        swift_release();
        v4 = v146;
        v6 = v148;
        v12 = v142;
        v45 = v144;
        v46 = v91;
      }
      else
      {
        LOBYTE(__s1) = v42;
        BYTE1(__s1) = v43;
        BYTE2(__s1) = v44;
        BYTE3(__s1) = v116;
        BYTE4(__s1) = v115;
        BYTE5(__s1) = v113;
        BYTE6(__s1) = v32;
        BYTE7(__s1) = v110;
        BYTE8(__s1) = v108;
        BYTE9(__s1) = v106;
        BYTE10(__s1) = v105;
        BYTE11(__s1) = v103;
        BYTE12(__s1) = v101;
        BYTE13(__s1) = v99;
        BYTE14(__s1) = v97;
        HIBYTE(__s1) = v41;
        LOBYTE(__s2) = v18;
        BYTE1(__s2) = v128;
        BYTE2(__s2) = v132;
        BYTE3(__s2) = v136;
        BYTE4(__s2) = v138;
        BYTE5(__s2) = v141;
        BYTE6(__s2) = v19;
        BYTE7(__s2) = v120;
        BYTE8(__s2) = v119;
        BYTE9(__s2) = v118;
        BYTE10(__s2) = v130;
        BYTE11(__s2) = v126;
        BYTE12(__s2) = v23;
        BYTE13(__s2) = v124;
        BYTE14(__s2) = v134;
        HIBYTE(__s2) = v25;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        {
          swift_release();
          swift_release();
          v4 = v146;
          v6 = v148;
          v12 = v142;
          v45 = v144;
          v46 = v91;
LABEL_27:
          v47 = v4;
          v48 = v45 == v4;
          v4 += 8;
          if (v48)
            goto LABEL_18;
LABEL_17:
          *(_QWORD *)v45 = *(_QWORD *)v47;
          goto LABEL_18;
        }
        __s2 = v93;
        __s1 = v95;
        v50 = memcmp(&__s1, &__s2, 0x10uLL);
        swift_release();
        swift_release();
        v4 = v146;
        v6 = v148;
        v12 = v142;
        v45 = v144;
        v46 = v91;
        if ((v50 & 0x80000000) == 0)
          goto LABEL_27;
      }
      v47 = v6;
      v48 = v45 == v6;
      v6 += 8;
      if (!v48)
        goto LABEL_17;
LABEL_18:
      v7 = v45 + 8;
    }
    while (v4 < v12 && (unint64_t)v6 < v46);
  }
  v6 = v7;
LABEL_13:
  sub_2497AC2B4(v4, (v12 - v4) / 8, v6);
  return 1;
}

uint64_t sub_2497BAB2C(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned __int8 *v12;
  char *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  BOOL v58;
  unsigned __int8 *v59;
  int v61;
  unsigned __int8 v62;
  char v63;
  char v64;
  char v65;
  char v66;
  unsigned __int8 v67;
  char v68;
  char v69;
  uint64_t v70;
  char v71;
  char v72;
  unsigned __int8 v73;
  char v74;
  unsigned __int8 v75;
  char v76;
  BOOL v77;
  int v78;
  uint64_t v79;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  unsigned int v89;
  char v90;
  char v91;
  char v92;
  char v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  BOOL v135;
  BOOL v137;
  int v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int v148;
  unsigned int v149;
  char v150;
  char v151;
  char v152;
  char v153;
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unsigned __int8 *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unsigned int v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unsigned int v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unsigned int v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  unsigned int v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  int v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  unsigned __int8 *v394;
  uint64_t v395;
  char *__dst;
  unint64_t __dsta;
  unint64_t v398;
  unint64_t v399;
  char *v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  char v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  int v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  int v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  char *v506;
  unsigned __int8 __s2;
  char v508;
  char v509;
  char v510;
  char v511;
  char v512;
  char v513;
  char v514;
  char v515;
  char v516;
  char v517;
  char v518;
  char v519;
  char v520;
  char v521;
  char v522;
  unsigned __int8 __s1;
  char v524;
  char v525;
  char v526;
  char v527;
  char v528;
  char v529;
  char v530;
  char v531;
  char v532;
  unsigned __int8 v533;
  unsigned __int8 v534;
  unsigned __int8 v535;
  unsigned __int8 v536;
  unsigned __int8 v537;
  unsigned __int8 v538;
  uint64_t v539;

  v454 = a4;
  v5 = a1;
  v539 = *MEMORY[0x24BDAC8D0];
  v6 = a2 - a1;
  v7 = (a2 - a1) / 70;
  v506 = a2;
  v8 = a3 - (_QWORD)a2;
  v9 = (uint64_t)(a3 - (_QWORD)a2) / 70;
  if (v7 >= v9)
  {
    sub_2497AC098(a2, (uint64_t)(a3 - (_QWORD)a2) / 70, a4);
    v12 = (unsigned __int8 *)&v454[70 * v9];
    if (v8 < 70 || v5 >= v506)
    {
LABEL_139:
      sub_2497AC098(v454, (v12 - (unsigned __int8 *)v454) / 70, v506);
      return 1;
    }
    v14 = (char *)(a3 - 70);
    v400 = v5;
    while (1)
    {
      __dst = v14;
      v398 = (unint64_t)v12;
      v15 = v12 - 70;
      v437 = *(v12 - 70);
      v16 = *(v12 - 69);
      v17 = *(v12 - 68);
      v18 = *(v12 - 67);
      v443 = *(v12 - 66);
      v19 = *(v12 - 65);
      v20 = *(v12 - 64);
      v21 = *(v12 - 63);
      v22 = *(v12 - 62);
      v23 = *(v12 - 61);
      v350 = *(v12 - 60);
      v348 = *(v12 - 59);
      v347 = *(v12 - 58);
      v24 = *(v12 - 57);
      v25 = *(v12 - 56);
      v26 = *(v12 - 55);
      v290 = *(v12 - 54);
      v269 = *(v12 - 53);
      v267 = *(v12 - 52);
      v264 = *(v12 - 51);
      v262 = *(v12 - 50);
      v260 = *(v12 - 49);
      v258 = *(v12 - 48);
      v255 = *(v12 - 47);
      v288 = *(v12 - 46);
      v285 = *(v12 - 45);
      v253 = *(v12 - 44);
      v250 = *(v12 - 43);
      v248 = *(v12 - 42);
      v246 = *(v12 - 41);
      v244 = *(v12 - 40);
      v242 = *(v12 - 39);
      v27 = *(v12 - 38);
      v28 = *(v12 - 37);
      v29 = v15[35];
      v30 = v15[36];
      v31 = v15[37];
      v32 = v15[38];
      v33 = v15[39];
      v34 = v15[40];
      v35 = v15[41];
      v36 = v15[42];
      v37 = v15[43];
      v38 = v15[44];
      v39 = v15[45];
      v40 = v15[46];
      v41 = v15[47];
      v186 = v15[48];
      v406 = v15[49];
      v184 = v15[50];
      v402 = v15[51];
      v182 = v15[52];
      v180 = v15[53];
      v178 = v15[54];
      v413 = v15[55];
      v176 = v15[56];
      v409 = v15[57];
      v174 = v15[58];
      v450 = v15[59];
      v172 = v15[60];
      v171 = v15[61];
      v170 = v15[62];
      v476 = v15[63];
      v169 = v15[64];
      v283 = *((unsigned __int16 *)v15 + 33);
      v159 = v15;
      v497 = *((unsigned __int16 *)v15 + 34);
      v346 = *(v506 - 70);
      v345 = *(v506 - 69);
      v344 = *(v506 - 68);
      v440 = *(v506 - 67);
      v342 = *(v506 - 66);
      v339 = *(v506 - 65);
      v336 = *(v506 - 64);
      v333 = *(v506 - 63);
      v330 = *(v506 - 62);
      v327 = *(v506 - 61);
      v434 = *(v506 - 60);
      v431 = *(v506 - 59);
      v427 = *(v506 - 58);
      v424 = *(v506 - 57);
      v421 = *(v506 - 56);
      v417 = *(v506 - 55);
      v279 = *(v506 - 54);
      v281 = *(v506 - 53);
      v240 = *(v506 - 52);
      v238 = *(v506 - 51);
      v236 = *(v506 - 50);
      v234 = *(v506 - 49);
      v232 = *(v506 - 48);
      v230 = *(v506 - 47);
      v277 = *(v506 - 46);
      v275 = *(v506 - 45);
      v228 = *(v506 - 44);
      v226 = *(v506 - 43);
      v224 = *(v506 - 42);
      v222 = *(v506 - 41);
      v220 = *(v506 - 40);
      v218 = *(v506 - 39);
      v354 = *(v506 - 38);
      v356 = *(v506 - 37);
      v358 = *(v506 - 36);
      v360 = *(v506 - 35);
      v362 = *(v506 - 34);
      v365 = *(v506 - 33);
      v368 = *(v506 - 32);
      v371 = *(v506 - 31);
      v374 = *(v506 - 30);
      v377 = *(v506 - 29);
      v380 = *(v506 - 28);
      v383 = *(v506 - 27);
      v386 = *(v506 - 26);
      v389 = *(v506 - 25);
      v391 = *(v506 - 24);
      v393 = *(v506 - 23);
      v202 = *(v506 - 22);
      v204 = *(v506 - 21);
      v304 = *(v506 - 20);
      v305 = *(v506 - 19);
      v206 = *(v506 - 18);
      v307 = *(v506 - 17);
      v310 = *(v506 - 16);
      v208 = *(v506 - 15);
      v313 = *(v506 - 14);
      v210 = *(v506 - 13);
      v316 = *(v506 - 12);
      v212 = *(v506 - 11);
      v319 = *(v506 - 10);
      v214 = *(v506 - 9);
      v321 = *(v506 - 8);
      v216 = *(v506 - 7);
      v198 = v15[34];
      v200 = *(v506 - 6);
      v273 = *((unsigned __int16 *)v506 - 2);
      v323 = *((unsigned __int16 *)v506 - 1);
      v325 = v27;
      __s1 = v27;
      v524 = v28;
      v525 = v198;
      v526 = v29;
      v194 = v30;
      v196 = v32;
      v527 = v30;
      v471 = v31;
      v528 = v31;
      v529 = v32;
      v464 = v33;
      v530 = v33;
      v192 = v34;
      v531 = v34;
      v478 = v35;
      v532 = v35;
      v190 = v36;
      v533 = v36;
      v461 = v37;
      v534 = v37;
      v535 = v38;
      v495 = v39;
      v536 = v39;
      v188 = v40;
      v537 = v40;
      v455 = v41;
      v538 = v41;
      __s2 = v437;
      v298 = v16;
      v508 = v16;
      v509 = v17;
      v294 = v18;
      v510 = v18;
      v511 = v443;
      v301 = v19;
      v512 = v19;
      v292 = v20;
      v513 = v20;
      v42 = v21;
      v514 = v21;
      v43 = v22;
      v515 = v22;
      v44 = v23;
      v516 = v23;
      v517 = v350;
      v518 = v348;
      v519 = v347;
      v45 = v24;
      v520 = v24;
      v46 = v25;
      v521 = v25;
      v47 = v26;
      v522 = v26;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X22 }
      v458 = v298;
      v499 = v17;
      v503 = v294;
      v493 = v301;
      v490 = v42;
      v352 = v43;
      v446 = v44;
      v485 = v45;
      v481 = v47;
      v483 = v46;
      v168 = v269;
      v164 = v264;
      v163 = v255;
      v167 = v285;
      v162 = v250;
      v299 = v28;
      v295 = v29;
      v302 = v471;
      v158 = v464;
      v156 = v455;
      v270 = v406;
      v265 = v402;
      v256 = v413;
      v286 = v409;
      v251 = v450;
      __s1 = v354;
      v524 = v356;
      v525 = v358;
      v526 = v360;
      v527 = v362;
      v528 = v365;
      v529 = v368;
      v530 = v371;
      v531 = v374;
      v532 = v377;
      v533 = v380;
      v534 = v383;
      v535 = v386;
      v536 = v389;
      v537 = v391;
      v538 = v393;
      __s2 = v346;
      v508 = v345;
      v509 = v344;
      v510 = v440;
      v511 = v342;
      v48 = v339;
      v512 = v339;
      v513 = v336;
      v49 = v333;
      v514 = v333;
      v50 = v330;
      v515 = v330;
      v51 = v327;
      v516 = v327;
      v517 = v434;
      v518 = v431;
      v519 = v427;
      v520 = v424;
      v521 = v421;
      v522 = v417;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X8 }
      v474 = v339;
      v472 = v336;
      v468 = v333;
      v451 = v330;
      v456 = v327;
      v414 = v434;
      v410 = v431;
      v407 = v427;
      v465 = v417;
      v340 = v365;
      v337 = v368;
      v334 = v371;
      v331 = v374;
      v328 = v377;
      v435 = v380;
      v432 = v383;
      v428 = v386;
      v418 = v393;
      v394 = (unsigned __int8 *)(__dst + 70);
      __s1 = v437;
      v524 = v458;
      v525 = v17;
      v526 = v503;
      v527 = v443;
      v528 = v493;
      v529 = v292;
      v530 = v490;
      v531 = v43;
      v532 = v446;
      v533 = v350;
      v534 = v348;
      v535 = v347;
      v536 = v485;
      v537 = v483;
      v538 = v47;
      __s2 = v346;
      v508 = v345;
      v509 = v344;
      v52 = v440;
      v510 = v440;
      v511 = v342;
      v512 = v48;
      v513 = v472;
      v514 = v49;
      v515 = v50;
      v516 = v51;
      v53 = v414;
      v517 = v414;
      v54 = v410;
      v518 = v410;
      v55 = v407;
      v519 = v407;
      v56 = v424;
      v520 = v424;
      v521 = v421;
      v522 = v465;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
      {
LABEL_18:
        v57 = __dst;
        v58 = v394 != (unsigned __int8 *)v506 || __dst >= v506;
        v59 = (unsigned __int8 *)(v506 - 70);
        v506 -= 70;
        v12 = (unsigned __int8 *)v398;
        if (!v58)
          goto LABEL_24;
        goto LABEL_23;
      }
      __s1 = v346;
      v524 = v345;
      v525 = v344;
      v526 = v440;
      v527 = v342;
      v528 = v474;
      v529 = v472;
      v530 = v468;
      v531 = v50;
      v532 = v51;
      v533 = v414;
      v534 = v410;
      v535 = v407;
      v536 = v424;
      v537 = v421;
      v538 = v465;
      __s2 = v437;
      v508 = v458;
      v509 = v17;
      v510 = v503;
      v511 = v443;
      v512 = v493;
      v513 = v292;
      v514 = v490;
      v515 = v352;
      v516 = v446;
      v517 = v350;
      v518 = v348;
      v519 = v347;
      v520 = v485;
      v521 = v483;
      v522 = v481;
      v61 = memcmp(&__s1, &__s2, 0x10uLL);
      v63 = v345;
      v62 = v346;
      v64 = v456;
      v65 = v451;
      v66 = v458;
      v67 = v437;
      v68 = v352;
      v69 = v446;
      v70 = v499;
      v366 = v437 | (v458 << 8);
      v369 = v352 | (v446 << 8);
      v372 = v346 | (v345 << 8);
      v375 = v451 | (v456 << 8);
      v384 = v279 | (v281 << 8);
      v387 = v277 | (v275 << 8);
      v378 = v290 | (v168 << 8);
      v381 = v288 | (v167 << 8);
      if ((v61 & 0x80000000) == 0)
      {
        __s1 = v437;
        v524 = v458;
        v525 = v499;
        v526 = v503;
        v527 = v443;
        v528 = v493;
        v529 = v292;
        v530 = v490;
        v531 = v352;
        v532 = v446;
        v533 = v350;
        v534 = v348;
        v535 = v347;
        v536 = v485;
        v537 = v483;
        v538 = v481;
        __s2 = v346;
        v508 = v345;
        v509 = v344;
        v510 = v440;
        v511 = v342;
        v512 = v474;
        v513 = v472;
        v514 = v468;
        v515 = v451;
        v516 = v456;
        v517 = v414;
        v518 = v410;
        v519 = v407;
        v520 = v424;
        v521 = v421;
        v522 = v465;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_18;
        __s1 = v346;
        v524 = v345;
        v525 = v344;
        v526 = v440;
        v527 = v342;
        v528 = v474;
        v529 = v472;
        v530 = v468;
        v531 = v451;
        v532 = v456;
        v533 = v414;
        v534 = v410;
        v535 = v407;
        v536 = v424;
        v537 = v421;
        v538 = v465;
        __s2 = v437;
        v508 = v458;
        v509 = v499;
        v510 = v503;
        v511 = v443;
        v512 = v493;
        v513 = v292;
        v514 = v490;
        v515 = v352;
        v516 = v446;
        v517 = v350;
        v518 = v348;
        v519 = v347;
        v520 = v485;
        v521 = v483;
        v522 = v481;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v290;
          v524 = v168;
          v531 = v288;
          v532 = v167;
          __s2 = v279;
          v508 = v281;
          v515 = v277;
          v516 = v275;
          v525 = v267;
          v526 = v164;
          v527 = v262;
          v528 = v260;
          v529 = v258;
          v530 = v163;
          v533 = v253;
          v534 = v162;
          v535 = v248;
          v536 = v246;
          v537 = v244;
          v538 = v242;
          v509 = v240;
          v510 = v238;
          v511 = v236;
          v512 = v234;
          v513 = v232;
          v514 = v230;
          v517 = v228;
          v518 = v226;
          v519 = v224;
          v520 = v222;
          v521 = v220;
          v522 = v218;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_18;
          static UniversalControlUUID.compare(lhs:rhs:)(v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56), v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56));
        }
        __s1 = v346;
        v524 = v345;
        v525 = v344;
        v526 = v440;
        v527 = v342;
        v528 = v474;
        v529 = v472;
        v530 = v468;
        v531 = v451;
        v532 = v456;
        v533 = v414;
        v534 = v410;
        v535 = v407;
        v536 = v424;
        v537 = v421;
        v538 = v465;
        __s2 = v437;
        v508 = v458;
        v509 = v499;
        v510 = v503;
        v511 = v443;
        v512 = v493;
        v513 = v292;
        v514 = v490;
        v515 = v352;
        v516 = v446;
        v517 = v350;
        v518 = v348;
        v519 = v347;
        v520 = v485;
        v521 = v483;
        v522 = v481;
        v78 = memcmp(&__s1, &__s2, 0x10uLL);
        v63 = v345;
        v62 = v346;
        v70 = v499;
        v69 = v446;
        v68 = v352;
        v67 = v437;
        v66 = v458;
        v65 = v451;
        v64 = v456;
        if ((v78 & 0x80000000) == 0)
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v366 | (v499 << 16) | (v503 << 24) | (v443 << 32) | (v493 << 40) | (v292 << 48) | (v490 << 56), v369 | (v350 << 16) | (v348 << 24) | (v347 << 32) | (v485 << 40) | (v483 << 48) | (v481 << 56), v372 | (v344 << 16) | (v440 << 24) | (v342 << 32) | (v474 << 40) | (v472 << 48) | (v468 << 56), v375 | (v414 << 16) | (v410 << 24) | (v407 << 32) | (v424 << 40) | (v421 << 48) | (v465 << 56)) != -1)
          {
            v79 = static UniversalControlUUID.compare(lhs:rhs:)(v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56), v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56));
            v67 = v437;
            v66 = v458;
            v68 = v352;
            v69 = v446;
            v52 = v440;
            v53 = v414;
            v54 = v410;
            v55 = v407;
            v56 = v424;
            v62 = v346;
            v70 = v499;
            v65 = v451;
            v64 = v456;
            v63 = v345;
            if (v79 == -1)
              goto LABEL_30;
            static UniversalControlUUID.compare(lhs:rhs:)(v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56), v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56));
          }
          v67 = v437;
          v66 = v458;
          v68 = v352;
          v69 = v446;
          v52 = v440;
          v53 = v414;
          v54 = v410;
          v55 = v407;
          v56 = v424;
          v62 = v346;
          v70 = v499;
          v65 = v451;
          v64 = v456;
          v63 = v345;
          if (v169 < v200)
            goto LABEL_18;
          if (v200 >= v169 && v283 < v273)
            goto LABEL_18;
        }
      }
LABEL_30:
      v447 = v69;
      v500 = v70;
      v411 = v54;
      v415 = v53;
      v403 = v56;
      __s1 = v62;
      v524 = v63;
      v525 = v344;
      v526 = v52;
      v527 = v342;
      v528 = v474;
      v529 = v472;
      v530 = v468;
      v531 = v65;
      v532 = v64;
      v533 = v53;
      v534 = v54;
      v535 = v55;
      v536 = v56;
      v537 = v421;
      v538 = v465;
      __s2 = v67;
      v508 = v66;
      v509 = v70;
      v510 = v503;
      v511 = v443;
      v512 = v493;
      v513 = v292;
      v514 = v490;
      v515 = v68;
      v516 = v69;
      v517 = v350;
      v518 = v348;
      v519 = v347;
      v520 = v485;
      v521 = v483;
      v522 = v481;
      v71 = v64;
      v72 = v65;
      v73 = v62;
      v74 = v68;
      v75 = v67;
      v76 = v66;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v75;
        v524 = v76;
        v525 = v500;
        v526 = v503;
        v527 = v443;
        v528 = v493;
        v529 = v292;
        v530 = v490;
        v531 = v74;
        v532 = v447;
        v533 = v350;
        v534 = v348;
        v535 = v347;
        v536 = v485;
        v537 = v483;
        v538 = v481;
        __s2 = v73;
        v508 = v63;
        v509 = v344;
        v510 = v52;
        v511 = v342;
        v512 = v474;
        v513 = v472;
        v514 = v468;
        v515 = v72;
        v516 = v71;
        v517 = v415;
        v518 = v411;
        v519 = v55;
        v520 = v403;
        v521 = v421;
        v522 = v465;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_52;
        __s1 = v73;
        v524 = v63;
        v531 = v72;
        v532 = v71;
        __s2 = v75;
        v508 = v76;
        v515 = v74;
        v516 = v447;
        v525 = v344;
        v526 = v52;
        v527 = v342;
        v528 = v474;
        v529 = v472;
        v530 = v468;
        v533 = v415;
        v534 = v411;
        v535 = v55;
        v536 = v403;
        v537 = v421;
        v538 = v465;
        v509 = v500;
        v510 = v503;
        v511 = v443;
        v512 = v493;
        v513 = v292;
        v514 = v490;
        v517 = v350;
        v518 = v348;
        v519 = v347;
        v520 = v485;
        v521 = v483;
        v522 = v481;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v366 | (v500 << 16) | (v503 << 24) | (v443 << 32) | (v493 << 40) | (v292 << 48) | (v490 << 56), v369 | (v350 << 16) | (v348 << 24) | (v347 << 32) | (v485 << 40) | (v483 << 48) | (v481 << 56), v372 | (v344 << 16) | (v52 << 24) | (v342 << 32) | (v474 << 40) | (v472 << 48) | (v468 << 56), v375 | (v415 << 16) | (v411 << 24) | (v55 << 32) | (v403 << 40) | (v421 << 48) | (v465 << 56)) == -1|| (sub_249772148(v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56), v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56)), (v92 & 1) == 0))
          {
            if (((sub_249772148(v366 | (v500 << 16) | (v503 << 24) | (v443 << 32) | (v493 << 40) | (v292 << 48) | (v490 << 56), v369 | (v350 << 16) | (v348 << 24) | (v347 << 32) | (v485 << 40) | (v483 << 48) | (v481 << 56), v372 | (v344 << 16) | (v52 << 24) | (v342 << 32) | (v474 << 40) | (v472 << 48) | (v468 << 56), v375 | (v415 << 16) | (v411 << 24) | (v55 << 32) | (v403 << 40) | (v421 << 48) | (v465 << 56)), v93 != 2)|| (sub_249772148(v378 | (v267 << 16) | (v164 << 24) | (v262 << 32) | (v260 << 40) | (v258 << 48) | (v163 << 56), v381 | (v253 << 16) | (v162 << 24) | (v248 << 32) | (v246 << 40) | (v244 << 48) | (v242 << 56), v384 | (v240 << 16) | (v238 << 24) | (v236 << 32) | (v234 << 40) | (v232 << 48) | (v230 << 56), v387 | (v228 << 16) | (v226 << 24) | (v224 << 32) | (v222 << 40) | (v220 << 48) | (v218 << 56)), v93 != 2))&& (v93 & 1) != 0|| v200 >= v169&& (v169 >= v200 ? (v94 = v273 >= v283) : (v94 = 1), v94))
            {
LABEL_52:
              v81 = dword_24983AE80[(char)v169];
              v82 = dword_24983AE80[(char)v200];
              v83 = v325 | (v299 << 8) | (v198 << 16) | (v295 << 24) | (v194 << 32) | (v302 << 40) | (v196 << 48) | (v158 << 56);
              v84 = v192 | (v478 << 8) | (v190 << 16) | (v461 << 24) | (v240 << 32) | (v495 << 40) | (v188 << 48) | (v156 << 56);
              v85 = v354 | (v356 << 8) | (v358 << 16) | (v360 << 24) | (v362 << 32) | (v340 << 40) | (v337 << 48) | (v334 << 56);
              v86 = v331 | (v328 << 8) | (v435 << 16) | (v432 << 24) | (v428 << 32) | (v389 << 40) | (v391 << 48) | (v418 << 56);
              if (static UniversalControlUUID.compare(lhs:rhs:)(v83, v84, v85, v86) == -1)
                goto LABEL_18;
              v501 = v202 | (v204 << 8);
              v502 = v313 | (v210 << 8);
              v504 = v186 | (v270 << 8);
              v87 = v176 | (v286 << 8);
              v88 = v82 | (v323 << 16);
              v89 = v81 | (v497 << 16);
              if (static UniversalControlUUID.compare(lhs:rhs:)(v85, v86, v83, v84) != -1)
              {
                sub_249772148(v83, v84, v85, v86);
                if (v90 != 2
                  || (sub_249772148(v504 | (v184 << 16) | (v265 << 24) | (v182 << 32) | (v180 << 40) | (v178 << 48) | (v256 << 56), v87 | (v174 << 16) | (v251 << 24) | (v172 << 32) | (v171 << 40) | (v170 << 48) | (v476 << 56), v501 | (v304 << 16) | (v305 << 24) | (v206 << 32) | (v307 << 40) | (v310 << 48) | (v208 << 56), v502 | (v316 << 16) | (v212 << 24) | (v319 << 32) | (v214 << 40) | (v321 << 48) | (v216 << 56)), v90 != 2))
                {
                  if ((v90 & 1) != 0)
                    goto LABEL_18;
                }
                if ((sub_249772148(v85, v86, v83, v84), v91 == 2)
                  && (sub_249772148(v501 | (v304 << 16) | (v305 << 24) | (v206 << 32) | (v307 << 40) | (v310 << 48) | (v208 << 56), v502 | (v316 << 16) | (v212 << 24) | (v319 << 32) | (v214 << 40) | (v321 << 48) | (v216 << 56), v504 | (v184 << 16) | (v265 << 24) | (v182 << 32) | (v180 << 40) | (v178 << 48) | (v256 << 56), v87 | (v174 << 16) | (v251 << 24) | (v172 << 32) | (v171 << 40) | (v170 << 48) | (v476 << 56)), v91 == 2)|| (v91 & 1) == 0)
                {
                  if ((sub_24978B990(v89, v88) & 1) != 0)
                    goto LABEL_18;
                }
              }
              if (static UniversalControlUUID.compare(lhs:rhs:)(v85, v86, v83, v84) != -1
                && static UniversalControlUUID.compare(lhs:rhs:)(v83, v84, v85, v86) != -1
                && sub_24978B8C8(v85, v86, v501 | (v304 << 16) | (v305 << 24) | (v206 << 32) | (v307 << 40) | (v310 << 48) | (v208 << 56), v502 | (v316 << 16) | (v212 << 24) | (v319 << 32) | (v214 << 40) | (v321 << 48) | (v216 << 56), v83, v84, v504 | (v184 << 16) | (v265 << 24) | (v182 << 32) | (v180 << 40) | (v178 << 48) | (v256 << 56), v87 | (v174 << 16) | (v251 << 24) | (v172 << 32) | (v171 << 40) | (v170 << 48) | (v476 << 56)) == 2)
              {
                sub_24978B990(v88, v89);
              }
            }
          }
        }
      }
      v57 = __dst;
      v77 = v394 != (unsigned __int8 *)v398 || (unint64_t)__dst >= v398;
      v59 = v159;
      v12 = v159;
      if (!v77)
        goto LABEL_24;
LABEL_23:
      memmove(v57, v59, 0x46uLL);
LABEL_24:
      v14 = v57 - 70;
      if (v12 <= (unsigned __int8 *)v454 || v506 <= v400)
        goto LABEL_139;
    }
  }
  sub_2497AC098(a1, (a2 - a1) / 70, a4);
  v10 = (unsigned __int8 *)&v454[70 * v7];
  if (v6 >= 70 && (unint64_t)v506 < a3)
  {
    v399 = (unint64_t)v10;
    v157 = a3;
    while (1)
    {
      v401 = v5;
      v95 = *v506;
      v96 = v506[1];
      v97 = v506[2];
      v98 = v506[3];
      v99 = v506[4];
      v100 = v506[5];
      v101 = v506[6];
      v102 = v506[7];
      v103 = v506[8];
      v104 = v506[9];
      v105 = v506[10];
      v106 = v506[33];
      v107 = v506[34];
      v108 = v506[35];
      v109 = v506[36];
      v110 = v506[37];
      v111 = v506[38];
      v112 = v506[39];
      v113 = v506[40];
      v114 = v506[41];
      v379 = *v454;
      v453 = v454[1];
      v376 = v454[2];
      v452 = v454[3];
      v373 = v454[4];
      v370 = v454[5];
      v367 = v454[6];
      v363 = v454[7];
      v361 = v454[8];
      v359 = v454[9];
      v475 = v506[32];
      __s1 = v506[32];
      v473 = v106;
      v524 = v106;
      v469 = v107;
      v525 = v107;
      v466 = v108;
      v526 = v108;
      v462 = v109;
      v527 = v109;
      v459 = v110;
      v528 = v110;
      v457 = v111;
      v529 = v111;
      v343 = v112;
      v530 = v112;
      v205 = v114;
      v207 = v113;
      v531 = v113;
      v532 = v114;
      v357 = v454[10];
      v533 = v506[42];
      v115 = v506[11];
      v448 = v454[11];
      v189 = v506[43];
      v534 = v506[43];
      v116 = v506[12];
      v444 = v454[12];
      v187 = v506[44];
      v535 = v506[44];
      v117 = v506[13];
      v441 = v454[13];
      v185 = v506[45];
      v536 = v506[45];
      v118 = v506[14];
      v438 = v454[14];
      v183 = v506[46];
      v537 = v506[46];
      v119 = v506[15];
      v436 = v454[15];
      v181 = v506[47];
      v538 = v506[47];
      v322 = v95;
      __s2 = v95;
      v320 = v96;
      v508 = v96;
      v317 = v97;
      v509 = v97;
      v314 = v98;
      v510 = v98;
      v311 = v99;
      v511 = v99;
      v308 = v100;
      v512 = v100;
      v306 = v101;
      v513 = v101;
      v514 = v102;
      v303 = v103;
      v515 = v103;
      v300 = v104;
      v516 = v104;
      v297 = v105;
      v517 = v105;
      v518 = v115;
      v519 = v116;
      v520 = v117;
      v521 = v118;
      v522 = v119;
      v120 = v506[16];
      v293 = v506[17];
      v257 = v506[18];
      v259 = v506[19];
      v261 = v506[20];
      v263 = v506[21];
      v266 = v506[22];
      v271 = v506[23];
      v291 = v506[24];
      v289 = v506[25];
      v121 = v506[26];
      v268 = v506[27];
      v122 = v506[28];
      v274 = v506[29];
      v123 = v506[30];
      v276 = v506[31];
      v191 = v506[48];
      v193 = v506[49];
      v195 = v506[50];
      v197 = v506[51];
      v199 = v506[52];
      v201 = v506[53];
      v203 = v506[54];
      v479 = v506[55];
      v482 = v506[56];
      v484 = v506[57];
      v486 = v506[58];
      v488 = v506[59];
      v487 = v506[60];
      v177 = v506[61];
      v477 = v506[62];
      v179 = v506[63];
      v175 = v506[64];
      v296 = *((unsigned __int16 *)v506 + 33);
      v489 = *((unsigned __int16 *)v506 + 34);
      v284 = v454[16];
      v282 = v454[17];
      v231 = v454[18];
      v233 = v454[19];
      v235 = v454[20];
      v237 = v454[21];
      v241 = v454[22];
      v245 = v454[23];
      v280 = v454[24];
      v278 = v454[25];
      v239 = v454[26];
      v243 = v454[27];
      v247 = v454[28];
      v249 = v454[29];
      v252 = v454[30];
      v254 = v454[31];
      v382 = v454[32];
      v385 = v454[33];
      v388 = v454[34];
      v390 = v454[35];
      v392 = v454[36];
      v395 = v454[37];
      __dsta = v454[38];
      v404 = v454[39];
      v408 = v454[40];
      v412 = v454[41];
      v416 = v454[42];
      v419 = v454[43];
      v422 = v454[44];
      v425 = v454[45];
      v429 = v454[46];
      v433 = v454[47];
      v324 = v454[48];
      v326 = v454[49];
      v329 = v454[50];
      v211 = v454[51];
      v332 = v454[52];
      v213 = v454[53];
      v215 = v454[54];
      v217 = v454[55];
      v219 = v454[56];
      v221 = v454[57];
      v223 = v454[58];
      v225 = v454[59];
      v227 = v454[60];
      v335 = v454[61];
      v229 = v454[62];
      v338 = v454[63];
      v209 = v454[64];
      v287 = *((unsigned __int16 *)v454 + 33);
      v341 = *((unsigned __int16 *)v454 + 34);
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X14 }
      v355 = v317;
      v353 = v314;
      v351 = v311;
      v349 = v308;
      v498 = v115;
      v494 = v117;
      v496 = v116;
      v491 = v119;
      v492 = v118;
      v173 = v120;
      v166 = v271;
      v165 = v122;
      v318 = v469;
      v315 = v466;
      v312 = v462;
      v309 = v459;
      v272 = v479;
      v160 = v123;
      v161 = v121;
      __s1 = v382;
      v524 = v385;
      v525 = v388;
      v526 = v390;
      v527 = v392;
      v528 = v395;
      v529 = __dsta;
      v530 = v404;
      v531 = v408;
      v532 = v412;
      v533 = v416;
      v534 = v419;
      v535 = v422;
      v536 = v425;
      v537 = v429;
      v538 = v433;
      __s2 = v379;
      v508 = v453;
      v509 = v376;
      v510 = v452;
      v511 = v373;
      v512 = v370;
      v513 = v367;
      v514 = v363;
      v515 = v361;
      v516 = v359;
      v517 = v357;
      v518 = v448;
      v519 = v444;
      v520 = v441;
      v521 = v438;
      v522 = v436;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        __asm { BR              X8 }
      v480 = v363;
      v470 = v448;
      v467 = v444;
      v463 = v441;
      v460 = v438;
      v364 = v404;
      v449 = v419;
      v445 = v422;
      v442 = v425;
      v439 = v429;
      __s1 = v322;
      v524 = v320;
      v124 = v355;
      v525 = v355;
      v125 = v353;
      v526 = v353;
      v126 = v351;
      v527 = v351;
      v127 = v349;
      v528 = v349;
      v128 = v306;
      v529 = v306;
      v129 = v102;
      v530 = v102;
      v130 = v303;
      v531 = v303;
      v131 = v300;
      v532 = v300;
      v533 = v297;
      v534 = v498;
      v535 = v496;
      v536 = v494;
      v537 = v492;
      v538 = v491;
      v132 = v379;
      __s2 = v379;
      v508 = v453;
      v509 = v376;
      v510 = v452;
      v511 = v373;
      v512 = v370;
      v513 = v367;
      v514 = v480;
      v515 = v361;
      v516 = v359;
      v517 = v357;
      v518 = v470;
      v519 = v467;
      v520 = v463;
      v521 = v460;
      v522 = v436;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_83;
      __s1 = v379;
      v524 = v453;
      v525 = v376;
      v526 = v452;
      v527 = v373;
      v528 = v370;
      v529 = v367;
      v530 = v480;
      v531 = v361;
      v532 = v359;
      v533 = v357;
      v534 = v470;
      v535 = v467;
      v536 = v463;
      v537 = v460;
      v538 = v436;
      __s2 = v322;
      v508 = v320;
      v509 = v355;
      v510 = v353;
      v511 = v351;
      v512 = v349;
      v513 = v306;
      v514 = v102;
      v515 = v303;
      v516 = v300;
      v517 = v297;
      v518 = v498;
      v519 = v496;
      v520 = v494;
      v521 = v492;
      v522 = v491;
      v426 = v284 | (v282 << 8);
      v430 = v280 | (v278 << 8);
      v420 = v173 | (v293 << 8);
      v423 = v291 | (v289 << 8);
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v322;
        v524 = v320;
        v525 = v355;
        v526 = v353;
        v527 = v351;
        v528 = v349;
        v529 = v306;
        v530 = v102;
        v531 = v303;
        v532 = v300;
        v533 = v297;
        v534 = v498;
        v535 = v496;
        v536 = v494;
        v537 = v492;
        v538 = v491;
        __s2 = v379;
        v508 = v453;
        v509 = v376;
        v510 = v452;
        v511 = v373;
        v512 = v370;
        v513 = v367;
        v514 = v480;
        v515 = v361;
        v516 = v359;
        v517 = v357;
        v518 = v470;
        v519 = v467;
        v520 = v463;
        v521 = v460;
        v522 = v436;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_83;
        __s1 = v379;
        v524 = v453;
        v525 = v376;
        v526 = v452;
        v527 = v373;
        v528 = v370;
        v529 = v367;
        v530 = v480;
        v531 = v361;
        v532 = v359;
        v533 = v357;
        v534 = v470;
        v535 = v467;
        v536 = v463;
        v537 = v460;
        v538 = v436;
        __s2 = v322;
        v508 = v320;
        v509 = v355;
        v510 = v353;
        v511 = v351;
        v512 = v349;
        v513 = v306;
        v514 = v102;
        v515 = v303;
        v516 = v300;
        v517 = v297;
        v518 = v498;
        v519 = v496;
        v520 = v494;
        v521 = v492;
        v522 = v491;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v173;
          v524 = v293;
          v531 = v291;
          v532 = v289;
          __s2 = v284;
          v508 = v282;
          v515 = v280;
          v516 = v278;
          v525 = v257;
          v526 = v259;
          v527 = v261;
          v528 = v263;
          v529 = v266;
          v530 = v166;
          v533 = v161;
          v534 = v268;
          v535 = v165;
          v536 = v274;
          v537 = v160;
          v538 = v276;
          v509 = v231;
          v510 = v233;
          v511 = v235;
          v512 = v237;
          v513 = v241;
          v514 = v245;
          v517 = v239;
          v518 = v243;
          v519 = v247;
          v520 = v249;
          v521 = v252;
          v522 = v254;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_83;
        }
        __s1 = v379;
        v524 = v453;
        v525 = v376;
        v526 = v452;
        v527 = v373;
        v528 = v370;
        v529 = v367;
        v530 = v480;
        v531 = v361;
        v532 = v359;
        v533 = v357;
        v534 = v470;
        v535 = v467;
        v536 = v463;
        v537 = v460;
        v538 = v436;
        __s2 = v322;
        v508 = v320;
        v509 = v355;
        v510 = v353;
        v511 = v351;
        v512 = v349;
        v513 = v306;
        v514 = v102;
        v515 = v303;
        v516 = v300;
        v517 = v297;
        v518 = v498;
        v519 = v496;
        v520 = v494;
        v521 = v492;
        v522 = v491;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          __s1 = v322;
          v524 = v320;
          v525 = v355;
          v526 = v353;
          v527 = v351;
          v528 = v349;
          v529 = v306;
          v530 = v102;
          v531 = v303;
          v532 = v300;
          v533 = v297;
          v534 = v498;
          v535 = v496;
          v536 = v494;
          v537 = v492;
          v538 = v491;
          __s2 = v379;
          v508 = v453;
          v509 = v376;
          v510 = v452;
          v511 = v373;
          v512 = v370;
          v513 = v367;
          v514 = v480;
          v515 = v361;
          v516 = v359;
          v517 = v357;
          v518 = v470;
          v519 = v467;
          v520 = v463;
          v521 = v460;
          v522 = v436;
          if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
            goto LABEL_105;
          v405 = v423 | (v161 << 16) | (v268 << 24) | (v165 << 32) | (v274 << 40) | (v160 << 48) | (v276 << 56);
          v124 = v355;
          v125 = v353;
          v126 = v351;
          v127 = v349;
          v128 = v306;
          v129 = v102;
          v130 = v303;
          v131 = v300;
          v132 = v379;
          if (static UniversalControlUUID.compare(lhs:rhs:)(v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56), v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v405) != -1)break;
        }
      }
LABEL_92:
      __s1 = v132;
      v524 = v453;
      v525 = v376;
      v526 = v452;
      v527 = v373;
      v528 = v370;
      v529 = v367;
      v530 = v480;
      v531 = v361;
      v532 = v359;
      v533 = v357;
      v534 = v470;
      v535 = v467;
      v536 = v463;
      v537 = v460;
      v538 = v436;
      __s2 = v322;
      v508 = v320;
      v509 = v124;
      v510 = v125;
      v511 = v126;
      v512 = v127;
      v513 = v128;
      v514 = v129;
      v515 = v130;
      v516 = v131;
      v517 = v297;
      v518 = v498;
      v519 = v496;
      v520 = v494;
      v521 = v492;
      v522 = v491;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_93;
      __s1 = v322;
      v524 = v320;
      v525 = v124;
      v526 = v125;
      v527 = v126;
      v528 = v127;
      v529 = v128;
      v530 = v129;
      v531 = v130;
      v532 = v131;
      v533 = v297;
      v534 = v498;
      v535 = v496;
      v536 = v494;
      v537 = v492;
      v538 = v491;
      __s2 = v132;
      v508 = v453;
      v509 = v376;
      v510 = v452;
      v511 = v373;
      v512 = v370;
      v513 = v367;
      v514 = v480;
      v515 = v361;
      v516 = v359;
      v517 = v357;
      v518 = v470;
      v519 = v467;
      v520 = v463;
      v521 = v460;
      v522 = v436;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v132;
        v524 = v453;
        v525 = v376;
        v526 = v452;
        v527 = v373;
        v528 = v370;
        v529 = v367;
        v530 = v480;
        v531 = v361;
        v532 = v359;
        v533 = v357;
        v534 = v470;
        v535 = v467;
        v536 = v463;
        v537 = v460;
        v538 = v436;
        __s2 = v322;
        v508 = v320;
        v509 = v124;
        v510 = v125;
        v511 = v126;
        v512 = v127;
        v513 = v128;
        v514 = v129;
        v515 = v130;
        v516 = v131;
        v517 = v297;
        v518 = v498;
        v519 = v496;
        v520 = v494;
        v521 = v492;
        v522 = v491;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_93;
        __s1 = v322;
        v524 = v320;
        v525 = v124;
        v526 = v125;
        v527 = v126;
        v528 = v127;
        v529 = v128;
        v530 = v129;
        v531 = v130;
        v532 = v131;
        v533 = v297;
        v534 = v498;
        v535 = v496;
        v536 = v494;
        v537 = v492;
        v538 = v491;
        __s2 = v132;
        v508 = v453;
        v509 = v376;
        v510 = v452;
        v511 = v373;
        v512 = v370;
        v513 = v367;
        v514 = v480;
        v515 = v361;
        v516 = v359;
        v517 = v357;
        v518 = v470;
        v519 = v467;
        v520 = v463;
        v521 = v460;
        v522 = v436;
        if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
        {
          sub_249772148(v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56), v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v423 | (v161 << 16) | (v268 << 24) | (v165 << 32) | (v274 << 40) | (v160 << 48) | (v276 << 56));
          if ((v152 & 1) != 0)
            goto LABEL_93;
        }
        if ((sub_249772148(v322 | (v320 << 8) | (v124 << 16) | (v125 << 24) | (v126 << 32) | (v127 << 40) | (v128 << 48) | (v129 << 56), v130 | (v131 << 8) | (v297 << 16) | (v498 << 24) | (v496 << 32) | (v494 << 40) | (v492 << 48) | (v491 << 56), v132 | (v453 << 8) | (v376 << 16) | (v452 << 24) | (v373 << 32) | (v370 << 40) | (v367 << 48) | (v480 << 56), v361 | (v359 << 8) | (v357 << 16) | (v470 << 24) | (v467 << 32) | (v463 << 40) | (v460 << 48) | (v436 << 56)), v153 == 2)&& (sub_249772148(v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v423 | (v161 << 16) | (v268 << 24) | (v165 << 32) | (v274 << 40) | (v160 << 48) | (v276 << 56), v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56)), v153 == 2)|| (v153 & 1) == 0)
        {
          if (v209 < v175)
            goto LABEL_93;
          if (v175 >= v209 && v287 < v296)
            goto LABEL_93;
        }
      }
      v139 = dword_24983AE80[(char)v175];
      v140 = dword_24983AE80[(char)v209];
      __s1 = v475;
      v524 = v473;
      v525 = v318;
      v526 = v315;
      v527 = v312;
      v528 = v309;
      v529 = v457;
      v530 = v343;
      v531 = v207;
      v532 = v205;
      v533 = v245;
      v534 = v189;
      v535 = v187;
      v536 = v185;
      v537 = v183;
      v538 = v181;
      __s2 = v382;
      v508 = v385;
      v509 = v388;
      v510 = v390;
      v511 = v392;
      v512 = v395;
      v513 = __dsta;
      v514 = v364;
      v515 = v408;
      v516 = v412;
      v517 = v416;
      v518 = v449;
      v519 = v445;
      v520 = v442;
      v521 = v439;
      v522 = v433;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        v141 = v382 | (v385 << 8) | (v388 << 16) | (v390 << 24) | (v392 << 32) | (v395 << 40) | (__dsta << 48) | (v364 << 56);
        v142 = v408 | (v412 << 8) | (v416 << 16) | (v449 << 24) | (v445 << 32) | (v442 << 40) | (v439 << 48) | (v433 << 56);
        v143 = v475 | (v473 << 8) | (v318 << 16) | (v315 << 24) | (v312 << 32) | (v309 << 40) | (v457 << 48) | (v343 << 56);
        v144 = v207 | (v205 << 8) | (v245 << 16) | (v189 << 24) | (v187 << 32) | (v185 << 40) | (v183 << 48) | (v181 << 56);
        v145 = v324 | (v326 << 8);
        v146 = v219 | (v221 << 8);
        v147 = v191 | (v193 << 8);
        v505 = v482 | (v484 << 8);
        v148 = v140 | (v341 << 16);
        v149 = v139 | (v489 << 16);
        if (static UniversalControlUUID.compare(lhs:rhs:)(v141, v142, v143, v144) == -1
          || ((sub_249772148(v143, v144, v141, v142), v150 == 2)
           && (sub_249772148(v147 | (v195 << 16) | (v197 << 24) | (v199 << 32) | (v201 << 40) | (v203 << 48) | (v272 << 56), v505 | (v486 << 16) | (v488 << 24) | (v487 << 32) | (v177 << 40) | (v477 << 48) | (v179 << 56), v145 | (v329 << 16) | (v211 << 24) | (v332 << 32) | (v213 << 40) | (v215 << 48) | (v217 << 56), v146 | (v223 << 16) | (v225 << 24) | (v227 << 32) | (v335 << 40) | (v229 << 48) | (v338 << 56)), v150 == 2)|| (v150 & 1) == 0)&& (((sub_249772148(v141, v142, v143, v144), v151 != 2)|| (sub_249772148(v145 | (v329 << 16) | (v211 << 24) | (v332 << 32) | (v213 << 40) | (v215 << 48) | (v217 << 56), v146 | (v223 << 16) | (v225 << 24) | (v227 << 32) | (v335 << 40) | (v229 << 48) | (v338 << 56), v147 | (v195 << 16) | (v197 << 24) | (v199 << 32) | (v201 << 40) | (v203 << 48) | (v272 << 56), v505 | (v486 << 16) | (v488 << 24) | (v487 << 32) | (v177 << 40) | (v477 << 48) | (v179 << 56)), v151 != 2))&& (v151 & 1) != 0|| (sub_24978B990(v149, v148) & 1) == 0))
        {
          if (static UniversalControlUUID.compare(lhs:rhs:)(v141, v142, v143, v144) != -1
            && static UniversalControlUUID.compare(lhs:rhs:)(v143, v144, v141, v142) != -1
            && sub_24978B8C8(v141, v142, v145 | (v329 << 16) | (v211 << 24) | (v332 << 32) | (v213 << 40) | (v215 << 48) | (v217 << 56), v146 | (v223 << 16) | (v225 << 24) | (v227 << 32) | (v335 << 40) | (v229 << 48) | (v338 << 56), v143, v144, v147 | (v195 << 16) | (v197 << 24) | (v199 << 32) | (v201 << 40) | (v203 << 48) | (v272 << 56), v505 | (v486 << 16) | (v488 << 24) | (v487 << 32) | (v177 << 40) | (v477 << 48) | (v179 << 56)) == 2)
          {
            sub_24978B990(v148, v149);
          }
LABEL_93:
          v134 = v401;
          v133 = v454;
          v137 = v401 != v454 || v401 >= v454 + 70;
          v454 += 70;
          if (!v137)
            goto LABEL_85;
LABEL_84:
          memmove(v134, v133, 0x46uLL);
          goto LABEL_85;
        }
      }
LABEL_83:
      v133 = v506;
      v134 = v401;
      v135 = v401 == v506;
      v506 += 70;
      if (!v135)
        goto LABEL_84;
LABEL_85:
      v5 = v134 + 70;
      if ((unint64_t)v454 >= v399 || (unint64_t)v506 >= v157)
      {
        sub_2497AC098(v454, (uint64_t)(v399 - (_QWORD)v454) / 70, v5);
        return 1;
      }
    }
    static UniversalControlUUID.compare(lhs:rhs:)(v420 | (v257 << 16) | (v259 << 24) | (v261 << 32) | (v263 << 40) | (v266 << 48) | (v166 << 56), v405, v426 | (v231 << 16) | (v233 << 24) | (v235 << 32) | (v237 << 40) | (v241 << 48) | (v245 << 56), v430 | (v239 << 16) | (v243 << 24) | (v247 << 32) | (v249 << 40) | (v252 << 48) | (v254 << 56));
LABEL_105:
    v124 = v355;
    v125 = v353;
    v126 = v351;
    v127 = v349;
    v128 = v306;
    v129 = v102;
    v130 = v303;
    v131 = v300;
    v132 = v379;
    if (v175 < v209)
      goto LABEL_83;
    if (v209 >= v175 && v296 < v287)
      goto LABEL_83;
    goto LABEL_92;
  }
  sub_2497AC098(v454, (v10 - (unsigned __int8 *)v454) / 70, v5);
  return 1;
}

uint64_t sub_2497BF374(char *a1, char *a2, unint64_t a3, char *a4)
{
  unint64_t v4;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v18;
  unsigned __int8 *v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  unsigned __int8 *v26;
  char *v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  int v53;
  BOOL v54;
  char *v55;
  uint64_t v56;
  unsigned __int8 *v57;
  int v58;
  int v59;
  unsigned int v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned __int8 *v64;
  unsigned int v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  BOOL v77;
  _QWORD *v78;
  int v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  char v134;
  char *v135;
  unint64_t v136;

  v4 = (unint64_t)a4;
  v6 = (unint64_t)a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 8;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 8;
  if (v9 >= v11)
  {
    sub_2497AC2B4(a2, (uint64_t)(a3 - (_QWORD)a2) / 8, a4);
    v14 = (char *)(v4 + 8 * v11);
    if ((unint64_t)v7 >= v6 || v10 < 8)
      goto LABEL_13;
    v55 = (char *)(a3 - 8);
    while (1)
    {
      v130 = (uint64_t)v55;
      v132 = (uint64_t)(v55 + 8);
      v136 = *((_QWORD *)v14 - 1);
      v92 = (uint64_t)(v14 - 8);
      v56 = *(_QWORD *)(v6 - 8);
      v122 = v6 - 8;
      v57 = (unsigned __int8 *)(*(_QWORD *)(v136 + 24)
                              + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      OUTLINED_FUNCTION_16();
      v58 = *v57;
      LODWORD(v128) = v57[1];
      HIDWORD(v128) = v57[2];
      v134 = v57[3];
      v59 = v57[6];
      v60 = v57[8];
      v61 = v57[9];
      LODWORD(v126) = v57[10];
      HIDWORD(v126) = v57[7];
      v62 = v57[11];
      v63 = v57[13];
      LODWORD(v124) = v57[14];
      HIDWORD(v124) = v57[12];
      v64 = (unsigned __int8 *)(*(_QWORD *)(v56 + 24)
                              + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      v65 = v57[15];
      v88 = *((_OWORD *)v57 + 1);
      OUTLINED_FUNCTION_16();
      v85 = *((_OWORD *)v64 + 1);
      HIDWORD(v120) = v58;
      v6 = v128;
      LODWORD(v120) = v59;
      HIDWORD(v115) = v61;
      v66 = v126;
      v118 = __PAIR64__(v60, v62);
      HIDWORD(v113) = v64[1];
      LODWORD(v115) = *v64;
      HIDWORD(v111) = v64[3];
      LODWORD(v113) = v64[2];
      HIDWORD(v109) = v64[5];
      LODWORD(v111) = v64[4];
      LODWORD(v109) = v64[6];
      HIDWORD(v105) = v64[9];
      v107 = __PAIR64__(v64[7], v64[8]);
      LODWORD(v101) = v64[10];
      LODWORD(v98) = v64[11];
      HIDWORD(v95) = v64[13];
      LODWORD(v96) = v64[12];
      LODWORD(v95) = v64[14];
      v4 = v136;
      swift_retain();
      swift_retain();
      v67 = OUTLINED_FUNCTION_14_6();
      if ((v67 & 0x80000000) != 0)
        break;
      OUTLINED_FUNCTION_156(v67, v68, v69, v70, v71, v72, v73, v74, v82, v83, v85, *((uint64_t *)&v85 + 1), v88, *((uint64_t *)&v88 + 1), v90, v92, v95, v96, v98,
        v100,
        v101,
        v103,
        v104,
        v105,
        v107,
        v109,
        v111,
        v113,
        v115,
        __SPAIR64__(v63, v65),
        v118,
        v120,
        v122,
        v124,
        v126,
        v128,
        v130,
        v132,
        v134);
      if ((OUTLINED_FUNCTION_14_6() & 0x80000000) != 0)
      {
        swift_release();
        OUTLINED_FUNCTION_121();
        OUTLINED_FUNCTION_124();
      }
      else
      {
        v80 = OUTLINED_FUNCTION_14_6();
        swift_release();
        OUTLINED_FUNCTION_121();
        OUTLINED_FUNCTION_124();
        if (v80 < 0)
          goto LABEL_32;
      }
      v81 = v75 != v14 || v76 >= v14;
      v14 = v93;
      v78 = v93;
      if (!v81)
        goto LABEL_38;
LABEL_37:
      *(_QWORD *)v76 = *v78;
LABEL_38:
      v55 = v76 - 8;
      if (v6 <= v66 || (unint64_t)v14 <= v136)
        goto LABEL_13;
    }
    OUTLINED_FUNCTION_41_1();
    swift_release();
    OUTLINED_FUNCTION_124();
LABEL_32:
    v77 = v75 != (char *)v6 || (unint64_t)v76 >= v6;
    v78 = (_QWORD *)v122;
    v6 = v122;
    if (!v77)
      goto LABEL_38;
    goto LABEL_37;
  }
  v12 = (char *)OUTLINED_FUNCTION_170();
  sub_2497AC2B4(v12, v13, (char *)v4);
  v14 = (char *)(v4 + 8 * v9);
  if (v6 < a3 && v8 >= 8)
  {
    v97 = a3;
    do
    {
      v135 = *(char **)v6;
      v18 = *(_QWORD *)v4;
      v19 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v6 + 24)
                              + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      OUTLINED_FUNCTION_16();
      v20 = *v19;
      LODWORD(v127) = v19[1];
      HIDWORD(v127) = v19[2];
      v133 = v19[3];
      v21 = v19[6];
      v22 = v19[7];
      v23 = v19[8];
      v24 = v19[9];
      LODWORD(v129) = v19[10];
      v25 = v19[12];
      LODWORD(v125) = v19[13];
      HIDWORD(v125) = v19[11];
      LODWORD(v131) = v19[14];
      v26 = (unsigned __int8 *)(*(_QWORD *)(v18 + 24)
                              + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      LODWORD(v18) = v19[15];
      v102 = *((_OWORD *)v19 + 1);
      OUTLINED_FUNCTION_16();
      v27 = (char *)*v26;
      v28 = v26[2];
      v29 = v26[3];
      v30 = v26[4];
      v31 = v26[5];
      v32 = v26[6];
      v33 = v26[7];
      v34 = v26[8];
      v35 = v26[9];
      v36 = v26[10];
      v37 = v26[11];
      v38 = v26[12];
      v39 = v26[13];
      v40 = v26[14];
      v99 = *((_OWORD *)v26 + 1);
      v41 = v26[15];
      HIDWORD(v123) = v20;
      v4 = v127;
      LODWORD(v123) = v21;
      v119 = __PAIR64__(v18, v22);
      v117 = __PAIR64__(v23, v24);
      LODWORD(v121) = v25;
      v42 = v27;
      v116 = __PAIR64__(v28, v29);
      v114 = __PAIR64__(v30, v31);
      v112 = __PAIR64__(v32, v33);
      v110 = __PAIR64__(v34, v35);
      v108 = __PAIR64__(v36, v37);
      v106 = __PAIR64__(v38, v39);
      HIDWORD(v105) = v40;
      v6 = (unint64_t)v135;
      swift_retain();
      OUTLINED_FUNCTION_21_2();
      v43 = OUTLINED_FUNCTION_14_6();
      if ((v43 & 0x80000000) != 0)
      {
        swift_release();
        swift_release();
        OUTLINED_FUNCTION_123();
      }
      else
      {
        OUTLINED_FUNCTION_156(v43, v44, v45, v46, v47, v48, v49, v50, v82, v83, v84, v86, v87, v89, v90, v91, v94, v97, v99,
          *((uint64_t *)&v99 + 1),
          v102,
          *((uint64_t *)&v102 + 1),
          v104,
          v105,
          v106,
          v108,
          v110,
          v112,
          v114,
          v116,
          v117,
          v119,
          v121,
          v123,
          v125,
          v127,
          v129,
          v131,
          v133);
        if ((OUTLINED_FUNCTION_14_6() & 0x80000000) != 0)
        {
          swift_release();
          OUTLINED_FUNCTION_121();
          OUTLINED_FUNCTION_123();
LABEL_27:
          v51 = (char *)v4;
          v54 = v42 == (char *)v4;
          v4 += 8;
          if (v54)
            goto LABEL_18;
LABEL_17:
          *(_QWORD *)v42 = *(_QWORD *)v51;
          goto LABEL_18;
        }
        v53 = OUTLINED_FUNCTION_14_6();
        swift_release();
        OUTLINED_FUNCTION_121();
        OUTLINED_FUNCTION_123();
        if ((v53 & 0x80000000) == 0)
          goto LABEL_27;
      }
      v51 = v135;
      v6 = (unint64_t)(v135 + 8);
      if (v42 != v135)
        goto LABEL_17;
LABEL_18:
      v7 = v42 + 8;
    }
    while (v4 < (unint64_t)v14 && v6 < v41);
  }
  v6 = (unint64_t)v7;
LABEL_13:
  sub_2497AC2B4((char *)v4, (uint64_t)&v14[-v4] / 8, (char *)v6);
  return 1;
}

uint64_t sub_2497BFB4C(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char *v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char *v42;
  char *v43;
  BOOL v44;
  __int128 v45;
  __int128 v46;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char *v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char *v81;
  unint64_t v82;
  BOOL v83;
  unint64_t v84;
  __int128 v85;
  __int128 v86;
  BOOL v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  unint64_t v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  char v103;
  char v104;
  char v105;
  char v106;
  char v107;
  char v108;
  char v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;
  char v118;
  char v119;
  char v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;
  char v127;
  char v128;
  char v129;
  char v130;
  char v131;
  char v132;
  char v133;
  char v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  char v166;
  char v167;
  unint64_t v168;
  char v169;
  char *v170;
  char v171;
  char v172;
  char v173;
  char v174;
  char v175;
  char v176;
  char v177;
  char v178;
  char v179;
  char v180;
  char v181;
  char v182;
  char v183;
  char v184;
  char v185;
  char v186;
  char v187;
  char v188;
  char v189;
  char v190;
  char v191;
  char v192;
  char v193;
  char v194;
  char v195;
  char v196;
  char v197;
  char v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  char v205;
  char v206;
  char v207;
  char v208;
  char v209;
  char v210;
  char v211;
  char v212;
  char v213;
  char *v214;
  char *v215;
  char __s2;
  char v217;
  char v218;
  char v219;
  char v220;
  char v221;
  char v222;
  char v223;
  char v224;
  char v225;
  char v226;
  char v227;
  char v228;
  char v229;
  char v230;
  char v231;
  char __s1;
  char v233;
  char v234;
  char v235;
  char v236;
  char v237;
  char v238;
  char v239;
  char v240;
  char v241;
  char v242;
  char v243;
  char v244;
  char v245;
  char v246;
  char v247;
  uint64_t v248;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v248 = *MEMORY[0x24BDAC8D0];
  v8 = a2 - a1;
  v9 = (a2 - a1) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  if (v9 >= v11)
  {
    sub_2497AC258(a2, (uint64_t)(a3 - (_QWORD)a2) / 40, a4);
    v12 = &v4[40 * v11];
    if (v10 < 40 || v7 >= v6)
      goto LABEL_13;
    v54 = a3 - 40;
    v204 = v4;
    v202 = v7;
    while (1)
    {
      v168 = v54;
      v170 = (char *)(v54 + 40);
      v200 = v12;
      v215 = v6;
      v55 = *((_QWORD *)v6 - 1);
      v56 = (char *)(*(_QWORD *)(*((_QWORD *)v12 - 1) + 24)
                   + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      swift_beginAccess();
      v57 = *v56;
      v58 = v56[2];
      v164 = v56[3];
      v166 = v56[1];
      v59 = v56[4];
      v60 = v56[5];
      v61 = v56[6];
      v62 = v56[7];
      v211 = v56[9];
      v213 = v56[8];
      v209 = v56[10];
      v160 = v56[12];
      v162 = v56[11];
      v205 = v56[14];
      v207 = v56[13];
      v63 = v56[15];
      v156 = v56[17];
      v158 = v56[16];
      v152 = v56[19];
      v154 = v56[18];
      v148 = v56[21];
      v150 = v56[20];
      v144 = v56[23];
      v146 = v56[22];
      v140 = v56[25];
      v142 = v56[24];
      v136 = v56[27];
      v138 = v56[26];
      v64 = (char *)(*(_QWORD *)(v55 + 24) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      v128 = v56[28];
      v130 = v56[29];
      v132 = v56[30];
      v134 = v56[31];
      swift_beginAccess();
      v65 = *v64;
      v66 = v64[1];
      v67 = v64[2];
      v68 = v64[3];
      v69 = v64[4];
      v70 = v64[5];
      v71 = v64[6];
      v72 = v64[7];
      v73 = v64[8];
      v74 = v64[9];
      v75 = v64[10];
      v76 = v64[11];
      v77 = v64[12];
      v78 = v64[13];
      v79 = v64[14];
      v80 = v64[15];
      v126 = v64[16];
      v124 = v64[17];
      v122 = v64[18];
      v120 = v64[19];
      v118 = v64[20];
      v116 = v64[21];
      v114 = v64[22];
      v112 = v64[23];
      v110 = v64[24];
      v108 = v64[25];
      v106 = v64[26];
      v104 = v64[27];
      v102 = v64[28];
      v100 = v64[29];
      v98 = v64[30];
      v96 = v64[31];
      __s1 = v57;
      v233 = v166;
      v234 = v58;
      v235 = v164;
      v236 = v59;
      v237 = v60;
      v238 = v61;
      v239 = v62;
      v240 = v213;
      v241 = v211;
      v242 = v209;
      v243 = v162;
      v244 = v160;
      v245 = v207;
      v246 = v205;
      v198 = v65;
      v247 = v63;
      __s2 = v65;
      v217 = v66;
      v194 = v68;
      v196 = v67;
      v218 = v67;
      v219 = v68;
      v190 = v70;
      v192 = v69;
      v220 = v69;
      v221 = v70;
      v186 = v72;
      v188 = v71;
      v222 = v71;
      v223 = v72;
      v182 = v74;
      v184 = v73;
      v224 = v73;
      v225 = v74;
      v180 = v76;
      v226 = v75;
      v227 = v76;
      v176 = v78;
      v178 = v77;
      v228 = v77;
      v229 = v78;
      v172 = v80;
      v174 = v79;
      v230 = v79;
      v231 = v80;
      swift_retain();
      swift_retain();
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_44;
      __s1 = v198;
      v233 = v66;
      v234 = v196;
      v235 = v194;
      v236 = v192;
      v237 = v190;
      v238 = v188;
      v239 = v186;
      v240 = v184;
      v241 = v182;
      v242 = v75;
      v243 = v180;
      v244 = v178;
      v245 = v176;
      v246 = v174;
      v247 = v172;
      __s2 = v57;
      v217 = v166;
      v218 = v58;
      v219 = v164;
      v220 = v59;
      v221 = v60;
      v222 = v61;
      v223 = v62;
      v224 = v213;
      v225 = v211;
      v226 = v209;
      v227 = v162;
      v228 = v160;
      v229 = v207;
      v230 = v205;
      v231 = v63;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v158;
        v233 = v156;
        v234 = v154;
        v235 = v152;
        v236 = v150;
        v237 = v148;
        v238 = v146;
        v239 = v144;
        v240 = v142;
        v241 = v140;
        v242 = v138;
        v243 = v136;
        v244 = v128;
        v245 = v130;
        v246 = v132;
        v247 = v134;
        __s2 = v126;
        v217 = v124;
        v218 = v122;
        v219 = v120;
        v220 = v118;
        v221 = v116;
        v222 = v114;
        v223 = v112;
        v224 = v110;
        v225 = v108;
        v226 = v106;
        v227 = v104;
        v228 = v102;
        v229 = v100;
        v230 = v98;
        v231 = v96;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_44;
      }
      __s1 = v198;
      v233 = v66;
      v234 = v196;
      v235 = v194;
      v236 = v192;
      v237 = v190;
      v238 = v188;
      v239 = v186;
      v240 = v184;
      v241 = v182;
      v242 = v75;
      v243 = v180;
      v244 = v178;
      v245 = v176;
      v246 = v174;
      v247 = v172;
      __s2 = v57;
      v217 = v166;
      v218 = v58;
      v219 = v164;
      v220 = v59;
      v221 = v60;
      v222 = v61;
      v223 = v62;
      v224 = v213;
      v225 = v211;
      v226 = v209;
      v227 = v162;
      v228 = v160;
      v229 = v207;
      v230 = v205;
      v231 = v63;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_59;
      __s1 = v57;
      v233 = v166;
      v234 = v58;
      v235 = v164;
      v236 = v59;
      v237 = v60;
      v238 = v61;
      v239 = v62;
      v240 = v213;
      v241 = v211;
      v242 = v209;
      v243 = v162;
      v244 = v160;
      v245 = v207;
      v246 = v205;
      v247 = v63;
      __s2 = v198;
      v217 = v66;
      v218 = v196;
      v219 = v194;
      v220 = v192;
      v221 = v190;
      v222 = v188;
      v223 = v186;
      v224 = v184;
      v225 = v182;
      v226 = v75;
      v227 = v180;
      v228 = v178;
      v229 = v176;
      v230 = v174;
      v231 = v172;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v126;
        v233 = v124;
        v234 = v122;
        v235 = v120;
        v236 = v118;
        v237 = v116;
        v238 = v114;
        v239 = v112;
        v240 = v110;
        v241 = v108;
        v242 = v106;
        v243 = v104;
        v244 = v102;
        v245 = v100;
        v246 = v98;
        v247 = v96;
        __s2 = v158;
        v217 = v156;
        v218 = v154;
        v219 = v152;
        v220 = v150;
        v221 = v148;
        v222 = v146;
        v223 = v144;
        v224 = v142;
        v225 = v140;
        v226 = v138;
        v227 = v136;
        v228 = v128;
        v229 = v130;
        v230 = v132;
        v231 = v134;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        {
LABEL_59:
          swift_release();
          swift_release();
LABEL_60:
          v84 = (unint64_t)v202;
          v81 = v200 - 40;
          v82 = v168;
          v88 = v170 != v200 || v168 >= (unint64_t)v200;
          v12 = v200 - 40;
          v4 = v204;
          v6 = v215;
          if (!v88)
            goto LABEL_51;
          goto LABEL_50;
        }
      }
      v89 = sub_2497A1E9C();
      v90 = sub_2497A1E9C();
      if (v89 < v90)
      {
LABEL_44:
        swift_release();
        swift_release();
      }
      else
      {
        if (v90 < v89)
          goto LABEL_59;
        sub_2497A1E9C();
        v92 = v91;
        sub_2497A1E9C();
        v94 = v93;
        swift_release();
        swift_release();
        if (v92 >= v94)
          goto LABEL_60;
      }
      v81 = v215 - 40;
      v82 = v168;
      v83 = v170 != v215 || v168 >= (unint64_t)v215;
      v6 = v215 - 40;
      v4 = v204;
      v12 = v200;
      v84 = (unint64_t)v202;
      if (!v83)
        goto LABEL_51;
LABEL_50:
      v85 = *(_OWORD *)v81;
      v86 = *((_OWORD *)v81 + 1);
      *(_QWORD *)(v82 + 32) = *((_QWORD *)v81 + 4);
      *(_OWORD *)v82 = v85;
      *(_OWORD *)(v82 + 16) = v86;
LABEL_51:
      v54 = v82 - 40;
      if (v12 <= v4 || (unint64_t)v6 <= v84)
        goto LABEL_13;
    }
  }
  sub_2497AC258(a1, (a2 - a1) / 40, a4);
  v12 = &v4[40 * v9];
  if (v8 >= 40 && (unint64_t)v6 < a3)
  {
    v199 = &v4[40 * v9];
    v95 = a3;
    while (1)
    {
      v201 = v7;
      v203 = v4;
      v16 = *((_QWORD *)v4 + 4);
      v214 = v6;
      v17 = (char *)(*(_QWORD *)(*((_QWORD *)v6 + 4) + 24)
                   + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      swift_beginAccess();
      v18 = *v17;
      v19 = v17[1];
      v169 = v17[2];
      v20 = v17[3];
      v167 = v17[4];
      v21 = v17[5];
      v22 = v17[6];
      v23 = v17[7];
      v212 = v17[8];
      v24 = v17[9];
      v163 = v17[11];
      v165 = v17[10];
      v161 = v17[12];
      v208 = v17[14];
      v210 = v17[13];
      v206 = v17[15];
      v157 = v17[17];
      v159 = v17[16];
      v153 = v17[19];
      v155 = v17[18];
      v149 = v17[21];
      v151 = v17[20];
      v145 = v17[23];
      v147 = v17[22];
      v141 = v17[25];
      v143 = v17[24];
      v137 = v17[27];
      v139 = v17[26];
      v25 = (char *)(*(_QWORD *)(v16 + 24) + OBJC_IVAR____TtC16UniversalControl23UniversalControlDisplay_properties);
      v129 = v17[28];
      v131 = v17[29];
      v133 = v17[30];
      v135 = v17[31];
      swift_beginAccess();
      v26 = *v25;
      v27 = v25[1];
      v28 = v25[2];
      v29 = v25[3];
      v30 = v25[4];
      v31 = v25[5];
      v32 = v25[6];
      v33 = v25[7];
      v34 = v25[8];
      v35 = v25[9];
      v36 = v25[10];
      v37 = v25[11];
      v38 = v25[12];
      v39 = v25[13];
      v40 = v25[14];
      v41 = v25[15];
      v127 = v25[16];
      v125 = v25[17];
      v123 = v25[18];
      v121 = v25[19];
      v119 = v25[20];
      v117 = v25[21];
      v115 = v25[22];
      v113 = v25[23];
      v111 = v25[24];
      v109 = v25[25];
      v107 = v25[26];
      v105 = v25[27];
      v103 = v25[28];
      v101 = v25[29];
      v99 = v25[30];
      v97 = v25[31];
      __s1 = v18;
      v233 = v19;
      v234 = v169;
      v235 = v20;
      v236 = v167;
      v237 = v21;
      v238 = v22;
      v239 = v23;
      v240 = v212;
      v241 = v24;
      v242 = v165;
      v243 = v163;
      v244 = v161;
      v245 = v210;
      v246 = v208;
      v247 = v206;
      __s2 = v26;
      v195 = v28;
      v197 = v27;
      v217 = v27;
      v218 = v28;
      v191 = v30;
      v193 = v29;
      v219 = v29;
      v220 = v30;
      v187 = v32;
      v189 = v31;
      v221 = v31;
      v222 = v32;
      v183 = v34;
      v185 = v33;
      v223 = v33;
      v224 = v34;
      v181 = v35;
      v225 = v35;
      v226 = v36;
      v177 = v38;
      v179 = v37;
      v227 = v37;
      v228 = v38;
      v173 = v40;
      v175 = v39;
      v229 = v39;
      v230 = v40;
      v171 = v41;
      v231 = v41;
      swift_retain();
      swift_retain();
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        break;
      __s1 = v26;
      v233 = v197;
      v234 = v195;
      v235 = v193;
      v236 = v191;
      v237 = v189;
      v238 = v187;
      v239 = v185;
      v240 = v183;
      v241 = v181;
      v242 = v36;
      v243 = v179;
      v244 = v177;
      v245 = v175;
      v246 = v173;
      v247 = v171;
      __s2 = v18;
      v217 = v19;
      v218 = v169;
      v219 = v20;
      v220 = v167;
      v221 = v21;
      v222 = v22;
      v223 = v23;
      v224 = v212;
      v225 = v24;
      v226 = v165;
      v227 = v163;
      v228 = v161;
      v229 = v210;
      v230 = v208;
      v231 = v206;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v159;
        v233 = v157;
        v234 = v155;
        v235 = v153;
        v236 = v151;
        v237 = v149;
        v238 = v147;
        v239 = v145;
        v240 = v143;
        v241 = v141;
        v242 = v139;
        v243 = v137;
        v244 = v129;
        v245 = v131;
        v246 = v133;
        v247 = v135;
        __s2 = v127;
        v217 = v125;
        v218 = v123;
        v219 = v121;
        v220 = v119;
        v221 = v117;
        v222 = v115;
        v223 = v113;
        v224 = v111;
        v225 = v109;
        v226 = v107;
        v227 = v105;
        v228 = v103;
        v229 = v101;
        v230 = v99;
        v231 = v97;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          break;
      }
      __s1 = v26;
      v233 = v197;
      v234 = v195;
      v235 = v193;
      v236 = v191;
      v237 = v189;
      v238 = v187;
      v239 = v185;
      v240 = v183;
      v241 = v181;
      v242 = v36;
      v243 = v179;
      v244 = v177;
      v245 = v175;
      v246 = v173;
      v247 = v171;
      __s2 = v18;
      v217 = v19;
      v218 = v169;
      v219 = v20;
      v220 = v167;
      v221 = v21;
      v222 = v22;
      v223 = v23;
      v224 = v212;
      v225 = v24;
      v226 = v165;
      v227 = v163;
      v228 = v161;
      v229 = v210;
      v230 = v208;
      v231 = v206;
      if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
        goto LABEL_23;
      __s1 = v18;
      v233 = v19;
      v234 = v169;
      v235 = v20;
      v236 = v167;
      v237 = v21;
      v238 = v22;
      v239 = v23;
      v240 = v212;
      v241 = v24;
      v242 = v165;
      v243 = v163;
      v244 = v161;
      v245 = v210;
      v246 = v208;
      v247 = v206;
      __s2 = v26;
      v217 = v197;
      v218 = v195;
      v219 = v193;
      v220 = v191;
      v221 = v189;
      v222 = v187;
      v223 = v185;
      v224 = v183;
      v225 = v181;
      v226 = v36;
      v227 = v179;
      v228 = v177;
      v229 = v175;
      v230 = v173;
      v231 = v171;
      if ((memcmp(&__s1, &__s2, 0x10uLL) & 0x80000000) == 0)
      {
        __s1 = v127;
        v233 = v125;
        v234 = v123;
        v235 = v121;
        v236 = v119;
        v237 = v117;
        v238 = v115;
        v239 = v113;
        v240 = v111;
        v241 = v109;
        v242 = v107;
        v243 = v105;
        v244 = v103;
        v245 = v101;
        v246 = v99;
        v247 = v97;
        __s2 = v159;
        v217 = v157;
        v218 = v155;
        v219 = v153;
        v220 = v151;
        v221 = v149;
        v222 = v147;
        v223 = v145;
        v224 = v143;
        v225 = v141;
        v226 = v139;
        v227 = v137;
        v228 = v129;
        v229 = v131;
        v230 = v133;
        v231 = v135;
        if (memcmp(&__s1, &__s2, 0x10uLL) < 0)
          goto LABEL_23;
      }
      v48 = sub_2497A1E9C();
      v49 = sub_2497A1E9C();
      if (v48 < v49)
        break;
      if (v49 < v48)
      {
LABEL_23:
        swift_release();
        swift_release();
      }
      else
      {
        sub_2497A1E9C();
        v51 = v50;
        sub_2497A1E9C();
        v53 = v52;
        swift_release();
        swift_release();
        if (v51 < v53)
          goto LABEL_16;
      }
      v42 = v201;
      v43 = v203;
      v4 = v203 + 40;
      v44 = v201 != v203 || v201 >= v4;
      v6 = v214;
LABEL_28:
      v12 = v199;
      if (v44)
      {
        v45 = *(_OWORD *)v43;
        v46 = *((_OWORD *)v43 + 1);
        *((_QWORD *)v42 + 4) = *((_QWORD *)v43 + 4);
        *(_OWORD *)v42 = v45;
        *((_OWORD *)v42 + 1) = v46;
      }
      v7 = v42 + 40;
      if (v4 >= v199 || (unint64_t)v6 >= v95)
        goto LABEL_7;
    }
    swift_release();
    swift_release();
LABEL_16:
    v42 = v201;
    v43 = v214;
    v6 = v214 + 40;
    v44 = v201 != v214 || v201 >= v6;
    v4 = v203;
    goto LABEL_28;
  }
LABEL_7:
  v6 = v7;
LABEL_13:
  sub_2497AC258(v4, (v12 - v4) / 40, v6);
  return 1;
}

uint64_t sub_2497C0DD4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  char v21;
  unint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  char v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v36 = v3;
  if (!v3)
    return swift_bridgeObjectRelease_n();
  v71 = 0;
  v4 = a1 + 64;
  while (v71 < *(_QWORD *)(a1 + 16))
  {
    v5 = *(unsigned __int8 *)(v4 - 7);
    v6 = *(unsigned __int8 *)(v4 - 8);
    v7 = *(unsigned __int8 *)(v4 - 6);
    v59 = *(unsigned __int8 *)(v4 - 5);
    v8 = *(unsigned __int8 *)(v4 - 4);
    v9 = *(unsigned __int8 *)(v4 - 3);
    v43 = *(unsigned __int8 *)(v4 - 2);
    v42 = *(unsigned __int8 *)(v4 - 1);
    v70 = *(unsigned __int8 *)(v4 - 15);
    v10 = *(unsigned __int8 *)(v4 - 16);
    v11 = *(unsigned __int8 *)(v4 - 14);
    v58 = *(unsigned __int8 *)(v4 - 13);
    v12 = *(unsigned __int8 *)(v4 - 12);
    v13 = *(unsigned __int8 *)(v4 - 11);
    v45 = *(unsigned __int8 *)(v4 - 10);
    v44 = *(unsigned __int8 *)(v4 - 9);
    v69 = *(unsigned __int8 *)(v4 - 23);
    v65 = *(unsigned __int8 *)(v4 - 24);
    v67 = *(unsigned __int8 *)(v4 - 22);
    v68 = *(unsigned __int8 *)(v4 - 21);
    v64 = *(unsigned __int8 *)(v4 - 20);
    v66 = *(unsigned __int8 *)(v4 - 19);
    v48 = *(unsigned __int8 *)(v4 - 18);
    v46 = *(unsigned __int8 *)(v4 - 17);
    v63 = *(unsigned __int8 *)(v4 - 31);
    v56 = *(unsigned __int8 *)(v4 - 32);
    v55 = *(unsigned __int8 *)(v4 - 30);
    v54 = *(unsigned __int8 *)(v4 - 29);
    v61 = *(unsigned __int8 *)(v4 - 28);
    v62 = *(unsigned __int8 *)(v4 - 27);
    v52 = *(unsigned __int8 *)(v4 - 26);
    v50 = *(unsigned __int8 *)(v4 - 25);
    v41 = swift_retain();
    if (!v41)
      return swift_bridgeObjectRelease_n();
    v39 = v9;
    v40 = v8;
    v14 = (v42 << 56) | (v43 << 48) | v6 | (v5 << 8) | (v7 << 16) | (v59 << 24) | (v8 << 32) | (v9 << 40);
    v38 = v10;
    v15 = (v46 << 56) | (v48 << 48) | v65 | (v69 << 8) | (v67 << 16) | (v68 << 24) | (v64 << 32) | (v66 << 40);
    v16 = (_QWORD *)*a3;
    v47 = (v50 << 56) | (v52 << 48) | v56 | (v63 << 8) | (v55 << 16) | (v54 << 24) | (v61 << 32) | (v62 << 40);
    v49 = v15;
    v51 = (v44 << 56) | (v45 << 48) | v10 | (v70 << 8) | (v11 << 16) | (v58 << 24) | (v12 << 32) | (v13 << 40);
    v53 = v14;
    v18 = sub_2497F2068(v47, v15, v51, v14);
    v19 = v16[2];
    v20 = (v17 & 1) == 0;
    if (__OFADD__(v19, v20))
      goto LABEL_20;
    v21 = v17;
    if (v16[3] < v19 + v20)
    {
      sub_2497812BC();
      v22 = sub_2497F2068(v47, v49, v51, v53);
      if ((v21 & 1) != (v23 & 1))
        goto LABEL_22;
      v18 = v22;
      v24 = v5;
      v25 = v12;
LABEL_10:
      v26 = v55;
      v27 = v54;
      v28 = v56;
      goto LABEL_11;
    }
    v24 = v5;
    v25 = v12;
    if ((a2 & 1) != 0)
      goto LABEL_10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257881270);
    sub_24983727C();
    v28 = v56;
    v27 = v54;
    v26 = v55;
    v25 = v12;
    v24 = v5;
LABEL_11:
    v29 = (_QWORD *)*a3;
    if ((v21 & 1) != 0)
    {
      v30 = v29[7];
      swift_release();
      *(_QWORD *)(v30 + 8 * v18) = v41;
    }
    else
    {
      v29[(v18 >> 6) + 8] |= 1 << v18;
      v31 = v29[6] + 32 * v18;
      *(_BYTE *)v31 = v28;
      *(_BYTE *)(v31 + 1) = v63;
      *(_BYTE *)(v31 + 2) = v26;
      *(_BYTE *)(v31 + 3) = v27;
      *(_BYTE *)(v31 + 4) = v61;
      *(_BYTE *)(v31 + 5) = v62;
      *(_WORD *)(v31 + 6) = HIWORD(v47);
      *(_BYTE *)(v31 + 8) = v65;
      *(_BYTE *)(v31 + 9) = v69;
      *(_BYTE *)(v31 + 10) = v67;
      *(_BYTE *)(v31 + 11) = v68;
      *(_BYTE *)(v31 + 12) = v64;
      *(_BYTE *)(v31 + 13) = v66;
      *(_WORD *)(v31 + 14) = HIWORD(v49);
      *(_BYTE *)(v31 + 16) = v38;
      *(_BYTE *)(v31 + 17) = v70;
      *(_BYTE *)(v31 + 18) = v11;
      *(_BYTE *)(v31 + 19) = v58;
      *(_BYTE *)(v31 + 20) = v25;
      *(_BYTE *)(v31 + 21) = v13;
      *(_WORD *)(v31 + 22) = HIWORD(v51);
      *(_BYTE *)(v31 + 24) = v6;
      *(_BYTE *)(v31 + 25) = v24;
      *(_BYTE *)(v31 + 26) = v7;
      *(_BYTE *)(v31 + 27) = v59;
      *(_BYTE *)(v31 + 28) = v40;
      *(_BYTE *)(v31 + 29) = v39;
      *(_WORD *)(v31 + 30) = HIWORD(v53);
      *(_QWORD *)(v29[7] + 8 * v18) = v41;
      v32 = v29[2];
      v33 = __OFADD__(v32, 1);
      v34 = v32 + 1;
      if (v33)
        goto LABEL_21;
      v29[2] = v34;
    }
    v4 += 40;
    a2 = 1;
    if (v36 == ++v71)
      return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_24983763C();
  __break(1u);
  return result;
}

uint64_t sub_2497C128C(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  char v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v33 = v3;
  if (!v3)
    return swift_bridgeObjectRelease_n();
  v4 = 0;
  v5 = a1 + 48;
  while (v4 < *(_QWORD *)(a1 + 16))
  {
    v6 = *(unsigned __int8 *)(v5 - 7);
    v7 = *(unsigned __int8 *)(v5 - 8);
    v8 = *(unsigned __int8 *)(v5 - 6);
    v9 = *(unsigned __int8 *)(v5 - 5);
    v10 = *(unsigned __int8 *)(v5 - 4);
    v11 = *(unsigned __int8 *)(v5 - 3);
    v12 = *(unsigned __int8 *)(v5 - 2);
    v13 = *(unsigned __int8 *)(v5 - 1);
    v47 = *(unsigned __int8 *)(v5 - 15);
    v42 = *(unsigned __int8 *)(v5 - 16);
    v46 = *(unsigned __int8 *)(v5 - 14);
    v45 = *(unsigned __int8 *)(v5 - 13);
    v44 = *(unsigned __int8 *)(v5 - 12);
    v43 = *(unsigned __int8 *)(v5 - 11);
    v40 = *(unsigned __int8 *)(v5 - 10);
    v39 = *(unsigned __int8 *)(v5 - 9);
    v14 = swift_retain();
    if (!v14)
      return swift_bridgeObjectRelease_n();
    v36 = v6;
    v37 = v4;
    v38 = v14;
    v35 = v8;
    v15 = v11;
    v16 = (v13 << 56) | (v12 << 48) | v7 | (v6 << 8) | (v8 << 16) | (v9 << 24) | (v10 << 32) | (v11 << 40);
    v17 = (v39 << 56) | (v40 << 48) | v42 | (v47 << 8) | (v46 << 16) | (v45 << 24) | (v44 << 32) | (v43 << 40);
    v18 = (_QWORD *)*a3;
    v20 = sub_2497F1F1C();
    v21 = v18[2];
    v22 = (v19 & 1) == 0;
    if (__OFADD__(v21, v22))
      goto LABEL_18;
    v23 = v19;
    if (v18[3] >= v21 + v22)
    {
      if ((a2 & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_257881A18);
        sub_24983727C();
      }
    }
    else
    {
      sub_2497817F8();
      v24 = sub_2497F1F1C();
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_20;
      v20 = v24;
    }
    v26 = (_QWORD *)*a3;
    if ((v23 & 1) != 0)
    {
      v27 = v26[7];
      swift_release();
      *(_QWORD *)(v27 + 8 * v20) = v38;
    }
    else
    {
      v26[(v20 >> 6) + 8] |= 1 << v20;
      v28 = (_BYTE *)(v26[6] + 16 * v20);
      *v28 = v42;
      v28[1] = v47;
      v28[2] = v46;
      v28[3] = v45;
      v28[4] = v44;
      v28[5] = v43;
      v28[6] = BYTE6(v17);
      v28[7] = HIBYTE(v17);
      v28[8] = v7;
      v28[9] = v36;
      v28[10] = v35;
      v28[11] = v9;
      v28[12] = v10;
      v28[13] = v15;
      v28[14] = BYTE6(v16);
      v28[15] = HIBYTE(v16);
      *(_QWORD *)(v26[7] + 8 * v20) = v38;
      v29 = v26[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_19;
      v26[2] = v31;
    }
    v4 = v37 + 1;
    v5 += 24;
    a2 = 1;
    if (v33 == v37 + 1)
      return swift_bridgeObjectRelease_n();
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_24983763C();
  __break(1u);
  return result;
}

uint64_t sub_2497C15A4(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v10;
  uint64_t __s1;

  v6 = *v3;
  sub_249837690();
  swift_bridgeObjectRetain();
  sub_249748BCC(a2, a3);
  sub_24983694C();
  sub_249748C10(a2, a3);
  v7 = sub_2498376E4() & ~(-1 << *(_BYTE *)(v6 + 32));
  if (((*(_QWORD *)(v6 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    __asm { BR              X8 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  __s1 = *v10;
  *v10 = 0x8000000000000000;
  sub_249748BCC(a2, a3);
  sub_2497C4384(a2, a3, v7, isUniquelyReferenced_nonNull_native);
  *v10 = __s1;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

void sub_2497C219C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,__int16 a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,__int128 a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _BYTE *v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  _BYTE *v88;
  char v89;
  _BYTE *v90;
  _QWORD *v91;
  _BYTE *v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  char v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;

  OUTLINED_FUNCTION_150();
  a60 = v62;
  a61 = v63;
  v65 = v64;
  v67 = v66;
  v92 = v68;
  a48 = *MEMORY[0x24BDAC8D0];
  v105 = v66 >> 16;
  v106 = v66 >> 8;
  v103 = HIDWORD(v66);
  v104 = v66 >> 24;
  v69 = v66 >> 40;
  v70 = HIWORD(v66);
  v71 = HIBYTE(v66);
  v72 = v64 >> 8;
  v73 = v64 >> 24;
  v94 = HIDWORD(v64);
  v95 = v64 >> 16;
  v74 = v64 >> 40;
  v93 = HIWORD(v64);
  v75 = HIBYTE(v64);
  v91 = v61;
  v76 = *v61;
  sub_249837690();
  OUTLINED_FUNCTION_63_3();
  v101 = v70;
  v102 = v69;
  a28 = v69;
  a29 = v70;
  v99 = v72;
  v100 = v71;
  a30 = v71;
  a31 = v65;
  a32 = v72;
  v77 = v95;
  a33 = v95;
  v97 = v74;
  v98 = v73;
  a34 = v73;
  v78 = v94;
  a35 = v94;
  a36 = v74;
  a37 = v93;
  v96 = v75;
  a38 = v75;
  OUTLINED_FUNCTION_184();
  sub_2498376E4();
  OUTLINED_FUNCTION_122();
  v81 = v79 & ~v80;
  OUTLINED_FUNCTION_155();
  if (((v83 >> v81) & 1) != 0)
  {
    v84 = ~v82;
    v85 = *(_QWORD *)(v76 + 48);
    OUTLINED_FUNCTION_74();
    while (1)
    {
      a39 = *(_OWORD *)(v85 + 16 * v81);
      OUTLINED_FUNCTION_63_3();
      a28 = v102;
      a29 = v101;
      a30 = v100;
      a31 = v65;
      a32 = v99;
      a33 = v95;
      a34 = v98;
      a35 = v94;
      a36 = v74;
      a37 = v93;
      a38 = v75;
      if (!OUTLINED_FUNCTION_26_5(&a39, &a25))
        break;
      v81 = (v81 + 1) & v84;
      OUTLINED_FUNCTION_152();
      if (((v86 >> v81) & 1) == 0)
      {
        v87 = v93;
        OUTLINED_FUNCTION_23_1();
        goto LABEL_7;
      }
    }
    OUTLINED_FUNCTION_23_1();
    v90 = (_BYTE *)(*(_QWORD *)(*v91 + 48) + 16 * v81);
    LOBYTE(v67) = *v90;
    LOBYTE(v106) = v90[1];
    LOBYTE(v105) = v90[2];
    LOBYTE(v104) = v90[3];
    LOBYTE(v103) = v90[4];
    v102 = v90[5];
    v101 = v90[6];
    v100 = v90[7];
    LOBYTE(v65) = v90[8];
    v99 = v90[9];
    v77 = v90[10];
    v98 = v90[11];
    v78 = v90[12];
    v87 = v90[14];
    v96 = v90[15];
    v97 = v90[13];
    v88 = v92;
  }
  else
  {
    v87 = v93;
LABEL_7:
    v88 = v92;
    v89 = OUTLINED_FUNCTION_145();
    *(_QWORD *)&a39 = *v91;
    *v91 = 0x8000000000000000;
    sub_2497C4F50(v67, v65, v81, v89);
    OUTLINED_FUNCTION_76_1(a39);
  }
  *v88 = v67;
  v88[1] = v106;
  v88[2] = v105;
  v88[3] = v104;
  v88[4] = v103;
  v88[5] = v102;
  v88[6] = v101;
  v88[7] = v100;
  v88[8] = v65;
  v88[9] = v99;
  v88[10] = v77;
  v88[11] = v98;
  v88[12] = v78;
  v88[13] = v97;
  v88[14] = v87;
  v88[15] = v96;
  OUTLINED_FUNCTION_75_1();
}

