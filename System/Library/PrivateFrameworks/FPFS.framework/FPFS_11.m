uint64_t sub_23B16D5FC@<X0>(uint64_t a1@<X6>, _QWORD *a2@<X7>, _DWORD *a3@<X8>)
{
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  void *v8;
  int v9;
  uint64_t result;
  _QWORD aBlock[8];

  aBlock[7] = a1;
  swift_retain();
  if (objc_sync_enter(a2))
LABEL_5:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  v5 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  swift_release();
  v6 = *(const void **)(v5 + 56);
  _Block_copy(v6);
  swift_release();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  a2 = (_QWORD *)swift_allocObject();
  a2[2] = sub_23B1A1FB8;
  a2[3] = v7;
  aBlock[4] = sub_23AD035D8;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA7E744;
  aBlock[3] = &block_descriptor_184;
  v8 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v9 = fpfs_materialize();
  _Block_release(v8);
  swift_release();
  *a3 = v9;
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v7 & 1) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_23B16D808@<X0>(_QWORD *a1@<X3>, _DWORD *a2@<X8>)
{
  uint64_t v4;
  const void *v5;
  uint64_t v6;
  void *v7;
  int v8;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  swift_retain();
  if (objc_sync_enter(a1))
LABEL_5:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  v4 = a1[20];
  swift_retain();
  if (objc_sync_exit(a1))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  swift_release();
  v5 = *(const void **)(v4 + 56);
  _Block_copy(v5);
  swift_release();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  a1 = (_QWORD *)swift_allocObject();
  a1[2] = sub_23B1A1FB8;
  a1[3] = v6;
  aBlock[4] = sub_23AD035D8;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA7E744;
  aBlock[3] = &block_descriptor_195_0;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v8 = fpfs_materialize();
  _Block_release(v7);
  swift_release();
  *a2 = v8;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_23B16D9F8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  void (*v17)(uint64_t *);
  uint64_t v19;
  uint64_t v20;
  int v21;

  v21 = a4;
  v20 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E3690);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v17 = *(void (**)(uint64_t *))(a2 + 16);
  sub_23AA8EFC8(a1, (uint64_t)v13, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v16 = *v13;
    swift_storeEnumTagMultiPayload();
    swift_retain();
  }
  else
  {
    sub_23AA724E8((uint64_t)v13, (uint64_t)v10, &qword_2542E72C0);
    swift_retain();
    sub_23B16DBCC((uint64_t)v10, v20, v21, (uint64_t *)(a5 + 16), v16);
    sub_23AA8A05C((uint64_t)v10, &qword_2542E72C0);
  }
  v17(v16);
  swift_release();
  return sub_23AA8A05C((uint64_t)v16, qword_2542E3690);
}

uint64_t sub_23B16DBCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for VFSItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(a1, (uint64_t)v12, &qword_2542E72C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_23AA8A05C((uint64_t)v12, &qword_2542E72C0);
    v23 = a2;
    v24 = a3;
    v25 = 0u;
    v26 = 0u;
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    v30 = 0u;
    v31 = 0;
    sub_23AAFC630((uint64_t)&v23);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v17 = swift_allocError();
    sub_23AA724E8((uint64_t)&v23, v18, (uint64_t *)&unk_2542E0950);
    *a5 = v17;
  }
  else
  {
    sub_23AA94050((uint64_t)v12, (uint64_t)v16, type metadata accessor for VFSItem);
    v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34C8) + 48);
    sub_23AA94050((uint64_t)v16, (uint64_t)a5, type metadata accessor for VFSItem);
    swift_beginAccess();
    v20 = *a4;
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E34B8);
    *(uint64_t *)((char *)a5 + *(int *)(v21 + 36)) = v20;
    *((_BYTE *)a5 + *(int *)(v21 + 40)) = 0;
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a5, 0, 1, v21);
    *(uint64_t *)((char *)a5 + v19) = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E3690);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23B16DE0C(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[9];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[5];
  _QWORD v30[4];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;

  v28 = a8;
  v27 = a7;
  v13 = sub_23B1961A8(*a2);
  swift_beginAccess();
  v14 = *(unsigned int *)(a6 + 8);
  v15 = *(_QWORD *)(a6 + 16);
  v16 = *(unsigned __int8 *)(a6 + 24);
  v17 = *(unsigned __int8 *)(a6 + 48);
  v18 = *(_QWORD *)(a6 + 56);
  v19 = *(_QWORD *)(a6 + 64);
  v20 = *(_QWORD *)(a6 + 88);
  v30[0] = *(_QWORD *)a6;
  v30[1] = v14;
  v30[2] = v15;
  v30[3] = v16;
  v31 = *(_OWORD *)(a6 + 32);
  v32 = v17;
  v33 = v18;
  v34 = v19;
  v35 = *(_OWORD *)(a6 + 72);
  v36 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23B157264(a4, a5, (uint64_t)v30, (uint64_t)v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = (void *)swift_retain();
  if (objc_sync_enter(v21))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a3);
  v22 = a3[20];
  swift_retain();
  if (objc_sync_exit(a3))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a3);
  swift_release();
  v23 = *(unsigned int *)(v22 + 16);
  v24 = swift_release();
  MEMORY[0x24BDAC7A8](v24);
  v26[2] = v27;
  v26[3] = v28;
  v26[4] = a1;
  v26[5] = v13;
  v26[6] = a3;
  v26[7] = v29;
  sub_23AC3A610(v29, v23, 2129920, 0, (uint64_t)sub_23B19F908, (uint64_t)v26);
  return sub_23AC03E50((uint64_t)v29);
}

uint64_t sub_23B16E01C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a1 + *(int *)(type metadata accessor for VFSItem(0) + 28);
  v7 = type metadata accessor for ItemMetadata();
  v8 = *(int *)(v7 + 80);
  if (*(_BYTE *)(v6 + v8) == 1 && *(_BYTE *)(a2 + v8) == 1)
  {
    MEMORY[0x24BDAC7A8](v7);
    result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19F948);
    if (v3)
      return result;
  }
  else
  {
    MEMORY[0x24BDAC7A8](v7);
    result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19F928);
    if (v3)
      return result;
  }
  *a3 = result;
  return result;
}

uint64_t sub_23B16E140@<X0>(uint64_t a1@<X3>, _DWORD *a2@<X8>)
{
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  int updated;
  uint64_t result;
  _QWORD v9[6];

  v3 = *(const void **)(*(_QWORD *)(a1 + 136) + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_23B1A1FB8;
  *(_QWORD *)(v5 + 24) = v4;
  v9[4] = sub_23AD035D8;
  v9[5] = v5;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = sub_23AA7E744;
  v9[3] = &block_descriptor_206_2;
  v6 = _Block_copy(v9);
  _Block_copy(v3);
  swift_retain();
  swift_release();
  updated = fpfs_update_dataless_fault();
  _Block_release(v6);
  swift_release();
  *a2 = updated;
  LOBYTE(updated) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((updated & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23B16E2A4@<X0>(uint64_t a1@<X4>, _DWORD *a2@<X8>)
{
  const void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  int v6;
  uint64_t result;
  _QWORD aBlock[6];

  v2 = *(const void **)(*(_QWORD *)(a1 + 136) + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_23B1A1FB8;
  *(_QWORD *)(v4 + 24) = v3;
  aBlock[4] = sub_23AD035D8;
  aBlock[5] = v4;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA7E744;
  aBlock[3] = &block_descriptor_217_1;
  v5 = _Block_copy(aBlock);
  _Block_copy(v2);
  swift_retain();
  swift_release();
  v6 = fpfs_fset_metadata();
  _Block_release(v5);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
  else
    *a2 = v6;
  return result;
}

uint64_t sub_23B16E414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int **a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unsigned __int8 a9, int **a10, _QWORD *a11, int **a12, uint64_t a13, uint64_t *a14, uint64_t a15)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  __int16 v80;
  void *v81;
  uint64_t v82;
  void (*v83)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, _DWORD, uint64_t, _QWORD *);
  void *v84;
  uint64_t v85;
  id v86;
  char v87;
  uint64_t *v88;
  uint64_t v89;
  int *v90;
  int v91;
  int v92;
  _QWORD *v93;
  void *v94;
  int v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  _QWORD *v103;
  char v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  BOOL v127;
  char v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  int *v133;
  _BYTE *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  int v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  int **v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  char v156;
  _QWORD v157[2];
  int v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  __int128 v173;
  __int128 v174;
  _QWORD v175[5];
  _OWORD v176[2];
  uint64_t v177;
  _QWORD v178[34];

  v149 = a2;
  v145 = a7;
  v153 = a6;
  v150 = a3;
  v151 = a5;
  v141 = a8;
  v142 = a1;
  v144 = a9;
  v178[31] = *MEMORY[0x24BDAC8D0];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v132 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23B1C5570();
  v136 = *(_QWORD *)(v19 - 8);
  v137 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v135 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v21 = MEMORY[0x24BDAC7A8](v154);
  v140 = (char *)&v132 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v139 = (uint64_t)&v132 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v147 = (uint64_t)&v132 - v25;
  v26 = type metadata accessor for VFSItem(0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v146 = (char *)&v132 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v132 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v132 - v32;
  v152 = type metadata accessor for ItemMetadata();
  v34 = MEMORY[0x24BDAC7A8](v152);
  v36 = (char *)&v132 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)&v132 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v132 - v40;
  if (!v150)
  {
    v58 = *(_QWORD *)(a4 + 16);
    v59 = *(unsigned int *)(a4 + 36);
    sub_23AA907B0(v151 + *(int *)(v154 + 40), (uint64_t)&v132 - v40, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA907B0((uint64_t)v41, (uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v60 = sub_23AA9BD7C(v58, v59, (uint64_t)v39);
    LODWORD(v59) = v61;
    v154 = v62 & 1;
    v155 = (_QWORD *)v63;
    sub_23AA937BC((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA907B0(v153, (uint64_t)v33, type metadata accessor for VFSItem);
    v64 = *((_QWORD *)v33 + 2);
    v65 = v33[24];
    v66 = *((_QWORD *)v33 + 4);
    v67 = *((_QWORD *)v33 + 5);
    swift_bridgeObjectRetain();
    sub_23AA937BC((uint64_t)v33, type metadata accessor for VFSItem);
    swift_bridgeObjectRelease_n();
    v162 = v145;
    v163 = v144;
    v164 = v60;
    v165 = v59;
    v166 = (uint64_t)v155;
    v167 = v154;
    v168 = 0;
    v169 = v64;
    v170 = v65;
    v171 = v66;
    v172 = v67;
    v173 = 0u;
    v174 = 0u;
    sub_23AAFC630((uint64_t)&v162);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    swift_allocError();
    sub_23AA724E8((uint64_t)&v162, v68, (uint64_t *)&unk_2542E0950);
    return swift_willThrow();
  }
  v138 = a4;
  v132 = v18;
  v150 = a12;
  v143 = a11;
  v133 = (int *)v26;
  v42 = *(int *)(v26 + 28);
  v43 = v153;
  sub_23AA907B0(v153 + v42, (uint64_t)&v132 - v40, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v44 = *a10;
  v45 = v151;
  v46 = v151 + *(int *)(v154 + 40);
  sub_23AA907B0((uint64_t)v41, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v134 = (_BYTE *)v46;
  v155 = v36;
  sub_23AB59E60(v44, v46);
  sub_23AA937BC((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v47 = v31;
  sub_23AA907B0(v43, (uint64_t)v31, type metadata accessor for VFSItem);
  v48 = (uint64_t)*v150;
  v150 = a10;
  v49 = *a10;
  v50 = v147;
  sub_23AA8EFC8(v45, v147, (uint64_t *)&unk_2542E1DF0);
  if ((v48 & 0x10000) != 0)
  {
    sub_23AA8A05C(v50, (uint64_t *)&unk_2542E1DF0);
    v57 = 0;
    v53 = (uint64_t)v155;
    v54 = v149;
    v51 = v152;
LABEL_13:
    v55 = (uint64_t)v47;
    goto LABEL_14;
  }
  v51 = v152;
  v52 = *(unsigned __int8 *)(v50 + *(int *)(v154 + 40) + *(int *)(v152 + 84));
  sub_23AA8A05C(v50, (uint64_t *)&unk_2542E1DF0);
  v53 = (uint64_t)v155;
  v54 = v149;
  if (!v52)
  {
    v57 = 0;
    goto LABEL_13;
  }
  v55 = (uint64_t)v47;
  if ((v49 & 8) != 0)
  {
    v56 = *(int *)(v51 + 80);
    if (v47[v133[7] + v56] == 1 && (v134[v56] & 1) != 0)
    {
      v57 = 0;
LABEL_14:
      v70 = v45;
      goto LABEL_15;
    }
  }
  v70 = v45;
  if (((unint64_t)v49 & 0x10010) != 0)
    v57 = v134[*(int *)(v51 + 84)];
  else
    v57 = *(_BYTE *)(v55 + v133[7] + *(int *)(v51 + 84));
LABEL_15:
  v147 = a13;
  sub_23AA937BC(v55, type metadata accessor for VFSItem);
  *(_BYTE *)(v53 + *(int *)(v51 + 84)) = v57;
  if ((*((_BYTE *)v150 + 5) & 1) != 0 && *v134 == 2)
    *(_BYTE *)(v53 + *(int *)(v51 + 80)) = 0;
  v71 = v143;
  v72 = v143[17];
  v73 = *(_QWORD *)(v54 + 8);
  v74 = v72 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  if (v73 == *(_QWORD *)(v74 + 32))
  {
    v75 = v70;
    swift_beginAccess();
    v76 = *a14;
    v77 = *((unsigned int *)a14 + 2);
    v78 = v71;
    v79 = a14[2];
    v80 = *((unsigned __int8 *)a14 + 24);
    v81 = (void *)swift_retain();
    if (objc_sync_enter(v81))
      goto LABEL_51;
    v82 = v78[20];
    swift_retain();
    if (objc_sync_exit(v78))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v78);
    swift_release();
    sub_23AAF8E48((uint64_t)&v162);
    sub_23AA724E8((uint64_t)&v162, (uint64_t)v178, &qword_2542E5050);
    v83 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, _DWORD, uint64_t, _QWORD *))(*(_QWORD *)v72 + 416);
    LOWORD(v129) = v80;
    v84 = v148;
    v85 = v149;
    v83(v175, v138, v142, v149, v147, v155, v76, v77, v79, (_DWORD)v129, v82, v178);
    if (v84)
    {
      swift_release();
      v86 = v84;
      LODWORD(v157[0]) = sub_23B1C5504();
      sub_23AB6CD48();
      v87 = sub_23B1C575C();

      if ((v87 & 1) != 0)
      {

        v88 = (uint64_t *)(a15 + v133[9]);
        v89 = *v88;
        v90 = (int *)(a15 + v133[14]);
        if (*((_BYTE *)v90 + 4))
          v91 = 0;
        else
          v91 = *v90;
        v92 = *((_DWORD *)v88 + 2);
        v93 = v143;
        v94 = (void *)swift_retain();
        v95 = objc_sync_enter(v94);
        v78 = v155;
        if (v95)
          sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v93);
        v96 = v93[20];
        swift_retain();
        v97 = objc_sync_exit(v93);
        v98 = v145;
        if (v97)
          sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v93);
        swift_release();
        v99 = *(unsigned int *)(v96 + 16);
        v100 = swift_release();
        MEMORY[0x24BDAC7A8](v100);
        v129 = v93;
        v130 = v98;
        LOBYTE(v131) = v144;
        v156 = 1;
        v157[0] = v89;
        v157[1] = 0;
        v158 = v91;
        v159 = v92;
        v160 = 0;
        v161 = 0;
        sub_23B0E3D48((uint64_t)v157, v99, 2097153, 0, (uint64_t)&v156, (uint64_t)sub_23B19F8F4, (uint64_t)(&v132 - 6));
        __break(1u);
LABEL_51:
        sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v78);
      }
      return sub_23AA937BC((uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    }
    sub_23AC03E50((uint64_t)v175);
    swift_release();
    v70 = v75;
    v54 = v85;
LABEL_34:
    v107 = v152;
    v108 = *(int *)(v152 + 108);
    if ((*((_BYTE *)v155 + v108) & 1) != 0)
    {
      v109 = v139;
      sub_23AA8EFC8(v70, v139, (uint64_t *)&unk_2542E1DF0);
      v110 = (uint64_t)v146;
    }
    else
    {
      v111 = *(_DWORD *)(v54 + 40);
      v109 = v139;
      sub_23AA8EFC8(v70, v139, (uint64_t *)&unk_2542E1DF0);
      v127 = v111 == 3;
      v107 = v152;
      v110 = (uint64_t)v146;
      if (!v127)
      {
        if (*(_BYTE *)(v109 + *(int *)(v154 + 40)))
        {
          sub_23AA8A05C(v109, (uint64_t *)&unk_2542E1DF0);
          *((_BYTE *)v155 + v108) = 0;
          goto LABEL_40;
        }
        v126 = *(_DWORD *)(v54 + 40);
        sub_23AA8A05C(v109, (uint64_t *)&unk_2542E1DF0);
        v127 = v126 == 2;
        v107 = v152;
        v128 = v127;
        *((_BYTE *)v155 + v108) = v128;
        if (!v127)
          goto LABEL_40;
LABEL_39:
        v112 = (uint64_t)v155;
        *(_QWORD *)((char *)v155 + *(int *)(v107 + 100)) = *(_QWORD *)(v54 + 56);
        *(_QWORD *)(v112 + *(int *)(v107 + 104)) = *(_QWORD *)(v54 + 168);
LABEL_40:
        sub_23AA907B0(v153, v110, type metadata accessor for VFSItem);
        v113 = *(_QWORD *)v70;
        v114 = *(_BYTE *)(v70 + 8);
        v116 = *(_QWORD *)(v70 + 16);
        v115 = *(_QWORD *)(v70 + 24);
        v117 = (uint64_t)v140;
        sub_23AA907B0((uint64_t)v155, (uint64_t)&v140[*(int *)(v154 + 40)], (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        *(_QWORD *)v117 = v113;
        *(_BYTE *)(v117 + 8) = v114;
        *(_QWORD *)(v117 + 16) = v116;
        *(_QWORD *)(v117 + 24) = v115;
        v118 = *(_QWORD *)(v138 + 48);
        v119 = *(_OWORD *)(v138 + 32);
        v176[0] = *(_OWORD *)(v138 + 16);
        v176[1] = v119;
        v177 = v118;
        v120 = sub_23B1C5A08();
        v121 = *(_QWORD *)(v120 - 8);
        v122 = (uint64_t)v132;
        (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v132, v147, v120);
        v123 = v120;
        v124 = (uint64_t)v146;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v121 + 56))(v122, 0, 1, v123);
        v125 = (uint64_t)*v150;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23B165070(v124, v117, (uint64_t)v176, v122, v125, v141);
        swift_bridgeObjectRelease();
        sub_23AA8A05C(v122, (uint64_t *)&unk_2542E6740);
        sub_23AA8A05C(v117, (uint64_t *)&unk_2542E1DF0);
        sub_23AA937BC(v124, type metadata accessor for VFSItem);
        return sub_23AA937BC((uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
      }
    }
    sub_23AA8A05C(v109, (uint64_t *)&unk_2542E1DF0);
    *((_BYTE *)v155 + v108) = 1;
    goto LABEL_39;
  }
  v101 = (void *)swift_retain();
  if (objc_sync_enter(v101))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v71);
  v102 = v71[20];
  swift_retain();
  if (objc_sync_exit(v71))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v71);
  swift_release();
  v103 = *(_QWORD **)(v102 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  v104 = sub_23B1AD014(v54, v103);
  swift_bridgeObjectRelease();
  if ((v104 & 1) != 0)
    goto LABEL_34;
  LODWORD(v162) = 2;
  sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
  sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
  v105 = v135;
  v106 = v137;
  sub_23B1C5864();
  sub_23B1C5558();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v105, v106);
  swift_willThrow();
  return sub_23AA937BC((uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
}

uint64_t sub_23B16EFF8(uint64_t (*a1)(uint64_t, _QWORD), uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  int v42;
  BOOL v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t (*v61)(uint64_t, _QWORD);
  uint64_t *v62;
  uint64_t (*v63)(uint64_t, _QWORD);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  int *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, _QWORD);
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  LODWORD(v91) = a7;
  v90 = (uint64_t *)a6;
  v93 = a2;
  v94 = a4;
  v92 = a1;
  v112 = *MEMORY[0x24BDAC8D0];
  v14 = *(unsigned int *)(a8 + 8);
  v70 = *(_QWORD *)a8;
  v71 = v14;
  v15 = *(_QWORD *)(a8 + 16);
  v82 = *(unsigned __int8 *)(a8 + 24);
  v79 = *(_QWORD *)(a8 + 32);
  v80 = v15;
  v16 = *(_QWORD *)(a8 + 40);
  v72 = *(unsigned __int8 *)(a8 + 48);
  v77 = *(_QWORD *)(a8 + 56);
  v78 = v16;
  v17 = *(_QWORD *)(a8 + 64);
  v75 = *(_QWORD *)(a8 + 72);
  v76 = v17;
  v18 = *(_QWORD *)(a8 + 80);
  v73 = *(_QWORD *)(a8 + 88);
  v74 = v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  MEMORY[0x24BDAC7A8](v19);
  v84 = (uint64_t)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)type metadata accessor for ItemMetadata();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v83 = (uint64_t)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v88 = (uint64_t *)((char *)&v64 - v24);
  v86 = type metadata accessor for VFSItem(0);
  MEMORY[0x24BDAC7A8](v86);
  v26 = (char *)&v64 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = 0;
  v81 = v19;
  v28 = *(int *)(v19 + 40);
  v87 = a3;
  v29 = a3 + v28;
  v85 = *(unsigned __int8 *)(v29 + v21[27]);
  LOWORD(v28) = a5 << 6;
  v30 = (uint64_t)v26;
  v31 = v28 & 0x1000;
  v89 = (int *)a9;
  sub_23B164364((uint64_t)v90, v91, a8, a9 & 0xFFFFFFFFFFFFFFEFLL, v31, v30);
  v68 = v31;
  v69 = v29;
  v67 = a8;
  v90 = (uint64_t *)(v27 + 16);
  v91 = v27;
  v32 = v87;
  v33 = v30 + *(int *)(v86 + 28);
  v34 = v89;
  v35 = (uint64_t *)v30;
  if ((sub_23B196840((char)v89, v87, v33) & 1) != 0)
  {
    v36 = (uint64_t *)v30;
    v86 = a11;
    v66 = a10;
    v37 = v69;
    sub_23AA907B0(v69, (uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v38 = v85;
    v95 = v85;
    v39 = v84;
    sub_23AA8EFC8(v32, v84, (uint64_t *)&unk_2542E1DF0);
    v65 = v33;
    if ((v38 & 1) != 0)
    {
      sub_23AA8A05C(v39, (uint64_t *)&unk_2542E1DF0);
      v40 = v90;
      v35 = v36;
    }
    else
    {
      v42 = *(unsigned __int8 *)(v39 + *(int *)(v81 + 40));
      sub_23AA8A05C(v39, (uint64_t *)&unk_2542E1DF0);
      v43 = v42 == 1;
      v33 = v65;
      v40 = v90;
      v35 = v36;
      if (v43)
      {
        v44 = *(_QWORD *)(v32 + 24);
        v98 = *(_QWORD *)(v32 + 16);
        v99 = v44;
        v100 = 47;
        v101 = 0xE100000000000000;
        v96 = 58;
        v97 = 0xE100000000000000;
        sub_23AAA420C();
        sub_23B1C6CF8();
        sub_23B1C6458();
        v33 = v65;
        swift_bridgeObjectRelease();
        fpfs_pkg_system_lookup();
        swift_release();
      }
    }
    v45 = v88;
    *((_BYTE *)v88 + v21[28]) = v95;
    v46 = v21[20];
    if (*(_BYTE *)(v33 + v46) == 1 && *(_BYTE *)(v37 + v46) == 1)
      *((_BYTE *)v45 + v21[22]) = *(_BYTE *)(v33 + v21[22]);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v94 + 136)
                                                                                         + 360))(v66, v45, v86, *(_QWORD *)(v32 + 16), *(_QWORD *)(v32 + 24), 0);
    sub_23AA937BC((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    swift_beginAccess();
    *v40 = v41;
    swift_release();
    if ((v34 & 0x10) == 0)
      goto LABEL_15;
    v47 = *(unsigned __int8 *)(v41 + 56);
    v33 = v65;
  }
  else
  {
    v37 = v69;
    if ((v34 & 0x10) == 0)
    {
      type metadata accessor for StagedContext();
      v41 = swift_allocObject();
LABEL_15:
      swift_retain();
      v92(v41, 0);
      swift_release();
      v48 = (uint64_t)v35;
LABEL_16:
      sub_23AA937BC(v48, type metadata accessor for VFSItem);
      return swift_release();
    }
    v41 = 0;
    v47 = v85;
  }
  v50 = v21[20];
  v51 = *(unsigned __int8 *)(v33 + v50);
  v52 = *(unsigned __int8 *)(v37 + v50);
  if (v51 == v52)
  {
    type metadata accessor for StagedContext();
    v54 = swift_allocObject();
    sub_23B16FA18(v54, 0, v91, v94, v92);
    swift_release();
    sub_23AA937BC((uint64_t)v35, type metadata accessor for VFSItem);
    return swift_release();
  }
  v87 = v82 & 1;
  v88 = v35;
  v53 = v47;
  sub_23AA907B0(v33, v83, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AB59E60(v34, v69);
  if (v53 != *(unsigned __int8 *)(v33 + v21[27]))
  {
    v100 = v70;
    v101 = v71;
    v102 = v80;
    v103 = v87;
    v104 = v79;
    v105 = v78;
    v106 = v72;
    v107 = v77;
    v108 = v76;
    v109 = v75;
    v110 = v74;
    v111 = v73;
    sub_23B195C08(&v100, v88, (uint64_t)v89, v68);
    if (v41)
    {
      v56 = v41;
    }
    else
    {
      type metadata accessor for StagedContext();
      v56 = swift_allocObject();
    }
    v62 = v88;
    v63 = v92;
    swift_retain();
    v63(v56, 0);
    swift_release();
    sub_23AA937BC(v83, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    v48 = (uint64_t)v62;
    goto LABEL_16;
  }
  if (v52)
  {
    if (v51)
    {
      v100 = v70;
      v101 = v71;
      v102 = v80;
      v103 = v87;
      v104 = v79;
      v105 = v78;
      v106 = v72;
      v107 = v77;
      v108 = v76;
      v109 = v75;
      v110 = v74;
      v111 = v73;
      sub_23B195C08(&v100, v88, (uint64_t)v89, v68);
    }
    v55 = v83;
    if ((*(_BYTE *)(v83 + 8) & 1) == 0)
    {
      v57 = *(_BYTE *)(v69 + 8);
      *(_DWORD *)(v83 + 4) = *(_DWORD *)(v69 + 4);
      *(_BYTE *)(v55 + 8) = v57;
    }
  }
  else
  {
    v55 = v83;
    if ((v51 & 1) == 0)
    {
      v100 = v70;
      v101 = v71;
      v102 = v80;
      v103 = v87;
      v104 = v79;
      v105 = v78;
      v106 = v72;
      v107 = v77;
      v108 = v76;
      v109 = v75;
      v110 = v74;
      v111 = v73;
      sub_23B195C08(&v100, v88, (uint64_t)v89, v68);
      v55 = v83;
    }
  }
  sub_23AA937BC(v55, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v58 = v90;
  swift_beginAccess();
  if (*v58)
  {
    v59 = *v58;
  }
  else
  {
    type metadata accessor for StagedContext();
    v59 = swift_allocObject();
  }
  v60 = v88;
  v61 = v92;
  swift_retain();
  v61(v59, 0);
  swift_release();
  sub_23AA937BC((uint64_t)v60, type metadata accessor for VFSItem);
  return swift_release();
}

uint64_t sub_23B16FA18(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;

  v10 = swift_beginAccess();
  if (*(_QWORD *)(a3 + 16))
  {
    v11 = *(_QWORD *)(a4 + 136);
    MEMORY[0x24BDAC7A8](v10);
    swift_retain_n();
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC27A04);
    *(_BYTE *)(v11 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(_QWORD *)(v11 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      MEMORY[0x23B85F548](1, ObjectType);
      swift_release_n();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_release_n();
    }
  }
  return a5(a1, a2 & 1);
}

uint64_t sub_23B16FB80(uint64_t a1, uint64_t (*a2)(void), _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for VFSStagedContext();
  v9 = swift_dynamicCastClass();
  if (!v9)
    return a2();
  v10 = v9;
  v11 = *(void **)(v3 + 216);
  v12 = sub_23B1C60A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v3;
  v13[3] = v10;
  v13[4] = a2;
  v13[5] = a3;
  swift_retain_n();
  v14 = v11;
  swift_retain();
  swift_retain();
  sub_23AA9086C(v14, (uint64_t)v8, (void (*)())a2, a3, (uint64_t)sub_23AC259CC, (uint64_t)v13);
  swift_release();

  swift_release();
  return sub_23AA8A05C((uint64_t)v8, &qword_2542DD460);
}

uint64_t sub_23B16FCDC(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v6 = a1[17];
  v7 = (void *)swift_retain();
  if (objc_sync_enter(v7))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  v8 = a1[20];
  swift_retain();
  if (objc_sync_exit(a1))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 464))(a2, v8);
  swift_release();
  return a3(0);
}

uint64_t sub_23B16FDF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[6];

  v21 = a4;
  v22 = a7;
  v23 = a1;
  v13 = sub_23B1C5A08();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  memset(v24, 0, sizeof(v24));
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v13);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v21;
  *(_QWORD *)(v17 + 24) = a5;
  *(_QWORD *)(v17 + 32) = a2;
  *(_BYTE *)(v17 + 40) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  v18 = (_QWORD *)(v17 + ((v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v18 = v22;
  v18[1] = a8;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23AA7BAC4(a2, a3, (uint64_t)v24, 0, 0, (uint64_t)sub_23B1A1A40, v17);
  return swift_release();
}

void sub_23B16FF4C(uint64_t a1, void (*a2)(void *), uint64_t a3, void *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void (*v23)(void *);
  id v24;
  uint64_t v25;
  void (*v26)(void *);
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  void *v36;
  int v37;
  uint64_t v38;
  void (*v39)(void *);
  void *v40;
  char v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v35 = a8;
  v33[1] = a7;
  v33[0] = a6;
  v37 = a5;
  v36 = a4;
  v38 = a3;
  v39 = a2;
  v9 = sub_23B1C5570();
  v34 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (void **)((char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for VFSItem(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(a1, (uint64_t)v14, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v40 = *v14;
    v22 = v40;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    swift_willThrowTypedImpl();
    v23 = v39;
    v24 = v22;
    v23(v22);

  }
  else
  {
    sub_23AA724E8((uint64_t)v14, (uint64_t)v17, &qword_2542E72C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      sub_23AA94050((uint64_t)v17, (uint64_t)v21, type metadata accessor for VFSItem);
      v26 = v39;
      if (v21[*(int *)(v18 + 28)] == 1)
      {
        LODWORD(v40) = 21;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        sub_23B1C5864();
        v27 = (void *)sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v9);
        v26(v27);

      }
      else
      {
        v28 = sub_23B1C59E4();
        v30 = v29;
        MEMORY[0x24BDAC7A8](v28);
        v31 = v38;
        v33[-4] = v26;
        v33[-3] = v31;
        v32 = v35;
        LOBYTE(v40) = 1;
        swift_bridgeObjectRetain();
        sub_23B0E1010(4294967294, v28, v30, 0x200000, 0, 2u, (uint64_t)&v40, (uint64_t)sub_23B1A1AA0, (uint64_t)&v33[-6]);
        if ((v40 & 1) != 0)
        {
          __break(1u);
          return;
        }
        swift_bridgeObjectRelease();
        v26(0);
      }
      sub_23AA937BC((uint64_t)v21, type metadata accessor for VFSItem);
      return;
    }
    sub_23AA8A05C((uint64_t)v17, &qword_2542E72C0);
    v40 = v36;
    v41 = v37;
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    v45 = 0u;
    v46 = 0u;
    v47 = 0u;
    v48 = 0;
    sub_23AAFC630((uint64_t)&v40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v22 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v40, v25, (uint64_t *)&unk_2542E0950);
    v39(v22);
  }

}

void sub_23B170388(int a1, void (*a2)(id))
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  char v8;
  int v9;
  char *v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v8 = 0;
  v9 = a1;
  v10 = &v8;
  v4 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1A1ABC);
  if (!v2)
  {
    if (v8 == 1)
    {
      sub_23B1C63E0();
      v5 = objc_allocWithZone(MEMORY[0x24BDD1540]);
      v6 = (void *)sub_23B1C63BC();
      swift_bridgeObjectRelease();
      v7 = objc_msgSend(v5, sel_initWithDomain_code_userInfo_, v6, 17, 0);

      a2(v7);
    }
    else
    {
      MEMORY[0x24BDAC7A8](v4);
      sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1A1AF0);
    }
  }
}

uint64_t sub_23B1704E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[6];

  v18 = a4;
  v11 = sub_23B1C5A08();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  memset(v19, 0, sizeof(v19));
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v11);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 24) = a5;
  *(_QWORD *)(v15 + 32) = a2;
  *(_BYTE *)(v15 + 40) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  *(_QWORD *)(v15 + ((v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  swift_retain();
  swift_retain();
  sub_23AA7BAC4(a2, a3, (uint64_t)v19, 0, 0, (uint64_t)sub_23B1A14F0, v15);
  return swift_release();
}

void sub_23B17062C(uint64_t a1, void (*a2)(void *), uint64_t a3, void *a4, int a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  void (*v26)(void *);
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  char *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(void *);
  uint64_t v66;
  void *v67;
  char v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;

  v56 = a7;
  v60 = a6;
  LODWORD(v63) = a5;
  v62 = a4;
  v65 = a2;
  v66 = a3;
  v59 = sub_23B1C5570();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v57 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_23B1C5A08();
  v54 = *(_QWORD *)(v55 - 8);
  v9 = *(_QWORD *)(v54 + 64);
  MEMORY[0x24BDAC7A8](v55);
  v53 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v10);
  v61 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (void **)((char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for VFSItem(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v64 = (uint64_t)&v52 - v23;
  sub_23AA8EFC8(a1, (uint64_t)v14, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v67 = *v14;
    v24 = v67;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    swift_willThrowTypedImpl();
    v25 = v24;
    v65(v24);

    return;
  }
  v26 = v65;
  sub_23AA724E8((uint64_t)v14, (uint64_t)v17, &qword_2542E72C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_23AA8A05C((uint64_t)v17, &qword_2542E72C0);
    v67 = v62;
    v68 = v63;
    v69 = 0u;
    v70 = 0u;
    v71 = 0u;
    v72 = 0u;
    v73 = 0u;
    v74 = 0u;
    v75 = 0;
    sub_23AAFC630((uint64_t)&v67);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v27 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v67, v28, (uint64_t *)&unk_2542E0950);
    v26(v27);

    return;
  }
  v29 = (uint64_t)v17;
  v30 = v64;
  sub_23AA94050(v29, v64, type metadata accessor for VFSItem);
  v31 = (_BYTE *)(v30 + *(int *)(v18 + 28));
  if (*v31 == 1)
  {
    LODWORD(v67) = 21;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    v32 = v57;
    v33 = v59;
    sub_23B1C5864();
    v34 = (id)sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v32, v33);
  }
  else
  {
    if (v31[*(int *)(type metadata accessor for ItemMetadata() + 92)] == 1)
    {
      v35 = v54;
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
      v37 = v61;
      v38 = v60;
      v39 = v55;
      v36(v61, v60, v55);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v39);
      v63 = *(_QWORD *)v30;
      LODWORD(v62) = *(unsigned __int8 *)(v30 + 8);
      v40 = v53;
      v36((uint64_t)v53, v38, v39);
      sub_23AA907B0(v30, (uint64_t)v22, type metadata accessor for VFSItem);
      v41 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      v42 = (v9 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
      v43 = (*(unsigned __int8 *)(v19 + 80) + v42 + 8) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      v44 = swift_allocObject();
      v45 = v66;
      *(_QWORD *)(v44 + 16) = v65;
      *(_QWORD *)(v44 + 24) = v45;
      (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v44 + v41, v40, v39);
      v46 = v56;
      *(_QWORD *)(v44 + v42) = v56;
      sub_23AA94050((uint64_t)v22, v44 + v43, type metadata accessor for VFSItem);
      swift_retain();
      swift_retain();
      v47 = sub_23B19695C(v61);
      if (v47 >> 62)
        v48 = sub_23B1C7088();
      else
        v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
      v49 = v48 == 0;
      swift_retain();
      sub_23B1950BC(v63, (int)v62, v47, v49, v46, (void (*)(_QWORD))sub_23B1A1794, v44);
      swift_bridgeObjectRelease();
      swift_release_n();
      sub_23AA8A05C(v61, (uint64_t *)&unk_2542E6740);
      v50 = v64;
      goto LABEL_13;
    }
    v51 = (void *)sub_23B1C5954();
    v34 = (id)FPFileNotPausedError();

  }
  v26(v34);

  v50 = v30;
LABEL_13:
  sub_23AA937BC(v50, type metadata accessor for VFSItem);
}

uint64_t sub_23B170C54(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[5];
  char v14;

  if (a1)
    return a2();
  v10 = sub_23B1C59E4();
  MEMORY[0x24BDAC7A8](v10);
  v13[2] = a5;
  v13[3] = a6;
  v14 = 1;
  result = sub_23B0E1010(4294967294, v11, v12, 0x200000, 0, 2u, (uint64_t)&v14, (uint64_t)sub_23B1A1810, (uint64_t)v13);
  if ((v14 & 1) == 0)
    return a2();
  __break(1u);
  return result;
}

void sub_23B170D58(uint64_t a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  const void *v5;
  uint64_t v6;

  swift_retain();
  if (objc_sync_enter(a2))
    goto LABEL_6;
  swift_retain();
  if (objc_sync_exit(a2))
    goto LABEL_7;
  swift_release();
  swift_release();
  v3 = (void *)swift_retain();
  if (objc_sync_enter(v3))
LABEL_6:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  v4 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2))
LABEL_7:
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  swift_release();
  v5 = *(const void **)(v4 + 56);
  _Block_copy(v5);
  v6 = swift_release();
  MEMORY[0x24BDAC7A8](v6);
  sub_23B1AA030();
  _Block_release(v5);
}

uint64_t sub_23B170EE0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  _BYTE *v14;
  uint64_t v15;
  _DWORD v16[6];
  uint64_t v17;
  _BYTE v18[248];
  _BYTE v19[248];

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a1 + 240) = 2048;
  sub_23B1A1844(a1 + 40);
  v16[4] = a4;
  v17 = a1;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADAB36C);
  if (!v6)
  {
    v14 = (_BYTE *)(a6 + *(int *)(type metadata accessor for VFSItem(0) + 28));
    v15 = sub_23B1C5A08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v12, 1, 1, v15);
    sub_23AAF8E48((uint64_t)v18);
    sub_23AA724E8((uint64_t)v18, (uint64_t)v19, &qword_2542E5050);
    sub_23B177C20(a4, v14, 0, 0, 4, (uint64_t)v12, (uint64_t)v19);
    return sub_23AA8A05C((uint64_t)v12, (uint64_t *)&unk_2542E6740);
  }
  return result;
}

uint64_t sub_23B171028(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  _OWORD v19[6];

  v18[0] = a7;
  v18[1] = a1;
  v12 = sub_23B1C5A08();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  memset(v19, 0, sizeof(v19));
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v12);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a4;
  *(_QWORD *)(v16 + 24) = a5;
  *(_QWORD *)(v16 + 32) = a2;
  *(_BYTE *)(v16 + 40) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v16 + v15, (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  *(_QWORD *)(v16 + ((v14 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v18[0];
  swift_retain();
  sub_23AA7BAC4(a2, a3, (uint64_t)v19, 0, 0, (uint64_t)sub_23B1A18D4, v16);
  return swift_release();
}

void sub_23B17116C(uint64_t a1, void (*a2)(void *), uint64_t a3, void *a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  int v36;
  uint64_t v37;
  void (*v38)(void *);
  void *v39;
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v32 = a7;
  v33 = a6;
  v36 = a5;
  v35 = a4;
  v37 = a3;
  v38 = a2;
  v8 = sub_23B1C5570();
  v34 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (void **)((char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for VFSItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(a1, (uint64_t)v13, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = *v13;
    v21 = v39;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    swift_willThrowTypedImpl();
    v22 = v21;
    v38(v21);

LABEL_5:
    return;
  }
  sub_23AA724E8((uint64_t)v13, (uint64_t)v16, &qword_2542E72C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_23AA8A05C((uint64_t)v16, &qword_2542E72C0);
    v39 = v35;
    v40 = v36;
    v41 = 0u;
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    v45 = 0u;
    v46 = 0u;
    v47 = 0;
    sub_23AAFC630((uint64_t)&v39);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v21 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v39, v23, (uint64_t *)&unk_2542E0950);
    v38(v21);
    goto LABEL_5;
  }
  sub_23AA94050((uint64_t)v16, (uint64_t)v20, type metadata accessor for VFSItem);
  v24 = &v20[*(int *)(v17 + 28)];
  if (*v24 != 1)
  {
    if (v24[*(int *)(type metadata accessor for ItemMetadata() + 92)] == 1)
    {
      v26 = sub_23B1C59E4();
      v28 = v27;
      if (v32 == 1)
      {
        LODWORD(v39) = 0;
        BYTE4(v39) = 1;
        swift_bridgeObjectRetain();
        sub_23B0E2918(4294967294, v26, v28, 0x200000, 0, 2, (uint64_t)&v39, (uint64_t)sub_23B17161C, 0);
        if ((BYTE4(v39) & 1) != 0)
        {
          __break(1u);
          goto LABEL_12;
        }
      }
      else
      {
        LODWORD(v39) = 0;
        BYTE4(v39) = 1;
        swift_bridgeObjectRetain();
        sub_23B0E2918(4294967294, v26, v28, 0x200000, 0, 2, (uint64_t)&v39, (uint64_t)sub_23B17165C, 0);
        if ((BYTE4(v39) & 1) != 0)
        {
          __break(1u);
          return;
        }
      }
      swift_bridgeObjectRelease();
      v38(0);
      goto LABEL_15;
    }
LABEL_12:
    v29 = (void *)sub_23B1C5954();
    v30 = (id)FPFileNotPausedError();

    v38(v30);
    goto LABEL_15;
  }
  LODWORD(v39) = 21;
  sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
  sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
  sub_23B1C5864();
  v25 = (void *)sub_23B1C5558();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v8);
  v38(v25);

LABEL_15:
  sub_23AA937BC((uint64_t)v20, type metadata accessor for VFSItem);
}

uint64_t sub_23B17161C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1A194C);
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_23B17165C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1A197C);
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_23B17169C(uint64_t a1, unint64_t a2, int a3, _QWORD *a4, void (*a5)(uint64_t *), uint64_t a6, uint64_t a7, int a8)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  id v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  void (*v91)(uint64_t *);
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v71 = a8;
  v91 = a5;
  v92 = a6;
  v93 = a2;
  v81 = *(_QWORD *)a7;
  v83 = *(unsigned int *)(a7 + 8);
  v80 = *(_QWORD *)(a7 + 16);
  v72 = *(unsigned __int8 *)(a7 + 24);
  v87 = a3;
  v11 = a3;
  v79 = *(_QWORD *)(a7 + 32);
  v78 = *(_QWORD *)(a7 + 40);
  v82 = (id)*(unsigned __int8 *)(a7 + 48);
  v77 = *(_QWORD *)(a7 + 56);
  v76 = *(_QWORD *)(a7 + 64);
  v75 = *(_QWORD *)(a7 + 72);
  v74 = *(_QWORD *)(a7 + 80);
  v73 = *(_QWORD *)(a7 + 88);
  v90 = type metadata accessor for VFSItem(0);
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v68 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v69 = *(_QWORD *)(v13 - 8);
  v14 = *(_QWORD *)(v69 + 64);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v70 = (uint64_t)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v88 = (uint64_t)&v68 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_23B1C5A08();
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v84 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E27B0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (void **)((char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v11 == 2 && v93 == 1)
  {
    v27 = (void *)swift_retain();
    if (objc_sync_enter(v27))
      goto LABEL_19;
    v28 = a4[20];
    swift_retain();
    if (objc_sync_exit(a4))
      goto LABEL_20;
    swift_release();
    *(_BYTE *)(v28 + 49) = 1;
    swift_release();
  }
  sub_23AA8EFC8(a1, (uint64_t)v26, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = *v26;
    *v23 = (uint64_t)*v26;
    swift_storeEnumTagMultiPayload();
    v30 = v29;
    v91(v23);

    return sub_23AA8A05C((uint64_t)v23, (uint64_t *)&unk_2569E27B0);
  }
  if ((*(unsigned int (**)(void **, uint64_t, unint64_t))(v89 + 48))(v26, 1, v90) == 1)
  {
    v94 = v93;
    v95 = v87;
    v96 = v81;
    v97 = v83;
    v98 = v80;
    v99 = v72 & 1;
    v100 = v79;
    v101 = v78;
    v102 = v82;
    v103 = v77;
    v104 = v76;
    v105 = v75;
    v106 = v74;
    v107 = v73;
    v108 = 0;
    sub_23AAFC630((uint64_t)&v94);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v31 = swift_allocError();
    sub_23AA724E8((uint64_t)&v94, v32, (uint64_t *)&unk_2542E0950);
    *v23 = v31;
    swift_storeEnumTagMultiPayload();
    sub_23B19DD20(a7);
    v91(v23);
    return sub_23AA8A05C((uint64_t)v23, (uint64_t *)&unk_2569E27B0);
  }
  v34 = swift_allocBox();
  v36 = v35;
  sub_23AA94050((uint64_t)v26, v35, type metadata accessor for VFSItem);
  v37 = (void *)swift_retain();
  if (objc_sync_enter(v37))
LABEL_19:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a4);
  swift_retain();
  v38 = objc_sync_exit(a4);
  v39 = v84;
  if (v38)
LABEL_20:
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a4);
  v83 = v34;
  swift_release();
  sub_23AC380C8(v19);
  swift_release();
  v40 = v85;
  v41 = v86;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v19, 1, v86) == 1)
  {
    __break(1u);
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v39, v19, v41);
  v42 = (void *)objc_opt_self();
  v43 = (uint64_t)v39;
  v44 = (void *)sub_23B1C5954();
  v45 = 1;
  v82 = objc_msgSend(v42, sel_writingIntentWithURL_options_, v44, 1);

  v47 = MEMORY[0x24BDAC7A8](v46);
  *((_BYTE *)&v68 - 16) = 0;
  *(&v68 - 1) = v43;
  MEMORY[0x24BDAC7A8](v47);
  *(&v68 - 4) = (uint64_t)a4;
  *(&v68 - 3) = (uint64_t)sub_23B19DDC4;
  *(&v68 - 2) = v48;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74E0);
  sub_23B1C59B4();
  v49 = v94;
  v50 = v68;
  sub_23AA907B0(v36, v68, type metadata accessor for VFSItem);
  v51 = v90;
  LODWORD(v44) = *(unsigned __int8 *)(v50 + *(int *)(v90 + 28));
  sub_23AA937BC(v50, type metadata accessor for VFSItem);
  v52 = a4;
  if (!(_DWORD)v44)
  {
    sub_23AA907B0(v36, v88, type metadata accessor for VFSItem);
    v45 = 0;
  }
  LODWORD(v81) = v49 & 1;
  v53 = v88;
  (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v89 + 56))(v88, v45, 1, v51);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
  v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = xmmword_23B1CE680;
  v55 = v82;
  *(_QWORD *)(v54 + 32) = v82;
  v94 = v54;
  sub_23B1C671C();
  v90 = v94;
  v56 = v53;
  v57 = v70;
  sub_23AA8EFC8(v56, v70, &qword_2542E72C0);
  v58 = (*(unsigned __int8 *)(v69 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  v59 = swift_allocObject();
  v60 = *(_OWORD *)(a7 + 48);
  *(_OWORD *)(v59 + 104) = *(_OWORD *)(a7 + 32);
  *(_OWORD *)(v59 + 120) = v60;
  v61 = *(_OWORD *)(a7 + 80);
  *(_OWORD *)(v59 + 136) = *(_OWORD *)(a7 + 64);
  *(_OWORD *)(v59 + 152) = v61;
  v62 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(v59 + 72) = *(_OWORD *)a7;
  v63 = v92;
  *(_QWORD *)(v59 + 16) = v91;
  *(_QWORD *)(v59 + 24) = v63;
  *(_QWORD *)(v59 + 32) = v83;
  *(_QWORD *)(v59 + 40) = v52;
  v64 = v93;
  *(_QWORD *)(v59 + 48) = v55;
  *(_QWORD *)(v59 + 56) = v64;
  v65 = v87;
  *(_BYTE *)(v59 + 64) = v87;
  *(_OWORD *)(v59 + 88) = v62;
  sub_23AA724E8(v57, v59 + v58, &qword_2542E72C0);
  *(_BYTE *)(v59 + v58 + v14) = v71 & 1;
  v66 = v55;
  swift_retain();
  sub_23B19DD20(a7);
  v67 = v66;
  swift_retain();
  swift_retain();
  sub_23B159770(v64, v65, v90, v81, (void (*)(_QWORD, _QWORD))sub_23B19E0A4, v59);

  swift_bridgeObjectRelease();
  swift_release();
  sub_23AA8A05C(v88, &qword_2542E72C0);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v86);
  return swift_release();
}

uint64_t sub_23B171F60(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5, _QWORD *a6, void *a7, uint64_t a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  char v45;
  void (*v46)(uint64_t *);
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  _QWORD *v57;
  _QWORD *v58;
  void *v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  char *v94;
  char v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  id v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t);
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  char *v144;
  char *v145;
  uint64_t *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  _QWORD *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  _QWORD *v169;
  uint64_t v170;
  _QWORD *v171;
  id v172;
  uint64_t v173;
  void (*v174)(uint64_t *);
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  char v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;

  v173 = a8;
  v172 = a7;
  v171 = a6;
  v177 = a5;
  v176 = a4;
  v174 = a3;
  v178 = a2;
  v162 = *(_QWORD *)a10;
  v164 = *(unsigned int *)(a10 + 8);
  v161 = *(_QWORD *)(a10 + 16);
  v153 = *(unsigned __int8 *)(a10 + 24);
  v160 = *(_QWORD *)(a10 + 32);
  v159 = *(_QWORD *)(a10 + 40);
  v163 = *(unsigned __int8 *)(a10 + 48);
  v158 = *(_QWORD *)(a10 + 56);
  v157 = *(_QWORD *)(a10 + 64);
  v156 = *(_QWORD *)(a10 + 72);
  v155 = *(_QWORD *)(a10 + 80);
  v154 = *(_QWORD *)(a10 + 88);
  v175 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E27B0);
  MEMORY[0x24BDAC7A8](v175);
  v13 = (uint64_t *)((char *)&v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v165 = (uint64_t)&v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v167 = (char *)&v141 - v17;
  v170 = sub_23B1C5A08();
  v169 = *(_QWORD **)(v170 - 8);
  v18 = MEMORY[0x24BDAC7A8](v170);
  v152 = (char *)&v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v168 = (char *)&v141 - v20;
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v21 = *(_QWORD *)(v166 - 8);
  v22 = MEMORY[0x24BDAC7A8](v166);
  v24 = (char *)&v141 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v141 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v141 - v28;
  v30 = type metadata accessor for VFSItem(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v141 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v141 - v35;
  v37 = swift_projectBox();
  if (v178)
  {
    v38 = v178;
    *v13 = (uint64_t)v178;
    swift_storeEnumTagMultiPayload();
    v39 = v38;
    v174(v13);
    v40 = (uint64_t)v13;
    return sub_23AA8A05C(v40, (uint64_t *)&unk_2569E27B0);
  }
  v150 = v21;
  v147 = v29;
  v145 = v27;
  v146 = (uint64_t *)a10;
  v151 = v34;
  v148 = v31;
  v177 = v30;
  v144 = v24;
  v149 = v36;
  v178 = v13;
  v41 = v37;
  swift_beginAccess();
  v43 = *(_QWORD *)(v41 + 32);
  v42 = *(_QWORD *)(v41 + 40);
  swift_bridgeObjectRetain();
  sub_23AA92930(0x6574656C6564, 0xE600000000000000, v43, v42);
  v142 = v41;
  swift_bridgeObjectRelease();
  v51 = objc_msgSend(v172, sel_URL);
  v52 = v168;
  sub_23B1C59CC();

  v53 = sub_23B1C59E4();
  v55 = v54;
  v56 = (void (*)(char *, uint64_t))v169[1];
  v56(v52, v170);
  v57 = v171;
  v58 = (_QWORD *)((char *)v171 + qword_2542EDF28);
  swift_beginAccess();
  if (*v58 == -1)
  {
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  ++*v58;
  v59 = (void *)swift_retain();
  v60 = objc_sync_enter(v59);
  v61 = v166;
  v62 = v150;
  if (v60)
    goto LABEL_46;
  v143 = a9;
  v63 = (_QWORD *)v57[20];
  swift_retain();
  if (objc_sync_exit(v57))
    goto LABEL_47;
  swift_release();
  v64 = type metadata accessor for VFSFileTree(0);
  v65 = MEMORY[0x23B8615C4](v57 + 34);
  v66 = MEMORY[0x24BDAC7A8](v65);
  *(&v141 - 6) = v64;
  *(&v141 - 5) = (uint64_t)v63;
  v169 = v63;
  v168 = (char *)v66;
  *(&v141 - 4) = v66;
  *(&v141 - 3) = v67;
  LOBYTE(v139) = 2;
  v140 = 0;
  v68 = (uint64_t)v167;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v167, 1, 1, v61);
  swift_bridgeObjectRetain();
  v69 = v53;
  v70 = v68;
  sub_23B0E2EA0(4294967294, v69, v55, 2129920, 0, 0, v68, (uint64_t)sub_23ACFC288, (uint64_t)(&v141 - 8));
  v71 = v62;
  v72 = v56;
  v73 = v61;
  v74 = v165;
  sub_23AA8EFC8(v70, v165, qword_2542E5250);
  v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v74, 1, v73);
  v76 = v177;
  v57 = v151;
  v77 = v143;
  if (v75 == 1)
    goto LABEL_45;
  v78 = v70;
  v79 = (uint64_t)v147;
  sub_23AA724E8(v74, (uint64_t)v147, &qword_2542E72C0);
  sub_23AA8A05C(v78, qword_2542E5250);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  v80 = v72;
  v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48);
  if (v81(v79, 1, v76) == 1)
  {
    sub_23AA8A05C(v79, &qword_2542E72C0);
    v82 = v173;
    v179 = v173;
    v180 = v77;
    v181 = 0u;
    v182 = 0u;
    v183 = 0u;
    v184 = 0u;
    v185 = 0u;
    v186 = 0u;
    v187 = 0;
    sub_23AAFC630((uint64_t)&v179);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v83 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v179, v84, (uint64_t *)&unk_2542E0950);
    swift_willThrow();
    v85 = v178;
LABEL_4:
    v44 = v83;
    LODWORD(v179) = sub_23B1C5564();
    sub_23AB6CD48();
    v45 = sub_23B1C575C();

    v46 = v174;
    if ((v45 & 1) != 0)
    {
      v179 = v82;
      v180 = v77;
      *(_QWORD *)&v181 = v83;
      sub_23B19DCC8((uint64_t)&v179);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      v47 = swift_allocError();
      sub_23AA724E8((uint64_t)&v179, v48, (uint64_t *)&unk_2542E0950);
      *v85 = v47;
    }
    else
    {
      *v85 = (uint64_t)v83;
    }
    swift_storeEnumTagMultiPayload();
    v49 = v83;
    v46(v85);

    v40 = (uint64_t)v85;
    return sub_23AA8A05C(v40, (uint64_t *)&unk_2569E27B0);
  }
  v169 = 0;
  v86 = v79;
  v87 = (uint64_t)v149;
  sub_23AA94050(v86, (uint64_t)v149, type metadata accessor for VFSItem);
  v88 = (_BYTE *)(v87 + *(int *)(v76 + 28));
  v89 = (int *)type metadata accessor for ItemMetadata();
  if ((v88[v89[20]] & 1) == 0)
  {
    v168 = (char *)v72;
    v94 = &v149[*(int *)(v76 + 36)];
    v95 = v77;
    v96 = *(_QWORD *)v94;
    v97 = *((_DWORD *)v94 + 2);
    v98 = *((_QWORD *)v94 + 2);
    v99 = v94[24];
    v100 = (uint64_t)v146;
    sub_23B19DD20((uint64_t)v146);
    swift_bridgeObjectRelease_n();
    v101 = v96 == *(_QWORD *)v100;
    v77 = v95;
    if (!v101 || v97 != *(_DWORD *)(v100 + 8))
      goto LABEL_39;
    if ((v99 & 1) != 0)
    {
      if ((*(_BYTE *)(v100 + 24) & 1) == 0)
      {
LABEL_39:
        v127 = (uint64_t)v149;
        v128 = v149[8];
        v179 = *(_QWORD *)v149;
        v180 = v128;
        *(_QWORD *)&v181 = v162;
        *((_QWORD *)&v181 + 1) = v164;
        *(_QWORD *)&v182 = v161;
        *((_QWORD *)&v182 + 1) = v153 & 1;
        *(_QWORD *)&v183 = v160;
        *((_QWORD *)&v183 + 1) = v159;
        *(_QWORD *)&v184 = v163;
        *((_QWORD *)&v184 + 1) = v158;
        *(_QWORD *)&v185 = v157;
        *((_QWORD *)&v185 + 1) = v156;
        *(_QWORD *)&v186 = v155;
        *((_QWORD *)&v186 + 1) = v154;
        v187 = 0;
        sub_23AAFC630((uint64_t)&v179);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        v83 = (void *)swift_allocError();
        sub_23AA724E8((uint64_t)&v179, v129, (uint64_t *)&unk_2542E0950);
        swift_willThrow();
        sub_23AA937BC(v127, type metadata accessor for VFSItem);
        v85 = v178;
        v82 = v173;
        goto LABEL_4;
      }
    }
    else if ((*(_BYTE *)(v100 + 24) & 1) != 0 || v98 != *(_QWORD *)(v100 + 16))
    {
      goto LABEL_39;
    }
    sub_23B19DD70(v100);
    v76 = v177;
    v57 = v151;
    v80 = (void (*)(char *, uint64_t))v168;
  }
  if (*v88 == 1 && v88[v89[18]] == 1)
  {
    v179 = v173;
    v180 = v77;
    sub_23B19E12C((uint64_t)&v179);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v90 = swift_allocError();
    sub_23AA724E8((uint64_t)&v179, v91, (uint64_t *)&unk_2542E0950);
    v92 = v178;
    *v178 = v90;
    swift_storeEnumTagMultiPayload();
    v174(v92);
    v93 = (uint64_t)v92;
LABEL_42:
    sub_23AA8A05C(v93, (uint64_t *)&unk_2569E27B0);
    v138 = (uint64_t)v149;
    return sub_23AA937BC(v138, type metadata accessor for VFSItem);
  }
  v102 = (uint64_t)v145;
  sub_23AA8EFC8(a11, (uint64_t)v145, &qword_2542E72C0);
  if (v81(v102, 1, v76) == 1)
  {
    sub_23AA8A05C(v102, &qword_2542E72C0);
    v103 = v172;
  }
  else
  {
    sub_23AA94050(v102, (uint64_t)v57, type metadata accessor for VFSItem);
    v104 = (uint64_t)v57;
    sub_23B1C5BDC();
    sub_23AA7E38C(&qword_2569E24B8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
    v105 = sub_23B1C63A4();
    v103 = v172;
    if ((v105 & 1) == 0)
    {
      v130 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E8EF8) + 48);
      v131 = (uint64_t)v149;
      v132 = v178;
      sub_23AA907B0((uint64_t)v149, (uint64_t)v178, type metadata accessor for VFSItem);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v132, 0, 1, v76);
      *(uint64_t *)((char *)v132 + v130) = 0;
      swift_storeEnumTagMultiPayload();
      v174(v132);
      sub_23AA8A05C((uint64_t)v132, (uint64_t *)&unk_2569E27B0);
      sub_23AA937BC(v104, type metadata accessor for VFSItem);
      v138 = v131;
      return sub_23AA937BC(v138, type metadata accessor for VFSItem);
    }
    sub_23AA937BC((uint64_t)v57, type metadata accessor for VFSItem);
  }
  v57 = v171;
  v106 = v171[17];
  v107 = objc_msgSend(v103, sel_URL);
  v108 = v152;
  sub_23B1C59CC();

  v109 = sub_23B1C59E4();
  v111 = v110;
  v80(v108, v170);
  v112 = (void *)swift_retain();
  if (objc_sync_enter(v112))
LABEL_46:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v57);
  v113 = v57[20];
  swift_retain();
  if (objc_sync_exit(v57))
LABEL_47:
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v57);
  swift_release();
  v114 = v88[v89[27]] | a12;
  v115 = *v146;
  v116 = *((unsigned int *)v146 + 2);
  v117 = v146[2];
  v118 = *((unsigned __int8 *)v146 + 24);
  v119 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)v106 + 440);
  HIDWORD(v139) = 1;
  LOBYTE(v139) = 1;
  v120 = v169;
  v119(v109, v111, v115, v116, v117, v118, v113, v114 & 1, v139);
  v83 = v120;
  if (v120)
  {
    sub_23AA937BC((uint64_t)v149, type metadata accessor for VFSItem);
    swift_bridgeObjectRelease();
    swift_release();
    v85 = v178;
    v82 = v173;
    v77 = v143;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  swift_release();
  sub_23AF43EA8();
  v121 = v142;
  swift_beginAccess();
  v122 = v177;
  v123 = v121 + *(int *)(v177 + 28) + v89[36];
  if ((*(_BYTE *)(v123 + 4) & 1) != 0 || *(_DWORD *)v123 < 2u)
  {
    v133 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E8EF8) + 48);
    v134 = v178;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v148 + 56))(v178, 1, 1, v122);
    *(uint64_t *)((char *)v134 + v133) = 0;
    swift_storeEnumTagMultiPayload();
    v174(v134);
    v93 = (uint64_t)v134;
    goto LABEL_42;
  }
  v124 = (uint64_t)v149;
  v125 = *(_QWORD *)&v149[*(int *)(v177 + 36)];
  swift_bridgeObjectRelease_n();
  v126 = (uint64_t)v144;
  sub_23B157BAC(v125, 0, 0, (uint64_t)v144);
  v135 = v124;
  v136 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E8EF8) + 48);
  v137 = v178;
  sub_23AA8EFC8(v126, (uint64_t)v178, &qword_2542E72C0);
  *(uint64_t *)((char *)v137 + v136) = 0;
  swift_storeEnumTagMultiPayload();
  v174(v137);
  sub_23AA8A05C((uint64_t)v137, (uint64_t *)&unk_2569E27B0);
  sub_23AA8A05C(v126, &qword_2542E72C0);
  v138 = v135;
  return sub_23AA937BC(v138, type metadata accessor for VFSItem);
}

void sub_23B173050(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4, void (*a5)(void *), uint64_t a6)
{
  uint64_t v6;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unsigned __int8 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v13 = a2;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v13 == 1)
  {
    if (a4 == 1)
    {
      v17 = *(_QWORD *)(v6 + 224);
      v26 = *(id *)(v6 + 216);
      v18 = sub_23B1C60A4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = a5;
      *(_QWORD *)(v19 + 24) = a6;
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v6;
      *(_QWORD *)(v20 + 24) = a1;
      *(_QWORD *)(v20 + 32) = a5;
      *(_QWORD *)(v20 + 40) = a6;
      *(_QWORD *)(v20 + 48) = a1;
      *(_BYTE *)(v20 + 56) = 1;
      *(_QWORD *)(v20 + 64) = a3;
      *(_QWORD *)(v20 + 72) = a3;
      *(_BYTE *)(v20 + 80) = 1;
      v21 = (_QWORD *)swift_allocObject();
      v21[2] = sub_23AA956C8;
      v21[3] = v19;
      v21[4] = v17;
      swift_retain_n();
      v22 = v26;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_23AA9086C(v22, (uint64_t)v16, sub_23AC279F4, v21, (uint64_t)sub_23B19DB48, v20);

      swift_release();
      swift_release();
      swift_release();
      sub_23AA8A05C((uint64_t)v16, &qword_2542DD460);
      return;
    }
    v27 = a3;
    v28 = a4;
  }
  else
  {
    v27 = a1;
    v28 = a2;
  }
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0;
  sub_23AAFC630((uint64_t)&v27);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
  sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
  v23 = (void *)swift_allocError();
  sub_23AA724E8((uint64_t)&v27, v24, (uint64_t *)&unk_2542E0950);
  a5(v23);

}

void sub_23B1732B8(void *a1, uint64_t a2, void (*a3)(void *), void (*a4)(void *), unint64_t a5, int a6, uint64_t a7, unint64_t a8, char a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  void *v37;
  void *v38;
  int v39;
  char *v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void (*v46)(void *);
  void *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  void (*v51)(unint64_t, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  void *v54;
  void *v55;
  int v56;
  char *v57;
  char *v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  void *v64;
  id v65;
  void *v66;
  char *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  void (**v78)(void *);
  void (*v79)(void *);
  unint64_t v80;
  id v81;
  id v82;
  id v83;
  void (*v84)(char *, uint64_t);
  void (*v85)(unint64_t, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  uint64_t v102;
  void (*v103)(void *);
  void (*v104)(void *);
  unint64_t v105;
  char v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;

  v96 = a8;
  v97 = a7;
  v101 = a6;
  v100 = a5;
  v103 = a3;
  v104 = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v94 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v98 = (char *)&v85 - v14;
  v102 = sub_23B1C5A08();
  v99 = *(_QWORD *)(v102 - 8);
  v15 = *(_QWORD *)(v99 + 64);
  v16 = MEMORY[0x24BDAC7A8](v102);
  v93 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v95 = (char *)&v85 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v85 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v85 - v25;
  v27 = type metadata accessor for VFSItem(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v85 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v85 - v32;
  sub_23B157BAC(a2, 0, 0, (uint64_t)v26);
  v89 = v24;
  v87 = v15;
  v88 = v31;
  v90 = a1;
  v91 = v20;
  v34 = v102;
  v92 = v33;
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v35(v26, 1, v27) == 1)
  {
    sub_23AA8A05C((uint64_t)v26, &qword_2542E72C0);
LABEL_9:
    v46 = v103;
    v105 = v100;
    v106 = v101;
    v107 = 0u;
    v108 = 0u;
    v109 = 0u;
    v110 = 0u;
    v111 = 0u;
    v112 = 0u;
    v113 = 0;
    sub_23AAFC630((uint64_t)&v105);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v47 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v105, v48, (uint64_t *)&unk_2542E0950);
    v46(v47);

    return;
  }
  v36 = (uint64_t)v92;
  sub_23AA94050((uint64_t)v26, (uint64_t)v92, type metadata accessor for VFSItem);
  if (*(_BYTE *)(v36 + *(int *)(v27 + 28)) != 1)
  {
    sub_23AA937BC(v36, type metadata accessor for VFSItem);
    goto LABEL_9;
  }
  v37 = v90;
  v38 = (void *)swift_retain();
  if (objc_sync_enter(v38))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v37);
  v86 = v27;
  swift_retain();
  v39 = objc_sync_exit(v37);
  v40 = v98;
  if (v39)
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v37);
  swift_release();
  sub_23AC380C8(v40);
  swift_release();
  v41 = v99;
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
  v43 = v34;
  if (v42(v40, 1, v34) == 1)
  {
    sub_23AA8A05C((uint64_t)v40, (uint64_t *)&unk_2542E6740);
    v105 = v100;
    v106 = v101;
    v107 = 0u;
    v108 = 0u;
    v109 = 0u;
    v110 = 0u;
    v111 = 0u;
    v112 = 0u;
    v113 = 0;
    sub_23AAFC630((uint64_t)&v105);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v44 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v105, v45, (uint64_t *)&unk_2542E0950);
    v103(v44);

    sub_23AA937BC(v36, type metadata accessor for VFSItem);
    return;
  }
  v49 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  v49(v91, v40, v34);
  v50 = (uint64_t)v89;
  sub_23B157BAC(v97, 0, 0, (uint64_t)v89);
  v51 = (void (*)(unint64_t, char *, uint64_t))v49;
  v52 = v86;
  if (v35((char *)v50, 1, v86) == 1)
  {
    sub_23AA8A05C(v50, &qword_2542E72C0);
LABEL_19:
    v105 = v96;
    v106 = a9;
    v107 = 0u;
    v108 = 0u;
    v109 = 0u;
    v110 = 0u;
    v111 = 0u;
    v112 = 0u;
    v113 = 0;
    sub_23AAFC630((uint64_t)&v105);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v61 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v105, v62, (uint64_t *)&unk_2542E0950);
    v103(v61);

    (*(void (**)(char *, uint64_t))(v99 + 8))(v91, v34);
    sub_23AA937BC((uint64_t)v92, type metadata accessor for VFSItem);
    return;
  }
  v53 = (uint64_t)v88;
  sub_23AA94050(v50, (uint64_t)v88, type metadata accessor for VFSItem);
  if (*(_BYTE *)(v53 + *(int *)(v52 + 28)) != 1)
  {
    sub_23AA937BC(v53, type metadata accessor for VFSItem);
    goto LABEL_19;
  }
  v54 = v90;
  v55 = (void *)swift_retain();
  if (objc_sync_enter(v55))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v54);
  swift_retain();
  v56 = objc_sync_exit(v54);
  v57 = v95;
  if (v56)
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v54);
  swift_release();
  v58 = v94;
  sub_23AC380C8(v94);
  swift_release();
  if (v42(v58, 1, v34) == 1)
  {
    sub_23AA8A05C((uint64_t)v58, (uint64_t *)&unk_2542E6740);
    v105 = v96;
    v106 = a9;
    v107 = 0u;
    v108 = 0u;
    v109 = 0u;
    v110 = 0u;
    v111 = 0u;
    v112 = 0u;
    v113 = 0;
    sub_23AAFC630((uint64_t)&v105);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v59 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v105, v60, (uint64_t *)&unk_2542E0950);
    v103(v59);

    sub_23AA937BC(v53, type metadata accessor for VFSItem);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v91, v34);
  }
  else
  {
    v85 = v51;
    v51((unint64_t)v57, v58, v34);
    v63 = (void *)objc_opt_self();
    v64 = (void *)sub_23B1C5954();
    v65 = objc_msgSend(v63, sel_writingIntentWithURL_options_, v64, 4);

    v66 = (void *)sub_23B1C5954();
    v67 = v57;
    v68 = objc_msgSend(v63, sel_writingIntentWithURL_options_, v66, 2);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
    v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_23B1E76D0;
    *(_QWORD *)(v69 + 32) = v65;
    *(_QWORD *)(v69 + 40) = v68;
    v105 = v69;
    sub_23B1C671C();
    v98 = (char *)v105;
    v70 = v99;
    v71 = v93;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v93, v67, v43);
    v72 = (*(unsigned __int8 *)(v70 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
    v73 = (v87 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
    v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
    v75 = swift_allocObject();
    v76 = v90;
    v77 = v75;
    *(_QWORD *)(v75 + 16) = v68;
    v85(v75 + v72, v71, v43);
    *(_QWORD *)(v77 + v73) = v76;
    v78 = (void (**)(void *))(v77 + v74);
    v79 = v104;
    *v78 = v103;
    v78[1] = v79;
    v80 = v77 + ((v74 + 23) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)v80 = v100;
    *(_BYTE *)(v80 + 8) = v101;
    v81 = v68;
    swift_retain();
    v82 = v81;
    v83 = v65;
    swift_retain();
    sub_23B159770(0, 255, (unint64_t)v98, 0, (void (*)(_QWORD, _QWORD))sub_23B19DC30, v77);

    swift_bridgeObjectRelease();
    swift_release();
    v84 = *(void (**)(char *, uint64_t))(v99 + 8);
    v84(v95, v43);
    sub_23AA937BC((uint64_t)v88, type metadata accessor for VFSItem);
    v84(v91, v43);
  }
  sub_23AA937BC((uint64_t)v92, type metadata accessor for VFSItem);
}

void sub_23B173D20(uint64_t a1, id a2, void *a3, unint64_t a4, _QWORD *a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  id v31;
  id v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  char *v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  id v48;
  char *v49;
  id v50;
  void (*v51)(char *, uint64_t);
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char v67;
  void *v68;
  const char *v69;
  id v70;
  uint64_t v71;
  size_t v72;
  size_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  char *v82;
  id v83;
  char *v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  int v88;
  uint8_t *v89;
  id v90;
  void *v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  _QWORD *v100;
  uint64_t v101;
  id v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, unint64_t);
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  id v115;
  char *v116;
  id v117;
  _QWORD *v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  void (*v122)(uint64_t);
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  char *v133;
  void (*v134)(char *, uint64_t);
  uint64_t v135;
  uint8_t *v136;
  uint64_t v137;
  id v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  __int128 v144;
  __int128 v145;
  id v146;
  uint64_t v147;
  uint64_t v148;

  v119 = a8;
  v121 = a7;
  v122 = a6;
  v118 = a5;
  v139 = a4;
  v120 = a3;
  v148 = *MEMORY[0x24BDAC8D0];
  v125 = sub_23B1C5C54();
  v124 = *(_QWORD *)(v125 - 8);
  MEMORY[0x24BDAC7A8](v125);
  v123 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_23B1C5BDC();
  v136 = *(uint8_t **)(v137 - 8);
  MEMORY[0x24BDAC7A8](v137);
  v12 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23B1C58A0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C5E4C();
  v18 = *(void **)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23B1C5A08();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v114 - v25;
  MEMORY[0x24BDAC7A8](v24);
  if (a2)
  {
    v31 = a2;
    swift_willThrow();
LABEL_3:
    v32 = a2;
    LODWORD(v145) = sub_23B1C5564();
    sub_23AB6CD48();
    v33 = sub_23B1C575C();

    if ((v33 & 1) != 0)
    {
      *(_QWORD *)&v145 = v119;
      BYTE8(v145) = a9;
      v146 = a2;
      sub_23B19DCC8((uint64_t)&v145);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      v34 = swift_allocError();
      sub_23AA724E8((uint64_t)&v145, v35, (uint64_t *)&unk_2542E0950);
      v36 = a2;
      v122(v34);
      v37 = (void *)v34;
    }
    else
    {
      v38 = a2;
      v122((uint64_t)a2);
      v37 = a2;
    }

    return;
  }
  v132 = v18;
  v128 = v29;
  v133 = v16;
  v129 = v12;
  v130 = v14;
  v131 = v13;
  v116 = v28;
  v39 = (char *)&v114 - v27;
  v40 = v30;
  v41 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v135 = v21;
  v42 = v41;
  v43 = v120;
  v44 = objc_msgSend(v120, sel_URL);
  sub_23B1C59CC();

  v45 = v43;
  v138 = v42;
  v46 = v135;
  v47 = (void *)sub_23B1C6A7C();
  v134 = *(void (**)(char *, uint64_t))(v40 + 8);
  v134(v39, v46);
  v117 = v47;
  if (v47)
  {
    v48 = v47;
    v49 = v133;
    v115 = v48;
    sub_23B1C6A58();
    sub_23B1C5894();
    if (v147)
    {
      v132 = 0;
      v127 = MEMORY[0x24BEE4AD8] + 8;
      v126 = v26;
      do
      {
        sub_23AAA159C(&v145, &v144);
        sub_23AA9F52C(0, &qword_2569E8EF0);
        swift_dynamicCast();
        v52 = (void *)v142;
        sub_23B1C59CC();

        v53 = sub_23B1C5930();
        v55 = v54;
        *(_QWORD *)&v144 = v53;
        *((_QWORD *)&v144 + 1) = v54;
        v142 = 58;
        v143 = 0xE100000000000000;
        v140 = 47;
        v141 = 0xE100000000000000;
        v56 = sub_23AAA420C();
        v112 = v56;
        v113 = v56;
        v111 = v56;
        v57 = MEMORY[0x24BEE0D00];
        v110 = MEMORY[0x24BEE0D00];
        *(_QWORD *)&v144 = sub_23B1C6CF8();
        *((_QWORD *)&v144 + 1) = v58;
        v142 = 47;
        v143 = 0xE100000000000000;
        v140 = 58;
        v141 = 0xE100000000000000;
        v112 = v56;
        v113 = v56;
        v110 = v57;
        v111 = v56;
        sub_23B1C6CF8();
        v59 = swift_bridgeObjectRelease();
        MEMORY[0x24BDAC7A8](v59);
        v112 = (unint64_t)v138;
        v113 = v139;
        v60 = (uint64_t)v129;
        sub_23B1C5BD0();
        v61 = sub_23B0CE5AC(v60, sub_23ACF8050, (uint64_t)&v110);
        v63 = v62;
        swift_bridgeObjectRelease();
        (*((void (**)(uint64_t, uint64_t))v136 + 1))(v60, v137);
        if (!v63)
        {
          *(_QWORD *)&v144 = v53;
          *((_QWORD *)&v144 + 1) = v55;
          swift_bridgeObjectRetain();
          sub_23B1C64F4();
          v64 = v123;
          sub_23B1C5C48();
          sub_23B1C5BF4();
          (*(void (**)(char *, uint64_t))(v124 + 8))(v64, v125);
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          v63 = *((_QWORD *)&v144 + 1);
          v61 = v144;
        }
        v65 = v128;
        sub_23B1C5984();
        v46 = v135;
        v66 = v126;
        if (v61 == v53 && v63 == v55)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v67 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          if ((v67 & 1) != 0)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v68 = (void *)sub_23B1C5954();
            v69 = (const char *)objc_msgSend(v68, sel_fileSystemRepresentation);
            v70 = v68;
            v71 = sub_23B1C6458();
            v72 = strlen((const char *)(v71 + 32));
            swift_release();
            v73 = v72 + 1;
            if (__OFADD__(v72, 1))
              __break(1u);
            v74 = sub_23B1C6458();
            swift_bridgeObjectRelease();
            setxattr(v69, "com.apple.fileprovider.before-bounce#P", (const void *)(v74 + 32), v73, 0, 3);
            swift_release();
          }
        }
        v75 = (void *)sub_23B1C5954();
        v76 = (void *)sub_23B1C5954();
        *(_QWORD *)&v144 = 0;
        v77 = objc_msgSend(v138, sel_moveItemAtURL_toURL_error_, v75, v76, &v144);

        v78 = v131;
        v79 = v130;
        if (v77)
        {
          v50 = (id)v144;
        }
        else
        {
          v80 = (id)v144;
          v81 = (void *)sub_23B1C587C();

          swift_willThrow();
          v132 = v81;
        }
        v51 = v134;
        v134(v65, v46);
        v51(v66, v46);
        v49 = v133;
        sub_23B1C5894();
      }
      while (v147);
    }
    else
    {
      v132 = 0;
      v78 = v131;
      v79 = v130;
    }
    (*(void (**)(char *, uint64_t))(v79 + 8))(v49, v78);
    v99 = v115;

    a2 = v132;
    if (v132)
    {
      swift_willThrow();

      goto LABEL_3;
    }
  }
  else
  {
    v82 = v39;
    v83 = (id)fpfs_current_or_default_log();
    v84 = v20;
    sub_23B1C5E58();
    v85 = v45;
    v86 = sub_23B1C5E40();
    v87 = sub_23B1C6AA0();
    v88 = v87;
    if (os_log_type_enabled(v86, v87))
    {
      LODWORD(v139) = v88;
      v89 = (uint8_t *)swift_slowAlloc();
      v137 = swift_slowAlloc();
      *(_QWORD *)&v145 = v137;
      *(_DWORD *)v89 = 136315138;
      v136 = v89 + 4;
      v90 = objc_msgSend(v85, sel_URL);
      sub_23B1C59CC();

      v91 = (void *)sub_23B1C5954();
      v92 = objc_msgSend(v91, sel_fp_shortDescription);

      v93 = sub_23B1C63E0();
      v95 = v94;

      v96 = v82;
      v97 = v135;
      v134(v96, v135);
      *(_QWORD *)&v144 = sub_23AABEC68(v93, v95, (uint64_t *)&v145);
      sub_23B1C6CBC();

      v46 = v97;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v86, (os_log_type_t)v139, "can't create enumerator at %s", v89, 0xCu);
      v98 = v137;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v98, -1, -1);
      MEMORY[0x23B8614BC](v89, -1, -1);

      (*((void (**)(char *, uint64_t))v132 + 1))(v84, v17);
    }
    else
    {

      (*((void (**)(char *, uint64_t))v132 + 1))(v20, v17);
      v46 = v135;
    }
  }
  v100 = v118;
  v101 = v118[17];
  v102 = objc_msgSend(v120, sel_URL);
  v103 = v116;
  sub_23B1C59CC();

  v104 = sub_23B1C59E4();
  v106 = v105;
  v134(v103, v46);
  v107 = (void *)swift_retain();
  if (objc_sync_enter(v107))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v100);
  v108 = v100[20];
  swift_retain();
  if (objc_sync_exit(v100))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v100);
  swift_release();
  v109 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, _QWORD, unint64_t))(*(_QWORD *)v101 + 440);
  HIDWORD(v112) = 1;
  LOBYTE(v112) = 1;
  v109(v104, v106, 0, 0, 0, 256, v108, 0, v112);
  swift_bridgeObjectRelease();
  swift_release();
  v122(0);

}

uint64_t sub_23B174A14(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  _QWORD *v26;
  os_log_t v27;
  uint64_t v28;
  uint64_t v30;
  os_log_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = sub_23B1C5A08();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C5E4C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v13 = a2;
  v14 = a2;
  v15 = sub_23B1C5E40();
  v16 = sub_23B1C6AA0();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v35 = v8;
    v18 = v17;
    v32 = (_QWORD *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v38 = v34;
    *(_DWORD *)v18 = 136315394;
    v30 = v18 + 4;
    v19 = (void *)sub_23B1C5954();
    v20 = objc_msgSend(v19, sel_fp_shortDescription);
    v31 = v15;
    v21 = v20;

    v22 = sub_23B1C63E0();
    v33 = v9;
    v24 = v23;

    v37 = sub_23AABEC68(v22, v24, &v38);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_WORD *)(v18 + 12) = 2112;
    swift_getErrorValue();
    v25 = sub_23B0D9CF0(v36);
    v37 = (uint64_t)v25;
    sub_23B1C6CBC();
    v26 = v32;
    *v32 = v25;

    v27 = v31;
    _os_log_impl(&dword_23AA66000, v31, v16, "Can't enumerate: %s: %@", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v26, -1, -1);
    v28 = v34;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v28, -1, -1);
    MEMORY[0x23B8614BC](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v35);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return 1;
}

void sub_23B174D3C(uint64_t a1, void *a2, int a3, void (*a4)(void *), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _BYTE v28[12];
  int v29;
  uint64_t v30;
  void (*v31)(void *);
  void *v32;
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v30 = a5;
  v31 = a4;
  v29 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (void **)&v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v28[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for VFSItem(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = &v28[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23AA8EFC8(a1, (uint64_t)v12, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = *v12;
    v32 = *v12;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    swift_willThrowTypedImpl();
LABEL_7:
    v27 = v20;
    v31(v20);

    return;
  }
  sub_23AA724E8((uint64_t)v12, (uint64_t)v15, &qword_2542E72C0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_23AA8A05C((uint64_t)v15, &qword_2542E72C0);
    v32 = a2;
    v33 = v29;
    v34 = 0u;
    v35 = 0u;
    v36 = 0u;
    v37 = 0u;
    v38 = 0u;
    v39 = 0u;
    v40 = 0;
    sub_23AAFC630((uint64_t)&v32);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v20 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v32, v21, (uint64_t *)&unk_2542E0950);
    swift_willThrow();
    goto LABEL_7;
  }
  sub_23AA94050((uint64_t)v15, (uint64_t)v19, type metadata accessor for VFSItem);
  sub_23AC380C8(v9);
  v22 = sub_23B1C5A08();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v22) == 1)
  {
    __break(1u);
  }
  else
  {
    v24 = sub_23B1C59E4();
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v22);
    LODWORD(v32) = 0;
    BYTE4(v32) = 1;
    swift_bridgeObjectRetain();
    sub_23B0E2918(4294967294, v24, v26, 0x200000, 0, 0, (uint64_t)&v32, (uint64_t)sub_23B1750C4, 0);
    if ((BYTE4(v32) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v31(0);
      sub_23AA937BC((uint64_t)v19, type metadata accessor for VFSItem);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_23B1750C4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19DB10);
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_23B175104(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  id v29;
  unsigned int (*v30)(void **, uint64_t, int *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;

  v71 = a6;
  v74 = a5;
  v73 = a4;
  v85 = *MEMORY[0x24BDAC8D0];
  v67 = sub_23B1C5E4C();
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v68 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v63 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v72 = (char *)&v57 - v13;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v69 = *(_QWORD *)(v70 - 8);
  v14 = MEMORY[0x24BDAC7A8](v70);
  v64 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v65 = (uint64_t)&v57 - v16;
  v17 = (int *)type metadata accessor for VFSItem(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v62 = (uint64_t)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v75 = (uint64_t)&v57 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (uint64_t *)((char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (void **)((char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8(a1, (uint64_t)v27, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = *v27;
    *v24 = (uint64_t)*v27;
    swift_storeEnumTagMultiPayload();
    v29 = v28;
    a2(v24);

    return sub_23AA8A05C((uint64_t)v24, &qword_2542E21C0);
  }
  v60 = v22;
  v61 = a3;
  v30 = *(unsigned int (**)(void **, uint64_t, int *))(v18 + 48);
  if (v30(v27, 1, v17) == 1)
  {
    v76 = v73;
    LOBYTE(v77) = v74;
    v78 = 0u;
    v79 = 0u;
    v80 = 0u;
    v81 = 0u;
    v82 = 0u;
    v83 = 0u;
    v84 = 0;
    sub_23AAFC630((uint64_t)&v76);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v31 = swift_allocError();
    sub_23AA724E8((uint64_t)&v76, v32, (uint64_t *)&unk_2542E0950);
    *v24 = v31;
    swift_storeEnumTagMultiPayload();
    a2(v24);
    return sub_23AA8A05C((uint64_t)v24, &qword_2542E21C0);
  }
  v34 = v75;
  sub_23AA94050((uint64_t)v27, v75, type metadata accessor for VFSItem);
  v35 = (_BYTE *)(v34 + v17[7]);
  v36 = type metadata accessor for ItemMetadata();
  if ((v35[*(int *)(v36 + 80)] & 1) == 0 && *v35 == 1 && v35[*(int *)(v36 + 64)] != 1)
  {
    v38 = v34 + v17[9];
    v39 = *(_QWORD *)v38;
    v40 = v34 + v17[14];
    if (*(_BYTE *)(v40 + 4))
      v41 = 0;
    else
      v41 = *(_DWORD *)v40;
    v42 = *(_DWORD *)(v38 + 8);
    v43 = v71;
    v44 = (void *)swift_retain();
    if (!objc_sync_enter(v44))
    {
      v58 = v42;
      v59 = v41;
      v45 = v43[20];
      swift_retain();
      v46 = objc_sync_exit(v43);
      v47 = (uint64_t)v72;
      if (v46)
        sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v43);
      swift_release();
      v48 = *(unsigned int *)(v45 + 16);
      v49 = swift_release();
      v57 = (uint64_t)&v57;
      MEMORY[0x24BDAC7A8](v49);
      *(&v57 - 4) = v75;
      *(&v57 - 3) = (uint64_t)v43;
      *(&v57 - 2) = v73;
      *((_BYTE *)&v57 - 8) = v74;
      v50 = v69;
      v43 = (_QWORD *)v70;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v47, 1, 1, v70);
      v76 = v39;
      v77 = 0;
      v78 = __PAIR64__(v58, v59);
      *(_QWORD *)&v79 = 0;
      sub_23B0E1EBC((uint64_t)&v76, v48, 0x200000, 0, v47, (uint64_t)sub_23B19DAC4, (uint64_t)(&v57 - 6));
      v51 = v63;
      sub_23AA8EFC8(v47, v63, qword_2542E5250);
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v50 + 48))(v51, 1, v43) != 1)
      {
        v52 = v65;
        sub_23AA724E8(v51, v65, &qword_2542E72C0);
        sub_23AA8A05C(v47, qword_2542E5250);
        v53 = v64;
        sub_23AA8EFC8(v52, v64, &qword_2542E72C0);
        if (v30((void **)v53, 1, v17) == 1)
        {
          sub_23AA8A05C(v53, &qword_2542E72C0);
          v76 = v73;
          LOBYTE(v77) = v74;
          v78 = 0u;
          v79 = 0u;
          v80 = 0u;
          v81 = 0u;
          v82 = 0u;
          v83 = 0u;
          v84 = 0;
          sub_23AAFC630((uint64_t)&v76);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
          sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
          v54 = swift_allocError();
          sub_23AA724E8((uint64_t)&v76, v55, (uint64_t *)&unk_2542E0950);
          *v24 = v54;
          swift_storeEnumTagMultiPayload();
          a2(v24);
          sub_23AA8A05C((uint64_t)v24, &qword_2542E21C0);
        }
        else
        {
          v56 = v62;
          sub_23AA94050(v53, v62, type metadata accessor for VFSItem);
          sub_23AA907B0(v56, (uint64_t)v24, type metadata accessor for VFSItem);
          swift_storeEnumTagMultiPayload();
          a2(v24);
          sub_23AA8A05C((uint64_t)v24, &qword_2542E21C0);
          sub_23AA937BC(v56, type metadata accessor for VFSItem);
        }
        sub_23AA8A05C(v52, &qword_2542E72C0);
        v37 = v75;
        return sub_23AA937BC(v37, type metadata accessor for VFSItem);
      }
      __break(1u);
    }
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v43);
  }
  sub_23AA907B0(v34, (uint64_t)v24, type metadata accessor for VFSItem);
  swift_storeEnumTagMultiPayload();
  a2(v24);
  sub_23AA8A05C((uint64_t)v24, &qword_2542E21C0);
  v37 = v34;
  return sub_23AA937BC(v37, type metadata accessor for VFSItem);
}

uint64_t sub_23B175B70@<X0>(int a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  int v33;

  v33 = a5;
  v30 = a4;
  v11 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for VFSItem(0);
  sub_23AA907B0(a2 + *(int *)(v14 + 28), (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v13[*(int *)(v11 + 80)] = 1;
  v31 = v13;
  v32 = a1;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19DAE4);
  if (!v6)
  {
    v29 = v14;
    v16 = v33;
    v17 = (void *)swift_retain();
    if (objc_sync_enter(v17))
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a3);
    v18 = a3[20];
    swift_retain();
    if (objc_sync_exit(a3))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a3);
    swift_release();
    v19 = type metadata accessor for VFSFileTree(0);
    v20 = MEMORY[0x23B8615C4](a3 + 34);
    v21 = MEMORY[0x24BDAC7A8](v20);
    *(&v29 - 10) = v19;
    *((_DWORD *)&v29 - 18) = a1;
    *(&v29 - 8) = v18;
    *(&v29 - 7) = v21;
    *(&v29 - 6) = v25;
    *((_BYTE *)&v29 - 40) = 2;
    v26 = v30;
    *(&v29 - 4) = 0;
    *(&v29 - 3) = v26;
    *((_BYTE *)&v29 - 16) = v16;
    v27 = 0x100000000;
    if (!v28)
      v27 = 0;
    *(&v29 - 1) = 0;
    sub_23B1AA0D0(a1, v22, v23, v27 | v24, (uint64_t)sub_23AA8AC00, (uint64_t)(&v29 - 12), a6);
    swift_release();
    swift_unknownObjectRelease();
  }
  return sub_23AA937BC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
}

uint64_t sub_23B175E38@<X0>(uint64_t a1@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  _DWORD v11[8];
  _BYTE v12[248];
  _BYTE v13[248];

  v6 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA907B0(a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AAF8E48((uint64_t)v13);
  sub_23AA724E8((uint64_t)v13, (uint64_t)v12, &qword_2542E5050);
  v11[4] = a2;
  sub_23B1A4A98((uint64_t)v12, 6, (uint64_t)sub_23AB6CE60, (uint64_t)v11);
  *a3 = v9;
  return sub_23AA937BC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
}

uint64_t sub_23B175F28(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  id v28;
  unsigned int (*v29)(void **, uint64_t, int *);
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;

  v71 = a6;
  v74 = a5;
  v73 = a4;
  v85 = *MEMORY[0x24BDAC8D0];
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v66 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v72 = (char *)&v60 - v12;
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v69 = *(_QWORD *)(v70 - 8);
  v13 = MEMORY[0x24BDAC7A8](v70);
  v67 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v68 = (uint64_t)&v60 - v15;
  v16 = (int *)type metadata accessor for VFSItem(0);
  v17 = *((_QWORD *)v16 - 1);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v65 = (uint64_t)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v75 = (uint64_t)&v60 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (void **)((char *)&v60 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8(a1, (uint64_t)v26, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v27 = *v26;
    *v23 = (uint64_t)*v26;
    swift_storeEnumTagMultiPayload();
    v28 = v27;
    a2(v23);

    return sub_23AA8A05C((uint64_t)v23, &qword_2542E21C0);
  }
  v63 = v21;
  v64 = a3;
  v29 = *(unsigned int (**)(void **, uint64_t, int *))(v17 + 48);
  if (v29(v26, 1, v16) == 1)
  {
    v76 = v73;
    LOBYTE(v77) = v74;
    v78 = 0u;
    v79 = 0u;
    v80 = 0u;
    v81 = 0u;
    v82 = 0u;
    v83 = 0u;
    v84 = 0;
    sub_23AAFC630((uint64_t)&v76);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v30 = swift_allocError();
    sub_23AA724E8((uint64_t)&v76, v31, (uint64_t *)&unk_2542E0950);
    *v23 = v30;
    swift_storeEnumTagMultiPayload();
    a2(v23);
    return sub_23AA8A05C((uint64_t)v23, &qword_2542E21C0);
  }
  v33 = v75;
  sub_23AA94050((uint64_t)v26, v75, type metadata accessor for VFSItem);
  v34 = (_BYTE *)(v33 + v16[7]);
  if (v34[*(int *)(type metadata accessor for ItemMetadata() + 80)] == 1 && *v34 == 1)
  {
    v35 = v33 + v16[9];
    v36 = *(_QWORD *)v35;
    v37 = v33 + v16[14];
    if (*(_BYTE *)(v37 + 4))
      v38 = 0;
    else
      v38 = *(_DWORD *)v37;
    v39 = *(_DWORD *)(v35 + 8);
    v40 = v71;
    v41 = (void *)swift_retain();
    if (!objc_sync_enter(v41))
    {
      v61 = v39;
      v62 = v38;
      v42 = v40[20];
      swift_retain();
      v43 = objc_sync_exit(v40);
      v44 = (uint64_t)v72;
      if (v43)
        sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v40);
      swift_release();
      v45 = *(unsigned int *)(v42 + 16);
      v46 = swift_release();
      v60 = (uint64_t)&v60;
      MEMORY[0x24BDAC7A8](v46);
      *(&v60 - 4) = v75;
      *(&v60 - 3) = (uint64_t)v40;
      *(&v60 - 2) = v73;
      *((_BYTE *)&v60 - 8) = v74;
      v47 = v69;
      v40 = (_QWORD *)v70;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v44, 1, 1, v70);
      v76 = v36;
      v77 = 0;
      v78 = __PAIR64__(v61, v62);
      *(_QWORD *)&v79 = 0;
      sub_23B0E1EBC((uint64_t)&v76, v45, 0x200000, 0, v44, (uint64_t)sub_23B19DA04, (uint64_t)(&v60 - 6));
      v49 = v66;
      sub_23AA8EFC8(v44, v66, qword_2542E5250);
      v50 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(v47 + 48))(v49, 1, v40);
      if (v50 != 1)
      {
        v51 = v44;
        v52 = v68;
        sub_23AA724E8(v49, v68, &qword_2542E72C0);
        sub_23AA8A05C(v51, qword_2542E5250);
        v53 = v67;
        sub_23AA8EFC8(v52, v67, &qword_2542E72C0);
        v54 = v29((void **)v53, 1, v16);
        v55 = v74;
        v56 = v73;
        if (v54 == 1)
        {
          sub_23AA8A05C(v53, &qword_2542E72C0);
          v76 = v56;
          LOBYTE(v77) = v55;
          v78 = 0u;
          v79 = 0u;
          v80 = 0u;
          v81 = 0u;
          v82 = 0u;
          v83 = 0u;
          v84 = 0;
          sub_23AAFC630((uint64_t)&v76);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
          sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
          v57 = swift_allocError();
          sub_23AA724E8((uint64_t)&v76, v58, (uint64_t *)&unk_2542E0950);
          *v23 = v57;
          swift_storeEnumTagMultiPayload();
          a2(v23);
          sub_23AA8A05C((uint64_t)v23, &qword_2542E21C0);
        }
        else
        {
          v59 = v65;
          sub_23AA94050(v53, v65, type metadata accessor for VFSItem);
          sub_23AA907B0(v59, (uint64_t)v23, type metadata accessor for VFSItem);
          swift_storeEnumTagMultiPayload();
          a2(v23);
          sub_23AA8A05C((uint64_t)v23, &qword_2542E21C0);
          sub_23AA937BC(v59, type metadata accessor for VFSItem);
        }
        sub_23AA8A05C(v52, &qword_2542E72C0);
        v48 = v75;
        return sub_23AA937BC(v48, type metadata accessor for VFSItem);
      }
      __break(1u);
    }
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v40);
  }
  sub_23AA907B0(v33, (uint64_t)v23, type metadata accessor for VFSItem);
  swift_storeEnumTagMultiPayload();
  a2(v23);
  sub_23AA8A05C((uint64_t)v23, &qword_2542E21C0);
  v48 = v33;
  return sub_23AA937BC(v48, type metadata accessor for VFSItem);
}

uint64_t sub_23B176724@<X0>(int a1@<W0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  _QWORD *v33;
  int v34;

  v34 = a5;
  v30 = a4;
  v11 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for VFSItem(0);
  sub_23AA907B0(a2 + *(int *)(v14 + 28), (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v13[*(int *)(v11 + 80)] = 0;
  v31 = v13;
  v32 = a1;
  v33 = a3;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19DA24);
  if (!v6)
  {
    v29 = v14;
    v16 = v34;
    v17 = (void *)swift_retain();
    if (objc_sync_enter(v17))
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a3);
    v18 = a3[20];
    swift_retain();
    if (objc_sync_exit(a3))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a3);
    swift_release();
    v19 = type metadata accessor for VFSFileTree(0);
    v20 = MEMORY[0x23B8615C4](a3 + 34);
    v21 = MEMORY[0x24BDAC7A8](v20);
    *(&v29 - 10) = v19;
    *((_DWORD *)&v29 - 18) = a1;
    *(&v29 - 8) = v18;
    *(&v29 - 7) = v21;
    *(&v29 - 6) = v25;
    *((_BYTE *)&v29 - 40) = 2;
    v26 = v30;
    *(&v29 - 4) = 0;
    *(&v29 - 3) = v26;
    *((_BYTE *)&v29 - 16) = v16;
    v27 = 0x100000000;
    if (!v28)
      v27 = 0;
    *(&v29 - 1) = 0;
    sub_23B1AA0D0(a1, v22, v23, v27 | v24, (uint64_t)sub_23AA8AC00, (uint64_t)(&v29 - 12), a6);
    swift_release();
    swift_unknownObjectRelease();
  }
  return sub_23AA937BC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
}

uint64_t sub_23B1769EC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  _DWORD v13[6];
  uint64_t v14;
  _BYTE v15[248];
  _BYTE v16[248];

  v8 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA907B0(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AAF8E48((uint64_t)v16);
  sub_23AA724E8((uint64_t)v16, (uint64_t)v15, &qword_2542E5050);
  v13[4] = a2;
  v14 = a3;
  sub_23B1A4A98((uint64_t)v15, 6, (uint64_t)sub_23B19DA44, (uint64_t)v13);
  *a4 = v11;
  return sub_23AA937BC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
}

uint64_t sub_23B176AEC@<X0>(uint64_t a1@<X2>, _DWORD *a2@<X8>)
{
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  int v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v10[6];

  v3 = *(const void **)(*(_QWORD *)(a1 + 136) + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_23B1A1FB8;
  *(_QWORD *)(v5 + 24) = v4;
  v10[4] = sub_23AD035D8;
  v10[5] = v5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23AA7E744;
  v10[3] = &block_descriptor_89_0;
  v6 = _Block_copy(v10);
  _Block_copy(v3);
  swift_retain();
  swift_release();
  v7 = fpfs_fset_metadata();
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    *a2 = v7;
  return result;
}

void sub_23B176C58(uint64_t a1, void (*a2)(id), uint64_t a3, uint64_t a4, int a5, int a6, _QWORD *a7)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  id v21;
  id v22;
  unsigned int (*v23)(id *, uint64_t, int *);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  _QWORD *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;

  v42 = a7;
  v44 = a6;
  v46 = a5;
  v45 = a4;
  v57 = *MEMORY[0x24BDAC8D0];
  v9 = (int *)type metadata accessor for VFSItem(0);
  v10 = *((_QWORD *)v9 - 1);
  MEMORY[0x24BDAC7A8](v9);
  v43 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (id *)((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v41 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (id *)((char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8(a1, (uint64_t)v20, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = *v20;
    v22 = *v20;
    a2(v21);

    return;
  }
  v23 = *(unsigned int (**)(id *, uint64_t, int *))(v10 + 48);
  if (v23(v20, 1, v9) == 1)
  {
    v48 = v45;
    LOBYTE(v49) = v46;
    v50 = 0u;
    v51 = 0u;
    v52 = 0u;
    v53 = 0u;
    v54 = 0u;
    v55 = 0u;
    v56 = 0;
    sub_23AAFC630((uint64_t)&v48);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v24 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v48, v25, (uint64_t *)&unk_2542E0950);
    a2(v24);

    return;
  }
  v26 = (uint64_t)v17;
  sub_23AA724E8((uint64_t)v20, (uint64_t)v17, &qword_2542E72C0);
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v15, &qword_2542E72C0);
  if (v23(v15, 1, v9) == 1)
  {
    sub_23AA8A05C((uint64_t)v15, &qword_2542E72C0);
    v48 = v45;
    LOBYTE(v49) = v46;
    v50 = 0u;
    v51 = 0u;
    v52 = 0u;
    v53 = 0u;
    v54 = 0u;
    v55 = 0u;
    v56 = 0;
    sub_23AAFC630((uint64_t)&v48);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v27 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)&v48, v28, (uint64_t *)&unk_2542E0950);
    a2(v27);

    sub_23AA8A05C((uint64_t)v17, &qword_2542E72C0);
    return;
  }
  v29 = v43;
  sub_23AA94050((uint64_t)v15, v43, type metadata accessor for VFSItem);
  v30 = v29 + v9[7];
  if (*(unsigned __int8 *)(v30 + *(int *)(type metadata accessor for ItemMetadata() + 88)) != v44)
  {
    v31 = v29 + v9[9];
    v32 = *(_QWORD *)v31;
    v33 = v29 + v9[14];
    if (*(_BYTE *)(v33 + 4))
      v34 = 0;
    else
      v34 = *(_DWORD *)v33;
    v35 = *(_DWORD *)(v31 + 8);
    v36 = v42;
    v37 = (void *)swift_retain();
    if (!objc_sync_enter(v37))
    {
      v38 = v36[20];
      swift_retain();
      if (objc_sync_exit(v36))
        sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v36);
      swift_release();
      v39 = *(unsigned int *)(v38 + 16);
      v40 = swift_release();
      MEMORY[0x24BDAC7A8](v40);
      *(&v41 - 4) = v29;
      *((_BYTE *)&v41 - 24) = v44;
      *(&v41 - 2) = (uint64_t)v36;
      v47 = 1;
      v48 = v32;
      v49 = 0;
      v50 = __PAIR64__(v35, v34);
      *(_QWORD *)&v51 = 0;
      sub_23B0E1B48((uint64_t)&v48, v39, 2129920, 0, (uint64_t)&v47, (uint64_t)sub_23B19D964, (uint64_t)(&v41 - 6));
      if ((v47 & 1) == 0)
        goto LABEL_14;
      __break(1u);
    }
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v36);
  }
LABEL_14:
  a2(0);
  sub_23AA8A05C(v26, &qword_2542E72C0);
  sub_23AA937BC(v29, type metadata accessor for VFSItem);
}

uint64_t sub_23B177180(int a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE v13[16];
  _BYTE *v14;
  char v15;
  int v16;
  uint64_t v17;

  v8 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for VFSItem(0);
  sub_23AA907B0(a2 + *(int *)(v11 + 28), (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  v14 = v10;
  v15 = a3;
  v16 = a1;
  v17 = a4;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19D984);
  return sub_23AA937BC((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
}

uint64_t sub_23B17725C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, _DWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  _DWORD v15[6];
  uint64_t v16;
  _BYTE v17[248];
  _BYTE v18[256];

  v10 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA907B0(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AAF8E48((uint64_t)v18);
  sub_23AA724E8((uint64_t)v18, (uint64_t)v17, &qword_2542E5050);
  v15[4] = a3;
  v16 = a4;
  sub_23B1A4A98((uint64_t)v17, a2, (uint64_t)sub_23B19D9A8, (uint64_t)v15);
  *a5 = v13;
  return sub_23AA937BC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
}

uint64_t sub_23B177360@<X0>(uint64_t a1@<X2>, _DWORD *a2@<X8>)
{
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  int v7;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v10[6];

  v3 = *(const void **)(*(_QWORD *)(a1 + 136) + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_23B19D9C4;
  *(_QWORD *)(v5 + 24) = v4;
  v10[4] = sub_23AA7E774;
  v10[5] = v5;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_23AA7E744;
  v10[3] = &block_descriptor_41;
  v6 = _Block_copy(v10);
  _Block_copy(v3);
  swift_retain();
  swift_release();
  v7 = fpfs_fset_metadata();
  _Block_release(v6);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  else
    *a2 = v7;
  return result;
}

uint64_t sub_23B1774CC(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void *v25;
  id v26;
  void (*v27)(uint64_t *);
  unsigned int (*v28)(void **, uint64_t, int *);
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t *);
  int v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;

  v59 = a7;
  v61 = a6;
  LODWORD(v65) = a5;
  v64 = a4;
  v66 = a2;
  v78 = *MEMORY[0x24BDAC8D0];
  v9 = (int *)type metadata accessor for VFSItem(0);
  v10 = *((_QWORD *)v9 - 1);
  MEMORY[0x24BDAC7A8](v9);
  v62 = (uint64_t)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (void **)((char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v63 = (uint64_t)&v57 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v60 = (uint64_t *)((char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v18);
  v21 = (uint64_t *)((char *)&v57 - v20);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (void **)((char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8(a1, (uint64_t)v24, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v58 = a3;
    v27 = v66;
    v28 = *(unsigned int (**)(void **, uint64_t, int *))(v10 + 48);
    if (v28(v24, 1, v9) == 1)
    {
      v69 = v64;
      LOBYTE(v70) = v65;
      v71 = 0u;
      v72 = 0u;
      v73 = 0u;
      v74 = 0u;
      v75 = 0u;
      v76 = 0u;
      v77 = 0;
      sub_23AAFC630((uint64_t)&v69);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      v29 = swift_allocError();
      sub_23AA724E8((uint64_t)&v69, v30, (uint64_t *)&unk_2542E0950);
      *v21 = v29;
      swift_storeEnumTagMultiPayload();
      v27(v21);
      goto LABEL_5;
    }
    v34 = v63;
    sub_23AA724E8((uint64_t)v24, v63, &qword_2542E72C0);
    sub_23AA8EFC8(v34, (uint64_t)v15, &qword_2542E72C0);
    if (v28(v15, 1, v9) == 1)
    {
      sub_23AA8A05C((uint64_t)v15, &qword_2542E72C0);
      v69 = v64;
      LOBYTE(v70) = v65;
      v71 = 0u;
      v72 = 0u;
      v73 = 0u;
      v74 = 0u;
      v75 = 0u;
      v76 = 0u;
      v77 = 0;
      sub_23AAFC630((uint64_t)&v69);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
      v35 = swift_allocError();
      sub_23AA724E8((uint64_t)&v69, v36, (uint64_t *)&unk_2542E0950);
      *v21 = v35;
      swift_storeEnumTagMultiPayload();
      v27(v21);
      sub_23AA8A05C((uint64_t)v21, &qword_2542E21C0);
      v32 = v34;
      v31 = &qword_2542E72C0;
      return sub_23AA8A05C(v32, v31);
    }
    v37 = v62;
    sub_23AA94050((uint64_t)v15, v62, type metadata accessor for VFSItem);
    v38 = *(_QWORD *)v37;
    v39 = *(_QWORD *)(v37 + 16);
    v40 = *(unsigned __int8 *)(v37 + 24);
    if (*(_BYTE *)(v37 + 8))
    {
      v41 = (uint64_t)v21;
      if (*(_BYTE *)(v37 + 8) == 1)
      {
        if (v40 != 1 || v38 != v39)
          goto LABEL_27;
LABEL_25:
        v43 = (id)FPNotSupportedError();
        v44 = v58;
        if (v43)
        {
          v45 = (uint64_t)v60;
          *v60 = v43;
          swift_storeEnumTagMultiPayload();
          v27((uint64_t *)v45);
          sub_23AA8A05C(v45, &qword_2542E21C0);
          v46 = v37;
LABEL_36:
          sub_23AA937BC(v46, type metadata accessor for VFSItem);
          v31 = &qword_2542E72C0;
          v32 = v34;
          return sub_23AA8A05C(v32, v31);
        }
        __break(1u);
        goto LABEL_38;
      }
      if (v38)
      {
        if (v40 == 2 && v39 == 1)
          goto LABEL_25;
      }
      else if (v40 == 2 && !v39)
      {
        goto LABEL_25;
      }
    }
    else
    {
      v41 = (uint64_t)v21;
      if (!*(_BYTE *)(v37 + 24) && (_DWORD)v38 == (_DWORD)v39)
        goto LABEL_25;
    }
LABEL_27:
    v47 = v37 + v9[7];
    v48 = *(int *)(type metadata accessor for ItemMetadata() + 44);
    if (*(_BYTE *)(v47 + v48) == (v61 & 1))
    {
LABEL_35:
      sub_23AA907B0(v37, v41, type metadata accessor for VFSItem);
      swift_storeEnumTagMultiPayload();
      v27((uint64_t *)v41);
      sub_23AA8A05C(v41, &qword_2542E21C0);
      v46 = v37;
      goto LABEL_36;
    }
    v49 = v37 + v9[9];
    v65 = *(_QWORD *)v49;
    v50 = v37 + v9[14];
    if (*(_BYTE *)(v50 + 4))
      v51 = 0;
    else
      v51 = *(_DWORD *)v50;
    v52 = *(_DWORD *)(v49 + 8);
    v44 = v59;
    v53 = (void *)swift_retain();
    if (objc_sync_enter(v53))
LABEL_39:
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v44);
    v54 = *(_QWORD *)(v44 + 160);
    swift_retain();
    if (objc_sync_exit((id)v44))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, v44);
    swift_release();
    v44 = *(unsigned int *)(v54 + 16);
    v55 = swift_release();
    MEMORY[0x24BDAC7A8](v55);
    v56 = v61 & 1;
    *((_BYTE *)&v57 - 16) = v61 & 1;
    v67 = 0;
    v68 = 1;
    v69 = v65;
    v70 = 0;
    v71 = __PAIR64__(v52, v51);
    *(_QWORD *)&v72 = 0;
    sub_23B0E0C9C((uint64_t)&v69, v44, 2129920, 0, (uint64_t)&v67, (uint64_t)sub_23B19D8CC, (uint64_t)(&v57 - 4));
    v34 = v63;
    if ((v68 & 1) == 0)
    {
      *(_BYTE *)(v47 + v48) = v56;
      v41 = (uint64_t)v21;
      v37 = v62;
      goto LABEL_35;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v25 = *v24;
  *v21 = (uint64_t)*v24;
  swift_storeEnumTagMultiPayload();
  v26 = v25;
  v66(v21);

LABEL_5:
  v31 = &qword_2542E21C0;
  v32 = (uint64_t)v21;
  return sub_23AA8A05C(v32, v31);
}

void sub_23B177C20(unsigned int a1, _BYTE *a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  char v49;
  id v50;
  char v51;
  id v52;
  char v53;
  id v54;
  char v55;
  _BYTE *v56;
  void *v57;
  uint64_t (*v58)();
  uint64_t_t *st_qspare;
  uint64_t v60;
  uint64_t inited;
  uint64_t v62;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v64;
  dev_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  char *v71;
  id v72;
  char *v73;
  int v74;
  int v75;
  int v76;
  int v77;
  id v78;
  void *v79;
  id v80;
  void *v81;
  id v82;
  char v83;
  uint64_t v84;
  char *v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  int v106;
  uint64_t v107;
  void *v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  stat v115;
  uint64_t v116;

  v8 = v7;
  v107 = a7;
  v106 = a5;
  v104 = a4;
  v105 = a3;
  v112 = a2;
  v109 = a1;
  v116 = *MEMORY[0x24BDAC8D0];
  v111 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v111);
  v98 = (uint64_t)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_23B1C5570();
  v102 = *(_QWORD *)(v103 - 8);
  v11 = MEMORY[0x24BDAC7A8](v103);
  v13 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v101 = (char *)&v88 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v88 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v91 = (uint64_t)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v95 = (uint64_t)&v88 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v96 = (uint64_t)&v88 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v99 = (uint64_t)&v88 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v88 - v27;
  v29 = sub_23B1C5A08();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v90 = (char *)&v88 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v92 = (char *)&v88 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v93 = (char *)&v88 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v94 = (char *)&v88 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v88 - v39;
  v114 = 0;
  v41 = (void *)swift_retain();
  if (objc_sync_enter(v41))
    goto LABEL_55;
  v110 = a6;
  v97 = v13;
  v100 = v17;
  v42 = v29;
  swift_retain();
  if (objc_sync_exit(v8))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v8);
  swift_release();
  v43 = swift_release();
  if ((v112[*(int *)(v111 + 72)] & 1) != 0)
  {
    sub_23AA8EFC8(v110, (uint64_t)v28, (uint64_t *)&unk_2542E6740);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v40, v28, v29);
      type metadata accessor for NSFileProviderError(0);
      v113 = -2008;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
      *(_QWORD *)(inited + 32) = sub_23B1C63E0();
      *(_QWORD *)(inited + 40) = v62;
      *(_QWORD *)(inited + 72) = v29;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 48));
      (*(void (**)(uint64_t *, char *, uint64_t))(v30 + 16))(boxed_opaque_existential_0, v40, v29);
      sub_23AAE9EB4(inited);
      sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
      sub_23B1C5864();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v29);
      return;
    }
    sub_23AA8A05C((uint64_t)v28, (uint64_t *)&unk_2542E6740);
    type metadata accessor for NSFileProviderError(0);
    v113 = -2008;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
    sub_23B1C5864();
    goto LABEL_51;
  }
  MEMORY[0x24BDAC7A8](v43);
  v44 = v109;
  *((_DWORD *)&v88 - 12) = v109;
  v89 = v45;
  *(&v88 - 5) = v45;
  *(&v88 - 4) = (uint64_t)&v114;
  *(&v88 - 3) = v104;
  *((_DWORD *)&v88 - 4) = v105;
  *(&v88 - 1) = (uint64_t)v8;
  v46 = v108;
  sub_23B1A4A98(v107, v106, (uint64_t)sub_23B1A0DDC, (uint64_t)(&v88 - 8));
  v47 = v46;
  if (v46)
  {
    v48 = v46;
    v115.st_dev = sub_23B1C54E0();
    sub_23AB6CD48();
    v49 = sub_23B1C575C();

    if ((v49 & 1) != 0 && *v112 - 1 >= 2)
    {

      v64 = v99;
      sub_23AA8EFC8(v110, v99, (uint64_t *)&unk_2542E6740);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v64, 1, v29) != 1)
      {
        v71 = v94;
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v94, v64, v29);
        v57 = (void *)sub_23B1C5954();
        v47 = (id)FPMissingAllowsEvictingCapabilitiesError();

        if (v47)
          goto LABEL_43;
        __break(1u);
        goto LABEL_27;
      }
      sub_23AA8A05C(v64, (uint64_t *)&unk_2542E6740);
      v65 = 22;
    }
    else
    {
      v50 = v46;
      v115.st_dev = sub_23B1C5498();
      v51 = sub_23B1C575C();

      if ((v51 & 1) == 0 || *v112 - 1 < 2)
      {
        v52 = v46;
        v115.st_dev = sub_23B1C54EC();
        v53 = sub_23B1C575C();

        if ((v53 & 1) == 0 || *v112 - 1 < 2)
        {
          v54 = v46;
          v115.st_dev = sub_23B1C54F8();
          v55 = sub_23B1C575C();

          v42 = v103;
          if ((v55 & 1) == 0)
            goto LABEL_29;
          v56 = v112;
          LODWORD(v57) = *v112;
          v58 = type metadata accessor for ItemMetadata;
          st_qspare = v115.st_qspare;
          if ((_DWORD)v57 == 2)
          {
            v60 = v98;
            sub_23AA907B0((uint64_t)v112, v98, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
LABEL_28:
            sub_23AA937BC(v60, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
            goto LABEL_29;
          }
LABEL_27:
          v60 = *(st_qspare - 32);
          sub_23AA907B0((uint64_t)v56, v60, (uint64_t (*)(_QWORD))v58);
          if ((_DWORD)v57 == 1)
            goto LABEL_28;
          v83 = *(_BYTE *)(v60 + *(int *)(v111 + 108));
          sub_23AA937BC(v60, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
          if ((v83 & 1) != 0)
          {
LABEL_29:
            *(_QWORD *)&v115.st_dev = v47;
            v72 = v47;
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
            v73 = v101;
            if (!swift_dynamicCast())
            {
LABEL_41:

              return;
            }
            v8 = v97;
            (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v97, v73, v42);
            sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
            sub_23B1C5840();
            v74 = sub_23B1C5E70();
            if (v74 != sub_23B1C5E70())
            {
              v75 = sub_23B1C5E70();
              if (v75 != sub_23B1C5E70())
              {
                v76 = sub_23B1C5E70();
                if (v76 != sub_23B1C5E70())
                {
                  v77 = sub_23B1C5E70();
                  if (v77 != sub_23B1C5E70())
                  {
LABEL_40:
                    (*(void (**)(char *, uint64_t))(v102 + 8))(v8, v42);
                    goto LABEL_41;
                  }
                }
              }
            }

            if (*v112 == 1)
            {
              v78 = objc_msgSend((id)objc_opt_self(), sel_fp_nonEvictableChildrenErrorWithFD_trashIno_busyIno_, v44, v89, v114);
LABEL_39:
              swift_willThrow();
              goto LABEL_40;
            }
LABEL_38:
            sub_23B1C5558();
            goto LABEL_39;
          }

          memset(&v115, 0, 28);
          memset(&v115.st_atimespec, 0, 112);
          if (fstat(v44, &v115) || v115.st_nlink < 2u)
            goto LABEL_49;
          v84 = v91;
          sub_23AA8EFC8(v110, v91, (uint64_t *)&unk_2542E6740);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v84, 1, v29) == 1)
          {
            sub_23AA8A05C(v84, (uint64_t *)&unk_2542E6740);
LABEL_49:
            LODWORD(v113) = 2;
            sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
            sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
            goto LABEL_50;
          }
          v71 = v90;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v90, v84, v29);
          v86 = (void *)sub_23B1C5954();
          v87 = (id)FPEvictionOnItemWithHardlinkError();

          if (!v87)
            __break(1u);
LABEL_43:
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v30 + 8))(v71, v29);
          return;
        }

        v69 = v95;
        sub_23AA8EFC8(v110, v95, (uint64_t *)&unk_2542E6740);
        v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v69, 1, v29);
        v42 = v103;
        if (v70 == 1)
        {
          sub_23AA8A05C(v69, (uint64_t *)&unk_2542E6740);
          v115.st_dev = 31;
          sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
          sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
LABEL_50:
          v85 = v100;
          sub_23B1C5864();
          sub_23B1C5558();
          (*(void (**)(char *, uint64_t))(v102 + 8))(v85, v42);
          goto LABEL_51;
        }
        v71 = v92;
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v92, v69, v29);
        v81 = (void *)sub_23B1C5954();
        v82 = (id)FPEvictionOnItemWithHardlinkError();

        if (v82)
          goto LABEL_43;
        __break(1u);
LABEL_55:
        sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v8);
      }

      v66 = v96;
      sub_23AA8EFC8(v110, v96, (uint64_t *)&unk_2542E6740);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v66, 1, v29) != 1)
      {
        v71 = v93;
        (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v93, v66, v29);
        v79 = (void *)sub_23B1C5954();
        v80 = (id)FPEvictionOnBusyItemError();

        if (!v80)
        {
          __break(1u);
          goto LABEL_38;
        }
        goto LABEL_43;
      }
      sub_23AA8A05C(v66, (uint64_t *)&unk_2542E6740);
      v65 = 16;
    }
    v115.st_dev = v65;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    v67 = v100;
    v68 = v103;
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v102 + 8))(v67, v68);
LABEL_51:
    swift_willThrow();
  }
}

uint64_t sub_23B1789D4@<X0>(int a1@<W5>, _QWORD *a2@<X6>, _DWORD *a3@<X8>)
{
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  void *v8;
  int v9;
  uint64_t result;
  _QWORD aBlock[6];
  int v12;

  v12 = a1;
  swift_retain();
  if (objc_sync_enter(a2))
LABEL_5:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  v5 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  swift_release();
  v6 = *(const void **)(v5 + 56);
  _Block_copy(v6);
  swift_release();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  a2 = (_QWORD *)swift_allocObject();
  a2[2] = sub_23B1A1FB8;
  a2[3] = v7;
  aBlock[4] = sub_23AD035D8;
  aBlock[5] = a2;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA7E744;
  aBlock[3] = &block_descriptor_421_0;
  v8 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v9 = fpfs_evict();
  _Block_release(v8);
  swift_release();
  *a3 = v9;
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v7 & 1) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_23B178BCC(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  _QWORD *v37;

  v34 = a3;
  v35 = a4;
  v36 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v31[-v10];
  v12 = type metadata accessor for VFSItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v16 = &v31[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v18 = &v31[-v17];
  sub_23AA907B0(a1, (uint64_t)&v31[-v17], type metadata accessor for VFSItem);
  sub_23AC380C8(v11);
  v33 = *(_QWORD *)a1;
  v32 = *(unsigned __int8 *)(a1 + 8);
  sub_23AA907B0(a1, (uint64_t)v16, type metadata accessor for VFSItem);
  sub_23AA8EFC8((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_2542E6740);
  v19 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (*(unsigned __int8 *)(v6 + 80) + v20 + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v22 = swift_allocObject();
  v23 = v35;
  *(_QWORD *)(v22 + 16) = v34;
  *(_QWORD *)(v22 + 24) = v23;
  sub_23AA94050((uint64_t)v16, v22 + v19, type metadata accessor for VFSItem);
  v24 = v22 + v20;
  v25 = v37;
  *(_QWORD *)v24 = v37;
  *(_BYTE *)(v24 + 8) = v36;
  v26 = v25;
  sub_23AA724E8((uint64_t)v9, v22 + v21, (uint64_t *)&unk_2542E6740);
  swift_retain();
  swift_retain();
  v27 = sub_23B19695C((uint64_t)v11);
  if (v27 >> 62)
    v28 = sub_23B1C7088();
  else
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  v29 = v28 == 0;
  swift_retain();
  sub_23B1950BC(v33, v32, v27, v29, v26, (void (*)(_QWORD))sub_23B1A08C4, v22);
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2542E6740);
  return sub_23AA937BC((uint64_t)v18, type metadata accessor for VFSItem);
}

uint64_t sub_23B178E48(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, _QWORD *a5, char a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  int *v16;
  int v17;
  int v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];
  char v24;
  uint64_t v25;
  int v26;
  char v27;
  _QWORD v28[2];
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  if (a1)
    return a2();
  v13 = type metadata accessor for VFSItem(0);
  v14 = (uint64_t *)(a4 + *(int *)(v13 + 36));
  v15 = *v14;
  v16 = (int *)(a4 + *(int *)(v13 + 56));
  if (*((_BYTE *)v16 + 4))
    v17 = 0;
  else
    v17 = *v16;
  v18 = *((_DWORD *)v14 + 2);
  v19 = (void *)swift_retain();
  if (objc_sync_enter(v19))
LABEL_10:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a5);
  v26 = v17;
  v20 = a5[20];
  swift_retain();
  if (objc_sync_exit(a5))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a5);
  swift_release();
  v21 = *(unsigned int *)(v20 + 16);
  v22 = swift_release();
  MEMORY[0x24BDAC7A8](v22);
  v23[2] = a5;
  v23[3] = a4;
  v24 = a6;
  v25 = a7;
  v27 = 1;
  v28[0] = v15;
  v28[1] = 0;
  v29 = v26;
  v30 = v18;
  v31 = 0;
  v32 = 0;
  a5 = 0;
  sub_23B0E1B48((uint64_t)v28, v21, 2129920, 2, (uint64_t)&v27, (uint64_t)sub_23B1A0A5C, (uint64_t)v23);
  if ((v27 & 1) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  return a2();
}

void sub_23B179030(unsigned int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  _BYTE *v8;
  _BYTE v9[248];
  _BYTE v10[248];

  v8 = (_BYTE *)(a3 + *(int *)(type metadata accessor for VFSItem(0) + 28));
  sub_23AAF8E48((uint64_t)v10);
  sub_23AA724E8((uint64_t)v10, (uint64_t)v9, &qword_2542E5050);
  sub_23B177C20(a1, v8, 0, 0, a4, a5, (uint64_t)v9);
}

uint64_t sub_23B1790D4(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  dispatch_group_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  uint64_t v23;

  if (*(_BYTE *)(a1 + *(int *)(type metadata accessor for VFSItem(0) + 28)) != 1)
    return sub_23B178BCC(a1, a2, a3, a4);
  v9 = dispatch_group_create();
  v23 = a3;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v4;
  *(_BYTE *)(v10 + 32) = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  v12 = v9;
  swift_retain();
  dispatch_group_enter(v12);
  v13 = *(_QWORD *)a1;
  v14 = *(_BYTE *)(a1 + 8);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = v12;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_23B1A08A8;
  *(_QWORD *)(v16 + 24) = v15;
  *(_QWORD *)(v16 + 32) = v4;
  *(_QWORD *)(v16 + 40) = v13;
  *(_BYTE *)(v16 + 48) = v14;
  *(_QWORD *)(v16 + 56) = 0;
  *(_QWORD *)(v16 + 64) = 0;
  v17 = a4;
  *(_QWORD *)(v16 + 72) = sub_23B1A0874;
  *(_QWORD *)(v16 + 80) = v10;
  v18 = v12;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23B191FD4(v13, v14, 0, (uint64_t)sub_23B1A0874, v10, (uint64_t)sub_23B1A08B4, v16);
  swift_release();
  swift_release();
  v19 = *(void **)(v4 + 216);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v23;
  v20[3] = v17;
  v20[4] = v11;
  swift_retain();
  v21 = v19;
  swift_retain();
  sub_23AA81A30((uint64_t)"_evict(_:evictionReason:completion:)", 36, 2, 0, v21, (uint64_t)sub_23ACF8028, (uint64_t)v20);

  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_23B179314(uint64_t a1, NSObject *a2, _QWORD *a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  NSObject *v51;
  dispatch_group_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  NSObject *v56;
  _QWORD *v57;
  id v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  _QWORD *v74;
  uint64_t v75;
  void *v76;
  _QWORD *v77;
  uint64_t v78;
  id v79;
  NSObject *v80;
  uint64_t v81;
  uint64_t *v82;
  NSObject *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  int v90;
  int v91;
  char *v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(uint64_t, uint64_t, uint64_t);
  void (*v105)(char *, uint64_t, uint64_t);
  void (*v106)(char *, char *, uint64_t);
  char *v107;
  NSObject *v108;
  void (*v109)(char *, uint64_t, uint64_t);
  char *v110;
  NSObject *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  void *v121;
  void *v122;
  id v123;
  char *v124;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  __int128 v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  id v149;
  NSObject *v150;
  char *v151;
  NSObject *v152;
  uint64_t v153;
  int *v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD v167[2];
  int v168;
  int v169;
  char v170;
  _QWORD v171[2];
  int v172;
  int v173;
  char v174;
  uint64_t v175;

  v156 = a4;
  v175 = *MEMORY[0x24BDAC8D0];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6760);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_23B1C5A08();
  v158 = *(_QWORD *)(v157 - 8);
  v10 = MEMORY[0x24BDAC7A8](v157);
  v127 = (char *)&v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v131 = (char *)&v126 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v128 = (char *)&v126 - v14;
  v146 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v159 = *(_QWORD *)(v146 - 8);
  v15 = MEMORY[0x24BDAC7A8](v146);
  v129 = (uint64_t)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v135 = (char *)&v126 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v134 = (char *)&v126 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v144 = (uint64_t)&v126 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v143 = (uint64_t)&v126 - v24;
  v145 = v25;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v126 - v26;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v28);
  v155 = (uint64_t)&v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = (int *)type metadata accessor for VFSItem(0);
  v31 = a1;
  v32 = *((_QWORD *)v30 - 1);
  v33 = *(_QWORD *)(v32 + 64);
  v34 = MEMORY[0x24BDAC7A8](v31);
  v142 = (uint64_t)&v126 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v162 = (uint64_t)&v126 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v126 - v38;
  v40 = *(_QWORD *)(v37 + 16);
  if (v40)
  {
    v140 = *(unsigned __int8 *)(v32 + 80);
    v160 = v27;
    v41 = (v140 + 32) & ~v140;
    v166 = a3;
    v42 = v37 + v41;
    v43 = (uint64_t)a3 + qword_2542EDF28;
    v126 = v37;
    swift_bridgeObjectRetain();
    v141 = v43;
    swift_beginAccess();
    v147 = 0;
    v153 = *(_QWORD *)(v32 + 72);
    v133 = &v174;
    v132 = &v170;
    v139 = v41;
    v44 = (v33 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
    v137 = v44 + 8;
    v138 = v44;
    v136 = v44 + 9;
    v130 = xmmword_23B1CE680;
    v152 = a2;
    v151 = v9;
    v45 = (uint64_t)v160;
    v154 = v30;
    v161 = v39;
    while (1)
    {
      sub_23AA907B0(v42, (uint64_t)v39, type metadata accessor for VFSItem);
      dispatch_group_enter(a2);
      v49 = swift_allocObject();
      *(_QWORD *)(v49 + 16) = a2;
      v50 = v39[v30[7]];
      v164 = v40;
      v165 = v42;
      v163 = v49;
      if (v50 == 1)
      {
        v51 = a2;
        v52 = dispatch_group_create();
        v53 = swift_allocObject();
        v54 = v166;
        *(_QWORD *)(v53 + 16) = v52;
        *(_QWORD *)(v53 + 24) = v54;
        *(_BYTE *)(v53 + 32) = v156;
        v55 = swift_allocObject();
        *(_QWORD *)(v55 + 16) = 0;
        v56 = v52;
        swift_retain();
        dispatch_group_enter(v56);
        v57 = v54;
        v58 = *(id *)v39;
        v59 = v39[8];
        v60 = swift_allocObject();
        *(_QWORD *)(v60 + 16) = v55;
        *(_QWORD *)(v60 + 24) = v56;
        v61 = swift_allocObject();
        *(_QWORD *)(v61 + 16) = sub_23B1A1FBC;
        *(_QWORD *)(v61 + 24) = v60;
        *(_QWORD *)(v61 + 32) = v57;
        *(_QWORD *)(v61 + 40) = v58;
        *(_BYTE *)(v61 + 48) = v59;
        *(_QWORD *)(v61 + 56) = 0;
        *(_QWORD *)(v61 + 64) = 0;
        *(_QWORD *)(v61 + 72) = sub_23B1A1E64;
        *(_QWORD *)(v61 + 80) = v53;
        v62 = *(_QWORD *)(v141 + 8);
        v63 = __CFADD__(v62, 1);
        v64 = v62 + 1;
        if (v63)
        {
          __break(1u);
LABEL_30:
          __break(1u);
        }
        v65 = v61;
        *(_QWORD *)(v141 + 8) = v64;
        v148 = v57[28];
        v149 = (id)v57[27];
        v66 = sub_23B1C60A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v155, 1, 1, v66);
        v67 = swift_allocObject();
        *(_QWORD *)(v67 + 16) = sub_23B1A08B4;
        *(_QWORD *)(v67 + 24) = v65;
        v68 = swift_allocObject();
        *(_QWORD *)(v68 + 16) = v166;
        *(_QWORD *)(v68 + 24) = v58;
        *(_BYTE *)(v68 + 32) = v59;
        *(_QWORD *)(v68 + 40) = sub_23B1A08B4;
        *(_QWORD *)(v68 + 48) = v65;
        *(_QWORD *)(v68 + 56) = 0;
        *(_QWORD *)(v68 + 64) = sub_23B1A1E64;
        *(_QWORD *)(v68 + 72) = v53;
        v69 = (_QWORD *)swift_allocObject();
        v69[2] = sub_23AAB5414;
        v69[3] = v67;
        v69[4] = v148;
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        v150 = v56;
        swift_retain();
        swift_retain();
        v70 = v149;
        swift_retain();
        swift_retain();
        v71 = v155;
        v149 = (id)v53;
        v72 = v55;
        v73 = v154;
        sub_23AA9086C(v70, v155, sub_23B1A0990, v69, (uint64_t)sub_23B1A0988, v68);

        swift_release();
        v74 = v166;
        swift_release();
        swift_release();
        v75 = v71;
        v30 = v73;
        sub_23AA8A05C(v75, &qword_2542DD460);
        swift_release();
        swift_release();
        v76 = (void *)v74[27];
        v77 = (_QWORD *)swift_allocObject();
        v78 = v163;
        v77[2] = sub_23ACFA470;
        v77[3] = v78;
        v77[4] = v72;
        swift_retain();
        v79 = v76;
        swift_retain();
        v80 = v150;
        sub_23AA81A30((uint64_t)"_evict(_:evictionReason:completion:)", 36, 2, 0, v79, (uint64_t)sub_23B1A1F74, (uint64_t)v77);
        swift_release();

        swift_release();
        swift_release();

        swift_release();
        a2 = v152;
        v9 = v151;
        v45 = (uint64_t)v160;
        v47 = v164;
        goto LABEL_7;
      }
      v81 = v162;
      sub_23AA907B0((uint64_t)v39, v162, type metadata accessor for VFSItem);
      v150 = (v81 + v30[12]);
      v82 = &qword_2542E6760;
      sub_23AA8EFC8((uint64_t)v150, (uint64_t)v9, &qword_2542E6760);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48))(v9, 1, v146) == 1
        || (v82 = (uint64_t *)&unk_2542E6740,
            (*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v9, 1, v157) == 1))
      {
        v83 = a2;
        v84 = sub_23AA8A05C((uint64_t)v9, v82);
        v85 = v162;
        v86 = (uint64_t *)(v162 + v30[9]);
        v87 = *v86;
        v88 = v30[13];
        v89 = (int *)(v162 + v30[14]);
        if (*((_BYTE *)v89 + 4))
          v90 = 0;
        else
          v90 = *v89;
        v91 = *((_DWORD *)v86 + 2);
        v171[0] = *v86;
        v171[1] = 0;
        v172 = v90;
        v173 = v91;
        v92 = v133;
        *(_QWORD *)v133 = 0;
        *((_QWORD *)v92 + 1) = 0;
        v93 = *(unsigned int *)(v85 + v88);
        MEMORY[0x24BDAC7A8](v84);
        *(&v126 - 2) = (uint64_t)v171;
        *((_DWORD *)&v126 - 2) = v93;
        *((_BYTE *)&v126 - 4) = v94;
        v95 = v158;
        v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v158 + 56);
        v97 = (uint64_t)v135;
        v98 = v157;
        v96(v135, 1, 1, v157);
        v167[0] = v87;
        v167[1] = 0;
        v168 = v90;
        v169 = v91;
        v99 = v132;
        *(_QWORD *)v132 = 0;
        *((_QWORD *)v99 + 1) = 0;
        v100 = v147;
        sub_23B0E0928((uint64_t)v167, v93, 0x200000, 0, v97, (uint64_t)sub_23AAB7D90, (uint64_t)(&v126 - 4));
        if (v100)
        {
          sub_23AA8A05C(v97, (uint64_t *)&unk_2542E6740);

          v101 = (uint64_t)v134;
          v96(v134, 1, 1, v98);
          v147 = 0;
          v102 = v98;
        }
        else
        {
          v103 = v129;
          sub_23AA8EFC8(v97, v129, (uint64_t *)&unk_2542E6740);
          v104 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
          if (v104(v103, 1, v98) == 1)
            goto LABEL_30;
          v147 = 0;
          v105 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 32);
          v101 = (uint64_t)v134;
          v105(v134, v103, v98);
          sub_23AA8A05C(v97, (uint64_t *)&unk_2542E6740);
          v96((char *)v101, 0, 1, v98);
          if (v104(v101, 1, v98) != 1)
          {
            v109 = v105;
            v110 = v127;
            v109(v127, v101, v98);
            v111 = v150;
            sub_23AA8A05C((uint64_t)v150, &qword_2542E6760);
            (*(void (**)(NSObject *, char *, uint64_t))(v95 + 16))(v111, v110, v98);
            v96((char *)v111, 0, 1, v98);
            (*(void (**)(NSObject *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v111, 0, 1, v146);
            v45 = (uint64_t)v160;
            v109(v160, (uint64_t)v110, v98);
            v96((char *)v45, 0, 1, v98);
            v102 = v98;
            v39 = v161;
            goto LABEL_24;
          }
          v102 = v98;
        }
        sub_23AA8A05C(v101, (uint64_t *)&unk_2542E6740);
        v45 = (uint64_t)v160;
        v96(v160, 1, 1, v102);
        v95 = v158;
        v39 = v161;
      }
      else
      {
        v95 = v158;
        v106 = *(void (**)(char *, char *, uint64_t))(v158 + 32);
        v107 = v128;
        v102 = v157;
        v106(v128, v9, v157);
        v106((char *)v45, v107, v102);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v45, 0, 1, v102);
        v108 = a2;
      }
LABEL_24:
      v150 = *(NSObject **)v39;
      LODWORD(v149) = v39[8];
      v112 = v142;
      sub_23AA907B0((uint64_t)v39, v142, type metadata accessor for VFSItem);
      v113 = v143;
      sub_23AA8EFC8(v45, v143, (uint64_t *)&unk_2542E6740);
      v114 = (v136 + *(unsigned __int8 *)(v159 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
      v115 = swift_allocObject();
      v116 = v163;
      *(_QWORD *)(v115 + 16) = sub_23ACFA470;
      *(_QWORD *)(v115 + 24) = v116;
      sub_23AA94050(v112, v115 + v139, type metadata accessor for VFSItem);
      v117 = v166;
      *(_QWORD *)(v115 + v138) = v166;
      *(_BYTE *)(v115 + v137) = v156;
      sub_23AA724E8(v113, v115 + v114, (uint64_t *)&unk_2542E6740);
      v118 = v144;
      sub_23AA8EFC8(v45, v144, (uint64_t *)&unk_2542E6740);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v118, 1, v102) == 1)
      {
        swift_retain();
        swift_retain();
        sub_23AA8A05C(v118, (uint64_t *)&unk_2542E6740);
        v46 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        v119 = v131;
        (*(void (**)(char *, uint64_t, uint64_t))(v95 + 32))(v131, v118, v102);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
        v120 = swift_allocObject();
        *(_OWORD *)(v120 + 16) = v130;
        v121 = (void *)objc_opt_self();
        swift_retain();
        swift_retain();
        v122 = (void *)sub_23B1C5954();
        v123 = objc_msgSend(v121, sel_writingIntentWithURL_options_, v122, 0x100000);

        *(_QWORD *)(v120 + 32) = v123;
        v167[0] = v120;
        sub_23B1C671C();
        v46 = v167[0];
        v124 = v119;
        v45 = (uint64_t)v160;
        (*(void (**)(char *, uint64_t))(v95 + 8))(v124, v157);
      }
      v30 = v154;
      v47 = v164;
      if (v46 >> 62)
      {
        swift_bridgeObjectRetain();
        v48 = sub_23B1C7088();
        swift_bridgeObjectRelease();
      }
      else
      {
        v48 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_retain();
      sub_23B1950BC((uint64_t)v150, (int)v149, v46, v48 == 0, v117, (void (*)(_QWORD))sub_23B1A08C4, v115);
      swift_bridgeObjectRelease();
      swift_release_n();
      sub_23AA8A05C(v45, (uint64_t *)&unk_2542E6740);
      sub_23AA937BC(v162, type metadata accessor for VFSItem);
      swift_release();
      v9 = v151;
      a2 = v152;
LABEL_7:
      v39 = v161;
      sub_23AA937BC((uint64_t)v161, type metadata accessor for VFSItem);
      v42 = v165 + v153;
      v40 = v47 - 1;
      if (!v40)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
  }
  return 0;
}

void sub_23B17A1DC(void *a1, uint64_t a2, NSObject *a3)
{
  void *v6;
  id v7;

  swift_beginAccess();
  v6 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;
  v7 = a1;

  dispatch_group_leave(a3);
}

id sub_23B17A244(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  int v31;
  id v32;

  v31 = a2;
  v30 = a1;
  v7 = type metadata accessor for VFSItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v13;
  v32 = objc_msgSend((id)objc_opt_self(), sel_discreteProgressWithTotalUnitCount_, 1);
  objc_msgSend(v32, sel_setCancellable_, 0);
  v14 = *(void **)(v4 + 216);
  v27 = *(_QWORD *)(v4 + 224);
  v28 = v14;
  v15 = sub_23B1C60A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v13, 1, 1, v15);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  v17 = a3;
  v18 = a4;
  sub_23AA907B0(v30, (uint64_t)v10, type metadata accessor for VFSItem);
  v19 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v20 = v19 + v9;
  v21 = swift_allocObject();
  v22 = (v20 & 0xFFFFFFFFFFFFFFF8) + v21;
  *(_QWORD *)(v21 + 16) = v4;
  sub_23AA94050((uint64_t)v10, v21 + v19, type metadata accessor for VFSItem);
  *(_BYTE *)(v21 + v20) = v31;
  *(_QWORD *)(v22 + 8) = v17;
  *(_QWORD *)(v22 + 16) = v18;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = sub_23AA956C8;
  v23[3] = v16;
  v23[4] = v27;
  swift_retain_n();
  v24 = v28;
  swift_retain();
  swift_retain();
  swift_retain();
  v25 = (uint64_t)v29;
  sub_23AA9086C(v24, (uint64_t)v29, sub_23AC279F4, v23, (uint64_t)sub_23B19D5AC, v21);

  swift_release();
  swift_release();
  swift_release();
  sub_23AA8A05C(v25, &qword_2542DD460);
  return v32;
}

uint64_t sub_23B17A4B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v9 = type metadata accessor for VFSItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA907B0(a2, (uint64_t)v12, type metadata accessor for VFSItem);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  sub_23AA94050((uint64_t)v12, v15 + v13, type metadata accessor for VFSItem);
  v16 = (_QWORD *)(v15 + v14);
  *v16 = a4;
  v16[1] = a5;
  swift_retain();
  sub_23B1790D4(a2, a3, (uint64_t)sub_23B19D85C, v15);
  return swift_release();
}

uint64_t sub_23B17A5BC(void *a1, uint64_t a2, uint64_t (*a3)(void *), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = type metadata accessor for VFSItem(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5E4C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v15 = a1;
    v16 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AA907B0(a2, (uint64_t)v10, type metadata accessor for VFSItem);
    v17 = a1;
    v18 = a1;
    v19 = sub_23B1C5E40();
    v20 = sub_23B1C6AA0();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v33 = v11;
      v22 = v21;
      v30 = (_QWORD *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v37 = v31;
      *(_DWORD *)v22 = 136315394;
      v23 = sub_23AA96F18(*(_QWORD *)v10, v10[8]);
      v32 = v12;
      v36 = sub_23AABEC68(v23, v24, &v37);
      v34 = a4;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AA937BC((uint64_t)v10, type metadata accessor for VFSItem);
      *(_WORD *)(v22 + 12) = 2112;
      swift_getErrorValue();
      v25 = sub_23B0D9CF0(v35);
      v36 = (uint64_t)v25;
      sub_23B1C6CBC();
      v26 = v30;
      *v30 = v25;

      _os_log_impl(&dword_23AA66000, v19, v20, "Eviction of %s failed with %@", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v26, -1, -1);
      v27 = v31;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v27, -1, -1);
      MEMORY[0x23B8614BC](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v33);
    }
    else
    {

      sub_23AA937BC((uint64_t)v10, type metadata accessor for VFSItem);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  return a3(a1);
}

void sub_23B17A8DC(id a1, char a2, void (*a3)(id), uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8, void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  id v19;
  id v20;
  void (*v21)(id);
  id v22;

  if ((a2 & 1) != 0)
  {
    v22 = a1;
    a3(a1);
    sub_23ACF6618(a1, 1, (void (*)(id))MEMORY[0x24BEE4EF8]);
  }
  else if (a1)
  {
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a3;
    *(_QWORD *)(v18 + 24) = a4;
    *(_QWORD *)(v18 + 32) = a5;
    *(_QWORD *)(v18 + 40) = a6;
    *(_BYTE *)(v18 + 48) = a7;
    *(_QWORD *)(v18 + 56) = a8;
    *(_QWORD *)(v18 + 64) = a9;
    *(_QWORD *)(v18 + 72) = a10;
    *(_QWORD *)(v18 + 80) = a11;
    sub_23AAFCDA4(a1, 0);
    sub_23AAFCDA4(a1, 0);
    v19 = a9;
    swift_retain();
    swift_retain();
    swift_retain();
    v20 = a8;
    sub_23B191FD4(a6, a7, (uint64_t)a1, a10, a11, (uint64_t)sub_23B1A08B4, v18);
    swift_release();
    v21 = (void (*)(id))MEMORY[0x24BEE4EF8];
    sub_23ACF6618(a1, 0, (void (*)(id))MEMORY[0x24BEE4EF8]);
    sub_23ACF6618(a1, 0, v21);
  }
  else
  {
    a3(0);
  }
}

uint64_t sub_23B17AA44()
{
  return sub_23AF43EA8();
}

uint64_t sub_23B17AA64@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  void *v6;
  uint64_t v7;
  uint64_t result;

  v6 = (void *)swift_retain();
  sub_23B0DBECC(v6, (uint64_t)v6, a1, a2);
  v7 = swift_allocObject();
  swift_weakInit();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v7;
  *(_QWORD *)(result + 24) = a1;
  *(_BYTE *)(result + 32) = a2;
  *a3 = sub_23B1A1B60;
  a3[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_23B17AB04(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;

  v5 = (uint64_t *)(a1 + qword_2542E6A58);
  result = swift_beginAccess();
  v7 = *v5;
  v8 = *(_QWORD *)(*v5 + 16);
  if (v8)
  {
    result = sub_23AA97254(a2, a3);
    if ((v9 & 1) != 0)
      v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * result);
    else
      v8 = 0;
  }
  v10 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v5;
    *v5 = 0x8000000000000000;
    sub_23AD27524(v10, a2, a3, isUniquelyReferenced_nonNull_native);
    *v5 = v12;
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_23B17ABF8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v5 = sub_23B1C602C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C60A4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = result;
    v21 = v9;
    v15 = *(void **)(result + 216);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v14;
    *(_QWORD *)(v16 + 24) = a2;
    *(_BYTE *)(v16 + 32) = a3;
    aBlock[4] = sub_23B1A1B6C;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23AA698FC;
    aBlock[3] = &block_descriptor_503;
    v17 = _Block_copy(aBlock);
    v20 = v6;
    v18 = v17;
    v19 = v15;
    swift_retain();
    sub_23B1C6068();
    v22 = MEMORY[0x24BEE4AF8];
    sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
    sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
    sub_23B1C6DE8();
    MEMORY[0x23B85F470](0, v12, v8, v18);
    _Block_release(v18);
    swift_release();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
    return swift_release();
  }
  return result;
}

uint64_t sub_23B17AE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(uint64_t);
  uint64_t v10;

  v6 = (void *)swift_retain();
  sub_23B0DBEE8(v6, (uint64_t)v6, a2, a3);
  v7 = a1 + qword_2542E6A58;
  result = swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v7 + 16))
  {
    v9 = *(void (**)(uint64_t))(a1 + 64);
    if (v9)
    {
      v10 = swift_retain();
      v9(v10);
      return sub_23AAB7948((uint64_t)v9);
    }
  }
  return result;
}

uint64_t sub_23B17AECC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v5 = (uint64_t *)(a1 + qword_2542E6A58);
  swift_beginAccess();
  v6 = *v5;
  if (!*(_QWORD *)(*v5 + 16) || (v7 = sub_23AA97254(a2, a3), (v8 & 1) == 0))
    sub_23AFF5388((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSFileTree.swift", 123, 2, 3256, a2, a3);
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  v10 = v9 - 1;
  if (v9 != 1)
  {
    if (!__OFSUB__(v9, 1))
    {
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = *v5;
      *v5 = 0x8000000000000000;
      sub_23AD27524(v10, a2, a3, isUniquelyReferenced_nonNull_native);
      *v5 = v18;
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_12;
  }
  swift_beginAccess();
  v11 = sub_23AA97254(a2, a3);
  if ((v12 & 1) != 0)
  {
    a3 = v11;
    v13 = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v5;
    v17 = *v5;
    *v5 = 0x8000000000000000;
    if ((v13 & 1) != 0)
    {
LABEL_6:
      sub_23B186414(a3, v14);
      *v5 = v14;
LABEL_9:
      swift_bridgeObjectRelease();
      return swift_endAccess();
    }
LABEL_12:
    sub_23B18BF1C();
    v14 = v17;
    goto LABEL_6;
  }
  return swift_endAccess();
}

BOOL sub_23B17B050()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;

  v1 = (void *)swift_retain();
  if (objc_sync_enter(v1))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v0);
  v2 = &v0[qword_2542E6A58];
  swift_beginAccess();
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (objc_sync_exit(v0))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v0);
  swift_release();
  return v3 != 0;
}

void sub_23B17B104(uint64_t a1, void (*a2)(id), uint64_t a3, int a4, _QWORD *a5, uint64_t a6, int a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  _QWORD *v49;
  int v50;
  uint64_t v51;
  uint64_t v52[5];
  _QWORD v53[13];

  v48 = a7;
  v47 = a6;
  v49 = a5;
  v50 = a4;
  v9 = type metadata accessor for VFSItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v46 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v51 = (uint64_t)&v46 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (id *)((char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23AA8EFC8(a1, (uint64_t)v20, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = *v20;
    v22 = *v20;
    a2(v21);

    return;
  }
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v10 + 48))(v20, 1, v9) == 1)
  {
    a2(0);
    return;
  }
  v23 = v51;
  sub_23AA94050((uint64_t)v20, v51, type metadata accessor for VFSItem);
  v24 = v23 + *(int *)(v9 + 28);
  v25 = type metadata accessor for ItemMetadata();
  LODWORD(v24) = *(unsigned __int8 *)(v24 + *(int *)(v25 + 84));
  sub_23AA907B0(v23, (uint64_t)v16, type metadata accessor for VFSItem);
  if ((_DWORD)v24)
  {
    sub_23AA937BC((uint64_t)v16, type metadata accessor for VFSItem);
    v26 = v51;
    v27 = v50;
LABEL_7:
    v28 = *(_QWORD *)v26;
    v29 = v26 + *(int *)(v9 + 36);
    v30 = *(_QWORD *)v29;
    v31 = *(unsigned int *)(v29 + 8);
    v32 = *(_QWORD *)(v29 + 16);
    v33 = *(unsigned __int8 *)(v29 + 24);
    v34 = *(_QWORD *)(v26 + 16);
    v35 = *(unsigned __int8 *)(v26 + 24);
    v36 = *(_QWORD *)(v26 + 32);
    v37 = *(_QWORD *)(v26 + 40);
    v53[0] = v30;
    v53[1] = v31;
    v53[2] = v32;
    v53[3] = v33;
    v53[4] = 0;
    v53[5] = v34;
    v53[6] = v35;
    v53[7] = v36;
    v38 = *(_BYTE *)(v26 + 8);
    v53[8] = v37;
    memset(&v53[9], 0, 24);
    swift_bridgeObjectRetain();
    v39 = v49;
    sub_23B157264(v28, v38, (uint64_t)v53, (uint64_t)v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v40 = (void *)swift_retain();
    if (objc_sync_enter(v40))
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v39);
    v41 = v39[20];
    swift_retain();
    if (objc_sync_exit(v39))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v39);
    swift_release();
    v42 = *(unsigned int *)(v41 + 16);
    v43 = swift_release();
    MEMORY[0x24BDAC7A8](v43);
    *((_BYTE *)&v46 - 32) = v27 & 1;
    v44 = v47;
    *(&v46 - 3) = v26;
    *(&v46 - 2) = v44;
    *((_BYTE *)&v46 - 8) = v48;
    sub_23AC3A86C(v52, v42, 0x200000, 0, (uint64_t)sub_23B19D2EC, (uint64_t)(&v46 - 6));
    sub_23AC03E50((uint64_t)v52);
    goto LABEL_14;
  }
  sub_23AA94050((uint64_t)v16, (uint64_t)v13, type metadata accessor for VFSItem);
  v27 = v50;
  if ((v50 & 1) != 0)
  {
    v45 = v13[*(int *)(v9 + 28) + *(int *)(v25 + 60)];
    sub_23AA937BC((uint64_t)v13, type metadata accessor for VFSItem);
    v26 = v51;
    if ((v45 & 1) == 0)
      goto LABEL_7;
  }
  else
  {
    sub_23AA937BC((uint64_t)v13, type metadata accessor for VFSItem);
    v26 = v51;
  }
LABEL_14:
  a2(0);
  sub_23AA937BC(v26, type metadata accessor for VFSItem);
}

uint64_t sub_23B17B598(int a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  int v17;
  uint64_t v18;
  id v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a1;
  v9 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for VFSItem(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA907B0(a3, (uint64_t)v15, v16);
  if ((a2 & 1) == 0)
  {
    v18 = sub_23AA937BC((uint64_t)v15, type metadata accessor for VFSItem);
    goto LABEL_8;
  }
  v34 = v10;
  v35 = v9;
  v32 = a4;
  v33 = a5;
  v17 = v15[*(int *)(v13 + 28)];
  v18 = sub_23AA937BC((uint64_t)v15, type metadata accessor for VFSItem);
  if (v17 != 1)
  {
LABEL_8:
    v28 = v37;
    goto LABEL_9;
  }
  v19 = (id)fpfs_current_or_default_log();
  v20 = v12;
  sub_23B1C5E58();
  v21 = sub_23B1C5E40();
  v22 = sub_23B1C6A88();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v39 = v24;
    *(_DWORD *)v23 = 136315138;
    v25 = sub_23AA96F18(v32, v33);
    v38 = sub_23AABEC68(v25, v26, &v39);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v21, v22, "marking sync root bit for folder %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v24, -1, -1);
    MEMORY[0x23B8614BC](v23, -1, -1);
  }

  v27 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v20, v35);
  v28 = v37;
  v29 = v36;
  MEMORY[0x24BDAC7A8](v27);
  *((_DWORD *)&v31 - 4) = v28;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADA9A1C);
  if (!v29)
  {
    MEMORY[0x24BDAC7A8](result);
    *((_DWORD *)&v31 - 4) = v28;
    v18 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC37660);
LABEL_9:
    MEMORY[0x24BDAC7A8](v18);
    *((_DWORD *)&v31 - 4) = v28;
    return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19D30C);
  }
  return result;
}

uint64_t sub_23B17B88C(uint64_t a1, unsigned __int8 a2, void (*a3)(_QWORD *), uint64_t a4, _QWORD *a5)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD *);
  _QWORD v50[6];
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;

  v48 = a4;
  v49 = a3;
  v47 = a1;
  v6 = a2;
  v56 = *MEMORY[0x24BDAC8D0];
  v45 = type metadata accessor for VFSItem(0);
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v43 = (uint64_t)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v42 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v46 = (uint64_t)v42 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (_QWORD *)((char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v21);
  v25 = (_QWORD *)((char *)v42 - v24);
  if (v6 != 1)
  {
    v31 = (id)FPNotSupportedError();
    if (v31)
    {
      *v25 = v31;
      swift_storeEnumTagMultiPayload();
      v49(v25);
      v32 = &qword_2542E21C0;
      v33 = (uint64_t)v25;
      return sub_23AA8A05C(v33, v32);
    }
    __break(1u);
    goto LABEL_13;
  }
  v26 = (void *)swift_retain();
  if (objc_sync_enter(v26))
    goto LABEL_14;
  v42[1] = v20;
  v27 = a5[20];
  swift_retain();
  if (objc_sync_exit(a5))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a5);
  swift_release();
  v28 = *(unsigned int *)(v27 + 16);
  v29 = swift_release();
  MEMORY[0x24BDAC7A8](v29);
  v42[-4] = a5;
  v30 = v47;
  v42[-3] = v47;
  LOBYTE(v42[-2]) = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  v50[0] = v30;
  memset(&v50[1], 0, 32);
  a5 = 0;
  sub_23B0E1EBC((uint64_t)v50, v28, 1048832, 0, (uint64_t)v13, (uint64_t)sub_23B19D290, (uint64_t)&v42[-6]);
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v11, qword_2542E5250);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) == 1)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a5);
  }
  v34 = v46;
  sub_23AA724E8((uint64_t)v11, v46, &qword_2542E72C0);
  sub_23AA8A05C((uint64_t)v13, qword_2542E5250);
  sub_23AA8EFC8(v34, (uint64_t)v18, &qword_2542E72C0);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48))(v18, 1, v45);
  v36 = v47;
  if (v35 == 1)
  {
    sub_23AA8A05C((uint64_t)v18, &qword_2542E72C0);
    v50[0] = v36;
    LOBYTE(v50[1]) = 1;
    memset(&v50[2], 0, 32);
    v51 = 0u;
    v52 = 0u;
    v53 = 0u;
    v54 = 0u;
    v55 = 0;
    sub_23AAFC630((uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v37 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)v50, v38, (uint64_t *)&unk_2542E0950);
    swift_willThrow();
    sub_23AA8A05C(v34, &qword_2542E72C0);
    *v23 = v37;
    swift_storeEnumTagMultiPayload();
    v39 = v37;
    v49(v23);

    v32 = &qword_2542E21C0;
    v33 = (uint64_t)v23;
  }
  else
  {
    v41 = v43;
    sub_23AA94050((uint64_t)v18, v43, type metadata accessor for VFSItem);
    sub_23AA907B0(v41, (uint64_t)v23, type metadata accessor for VFSItem);
    swift_storeEnumTagMultiPayload();
    v49(v23);
    sub_23AA8A05C((uint64_t)v23, &qword_2542E21C0);
    sub_23AA937BC(v41, type metadata accessor for VFSItem);
    v32 = &qword_2542E72C0;
    v33 = v34;
  }
  return sub_23AA8A05C(v33, v32);
}

uint64_t sub_23B17BDDC@<X0>(int a1@<W0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  void *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  id v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  int v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char isUniquelyReferenced_nonNull_native;
  void *v64;
  void (*v65)(char *, uint64_t);
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  char *v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  int v88;
  int v89;
  uint64_t v90;

  v88 = a4;
  v87 = (void (*)(char *, uint64_t))a3;
  v84 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v76 - v12;
  v14 = sub_23B1C5A08();
  v81 = *(_QWORD *)(v14 - 8);
  v82 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v78 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v80 = (uint64_t)&v76 - v17;
  v18 = type metadata accessor for VFSItem(0);
  v86 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v83 = (uint64_t)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v76 - v24;
  v26 = (void *)swift_retain();
  if (objc_sync_enter(v26))
    goto LABEL_36;
  v85 = v18;
  v27 = (void (*)(char *, uint64_t))a2[20];
  swift_retain();
  if (objc_sync_exit(a2))
    goto LABEL_37;
  swift_release();
  v28 = type metadata accessor for VFSFileTree(0);
  v77 = MEMORY[0x24BDAC7A8](v28);
  *(&v76 - 10) = (void (*)(char *, uint64_t))v77;
  *((_DWORD *)&v76 - 18) = a1;
  *(&v76 - 7) = 0;
  *(&v76 - 6) = 0;
  *(&v76 - 8) = v27;
  *((_BYTE *)&v76 - 40) = 2;
  *(&v76 - 4) = (void (*)(char *, uint64_t))1;
  *(&v76 - 3) = v87;
  *((_BYTE *)&v76 - 16) = v88;
  v31 = 0x100000000;
  if (!v32)
    v31 = 0;
  *(&v76 - 1) = 0;
  v79 = a1;
  sub_23B1AA0D0(a1, 0, v29, v31 | v30, (uint64_t)sub_23AA8AC00, (uint64_t)(&v76 - 12), (uint64_t)v25);
  if (v5)
  {
    v33 = v5;
    v89 = sub_23B1C54A4();
    sub_23AB6CD48();
    v34 = sub_23B1C575C();

    if ((v34 & 1) == 0)
      return swift_release();

    v36 = v85;
    v35 = v86;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v25, 1, 1, v85);
    swift_release();
  }
  else
  {
    swift_release();
    v36 = v85;
    v35 = v86;
  }
  sub_23AA8EFC8((uint64_t)v25, (uint64_t)v23, &qword_2542E72C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v23, 1, v36) == 1)
  {
    sub_23AA8A05C((uint64_t)v23, &qword_2542E72C0);
    return sub_23AA724E8((uint64_t)v25, v84, &qword_2542E72C0);
  }
  v37 = v83;
  sub_23AA94050((uint64_t)v23, v83, type metadata accessor for VFSItem);
  v38 = *(_QWORD *)v37;
  v39 = *(unsigned __int8 *)(v37 + 8);
  if (v39 == 2 && !v38 || v39 == 2 && v38 == 1)
  {
    sub_23AA937BC(v37, type metadata accessor for VFSItem);
    return sub_23AA724E8((uint64_t)v25, v84, &qword_2542E72C0);
  }
  v41 = v37 + *(int *)(v36 + 28);
  if (*(_BYTE *)(v41 + *(int *)(type metadata accessor for ItemMetadata() + 72)) == 1)
  {
    sub_23AA8A05C((uint64_t)v25, &qword_2542E72C0);
    v42 = v37;
LABEL_26:
    v49 = v84;
    sub_23AA94050(v42, v84, type metadata accessor for VFSItem);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v49, 0, 1, v36);
  }
  v43 = (void *)swift_retain();
  if (objc_sync_enter(v43))
    goto LABEL_36;
  swift_retain();
  v44 = objc_sync_exit(a2);
  v45 = v81;
  if (v44)
    goto LABEL_37;
  swift_release();
  sub_23AC380C8(v11);
  swift_release();
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  v47 = v82;
  if (v46(v11, 1, v82) == 1)
  {
    sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2542E6740);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v13, 1, 1, v47);
LABEL_25:
    sub_23AA8A05C((uint64_t)v25, &qword_2542E72C0);
    sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542E6740);
    v42 = v83;
    goto LABEL_26;
  }
  sub_23B1C599C();
  v48 = v82;
  v76 = *(void (**)(char *, uint64_t))(v45 + 8);
  v76(v11, v82);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v13, 0, 1, v48);
  if (v46(v13, 1, v48) == 1)
    goto LABEL_25;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v80, v13, v48);
  v51 = *(_QWORD *)(v83 + 32);
  v50 = *(_QWORD *)(v83 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  if (objc_sync_enter(a2))
    goto LABEL_36;
  v52 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2))
    goto LABEL_37;
  swift_release();
  v53 = v82;
  v54 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v78, v52 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v82);
  swift_release();
  v55 = sub_23B1C63E0();
  sub_23B19295C(v79, v80, v51, v50, v54, v55, v56);
  v57 = (void (*)(uint64_t, uint64_t))v76;
  v76((char *)v54, v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v58 = (void *)swift_retain();
  if (objc_sync_enter(v58))
    goto LABEL_36;
  v59 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2))
    goto LABEL_37;
  swift_release();
  v81 = *(_QWORD *)(v83 + 16);
  v60 = *(_QWORD *)(v83 + 32);
  v61 = *(_QWORD *)(v83 + 40);
  v62 = *(_BYTE *)(v83 + 24);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v90 = *(_QWORD *)(v59 + 72);
  *(_QWORD *)(v59 + 72) = 0x8000000000000000;
  sub_23AD270D4(v81, v62, v60, v61, (uint64_t)v87, v88, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v59 + 72) = v90;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  v64 = (void *)swift_retain();
  if (objc_sync_enter(v64))
LABEL_36:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  v65 = (void (*)(char *, uint64_t))a2[20];
  swift_retain();
  v66 = objc_sync_exit(a2);
  v67 = v80;
  if (v66)
LABEL_37:
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  v68 = swift_release();
  MEMORY[0x24BDAC7A8](v68);
  *(&v76 - 10) = (void (*)(char *, uint64_t))v77;
  v72 = v79;
  *((_DWORD *)&v76 - 18) = v79;
  *(&v76 - 7) = 0;
  *(&v76 - 6) = 0;
  *(&v76 - 8) = v65;
  *((_BYTE *)&v76 - 40) = 2;
  v73 = (uint64_t)v87;
  *(&v76 - 4) = 0;
  *(&v76 - 3) = (void (*)(char *, uint64_t))v73;
  *((_BYTE *)&v76 - 16) = v88;
  v74 = 0x100000000;
  if (!v75)
    v74 = 0;
  *(&v76 - 1) = 0;
  sub_23B1AA0D0(v72, v69, v70, v74 | v71, (uint64_t)sub_23AA8AC00, (uint64_t)(&v76 - 12), v84);
  swift_release();
  v57(v67, v82);
  sub_23AA937BC(v83, type metadata accessor for VFSItem);
  return sub_23AA8A05C((uint64_t)v25, &qword_2542E72C0);
}

uint64_t sub_23B17C6AC(uint64_t a1, unsigned __int8 a2, void (*a3)(_QWORD *), uint64_t a4, _QWORD *a5)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD *);
  _QWORD v50[6];
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;

  v48 = a4;
  v49 = a3;
  v47 = a1;
  v6 = a2;
  v56 = *MEMORY[0x24BDAC8D0];
  v45 = type metadata accessor for VFSItem(0);
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v43 = (uint64_t)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v42 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v46 = (uint64_t)v42 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21C0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (_QWORD *)((char *)v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v21);
  v25 = (_QWORD *)((char *)v42 - v24);
  if (v6 != 1)
  {
    v31 = (id)FPNotSupportedError();
    if (v31)
    {
      *v25 = v31;
      swift_storeEnumTagMultiPayload();
      v49(v25);
      v32 = &qword_2542E21C0;
      v33 = (uint64_t)v25;
      return sub_23AA8A05C(v33, v32);
    }
    __break(1u);
    goto LABEL_13;
  }
  v26 = (void *)swift_retain();
  if (objc_sync_enter(v26))
    goto LABEL_14;
  v42[1] = v20;
  v27 = a5[20];
  swift_retain();
  if (objc_sync_exit(a5))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a5);
  swift_release();
  v28 = *(unsigned int *)(v27 + 16);
  v29 = swift_release();
  MEMORY[0x24BDAC7A8](v29);
  v42[-4] = a5;
  v30 = v47;
  v42[-3] = v47;
  LOBYTE(v42[-2]) = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
  v50[0] = v30;
  memset(&v50[1], 0, 32);
  a5 = 0;
  sub_23B0E1EBC((uint64_t)v50, v28, 3145728, 0, (uint64_t)v13, (uint64_t)sub_23B19D100, (uint64_t)&v42[-6]);
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v11, qword_2542E5250);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14) == 1)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a5);
  }
  v34 = v46;
  sub_23AA724E8((uint64_t)v11, v46, &qword_2542E72C0);
  sub_23AA8A05C((uint64_t)v13, qword_2542E5250);
  sub_23AA8EFC8(v34, (uint64_t)v18, &qword_2542E72C0);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48))(v18, 1, v45);
  v36 = v47;
  if (v35 == 1)
  {
    sub_23AA8A05C((uint64_t)v18, &qword_2542E72C0);
    v50[0] = v36;
    LOBYTE(v50[1]) = 1;
    memset(&v50[2], 0, 32);
    v51 = 0u;
    v52 = 0u;
    v53 = 0u;
    v54 = 0u;
    v55 = 0;
    sub_23AAFC630((uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
    sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
    v37 = (void *)swift_allocError();
    sub_23AA724E8((uint64_t)v50, v38, (uint64_t *)&unk_2542E0950);
    swift_willThrow();
    sub_23AA8A05C(v34, &qword_2542E72C0);
    *v23 = v37;
    swift_storeEnumTagMultiPayload();
    v39 = v37;
    v49(v23);

    v32 = &qword_2542E21C0;
    v33 = (uint64_t)v23;
  }
  else
  {
    v41 = v43;
    sub_23AA94050((uint64_t)v18, v43, type metadata accessor for VFSItem);
    sub_23AA907B0(v41, (uint64_t)v23, type metadata accessor for VFSItem);
    swift_storeEnumTagMultiPayload();
    v49(v23);
    sub_23AA8A05C((uint64_t)v23, &qword_2542E21C0);
    sub_23AA937BC(v41, type metadata accessor for VFSItem);
    v32 = &qword_2542E72C0;
    v33 = v34;
  }
  return sub_23AA8A05C(v33, v32);
}

void sub_23B17CBF8(int a1@<W0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD v31[3];
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;

  v43 = a1;
  v11 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19D11C);
  if (v5)
    return;
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19D14C);
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19D188);
  MEMORY[0x24BDAC7A8](v13);
  v14 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19D1C4);
  MEMORY[0x24BDAC7A8](v14);
  v39 = a1;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19D200);
  v42 = a4;
  v15 = (void *)swift_retain();
  if (objc_sync_enter(v15))
    goto LABEL_13;
  v16 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2))
    goto LABEL_14;
  swift_release();
  v17 = (uint64_t *)(v16 + 72);
  swift_beginAccess();
  v18 = sub_23AA97254(a3, v42);
  if ((v19 & 1) != 0)
  {
    v20 = v18;
    v41 = a5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v17;
    v44 = *v17;
    *v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23B18B3E0();
      v22 = v44;
    }
    sub_23B185F54(v20, v22);
    *v17 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a5 = v41;
  }
  swift_endAccess();
  swift_release();
  v23 = (void *)swift_retain();
  if (objc_sync_enter(v23))
LABEL_13:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  v24 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2))
LABEL_14:
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  swift_release();
  v25 = type metadata accessor for VFSFileTree(0);
  v31[2] = MEMORY[0x24BDAC7A8](v25);
  v32 = a1;
  v34 = 0;
  v35 = 0;
  v33 = v24;
  v36 = 2;
  v37 = 0;
  v38 = a3;
  LOBYTE(v39) = v42;
  v29 = 0x100000000;
  if (!v30)
    v29 = 0;
  v40 = 0;
  sub_23B1AA0D0(a1, v26, v27, v29 | v28, (uint64_t)sub_23AA8AC00, (uint64_t)v31, a5);
  swift_release();
}

uint64_t sub_23B17D110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  _QWORD *v8;
  id v9;

  v7 = *(void **)(v3 + 216);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = v3;
  v8[4] = a2;
  v8[5] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v9 = v7;
  sub_23AA814FC(0, (uint64_t)"removeStuckConflictsFromTheWharf(conflictsToRemove:completion:)", 63, 2, (uint64_t)sub_23B19D0E4, (uint64_t)v8);

  return swift_release();
}

uint64_t sub_23B17D1B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;

  v27 = a2;
  v7 = sub_23B1C5A08();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v15 = *(_QWORD *)(a1 + 16);
    v23[2] = a4;
    v24 = a3;
    v23[1] = a1;
    if (v15)
    {
      v16 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v25 = *(_QWORD *)(v8 + 72);
      v26 = v17;
      swift_bridgeObjectRetain();
      while (1)
      {
        v26(v14, v16, v7);
        v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v18(v14, 0, 1, v7);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
        v19 = *(_QWORD *)(v27 + 136);
        sub_23B1C59E4();
        v20 = v19 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
        swift_beginAccess();
        v21 = sub_23B1C6458();
        fpfs_wharf_delete_item_at(v20, -2, (const char *)(v21 + 32));
        swift_endAccess();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        swift_release();
        v16 += v25;
        if (!--v15)
          goto LABEL_8;
      }
    }
    else
    {
      v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
LABEL_8:
      v18(v14, 1, 1, v7);
    }
    v12 = swift_bridgeObjectRelease();
    a3 = v24;
  }
  return a3(v12);
}

uint64_t sub_23B17D3D0(uint64_t a1, uint64_t a2)
{
  return sub_23B17E2E8(a1, a2, (uint64_t)&unk_250C19F70, (uint64_t)"removeStuckWharfPropagationItems(completion:)", 45, (uint64_t)sub_23B19D0CC);
}

uint64_t sub_23B17D3F0(uint64_t a1, void (*a2)(BOOL), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  id v20;
  id v21;
  void *v22;
  unsigned int v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  NSObject *v29;
  char *v30;
  char *v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(char *, uint64_t);
  id v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  _QWORD v46[2];
  void (*v47)(BOOL);
  char *v48;
  __int128 v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  _OWORD v57[2];
  id v58[6];

  v46[1] = a3;
  v47 = a2;
  v58[4] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = sub_23B1C5E4C();
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C5A08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v46 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v46 - v14;
  sub_23B1C5978();
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1580]), sel_init);
  sub_23B1C59E4();
  v17 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v18 = (uint64_t)objc_msgSend(v16, sel_enumeratorAtPath_, v17);

  v55 = (id)v18;
  if (v18)
  {
    v18 = 0;
    v54 = MEMORY[0x24BEE4AD8] + 8;
    *(_QWORD *)&v19 = 136315394;
    v49 = v19;
    v50 = v15;
    v51 = v7;
    v48 = v13;
    while (1)
    {
      if (objc_msgSend(v55, sel_nextObject))
      {
        sub_23B1C6D7C();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v57, 0, sizeof(v57));
      }
      sub_23AA724E8((uint64_t)v57, (uint64_t)v58, qword_2542E5640);
      if (!v58[3])
      {

        sub_23AA8A05C((uint64_t)v58, qword_2542E5640);
        goto LABEL_18;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {

        goto LABEL_18;
      }
      if (v18 == 10000)
        break;
      v56 = v18;
      sub_23B1C5984();
      swift_bridgeObjectRelease();
      v21 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      v22 = (void *)sub_23B1C5954();
      v58[0] = 0;
      v23 = objc_msgSend(v21, sel_removeItemAtURL_error_, v22, v58);

      if (v23)
      {
        v20 = v58[0];
        (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      }
      else
      {
        v24 = v58[0];
        v25 = (void *)sub_23B1C587C();

        swift_willThrow();
        v26 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v13, v6);
        v27 = v25;
        v28 = v25;
        v29 = sub_23B1C5E40();
        v30 = v13;
        v31 = v5;
        v32 = sub_23B1C6A94();
        if (os_log_type_enabled(v29, v32))
        {
          v33 = swift_slowAlloc();
          v34 = (_QWORD *)swift_slowAlloc();
          v35 = (void *)swift_slowAlloc();
          v58[0] = v35;
          *(_DWORD *)v33 = v49;
          sub_23AA7E38C((unint64_t *)&qword_2542DD420, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
          v36 = sub_23B1C7304();
          *(_QWORD *)(v33 + 4) = sub_23AABEC68(v36, v37, (uint64_t *)v58);
          swift_bridgeObjectRelease();
          v38 = *(void (**)(char *, uint64_t))(v51 + 8);
          v38(v10, v6);
          *(_WORD *)(v33 + 12) = 2112;
          v39 = v25;
          v40 = _swift_stdlib_bridgeErrorToNSError();
          *(_QWORD *)(v33 + 14) = v40;
          *v34 = v40;

          _os_log_impl(&dword_23AA66000, v29, v32, "failed to remove %s: %@", (uint8_t *)v33, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v34, -1, -1);
          swift_arrayDestroy();
          v41 = v35;
          v15 = v50;
          MEMORY[0x23B8614BC](v41, -1, -1);
          v42 = v33;
          v7 = v51;
          MEMORY[0x23B8614BC](v42, -1, -1);

          (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v53);
          v43 = v48;
          v38(v48, v6);
          v5 = v31;
          v13 = v43;
        }
        else
        {

          v44 = *(void (**)(char *, uint64_t))(v7 + 8);
          v44(v10, v6);

          (*(void (**)(char *, uint64_t))(v52 + 8))(v31, v53);
          v44(v30, v6);
          v5 = v31;
          v13 = v30;
        }
      }
      v18 = v56 + 1;
    }
    swift_bridgeObjectRelease();

    v18 = 10000;
  }
LABEL_18:
  v47(v18 == 10000);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v6);
}

uint64_t sub_23B17D9E4(uint64_t a1, uint64_t a2)
{
  return sub_23B17E2E8(a1, a2, (uint64_t)&unk_250C19F20, (uint64_t)"eventBarrier(_:)", 16, (uint64_t)sub_23ACF4C2C);
}

void sub_23B17DA04(_QWORD *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(void);
  uint64_t v61;
  uint64_t v62;

  v60 = a2;
  v5 = sub_23B1C5E4C();
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v51 - v11;
  v13 = sub_23B1C5A08();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v51 - v18;
  v20 = a1[30];
  if (!(v20 >> 62))
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21)
      goto LABEL_3;
LABEL_22:
    v50 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t))v60)(v50);
    return;
  }
  swift_bridgeObjectRetain();
  if (!sub_23B1C7088())
    goto LABEL_22;
LABEL_3:
  if ((v20 & 0xC000000000000001) != 0)
  {
    v22 = (id)MEMORY[0x23B85F860](0, v20);
  }
  else
  {
    if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    v22 = *(id *)(v20 + 32);
  }
  v55 = v22;
  swift_bridgeObjectRelease();
  v23 = (void *)a1[29];
  v24 = objc_msgSend(v23, sel_barrierFolderURL);
  v56 = a3;
  if (v24)
  {
    v25 = v24;
    sub_23B1C59CC();

    v26 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v26(v12, v17, v13);
    v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v54(v12, 0, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      v26(v19, v12, v13);
      goto LABEL_13;
    }
  }
  else
  {
    v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v54(v12, 1, 1, v13);
  }
  v27 = (void *)swift_retain();
  if (objc_sync_enter(v27))
    goto LABEL_28;
  v28 = a1[20];
  swift_retain();
  if (objc_sync_exit(a1))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, v28 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_mainRootURL, v13);
  swift_release();
  sub_23AA8A05C((uint64_t)v12, (uint64_t *)&unk_2542E6740);
LABEL_13:
  v29 = (void *)sub_23B1C5954();
  v53 = *(void (**)(char *, uint64_t))(v14 + 8);
  v53(v19, v13);
  objc_msgSend(v23, sel_setBarrierFolderURL_, v29);

  v30 = (id)fpfs_current_or_default_log();
  v31 = v59;
  sub_23B1C5E58();
  swift_retain_n();
  v32 = sub_23B1C5E40();
  v33 = sub_23B1C6A94();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v52 = swift_slowAlloc();
    v62 = v52;
    *(_DWORD *)v34 = 136315138;
    v35 = objc_msgSend(v23, sel_barrierFolderURL);
    if (v35)
    {
      v36 = v35;
      sub_23B1C59CC();

      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v10, v17, v13);
      v54(v10, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) != 1)
      {
        v37 = (void *)sub_23B1C5954();
        v38 = objc_msgSend(v37, sel_fp_shortDescription);

        v39 = sub_23B1C63E0();
        v41 = v40;

        v53(v10, v13);
        v61 = sub_23AABEC68(v39, v41, &v62);
        sub_23B1C6CBC();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v32, v33, "🚧  FS: waiting for barrier on %s", v34, 0xCu);
        v42 = v52;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v42, -1, -1);
        MEMORY[0x23B8614BC](v34, -1, -1);

        (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
        goto LABEL_18;
      }
      goto LABEL_27;
    }
LABEL_26:
    swift_release();
    v54(v10, 1, 1, v13);
    __break(1u);
LABEL_27:
    swift_release();
    __break(1u);
LABEL_28:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }

  swift_release_n();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v58);
LABEL_18:
  v43 = v55;
  v44 = objc_msgSend(v55, sel_waitableBarrier);
  v45 = v56;
  if (v44)
  {
    v46 = v44;
    v47 = (void *)a1[27];
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = v60;
    *(_QWORD *)(v48 + 24) = v45;
    v49 = v47;
    swift_retain();
    sub_23AA81A30((uint64_t)"eventBarrier(_:)", 16, 2, 0, v49, (uint64_t)sub_23B1A1E34, v48);

    swift_release();
  }
  else
  {
    v60();

  }
}

uint64_t sub_23B17E044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v11 = sub_23B1C5E40();
  v12 = sub_23B1C6A94();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_23AA66000, v11, v12, "🚧  FS: barrier observed, waiting for flocks to be released", v13, 2u);
    MEMORY[0x23B8614BC](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v14 = *(void **)(a1 + 216);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  v16 = v14;
  swift_retain();
  sub_23AA81A30((uint64_t)"fullBarrier(_:)", 15, 2, 0, v16, (uint64_t)sub_23B1A1B48, v15);

  return swift_release();
}

uint64_t sub_23B17E1BC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v7 = sub_23B1C5E40();
  v8 = sub_23B1C6A94();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23AA66000, v7, v8, "🚧 FS: barrier wait completed", v9, 2u);
    MEMORY[0x23B8614BC](v9, -1, -1);
  }

  v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1(v10);
}

uint64_t sub_23B17E2C8(uint64_t a1, uint64_t a2)
{
  return sub_23B17E2E8(a1, a2, (uint64_t)&unk_250C19EF8, (uint64_t)"notifyRescan(_:)", 16, (uint64_t)sub_23B19D0B8);
}

uint64_t sub_23B17E2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  void *v12;
  _QWORD *v13;
  id v14;

  v12 = *(void **)(v6 + 216);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v6;
  v13[3] = a1;
  v13[4] = a2;
  v14 = v12;
  swift_retain();
  swift_retain();
  sub_23AA814FC(0, a4, a5, 2, a6, (uint64_t)v13);

  return swift_release();
}

uint64_t sub_23B17E38C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;

  objc_msgSend(*(id *)(a1 + 232), sel_setPlannedRescan_, 0);
  v4 = *(_QWORD *)(a1 + 240);
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_10:
    v10 = swift_bridgeObjectRelease();
    return a2(v10);
  }
  swift_bridgeObjectRetain();
  result = sub_23B1C7088();
  v5 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x23B85F860](i, v4);
      else
        v8 = *(id *)(v4 + 8 * i + 32);
      v9 = v8;
      objc_msgSend(v8, sel_didProcessBarrierEventUUID_, 0);

    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B17E488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _QWORD *v17;
  id v18;
  uint64_t v20;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v3 + 224);
  v12 = *(void **)(v4 + 216);
  v13 = sub_23B1C60A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v4;
  v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v15 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v15 + 40) = v16;
  *(_OWORD *)(v15 + 56) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v15 + 72) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v15 + 80) = a2;
  *(_QWORD *)(v15 + 88) = a3;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = sub_23AA698D4;
  v17[3] = v14;
  v17[4] = v11;
  swift_retain_n();
  v18 = v12;
  swift_retain();
  sub_23AC24384(a1);
  swift_retain();
  swift_retain();
  sub_23AA9086C(v18, (uint64_t)v10, sub_23AC242E0, v17, (uint64_t)sub_23B19D0A0, v15);

  swift_release();
  swift_release();
  swift_release();
  return sub_23AA8A05C((uint64_t)v10, &qword_2542DD460);
}

uint64_t sub_23B17E63C(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v4;
  uint64_t ObjectType;

  if (*a2)
  {
    v4 = *(_QWORD *)(a1 + 136);
    MEMORY[0x24BDAC7A8](a1);
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC243B0);
    *(_BYTE *)(v4 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(_QWORD *)(v4 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      MEMORY[0x23B85F548](1, ObjectType);
      swift_unknownObjectRelease();
    }
  }
  return a3(0);
}

uint64_t sub_23B17E790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  id v16;
  uint64_t v18;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v3 + 216);
  v10 = *(_QWORD *)(v3 + 224);
  v12 = sub_23B1C60A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = a3;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = sub_23B19CFBC;
  v15[3] = v13;
  v15[4] = v10;
  swift_retain_n();
  v16 = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AA9086C(v16, (uint64_t)v9, sub_23B19D050, v15, (uint64_t)sub_23B19D000, (uint64_t)v14);

  swift_release();
  swift_release();
  swift_release();
  return sub_23AA8A05C((uint64_t)v9, &qword_2542DD460);
}

uint64_t sub_23B17E920(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_23B17FE44(a1, a2, a3, (void (*)(uint64_t))sub_23B196AF4);
}

uint64_t sub_23B17E930(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_23B17FE44(a1, a2, a3, (void (*)(uint64_t))sub_23B196BC4);
}

uint64_t sub_23B17E93C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  unint64_t v38;
  uint64_t v39;
  int v40;
  id v41;
  const char *v42;
  char *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char *v55;
  unint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t (*v66)();
  uint64_t v67;
  char v68;
  id v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t (*v76)();
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  int v93;
  uint64_t (*v94)();
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  const char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  int v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  char *v147;
  uint64_t v148;
  char v149[8];
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;

  v143 = a4;
  v148 = a3;
  v136 = a1;
  v118 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
  v119 = *(_QWORD *)(v118 - 8);
  v5 = MEMORY[0x24BDAC7A8](v118);
  v121 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v120 = (char *)&v117 - v7;
  v127 = type metadata accessor for VFSItem(0);
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v128 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v122 = (uint64_t)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v130 = (char *)&v117 - v12;
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v129 = *(_QWORD *)(v145 - 8);
  v13 = MEMORY[0x24BDAC7A8](v145);
  v125 = (uint64_t)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v131 = (uint64_t)&v117 - v15;
  v135 = sub_23B1C5A08();
  v133 = *(_QWORD *)(v135 - 8);
  v16 = MEMORY[0x24BDAC7A8](v135);
  v132 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v134 = (char *)&v117 - v18;
  v139 = sub_23B1C5E4C();
  v138 = *(_QWORD *)(v139 - 8);
  v19 = MEMORY[0x24BDAC7A8](v139);
  v124 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v123 = (char *)&v117 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v137 = (char *)&v117 - v23;
  v24 = sub_23B1C5DC8();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v117 - v32;
  v34 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v117 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542E6818 != -1)
    swift_once();
  v37 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v33, 1, 1, v24);
  v151 = 0;
  v152 = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v151 = 0xD000000000000020;
  v152 = 0x800000023B21F960;
  v144 = a2;
  sub_23B1C64F4();
  v39 = v151;
  v38 = v152;
  sub_23AA8EFC8((uint64_t)v33, (uint64_t)v31, (uint64_t *)&unk_2542E67B8);
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v31, 1, v24);
  v142 = v39;
  if (v40 == 1)
  {
    v41 = v37;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v31, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v31, v24);
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v36, v27, v24);
  v141 = *(int *)(v34 + 20);
  *(_QWORD *)&v36[v141] = v37;
  v42 = "FS: handle event";
  v43 = &v36[*(int *)(v34 + 24)];
  *(_QWORD *)v43 = "FS: handle event";
  *((_QWORD *)v43 + 1) = 16;
  v147 = v36;
  v140 = v43;
  v43[16] = 2;
  v44 = v37;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v45 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v45 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v45 + 32) = v142;
  *(_QWORD *)(v45 + 40) = v38;
  v115 = v45;
  LOBYTE(v114) = 2;
  v113 = 2;
  v46 = (uint64_t)v147;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v33, (uint64_t *)&unk_2542E67B8);
  v47 = v146;
  v48 = (void *)swift_retain();
  if (objc_sync_enter(v48))
    goto LABEL_55;
  v49 = v47[20];
  swift_retain();
  v50 = objc_sync_exit(v47);
  v52 = v144;
  v51 = v145;
  if (v50)
    goto LABEL_56;
  swift_release();
  v53 = *(_QWORD *)(v49 + 24);
  swift_release();
  if (v53 != v143)
  {
    if (!fpfs_supports_parent_mtime_iopolicy() || (v136 & 0xB00) == 0 || (v136 & 0x80000) != 0)
      goto LABEL_20;
    sub_23B1C5918();
    v61 = v132;
    sub_23B1C599C();
    v62 = sub_23B1C59E4();
    v64 = v63;
    v65 = *(char **)(v133 + 8);
    ((void (*)(char *, uint64_t))v65)(v61, v135);
    v66 = sub_23B152E74();
    if (*(_QWORD *)(v67 + 8))
    {
      swift_bridgeObjectRetain();
      v68 = sub_23ADE0B10(&v150, v62, v64);
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t *, _QWORD))v66)(&v151, 0);
      if ((v68 & 1) == 0)
      {
        v69 = (id)fpfs_current_or_default_log();
        v70 = v123;
        sub_23B1C5E58();
        swift_bridgeObjectRetain();
        v71 = sub_23B1C5E40();
        v72 = sub_23B1C6A94();
        if (os_log_type_enabled(v71, v72))
        {
          v73 = (uint8_t *)swift_slowAlloc();
          v74 = swift_slowAlloc();
          v151 = v74;
          *(_DWORD *)v73 = 136315138;
          swift_bridgeObjectRetain();
          v150 = sub_23AABEC68(v62, v64, &v151);
          sub_23B1C6CBC();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_23AA66000, v71, v72, "deduplicating FSEvent parent lookup for %s", v73, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v74, -1, -1);
          MEMORY[0x23B8614BC](v73, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(char *, uint64_t))(v138 + 8))(v70, v139);
LABEL_32:
        ((void (*)(char *, uint64_t))v65)(v134, v135);
        v46 = (uint64_t)v147;
        goto LABEL_20;
      }
    }
    else
    {
      ((void (*)(uint64_t *, _QWORD))v66)(&v151, 0);
    }
    v76 = (uint64_t (*)())((char *)v47 + qword_2542EDF28);
    swift_beginAccess();
    if (*(_QWORD *)v76 == -1)
    {
      __break(1u);
      goto LABEL_50;
    }
    ++*(_QWORD *)v76;
    v77 = (void *)swift_retain();
    if (objc_sync_enter(v77))
LABEL_55:
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v47);
    v148 = v62;
    v33 = v65;
    v78 = v47[20];
    swift_retain();
    if (!objc_sync_exit(v47))
    {
      swift_release();
      v79 = type metadata accessor for VFSFileTree(0);
      v80 = MEMORY[0x23B8615C4](v47 + 34);
      v81 = MEMORY[0x24BDAC7A8](v80);
      *(&v117 - 6) = v79;
      *(&v117 - 5) = v78;
      v113 = v81;
      v114 = v82;
      LOBYTE(v115) = 2;
      v116 = 0;
      v83 = v129;
      v84 = (uint64_t)v130;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v129 + 56))(v130, 1, 1, v51);
      swift_bridgeObjectRetain();
      sub_23B0E2EA0(4294967294, v148, v64, 2129920, 0, 0, v84, (uint64_t)sub_23ACFC288, (uint64_t)(&v117 - 8));
      v85 = v122;
      sub_23AA8EFC8(v84, v122, qword_2542E5250);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v85, 1, v51) != 1)
      {
        v86 = v85;
        v87 = v131;
        sub_23AA724E8(v86, v131, &qword_2542E72C0);
        sub_23AA8A05C(v84, qword_2542E5250);
        swift_release();
        swift_unknownObjectRelease();
        v88 = v127;
        v89 = v126;
        v65 = v33;
        v90 = v125;
        sub_23AA8EFC8(v87, v125, &qword_2542E72C0);
        v91 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
        v92 = v90;
        v93 = v91(v90, 1, v88);
        v42 = v128;
        if (v93 == 1)
        {
          swift_bridgeObjectRelease();
          sub_23AA8A05C(v87, &qword_2542E72C0);
          ((void (*)(char *, uint64_t))v33)(v134, v135);
          sub_23AA8A05C(v90, &qword_2542E72C0);
          v46 = (uint64_t)v147;
          goto LABEL_20;
        }
        v62 = v88;
        sub_23AA94050(v92, (uint64_t)v128, type metadata accessor for VFSItem);
        v94 = sub_23B152E74();
        if (*(_QWORD *)(v95 + 8))
        {
          v96 = *(_QWORD *)&v42[*(int *)(v88 + 36)];
          swift_bridgeObjectRelease_n();
          sub_23ADE249C((uint64_t)v149, v96, v148, v64);
          ((void (*)(uint64_t *, _QWORD))v94)(&v151, 0);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t *, _QWORD))v94)(&v151, 0);
        }
        v97 = *(int *)(v88 + 28);
        v76 = (uint64_t (*)())&v42[v97 + *(int *)(type metadata accessor for ItemMetadata() + 28)];
        sub_23B1C5B94();
        v46 = (uint64_t)v147;
        v99 = v131;
        if ((~*(_QWORD *)&v98 & 0x7FF0000000000000) != 0)
        {
          if (v98 > -9.22337204e18)
          {
            if (v98 < 9.22337204e18)
            {
              if ((fpfs_is_busy_date() & 1) != 0)
              {
                sub_23AA937BC((uint64_t)v42, type metadata accessor for VFSItem);
                v100 = v99;
LABEL_48:
                sub_23AA8A05C(v100, &qword_2542E72C0);
                ((void (*)(char *, uint64_t))v65)(v134, v135);
                goto LABEL_20;
              }
              v101 = (_QWORD *)((char *)v47 + qword_2542E6A40);
              swift_beginAccess();
              v102 = v101[1];
              if (v102)
              {
                v103 = *v101;
                sub_23B1A0804(*v101, v102);
                v104 = swift_retain();
                v42 = v128;
                v46 = (uint64_t)v147;
                sub_23B1943EC(v104, v102);
              }
              else
              {
                v103 = 0;
              }
              v33 = v121;
              v51 = (uint64_t)v120;
              v76 = sub_23B152E74();
              if (!v105[1])
              {
                ((void (*)(uint64_t *, _QWORD))v76)(&v151, 0);
                swift_release();
                sub_23AA937BC((uint64_t)v42, type metadata accessor for VFSItem);
                v100 = v131;
                goto LABEL_48;
              }
              v47 = v105;
              v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
              v107 = v51 + *(int *)(v106 + 48);
              v108 = *(int *)(v106 + 64);
              v109 = v42[8];
              *(_QWORD *)v51 = *(_QWORD *)v42;
              *(_BYTE *)(v51 + 8) = v109;
              sub_23AA907B0((uint64_t)v42, v107, type metadata accessor for VFSItem);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56))(v107, 0, 1, v127);
              *(_QWORD *)(v51 + v108) = v103;
              swift_storeEnumTagMultiPayload();
              sub_23AA8EFC8(v51, (uint64_t)v33, qword_2542DDA70);
              v62 = v47[1];
              swift_retain();
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v47[1] = v62;
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
LABEL_44:
                v112 = *(_QWORD *)(v62 + 16);
                v111 = *(_QWORD *)(v62 + 24);
                if (v112 >= v111 >> 1)
                {
                  v62 = sub_23AF9A4D8(v111 > 1, v112 + 1, 1, v62);
                  v47[1] = v62;
                }
                *(_QWORD *)(v62 + 16) = v112 + 1;
                sub_23AA724E8((uint64_t)v33, v62+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(_QWORD *)(v119 + 72) * v112, qword_2542DDA70);
                sub_23AA8A05C(v51, qword_2542DDA70);
                ((void (*)(uint64_t *, _QWORD))v76)(&v151, 0);
                swift_release();
                sub_23AA937BC((uint64_t)v42, type metadata accessor for VFSItem);
                sub_23AA8A05C(v131, &qword_2542E72C0);
                goto LABEL_32;
              }
LABEL_53:
              v62 = sub_23AF9A4D8(0, *(_QWORD *)(v62 + 16) + 1, 1, v62);
              v47[1] = v62;
              goto LABEL_44;
            }
LABEL_52:
            __break(1u);
            goto LABEL_53;
          }
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      __break(1u);
      goto LABEL_55;
    }
LABEL_56:
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v47);
  }
  v54 = (id)fpfs_current_or_default_log();
  v55 = v137;
  sub_23B1C5E58();
  v56 = v148;
  swift_bridgeObjectRetain_n();
  v57 = sub_23B1C5E40();
  v58 = sub_23B1C6A94();
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc();
    v60 = swift_slowAlloc();
    v151 = v60;
    *(_DWORD *)v59 = 136315138;
    v46 = (uint64_t)v147;
    swift_bridgeObjectRetain();
    v150 = sub_23AABEC68(v52, v56, &v151);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v57, v58, "If the item is the domain root %s, no need to handle parent mtime", v59, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v60, -1, -1);
    MEMORY[0x23B8614BC](v59, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v138 + 8))(v55, v139);
LABEL_20:
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  return sub_23AA937BC(v46, type metadata accessor for Signpost);
}

uint64_t sub_23B17FBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v10 = 0;
  v9 = 0;
  v11 = a1;
  v12 = a2;
  v13 = &v10;
  v14 = &v9;
  v15 = a3;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1A1020);
  if (!v4)
  {
    v7 = v10;
    v8 = v9;
    if (!v10)
      v8 = 0;
    *(_QWORD *)a4 = v8;
    *(_BYTE *)(a4 + 8) = v7 ^ 1;
  }
  return result;
}

uint64_t sub_23B17FC64@<X0>(void *a1@<X4>, _DWORD *a2@<X8>)
{
  void *v4;
  int v5;
  uint64_t result;

  sub_23B1C59E4();
  v4 = (void *)swift_retain();
  if (objc_sync_enter(v4))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  swift_retain();
  if (objc_sync_exit(a1))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  swift_release();
  swift_release();
  sub_23B1C6458();
  swift_bridgeObjectRelease();
  v5 = fpfs_pkg_relative_path_lookup();
  result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t sub_23B17FD8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_23B19A658(a2, a3, a4, a5, a6);
}

uint64_t sub_23B17FDA4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;

  v11 = sub_23B1C63E0();
  v13 = v12;
  v14 = a3;
  swift_retain();
  sub_23B19A658(v11, v13, a5, a6, a7);

  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B17FE38(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_23B17FE44(a1, a2, a3, (void (*)(uint64_t))sub_23B19C20C);
}

uint64_t sub_23B17FE44(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t))
{
  id v5;
  uint64_t v6;

  v5 = a3;
  v6 = swift_retain();
  a4(v6);

  return swift_release();
}

uint64_t sub_23B17FE88(uint64_t a1, unint64_t a2)
{
  return sub_23B19C540(a2);
}

uint64_t sub_23B17FE90(uint64_t a1, uint64_t a2, void *a3, unint64_t a4)
{
  id v5;

  v5 = a3;
  swift_retain();
  sub_23B19C540(a4);

  return swift_release();
}

uint64_t sub_23B17FEDC(_QWORD *a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v47 = a1;
  v2 = sub_23B1C5A08();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)swift_retain();
  if (objc_sync_enter(v6))
    goto LABEL_23;
  v7 = *(_QWORD **)(v1 + 160);
  swift_retain();
  if (objc_sync_exit((id)v1))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, v1);
  swift_release();
  v8 = v47;
  v9 = v47[3];
  v10 = v47[4];
  __swift_project_boxed_opaque_existential_1(v47, v9);
  sub_23AEBD130(0x6F6F72205346202BLL, 0xEA00000000007374, v9, v10);
  v11 = v8[3];
  v45 = v8[4];
  v12 = __swift_project_boxed_opaque_existential_1(v8, v11);
  v53 = 8224;
  v54 = 0xE200000000000000;
  v13 = (void *)sub_23B1C5954();
  v14 = objc_msgSend(v13, sel_fp_shortDescription);
  v46 = v7;
  v15 = v14;

  sub_23B1C63E0();
  v16 = v46;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v51 = v16[3];
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v1 = (unint64_t)v12;
  sub_23AEBD130(v53, v54, v11, v45);
  swift_bridgeObjectRelease();
  v45 = OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs;
  v17 = *(_QWORD *)(*(_QWORD *)((char *)v16 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_rootURLs) + 16);
  v44 = v17 - 1;
  if (v17 != 1)
  {
    if (!v17)
      goto LABEL_22;
    v41 = v16 + 9;
    swift_beginAccess();
    v18 = 0;
    v42 = v5;
    v43 = v2;
    while (1)
    {
      v1 = v18 + 1;
      v23 = *(_QWORD *)((char *)v16 + v45);
      if ((unint64_t)(v18 + 1) >= *(_QWORD *)(v23 + 16))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v1);
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, v23+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v1, v2);
      v24 = v16[4];
      if (v1 >= *(_QWORD *)(v24 + 16))
        goto LABEL_21;
      v25 = *(_QWORD *)(v24 + 8 * v18 + 40);
      v26 = *v41;
      if (*(_QWORD *)(*v41 + 16))
      {
        v27 = sub_23AA97254(v25, 1);
        if ((v28 & 1) != 0)
          break;
      }
      v19 = v47[3];
      v20 = v47[4];
      __swift_project_boxed_opaque_existential_1(v47, v19);
      v51 = 8224;
      v52 = 0xE200000000000000;
      v21 = (void *)sub_23B1C5954();
      v22 = objc_msgSend(v21, sel_fp_shortDescription);

      sub_23B1C63E0();
      sub_23B1C64F4();
      v5 = v42;
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v49 = v25;
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23AEBD130(v51, v52, v19, v20);
      v2 = v43;
      v16 = v46;
LABEL_7:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      if (v44 == ++v18)
        return swift_release();
    }
    v29 = *(_QWORD *)(v26 + 56) + 32 * v27;
    v30 = *(_QWORD *)v29;
    v31 = *(unsigned __int8 *)(v29 + 8);
    v38[0] = *(_QWORD *)(v29 + 16);
    v32 = v47[3];
    v39 = v47[4];
    v40 = v32;
    v38[1] = __swift_project_boxed_opaque_existential_1(v47, v32);
    v51 = 0;
    v52 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v51 = 8224;
    v52 = 0xE200000000000000;
    v33 = (void *)sub_23B1C5954();
    v34 = objc_msgSend(v33, sel_fp_shortDescription);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v49 = v25;
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    if (v31)
    {
      if (v31 != 1)
      {
        v16 = v46;
        goto LABEL_18;
      }
      v48 = v30;
      v49 = 0x284449656C6966;
      v50 = 0xE700000000000000;
    }
    else
    {
      v49 = 0x284449636F64;
      v50 = 0xE600000000000000;
      LODWORD(v48) = v30;
    }
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v16 = v46;
LABEL_18:
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v35 = (void *)sub_23B1C63BC();
    v36 = objc_msgSend(v35, sel_fp_obfuscatedFilename);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AEBD130(v51, v52, v40, v39);
    v5 = v42;
    v2 = v43;
    goto LABEL_7;
  }
  return swift_release();
}

uint64_t sub_23B180598()
{
  id *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  sub_23ACF1828((uint64_t)(v0 + 34));
  v1 = (char *)v0 + qword_2542E4660;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4398);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = (char *)v0 + qword_2542E6A30;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E67E8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  sub_23B1943EC(*(uint64_t *)((char *)v0 + qword_2542E6A40), *(uint64_t *)((char *)v0 + qword_2542E6A40 + 8));
  sub_23AAB7948(*(uint64_t *)((char *)v0 + qword_2542E6A50));

  sub_23AA937BC((uint64_t)v0 + qword_2542EDF28, type metadata accessor for VFSCounters);
  sub_23AC23ABC(*(id *)((char *)v0 + qword_2542E6A68));
  return swift_bridgeObjectRelease();
}

id *sub_23B180714()
{
  id *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v0 = (id *)sub_23B149454((void (*)(_QWORD, _QWORD))sub_23ACFEA84, (void (*)(_QWORD, _QWORD))sub_23AAB7948, (void (*)(_QWORD, _QWORD))sub_23ACFEA84, (void (*)(_QWORD, _QWORD))sub_23ACFEA84);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  sub_23ACF1828((uint64_t)(v0 + 34));
  v1 = (char *)v0 + qword_2542E4660;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4398);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = (char *)v0 + qword_2542E6A30;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E67E8);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  sub_23B1943EC(*(uint64_t *)((char *)v0 + qword_2542E6A40), *(uint64_t *)((char *)v0 + qword_2542E6A40 + 8));
  sub_23AAB7948(*(uint64_t *)((char *)v0 + qword_2542E6A50));

  sub_23AA937BC((uint64_t)v0 + qword_2542EDF28, type metadata accessor for VFSCounters);
  sub_23AC23ABC(*(id *)((char *)v0 + qword_2542E6A68));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23B1808C0()
{
  sub_23B180714();
  return swift_deallocClassInstance();
}

uint64_t sub_23B1808E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_23B191FD4(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a2, a5, a6, a7, a8);
}

uint64_t sub_23B180904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  char v12;
  _QWORD v14[12];

  v11 = *(_QWORD *)a1;
  v12 = *(_BYTE *)(a1 + 8);
  sub_23AA724E8(a2, (uint64_t)v14, (uint64_t *)&unk_2542E4948);
  return sub_23B193008(v11, v12, v14, a4, a5, a6, a7);
}

uint64_t sub_23B18098C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;

  result = sub_23B1921DC(a1, a2, a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6;
  return result;
}

void sub_23B1809B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  id v6;

  v6 = (id)FPNotSupportedError();
  a5();

}

id sub_23B1809F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD *))
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id result;
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2950);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = (id)FPNotSupportedError();
  if (result)
  {
    *v10 = result;
    swift_storeEnumTagMultiPayload();
    a7(v10);
    return (id)sub_23AA8A05C((uint64_t)v10, &qword_2569E2950);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B180A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23B15D170(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a2, a3, a4);
}

uint64_t sub_23B180AB8(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return sub_23B15DAEC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a2, a3, a4);
}

uint64_t sub_23B180AD4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23B15DD88(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a2, a3, a4, a5);
}

uint64_t sub_23B180AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  int v12;
  _BYTE v14[96];

  v11 = *(_QWORD *)a1;
  v12 = *(unsigned __int8 *)(a1 + 8);
  sub_23AA724E8(a4, (uint64_t)v14, (uint64_t *)&unk_2542E4948);
  return sub_23B193EB8(v11, v12, (uint64_t)v14, a7, a8, a9);
}

uint64_t sub_23B180B68(uint64_t a1, _QWORD *a2, unint64_t a3, uint64_t a4, _OWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void), uint64_t a10)
{
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[6];

  v10 = *(_QWORD *)a1;
  v11 = a5[3];
  v15[2] = a5[2];
  v15[3] = v11;
  v12 = a5[5];
  v15[4] = a5[4];
  v15[5] = v12;
  v13 = a5[1];
  v15[0] = *a5;
  v15[1] = v13;
  return sub_23B193904(v10, *(unsigned __int8 *)(a1 + 8), a2, a3, a4, v15, a7, a8, a9, a10);
}

uint64_t sub_23B180BC4(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_23B193610(a1, a2, a3, a7, a8, a9, a10);
}

uint64_t sub_23B180BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12)
{
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[6];

  v12 = *(_QWORD *)a1;
  v13 = a6[3];
  v17[2] = a6[2];
  v17[3] = v13;
  v14 = a6[5];
  v17[4] = a6[4];
  v17[5] = v14;
  v15 = a6[1];
  v17[0] = *a6;
  v17[1] = v15;
  return sub_23B1944C0(v12, *(unsigned __int8 *)(a1 + 8), a2, a3, a4, a5, v17, a8, a9, a11, a12);
}

uint64_t sub_23B180C3C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD v29[4];
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[7];

  v11 = *(_OWORD *)(a3 + 48);
  v36[2] = *(_OWORD *)(a3 + 32);
  v36[3] = v11;
  v12 = *(_OWORD *)(a3 + 80);
  v36[4] = *(_OWORD *)(a3 + 64);
  v36[5] = v12;
  v13 = *(_OWORD *)(a3 + 16);
  v14 = *(_OWORD *)(a3 + 32);
  v36[0] = *(_OWORD *)a3;
  v36[1] = v13;
  v15 = *(_QWORD *)a1;
  v16 = *(unsigned int *)(a3 + 8);
  v17 = *(_QWORD *)(a3 + 16);
  v18 = *(unsigned __int8 *)(a3 + 24);
  v19 = *(unsigned __int8 *)(a3 + 48);
  v20 = *(_QWORD *)(a3 + 56);
  v21 = *(_QWORD *)(a3 + 64);
  v22 = *(_QWORD *)(a3 + 88);
  v23 = *(unsigned __int8 *)(a1 + 8);
  v29[0] = *(_QWORD *)a3;
  v29[1] = v16;
  v29[2] = v17;
  v29[3] = v18;
  v30 = v14;
  v31 = v19;
  v32 = v20;
  v33 = v21;
  v34 = *(_OWORD *)(a3 + 72);
  v35 = v22;
  v24 = swift_allocObject();
  v25 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v24 + 88) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v24 + 104) = v25;
  v26 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v24 + 120) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v24 + 136) = v26;
  v27 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v24 + 56) = *(_OWORD *)a3;
  *(_QWORD *)(v24 + 16) = v15;
  *(_BYTE *)(v24 + 24) = v23;
  *(_QWORD *)(v24 + 32) = v6;
  *(_QWORD *)(v24 + 40) = a5;
  *(_QWORD *)(v24 + 48) = a6;
  *(_OWORD *)(v24 + 72) = v27;
  *(_BYTE *)(v24 + 152) = a2;
  sub_23B19DD20((uint64_t)v36);
  sub_23B19DD20((uint64_t)v36);
  swift_retain();
  swift_retain();
  sub_23AA7BAC4(v15, v23, (uint64_t)v29, 0, 0, (uint64_t)sub_23AC0295C, v24);
  swift_release();
  return sub_23B19DD70((uint64_t)v36);
}

void sub_23B180D88(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4)
{
  sub_23B173050(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8), a3, a4);
}

uint64_t sub_23B180DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  _OWORD v9[6];

  v5 = *(_QWORD *)a1;
  memset(v9, 0, sizeof(v9));
  v6 = *(unsigned __int8 *)(a1 + 8);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  *(_BYTE *)(v7 + 24) = v6;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a3;
  swift_retain();
  sub_23AA7BAC4(v5, v6, (uint64_t)v9, 0, 0, (uint64_t)sub_23B19DB00, v7);
  return swift_release();
}

uint64_t sub_23B180E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _OWORD v10[6];

  v6 = *(_QWORD *)a1;
  memset(v10, 0, sizeof(v10));
  v7 = *(unsigned __int8 *)(a1 + 8);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  *(_QWORD *)(v8 + 32) = v6;
  *(_BYTE *)(v8 + 40) = v7;
  *(_QWORD *)(v8 + 48) = v3;
  swift_retain();
  swift_retain();
  sub_23AA7BAC4(v6, v7, (uint64_t)v10, 0, 0, (uint64_t)sub_23B19DAA0, v8);
  return swift_release();
}

uint64_t sub_23B180EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _OWORD v10[6];

  v6 = *(_QWORD *)a1;
  memset(v10, 0, sizeof(v10));
  v7 = *(unsigned __int8 *)(a1 + 8);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  *(_QWORD *)(v8 + 32) = v6;
  *(_BYTE *)(v8 + 40) = v7;
  *(_QWORD *)(v8 + 48) = v3;
  swift_retain();
  swift_retain();
  sub_23AA7BAC4(v6, v7, (uint64_t)v10, 0, 0, (uint64_t)sub_23B19D9F8, v8);
  return swift_release();
}

uint64_t sub_23B180FAC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _OWORD v12[6];

  v8 = *(_QWORD *)a1;
  memset(v12, 0, sizeof(v12));
  v9 = *(unsigned __int8 *)(a1 + 8);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  *(_QWORD *)(v10 + 32) = v8;
  *(_BYTE *)(v10 + 40) = v9;
  *(_BYTE *)(v10 + 41) = a2;
  *(_QWORD *)(v10 + 48) = v4;
  swift_retain();
  swift_retain();
  sub_23AA7BAC4(v8, v9, (uint64_t)v12, 0, 2048, (uint64_t)sub_23B19D94C, v10);
  return swift_release();
}

uint64_t sub_23B18106C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _OWORD v12[6];

  v8 = *(_QWORD *)a1;
  memset(v12, 0, sizeof(v12));
  v9 = *(unsigned __int8 *)(a1 + 8);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  *(_QWORD *)(v10 + 32) = v8;
  *(_BYTE *)(v10 + 40) = v9;
  *(_BYTE *)(v10 + 41) = a2;
  *(_QWORD *)(v10 + 48) = v4;
  swift_retain();
  swift_retain();
  sub_23AA7BAC4(v8, v9, (uint64_t)v12, 0, 2048, (uint64_t)sub_23B19D8B4, v10);
  return swift_release();
}

uint64_t sub_23B18112C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23B15A590(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a2, a3);
}

uint64_t sub_23B181144(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];

  v6 = *(_QWORD *)a1;
  v7 = a2[3];
  v11[2] = a2[2];
  v11[3] = v7;
  v8 = a2[5];
  v11[4] = a2[4];
  v11[5] = v8;
  v9 = a2[1];
  v11[0] = *a2;
  v11[1] = v9;
  return sub_23B15FCE8(v6, *(_BYTE *)(a1 + 8), v11, a3, a4, a5, a6);
}

uint64_t sub_23B181198(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _OWORD v12[6];

  v8 = *(_QWORD *)a1;
  memset(v12, 0, sizeof(v12));
  v9 = *(unsigned __int8 *)(a1 + 8);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  *(_BYTE *)(v10 + 32) = a2;
  *(_QWORD *)(v10 + 40) = v4;
  *(_QWORD *)(v10 + 48) = v8;
  *(_BYTE *)(v10 + 56) = v9;
  swift_retain();
  swift_retain();
  sub_23AA7BAC4(v8, v9, (uint64_t)v12, 0, 1, (uint64_t)sub_23B19D2D8, v10);
  return swift_release();
}

uint64_t sub_23B181254(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_23B18128C(a1, a2, a3, (uint64_t)&unk_250C19FE8, (uint64_t)"detachFolder(_:completion:)", (uint64_t)sub_23B19D26C);
}

uint64_t sub_23B181270(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_23B18128C(a1, a2, a3, (uint64_t)&unk_250C19FC0, (uint64_t)"attachFolder(_:completion:)", (uint64_t)sub_23B19D0F4);
}

uint64_t sub_23B18128C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  id v15;

  v11 = *a1;
  v12 = *((_BYTE *)a1 + 8);
  v13 = *(void **)(v6 + 216);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v11;
  *(_BYTE *)(v14 + 24) = v12;
  *(_QWORD *)(v14 + 32) = a2;
  *(_QWORD *)(v14 + 40) = a3;
  *(_QWORD *)(v14 + 48) = v6;
  v15 = v13;
  swift_retain();
  swift_retain();
  sub_23AA814FC(0, a5, 27, 2, a6, v14);

  return swift_release();
}

uint64_t sub_23B181344(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  void *v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if (a3 == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    if (a3 != 2)
    {
      result = sub_23B1C704C();
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    v10 = (void *)swift_retain();
    v11 = objc_sync_enter(v10);
    if (a2)
    {
      if (v11)
        goto LABEL_16;
      v12 = v5[20];
      swift_retain();
      if (objc_sync_exit(v5))
        goto LABEL_17;
      swift_release();
      a2 = *(_QWORD *)(v12 + 40);
      v13 = *(_BYTE *)(v12 + 48);
      swift_release();
      if ((v13 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        LOBYTE(v21) = 2;
        v22 = 0u;
        v23 = 0u;
        v24 = 0u;
        v25 = 0u;
        v26 = 0u;
        v27 = 0u;
        v28 = 0;
        sub_23AAFC630((uint64_t)&v20);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)&v20, v14, (uint64_t *)&unk_2542E0950);
        return swift_willThrow();
      }
    }
    else
    {
      if (v11)
        goto LABEL_16;
      v16 = v5[20];
      swift_retain();
      if (objc_sync_exit(v5))
        goto LABEL_17;
      swift_release();
      a2 = *(_QWORD *)(v16 + 24);
      swift_release();
    }
  }
  v29 = a1;
  v30 = a2;
  v31 = 0;
  v32 = a4;
  v33 = a5;
  v17 = (void *)swift_retain();
  if (objc_sync_enter(v17))
LABEL_16:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v5);
  swift_retain();
  if (objc_sync_exit(v5))
LABEL_17:
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v5);
  swift_release();
  v18 = swift_release();
  v19 = MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)&v23 = 0;
  v20 = a1;
  v21 = a2;
  v22 = 0uLL;
  sub_23B149B70(a4, a5, (uint64_t)&v20, sub_23AAB934C);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23B181658()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  v1 = *v0;
  v2 = (void *)swift_retain();
  v3 = sub_23B0EA5EC(v2, v1);
  swift_release();
  return v3;
}

void sub_23B1816A8(uint64_t a1, _BYTE *a2)
{
  *a2 = 1;
  sub_23B1AA030();
}

uint64_t sub_23B181710@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23B1C5F54();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23B181788()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_23B1C5F60();
}

uint64_t sub_23B1817F4(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_23B181814(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_23B181824(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x24BEE4AF8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_23B181CC0(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_23B1C65A8();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_23B1C64B8();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_23B1C64B8();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_23B1C65C0();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_23AF9886C(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_23AF9886C((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_23B1C64B8();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_23B1C65C0();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_23AF9886C(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_23AF9886C((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_23B1C7040();
  __break(1u);
LABEL_42:
  result = sub_23B1C7040();
  __break(1u);
  return result;
}

uint64_t sub_23B181CC0(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_23B1C65C0();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_23AF9886C(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_23AF9886C((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_23B1C7040();
  __break(1u);
  return result;
}

_QWORD *sub_23B181E18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5608);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23B181E7C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_23B1C6560();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x23B85EE58](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t (*sub_23B181EF4(_QWORD *a1, uint64_t a2, char a3))()
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x50uLL);
  *a1 = v6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[8] = sub_23B18CB68(v6);
  v6[9] = sub_23B18C0BC(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_23B181F78;
}

void (*sub_23B181F7C(_QWORD *a1, void *a2))(uint64_t a1)
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  id v6;

  v4 = malloc(0x58uLL);
  *a1 = v4;
  v4[8] = a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = a2;
  v4[9] = sub_23B18CB68(v4);
  v4[10] = sub_23B18C2C0(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_23B182004;
}

void sub_23B182004(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);

  v2(v1, 0);
  free(v1);
}

uint64_t (*sub_23B182050(_QWORD *a1, uint64_t a2, char a3))()
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x50uLL);
  *a1 = v6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[8] = sub_23B18CB68(v6);
  v6[9] = sub_23B18C4F4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_23B181F78;
}

uint64_t (*sub_23B1820D4(_QWORD *a1, uint64_t a2, char a3))()
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x50uLL);
  *a1 = v6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[8] = sub_23B18CB68(v6);
  v6[9] = sub_23B18C710(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_23B181F78;
}

void (*sub_23B182158(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x58uLL);
  *a1 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v6 = malloc(*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  v4[8] = v6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_23AA8EFC8(a2, (uint64_t)v6, &qword_2542DDDB0);
  v4[9] = sub_23B18CB88(v4);
  v4[10] = sub_23B18C850(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_23B182210;
}

void sub_23B182210(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  sub_23AA8A05C((uint64_t)v3, &qword_2542DDDB0);
  v2(v1, 0);
  free(v3);
  free(v1);
}

uint64_t (*sub_23B182270(_QWORD *a1, uint64_t a2, char a3))()
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x50uLL);
  *a1 = v6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6[8] = sub_23B18CB68(v6);
  v6[9] = sub_23B18C9AC(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_23B181F78;
}

void sub_23B1822F4(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

double sub_23B182330@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23AAAF4C4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23B186634();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_23AAA159C((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_23B183478(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_23B182420@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23AAAF4C4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23B187010();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    *a3 = *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v8);
    sub_23B183830(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = xmmword_23B1CA780;
  }
  return result;
}

uint64_t sub_23B182504(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23AAAF4C4(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B1871D4();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_23B183830(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23B1825E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23AA88CF8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B187724();
    v7 = v10;
  }

  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_23B183A04(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23B1826AC(uint64_t a1)
{
  return sub_23B1826E4(a1, sub_23AA88CF8, (uint64_t)&unk_2569E1D40, (void (*)(uint64_t))sub_23B187C44);
}

uint64_t sub_23B1826C8(uint64_t a1)
{
  return sub_23B1826E4(a1, sub_23AA88CF8, (uint64_t)&unk_2569E40E8, (void (*)(uint64_t))sub_23B187C44);
}

uint64_t sub_23B1826E4(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t *v8;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v8 = v4;
  swift_bridgeObjectRetain();
  v10 = a2(a1);
  LOBYTE(a1) = v11;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v8;
  v16 = *v8;
  *v8 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a4(a3);
    v13 = v16;
  }

  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v10);
  sub_23B183A04(v10, v13);
  *v8 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23B1827C0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23ACD5C3C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B187DE0();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  sub_23AA937BC(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_23B183BF8(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23B182898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23B182F98(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &qword_2569E1B40, a3);
}

uint64_t sub_23B1828AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23ACD5B98(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23B18802C();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
    sub_23AA937BC(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = sub_23B1C5BDC();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a2, v12 + *(_QWORD *)(v14 + 72) * v6, v13);
    sub_23B183ED4(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = sub_23B1C5BDC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_23B1829E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23AA88CF8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B1884B4();
    v7 = v10;
  }

  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v4);
  sub_23B184410(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23B182ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23ACD5CDC(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23B188674();
      v9 = v15;
    }
    v10 = *(_QWORD *)(v9 + 56);
    v11 = type metadata accessor for SyncState();
    v12 = *(_QWORD *)(v11 - 8);
    sub_23AA94050(v10 + *(_QWORD *)(v12 + 72) * v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    sub_23B18460C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v14 = type metadata accessor for SyncState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_23B182BF4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23AA88CF8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B188A50();
    v7 = v10;
  }

  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v4);
  sub_23B184410(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23B182CD8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23AA88CF8(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B188DF0();
    v7 = v10;
  }

  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_23B183A04(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23B182DA8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23ACD5CF0(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B188FA8();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  sub_23AA8A05C(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, &qword_2542DDDB0);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_23B184FB8(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23B182E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_23ACD5FA0(a1, a2, a3, a4);
  LOBYTE(a4) = v11;
  swift_bridgeObjectRelease();
  if ((a4 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v5;
  v16 = *v5;
  *v5 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B1893C0();
    v13 = v16;
  }
  sub_23ABE4D94(*(void **)(*(_QWORD *)(v13 + 48) + 32 * v10), *(void **)(*(_QWORD *)(v13 + 48) + 32 * v10 + 8), *(void **)(*(_QWORD *)(v13 + 48) + 32 * v10 + 16), *(_BYTE *)(*(_QWORD *)(v13 + 48) + 32 * v10 + 24));
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 16 * v10);
  sub_23B185390(v10, v13);
  *v5 = v13;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23B182F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23B182F98(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], &qword_2569E1CA8, a3);
}

uint64_t sub_23B182F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v8 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_23AAAF4C4(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v8;
    v21 = *v8;
    *v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23B189CA0(a3, a4);
      v15 = v21;
    }
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 56);
    v17 = a3(0);
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a5, v16 + *(_QWORD *)(v18 + 72) * v12, v17);
    sub_23B18598C(v12, v15, a3);
    *v8 = v15;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a5, 0, 1, v17);
  }
  else
  {
    v20 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
  }
}

uint64_t sub_23B1830DC(uint64_t a1)
{
  return sub_23B1826E4(a1, sub_23AA88CF8, (uint64_t)&qword_2542DF3D0, (void (*)(uint64_t))sub_23B18A8C4);
}

uint64_t sub_23B1830F8(uint64_t a1)
{
  return sub_23B1826E4(a1, sub_23AA88CF8, (uint64_t)&unk_2542DF3C0, (void (*)(uint64_t))sub_23B18A8C4);
}

double sub_23B183114@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23AAAF4C4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23B18AC2C(&qword_2542DF3A0, (void (*)(_BYTE *, uint64_t))sub_23ABD76F0);
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_23ABD76F0((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_23B185B94(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_23B18321C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23AAAF4C4(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B18AE30((uint64_t *)&unk_2542DF3A8);
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_23B185D80(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23B183300(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23ACD625C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B18B7C4();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_23B1C5A08();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_23B186174(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23B1833E4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = v2;
  v4 = sub_23AA97254(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = *v2;
  v11 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23B18BBB0();
    v8 = v11;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v6);
  sub_23B186414(v6, v8);
  *v3 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_23B183478(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23B1C74A8();
        swift_bridgeObjectRetain();
        sub_23B1C64A0();
        v10 = sub_23B1C74E4();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B18364C(unint64_t a1, uint64_t a2)
{
  return sub_23B184D6C(a1, a2, (uint64_t *)&unk_2542E6B00);
}

unint64_t sub_23B183658(unint64_t a1, uint64_t a2)
{
  return sub_23B184D6C(a1, a2, &qword_2542E6C80);
}

unint64_t sub_23B183664(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_23B1C749C();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10) - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B183830(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23B1C74A8();
        swift_bridgeObjectRetain();
        sub_23B1C64A0();
        v9 = sub_23B1C74E4();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B183A04(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_23B1C63E0();
        sub_23B1C74A8();
        v10 = v9;
        sub_23B1C64A0();
        v11 = sub_23B1C74E4();

        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_QWORD *)(v16 + 8 * v3);
          v18 = (_QWORD *)(v16 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B183BF8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v32 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  v4 = *(_QWORD *)(v32 - 8);
  result = MEMORY[0x24BDAC7A8](v32);
  v30 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v29 = (result + 1) & v10;
      v11 = *(_QWORD *)(v4 + 72);
      v31 = v10;
      v12 = (uint64_t)v30;
      do
      {
        v13 = v11;
        v14 = v11 * v9;
        sub_23AA907B0(*(_QWORD *)(a2 + 48) + v11 * v9, v12, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
        sub_23B1C74A8();
        sub_23B1C5A08();
        sub_23AA7E38C((unint64_t *)&qword_2542E0230, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
        sub_23B1C62D8();
        sub_23B1C6C5C();
        v15 = sub_23B1C74E4();
        result = sub_23AA937BC(v12, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
        v16 = v31;
        v17 = v15 & v31;
        if (a1 >= (uint64_t)v29)
        {
          if (v17 < v29)
          {
            v11 = v13;
          }
          else
          {
            v11 = v13;
            if (a1 >= (uint64_t)v17)
              goto LABEL_12;
          }
        }
        else
        {
          v11 = v13;
          if (v17 >= v29 || a1 >= (uint64_t)v17)
          {
LABEL_12:
            v18 = *(_QWORD *)(a2 + 48);
            result = v18 + v11 * a1;
            if (v11 * a1 < v14 || result >= v18 + v14 + v11)
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              v16 = v31;
            }
            else if (v11 * a1 != v14)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_QWORD *)(v19 + 8 * a1);
            v21 = (_QWORD *)(v19 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v20 >= v21 + 1))
            {
              *v20 = *v21;
              a1 = v9;
            }
          }
        }
        v9 = (v9 + 1) & v16;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v22 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v23 = *v22;
    v24 = (-1 << a1) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B183ED4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  v4 = *(_QWORD *)(v29 - 8);
  result = MEMORY[0x24BDAC7A8](v29);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v28 = (result + 1) & v11;
      v12 = *(_QWORD *)(v4 + 72);
      v30 = v12;
      do
      {
        v13 = v12 * v10;
        sub_23AA907B0(*(_QWORD *)(a2 + 48) + v12 * v10, (uint64_t)v7, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
        sub_23B1C74A8();
        sub_23B1C5A08();
        sub_23AA7E38C((unint64_t *)&qword_2542E0230, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
        sub_23B1C62D8();
        sub_23B1C64A0();
        v14 = sub_23B1C74E4();
        result = sub_23AA937BC((uint64_t)v7, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
        v15 = v14 & v11;
        if (a1 >= (uint64_t)v28)
        {
          if (v15 < v28)
          {
            v12 = v30;
          }
          else
          {
            v12 = v30;
            if (a1 >= (uint64_t)v15)
              goto LABEL_12;
          }
        }
        else
        {
          v12 = v30;
          if (v15 >= v28 || a1 >= (uint64_t)v15)
          {
LABEL_12:
            if (v12 * a1 < v13
              || *(_QWORD *)(a2 + 48) + v12 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v13 + v12))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v12 * a1 != v13)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v16 = *(_QWORD *)(a2 + 56);
            v17 = *(_QWORD *)(*(_QWORD *)(sub_23B1C5BDC() - 8) + 72);
            v18 = v17 * a1;
            result = v16 + v17 * a1;
            v19 = v17 * v10;
            v20 = v16 + v17 * v10 + v17;
            if (v18 < v19 || result >= v20)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v12 = v30;
            }
            else
            {
              a1 = v10;
              v12 = v30;
              if (v18 != v19)
              {
                result = swift_arrayInitWithTakeBackToFront();
                a1 = v10;
              }
            }
          }
        }
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v22 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v23 = *v22;
    v24 = (-1 << a1) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B1841E4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = 16 * v6;
        v11 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + 16 * v6 + 8);
        sub_23B1C74A8();
        if (v11)
        {
          sub_23B1C74B4();
          if (v11 == 1)
            sub_23B1C74D8();
        }
        else
        {
          sub_23B1C74B4();
          sub_23B1C74CC();
        }
        result = sub_23B1C74E4();
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_15;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_15:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + v10);
          if (16 * v3 != v10 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 24 * v3;
          v18 = (__int128 *)(v16 + 24 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 24))
          {
            v9 = *v18;
            *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
            *(_OWORD *)v17 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B184410(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  __int128 *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_23B1C63E0();
        sub_23B1C74A8();
        v11 = v10;
        sub_23B1C64A0();
        v12 = sub_23B1C74E4();

        result = swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || v15 >= v16 + 1)
            *v15 = *v16;
          v17 = *(_QWORD *)(a2 + 56);
          v18 = v17 + 24 * v3;
          v19 = (__int128 *)(v17 + 24 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= (unint64_t)v19 + 24))
          {
            v9 = *v19;
            *(_QWORD *)(v18 + 16) = *((_QWORD *)v19 + 2);
            *(_OWORD *)v18 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B18460C(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_23B1C74A8();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x23B184924);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_23B184948(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_23B1C63E0();
        sub_23B1C74A8();
        v10 = v9;
        sub_23B1C64A0();
        v11 = sub_23B1C74E4();

        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_OWORD *)(v16 + 16 * v3);
          v18 = (_OWORD *)(v16 + 16 * v6);
          if (16 * v3 != 16 * v6 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B184B40(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = 16 * v6;
        v10 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + 16 * v6 + 8);
        sub_23B1C74A8();
        if (v10)
        {
          sub_23B1C74B4();
          if (v10 == 1)
            sub_23B1C74D8();
        }
        else
        {
          sub_23B1C74B4();
          sub_23B1C74CC();
        }
        result = sub_23B1C74E4();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_15;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_15:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = 16 * v3;
          v14 = (_OWORD *)(v12 + 16 * v3);
          v15 = (_OWORD *)(v12 + v9);
          if (16 * v3 != v9 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_OWORD *)(v16 + v13);
          v18 = (_OWORD *)(v16 + v9);
          if (v13 != v9 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B184D60(unint64_t a1, uint64_t a2)
{
  return sub_23B184D6C(a1, a2, &qword_2542E1568);
}

unint64_t sub_23B184D6C(unint64_t result, uint64_t a2, uint64_t *a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        v11 = 16 * v7;
        v12 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + 16 * v7 + 8);
        sub_23B1C74A8();
        if (v12)
        {
          sub_23B1C74B4();
          if (v12 == 1)
            sub_23B1C74D8();
        }
        else
        {
          sub_23B1C74B4();
          sub_23B1C74CC();
        }
        result = sub_23B1C74E4();
        v13 = result & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v13 < v10)
          goto LABEL_15;
LABEL_16:
        v14 = *(_QWORD *)(a2 + 48);
        v15 = (_OWORD *)(v14 + 16 * v4);
        v16 = (_OWORD *)(v14 + v11);
        if (16 * v4 != v11 || v15 >= v16 + 1)
          *v15 = *v16;
        v17 = *(_QWORD *)(a2 + 56);
        v18 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 72);
        v19 = v18 * v4;
        result = v17 + v18 * v4;
        v20 = v18 * v7;
        v21 = v17 + v18 * v7 + v18;
        if (v19 < v20 || result >= v21)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v19 == v20)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_25;
      }
      if (v13 < v10)
        goto LABEL_6;
LABEL_15:
      if (v4 < (uint64_t)v13)
        goto LABEL_6;
      goto LABEL_16;
    }
LABEL_25:
    v23 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v24 = *v23;
    v25 = (-1 << v4) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v5 + 8 * (result >> 6));
    v25 = *v23;
    v24 = (-1 << result) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B184FB8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  MEMORY[0x24BDAC7A8](v4);
  v43 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  MEMORY[0x24BDAC7A8](v6);
  v42 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v8 = *(_QWORD *)(v47 - 8);
  v9 = MEMORY[0x24BDAC7A8](v47);
  v45 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v41 - v12;
  v14 = a2 + 64;
  v46 = a2;
  v15 = -1 << *(_BYTE *)(a2 + 32);
  v16 = (a1 + 1) & ~v15;
  if (((1 << v16) & *(_QWORD *)(a2 + 64 + 8 * (v16 >> 6))) != 0)
  {
    v17 = ~v15;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v14 + 8 * (v16 >> 6)) & (1 << v16)) != 0)
    {
      v18 = (result + 1) & v17;
      v19 = *(_QWORD *)(v8 + 72);
      v20 = v46;
      v44 = v14;
      while (1)
      {
        v21 = v19;
        v22 = v19 * v16;
        sub_23AA8EFC8(*(_QWORD *)(v20 + 48) + v19 * v16, (uint64_t)v13, &qword_2542DDDB0);
        sub_23B1C74A8();
        v23 = v45;
        sub_23AA8EFC8((uint64_t)v13, v45, &qword_2542DDDB0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v24 = v43;
          sub_23AA724E8(v23, v43, &qword_2542E1608);
          sub_23B1C74B4();
          sub_23B14B2C8();
          v25 = v24;
          v26 = &qword_2542E1608;
        }
        else
        {
          v27 = v42;
          sub_23AA724E8(v23, v42, &qword_2542E1600);
          sub_23B1C74B4();
          sub_23B14AE68();
          v25 = v27;
          v26 = &qword_2542E1600;
        }
        sub_23AA8A05C(v25, v26);
        v28 = sub_23B1C74E4();
        result = sub_23AA8A05C((uint64_t)v13, &qword_2542DDDB0);
        v29 = v28 & v17;
        if (a1 >= (uint64_t)v18)
        {
          v20 = v46;
          v19 = v21;
          if (v29 >= v18 && a1 >= (uint64_t)v29)
          {
LABEL_15:
            v30 = *(_QWORD *)(v20 + 48);
            result = v30 + v19 * a1;
            if (v19 * a1 < v22 || result >= v30 + v22 + v19)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              v19 = v21;
              v14 = v44;
            }
            else
            {
              v31 = v19 * a1 == v22;
              v14 = v44;
              if (!v31)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v19 = v21;
              }
            }
            v32 = *(_QWORD *)(v20 + 56);
            v33 = (_QWORD *)(v32 + 8 * a1);
            v34 = (_QWORD *)(v32 + 8 * v16);
            if (a1 != v16 || (a1 = v16, v33 >= v34 + 1))
            {
              *v33 = *v34;
              a1 = v16;
            }
            goto LABEL_5;
          }
        }
        else
        {
          v20 = v46;
          v19 = v21;
          if (v29 >= v18 || a1 >= (uint64_t)v29)
            goto LABEL_15;
        }
        v14 = v44;
LABEL_5:
        v16 = (v16 + 1) & v17;
        if (((*(_QWORD *)(v14 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
          goto LABEL_25;
      }
    }
    v20 = v46;
LABEL_25:
    v35 = (uint64_t *)(v14 + 8 * ((unint64_t)a1 >> 6));
    v37 = *v35;
    v36 = (-1 << a1) - 1;
  }
  else
  {
    v35 = (uint64_t *)(v14 + 8 * ((unint64_t)a1 >> 6));
    v36 = *v35;
    v37 = (-1 << a1) - 1;
    v20 = v46;
  }
  *v35 = v36 & v37;
  v38 = *(_QWORD *)(v20 + 16);
  v39 = __OFSUB__(v38, 1);
  v40 = v38 - 1;
  if (v39)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v40;
    ++*(_DWORD *)(v20 + 36);
  }
  return result;
}

void sub_23B185390(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37[72];

  v2 = a2;
  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v35 = v2;
      v36 = v4;
      do
      {
        v10 = 32 * v6;
        v11 = *(_QWORD *)(v2 + 48) + 32 * v6;
        v12 = v7;
        v13 = *(void **)v11;
        v14 = *(void **)(v11 + 8);
        v15 = *(void **)(v11 + 16);
        v16 = *(_BYTE *)(v11 + 24);
        v17 = v3;
        v18 = v9;
        sub_23B1C74A8();
        sub_23AAFA44C(v13, v14, v15, v16);
        sub_23AC4BB9C((uint64_t)v37, (uint64_t)v13, (uint64_t)v14, (uint64_t)v15, v16);
        v19 = sub_23B1C74E4();
        v20 = v13;
        v7 = v12;
        sub_23ABE4D94(v20, v14, v15, v16);
        v9 = v18;
        v3 = v17;
        v21 = v19 & v12;
        if (v17 >= (uint64_t)v9)
        {
          if (v21 < v9)
          {
            v2 = v35;
            v4 = v36;
            goto LABEL_5;
          }
          v2 = v35;
          if (v17 >= (uint64_t)v21)
            goto LABEL_12;
        }
        else
        {
          v2 = v35;
          if (v21 >= v9 || v17 >= (uint64_t)v21)
          {
LABEL_12:
            v22 = *(_QWORD *)(v2 + 48);
            v23 = (_OWORD *)(v22 + 32 * v17);
            v24 = (_OWORD *)(v22 + v10);
            if (32 * v17 != v10 || v23 >= v24 + 2)
            {
              v25 = v24[1];
              *v23 = *v24;
              v23[1] = v25;
            }
            v26 = *(_QWORD *)(v2 + 56);
            v27 = (_OWORD *)(v26 + 16 * v17);
            v28 = (_OWORD *)(v26 + 16 * v6);
            v4 = v36;
            if (v17 != v6 || (v3 = v6, v27 >= v28 + 1))
            {
              *v27 = *v28;
              v3 = v6;
            }
            goto LABEL_5;
          }
        }
        v4 = v36;
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v29 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v30 = *v29;
    v31 = (-1 << v3) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(v2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v34;
    ++*(_DWORD *)(v2 + 36);
  }
}

unint64_t sub_23B1855D8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _BYTE v25[48];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = 48 * v6;
        sub_23AA724E8(*(_QWORD *)(a2 + 48) + 48 * v6, (uint64_t)v25, (uint64_t *)&unk_2542E05B0);
        sub_23B1C74A8();
        sub_23AC4BE5C();
        result = sub_23B1C74E4();
        v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (__int128 *)(v11 + 48 * v3);
          v13 = (__int128 *)(v11 + v9);
          if (48 * v3 < v9 || v12 >= v13 + 3 || v3 != v6)
          {
            v14 = *v13;
            v15 = v13[2];
            v12[1] = v13[1];
            v12[2] = v15;
            *v12 = v14;
          }
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_OWORD *)(v16 + 16 * v3);
          v18 = (_OWORD *)(v16 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 1))
          {
            *v17 = *v18;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B1857D0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_23B1C749C();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        result = v15 + 16 * v3;
        if (v3 < (uint64_t)v6 || result >= v15 + 16 * v6 + 16)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v16 = v3 == v6;
          v3 = v6;
          if (v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B18598C(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_23B1C74A8();
        swift_bridgeObjectRetain();
        sub_23B1C64A0();
        v11 = sub_23B1C74E4();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B185B94(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23B1C74A8();
        swift_bridgeObjectRetain();
        sub_23B1C64A0();
        v11 = sub_23B1C74E4();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B185D80(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_23B1C74A8();
        swift_bridgeObjectRetain();
        sub_23B1C64A0();
        v9 = sub_23B1C74E4();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B185F54(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v10 = 16 * v6;
        v11 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + 16 * v6 + 8);
        sub_23B1C74A8();
        if (v11)
        {
          sub_23B1C74B4();
          if (v11 == 1)
            sub_23B1C74D8();
        }
        else
        {
          sub_23B1C74B4();
          sub_23B1C74CC();
        }
        result = sub_23B1C74E4();
        v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_15;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_15:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + v10);
          if (16 * v3 != v10 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (_OWORD *)(v16 + 32 * v3);
          v18 = (_OWORD *)(v16 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 2))
          {
            v9 = v18[1];
            *v17 = *v18;
            v17[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B186174(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_23B1C5A08();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_23AA7E38C((unint64_t *)&qword_2542E0230, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
        v18 = sub_23B1C62CC();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_23B186414(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = 16 * v6;
        v10 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + 16 * v6 + 8);
        sub_23B1C74A8();
        if (v10)
        {
          sub_23B1C74B4();
          if (v10 == 1)
            sub_23B1C74D8();
        }
        else
        {
          sub_23B1C74B4();
          sub_23B1C74CC();
        }
        result = sub_23B1C74E4();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_15;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_15:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + v9);
          if (16 * v3 != v9 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_QWORD *)(v15 + 8 * v3);
          v17 = (_QWORD *)(v15 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_23B186634()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5578);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_23AAA15AC(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_23AAA159C(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B186818()
{
  return sub_23B18920C(&qword_2569E4098);
}

void *sub_23B186824()
{
  return sub_23B18920C(&qword_2569E40B8);
}

void *sub_23B186830()
{
  return sub_23B186BB0((uint64_t *)&unk_2542E6B00, &qword_2542E3650);
}

id sub_23B186844()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E20C0);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    swift_bridgeObjectRetain();
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23B1869E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2080);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_BYTE *)(v21 + 8) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B186B9C()
{
  return sub_23B186BB0(&qword_2542E6C80, (uint64_t *)&unk_2569E1AD8);
}

void *sub_23B186BB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v29 = v2;
  v8 = *v2;
  v9 = sub_23B1C7094();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v30 = v8 + 64;
  v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      v14 = v26 + 1;
      if (v26 + 1 >= v31)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v14);
      if (!v27)
        break;
    }
LABEL_25:
    v17 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = *(_QWORD *)(v8 + 48) + 16 * v19;
    v22 = *(_QWORD *)v21;
    v23 = *(_BYTE *)(v21 + 8);
    v24 = *(_QWORD *)(v32 + 72) * v19;
    sub_23AA8EFC8(*(_QWORD *)(v8 + 56) + v24, (uint64_t)v7, a1);
    v25 = *(_QWORD *)(v10 + 48) + v20;
    *(_QWORD *)v25 = v22;
    *(_BYTE *)(v25 + 8) = v23;
    result = (void *)sub_23AA724E8((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24, a1);
  }
  v28 = v26 + 2;
  if (v28 >= v31)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v14 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v14);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B186DDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1A50);
  v5 = *v0;
  v6 = sub_23B1C7094();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v7;
    return result;
  }
  v24 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_23;
      v21 = *(_QWORD *)(v25 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_22:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v26 + 72) * v16;
    sub_23AA8EFC8(*(_QWORD *)(v5 + 56) + v19, (uint64_t)v4, &qword_2542E6A10);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)sub_23AA724E8((uint64_t)v4, *(_QWORD *)(v7 + 56) + v19, &qword_2542E6A10);
  }
  v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_25;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_23B187010()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7F0);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    result = (void *)sub_23AAAE668(v24, *((unint64_t *)&v24 + 1));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B1871D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5558);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B18738C()
{
  return sub_23B18920C(&qword_2569E4078);
}

void *sub_23B187398()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5588);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_23ACEBF78(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_23AAA15AC(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_23AAA159C(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B18757C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C30);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B187724()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1AC8);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B1878CC()
{
  return sub_23B18BD70(&qword_2569E1AC0);
}

id sub_23B1878D8()
{
  return sub_23B187C44((uint64_t *)&unk_2569E1D40);
}

id sub_23B1878E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1C48);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B187A8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5568);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23B187C38()
{
  return sub_23B187C44(&qword_2569E40E8);
}

id sub_23B187C44(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23B1C7094();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = v19;
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B187DE0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2078);
  v5 = *v0;
  v6 = sub_23B1C7094();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_23AA907B0(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_23AA94050((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = (void *)swift_retain();
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B188018()
{
  return sub_23B189CA0((uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &qword_2569E1B40);
}

void *sub_23B18802C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = sub_23B1C5BDC();
  v1 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v35 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  v37 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1D58);
  v31 = v0;
  v5 = *v0;
  v6 = sub_23B1C7094();
  v7 = *(_QWORD *)(v5 + 16);
  v39 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v29 = v39;
    v28 = v31;
LABEL_25:
    *v28 = v29;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v39;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v38 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v32 = v5 + 64;
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = (uint64_t)v34;
  v16 = v36;
  for (i = v39;
        ;
        result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(i + 56) + v22, v24, v16))
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v11 << 6);
      v20 = v38;
      goto LABEL_9;
    }
    v25 = v11 + 1;
    v20 = v38;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_23;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_22:
    v14 = (v26 - 1) & v26;
    v19 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    v21 = *(_QWORD *)(v37 + 72) * v19;
    sub_23AA907B0(*(_QWORD *)(v20 + 48) + v21, v15, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    v22 = *(_QWORD *)(v1 + 72) * v19;
    v23 = *(_QWORD *)(v20 + 56) + v22;
    v24 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v35, v23, v16);
    sub_23AA94050(v15, *(_QWORD *)(i + 48) + v21, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v39;
    goto LABEL_25;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

char *sub_23B1882F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1B30);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (char *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (char *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = (char *)memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v29 = __clz(__rbit64(v27));
    v12 = (v27 - 1) & v27;
    v15 = v29 + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = 24 * v15;
    v20 = *(_QWORD *)(v2 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_BYTE *)(v20 + 8);
    v23 = *(_QWORD *)(v20 + 16);
    result = *(char **)(v4 + 48);
    v24 = &result[v16];
    *(_QWORD *)v24 = v18;
    v24[8] = v17;
    v25 = *(_QWORD *)(v4 + 56) + v19;
    *(_QWORD *)v25 = v21;
    *(_BYTE *)(v25 + 8) = v22;
    *(_QWORD *)(v25 + 16) = v23;
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23B1884B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1B28);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_BYTE *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v23 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v23 = v20;
    *(_BYTE *)(v23 + 8) = v21;
    *(_QWORD *)(v23 + 16) = v22;
    result = v17;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B188674()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for SyncState();
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7D0);
  v5 = *v0;
  v6 = sub_23B1C7094();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v24 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v19 = *(_QWORD *)(v26 + 72) * v17;
    sub_23AA907B0(*(_QWORD *)(v5 + 56) + v19, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)sub_23AA94050((uint64_t)v4, *(_QWORD *)(v7 + 56) + v19, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
  }
  v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23B18889C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1A90);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    LOBYTE(v19) = *(_BYTE *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v21 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v21 = v20;
    *(_BYTE *)(v21 + 8) = v19;
    result = v17;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23B188A50()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1A98);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(void **)v19;
    v21 = *(_OWORD *)(v19 + 8);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v22 = v20;
    *(_OWORD *)(v22 + 8) = v21;
    v23 = (void *)v21;
    swift_retain();
    v24 = v17;
    v25 = v20;
    result = v23;
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B188C24()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1AA0);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v26 = __clz(__rbit64(v24));
    v12 = (v24 - 1) & v24;
    v15 = v26 + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = *(_QWORD *)(v2 + 56) + v16;
    v20 = *(_QWORD *)v19;
    LOBYTE(v19) = *(_BYTE *)(v19 + 8);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_BYTE *)(v21 + 8) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v16;
    *(_QWORD *)v22 = v20;
    *(_BYTE *)(v22 + 8) = v19;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B188DD0()
{
  return sub_23B186BB0(&qword_2542E1568, (uint64_t *)&unk_2542DE7E0);
}

void *sub_23B188DE4()
{
  return sub_23B18920C(&qword_2569E4080);
}

id sub_23B188DF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1B08);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B188F90()
{
  return sub_23B18920C(&qword_2569E4088);
}

void *sub_23B188F9C()
{
  return sub_23B18920C(&qword_2569E4090);
}

void *sub_23B188FA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1AA8);
  v5 = *v0;
  v6 = sub_23B1C7094();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v7;
    return result;
  }
  v24 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_23;
      v21 = *(_QWORD *)(v25 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_22:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    v17 = *(_QWORD *)(v26 + 72) * v16;
    sub_23AA8EFC8(*(_QWORD *)(v5 + 48) + v17, (uint64_t)v4, &qword_2542DDDB0);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    sub_23AA724E8((uint64_t)v4, *(_QWORD *)(v7 + 48) + v17, &qword_2542DDDB0);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_25;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_23B1891E8()
{
  return sub_23B18BD70(&qword_2569E1AB8);
}

void *sub_23B1891F4()
{
  return sub_23B18920C(&qword_2569E40A0);
}

void *sub_23B189200()
{
  return sub_23B18920C(&qword_2569E40A8);
}

void *sub_23B18920C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  _OWORD v21[2];

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23B1C7094();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    sub_23AAA15AC(*(_QWORD *)(v3 + 56) + 32 * v16, (uint64_t)v21);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = v17;
    result = sub_23AAA159C(v21, (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16));
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B1893C0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1AF0);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      v9 = v28 + 1;
      if (v28 + 1 >= v13)
        goto LABEL_26;
      v29 = *(_QWORD *)(v6 + 8 * v9);
      if (!v29)
        break;
    }
LABEL_25:
    v12 = (v29 - 1) & v29;
    v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 32 * v15;
    v18 = *(void **)v17;
    v19 = *(void **)(v17 + 8);
    v20 = *(void **)(v17 + 16);
    v21 = 16 * v15;
    v22 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v21);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v4 + 48) + v16;
    v26 = *(_BYTE *)(v17 + 24);
    *(_QWORD *)v25 = *(_QWORD *)v17;
    *(_QWORD *)(v25 + 8) = v19;
    *(_QWORD *)(v25 + 16) = v20;
    *(_BYTE *)(v25 + 24) = v26;
    v27 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v21);
    *v27 = v24;
    v27[1] = v23;
    sub_23AAFA44C(v18, v19, v20, v26);
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v13)
    goto LABEL_26;
  v29 = *(_QWORD *)(v6 + 8 * v30);
  if (v29)
  {
    v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v29 = *(_QWORD *)(v6 + 8 * v9);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B18958C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  _QWORD *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1AF8);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 48 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 48 * v15;
    v18 = *(_QWORD *)(v17 + 32);
    v19 = *(_WORD *)(v17 + 40);
    v20 = 16 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    v24 = *(_QWORD *)(v4 + 48) + v16;
    v25 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v24 = *(_OWORD *)v17;
    *(_OWORD *)(v24 + 16) = v25;
    *(_QWORD *)(v24 + 32) = v18;
    *(_WORD *)(v24 + 40) = v19;
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v26 = v22;
    v26[1] = v23;
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B189754()
{
  return sub_23B18AC2C(&qword_2569E40B0, (void (*)(_BYTE *, uint64_t))sub_23ABD76F0);
}

void *sub_23B189768()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C28);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_retain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23B189910()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C20);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B189AB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _BYTE v22[16];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E20A0);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    sub_23ACF17F0(*(_QWORD *)(v2 + 56) + 16 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_23AABABF4((uint64_t)v22, *(_QWORD *)(v4 + 56) + v18);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23B189C74()
{
  return sub_23B18B9F4(&qword_2569E1D20);
}

id sub_23B189C80()
{
  return sub_23B18B9F4(qword_2569E4100);
}

void *sub_23B189C8C()
{
  return sub_23B189CA0((uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], &qword_2569E1CA8);
}

void *sub_23B189CA0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1(0);
  v4 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v6 = (char *)&v33 - v5;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v7 = *v2;
  v8 = sub_23B1C7094();
  v9 = *(_QWORD *)(v7 + 16);
  v38 = v8;
  if (!v9)
  {
    result = (void *)swift_release();
    v32 = v38;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return result;
  }
  v10 = v8;
  result = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    v10 = v38;
  }
  v35 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v36 = (unint64_t)(v15 + 63) >> 6;
  v18 = v37;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      v14 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *(_QWORD *)(v35 + 8 * v14);
      if (!v29)
        break;
    }
LABEL_25:
    v17 = (v29 - 1) & v29;
    v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    v21 = 16 * v20;
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 56) + v25, v18);
    v26 = v38;
    v27 = (_QWORD *)(*(_QWORD *)(v38 + 48) + v21);
    *v27 = v24;
    v27[1] = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v26 + 56) + v25, v6, v18);
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v31 = v34;
    v32 = v38;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v35 + 8 * v30);
  if (v29)
  {
    v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v14 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v14);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23B189EFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1D18);
  v5 = *v0;
  v6 = sub_23B1C7094();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (id)swift_release();
LABEL_25:
    *v1 = v7;
    return result;
  }
  v24 = v1;
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_23;
      v21 = *(_QWORD *)(v25 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_22:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    v17 = *(_QWORD *)(v26 + 72) * v16;
    sub_23AA8EFC8(*(_QWORD *)(v5 + 48) + v17, (uint64_t)v4, &qword_2542DDDB0);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    sub_23AA724E8((uint64_t)v4, *(_QWORD *)(v7 + 48) + v17, &qword_2542DDDB0);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    result = (id)swift_release();
    v1 = v24;
    goto LABEL_25;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_23B18A138()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1D00);
  v5 = *v0;
  v6 = sub_23B1C7094();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (id)swift_release();
LABEL_25:
    *v1 = v7;
    return result;
  }
  v24 = v1;
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_23;
      v21 = *(_QWORD *)(v25 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_22:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    v17 = *(_QWORD *)(v26 + 72) * v16;
    sub_23AA8EFC8(*(_QWORD *)(v5 + 48) + v17, (uint64_t)v4, &qword_2542DDDB0);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v16);
    sub_23AA724E8((uint64_t)v4, *(_QWORD *)(v7 + 48) + v17, &qword_2542DDDB0);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    result = (id)swift_release();
    v1 = v24;
    goto LABEL_25;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_23B18A378()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1D08);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23B18A520()
{
  return sub_23B18A6EC(&qword_2569E1CF0);
}

id sub_23B18A52C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1CC0);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23B18A6E0()
{
  return sub_23B18A6EC((uint64_t *)&unk_2569E1B50);
}

id sub_23B18A6EC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23B1C7094();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B18A894()
{
  return sub_23B18A8C4(&qword_2542DF3E8);
}

void *sub_23B18A8A0()
{
  return sub_23B18A8C4(&qword_2542DF3D0);
}

void *sub_23B18A8AC()
{
  return sub_23B18A8C4((uint64_t *)&unk_2542DF3D8);
}

void *sub_23B18A8B8()
{
  return sub_23B18A8C4((uint64_t *)&unk_2542DF3C0);
}

void *sub_23B18A8C4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23B1C7094();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = (void *)swift_retain();
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B18AA64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E40D0);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B18AC18()
{
  return sub_23B18AC2C(&qword_2542DF3A0, (void (*)(_BYTE *, uint64_t))sub_23ABD76F0);
}

void *sub_23B18AC2C(uint64_t *a1, void (*a2)(_BYTE *, uint64_t))
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  _BYTE v29[40];

  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v5 = *v2;
  v6 = sub_23B1C7094();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v4 = v7;
    return result;
  }
  v27 = v4;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v28 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v28 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = 40 * v17;
    sub_23AA77B28(*(_QWORD *)(v5 + 56) + 40 * v17, (uint64_t)v29);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v20;
    v23[1] = v21;
    a2(v29, *(_QWORD *)(v7 + 56) + v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v4 = v27;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v28 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v28 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B18AE18()
{
  return sub_23B18AE30(&qword_2569E40D8);
}

void *sub_23B18AE24()
{
  return sub_23B18AE30((uint64_t *)&unk_2542DF3A8);
}

void *sub_23B18AE30(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23B1C7094();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      v10 = v24 + 1;
      if (v24 + 1 >= v14)
        goto LABEL_26;
      v25 = *(_QWORD *)(v7 + 8 * v10);
      if (!v25)
        break;
    }
LABEL_25:
    v13 = (v25 - 1) & v25;
    v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v20 = *v18;
    v19 = v18[1];
    v21 = 8 * v16;
    v22 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v23 = v20;
    v23[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v21) = v22;
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v14)
    goto LABEL_26;
  v25 = *(_QWORD *)(v7 + 8 * v26);
  if (v25)
  {
    v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v25 = *(_QWORD *)(v7 + 8 * v10);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B18AFD4()
{
  return sub_23B18B25C(&qword_2569E1CE0);
}

void *sub_23B18AFE0()
{
  return sub_23B18B25C(&qword_2542DF3B8);
}

void *sub_23B18AFEC()
{
  return sub_23B18B25C(&qword_2569E1CD0);
}

void *sub_23B18AFF8()
{
  return sub_23B18920C(&qword_2569E40C0);
}

void *sub_23B18B004()
{
  return sub_23B18B25C(&qword_2569E1CD8);
}

void *sub_23B18B010()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for VFSItem(0);
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E40F0);
  v5 = *v0;
  v6 = sub_23B1C7094();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v26 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v27 = v5 + 64;
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = *(_QWORD *)(v5 + 48) + 16 * v16;
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_23AA907B0(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for VFSItem);
    v22 = *(_QWORD *)(v7 + 48) + v17;
    *(_QWORD *)v22 = v19;
    *(_BYTE *)(v22 + 8) = v20;
    result = (void *)sub_23AA94050((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, type metadata accessor for VFSItem);
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B18B250()
{
  return sub_23B18B25C(&qword_2569E1CC8);
}

void *sub_23B18B25C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23B1C7094();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v22 = __clz(__rbit64(v20));
    v13 = (v20 - 1) & v20;
    v16 = v22 + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B18B3E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C98);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = 32 * v15;
    v20 = *(_QWORD *)(v2 + 56) + v19;
    v21 = *(_QWORD *)v20;
    v22 = *(_BYTE *)(v20 + 8);
    v24 = *(_QWORD *)(v20 + 16);
    v23 = *(_QWORD *)(v20 + 24);
    v25 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v25 = v18;
    *(_BYTE *)(v25 + 8) = v17;
    v26 = *(_QWORD *)(v4 + 56) + v19;
    *(_QWORD *)v26 = v21;
    *(_BYTE *)(v26 + 8) = v22;
    *(_QWORD *)(v26 + 16) = v24;
    *(_QWORD *)(v26 + 24) = v23;
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B18B5AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _BYTE __dst[856];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7D8);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v2 + 64), 8 * v6);
  v26 = v2 + 64;
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v22 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v12)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v8;
    if (!v23)
    {
      v8 = v22 + 1;
      if (v22 + 1 >= v12)
        goto LABEL_26;
      v23 = *(_QWORD *)(v26 + 8 * v8);
      if (!v23)
        break;
    }
LABEL_25:
    v11 = (v23 - 1) & v23;
    v14 = __clz(__rbit64(v23)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = *(_QWORD *)(v2 + 48) + 16 * v14;
    v17 = *(void **)v16;
    v18 = *(_BYTE *)(v16 + 9);
    v19 = 848 * v14;
    v20 = *(unsigned __int8 *)(v16 + 8);
    memcpy(__dst, (const void *)(*(_QWORD *)(v2 + 56) + 848 * v14), 0x350uLL);
    v21 = *(_QWORD *)(v4 + 48) + v15;
    *(_QWORD *)v21 = v17;
    *(_BYTE *)(v21 + 8) = v20;
    *(_BYTE *)(v21 + 9) = v18;
    memcpy((void *)(*(_QWORD *)(v4 + 56) + v19), __dst, 0x350uLL);
    sub_23AA88218(v17, v20, v18);
    result = (void *)sub_23AAB7F6C((uint64_t)__dst);
  }
  v24 = v22 + 2;
  if (v24 >= v12)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v8 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v23 = *(_QWORD *)(v26 + 8 * v8);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23B18B7C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E40C8);
  v24 = v0;
  v5 = *v0;
  v6 = sub_23B1C7094();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23B18B9E8()
{
  return sub_23B18B9F4(&qword_2569E40F8);
}

id sub_23B18B9F4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23B1C7094();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_26;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v19 = 32 * v16;
    sub_23AAA15AC(*(_QWORD *)(v3 + 56) + 32 * v16, (uint64_t)v23);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    sub_23AAA159C(v23, (_OWORD *)(*(_QWORD *)(v5 + 56) + v19));
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v14)
    goto LABEL_26;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_23B18BBB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1C60);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_BYTE *)(v21 + 8) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B18BD64()
{
  return sub_23B18BD70(&qword_2569E1C78);
}

void *sub_23B18BD70(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23B1C7094();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = *(_QWORD *)(v3 + 48) + 16 * v16;
    v19 = *(_QWORD *)v18;
    LOBYTE(v18) = *(_BYTE *)(v18 + 8);
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = *(_QWORD *)(v5 + 48) + v17;
    *(_QWORD *)v22 = v19;
    *(_BYTE *)(v22 + 8) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23B18BF1C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C70);
  v2 = *v0;
  v3 = sub_23B1C7094();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v25 = __clz(__rbit64(v23));
    v12 = (v23 - 1) & v23;
    v15 = v25 + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 16 * v15;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v21 = v18;
    *(_BYTE *)(v21 + 8) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void (*sub_23B18C0BC(_QWORD *a1, uint64_t a2, char a3, char a4))(uint64_t **a1)
{
  _QWORD *v4;
  _QWORD *v5;
  _BYTE *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[32] = a3;
  *(_QWORD *)v10 = a2;
  *((_QWORD *)v10 + 1) = v4;
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDD10);
  v12 = malloc(*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  *((_QWORD *)v10 + 2) = v12;
  v13 = *v4;
  v15 = sub_23AA97254(a2, a3);
  v10[33] = v14 & 1;
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      *((_QWORD *)v10 + 3) = v15;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v21 = *(_QWORD *)(*v5 + 56);
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
        v23 = *(_QWORD *)(v22 - 8);
        sub_23AA724E8(v21 + *(_QWORD *)(v23 + 72) * v15, (uint64_t)v12, &qword_2542E6C80);
        v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_23B18C270;
      }
LABEL_11:
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_23B186BB0(&qword_2542E6C80, (uint64_t *)&unk_2569E1AD8);
      goto LABEL_7;
    }
    sub_23AD105D8(v18, a4 & 1);
    v25 = sub_23AA97254(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      v15 = v25;
      *((_QWORD *)v10 + 3) = v25;
      if ((v19 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23B18C270(uint64_t **a1)
{
  uint64_t *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)(*a1)[2];
  sub_23B18CBB4((uint64_t)v2, *((_BYTE *)*a1 + 33), (uint64_t *)(*a1)[1], (*a1)[3], **a1, *((unsigned __int8 *)*a1 + 32));
  sub_23AA8A05C((uint64_t)v2, qword_2542DDD10);
  free(v2);
  free(v1);
}

void (*sub_23B18C2C0(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*result)(uint64_t **, char);

  v4 = v3;
  v8 = malloc(0x38uLL);
  *a1 = v8;
  v8[4] = a2;
  v8[5] = v4;
  v9 = *v4;
  v11 = sub_23AA88CF8(a2);
  *((_BYTE *)v8 + 25) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = v10 ^ 1;
  v14 = v12 + ((v10 ^ 1) & 1);
  if (__OFADD__(v12, (v10 ^ 1) & 1))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[6] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*v4 + 56) + 24 * v11;
        v18 = *(_QWORD *)v17;
        v19 = *(unsigned __int8 *)(v17 + 8);
        v20 = *(_QWORD *)(v17 + 16);
LABEL_12:
        *v8 = v18;
        v8[1] = v19;
        v8[2] = v20;
        *((_BYTE *)v8 + 24) = v13 & 1;
        return sub_23B18C400;
      }
LABEL_11:
      v18 = 0;
      v19 = 0;
      v20 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_23B1884B4();
      goto LABEL_7;
    }
    sub_23AD130AC(v14, a3 & 1);
    v21 = sub_23AA88CF8(a2);
    if ((v15 & 1) == (v22 & 1))
    {
      v11 = v21;
      v8[6] = v21;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  type metadata accessor for NSFileProviderItemIdentifier(0);
  result = (void (*)(uint64_t **, char))sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23B18C400(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  void *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v2 = *a1;
  v3 = **a1;
  v4 = (*a1)[2];
  v5 = *((_BYTE *)*a1 + 25);
  if ((a2 & 1) != 0)
  {
    if (((*a1)[3] & 1) == 0)
    {
      v6 = v2[1];
      v7 = v2[6];
      v8 = *(_QWORD **)v2[5];
      if ((v5 & 1) == 0)
      {
        v9 = (void *)v2[4];
        v10 = v6 & 1;
LABEL_11:
        sub_23AD27DF0(v7, (uint64_t)v9, v3, v10, v4, v8);
        v14 = v9;
        goto LABEL_12;
      }
LABEL_9:
      v13 = v8[7] + 24 * v7;
      *(_QWORD *)v13 = v3;
      *(_BYTE *)(v13 + 8) = v6 & 1;
      *(_QWORD *)(v13 + 16) = v4;
      goto LABEL_12;
    }
  }
  else if (((*a1)[3] & 1) == 0)
  {
    v6 = v2[1];
    v7 = v2[6];
    v8 = *(_QWORD **)v2[5];
    if ((v5 & 1) == 0)
    {
      v9 = (void *)v2[4];
      v10 = v6 & 1;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  if ((*((_BYTE *)*a1 + 25) & 1) != 0)
  {
    v11 = v2[6];
    v12 = *(_QWORD *)v2[5];
    type metadata accessor for NSFileProviderItemIdentifier(0);
    swift_arrayDestroy();
    sub_23B184410(v11, v12);
  }
LABEL_12:
  free(v2);
}

void (*sub_23B18C4F4(_QWORD *a1, uint64_t a2, char a3, char a4))(uint64_t **a1, char a2)
{
  uint64_t *v4;
  uint64_t *v5;
  _BYTE *v10;
  uint64_t v11;
  unsigned __int8 v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (*result)(uint64_t **, char);

  v5 = v4;
  v10 = malloc(0x38uLL);
  *a1 = v10;
  v10[25] = a3;
  *((_QWORD *)v10 + 4) = a2;
  *((_QWORD *)v10 + 5) = v5;
  v11 = *v5;
  v13 = sub_23AA97254(a2, a3);
  v10[26] = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = v12 ^ 1;
  v16 = v14 + ((v12 ^ 1) & 1);
  if (__OFADD__(v14, (v12 ^ 1) & 1))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((_QWORD *)v10 + 6) = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v5 + 56) + 24 * v13;
        v20 = *(_QWORD *)v19;
        v21 = *(unsigned __int8 *)(v19 + 8);
        v22 = *(_QWORD *)(v19 + 16);
LABEL_12:
        *(_QWORD *)v10 = v20;
        *((_QWORD *)v10 + 1) = v21;
        *((_QWORD *)v10 + 2) = v22;
        v10[24] = v15 & 1;
        return sub_23B18C64C;
      }
LABEL_11:
      v20 = 0;
      v21 = 0;
      v22 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_23B1882F8();
      goto LABEL_7;
    }
    sub_23AD12D64(v16, a4 & 1);
    v23 = sub_23AA97254(a2, a3);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      *((_QWORD *)v10 + 6) = v23;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **, char))sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23B18C64C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;

  v2 = *a1;
  v3 = **a1;
  v4 = (*a1)[2];
  v5 = *((_BYTE *)*a1 + 26);
  if ((a2 & 1) != 0)
  {
    if (((*a1)[3] & 1) == 0)
    {
      v6 = v2[1];
      v7 = v2[6];
      v8 = *(_QWORD **)v2[5];
      if ((v5 & 1) == 0)
      {
        v9 = v2[4];
        v10 = *((_BYTE *)v2 + 25);
        v11 = v6 & 1;
LABEL_11:
        sub_23AD27D90(v7, v9, v10, v3, v11, v4, v8);
        goto LABEL_12;
      }
LABEL_9:
      v12 = v8[7] + 24 * v7;
      *(_QWORD *)v12 = v3;
      *(_BYTE *)(v12 + 8) = v6 & 1;
      *(_QWORD *)(v12 + 16) = v4;
      goto LABEL_12;
    }
  }
  else if (((*a1)[3] & 1) == 0)
  {
    v6 = v2[1];
    v7 = v2[6];
    v8 = *(_QWORD **)v2[5];
    if ((v5 & 1) == 0)
    {
      v9 = v2[4];
      v10 = *((_BYTE *)v2 + 25);
      v11 = v6 & 1;
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  if ((*((_BYTE *)*a1 + 26) & 1) != 0)
    sub_23B1841E4(v2[6], *(_QWORD *)v2[5]);
LABEL_12:
  free(v2);
}

void (*sub_23B18C710(_QWORD *a1, uint64_t a2, char a3, char a4))(uint64_t **a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **, uint64_t);

  v5 = v4;
  v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[32] = a3;
  *((_QWORD *)v10 + 1) = a2;
  *((_QWORD *)v10 + 2) = v5;
  v11 = *v5;
  v13 = sub_23AA97254(a2, a3);
  v10[33] = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((_QWORD *)v10 + 3) = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *(_QWORD *)v10 = v19;
        return sub_23B18C844;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_23B18BD70(&qword_2569E1AB8);
      goto LABEL_7;
    }
    sub_23AD152B4(v16, a4 & 1);
    v20 = sub_23AA97254(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      *((_QWORD *)v10 + 3) = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **, uint64_t))sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23B18C844(uint64_t **a1, uint64_t a2)
{
  sub_23B18CAE0(a1, a2, (void (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))sub_23AD27ED4);
}

void (*sub_23B18C850(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_23ACD5CF0(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_23B18C970;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_23B188FA8();
      goto LABEL_7;
    }
    sub_23AD15054(v14, a3 & 1);
    v18 = sub_23ACD5CF0(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  result = (void (*)(uint64_t **))sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23B18C970(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_23B18CDF8(*a1, *((_BYTE *)*a1 + 32), (uint64_t *)(*a1)[2], (*a1)[3], (*a1)[1]);
  swift_bridgeObjectRelease();
  free(v1);
}

void (*sub_23B18C9AC(_QWORD *a1, uint64_t a2, char a3, char a4))(uint64_t **a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  _BYTE *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **, uint64_t);

  v5 = v4;
  v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[32] = a3;
  *((_QWORD *)v10 + 1) = a2;
  *((_QWORD *)v10 + 2) = v5;
  v11 = *v5;
  v13 = sub_23AA97254(a2, a3);
  v10[33] = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      *((_QWORD *)v10 + 3) = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *(_QWORD *)v10 = v19;
        return sub_23B18C844;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_23B18BD70(&qword_2569E1C78);
      goto LABEL_7;
    }
    sub_23AD199CC(v16, a4 & 1);
    v20 = sub_23AA97254(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      *((_QWORD *)v10 + 3) = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **, uint64_t))sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23B18CAE0(uint64_t **a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))
{
  uint64_t *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = **a1;
  v5 = *((_BYTE *)*a1 + 33);
  if (v4)
  {
    v6 = v3[3];
    v7 = *(_QWORD *)v3[2];
    if ((v5 & 1) != 0)
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v6) = v4;
    else
      a3(v6, v3[1], *((unsigned __int8 *)v3 + 32), v4, v7);
  }
  else if ((*((_BYTE *)*a1 + 33) & 1) != 0)
  {
    sub_23B186414(v3[3], *(_QWORD *)v3[2]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  free(v3);
}

uint64_t (*sub_23B18CB68(_QWORD *a1))()
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_23B1A1E4C;
}

uint64_t (*sub_23B18CB88(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_23B18CBA8;
}

uint64_t sub_23B18CBA8(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

unint64_t sub_23B18CBB4(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, int a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t result;
  _QWORD *v21;
  uint64_t v22;
  int v23;

  v23 = a6;
  v22 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDD10);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v22 - v18;
  sub_23AA8EFC8(a1, (uint64_t)v12, qword_2542DDD10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    result = sub_23AA8A05C((uint64_t)v12, qword_2542DDD10);
    if ((a2 & 1) != 0)
      return sub_23B184D6C(a4, *a3, &qword_2542E6C80);
  }
  else
  {
    sub_23AA724E8((uint64_t)v12, (uint64_t)v19, &qword_2542E6C80);
    v21 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      return sub_23AA724E8((uint64_t)v19, v21[7] + *(_QWORD *)(v14 + 72) * a4, &qword_2542E6C80);
    }
    else
    {
      sub_23AA724E8((uint64_t)v19, (uint64_t)v17, &qword_2542E6C80);
      return sub_23AD27A40(a4, v22, v23, (uint64_t)v17, v21);
    }
  }
  return result;
}

uint64_t sub_23B18CD60(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, void *a5)
{
  uint64_t v7;
  _QWORD *v8;
  id v10;

  v7 = *a1;
  if (*a1)
  {
    v8 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(v8[7] + 8 * a4) = v7;
    }
    else
    {
      sub_23AD27BF8(a4, (uint64_t)a5, v7, v8);
      v10 = a5;
    }
  }
  else if ((a2 & 1) != 0)
  {
    type metadata accessor for NSFileProviderItemIdentifier(0);
    swift_arrayDestroy();
    sub_23B183A04(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B18CDF8(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  v13 = (char *)&v17 - v12;
  v14 = *a1;
  if (v14)
  {
    v15 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(v15[7] + 8 * a4) = v14;
    }
    else
    {
      sub_23AA8EFC8(a5, (uint64_t)&v17 - v12, &qword_2542DDDB0);
      sub_23AD28048(a4, (uint64_t)v13, v14, v15);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_23B184FB8(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B18CEEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v5 = *v2;
  sub_23B1C74A8();
  if (a2)
  {
    sub_23B1C74B4();
    if (a2 == 1)
      sub_23B1C74D8();
  }
  else
  {
    sub_23B1C74B4();
    sub_23B1C74CC();
  }
  v6 = sub_23B1C74E4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return 0;
  v9 = ~v7;
  v10 = a2 == 2;
  v11 = a1 == 1 && a2 == 2;
  if (a1)
    v10 = 0;
  while (1)
  {
    v12 = *(_QWORD *)(v5 + 48) + 16 * v8;
    v13 = *(_QWORD *)v12;
    v14 = *(unsigned __int8 *)(v12 + 8);
    if (!v14)
      break;
    if (v14 == 1)
    {
      if (a2 == 1 && v13 == a1)
        goto LABEL_24;
    }
    else if (v13)
    {
      if (v11)
        goto LABEL_24;
    }
    else if (v10)
    {
      goto LABEL_24;
    }
LABEL_13:
    v8 = (v8 + 1) & v9;
    if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      return 0;
  }
  if (a2 || (_DWORD)v13 != (_DWORD)a1)
    goto LABEL_13;
LABEL_24:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23ADE6680();
    v16 = v19;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 16 * v8);
  sub_23B18ECDC(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_23B18D0C4(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  BOOL v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t *v28;
  BOOL v29;
  BOOL v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;

  v5 = *v2;
  sub_23B1C74A8();
  if ((a2 & 0x100) != 0)
  {
    sub_23B1C74B4();
    sub_23B1C63E0();
    swift_bridgeObjectRetain();
    sub_23AA88218(a1, a2, 1);
    sub_23B1C64A0();
    swift_bridgeObjectRelease();
    sub_23AA862DC(a1, a2, 1);
  }
  else
  {
    sub_23B1C74B4();
    if ((_BYTE)a2)
    {
      sub_23B1C74B4();
      if (a2 == 1)
        sub_23B1C74D8();
    }
    else
    {
      sub_23B1C74B4();
      sub_23B1C74CC();
    }
    swift_bridgeObjectRetain();
  }
  v6 = sub_23B1C74E4();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  v9 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    return 0;
  }
  v28 = v2;
  v10 = ~v7;
  v11 = a2 == 2;
  v12 = a1 == (void *)1 && a2 == 2;
  v31 = v5;
  v32 = a1;
  if (a1)
    v11 = 0;
  v29 = v11;
  v30 = v12;
  v13 = a1;
  while (1)
  {
    v14 = 16 * v8;
    v15 = *(_QWORD *)(v5 + 48) + 16 * v8;
    v16 = *(void **)v15;
    v17 = *(unsigned __int8 *)(v15 + 8);
    if ((*(_BYTE *)(v15 + 9) & 1) != 0)
      break;
    if ((a2 & 0x100) == 0)
    {
      if (*(_BYTE *)(v15 + 8))
      {
        if ((_DWORD)v17 == 1)
        {
          if (a2 == 1 && v16 == v32)
            goto LABEL_39;
        }
        else if (v16)
        {
          if (v30)
            goto LABEL_39;
        }
        else if (v29)
        {
          goto LABEL_39;
        }
      }
      else if (!(_BYTE)a2 && (_DWORD)v16 == (_DWORD)v32)
      {
        goto LABEL_39;
      }
    }
LABEL_16:
    v8 = (v8 + 1) & v10;
    if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      goto LABEL_37;
  }
  if ((a2 & 0x100) == 0)
    goto LABEL_16;
  v18 = sub_23B1C63E0();
  v20 = v19;
  if (v18 != sub_23B1C63E0() || v20 != v21)
  {
    v23 = sub_23B1C7388();
    sub_23AA88218(v16, v17, 1);
    sub_23AA88218(v16, v17, 1);
    sub_23AA88218(v13, a2, 1);
    sub_23AA88218(v16, v17, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AA862DC(v13, a2, 1);

    sub_23AA862DC(v16, v17, 1);
    sub_23AA862DC(v16, v17, 1);
    v5 = v31;
    v14 = 16 * v8;
    if ((v23 & 1) != 0)
      goto LABEL_39;
    goto LABEL_16;
  }
  sub_23AA88218(v16, v17, 1);
  sub_23AA88218(v16, v17, 1);
  sub_23AA88218(v13, a2, 1);
  sub_23AA88218(v16, v17, 1);
  swift_bridgeObjectRelease_n();
  sub_23AA862DC(v13, a2, 1);

  sub_23AA862DC(v16, v17, 1);
  sub_23AA862DC(v16, v17, 1);
  v14 = 16 * v8;
LABEL_39:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v26 = *v28;
  v33 = *v28;
  *v28 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23ADE6EC8();
    v26 = v33;
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v26 + 48) + v14);
  sub_23B18EEEC(v8);
  *v28 = v33;
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_23B18D4E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v24;

  v1 = v0;
  v2 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v3 = sub_23B1C6E48();
    swift_release();
    if ((v3 & 1) != 0)
    {
      v4 = sub_23B18E8A8();
LABEL_23:
      swift_bridgeObjectRelease();
      return v4;
    }
  }
  else
  {
    sub_23B1C74A8();
    sub_23B1C63E0();
    swift_bridgeObjectRetain();
    sub_23B1C64A0();
    swift_bridgeObjectRelease();
    v5 = sub_23B1C74E4();
    v6 = -1 << *(_BYTE *)(v2 + 32);
    v7 = v5 & ~v6;
    if (((*(_QWORD *)(v2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
    {
      v8 = sub_23B1C63E0();
      v10 = v9;
      if (v8 == sub_23B1C63E0() && v10 == v11)
      {
LABEL_19:
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v13 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          v14 = ~v6;
          do
          {
            v7 = (v7 + 1) & v14;
            if (((*(_QWORD *)(v2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
              goto LABEL_18;
            v15 = sub_23B1C63E0();
            v17 = v16;
            if (v15 == sub_23B1C63E0() && v17 == v18)
              goto LABEL_19;
            v20 = sub_23B1C7388();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          while ((v20 & 1) == 0);
        }
      }
      swift_bridgeObjectRelease();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v22 = *v1;
      v24 = *v1;
      *v1 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_23ADE73F8();
        v22 = v24;
      }
      v4 = *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * v7);
      sub_23B18F1A4(v7);
      *v1 = v24;
      goto LABEL_23;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B18D754()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v23;

  v1 = v0;
  v2 = *v0;
  sub_23B1C63E0();
  sub_23B1C74A8();
  swift_bridgeObjectRetain();
  sub_23B1C64A0();
  v3 = sub_23B1C74E4();
  swift_bridgeObjectRelease();
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = v3 & ~v4;
  if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  v6 = sub_23B1C63E0();
  v8 = v7;
  if (v6 == sub_23B1C63E0() && v8 == v9)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      do
      {
        v5 = (v5 + 1) & v12;
        if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
          goto LABEL_15;
        v13 = sub_23B1C63E0();
        v15 = v14;
        if (v13 == sub_23B1C63E0() && v15 == v16)
          goto LABEL_16;
        v18 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v18 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v1;
  v23 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23ADE69D4();
    v21 = v23;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * v5);
  sub_23B18F384(v5);
  *v1 = v23;
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_23B18D964(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[9];

  v2 = v1;
  v4 = *v1;
  sub_23B1C74A8();
  swift_bridgeObjectRetain();
  sub_23B14B63C((uint64_t)v19, a1);
  v5 = sub_23B1C74E4();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0xF000000000000007;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
  sub_23AA93780(v8);
  sub_23B14CF98(v8, a1);
  v10 = v9;
  sub_23AC03BE4(v8);
  if ((v10 & 1) == 0)
  {
    v11 = ~v6;
    do
    {
      v7 = (v7 + 1) & v11;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_9;
      v12 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_23AA93780(v12);
      sub_23B14CF98(v12, a1);
      v14 = v13;
      sub_23AC03BE4(v12);
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v2;
  v19[0] = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23ADE75A0();
    v16 = v19[0];
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v7);
  sub_23B18F564(v7);
  *v2 = v19[0];
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_23B18DADC(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v19;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v1;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = a1;
    v6 = sub_23B1C6E48();

    if ((v6 & 1) != 0)
    {
      v7 = sub_23B18EB2C(v4, (uint64_t)v5, &qword_2569E5DB8, (unint64_t *)&unk_2542E1F20, 0x24BDD1768, (void (*)(unint64_t))sub_23ADE44C0);
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v8 = sub_23B1C6C44();
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    goto LABEL_15;
  sub_23AA9F52C(0, (unint64_t *)&unk_2542E1F20);
  v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
  v12 = sub_23B1C6C50();

  if ((v12 & 1) == 0)
  {
    v13 = ~v9;
    do
    {
      v10 = (v10 + 1) & v13;
      if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_15;
      v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
      v15 = sub_23B1C6C50();

    }
    while ((v15 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v1;
  v19 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23ADE7970();
    v17 = v19;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * v10);
  sub_23B18F720(v10);
  *v1 = v19;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_23B18DCD0(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v19;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v1;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = a1;
    v6 = sub_23B1C6E48();

    if ((v6 & 1) != 0)
    {
      v7 = sub_23B18EB2C(v4, (uint64_t)v5, &qword_2569E1C80, (unint64_t *)&unk_2569E1C88, 0x24BDD1570, (void (*)(unint64_t))sub_23ADE44CC);
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v8 = sub_23B1C6C44();
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    goto LABEL_15;
  sub_23AA9F52C(0, (unint64_t *)&unk_2569E1C88);
  v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
  v12 = sub_23B1C6C50();

  if ((v12 & 1) == 0)
  {
    v13 = ~v9;
    do
    {
      v10 = (v10 + 1) & v13;
      if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_15;
      v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
      v15 = sub_23B1C6C50();

    }
    while ((v15 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v1;
  v19 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23ADE797C();
    v17 = v19;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * v10);
  sub_23B18F720(v10);
  *v1 = v19;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_23B18DEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v7 = *v3;
  sub_23B1C74A8();
  sub_23B1C74D8();
  swift_bridgeObjectRetain();
  sub_23B1C64A0();
  v8 = sub_23B1C74E4();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v7 + 48);
    while (1)
    {
      v13 = (_QWORD *)(v12 + 24 * v10);
      if (*v13 == a1)
      {
        v14 = v13[1] == a2 && v13[2] == a3;
        if (v14 || (sub_23B1C7388() & 1) != 0)
          break;
      }
      v10 = (v10 + 1) & v11;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_13;
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    v19 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23ADE7988();
      v16 = v19;
    }
    v17 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 24 * v10);
    sub_23B18F8C0(v10);
    *v3 = v19;
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v17;
}

uint64_t sub_23B18E060(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5D98);
    v2 = sub_23B1C6ECC();
    v14 = v2;
    sub_23B1C6E18();
    for (; sub_23B1C6E3C(); ++*(_QWORD *)(v2 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3130);
      swift_dynamicCast();
      v2 = v14;
      if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
      {
        sub_23ADE3D08();
        v2 = v14;
      }
      sub_23B1C74A8();
      sub_23B1C63E0();
      sub_23B1C64A0();
      swift_bridgeObjectRelease();
      result = sub_23B1C74E4();
      v4 = v2 + 56;
      v5 = -1 << *(_BYTE *)(v2 + 32);
      v6 = result & ~v5;
      v7 = v6 >> 6;
      if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
      {
        v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v9 = 0;
        v10 = (unint64_t)(63 - v5) >> 6;
        do
        {
          if (++v7 == v10 && (v9 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          v11 = v7 == v10;
          if (v7 == v10)
            v7 = 0;
          v9 |= v11;
          v12 = *(_QWORD *)(v4 + 8 * v7);
        }
        while (v12 == -1);
        v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      }
      *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
      *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v2;
}

uint64_t sub_23B18E27C(uint64_t a1, uint64_t a2)
{
  return sub_23B18E2C4(a1, a2, &qword_2569E5DB8, (unint64_t *)&unk_2542E1F20, 0x24BDD1768, (void (*)(unint64_t))sub_23ADE44C0);
}

uint64_t sub_23B18E2A0(uint64_t a1, uint64_t a2)
{
  return sub_23B18E2C4(a1, a2, &qword_2569E1C80, (unint64_t *)&unk_2569E1C88, 0x24BDD1570, (void (*)(unint64_t))sub_23ADE44CC);
}

uint64_t sub_23B18E2C4(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v8 = sub_23B1C6ECC();
    v21 = v8;
    sub_23B1C6E18();
    if (sub_23B1C6E3C())
    {
      sub_23AA9F52C(0, a4);
      do
      {
        swift_dynamicCast();
        v8 = v21;
        v15 = *(_QWORD *)(v21 + 16);
        if (*(_QWORD *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          v8 = v21;
        }
        result = sub_23B1C6C44();
        v10 = v8 + 56;
        v11 = -1 << *(_BYTE *)(v8 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        if (((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v16 = 0;
          v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v18 = v13 == v17;
            if (v13 == v17)
              v13 = 0;
            v16 |= v18;
            v19 = *(_QWORD *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v20;
        ++*(_QWORD *)(v8 + 16);
      }
      while (sub_23B1C6E3C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  return v8;
}

unint64_t sub_23B18E4C0(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  unint64_t result;
  uint64_t v8;

  sub_23B1C74A8();
  if ((a2 & 0x100) != 0)
  {
    sub_23B1C74B4();
    sub_23B1C63E0();
    v6 = a1;
    sub_23B1C64A0();
    swift_bridgeObjectRelease();
    sub_23AA862DC(a1, a2, 1);
  }
  else
  {
    sub_23B1C74B4();
    if ((_BYTE)a2)
    {
      sub_23B1C74B4();
      if (a2 == 1)
        sub_23B1C74D8();
    }
    else
    {
      sub_23B1C74B4();
      sub_23B1C74CC();
    }
  }
  sub_23B1C74E4();
  result = sub_23B1C6E0C();
  *(_QWORD *)(a3 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  v8 = *(_QWORD *)(a3 + 48) + 16 * result;
  *(_QWORD *)v8 = a1;
  *(_BYTE *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 9) = BYTE1(a2) & 1;
  ++*(_QWORD *)(a3 + 16);
  return result;
}

uint64_t sub_23B18E620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C74A8();
  sub_23AA8EFC8(a1, (uint64_t)v13, &qword_2542DDDB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23AA724E8((uint64_t)v13, (uint64_t)v6, &qword_2542E1608);
    sub_23B1C74B4();
    sub_23B14B2C8();
    v14 = (uint64_t)v6;
    v15 = &qword_2542E1608;
  }
  else
  {
    sub_23AA724E8((uint64_t)v13, (uint64_t)v9, &qword_2542E1600);
    sub_23B1C74B4();
    sub_23B14AE68();
    v14 = (uint64_t)v9;
    v15 = &qword_2542E1600;
  }
  sub_23AA8A05C(v14, v15);
  sub_23B1C74E4();
  v16 = sub_23B1C6E0C();
  *(_QWORD *)(a2 + 56 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
  result = sub_23AA724E8(a1, *(_QWORD *)(a2 + 48) + *(_QWORD *)(v11 + 72) * v16, &qword_2542DDDB0);
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_23B18E828(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_23B1C6C44();
  result = sub_23B1C6E0C();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_23B18E8A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t result;
  uint64_t v29;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_23B1C6E24();
  v3 = swift_unknownObjectRetain();
  v4 = sub_23B18E060(v3, v2);
  v29 = v4;
  sub_23B1C74A8();
  sub_23B1C63E0();
  swift_retain();
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  v5 = sub_23B1C74E4();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = sub_23B1C63E0();
    v10 = v9;
    if (v8 == sub_23B1C63E0() && v10 == v11)
    {
LABEL_15:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v13 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        v14 = ~v6;
        while (1)
        {
          v7 = (v7 + 1) & v14;
          if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
            break;
          v15 = sub_23B1C63E0();
          v17 = v16;
          if (v15 == sub_23B1C63E0() && v17 == v18)
            goto LABEL_15;
          v20 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) != 0)
            goto LABEL_16;
        }
        swift_release();
        __break(1u);
        goto LABEL_25;
      }
    }
LABEL_16:
    swift_release();
    v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    sub_23B18F1A4(v7);
    v22 = sub_23B1C63E0();
    v24 = v23;
    if (v22 != sub_23B1C63E0() || v24 != v25)
    {
      v27 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
      {
LABEL_23:
        *v1 = v29;
        return v21;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
LABEL_25:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23B18EB2C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t *v6;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  v11 = v6;
  swift_bridgeObjectRelease();
  v12 = sub_23B1C6E24();
  v13 = swift_unknownObjectRetain();
  v14 = sub_23B18E2C4(v13, v12, a3, a4, a5, a6);
  v25 = v14;
  swift_retain();
  v15 = sub_23B1C6C44();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  v17 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
  {
    sub_23AA9F52C(0, a4);
    v18 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v17);
    v19 = sub_23B1C6C50();

    if ((v19 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v23 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v17);
      sub_23B18F720(v17);
      if ((sub_23B1C6C50() & 1) != 0)
      {
        *v11 = v25;
        return v23;
      }
      __break(1u);
    }
    else
    {
      v20 = ~v16;
      while (1)
      {
        v17 = (v17 + 1) & v20;
        if (((*(_QWORD *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          break;
        v21 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v17);
        v22 = sub_23B1C6C50();

        if ((v22 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_23B18ECDC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = 16 * v6;
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + 16 * v6 + 8);
        sub_23B1C74A8();
        if (v11)
        {
          sub_23B1C74B4();
          if (v11 == 1)
            sub_23B1C74D8();
        }
        else
        {
          sub_23B1C74B4();
          sub_23B1C74CC();
        }
        v12 = sub_23B1C74E4() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9)
            goto LABEL_5;
        }
        else if (v12 >= v9)
        {
          goto LABEL_15;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_15:
          v13 = *(_QWORD *)(v3 + 48);
          v14 = (_OWORD *)(v13 + 16 * v2);
          v15 = (_OWORD *)(v13 + v10);
          if (16 * v2 != v10 || (v2 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23B18EEEC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v24 = v4;
      do
      {
        v10 = 16 * v6;
        v11 = *(_QWORD *)(v3 + 48) + 16 * v6;
        v12 = *(void **)v11;
        v13 = *(unsigned __int8 *)(v11 + 8);
        v14 = *(_BYTE *)(v11 + 9);
        sub_23B1C74A8();
        if ((v14 & 1) != 0)
        {
          sub_23B1C74B4();
          sub_23B1C63E0();
          v15 = v12;
          sub_23B1C64A0();
          v10 = 16 * v6;
          swift_bridgeObjectRelease();
          sub_23AA862DC(v12, v13, 1);
        }
        else
        {
          sub_23B1C74B4();
          if ((_DWORD)v13)
          {
            sub_23B1C74B4();
            if ((_DWORD)v13 == 1)
              sub_23B1C74D8();
          }
          else
          {
            sub_23B1C74B4();
            sub_23B1C74CC();
          }
        }
        v16 = sub_23B1C74E4();
        sub_23AA862DC(v12, v13, v14);
        v17 = v16 & v7;
        if (v2 >= (uint64_t)v9)
        {
          v4 = v24;
          if (v17 < v9)
            goto LABEL_5;
        }
        else
        {
          v4 = v24;
          if (v17 >= v9)
            goto LABEL_17;
        }
        if (v2 >= (uint64_t)v17)
        {
LABEL_17:
          v18 = *(_QWORD *)(v3 + 48);
          v19 = (_OWORD *)(v18 + 16 * v2);
          v20 = (_OWORD *)(v18 + v10);
          if (16 * v2 != v10 || (v2 = v6, v19 >= v20 + 1))
          {
            *v19 = *v20;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v23;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23B18F1A4(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_23B1C74A8();
        sub_23B1C63E0();
        swift_retain();
        sub_23B1C64A0();
        swift_bridgeObjectRelease();
        v10 = sub_23B1C74E4();
        swift_release();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_QWORD *)(v12 + 8 * v2);
          v14 = (_QWORD *)(v12 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23B18F384(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v6);
        sub_23B1C63E0();
        sub_23B1C74A8();
        v11 = v10;
        sub_23B1C64A0();
        v12 = sub_23B1C74E4();

        swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9)
            goto LABEL_5;
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(v3 + 48);
          v15 = (_QWORD *)(v14 + 8 * v2);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v17 = *(_QWORD *)(v3 + 16);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23B18F564(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _BYTE v19[72];

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        sub_23B1C74A8();
        sub_23AA93780(v10);
        sub_23B14B63C((uint64_t)v19, v10);
        v11 = sub_23B1C74E4();
        sub_23AC03BE4(v10);
        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9)
            goto LABEL_5;
        }
        else if (v12 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(v3 + 48);
          v14 = (_QWORD *)(v13 + 8 * v2);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23B18F720(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_23B1C6C44();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_23B18F8C0(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23B1C6DF4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_23B1C74A8();
        sub_23B1C74D8();
        swift_bridgeObjectRetain();
        sub_23B1C64A0();
        v11 = sub_23B1C74E4();
        swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_12:
            v13 = *(_QWORD *)(v3 + 48);
            v14 = v13 + 24 * v2;
            v15 = (__int128 *)(v13 + 24 * v6);
            if (v2 != v6 || (v2 = v6, v14 >= (unint64_t)v15 + 24))
            {
              v10 = *v15;
              *(_QWORD *)(v14 + 16) = *((_QWORD *)v15 + 2);
              *(_OWORD *)v14 = v10;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_12;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_23B18FAC8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v38;
  uint64_t v40;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7F0);
  result = sub_23B1C70AC();
  v8 = result;
  v38 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v40 = v10;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v38)
        return v8;
      v15 = a1[v14];
      v16 = v10 + 1;
      if (!v15)
      {
        v16 = v10 + 2;
        if (v10 + 2 >= v38)
          return v8;
        v15 = a1[v16];
        if (!v15)
        {
          v16 = v10 + 3;
          if (v10 + 3 >= v38)
            return v8;
          v15 = a1[v16];
          if (!v15)
          {
            v17 = v10 + 4;
            if (v10 + 4 >= v38)
              return v8;
            v15 = a1[v17];
            if (!v15)
            {
              while (1)
              {
                v16 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v16 >= v38)
                  return v8;
                v15 = a1[v16];
                ++v17;
                if (v15)
                  goto LABEL_24;
              }
            }
            v16 = v10 + 4;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v40 = v16;
      v13 = __clz(__rbit64(v15)) + (v16 << 6);
    }
    v18 = 16 * v13;
    v19 = v4;
    v20 = (uint64_t *)(*(_QWORD *)(v4 + 48) + v18);
    v22 = *v20;
    v21 = v20[1];
    v23 = (uint64_t *)(*(_QWORD *)(v4 + 56) + v18);
    v25 = *v23;
    v24 = v23[1];
    sub_23B1C74A8();
    swift_bridgeObjectRetain();
    sub_23AAAE668(v25, v24);
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v26 = -1 << *(_BYTE *)(v8 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v34 = 16 * v29;
    v35 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v34);
    *v35 = v22;
    v35[1] = v21;
    v36 = (uint64_t *)(*(_QWORD *)(v8 + 56) + v34);
    *v36 = v25;
    v36[1] = v24;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v19;
    v10 = v40;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23B18FD9C(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v8 = sub_23B1C5BDC();
  v51 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v50 = (char *)&v44 - v12;
  v13 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  v48 = *(_QWORD *)(v13 - 8);
  v49 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v57 = (uint64_t)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v47 = (uint64_t)&v44 - v16;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1D58);
  result = sub_23B1C70AC();
  v56 = result;
  v45 = a2;
  v44 = a1;
  if (a2 < 1)
    v18 = 0;
  else
    v18 = *a1;
  v19 = 0;
  v20 = v56 + 64;
  v46 = a4;
  v21 = v56;
  while (1)
  {
    if (v18)
    {
      v52 = (v18 - 1) & v18;
      v53 = v19;
      v22 = __clz(__rbit64(v18)) | (v19 << 6);
    }
    else
    {
      v23 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_40;
      if (v23 >= v45)
        return v56;
      v24 = v44[v23];
      v25 = v19 + 1;
      if (!v24)
      {
        v25 = v19 + 2;
        if (v19 + 2 >= v45)
          return v56;
        v24 = v44[v25];
        if (!v24)
        {
          v25 = v19 + 3;
          if (v19 + 3 >= v45)
            return v56;
          v24 = v44[v25];
          if (!v24)
          {
            v26 = v19 + 4;
            if (v19 + 4 >= v45)
              return v56;
            v24 = v44[v26];
            if (!v24)
            {
              while (1)
              {
                v25 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v25 >= v45)
                  return v56;
                v24 = v44[v25];
                ++v26;
                if (v24)
                  goto LABEL_24;
              }
            }
            v25 = v19 + 4;
          }
        }
      }
LABEL_24:
      v52 = (v24 - 1) & v24;
      v53 = v25;
      v22 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    v27 = a4[6];
    v28 = v47;
    v55 = *(_QWORD *)(v48 + 72);
    sub_23AA907B0(v27 + v55 * v22, v47, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    v29 = a4[7];
    v30 = v51;
    v54 = *(_QWORD *)(v51 + 72);
    v31 = v29 + v54 * v22;
    v32 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v31, v8);
    sub_23AA94050(v28, v57, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    v33 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v33(v11, v32, v8);
    sub_23B1C74A8();
    sub_23B1C5A08();
    sub_23AA7E38C((unint64_t *)&qword_2542E0230, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
    sub_23B1C62D8();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v34 = -1 << *(_BYTE *)(v21 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v20 + 8 * (v35 >> 6))) != 0)
    {
      v37 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v20 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v40 = v36 == v39;
        if (v36 == v39)
          v36 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v20 + 8 * v36);
      }
      while (v41 == -1);
      v37 = __clz(__rbit64(~v41)) + (v36 << 6);
    }
    *(_QWORD *)(v20 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
    v42 = v56;
    sub_23AA94050(v57, *(_QWORD *)(v56 + 48) + v37 * v55, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v33)(*(_QWORD *)(v42 + 56) + v37 * v54, v11, v8);
    ++*(_QWORD *)(v42 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v46;
    v18 = v52;
    v19 = v53;
    if (!a3)
      return v56;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23B1901F8(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;

  v8 = sub_23B1C5BDC();
  v49 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v51 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v43 - v12;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  v47 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1B40);
  result = sub_23B1C70AC();
  v14 = result;
  v44 = a1;
  v45 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  v18 = v47;
  v19 = v48;
  v46 = a4;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v50 = v16;
      v21 = v20 | (v16 << 6);
    }
    else
    {
      v22 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v22 >= v45)
        return v14;
      v23 = v44[v22];
      v24 = v16 + 1;
      if (!v23)
      {
        v24 = v16 + 2;
        if (v16 + 2 >= v45)
          return v14;
        v23 = v44[v24];
        if (!v23)
        {
          v24 = v16 + 3;
          if (v16 + 3 >= v45)
            return v14;
          v23 = v44[v24];
          if (!v23)
          {
            v25 = v16 + 4;
            if (v16 + 4 >= v45)
              return v14;
            v23 = v44[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v45)
                  return v14;
                v23 = v44[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v23 - 1) & v23;
      v50 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = a4[7];
    v27 = (uint64_t *)(a4[6] + 16 * v21);
    v28 = *v27;
    v29 = v27[1];
    v30 = v49;
    v31 = *(_QWORD *)(v49 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v19, v26 + v31 * v21, v18);
    v32 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v32(v51, v19, v18);
    sub_23B1C74A8();
    swift_bridgeObjectRetain();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v33 = -1 << *(_BYTE *)(v14 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v36 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      v18 = v47;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v33) >> 6;
      v18 = v47;
      do
      {
        if (++v35 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v39 = v35 == v38;
        if (v35 == v38)
          v35 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v40 == -1);
      v36 = __clz(__rbit64(~v40)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    v41 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v36);
    *v41 = v28;
    v41[1] = v29;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(*(_QWORD *)(v14 + 56) + v36 * v31, v51, v18);
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v46;
    v16 = v50;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23B190540(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  _BYTE v28[16];
  _BYTE v29[16];

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E20A0);
  result = sub_23B1C70AC();
  v9 = result;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= a2)
        return v9;
      v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          return v9;
        v16 = a1[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            return v9;
          v16 = a1[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              return v9;
            v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= a2)
                  return v9;
                v16 = a1[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    sub_23ACF17F0(*(_QWORD *)(v4 + 56) + 16 * v14, (uint64_t)v29);
    sub_23AABABF4((uint64_t)v29, (uint64_t)v28);
    result = sub_23B1C749C();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    result = sub_23AABABF4((uint64_t)v28, *(_QWORD *)(v9 + 56) + 16 * v22);
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23B1907B8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E40D8);
  result = sub_23B1C70AC();
  v8 = result;
  v31 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v31)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v31)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v31)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v31)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v31)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    sub_23B1C74A8();
    swift_bridgeObjectRetain();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v21 = -1 << *(_BYTE *)(v8 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v24);
    *v29 = v19;
    v29[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v24) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23B190A5C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5558);
  result = sub_23B1C70AC();
  v9 = result;
  v39 = a1;
  v40 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v41 = v11;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v40)
        return v9;
      v16 = v39[v15];
      v17 = v11 + 1;
      if (!v16)
      {
        v17 = v11 + 2;
        if (v11 + 2 >= v40)
          return v9;
        v16 = v39[v17];
        if (!v16)
        {
          v17 = v11 + 3;
          if (v11 + 3 >= v40)
            return v9;
          v16 = v39[v17];
          if (!v16)
          {
            v18 = v11 + 4;
            if (v11 + 4 >= v40)
              return v9;
            v16 = v39[v18];
            if (!v16)
            {
              while (1)
              {
                v17 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_41;
                if (v17 >= v40)
                  return v9;
                v16 = v39[v17];
                ++v18;
                if (v16)
                  goto LABEL_24;
              }
            }
            v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v41 = v17;
      v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    v19 = 16 * v14;
    v20 = v4;
    v21 = (uint64_t *)(*(_QWORD *)(v4 + 48) + v19);
    v23 = *v21;
    v22 = v21[1];
    v24 = (uint64_t *)(*(_QWORD *)(v4 + 56) + v19);
    v25 = *v24;
    v26 = v24[1];
    sub_23B1C74A8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v27 = -1 << *(_BYTE *)(v9 + 32);
    v28 = result & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      v30 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v33 = v29 == v32;
        if (v29 == v32)
          v29 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v29);
      }
      while (v34 == -1);
      v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(_QWORD *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    v35 = 16 * v30;
    v36 = (_QWORD *)(*(_QWORD *)(v9 + 48) + v35);
    *v36 = v23;
    v36[1] = v22;
    v37 = (_QWORD *)(*(_QWORD *)(v9 + 56) + v35);
    *v37 = v25;
    v37[1] = v26;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    v4 = v20;
    v11 = v41;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unsigned __int8 *sub_23B190D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_23B0EA258();
  swift_bridgeObjectRetain();
  v7 = sub_23B1C65B4();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_23B19168C();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_23B1C6F80();
  }
LABEL_7:
  v13 = sub_23B190F10(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_23B190E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23B190E14(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_23B19118C);
}

uint64_t sub_23B190E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_23B0EA258();
  swift_bridgeObjectRetain();
  v9 = sub_23B1C65B4();
  v10 = v8;
  if ((v8 & 0x1000000000000000) == 0)
  {
    if ((v8 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v12 = HIBYTE(v10) & 0xF;
    v17 = v9;
    v18 = v10 & 0xFFFFFFFFFFFFFFLL;
    v11 = &v17;
    goto LABEL_7;
  }
  v9 = sub_23B19168C();
  v14 = v13;
  swift_bridgeObjectRelease();
  v10 = v14;
  if ((v14 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v9 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v11 = (_QWORD *)sub_23B1C6F80();
  }
LABEL_7:
  v15 = a6(v11, v12, a5);
  swift_bridgeObjectRelease();
  return v15 | ((HIDWORD(v15) & 1) << 32);
}

unsigned __int8 *sub_23B190F10(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  BOOL v16;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 *v21;
  unsigned int v22;
  char v23;
  unint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unint64_t v29;
  unsigned int v30;
  char v31;
  unint64_t v32;
  unsigned __int8 v33;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v14 = v9 * a3;
              v15 = v11 + v12;
              v16 = v14 >= v15;
              v9 = v14 - v15;
              if (!v16)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_67;
    }
    if (a2)
    {
      v26 = a3 + 48;
      v27 = a3 + 55;
      v28 = a3 + 87;
      if (a3 > 10)
      {
        v26 = 58;
      }
      else
      {
        v28 = 97;
        v27 = 65;
      }
      if (result)
      {
        v29 = 0;
        do
        {
          v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              v13 = 0;
              if (v30 < 0x61 || v30 >= v28)
                return (unsigned __int8 *)v13;
              v31 = -87;
            }
            else
            {
              v31 = -55;
            }
          }
          else
          {
            v31 = -48;
          }
          if (!is_mul_ok(v29, a3))
            return 0;
          v32 = v29 * a3;
          v33 = v30 + v31;
          v16 = __CFADD__(v32, v33);
          v29 = v32 + v33;
          if (v16)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v29;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }
  v17 = a2 - 1;
  if (a2 == 1)
    return 0;
  v18 = a3 + 48;
  v19 = a3 + 55;
  v20 = a3 + 87;
  if (a3 > 10)
  {
    v18 = 58;
  }
  else
  {
    v20 = 97;
    v19 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v21 = result + 1;
  do
  {
    v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        v13 = 0;
        if (v22 < 0x61 || v22 >= v20)
          return (unsigned __int8 *)v13;
        v23 = -87;
      }
      else
      {
        v23 = -55;
      }
    }
    else
    {
      v23 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v24 = v9 * a3;
    v25 = v22 + v23;
    v16 = __CFADD__(v24, v25);
    v9 = v24 + v25;
    if (v16)
      return 0;
    ++v21;
    --v17;
  }
  while (v17);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_23B19118C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__CFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__CFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (v14 < v15)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_23B19140C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = (int)v8 * (uint64_t)(int)a3;
            if (v23 != (int)v23)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__OFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = (int)v28 * (uint64_t)(int)a3;
            if (v31 != (int)v31)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__OFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = (int)v8 * (uint64_t)(int)a3;
            if (v14 != (int)v14)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (__OFSUB__((_DWORD)v14, v15))
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23B19168C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_23B1C65C0();
  v4 = sub_23B191708(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23B191708(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_23B19184C(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_23B181E18(v9, 0);
      v12 = sub_23B191938((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x23B85EDA4](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x23B85EDA4);
LABEL_9:
      sub_23B1C6F80();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x23B85EDA4]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_23B19184C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_23B181E7C(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_23B181E7C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_23B1C6548();
  }
  __break(1u);
  return result;
}

unint64_t sub_23B191938(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_23B181E7C(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_23B1C6554();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_23B1C6F80();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_23B181E7C(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_23B1C6530();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23B191B48(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  _QWORD v13[2];
  unsigned __int8 v14;

  if ((a4 & 0x1000000000000000) != 0)
  {
    LODWORD(result) = 0;
    v14 = 0;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v13[0] = a3;
    v13[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v13;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_23B1C6F80();
  }
  result = sub_23B1931EC((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v14 = BYTE4(result) & 1;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  return result;
}

uint64_t sub_23B191C18@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _DWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t result;
  int v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v11 = 0;
  v12 = 1;
  v9 = *((_QWORD *)a1 + 3);
  v13 = *a1;
  v14 = *((_QWORD *)a1 + 2);
  v15 = v9;
  v16 = *((_QWORD *)a1 + 4);
  result = sub_23B0E0C9C((uint64_t)&v13, a2, a3, a4, (uint64_t)&v11, a5, a6);
  if (!v7)
  {
    if ((v12 & 1) != 0)
      __break(1u);
    else
      *a7 = v11;
  }
  return result;
}

uint64_t sub_23B191CC4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_23B191D68(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_23B191E4C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23B191EA0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_23B1C7388() & 1;
}

uint64_t sub_23B191EF4()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B191FAC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, void (*a3)(uint64_t *__return_ptr, _BYTE *, char *)@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v5;
  uint64_t result;

  result = sub_23B159E64(a1, a2, a3, a4);
  if (!v5)
    *a5 = result;
  return result;
}

uint64_t sub_23B191FD4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;

  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v7 + qword_2542EDF28;
  result = swift_beginAccess();
  v20 = *(_QWORD *)(v18 + 8);
  v21 = __CFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v18 + 8) = v22;
    v23 = *(_QWORD *)(v7 + 224);
    v36 = *(id *)(v7 + 216);
    v24 = sub_23B1C60A4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v17, 1, 1, v24);
    v25 = swift_allocObject();
    v35 = v17;
    v26 = a4;
    v27 = v25;
    *(_QWORD *)(v25 + 16) = a6;
    *(_QWORD *)(v25 + 24) = a7;
    v28 = swift_allocObject();
    v29 = a2;
    v30 = v28;
    *(_QWORD *)(v28 + 16) = v7;
    *(_QWORD *)(v28 + 24) = a1;
    *(_BYTE *)(v28 + 32) = v29;
    *(_QWORD *)(v28 + 40) = a6;
    *(_QWORD *)(v28 + 48) = a7;
    *(_QWORD *)(v28 + 56) = a3;
    *(_QWORD *)(v28 + 64) = v26;
    *(_QWORD *)(v28 + 72) = a5;
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = sub_23AAB5414;
    v31[3] = v27;
    v31[4] = v23;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain_n();
    v32 = v36;
    swift_retain();
    v33 = (uint64_t)v35;
    sub_23AA9086C(v32, (uint64_t)v35, (void (*)())sub_23B1A1F68, v31, (uint64_t)sub_23B1A0988, v30);

    swift_release();
    swift_release();
    swift_release();
    return sub_23AA8A05C(v33, &qword_2542DD460);
  }
  return result;
}

uint64_t sub_23B1921DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;
  char v8;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 64))(&v7, a2, a3);
  if (v8)
    return 0;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 112))(&v7, a2, a3);
  v5 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t type metadata accessor for VFSCounters(uint64_t a1)
{
  return sub_23AA94094(a1, (uint64_t *)&unk_2542E6A20);
}

uint64_t sub_23B192294(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 *v30;
  _BYTE v34[16];
  __int128 v35;
  __int128 v36;
  _QWORD v37[2];
  int64_t v38;

  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v30 = (__int128 *)((char *)a2 + 24);
  v28 = (unint64_t)(v3 + 63) >> 6;
  v29 = (uint64_t)(a2 + 3);
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v38 = v7;
    v10 = v9 | (v7 << 6);
LABEL_22:
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v36 = *a2;
    v35 = *v30;
    sub_23AA724E8(v29, (uint64_t)v34, (uint64_t *)&unk_2542E7460);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23AA9F49C((uint64_t)&v36);
    sub_23AA9F49C((uint64_t)&v35);
    sub_23ABE5118((uint64_t)v34);
    v18 = (void *)sub_23B1C5AA4();
    v19 = (void *)sub_23B1C5AA4();
    sub_23AA724E8((uint64_t)v34, (uint64_t)v37, (uint64_t *)&unk_2542E7460);
    if (v37[1])
    {
      v20 = (void *)sub_23B1C63BC();
      sub_23ABE5088((uint64_t)v34);
    }
    else
    {
      v20 = 0;
    }
    v21 = (void *)objc_opt_self();
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC83D8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v18, v19, v20);
    sub_23AC2452C((uint64_t)&v35);
    sub_23AC2452C((uint64_t)&v36);

    v23 = objc_msgSend(v21, sel_etagForVersion_providerDomainID_, v22, a3);
    v24 = sub_23B1C63E0();
    v26 = v25;

    if (v17 == v24 && v16 == v26)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
    v8 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v7 = v38;
    if ((v8 & 1) != 0)
    {
      swift_release();
      return 1;
    }
  }
  v11 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 >= v28)
    goto LABEL_29;
  v12 = *(_QWORD *)(v27 + 8 * v11);
  v13 = v7 + 1;
  if (v12)
    goto LABEL_21;
  v13 = v7 + 2;
  if (v7 + 2 >= v28)
    goto LABEL_29;
  v12 = *(_QWORD *)(v27 + 8 * v13);
  if (v12)
    goto LABEL_21;
  v13 = v7 + 3;
  if (v7 + 3 >= v28)
    goto LABEL_29;
  v12 = *(_QWORD *)(v27 + 8 * v13);
  if (v12)
    goto LABEL_21;
  v13 = v7 + 4;
  if (v7 + 4 >= v28)
    goto LABEL_29;
  v12 = *(_QWORD *)(v27 + 8 * v13);
  if (v12)
    goto LABEL_21;
  v14 = v7 + 5;
  if (v7 + 5 >= v28)
  {
LABEL_29:
    swift_release();
    return 0;
  }
  v12 = *(_QWORD *)(v27 + 8 * v14);
  v13 = v7 + 5;
  if (v12)
  {
LABEL_21:
    v5 = (v12 - 1) & v12;
    v38 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v28)
      goto LABEL_29;
    v12 = *(_QWORD *)(v27 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23B192614(int a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint8_t *v25;
  _QWORD v26[2];
  uint64_t v27;
  NSObject *v28;
  int v29;
  int v30;

  LODWORD(v28) = a1;
  v27 = sub_23B1C5570();
  v26[0] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v2 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23B1C5E4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C6428();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C641C();
  v11 = sub_23B1C63EC();
  v13 = v12;
  v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v13 >> 60 == 15)
  {
    v30 = 22;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    v15 = v27;
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v26[0] + 8))(v2, v15);
    return swift_willThrow();
  }
  else
  {
    v17 = v3;
    MEMORY[0x24BDAC7A8](v14);
    v26[-6] = v11;
    v26[-5] = v13;
    v18 = v28;
    LODWORD(v26[-4]) = (_DWORD)v28;
    v26[-3] = 0xD000000000000021;
    v26[-2] = 0x800000023B201420;
    LODWORD(v26[-1]) = 0;
    v19 = v26[1];
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC34958);
    if (v19 || (MEMORY[0x23B85E7BC](v18, 64, 3) & 0x80000000) == 0)
    {
      return sub_23AAA3E18(v11, v13);
    }
    else
    {
      v20 = (id)fpfs_current_or_default_log();
      v21 = v6;
      sub_23B1C5E58();
      v22 = sub_23B1C5E40();
      v23 = sub_23B1C6AA0();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v28 = v22;
        *(_DWORD *)v24 = 67109120;
        v27 = (uint64_t)(v24 + 4);
        v29 = MEMORY[0x23B85E7A4]();
        v22 = v28;
        sub_23B1C6CBC();
        _os_log_impl(&dword_23AA66000, v22, v23, "Could not set protection class: %d", v24, 8u);
        v25 = v24;
        v21 = v6;
        MEMORY[0x23B8614BC](v25, -1, -1);
      }
      sub_23AAA3E18(v11, v13);

      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v21, v17);
    }
  }
}

uint64_t sub_23B19295C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  int v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;

  v50[0] = a6;
  v50[1] = a7;
  v54 = a5;
  v52 = a3;
  v51 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B1C5A08();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for VFSDetachedRootBookmark();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v53 = (char *)v50 - v20;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v21(v15, a2, v12);
  v21(v11, v54, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v21(v19, (uint64_t)v15, v12);
  v22 = a4;
  swift_bridgeObjectRetain();
  v23 = v59;
  v24 = sub_23B1C58DC();
  v59 = v23;
  if (v23)
  {
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2542E6740);
    v26 = *(void (**)(char *, uint64_t))(v13 + 8);
    v26(v15, v12);
    return ((uint64_t (*)(char *, uint64_t))v26)(v19, v12);
  }
  else
  {
    v28 = v24;
    v29 = v25;
    sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2542E6740);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v30 = &v19[v16[6]];
    *(_QWORD *)v30 = v28;
    *((_QWORD *)v30 + 1) = v29;
    v31 = &v19[v16[5]];
    v32 = (uint64_t)v53;
    *(_QWORD *)v31 = v52;
    *((_QWORD *)v31 + 1) = v22;
    v19[v16[7]] = 1;
    sub_23AA94050((uint64_t)v19, v32, (uint64_t (*)(_QWORD))type metadata accessor for VFSDetachedRootBookmark);
    v33 = v16[6];
    v34 = (uint64_t *)(v32 + v16[5]);
    v35 = *v34;
    v36 = v34[1];
    v38 = *(_QWORD *)(v32 + v33);
    v37 = *(_QWORD *)(v32 + v33 + 8);
    sub_23B1C57B0();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_23AAAE668(v38, v37);
    sub_23B1C57A4();
    sub_23B1C578C();
    v55 = v35;
    v56 = v36;
    v57 = v38;
    v58 = v37;
    sub_23AC348D8();
    v39 = v59;
    v40 = sub_23B1C5798();
    if (v39)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_23AAAE53C(v38, v37);
    }
    else
    {
      v42 = v40;
      v43 = v41;
      swift_bridgeObjectRelease();
      swift_release();
      v44 = sub_23AAAE53C(v38, v37);
      MEMORY[0x24BDAC7A8](v44);
      v45 = v51;
      LODWORD(v50[-2]) = v51;
      v46 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1A1F3C);
      MEMORY[0x24BDAC7A8](v46);
      LODWORD(v50[-2]) = v45;
      v47 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AB6CEE0);
      MEMORY[0x24BDAC7A8](v47);
      LODWORD(v50[-2]) = v45;
      sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AFE38E4);
      v48 = sub_23B192614(v45);
      MEMORY[0x24BDAC7A8](v48);
      v50[-6] = v42;
      v50[-5] = v43;
      LODWORD(v50[-4]) = v45;
      v50[-3] = 0xD000000000000021;
      v50[-2] = 0x800000023B1FC9D0;
      LODWORD(v50[-1]) = 0;
      v49 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC34958);
      MEMORY[0x24BDAC7A8](v49);
      LODWORD(v50[-2]) = v45;
      sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AB6CF14);
      sub_23AAAE53C(v42, v43);
    }
    return sub_23AA937BC(v32, (uint64_t (*)(_QWORD))type metadata accessor for VFSDetachedRootBookmark);
  }
}

uint64_t sub_23B192E50(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v19;

  v19 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_23;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)MEMORY[0x23B85F860](v6, a1);
LABEL_9:
        v8 = v7;
        v9 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_22;
        v10 = objc_msgSend(v7, sel_fp_etag);
        if (v10)
        {
          v11 = v10;
          v12 = sub_23B1C63E0();
          v14 = v13;

          if (v12 == a2 && v14 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_18:
            sub_23B1C6F98();
            sub_23B1C6FC8();
            sub_23B1C6FD4();
            sub_23B1C6FA4();
            goto LABEL_5;
          }
          v16 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          if ((v16 & 1) != 0)
            goto LABEL_18;
        }

LABEL_5:
        ++v6;
        if (v9 == v5)
          return v19;
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      v5 = sub_23B1C7088();
      if (!v5)
        return MEMORY[0x24BEE4AF8];
    }
    v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23B193008(uint64_t a1, char a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD *v24;
  _QWORD *v25;
  id v26;
  id v27;

  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)(v7 + qword_2542EDF28);
  result = swift_beginAccess();
  if (*v18 == -1)
  {
    __break(1u);
  }
  else
  {
    ++*v18;
    v20 = *(_QWORD *)(v7 + 224);
    v27 = *(id *)(v7 + 216);
    v21 = sub_23B1C60A4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v17, 1, 1, v21);
    v22 = swift_allocObject();
    v23 = a2;
    v24 = (_QWORD *)v22;
    *(_QWORD *)(v22 + 16) = a4;
    *(_QWORD *)(v22 + 24) = v7;
    *(_QWORD *)(v22 + 32) = a1;
    *(_BYTE *)(v22 + 40) = v23;
    sub_23AA724E8((uint64_t)a3, v22 + 48, (uint64_t *)&unk_2542E4948);
    v24[18] = a6;
    v24[19] = a7;
    v24[20] = a5;
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = a6;
    v25[3] = a7;
    v25[4] = v20;
    swift_retain();
    swift_retain();
    swift_retain_n();
    v26 = v27;
    sub_23B19E594(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA7638);
    swift_retain();
    sub_23AA9086C(v26, (uint64_t)v17, (void (*)())sub_23B1A066C, v25, (uint64_t)sub_23ADA9D20, (uint64_t)v24);

    swift_release();
    swift_release();
    return sub_23AA8A05C((uint64_t)v17, &qword_2542DD460);
  }
  return result;
}

uint64_t sub_23B1931EC(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned int v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  unsigned int v29;
  unsigned __int8 v30;
  uint64_t v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  unsigned __int8 *v36;
  uint64_t v37;
  unsigned int v38;
  char v39;
  uint64_t v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned int v45;
  char v46;
  uint64_t v47;
  unsigned __int8 v48;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_23B181E7C(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_104;
  result = sub_23B1C6548();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_23B181E7C(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_23B181E7C(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_100;
  if (v17 < a3 >> 16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  result = sub_23B1C6548();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v18 < v15)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v34 = a6 + 55;
        }
        else
        {
          v33 = 97;
          v34 = 65;
        }
        if (a6 <= 10)
          v35 = a6 + 48;
        else
          v35 = 58;
        if (v19)
        {
          v24 = 0;
          v36 = v19 + 1;
          v37 = result - 1;
          do
          {
            v38 = *v36;
            if (v38 < 0x30 || v38 >= v35)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                v29 = 0;
                v30 = 1;
                if (v38 < 0x61 || v38 >= v33)
                  return v29 | ((unint64_t)v30 << 32);
                v39 = -87;
              }
              else
              {
                v39 = -55;
              }
            }
            else
            {
              v39 = -48;
            }
            v40 = (int)v24 * (uint64_t)(int)a6;
            if (v40 != (int)v40)
              goto LABEL_96;
            v41 = v38 + v39;
            v24 = v40 + v41;
            if (__OFADD__((_DWORD)v40, v41))
              goto LABEL_96;
            ++v36;
            --v37;
          }
          while (v37);
LABEL_94:
          v30 = 0;
          v29 = v24;
          return v29 | ((unint64_t)v30 << 32);
        }
        goto LABEL_95;
      }
      goto LABEL_96;
    }
    goto LABEL_103;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v42 = a6 + 87;
      if (a6 > 10)
      {
        v43 = a6 + 55;
      }
      else
      {
        v42 = 97;
        v43 = 65;
      }
      if (a6 <= 10)
        v44 = a6 + 48;
      else
        v44 = 58;
      if (v19)
      {
        v24 = 0;
        while (1)
        {
          v45 = *v19;
          if (v45 < 0x30 || v45 >= v44)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              v29 = 0;
              v30 = 1;
              if (v45 < 0x61 || v45 >= v42)
                return v29 | ((unint64_t)v30 << 32);
              v46 = -87;
            }
            else
            {
              v46 = -55;
            }
          }
          else
          {
            v46 = -48;
          }
          v47 = (int)v24 * (uint64_t)(int)a6;
          if (v47 != (int)v47)
            goto LABEL_96;
          v48 = v45 + v46;
          v24 = v47 + v48;
          if (__OFADD__((_DWORD)v47, v48))
            goto LABEL_96;
          ++v19;
          if (!--result)
            goto LABEL_94;
        }
      }
      goto LABEL_95;
    }
LABEL_96:
    v29 = 0;
    v30 = 1;
    return v29 | ((unint64_t)v30 << 32);
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 87;
      if (a6 > 10)
      {
        v22 = a6 + 55;
      }
      else
      {
        v21 = 97;
        v22 = 65;
      }
      if (a6 <= 10)
        v23 = a6 + 48;
      else
        v23 = 58;
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              v30 = 1;
              if (v27 < 0x61 || v27 >= v21)
                return v29 | ((unint64_t)v30 << 32);
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v31 = (int)v24 * (uint64_t)(int)a6;
          if (v31 != (int)v31)
            goto LABEL_96;
          v32 = v27 + v28;
          v24 = v31 - v32;
          if (__OFSUB__((_DWORD)v31, v32))
            goto LABEL_96;
          ++v25;
          if (!--v26)
            goto LABEL_94;
        }
      }
LABEL_95:
      v29 = 0;
      v30 = 0;
      return v29 | ((unint64_t)v30 << 32);
    }
    goto LABEL_96;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t sub_23B193610(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v36 = a3;
  v37 = a6;
  v34 = a2;
  v35 = a5;
  v33 = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E3690);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA92930(0x657461657263, 0xE600000000000000, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  v18 = *(void **)(v7 + 216);
  v31 = *(_QWORD *)(v7 + 224);
  v32 = v18;
  v19 = sub_23B1C60A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v17, 1, 1, v19);
  sub_23AA8EFC8(a1, (uint64_t)v14, (uint64_t *)&unk_2542E1DF0);
  v20 = (*(unsigned __int8 *)(v12 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (_QWORD *)swift_allocObject();
  v23 = v7;
  v30 = v7;
  v24 = v37;
  v22[2] = v34;
  v22[3] = v24;
  v22[4] = a7;
  v22[5] = v23;
  sub_23AA724E8((uint64_t)v36, (uint64_t)(v22 + 6), qword_2542E48C0);
  sub_23AA724E8((uint64_t)v14, (uint64_t)v22 + v20, (uint64_t *)&unk_2542E1DF0);
  v25 = v35;
  sub_23AA724E8(v35, (uint64_t)v22 + v21, &qword_2542E5050);
  *(_QWORD *)((char *)v22 + ((v21 + 255) & 0xFFFFFFFFFFFFFFF8)) = v33;
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v24;
  v26[3] = a7;
  v26[4] = v31;
  swift_retain_n();
  v27 = v32;
  swift_retain();
  swift_retain();
  sub_23AC25990(v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
  sub_23AC24890(v25);
  swift_retain();
  sub_23AA9086C(v27, (uint64_t)v17, (void (*)())sub_23B1A1F6C, v26, (uint64_t)sub_23B19FE88, (uint64_t)v22);

  swift_release();
  swift_release();
  return sub_23AA8A05C((uint64_t)v17, &qword_2542DD460);
}

uint64_t sub_23B193904(uint64_t a1, int a2, _QWORD *a3, unint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8, void (*a9)(void), uint64_t a10)
{
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  int v35;
  uint64_t v37;
  int v38;
  void (*v39)(void);
  unsigned int v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  unsigned int v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  void (*v49)(void);
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _OWORD *v59;
  _QWORD *v60;
  _OWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  _OWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void (*v86)(void);
  unint64_t v87;
  uint64_t v88;

  v87 = a4;
  v79 = a8;
  v82 = a3;
  v83 = a7;
  v81 = a6;
  v78 = a2;
  v77 = a1;
  v85 = a10;
  v86 = a9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v74 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v75 = v12;
  v76 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C6050();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v72 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v70 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v70 - v23;
  v25 = sub_23B1C60A4();
  v73 = *(_QWORD *)(v25 - 8);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v70 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = a5;
  if ((a5 & 0x18) != 0)
  {
    v84 = v33;
    v34 = v85;
    v71 = *(_QWORD *)(v88 + 224);
    v35 = *(unsigned __int8 *)(v87 + *(int *)(v11 + 40));
    v70 = *(id *)(v88 + 216);
    if (v35 == 1)
      sub_23B1C6074();
    else
      sub_23B1C6080();
    v37 = v34;
    qos_class_self();
    sub_23B1C6038();
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
    v39 = v86;
    if (v38 == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v24, *MEMORY[0x24BEE5498], v16);
      sub_23AA8A05C((uint64_t)v15, qword_2542E02D0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v15, v16);
    }
    sub_23B1C608C();
    sub_23B1C6098();
    v40 = sub_23B1C6044();
    v41 = *(void (**)(char *, uint64_t))(v17 + 8);
    v41(v22, v16);
    v42 = v72;
    sub_23B1C6098();
    v43 = sub_23B1C6044();
    v41(v42, v16);
    v44 = v73;
    if (v40 >= v43)
      v45 = v30;
    else
      v45 = v28;
    v46 = (uint64_t)v84;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v84, v45, v25);
    v47 = *(void (**)(char *, uint64_t))(v44 + 8);
    v47(v28, v25);
    v47(v30, v25);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v46, 0, 1, v25);
    v48 = swift_allocObject();
    v85 = v48;
    v49 = v39;
    *(_QWORD *)(v48 + 16) = v39;
    *(_QWORD *)(v48 + 24) = v37;
    v50 = v76;
    sub_23AA8EFC8(v87, v76, (uint64_t *)&unk_2542E1DF0);
    v51 = (*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    v52 = (v75 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
    v75 = (v53 + 15) & 0xFFFFFFFFFFFFFFF8;
    v54 = (v53 + 31) & 0xFFFFFFFFFFFFFFF8;
    v55 = (v54 + 103) & 0xFFFFFFFFFFFFFFF8;
    v56 = (v55 + 15) & 0xFFFFFFFFFFFFFFF8;
    v87 = (v56 + 63) & 0xFFFFFFFFFFFFFFF8;
    v57 = swift_allocObject();
    *(_QWORD *)(v57 + 16) = v49;
    *(_QWORD *)(v57 + 24) = v37;
    sub_23AA724E8(v50, v57 + v51, (uint64_t *)&unk_2542E1DF0);
    *(_QWORD *)(v57 + v52) = v88;
    *(_QWORD *)(v57 + v53) = v79;
    v58 = v57 + v75;
    *(_QWORD *)v58 = v77;
    *(_BYTE *)(v58 + 8) = v78;
    v59 = (_OWORD *)(v57 + v54);
    v61 = v81;
    v60 = v82;
    v62 = v81[1];
    *v59 = *v81;
    v59[1] = v62;
    v63 = v61[5];
    v59[4] = v61[4];
    v59[5] = v63;
    v64 = v61[3];
    v59[2] = v61[2];
    v59[3] = v64;
    *(_QWORD *)(v57 + v55) = v80;
    sub_23AA724E8((uint64_t)v60, v57 + v56, qword_2542E48C0);
    v65 = v83;
    sub_23AA724E8(v83, v57 + v87, &qword_2542E5050);
    v66 = (_QWORD *)swift_allocObject();
    v67 = v85;
    v66[2] = sub_23AAB5414;
    v66[3] = v67;
    v66[4] = v71;
    swift_retain_n();
    swift_retain();
    sub_23B19DD20((uint64_t)v61);
    sub_23AC25990(v60, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
    sub_23AC24890(v65);
    swift_retain();
    swift_retain();
    v68 = v70;
    v69 = (uint64_t)v84;
    sub_23AA9086C(v70, (uint64_t)v84, (void (*)())sub_23B1A1F68, v66, (uint64_t)sub_23B19E48C, v57);

    swift_release();
    swift_release();
    swift_release();
    return sub_23AA8A05C(v69, &qword_2542DD460);
  }
  else
  {
    type metadata accessor for StagedContext();
    swift_allocObject();
    v86();
    return swift_release();
  }
}

uint64_t sub_23B193EB8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  unsigned int v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v44;
  char *v45;
  id v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;

  v7 = v6;
  v52 = a5;
  v53 = a6;
  v51 = a4;
  v54 = (_QWORD *)a3;
  v50 = a2;
  v49 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C6050();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v45 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v44 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v44 - v18;
  v20 = sub_23B1C60A4();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v44 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v27);
  v48 = (char *)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = *(_QWORD *)(v7 + 224);
  v55 = v7;
  v46 = *(id *)(v7 + 216);
  sub_23B1C6080();
  qos_class_self();
  sub_23B1C6038();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v19, *MEMORY[0x24BEE5498], v11);
    sub_23AA8A05C((uint64_t)v10, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v10, v11);
  }
  sub_23B1C608C();
  sub_23B1C6098();
  v29 = sub_23B1C6044();
  v30 = *(void (**)(char *, uint64_t))(v12 + 8);
  v30(v17, v11);
  v31 = v45;
  sub_23B1C6098();
  v32 = sub_23B1C6044();
  v30(v31, v11);
  if (v29 >= v32)
    v33 = v26;
  else
    v33 = v24;
  v34 = (uint64_t)v48;
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v48, v33, v20);
  v35 = *(void (**)(char *, uint64_t))(v21 + 8);
  v35(v24, v20);
  v35(v26, v20);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v34, 0, 1, v20);
  v36 = swift_allocObject();
  v37 = v54;
  sub_23AA724E8((uint64_t)v54, v36 + 16, (uint64_t *)&unk_2542E4948);
  v39 = v52;
  v38 = v53;
  *(_QWORD *)(v36 + 112) = v52;
  *(_QWORD *)(v36 + 120) = v38;
  *(_QWORD *)(v36 + 128) = v49;
  *(_BYTE *)(v36 + 136) = v50;
  v40 = v51;
  *(_QWORD *)(v36 + 144) = v55;
  *(_QWORD *)(v36 + 152) = v40;
  v41 = (_QWORD *)swift_allocObject();
  v41[2] = v39;
  v41[3] = v38;
  v41[4] = v47;
  swift_retain_n();
  sub_23B19E594(v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA7638);
  swift_retain();
  swift_retain();
  v42 = v46;
  sub_23AA9086C(v46, v34, (void (*)())sub_23B1A10B8, v41, (uint64_t)sub_23B1A109C, v36);

  swift_release();
  swift_release();
  return sub_23AA8A05C(v34, &qword_2542DD460);
}

uint64_t sub_23B19427C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  void *v7;

  if (qword_2542E6B10 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)&dword_2542DD820);
  swift_endAccess();
  if (qword_2542E7358 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4688);
  v2 = sub_23B1C6434();
  v4 = v3;
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = off_2542E7350;
  off_2542E7350 = (_UNKNOWN *)0x8000000000000000;
  sub_23AD254F8(a1, v2, v4, isUniquelyReferenced_nonNull_native);
  off_2542E7350 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock((os_unfair_lock_t)&dword_2542DD820);
  return swift_endAccess();
}

uint64_t sub_23B1943EC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_23B19445C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B194480(uint64_t *a1)
{
  return sub_23B154328(a1);
}

uint64_t sub_23B194488(uint64_t *a1)
{
  return sub_23B154524(a1);
}

void sub_23B194490(int a1@<W0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  sub_23AFE2074(a1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

void sub_23B1944AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23ADA92E8(a1, a2);
}

uint64_t sub_23B1944C0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  void *v35;
  int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  unsigned int v42;
  void (*v43)(char *, uint64_t);
  unsigned int v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  _OWORD *v58;
  _OWORD *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  void *v68;
  uint64_t v69;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  unint64_t v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  _OWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v91 = a5;
  v85 = a8;
  v86 = a7;
  v87 = (_QWORD *)a6;
  v93 = a4;
  v84 = a2;
  v83 = a1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E02D0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B1C6050();
  v73 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v75 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v77 = (char *)&v71 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v72 = (char *)&v71 - v20;
  v21 = sub_23B1C60A4();
  v89 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v71 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v27);
  v90 = (uint64_t)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v76 = *(_QWORD *)(v29 - 8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v78 = v31;
  v79 = (uint64_t)&v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v71 - v32;
  v88 = swift_allocObject();
  *(_QWORD *)(v88 + 16) = 0;
  sub_23AA8EFC8(a3, (uint64_t)v33, (uint64_t *)&unk_2542E1DF0);
  if ((v93 & 0x10) != 0)
  {
    v34 = &v33[*(int *)(v29 + 40)];
    LOBYTE(v34) = v34[*(int *)(type metadata accessor for ItemMetadata() + 80)];
    sub_23AA8A05C((uint64_t)v33, (uint64_t *)&unk_2542E1DF0);
    if ((v34 & 1) == 0)
      *(_QWORD *)(v88 + 16) = 1;
  }
  else
  {
    sub_23AA8A05C((uint64_t)v33, (uint64_t *)&unk_2542E1DF0);
  }
  v80 = a9;
  v35 = *(void **)(v92 + 216);
  v82 = *(_QWORD *)(v92 + 224);
  v36 = *(unsigned __int8 *)(a3 + *(int *)(v29 + 40));
  v81 = v35;
  v74 = a3;
  if (v36 == 1 || (v93 & 0x18) == 0)
    sub_23B1C6074();
  else
    sub_23B1C6080();
  v37 = v89;
  v38 = v75;
  v39 = v73;
  v40 = v72;
  v75 = a11;
  v89 = a10;
  qos_class_self();
  sub_23B1C6038();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v14, 1, v15) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v39 + 104))(v40, *MEMORY[0x24BEE5498], v15);
    sub_23AA8A05C((uint64_t)v14, qword_2542E02D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v40, v14, v15);
  }
  sub_23B1C608C();
  v41 = v77;
  sub_23B1C6098();
  v42 = sub_23B1C6044();
  v43 = *(void (**)(char *, uint64_t))(v39 + 8);
  v43(v41, v15);
  sub_23B1C6098();
  v44 = sub_23B1C6044();
  v43(v38, v15);
  if (v42 >= v44)
    v45 = v26;
  else
    v45 = v24;
  v46 = v90;
  (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v90, v45, v21);
  v47 = *(void (**)(char *, uint64_t))(v37 + 8);
  v47(v24, v21);
  v47(v26, v21);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v46, 0, 1, v21);
  v48 = v79;
  sub_23AA8EFC8(v74, v79, (uint64_t *)&unk_2542E1DF0);
  v49 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  v50 = (v78 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  v51 = (v50 + 15) & 0xFFFFFFFFFFFFFFF8;
  v52 = (v51 + 119) & 0xFFFFFFFFFFFFFFF8;
  v53 = (v52 + 15) & 0xFFFFFFFFFFFFFFF8;
  v76 = (v51 + 103) & 0xFFFFFFFFFFFFFFF8;
  v77 = (char *)((v53 + 15) & 0xFFFFFFFFFFFFFFF8);
  v54 = (unint64_t)(v77 + 15) & 0xFFFFFFFFFFFFFFF8;
  v55 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  v78 = (v55 + 63) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  v57 = v75;
  *(_QWORD *)(v56 + 16) = v89;
  *(_QWORD *)(v56 + 24) = v57;
  sub_23AA724E8(v48, v56 + v49, (uint64_t *)&unk_2542E1DF0);
  *(_QWORD *)(v56 + v50) = v91;
  v58 = (_OWORD *)(v56 + v51);
  v59 = v86;
  v60 = v86[1];
  *v58 = *v86;
  v58[1] = v60;
  v61 = v59[5];
  v58[4] = v59[4];
  v58[5] = v61;
  v62 = v59[3];
  v58[2] = v59[2];
  v58[3] = v62;
  v63 = v56 + v76;
  *(_QWORD *)v63 = v83;
  *(_BYTE *)(v63 + 8) = v84;
  *(_QWORD *)(v56 + v52) = v85;
  *(_QWORD *)(v56 + v53) = v88;
  v64 = v56 + v55;
  *(_QWORD *)&v77[v56] = v92;
  *(_QWORD *)(v56 + v54) = v93;
  v65 = v87;
  sub_23AA724E8((uint64_t)v87, v64, qword_2542E48C0);
  v66 = v80;
  sub_23AA724E8(v80, v56 + v78, &qword_2542E5050);
  v67 = (_QWORD *)swift_allocObject();
  v67[2] = v89;
  v67[3] = v57;
  v67[4] = v82;
  swift_retain_n();
  swift_retain();
  sub_23B19DD20((uint64_t)v59);
  swift_retain();
  swift_retain();
  sub_23AC25990(v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
  sub_23AC24890(v66);
  swift_retain();
  v68 = v81;
  v69 = v90;
  sub_23AA9086C(v81, v90, (void (*)())sub_23B19E944, v67, (uint64_t)sub_23B19E878, v56);

  swift_release();
  swift_release();
  sub_23AA8A05C(v69, &qword_2542DD460);
  return swift_release();
}

uint64_t sub_23B194B04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  char v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD v27[2];
  __int128 v28;
  __int128 v29;

  v2 = sub_23B1C5570();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  LODWORD(v28) = sub_23B1C54B0();
  v6 = (void *)sub_23B1C5558();
  sub_23AB6CD48();
  v7 = sub_23B1C575C();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    v14 = 0;
    return v14 & 1;
  }
  v8 = (void *)sub_23B1C5558();
  v9 = (void *)sub_23B1C5870();

  v10 = objc_msgSend(v9, sel_userInfo);
  v11 = sub_23B1C620C();

  if (*(_QWORD *)(v11 + 16) && (v12 = sub_23AAAF4C4(0xD000000000000013, 0x800000023B1FC400), (v13 & 1) != 0))
  {
    sub_23AAA15AC(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)&v28);
  }
  else
  {
    v28 = 0u;
    v29 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v29 + 1))
  {
    sub_23AA8A05C((uint64_t)&v28, qword_2542E5640);
    goto LABEL_13;
  }
  type metadata accessor for URLFileProtection(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:

    v14 = 0;
    return v14 & 1;
  }
  v15 = (void *)v27[1];
  v16 = sub_23B1C63E0();
  v18 = v17;
  if (v16 == sub_23B1C63E0() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_15:

    v14 = 1;
    return v14 & 1;
  }
  v20 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    goto LABEL_15;
  v21 = sub_23B1C63E0();
  v23 = v22;
  if (v21 == sub_23B1C63E0() && v23 == v24)
    v14 = 1;
  else
    v14 = sub_23B1C7388();
  v25 = v15;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

uint64_t sub_23B194DD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F4370756B6F6F6CLL && a2 == 0xEB00000000746E75;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E756F436E616373 && a2 == 0xE900000000000074 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023B21FA90 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447465736572 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_23B194FAC(void *a1, void (*a2)(void *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  char v9;
  id v10;
  uint64_t v11;

  v4 = sub_23B1C545C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    goto LABEL_4;
  v8 = a1;
  sub_23B1C53B4();
  sub_23AA7E38C((unint64_t *)&qword_2569E29D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEA8]);
  v9 = sub_23B1C575C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {

LABEL_4:
    a2(0);
    return;
  }
  v10 = a1;
  a2(a1);

}

void sub_23B1950BC(uint64_t a1, int a2, unint64_t a3, char a4, _QWORD *a5, void (*a6)(_QWORD), uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  char v22;
  uint64_t v23;
  id *v24;
  char v25;
  uint64_t (*v26)();
  uint64_t (*v27)();
  _QWORD *v28;
  uint64_t inited;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  int v48;
  id v49[4];
  id v50;
  _QWORD aBlock[7];

  v48 = a2;
  v47 = a1;
  v12 = sub_23B1C60EC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a6;
  *(_QWORD *)(v16 + 24) = a7;
  v17 = (void *)a5[27];
  *v15 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5610], v12);
  swift_retain();
  v18 = v17;
  LOBYTE(v17) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    v35 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (!v35)
      goto LABEL_18;
    goto LABEL_4;
  }
  if (a3 >> 62)
    goto LABEL_17;
  if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_18:
    a6(0);
    swift_release();
    return;
  }
LABEL_4:
  if ((a4 & 1) != 0)
    goto LABEL_18;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1570]), sel_init);
  if (a5[23])
  {
    v20 = (void *)sub_23B1C63BC();
    objc_msgSend(v19, sel_setPurposeIdentifier_, v20);

  }
  swift_beginAccess();
  v21 = v19;
  sub_23ADE21E0(v49, v21);
  swift_endAccess();

  v22 = v48;
  v23 = v47;
  if ((_BYTE)v48 == 0xFF)
    goto LABEL_22;
  v24 = (id *)(a5 + 25);
  swift_beginAccess();
  if (*(_QWORD *)(a5[25] + 16))
  {
    sub_23AA97254(v23, v22);
    if ((v25 & 1) != 0)
    {
      v26 = sub_23B152D18();
      v27 = sub_23B148FE8(v49, v23, v22);
      if (*v28)
      {
        sub_23ADE21E0(&v50, v21);
        ((void (*)(id *, _QWORD))v27)(v49, 0);
        ((void (*)(_QWORD *, _QWORD))v26)(aBlock, 0);

      }
      else
      {
        ((void (*)(id *, _QWORD))v27)(v49, 0);
        ((void (*)(_QWORD *, _QWORD))v26)(aBlock, 0);
      }
      goto LABEL_22;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1CE680;
  *(_QWORD *)(inited + 32) = v21;
  aBlock[0] = inited;
  sub_23B1C671C();
  v30 = aBlock[0];
  if (aBlock[0] >> 62)
  {
    v36 = v21;
    swift_bridgeObjectRetain();
    v23 = v47;
    v22 = v48;
    v37 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    if (v37)
      goto LABEL_14;
LABEL_20:
    v34 = MEMORY[0x24BEE4B08];
    goto LABEL_21;
  }
  v31 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFF8) + 0x10);
  v32 = v21;
  if (!v31)
    goto LABEL_20;
LABEL_14:
  sub_23AAF8534(v30);
  v34 = v33;
LABEL_21:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v49[0] = *v24;
  *v24 = (id)0x8000000000000000;
  sub_23AD27510(v34, v23, v22, isUniquelyReferenced_nonNull_native);
  *v24 = v49[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_22:
  v39 = (id)fpfs_current_log();
  sub_23AA9F52C(0, &qword_2569E6F90);
  v40 = (void *)sub_23B1C66F8();
  v41 = (void *)a5[26];
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v39;
  *(_QWORD *)(v42 + 24) = a5;
  *(_QWORD *)(v42 + 32) = v21;
  *(_QWORD *)(v42 + 40) = v23;
  *(_BYTE *)(v42 + 48) = v22;
  *(_QWORD *)(v42 + 56) = sub_23B1A0A48;
  *(_QWORD *)(v42 + 64) = v16;
  aBlock[4] = sub_23B1A0A58;
  aBlock[5] = v42;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AC46D44;
  aBlock[3] = &block_descriptor_406;
  v43 = _Block_copy(aBlock);
  v44 = v21;
  v45 = v41;
  v46 = v39;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v44, sel_coordinateAccessWithIntents_queue_byAccessor_, v40, v45, v43);
  _Block_release(v43);
  swift_release();

}

uint64_t sub_23B195588(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  unint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  _QWORD *v38;
  unint64_t v40;
  unint64_t v41;
  int64_t v42;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v32 = a2;
  v5 = a4;
  v6 = 0;
  v33 = (unint64_t *)result;
  v34 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v35 = (unint64_t)(v7 + 63) >> 6;
  v36 = 0;
  v38 = (_QWORD *)(a4 + 48);
  while (2)
  {
    while (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      v12 = *(_QWORD *)(v5 + 16);
      if (v12)
        goto LABEL_23;
LABEL_31:
      *(unint64_t *)((char *)v33 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v36++, 1))
        goto LABEL_37;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
    }
    else
    {
      if (v13 >= v35)
        return sub_23B190A5C(v33, v32, v36, a3);
      v14 = *(_QWORD *)(v34 + 8 * v13);
      ++v6;
      if (v14)
        goto LABEL_22;
      v6 = v13 + 1;
      if (v13 + 1 >= v35)
        return sub_23B190A5C(v33, v32, v36, a3);
      v14 = *(_QWORD *)(v34 + 8 * v6);
      if (v14)
        goto LABEL_22;
      v6 = v13 + 2;
      if (v13 + 2 >= v35)
        return sub_23B190A5C(v33, v32, v36, a3);
      v14 = *(_QWORD *)(v34 + 8 * v6);
      if (v14)
        goto LABEL_22;
      v15 = v13 + 3;
      if (v15 >= v35)
        return sub_23B190A5C(v33, v32, v36, a3);
      v14 = *(_QWORD *)(v34 + 8 * v15);
      if (v14)
      {
        v6 = v15;
LABEL_22:
        v9 = (v14 - 1) & v14;
        v11 = __clz(__rbit64(v14)) + (v6 << 6);
        v12 = *(_QWORD *)(v5 + 16);
        if (!v12)
          goto LABEL_31;
LABEL_23:
        v41 = v9;
        v42 = v6;
        v40 = v11;
        v16 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
        v45 = *v16;
        v46 = v16[1];
        v44 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v17 = v38;
        while (1)
        {
          v18 = *(v17 - 2);
          v19 = *(v17 - 1);
          v20 = (void *)v17[5];
          v21 = v17[2];
          v22 = v17[1];
          sub_23AAAE668(v18, v19);
          swift_bridgeObjectRetain();
          sub_23AAAE668(v22, v21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_23AAAE668(v18, v19);
          sub_23AAAE668(v22, v21);
          swift_bridgeObjectRetain();
          v23 = (void *)sub_23B1C5AA4();
          v24 = (void *)sub_23B1C5AA4();
          v47 = v12;
          if (v20)
          {
            v20 = (void *)sub_23B1C63BC();
            swift_bridgeObjectRelease();
          }
          v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC83D8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v23, v24, v20, v32);
          sub_23AAAE53C(v22, v21);
          sub_23AAAE53C(v18, v19);

          v26 = objc_msgSend(v44, sel_etagForVersion_providerDomainID_, v25, a5);
          v27 = sub_23B1C63E0();
          v29 = v28;

          if (v27 == v45 && v29 == v46)
            break;
          v30 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          sub_23AAAE53C(v18, v19);
          swift_bridgeObjectRelease();
          sub_23AAAE53C(v22, v21);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v30 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v5 = a4;
            goto LABEL_5;
          }
          v17 += 8;
          v12 = v47 - 1;
          if (v47 == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v5 = a4;
            result = swift_bridgeObjectRelease();
            v9 = v41;
            v6 = v42;
            v11 = v40;
            goto LABEL_31;
          }
        }
        swift_bridgeObjectRelease();
        sub_23AAAE53C(v18, v19);
        swift_bridgeObjectRelease();
        sub_23AAAE53C(v22, v21);
        swift_bridgeObjectRelease();
        v5 = a4;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_5:
        swift_bridgeObjectRelease();
        v9 = v41;
        v6 = v42;
        result = swift_bridgeObjectRelease();
        continue;
      }
      while (1)
      {
        v6 = v15 + 1;
        if (__OFADD__(v15, 1))
          break;
        if (v6 >= v35)
          return sub_23B190A5C(v33, v32, v36, a3);
        v14 = *(_QWORD *)(v34 + 8 * v6);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    break;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B1959F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  unsigned int v8;
  unint64_t v9;
  id v10;
  uint64_t isStackAllocationSafe;
  void *v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  _QWORD v18[2];

  v4 = (uint64_t)a3;
  v18[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = a3;
  swift_bridgeObjectRetain_n();
  isStackAllocationSafe = (uint64_t)v10;
  v12 = (void *)isStackAllocationSafe;
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v13 = (char *)v18 - ((8 * v9 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v13, 8 * v9);
    swift_bridgeObjectRetain();
    v14 = v12;
    v4 = sub_23B195588((uint64_t)v13, v9, a1, a2, v4);
    swift_bridgeObjectRelease();

    if (v3)
      swift_willThrow();
  }
  else
  {
    v15 = (void *)swift_slowAlloc();
    bzero(v15, 8 * v9);
    swift_bridgeObjectRetain();
    v14 = v12;
    v16 = sub_23B195588((uint64_t)v15, v9, a1, a2, v4);
    if (!v3)
      v4 = v16;
    swift_bridgeObjectRelease();

    MEMORY[0x23B8614BC](v15, -1, -1);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

_QWORD *sub_23B195C08(_QWORD *a1, uint64_t *a2, uint64_t a3, __int16 a4)
{
  _QWORD *result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  unsigned __int8 v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 v82;
  uint64_t v83;
  unint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;

  result = (_QWORD *)sub_23AA724E8((uint64_t)a1, (uint64_t)&v76, (uint64_t *)&unk_2542E4948);
  v9 = v84;
  if (!v84)
    return result;
  v87 = v76;
  v61 = v77;
  v59 = v79;
  v55 = v80;
  v57 = v78;
  v58 = v81;
  v60 = v82;
  v10 = v83;
  v56 = v85;
  v11 = v86;
  if ((a3 & 0x10000) != 0)
  {
    v12 = (uint64_t)a2 + *(int *)(type metadata accessor for VFSItem(0) + 28);
    result = (_QWORD *)type metadata accessor for ItemMetadata();
    if (*(_BYTE *)(v12 + *((int *)result + 21)))
      a3 &= ~0x10000uLL;
  }
  if ((a4 & 0x1000) != 0)
    return result;
  v13 = type metadata accessor for VFSItem(0);
  v14 = a2[2];
  v15 = a2[5];
  if ((a3 & 0x10018) != 0)
  {
    v16 = (uint64_t)a2 + *(int *)(v13 + 36);
    if (*(_QWORD *)v16 != v87 || *(_DWORD *)(v16 + 8) != (_DWORD)v61)
      goto LABEL_11;
    if ((*(_BYTE *)(v16 + 24) & 1) != 0)
    {
      if ((v59 & 1) == 0)
      {
LABEL_11:
        swift_bridgeObjectRetain();
        sub_23B19E594(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA7638);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v18 = v10;
LABEL_12:
        v19 = *((_BYTE *)a2 + 8);
        v62 = *a2;
        v63 = v19;
        v64 = v87;
        v65 = v61;
        v66 = v57;
        v67 = v59;
        v68 = v55;
        v69 = v58;
        v70 = v60;
        v71 = v18;
        v72 = v9;
        v73 = v56;
        v74 = v11;
        v75 = 0;
        sub_23AAFC630((uint64_t)&v62);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
        sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
        swift_allocError();
        sub_23AA724E8((uint64_t)&v62, v20, (uint64_t *)&unk_2542E0950);
        return (_QWORD *)swift_willThrow();
      }
    }
    else if ((v59 & 1) != 0 || *(_QWORD *)(v16 + 16) != v57)
    {
      goto LABEL_11;
    }
  }
  if ((a3 & 0xFFFFFFFFFFFFFFE7) == 0)
    return (_QWORD *)swift_bridgeObjectRelease_n();
  if (*((_BYTE *)a2 + 24))
  {
    if (*((_BYTE *)a2 + 24) == 1)
    {
      if ((_DWORD)v60 != 1 || v14 != v58)
        goto LABEL_11;
    }
    else if (v14)
    {
      if ((_DWORD)v60 != 2 || v58 != 1)
        goto LABEL_11;
    }
    else if ((_DWORD)v60 != 2 || v58)
    {
      goto LABEL_11;
    }
  }
  else if ((_DWORD)v60 || (_DWORD)v14 != (_DWORD)v58)
  {
    goto LABEL_11;
  }
  v21 = a2[4];
  swift_bridgeObjectRetain_n();
  sub_23B19E594(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA7638);
  swift_bridgeObjectRetain();
  sub_23B19E594(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA7638);
  v53 = v21;
  v22 = sub_23AAAE580(v21, v15);
  v24 = v23;
  swift_bridgeObjectRelease();
  v51 = v11;
  if (v24)
  {
    if (v22 == 12565487 && v24 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_39:
      swift_bridgeObjectRetain();
      v26 = sub_23B1C64B8();
      v54 = sub_23AA8A1BC(v26, v53, v15);
      v28 = v27;
      v30 = v29;
      v32 = v31;
      swift_bridgeObjectRelease();
      v33 = MEMORY[0x23B85ED8C](v54, v28, v30, v32);
      v52 = v34;
      v53 = v33;
      swift_bridgeObjectRelease();
      goto LABEL_41;
    }
    v25 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
      goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  v52 = v15;
LABEL_41:
  swift_bridgeObjectRetain();
  v18 = v10;
  v35 = sub_23AAAE580(v10, v9);
  v37 = v36;
  swift_bridgeObjectRelease();
  if (v37)
  {
    if (v35 == 12565487 && v37 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_46:
      swift_bridgeObjectRetain();
      v39 = sub_23B1C64B8();
      v40 = sub_23AA8A1BC(v39, v10, v9);
      v42 = v41;
      v50 = v43;
      v45 = v44;
      swift_bridgeObjectRelease();
      v46 = MEMORY[0x23B85ED8C](v40, v42, v50, v45);
      v48 = v47;
      v18 = v10;
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    v38 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v38 & 1) != 0)
      goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  v46 = v10;
  v48 = v9;
LABEL_48:
  if (v53 == v46 && v52 == v48)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_23B19E594(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEE68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v49 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B19E594(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEE68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v11 = v51;
    if ((v49 & 1) == 0)
      goto LABEL_12;
  }
  return sub_23B19E594(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEE68);
}

uint64_t sub_23B1961A8(uint64_t a1)
{
  uint64_t v1;

  if ((a1 & 0x10000000000) != 0)
  {
    if ((a1 & 4) != 0)
    {
      v1 = 260;
      if ((a1 & 0x800) != 0)
        goto LABEL_4;
    }
    else
    {
      v1 = 256;
      if ((a1 & 0x800) != 0)
        goto LABEL_4;
    }
  }
  else
  {
    if ((a1 & 4) == 0)
    {
      v1 = 0;
      if ((a1 & 0x800) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
    v1 = 4;
    if ((a1 & 0x800) != 0)
LABEL_4:
      v1 |= 3uLL;
  }
LABEL_5:
  if ((a1 & 0x400) != 0)
  {
    v1 |= 1uLL;
    if ((a1 & 0x1000) == 0)
    {
LABEL_7:
      if ((a1 & 0x200) == 0)
        goto LABEL_8;
      goto LABEL_29;
    }
  }
  else if ((a1 & 0x1000) == 0)
  {
    goto LABEL_7;
  }
  v1 |= 0x8000uLL;
  if ((a1 & 0x200) == 0)
  {
LABEL_8:
    if ((a1 & 0x2000) == 0)
      goto LABEL_9;
    goto LABEL_30;
  }
LABEL_29:
  v1 |= 0x10000uLL;
  if ((a1 & 0x2000) == 0)
  {
LABEL_9:
    if ((a1 & 0x20) == 0)
      goto LABEL_10;
    goto LABEL_31;
  }
LABEL_30:
  v1 |= 0x400uLL;
  if ((a1 & 0x20) == 0)
  {
LABEL_10:
    if ((a1 & 0x40) == 0)
      goto LABEL_11;
    goto LABEL_32;
  }
LABEL_31:
  v1 |= 0x200000uLL;
  if ((a1 & 0x40) == 0)
  {
LABEL_11:
    if ((a1 & 0x80) == 0)
      goto LABEL_12;
    goto LABEL_33;
  }
LABEL_32:
  v1 |= 0x100000uLL;
  if ((a1 & 0x80) == 0)
  {
LABEL_12:
    if ((a1 & 0x100) == 0)
      goto LABEL_13;
    goto LABEL_34;
  }
LABEL_33:
  v1 |= 0x400000uLL;
  if ((a1 & 0x100) == 0)
  {
LABEL_13:
    if ((a1 & 0x20000) == 0)
      goto LABEL_14;
    goto LABEL_35;
  }
LABEL_34:
  v1 |= 0x2000000uLL;
  if ((a1 & 0x20000) == 0)
  {
LABEL_14:
    if ((a1 & 1) == 0)
      goto LABEL_15;
    goto LABEL_36;
  }
LABEL_35:
  v1 |= 0x800000uLL;
  if ((a1 & 1) == 0)
  {
LABEL_15:
    if ((a1 & 0x10000) == 0)
      goto LABEL_16;
    goto LABEL_37;
  }
LABEL_36:
  v1 |= 0x1000000uLL;
  if ((a1 & 0x10000) == 0)
  {
LABEL_16:
    if ((a1 & 0x100000000000) == 0)
      goto LABEL_17;
    goto LABEL_38;
  }
LABEL_37:
  v1 |= 0x8000000uLL;
  if ((a1 & 0x100000000000) == 0)
  {
LABEL_17:
    if ((a1 & 0x400000000000) == 0)
      goto LABEL_18;
    goto LABEL_39;
  }
LABEL_38:
  v1 |= 0x10000000uLL;
  if ((a1 & 0x400000000000) == 0)
  {
LABEL_18:
    if ((a1 & 0x1000000000000) == 0)
      goto LABEL_19;
    goto LABEL_40;
  }
LABEL_39:
  v1 |= 0x800uLL;
  if ((a1 & 0x1000000000000) == 0)
  {
LABEL_19:
    if ((a1 & 0x4000000) == 0)
      goto LABEL_20;
    goto LABEL_41;
  }
LABEL_40:
  v1 |= 0x20000000uLL;
  if ((a1 & 0x4000000) == 0)
  {
LABEL_20:
    if ((a1 & 0x1000000) == 0)
      goto LABEL_21;
LABEL_42:
    v1 |= 0x40000000uLL;
    if ((a1 & 0x8000000) == 0)
      return v1;
    return v1 | 0x80000000;
  }
LABEL_41:
  v1 |= 0x100000000uLL;
  if ((a1 & 0x1000000) != 0)
    goto LABEL_42;
LABEL_21:
  if ((a1 & 0x8000000) != 0)
    return v1 | 0x80000000;
  return v1;
}

uint64_t sub_23B1962B8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  BOOL v33;
  BOOL v35;
  BOOL v37;
  BOOL v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  char *v71;
  char *v72;

  v6 = type metadata accessor for VFSItem(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v71 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v71 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v71 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v71 - v22;
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
  {
    v72 = v9;
    v24 = a1 + *(int *)(v6 + 28);
    if ((*(_BYTE *)(v24 + *(int *)(type metadata accessor for ItemMetadata() + 72)) & 1) == 0)
    {
      sub_23AA8EFC8(a2, (uint64_t)v23, (uint64_t *)&unk_2542E1DF0);
      sub_23AA907B0(a1, (uint64_t)v14, type metadata accessor for VFSItem);
      if ((a3 & 2) == 0)
      {
        sub_23AA937BC((uint64_t)v14, type metadata accessor for VFSItem);
        sub_23AA8A05C((uint64_t)v23, (uint64_t *)&unk_2542E1DF0);
        sub_23AA8EFC8(a2, (uint64_t)v21, (uint64_t *)&unk_2542E1DF0);
        sub_23AA907B0(a1, (uint64_t)v12, type metadata accessor for VFSItem);
        v27 = (uint64_t)v72;
        goto LABEL_32;
      }
      v71 = v12;
      v28 = *(_QWORD *)v23;
      v29 = v23[8];
      sub_23AA8A05C((uint64_t)v23, (uint64_t *)&unk_2542E1DF0);
      v30 = *((_QWORD *)v14 + 2);
      v31 = v14[24];
      sub_23AA937BC((uint64_t)v14, type metadata accessor for VFSItem);
      if (v29)
      {
        v33 = v31 == 1 && v28 == v30;
        v35 = v31 == 2 && v30 == 0;
        v37 = v31 == 2 && v30 == 1;
        if (v28)
          v35 = v37;
        if (v29 == 1)
          v38 = v33;
        else
          v38 = v35;
      }
      else
      {
        if (v31)
        {
          sub_23AA8EFC8(a2, (uint64_t)v21, (uint64_t *)&unk_2542E1DF0);
          v12 = v71;
          sub_23AA907B0(a1, (uint64_t)v71, type metadata accessor for VFSItem);
          goto LABEL_43;
        }
        v38 = (_DWORD)v28 == (_DWORD)v30;
      }
      sub_23AA8EFC8(a2, (uint64_t)v21, (uint64_t *)&unk_2542E1DF0);
      v12 = v71;
      sub_23AA907B0(a1, (uint64_t)v71, type metadata accessor for VFSItem);
      v27 = (uint64_t)v72;
      if (v38)
      {
LABEL_32:
        sub_23AA8EFC8((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_2542E1DF0);
        sub_23AA907B0((uint64_t)v12, v27, type metadata accessor for VFSItem);
        if ((a3 & 1) == 0)
        {
          v25 = 0;
LABEL_57:
          sub_23AA937BC((uint64_t)v12, type metadata accessor for VFSItem);
          sub_23AA8A05C((uint64_t)v21, (uint64_t *)&unk_2542E1DF0);
          sub_23AA8A05C((uint64_t)v18, (uint64_t *)&unk_2542E1DF0);
          sub_23AA937BC(v27, type metadata accessor for VFSItem);
          return v25 & 1;
        }
        v40 = *((_QWORD *)v18 + 2);
        v39 = *((_QWORD *)v18 + 3);
        v41 = *(_QWORD *)(v27 + 40);
        v72 = *(char **)(v27 + 32);
        swift_bridgeObjectRetain();
        v42 = sub_23AAAE580(v40, v39);
        v44 = v43;
        swift_bridgeObjectRelease();
        if (!v44)
          goto LABEL_40;
        if (v42 == 12565487 && v44 == 0xA300000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v46 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          if ((v46 & 1) == 0)
          {
LABEL_40:
            v71 = (char *)v40;
            swift_bridgeObjectRetain();
            goto LABEL_46;
          }
        }
        swift_bridgeObjectRetain();
        v47 = sub_23B1C64B8();
        v48 = sub_23AA8A1BC(v47, v40, v39);
        v50 = v49;
        v52 = v51;
        v54 = v53;
        swift_bridgeObjectRelease();
        v71 = (char *)MEMORY[0x23B85ED8C](v48, v50, v52, v54);
        v39 = v55;
        swift_bridgeObjectRelease();
LABEL_46:
        v56 = (uint64_t)v72;
        swift_bridgeObjectRetain();
        v57 = sub_23AAAE580(v56, v41);
        v59 = v58;
        swift_bridgeObjectRelease();
        if (v59)
        {
          if (v57 == 12565487 && v59 == 0xA300000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_51:
            swift_bridgeObjectRetain();
            v61 = sub_23B1C64B8();
            v62 = sub_23AA8A1BC(v61, v56, v41);
            v64 = v63;
            v66 = v65;
            v68 = v67;
            swift_bridgeObjectRelease();
            v56 = MEMORY[0x23B85ED8C](v62, v64, v66, v68);
            v41 = v69;
            swift_bridgeObjectRelease();
LABEL_53:
            if (v71 == (char *)v56 && v39 == v41)
            {
              swift_bridgeObjectRelease_n();
              v25 = 0;
            }
            else
            {
              v70 = sub_23B1C7388();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v25 = v70 ^ 1;
            }
            goto LABEL_57;
          }
          v60 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          if ((v60 & 1) != 0)
            goto LABEL_51;
        }
        swift_bridgeObjectRetain();
        goto LABEL_53;
      }
LABEL_43:
      sub_23AA937BC((uint64_t)v12, type metadata accessor for VFSItem);
      sub_23AA8A05C((uint64_t)v21, (uint64_t *)&unk_2542E1DF0);
      v25 = 1;
      return v25 & 1;
    }
  }
  v25 = 0;
  return v25 & 1;
}

uint64_t sub_23B196840(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 8) != 0)
  {
    v9 = *(_BYTE *)(a2 + *(int *)(v6 + 40)) != 1;
  }
  else if ((a1 & 0x10) != 0)
  {
    v11 = (unsigned __int8 *)(a2 + *(int *)(v6 + 40));
    v12 = type metadata accessor for ItemMetadata();
    if (v11[*(int *)(v12 + 108)] == *(unsigned __int8 *)(a3 + *(int *)(v12 + 108)))
    {
      v13 = v12;
      v14 = *v11;
      sub_23AA8EFC8(a2, (uint64_t)v8, (uint64_t *)&unk_2542E1DF0);
      if (v14 == 1)
        v9 = 0;
      else
        v9 = v8[*(int *)(v6 + 40) + (uint64_t)*(int *)(v13 + 80)] ^ 1;
      sub_23AA8A05C((uint64_t)v8, (uint64_t *)&unk_2542E1DF0);
    }
    else
    {
      v9 = 1;
    }
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_23B19695C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23B1C5A08();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(a1, (uint64_t)v4, (uint64_t *)&unk_2542E6740);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23AA8A05C((uint64_t)v4, (uint64_t *)&unk_2542E6740);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE870);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_23B1CE680;
    v11 = (void *)objc_opt_self();
    v12 = (void *)sub_23B1C5954();
    v13 = objc_msgSend(v11, sel_writingIntentWithURL_options_, v12, 0x100000);

    *(_QWORD *)(v10 + 32) = v13;
    v16 = v10;
    sub_23B1C671C();
    v9 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

uint64_t sub_23B196AF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = *(uint64_t (**)(uint64_t))(v0 + 32);
  if (v2)
  {
    v3 = swift_retain();
    v4 = v2(v3);
    sub_23AAB7948((uint64_t)v2);
  }
  else
  {
    v4 = 0;
  }
  v5 = MEMORY[0x24BEE4AF8];
  v6 = sub_23AAEAEC4(MEMORY[0x24BEE4AF8]);
  v7 = v1 + qword_2542E6A40;
  swift_beginAccess();
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  *(_QWORD *)v7 = v4;
  *(_QWORD *)(v7 + 8) = v5;
  v10 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  *(_QWORD *)(v7 + 32) = v10;
  *(_QWORD *)(v7 + 40) = v10;
  *(_QWORD *)(v7 + 48) = 0;
  *(_BYTE *)(v7 + 56) = 1;
  return sub_23B1943EC(v8, v9);
}

uint64_t sub_23B196BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  size_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(unint64_t, size_t, uint64_t (*)(uint64_t), uint64_t);
  uint64_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *, _QWORD);
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66[4];
  char v67;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
  v2 = *(_QWORD *)(v1 - 8);
  v56 = v1;
  v57 = v2;
  v3 = MEMORY[0x24BDAC7A8](v1);
  v55 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v54 = (uint64_t)&v53 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v53 = (uint64_t)&v53 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v59 = (uint64_t)&v53 - v9;
  v10 = v0;
  v11 = v0 + qword_2542E6A40;
  swift_beginAccess();
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(_QWORD *)(v11 + 16);
  v15 = *(_QWORD *)(v11 + 24);
  v16 = *(_QWORD *)(v11 + 32);
  v17 = *(_QWORD *)(v11 + 40);
  if (v13)
  {
    v18 = *(_BYTE *)(v11 + 56) & 1;
    v58 = *(_QWORD *)(v11 + 48);
    v63 = v16;
    v64 = v17;
    v61 = v14;
    v62 = v15;
    v65 = v13;
    v60 = v12;
  }
  else
  {
    v19 = *(_QWORD *)v11;
    v20 = sub_23AAEAEC4(MEMORY[0x24BEE4AF8]);
    v60 = 0;
    v61 = v20;
    v12 = v19;
    v58 = 0;
    v18 = 1;
    v63 = MEMORY[0x24BEE4B08];
    v64 = MEMORY[0x24BEE4B08];
    v62 = MEMORY[0x24BEE4AF8];
    v65 = MEMORY[0x24BEE4AF8];
  }
  v67 = v18;
  v21 = *(void **)(v10 + 232);
  sub_23B1A0804(v12, v13);
  if ((objc_msgSend(v21, sel_hasBufferedEvents) & 1) == 0)
  {
    v24 = v10 + qword_2542E6A38;
    v25 = *(_QWORD *)(v10 + qword_2542E6A38);
    v26 = *(_BYTE *)(v10 + qword_2542E6A38 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23B1C5F54();
    swift_release();
    swift_release();
    v23 = v61;
    v22 = v62;
    if ((v26 & 1) == 0 && v25 == v66[0])
    {
      v27 = v59;
      swift_storeEnumTagMultiPayload();
      v28 = v53;
      sub_23AA8EFC8(v27, v53, qword_2542DDA70);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_9;
      goto LABEL_36;
    }
    goto LABEL_12;
  }
  v23 = v61;
  v22 = v62;
  while (1)
  {
    v24 = v65;
    v28 = v60;
    if (!*(_QWORD *)(v65 + 16))
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40 = sub_23AEA5B40(v23);
      swift_bridgeObjectRelease();
      v41 = *(_QWORD *)(v40 + 16);
      swift_release();
      if (v41)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        v42 = *(_QWORD *)(v22 + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if (!v42)
          goto LABEL_33;
      }
    }
    v43 = *(void (**)(unint64_t, size_t, uint64_t (*)(uint64_t), uint64_t))(v10 + 16);
    if (v43)
    {
      v62 = v10;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23AAFA320((uint64_t)v43);
      swift_bridgeObjectRetain();
      v44 = swift_bridgeObjectRetain();
      v45 = sub_23AEA5B40(v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      if (*(_QWORD *)(v22 + 16))
      {
        v46 = swift_allocObject();
        *(_QWORD *)(v46 + 16) = v22;
        swift_bridgeObjectRetain();
        v47 = sub_23B1A1040;
      }
      else
      {
        v47 = 0;
        v46 = 0;
      }
      v43(v65, v45, v47, v46);
      sub_23AAB7948((uint64_t)v43);
      sub_23AAB7948((uint64_t)v47);
      swift_bridgeObjectRelease();
      swift_release();
      v10 = v62;
    }
    v24 = v65;
    if ((v67 & 1) == 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v66[0] = v58;
      swift_retain();
      sub_23B1C5F60();
    }
LABEL_33:
    v48 = *(_QWORD *)v11;
    v49 = *(_QWORD *)(v11 + 8);
    *(_OWORD *)v11 = 0u;
    *(_OWORD *)(v11 + 16) = 0u;
    *(_OWORD *)(v11 + 32) = 0u;
    *(_OWORD *)(v11 + 41) = 0u;
    sub_23B1943EC(v48, v49);
    swift_getKeyPath();
    swift_getKeyPath();
    v50 = (void (*)(uint64_t *, _QWORD))sub_23B1C5F48();
    if (!__OFADD__(*v51, 1))
      break;
    __break(1u);
LABEL_36:
    v65 = sub_23AF9A4D8(0, *(_QWORD *)(v65 + 16) + 1, 1, v65);
LABEL_9:
    v30 = *(_QWORD *)(v65 + 16);
    v29 = *(_QWORD *)(v65 + 24);
    if (v30 >= v29 >> 1)
      v65 = sub_23AF9A4D8(v29 > 1, v30 + 1, 1, v65);
    v31 = v65;
    *(_QWORD *)(v65 + 16) = v30 + 1;
    sub_23AA724E8(v28, v31+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(_QWORD *)(v57 + 72) * v30, qword_2542DDA70);
    sub_23AA8A05C(v59, qword_2542DDA70);
LABEL_12:
    v32 = (uint64_t *)(v10 + qword_2542E6A60);
    if ((*(_BYTE *)(v10 + qword_2542E6A60 + 16) & 1) == 0)
    {
      v34 = *v32;
      v33 = v32[1];
      swift_getKeyPath();
      swift_getKeyPath();
      sub_23B1C5F54();
      swift_release();
      swift_release();
      v35 = v66[0];
      swift_getKeyPath();
      swift_getKeyPath();
      sub_23B1C5F54();
      swift_release();
      swift_release();
      if (v34 == v35)
      {
        v23 = v61;
        v22 = v62;
        if (v33 == v66[0])
        {
          v36 = v54;
          swift_storeEnumTagMultiPayload();
          sub_23AA8EFC8(v36, v55, qword_2542DDA70);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v65 = sub_23AF9A4D8(0, *(_QWORD *)(v65 + 16) + 1, 1, v65);
          v38 = *(_QWORD *)(v65 + 16);
          v37 = *(_QWORD *)(v65 + 24);
          if (v38 >= v37 >> 1)
            v65 = sub_23AF9A4D8(v37 > 1, v38 + 1, 1, v65);
          v39 = v65;
          *(_QWORD *)(v65 + 16) = v38 + 1;
          sub_23AA724E8(v55, v39+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(_QWORD *)(v57 + 72) * v38, qword_2542DDA70);
          sub_23AA8A05C(v54, qword_2542DDA70);
        }
      }
      else
      {
        v23 = v61;
        v22 = v62;
      }
    }
    *(_QWORD *)v24 = 0;
    *(_BYTE *)(v24 + 8) = 1;
    *v32 = 0;
    v32[1] = 0;
    *((_BYTE *)v32 + 16) = 1;
  }
  ++*v51;
  v50(v66, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23B197388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)();
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t ObjectType;
  void *v129;
  double v130;
  id v131;
  char *v132;
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  uint8_t *v136;
  void (*v137)(char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  const char *v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  id v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  char *v151;
  NSObject *v152;
  os_log_type_t v153;
  _BOOL4 v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t (*v173)();
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  char v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t (*v191)();
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  uint64_t v197;
  char v198;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t (*v203)();
  uint64_t v204;
  int v205;
  uint64_t v206;
  _QWORD *v207;
  char *v208;
  uint64_t v209;
  char v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char v215;
  char v216;
  uint64_t v217;
  int v218;
  uint64_t v219;
  id v220;
  char *v221;
  NSObject *v222;
  os_log_type_t v223;
  uint64_t v224;
  uint64_t v225;
  int v226;
  int v227;
  uint64_t v228;
  uint64_t v229;
  int v230;
  void *v231;
  void *v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  int v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  void *v243;
  uint64_t v244;
  char v245;
  uint64_t v246;
  char v247;
  uint64_t v248;
  int v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unsigned __int8 v255;
  uint64_t v256;
  unsigned __int8 v257;
  uint64_t v258;
  uint64_t (*v259)();
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  char v267;
  unint64_t v268;
  unint64_t v269;
  uint64_t v270;
  uint64_t (*v271)();
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  unint64_t v277;
  char v278;
  unint64_t v279;
  unint64_t v280;
  id v281;
  NSObject *v282;
  os_log_type_t v283;
  int v284;
  uint64_t v285;
  uint64_t v286;
  unint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  NSObject *v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  char v302;
  unint64_t v303;
  unint64_t v304;
  void *v305;
  void (*v306)(char *, uint64_t);
  void *v307;
  id v308;
  uint64_t v309;
  uint64_t v310;
  void *v311;
  id v312;
  char *v313;
  char *v314;
  id v315;
  id v316;
  NSObject *v317;
  os_log_type_t v318;
  int v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  void *v323;
  id v324;
  uint64_t v325;
  unint64_t v326;
  unint64_t v327;
  id v328;
  uint64_t v329;
  uint64_t v330;
  char *v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  uint64_t v341;
  char v342;
  uint64_t v343;
  unint64_t v344;
  char v345;
  unint64_t v346;
  unint64_t v347;
  uint64_t v348;
  _QWORD *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t *v354;
  uint64_t *v355;
  uint64_t v356;
  char *v357;
  char *v358;
  uint64_t *v359;
  uint64_t v360;
  char *v361;
  uint64_t v362;
  char *v363;
  _QWORD *v364;
  uint64_t v365;
  char *v366;
  char *v367;
  char *v368;
  uint64_t v369;
  int v370;
  uint64_t v371;
  char *v372;
  uint64_t v373;
  char *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  _QWORD *v378;
  uint64_t v379;
  char *v380;
  _BYTE *v381;
  char *v382;
  char *v383;
  void (*v384)(char *, uint64_t);
  unsigned int (*v385)(uint64_t, uint64_t, uint64_t);
  uint64_t v386;
  char *v387;
  unint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t *v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  NSObject *v401;
  _QWORD *v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405[2];
  int v406;
  int v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;

  v390 = a8;
  LODWORD(v401) = a7;
  v391 = a6;
  v370 = a5;
  v369 = a4;
  v396 = a3;
  v399 = a2;
  v398 = a1;
  v411 = *MEMORY[0x24BDAC8D0];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v9);
  v374 = (char *)&v349 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v376 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
  v377 = *(_QWORD *)(v376 - 8);
  v11 = MEMORY[0x24BDAC7A8](v376);
  v362 = (uint64_t)&v349 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v366 = (char *)&v349 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v350 = (uint64_t)&v349 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v349 = (_QWORD **)((char *)&v349 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v352 = (uint64_t)&v349 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v354 = (uint64_t *)((char *)&v349 - v22);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v353 = (uint64_t)&v349 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v355 = (uint64_t *)((char *)&v349 - v26);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v365 = (uint64_t)&v349 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v364 = (_QWORD **)((char *)&v349 - v30);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v379 = (uint64_t)&v349 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v378 = (_QWORD **)((char *)&v349 - v34);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v360 = (uint64_t)&v349 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v359 = (uint64_t *)((char *)&v349 - v37);
  v395 = sub_23B1C5E4C();
  v388 = *(_QWORD *)(v395 - 8);
  v38 = MEMORY[0x24BDAC7A8](v395);
  v385 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v349 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = MEMORY[0x24BDAC7A8](v38);
  v368 = (char *)&v349 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v380 = (char *)&v349 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v363 = (char *)&v349 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v361 = (char *)&v349 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v357 = (char *)&v349 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v372 = (char *)&v349 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v382 = (char *)&v349 - v53;
  MEMORY[0x24BDAC7A8](v52);
  v387 = (char *)&v349 - v54;
  v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  MEMORY[0x24BDAC7A8](v55);
  v57 = (char *)&v349 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v386 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v386);
  v389 = (uint64_t)&v349 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v60 = MEMORY[0x24BDAC7A8](v59);
  v356 = (uint64_t)&v349 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v60);
  v63 = (char *)&v349 - v62;
  v400 = type metadata accessor for VFSItem(0);
  v392 = *(_QWORD *)(v400 - 8);
  v64 = MEMORY[0x24BDAC7A8](v400);
  v351 = (uint64_t)&v349 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = MEMORY[0x24BDAC7A8](v64);
  v375 = (uint64_t)&v349 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v383 = (char *)&v349 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v373 = (uint64_t)&v349 - v71;
  v72 = MEMORY[0x24BDAC7A8](v70);
  v371 = (uint64_t)&v349 - v73;
  v74 = MEMORY[0x24BDAC7A8](v72);
  v381 = (char *)&v349 - v75;
  v76 = MEMORY[0x24BDAC7A8](v74);
  v78 = (char *)&v349 - v77;
  MEMORY[0x24BDAC7A8](v76);
  v397 = (uint64_t *)((char *)&v349 - v79);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE6D0);
  MEMORY[0x24BDAC7A8](v80);
  v82 = (char *)&v349 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  v393 = sub_23B1C5A08();
  v394 = *(_QWORD *)(v393 - 8);
  v83 = MEMORY[0x24BDAC7A8](v393);
  v384 = (void (*)(char *, uint64_t))((char *)&v349 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
  v85 = MEMORY[0x24BDAC7A8](v83);
  v367 = (char *)&v349 - v86;
  v87 = MEMORY[0x24BDAC7A8](v85);
  v358 = (char *)&v349 - v88;
  MEMORY[0x24BDAC7A8](v87);
  v90 = (char *)&v349 - v89;
  v91 = sub_23B1C60EC();
  v92 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v94 = (_QWORD **)((char *)&v349 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0));
  v402 = (_QWORD *)v8;
  *v94 = objc_msgSend(*(id *)(v8 + 232), sel_delegationQueue);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v92 + 104))(v94, *MEMORY[0x24BEE5610], v91);
  v95 = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v92 + 8))(v94, v91);
  if ((v95 & 1) == 0)
  {
    __break(1u);
LABEL_185:
    swift_once();
LABEL_11:
    v111 = (void *)qword_2542EDD28;
    v112 = sub_23B1C5DC8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v57, 1, 1, v112);
    v405[0] = 0;
    v405[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    strcpy((char *)v405, "resolved item ");
    HIBYTE(v405[1]) = -18;
    sub_23AC3E1F8();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AAA0AB8((uint64_t)"FS: handle event", 16, 2, (uint64_t)v57, v405[0], v405[1], v111, v389);
    swift_bridgeObjectRelease();
    sub_23AA8A05C((uint64_t)v57, (uint64_t *)&unk_2542E67B8);
    v113 = (id)fpfs_current_or_default_log();
    v114 = v91;
    v115 = v387;
    sub_23B1C5E58();
    v116 = v114;
    sub_23AA907B0(v114, (uint64_t)v78, type metadata accessor for VFSItem);
    v117 = sub_23B1C5E40();
    v118 = sub_23B1C6A94();
    if (os_log_type_enabled(v117, v118))
    {
      v119 = (uint8_t *)swift_slowAlloc();
      v120 = swift_slowAlloc();
      v405[0] = v120;
      *(_DWORD *)v119 = 136446210;
      v121 = sub_23AC3E1F8();
      v410 = sub_23AABEC68(v121, v122, v405);
      v82 = (char *)v400;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      sub_23AA937BC((uint64_t)v78, type metadata accessor for VFSItem);
      _os_log_impl(&dword_23AA66000, v117, v118, "Handling FSEvent for %{public}s", v119, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v120, -1, -1);
      MEMORY[0x23B8614BC](v119, -1, -1);

      v123 = *(_QWORD *)(v388 + 8);
      ((void (*)(char *, uint64_t))v123)(v387, v395);
    }
    else
    {
      sub_23AA937BC((uint64_t)v78, type metadata accessor for VFSItem);

      v123 = *(_QWORD *)(v388 + 8);
      ((void (*)(char *, uint64_t))v123)(v115, v395);
    }
    v124 = v116;
    v125 = (_BYTE *)(v116 + *((int *)v82 + 7));
    v126 = *(int *)(type metadata accessor for ItemMetadata() + 108);
    v127 = v401;
    if (v125[v126] != 1
      || ((unsigned __int16)v401 & 0x800) == 0
      || *(_QWORD *)(v116 + *(int *)(v400 + 36)) == v396
      || !MEMORY[0x23B8615C4](v402 + 34))
    {
      v129 = 0;
      goto LABEL_20;
    }
    v388 = v127;
    v384 = (void (*)(char *, uint64_t))v123;
    v117 = v402[35];
    ObjectType = swift_getObjectType();
    v129 = 0;
    v214 = ((uint64_t (*)(uint64_t, uint64_t, NSObject *))v117[1].isa)(v396, ObjectType, v117);
    v216 = v215;
    swift_unknownObjectRelease();
    if (v216 != -1)
    {
      v124 = (uint64_t)v397;
      v217 = *v397;
      v218 = *((unsigned __int8 *)v397 + 8);
      if (v216)
      {
        if (v216 == 1)
        {
          if (v218 != 1 || v214 != v217)
            goto LABEL_127;
LABEL_134:
          v123 = (uint64_t)v384;
          v127 = v388;
LABEL_20:
          sub_23B1C5B94();
          if ((~*(_QWORD *)&v130 & 0x7FF0000000000000) != 0)
          {
            if (v130 > -9.22337204e18)
            {
              if (v130 < 9.22337204e18)
              {
                if (fpfs_is_busy_date())
                {
                  v131 = (id)fpfs_current_or_default_log();
                  v132 = v382;
                  sub_23B1C5E58();
                  v133 = (uint64_t)v381;
                  sub_23AA907B0(v124, (uint64_t)v381, type metadata accessor for VFSItem);
                  v134 = sub_23B1C5E40();
                  v135 = sub_23B1C6A94();
                  if (os_log_type_enabled(v134, v135))
                  {
                    v136 = (uint8_t *)swift_slowAlloc();
                    v137 = (void (*)(char *, uint64_t))v123;
                    v138 = swift_slowAlloc();
                    v405[0] = v138;
                    *(_DWORD *)v136 = 136446210;
                    v139 = sub_23AC3E1F8();
                    v410 = sub_23AABEC68(v139, v140, v405);
                    sub_23B1C6CBC();
                    swift_bridgeObjectRelease();
                    sub_23AA937BC(v133, type metadata accessor for VFSItem);
                    v141 = "🏗 ignoring event for busy file %{public}s";
LABEL_29:
                    _os_log_impl(&dword_23AA66000, v134, v135, v141, v136, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x23B8614BC](v138, -1, -1);
                    MEMORY[0x23B8614BC](v136, -1, -1);

                    v137(v132, v395);
LABEL_34:
                    v159 = v393;
                    v160 = v394;
                    sub_23B17E93C((int)v401, v398, v399, v396);
                    sub_23B1C6BD8();
                    v161 = v389;
                    sub_23B1C5DA4();
                    sub_23AA937BC(v161, type metadata accessor for Signpost);
                    sub_23AA937BC((uint64_t)v397, type metadata accessor for VFSItem);
                    return (*(uint64_t (**)(uint64_t, uint64_t))(v160 + 8))(v390, v159);
                  }
                  goto LABEL_33;
                }
                v142 = sub_23AC3C0B0();
                v144 = v143;
                sub_23AAA12F0(v142, v143);
                if (!(v144 >> 62))
                {
                  v145 = (id)fpfs_current_or_default_log();
                  v132 = v372;
                  sub_23B1C5E58();
                  v133 = v371;
                  sub_23AA907B0(v124, v371, type metadata accessor for VFSItem);
                  v134 = sub_23B1C5E40();
                  v135 = sub_23B1C6A94();
                  if (os_log_type_enabled(v134, v135))
                  {
                    v136 = (uint8_t *)swift_slowAlloc();
                    v137 = (void (*)(char *, uint64_t))v123;
                    v138 = swift_slowAlloc();
                    v405[0] = v138;
                    *(_DWORD *)v136 = 136446210;
                    v146 = sub_23AC3E1F8();
                    v410 = sub_23AABEC68(v146, v147, v405);
                    sub_23B1C6CBC();
                    swift_bridgeObjectRelease();
                    sub_23AA937BC(v133, type metadata accessor for VFSItem);
                    v141 = "🏗 ignoring event for temporary file %{public}s";
                    goto LABEL_29;
                  }
LABEL_33:
                  sub_23AA937BC(v133, type metadata accessor for VFSItem);

                  ((void (*)(char *, uint64_t))v123)(v132, v395);
                  goto LABEL_34;
                }
                v384 = (void (*)(char *, uint64_t))v123;
                v162 = (_QWORD *)((char *)v402 + qword_2542E6A40);
                swift_beginAccess();
                v163 = v162[1];
                v388 = v127;
                if (v163)
                {
                  v382 = 0;
                  v381 = v125;
                  v164 = v126;
                  v165 = v124;
                  v166 = *v162;
                  sub_23B1A0804(*v162, v163);
                  v167 = swift_retain();
                  v387 = (char *)v166;
                  v124 = v165;
                  v126 = v164;
                  v125 = v381;
                  LODWORD(v127) = v388;
                  v129 = v382;
                  sub_23B1943EC(v167, v163);
                }
                else
                {
                  v387 = 0;
                }
                v188 = v400;
                v189 = (uint64_t)v383;
                v191 = sub_23B152E74();
                if (*(_QWORD *)(v190 + 8))
                {
                  v192 = v190;
                  v382 = (char *)v126;
                  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
                  v194 = v188;
                  v195 = v378;
                  v196 = (uint64_t)v378 + *(int *)(v193 + 48);
                  v197 = *(int *)(v193 + 64);
                  v198 = *(_BYTE *)(v124 + 8);
                  *v378 = *(_QWORD *)v124;
                  *((_BYTE *)v195 + 8) = v198;
                  sub_23AA907B0(v124, v196, type metadata accessor for VFSItem);
                  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v392 + 56))(v196, 0, 1, v194);
                  *(_QWORD *)((char *)v195 + v197) = v387;
                  swift_storeEnumTagMultiPayload();
                  sub_23AA8EFC8((uint64_t)v195, v379, qword_2542DDA70);
                  v127 = *(_QWORD *)(v192 + 8);
                  swift_retain();
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  *(_QWORD *)(v192 + 8) = v127;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    v127 = sub_23AF9A4D8(0, *(_QWORD *)(v127 + 16) + 1, 1, v127);
                    *(_QWORD *)(v192 + 8) = v127;
                  }
                  v201 = *(_QWORD *)(v127 + 16);
                  v200 = *(_QWORD *)(v127 + 24);
                  if (v201 >= v200 >> 1)
                  {
                    v127 = sub_23AF9A4D8(v200 > 1, v201 + 1, 1, v127);
                    *(_QWORD *)(v192 + 8) = v127;
                  }
                  v126 = (uint64_t)v382;
                  *(_QWORD *)(v127 + 16) = v201 + 1;
                  sub_23AA724E8(v379, v127+ ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80))+ *(_QWORD *)(v377 + 72) * v201, qword_2542DDA70);
                  sub_23AA8A05C((uint64_t)v378, qword_2542DDA70);
                  ((void (*)(uint64_t *, _QWORD))v191)(v405, 0);
                  v189 = (uint64_t)v383;
                  LODWORD(v127) = v388;
                  v188 = v400;
                }
                else
                {
                  ((void (*)(uint64_t *, _QWORD))v191)(v405, 0);
                }
                sub_23B17E93C((int)v401, v398, v399, v396);
                if (*(unsigned __int8 *)(v124 + 8) >= 2u && *(_QWORD *)v124)
                {
                  v203 = sub_23B152E74();
                  if (*(_QWORD *)(v202 + 8))
                  {
                    v204 = v202;
                    v205 = v127;
                    v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
                    v207 = v364;
                    v208 = (char *)v364 + *(int *)(v206 + 48);
                    v209 = *(int *)(v206 + 64);
                    *v364 = *(_QWORD *)(v124 + *(int *)(v188 + 36));
                    *((_BYTE *)v207 + 8) = 1;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v392 + 56))(v208, 1, 1, v188);
                    *(_QWORD *)((char *)v207 + v209) = 0;
                    swift_storeEnumTagMultiPayload();
                    sub_23AA8EFC8((uint64_t)v207, v365, qword_2542DDA70);
                    v127 = *(_QWORD *)(v204 + 8);
                    v210 = swift_isUniquelyReferenced_nonNull_native();
                    *(_QWORD *)(v204 + 8) = v127;
                    if ((v210 & 1) == 0)
                    {
                      v127 = sub_23AF9A4D8(0, *(_QWORD *)(v127 + 16) + 1, 1, v127);
                      *(_QWORD *)(v204 + 8) = v127;
                    }
                    v212 = *(_QWORD *)(v127 + 16);
                    v211 = *(_QWORD *)(v127 + 24);
                    if (v212 >= v211 >> 1)
                    {
                      v127 = sub_23AF9A4D8(v211 > 1, v212 + 1, 1, v127);
                      *(_QWORD *)(v204 + 8) = v127;
                    }
                    *(_QWORD *)(v127 + 16) = v212 + 1;
                    sub_23AA724E8(v365, v127+ ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80))+ *(_QWORD *)(v377 + 72) * v212, qword_2542DDA70);
                    sub_23AA8A05C((uint64_t)v364, qword_2542DDA70);
                    ((void (*)(uint64_t *, _QWORD))v203)(v405, 0);
                    v189 = (uint64_t)v383;
                    LODWORD(v127) = v205;
                    v188 = v400;
                  }
                  else
                  {
                    ((void (*)(uint64_t *, _QWORD))v203)(v405, 0);
                  }
                }
                else
                {
                  v213 = *(_QWORD *)(v124 + *(int *)(v188 + 36));
                  swift_bridgeObjectRelease_n();
                  if ((v370 & 1) == 0 && v213 == v369 && (v127 & 0x80000) == 0)
                  {
                    sub_23B157094(1);
                    if (v129)
                    {

                      v129 = 0;
                    }
                    v124 = (uint64_t)v397;
                  }
                }
                if (*v125 != 1 || (v225 = v124 + *(int *)(v188 + 56), (*(_BYTE *)(v225 + 4) & 1) != 0))
                {
LABEL_92:
                  v235 = v129;
                  v236 = v125[v126];
                  v237 = v373;
                  sub_23AA907B0(v124, v373, type metadata accessor for VFSItem);
                  if (v236 == 1)
                  {
                    v238 = *(_QWORD *)(v237 + *(int *)(v400 + 36));
                    swift_bridgeObjectRetain();
                    sub_23AA937BC(v237, type metadata accessor for VFSItem);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease_n();
                    v126 = v393;
                    v239 = v390;
                    v240 = v374;
                    if (v238 != v396)
                    {
                      if (!MEMORY[0x23B8615C4](v402 + 34))
                        goto LABEL_160;
                      v241 = v402[35];
                      v242 = swift_getObjectType();
                      v243 = v235;
                      v244 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v241 + 8))(v396, v242, v241);
                      if (!v235)
                      {
                        v246 = v244;
                        v247 = v245;
                        v235 = 0;
                        swift_unknownObjectRelease();
                        v124 = (uint64_t)v397;
                        if (v247 == -1)
                        {
LABEL_158:
                          v239 = v390;
                          goto LABEL_159;
                        }
                        v248 = *v397;
                        v249 = *((unsigned __int8 *)v397 + 8);
                        if (v247)
                        {
                          v250 = v357;
                          if (v247 == 1)
                          {
                            if (v249 == 1 && v246 == v248)
                              goto LABEL_158;
                          }
                          else if (v246)
                          {
                            if (v249 == 2 && v248 == 1)
                              goto LABEL_158;
                          }
                          else if (v249 == 2 && !v248)
                          {
                            goto LABEL_158;
                          }
                        }
                        else
                        {
                          v250 = v357;
                          if (!*((_BYTE *)v397 + 8) && (_DWORD)v246 == (_DWORD)v248)
                            goto LABEL_158;
                        }
                        v281 = (id)fpfs_current_or_default_log();
                        sub_23B1C5E58();
                        sub_23AA907B0(v124, v189, type metadata accessor for VFSItem);
                        v282 = sub_23B1C5E40();
                        v283 = sub_23B1C6A88();
                        v284 = v283;
                        v401 = v282;
                        if (os_log_type_enabled(v282, v283))
                        {
                          v285 = swift_slowAlloc();
                          v399 = swift_slowAlloc();
                          v405[0] = v399;
                          *(_DWORD *)v285 = 136315394;
                          LODWORD(v398) = v284;
                          v286 = sub_23AA96F18(v246, v247);
                          v404 = sub_23AABEC68(v286, v287, v405);
                          sub_23B1C6CBC();
                          swift_bridgeObjectRelease();
                          *(_WORD *)(v285 + 12) = 2080;
                          v288 = (uint64_t)v383;
                          v289 = sub_23AA96F18(*(_QWORD *)v383, v383[8]);
                          v404 = sub_23AABEC68(v289, v290, v405);
                          sub_23B1C6CBC();
                          v126 = v393;
                          swift_bridgeObjectRelease();
                          sub_23AA937BC(v288, type metadata accessor for VFSItem);
                          v291 = v401;
                          _os_log_impl(&dword_23AA66000, v401, (os_log_type_t)v398, "%s was moved inside package %s", (uint8_t *)v285, 0x16u);
                          v292 = v399;
                          swift_arrayDestroy();
                          MEMORY[0x23B8614BC](v292, -1, -1);
                          MEMORY[0x23B8614BC](v285, -1, -1);

                          v293 = v357;
                        }
                        else
                        {
                          sub_23AA937BC(v189, type metadata accessor for VFSItem);

                          v293 = v250;
                        }
                        v384(v293, v395);
                        v259 = sub_23B152E74();
                        if (!*(_QWORD *)(v294 + 8))
                        {
LABEL_157:
                          ((void (*)(uint64_t *, _QWORD))v259)(v405, 0);
                          goto LABEL_158;
                        }
                        v295 = v294;
                        v296 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
                        v297 = (uint64_t)v355;
                        v298 = (char *)v355 + *(int *)(v296 + 48);
                        v299 = *(int *)(v296 + 64);
                        *v355 = v246;
                        *(_BYTE *)(v297 + 8) = v247;
                        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v392 + 56))(v298, 1, 1, v400);
                        *(_QWORD *)(v297 + v299) = 0;
                        swift_storeEnumTagMultiPayload();
                        v300 = v353;
                        sub_23AA8EFC8(v297, v353, qword_2542DDA70);
                        v301 = *(_QWORD *)(v295 + 8);
                        v302 = swift_isUniquelyReferenced_nonNull_native();
                        *(_QWORD *)(v295 + 8) = v301;
                        if ((v302 & 1) == 0)
                        {
                          v301 = sub_23AF9A4D8(0, *(_QWORD *)(v301 + 16) + 1, 1, v301);
                          *(_QWORD *)(v295 + 8) = v301;
                        }
                        v304 = *(_QWORD *)(v301 + 16);
                        v303 = *(_QWORD *)(v301 + 24);
                        if (v304 >= v303 >> 1)
                        {
                          v301 = sub_23AF9A4D8(v303 > 1, v304 + 1, 1, v301);
                          *(_QWORD *)(v295 + 8) = v301;
                        }
                        *(_QWORD *)(v301 + 16) = v304 + 1;
                        sub_23AA724E8(v300, v301+ ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80))+ *(_QWORD *)(v377 + 72) * v304, qword_2542DDA70);
                        v270 = (uint64_t)v355;
LABEL_156:
                        sub_23AA8A05C(v270, qword_2542DDA70);
                        goto LABEL_157;
                      }
                      goto LABEL_109;
                    }
                  }
                  else
                  {
                    sub_23AA937BC(v237, type metadata accessor for VFSItem);
                    v126 = v393;
                    v239 = v390;
                    v240 = v374;
                  }
                  if ((v127 & 0x80000) != 0
                    || (v127 & 0x500) != 0x400 && (v127 & 0x70000 & ((v127 & 0x70000) - 1)) == 0
                    || *(_BYTE *)(v124 + 8)
                    || (v251 = *(_QWORD *)v124, !MEMORY[0x23B8615C4](v402 + 34)))
                  {
LABEL_160:
                    if ((v127 & 0x800) != 0)
                    {
                      sub_23AA907B0(v124, v375, type metadata accessor for VFSItem);
                      sub_23AC380C8(v240);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v394 + 48))(v240, 1, v126) != 1)
                      {
                        v305 = (void *)sub_23B1C5954();
                        v306 = *(void (**)(char *, uint64_t))(v394 + 8);
                        v306(v240, v126);
                        v307 = (void *)sub_23B1C5954();
                        v308 = objc_msgSend(v305, sel_fp_relationshipToItemAtURL_, v307);

                        v239 = v390;
                        if (v308 == (id)2)
                        {
                          MEMORY[0x24BDAC7A8](v309);
                          v310 = (uint64_t)v402;
                          *(&v349 - 4) = v402;
                          *(&v349 - 3) = sub_23B1A0FB8;
                          *(&v349 - 2) = (_QWORD *)v310;
                          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8F20);
                          v239 = v390;
                          v311 = v235;
                          sub_23B1C59B4();
                          if (v235)
                          {
                            v312 = (id)fpfs_current_or_default_log();
                            v313 = v361;
                            sub_23B1C5E58();
                            v314 = v358;
                            (*(void (**)(char *, uint64_t, uint64_t))(v394 + 16))(v358, v239, v126);
                            v315 = v311;
                            v316 = v311;
                            v317 = sub_23B1C5E40();
                            v318 = sub_23B1C6AA0();
                            v319 = v318;
                            if (os_log_type_enabled(v317, v318))
                            {
                              v320 = swift_slowAlloc();
                              LODWORD(v401) = v319;
                              v321 = v320;
                              v400 = swift_slowAlloc();
                              v322 = swift_slowAlloc();
                              v402 = (_QWORD *)v322;
                              *(_DWORD *)v321 = 134218498;
                              v404 = v391;
                              v405[0] = v322;
                              sub_23B1C6CBC();
                              *(_WORD *)(v321 + 12) = 2080;
                              v323 = (void *)sub_23B1C5954();
                              v324 = objc_msgSend(v323, sel_fp_shortDescription);

                              v325 = sub_23B1C63E0();
                              v327 = v326;

                              v404 = sub_23AABEC68(v325, v327, v405);
                              v126 = v393;
                              sub_23B1C6CBC();
                              swift_bridgeObjectRelease();
                              v306(v314, v126);
                              *(_WORD *)(v321 + 22) = 2112;
                              swift_getErrorValue();
                              v328 = sub_23B0D9CF0(v403);
                              v404 = (uint64_t)v328;
                              sub_23B1C6CBC();
                              v329 = v400;
                              *(_QWORD *)v400 = v328;

                              _os_log_impl(&dword_23AA66000, v317, (os_log_type_t)v401, "Failed to identify root of rename event #%llu against package at %s: %@", (uint8_t *)v321, 0x20u);
                              __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
                              swift_arrayDestroy();
                              MEMORY[0x23B8614BC](v329, -1, -1);
                              v330 = (uint64_t)v402;
                              swift_arrayDestroy();
                              MEMORY[0x23B8614BC](v330, -1, -1);
                              MEMORY[0x23B8614BC](v321, -1, -1);

                              swift_release();
                              v331 = v361;
                            }
                            else
                            {

                              swift_release();
                              v306(v314, v126);

                              v331 = v313;
                            }
                            v384(v331, v395);
                            sub_23AA937BC(v375, type metadata accessor for VFSItem);
                            v239 = v390;
                            goto LABEL_177;
                          }
                          if ((v405[1] & 0x100) != 0 || (v405[1] & 1) != 0)
                          {
                            sub_23AA937BC(v375, type metadata accessor for VFSItem);
                            swift_release();
LABEL_177:
                            v124 = (uint64_t)v397;
                            goto LABEL_168;
                          }
                          v333 = v356;
                          sub_23B157BAC(v405[0], 0, 0, v356);
                          v334 = v400;
                          if (v385(v333, 1, v400) == 1)
                          {
                            swift_release();
                            sub_23AA937BC(v375, type metadata accessor for VFSItem);
                            sub_23AA8A05C(v333, &qword_2542E72C0);
                            goto LABEL_177;
                          }
                          v335 = v333;
                          v123 = v351;
                          sub_23AA94050(v335, v351, type metadata accessor for VFSItem);
                          v117 = sub_23B152E74();
                          if (*(_QWORD *)(v336 + 8))
                          {
                            v337 = v336;
                            v338 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
                            v339 = (uint64_t)v349;
                            v340 = (char *)v349 + *(int *)(v338 + 48);
                            v341 = *(int *)(v338 + 64);
                            v342 = *(_BYTE *)(v123 + 8);
                            *v349 = *(_QWORD *)v123;
                            *(_BYTE *)(v339 + 8) = v342;
                            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v392 + 56))(v340, 1, 1, v334);
                            *(_QWORD *)(v339 + v341) = 0;
                            swift_storeEnumTagMultiPayload();
                            v343 = v350;
                            sub_23AA8EFC8(v339, v350, qword_2542DDA70);
                            v344 = *(_QWORD *)(v337 + 8);
                            v345 = swift_isUniquelyReferenced_nonNull_native();
                            *(_QWORD *)(v337 + 8) = v344;
                            if ((v345 & 1) == 0)
                            {
                              v344 = sub_23AF9A4D8(0, *(_QWORD *)(v344 + 16) + 1, 1, v344);
                              *(_QWORD *)(v337 + 8) = v344;
                            }
                            v347 = *(_QWORD *)(v344 + 16);
                            v346 = *(_QWORD *)(v344 + 24);
                            if (v347 >= v346 >> 1)
                            {
                              v344 = sub_23AF9A4D8(v346 > 1, v347 + 1, 1, v344);
                              *(_QWORD *)(v337 + 8) = v344;
                            }
                            *(_QWORD *)(v344 + 16) = v347 + 1;
                            sub_23AA724E8(v343, v344+ ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80))+ *(_QWORD *)(v377 + 72) * v347, qword_2542DDA70);
                            sub_23AA8A05C(v339, qword_2542DDA70);
                            ((void (*)(uint64_t *, _QWORD))v117)(v405, 0);
                            swift_release();
                            v348 = v351;
                            goto LABEL_190;
                          }
LABEL_189:
                          ((void (*)(uint64_t *, _QWORD))v117)(v405, 0);
                          swift_release();
                          v348 = v123;
LABEL_190:
                          sub_23AA937BC(v348, type metadata accessor for VFSItem);
                          sub_23AA937BC(v375, type metadata accessor for VFSItem);
                          v239 = v390;
                          goto LABEL_177;
                        }
                      }
                      sub_23AA937BC(v375, type metadata accessor for VFSItem);
                    }
                    swift_release();
LABEL_168:
                    sub_23B1C6BD8();
                    v332 = v389;
                    sub_23B1C5DA4();
                    sub_23AA937BC(v332, type metadata accessor for Signpost);
                    sub_23AA937BC(v124, type metadata accessor for VFSItem);
                    return (*(uint64_t (**)(uint64_t, uint64_t))(v394 + 8))(v239, v126);
                  }
                  v252 = v402[35];
                  v253 = swift_getObjectType();
                  v243 = v235;
                  v254 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v252 + 8))(v396, v253, v252);
                  if (!v235)
                  {
                    v256 = v254;
                    v257 = v255;
                    v235 = 0;
                    swift_unknownObjectRelease();
                    v239 = v390;
                    v124 = (uint64_t)v397;
                    if (v257 - 1 >= 2 && (v257 || (_DWORD)v256 == (_DWORD)v251))
                      goto LABEL_159;
                    v259 = sub_23B152E74();
                    if (!*(_QWORD *)(v258 + 8))
                      goto LABEL_157;
                    v260 = v258;
                    v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
                    v262 = (uint64_t)v354;
                    v263 = (char *)v354 + *(int *)(v261 + 48);
                    v264 = *(int *)(v261 + 64);
                    *v354 = v256;
                    *(_BYTE *)(v262 + 8) = v257;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v392 + 56))(v263, 1, 1, v400);
                    *(_QWORD *)(v262 + v264) = 0;
                    swift_storeEnumTagMultiPayload();
                    v265 = v352;
                    sub_23AA8EFC8(v262, v352, qword_2542DDA70);
                    v266 = *(_QWORD *)(v260 + 8);
                    v267 = swift_isUniquelyReferenced_nonNull_native();
                    *(_QWORD *)(v260 + 8) = v266;
                    if ((v267 & 1) == 0)
                    {
                      v266 = sub_23AF9A4D8(0, *(_QWORD *)(v266 + 16) + 1, 1, v266);
                      *(_QWORD *)(v260 + 8) = v266;
                    }
                    v269 = *(_QWORD *)(v266 + 16);
                    v268 = *(_QWORD *)(v266 + 24);
                    if (v269 >= v268 >> 1)
                    {
                      v266 = sub_23AF9A4D8(v268 > 1, v269 + 1, 1, v266);
                      *(_QWORD *)(v260 + 8) = v266;
                    }
                    *(_QWORD *)(v266 + 16) = v269 + 1;
                    sub_23AA724E8(v265, v266+ ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80))+ *(_QWORD *)(v377 + 72) * v269, qword_2542DDA70);
                    v270 = (uint64_t)v354;
                    goto LABEL_156;
                  }
LABEL_109:

                  swift_unknownObjectRelease();
                  v235 = 0;
                  v239 = v390;
                  v124 = (uint64_t)v397;
LABEL_159:
                  LOWORD(v127) = v388;
                  goto LABEL_160;
                }
                v226 = v127;
                v227 = *(_DWORD *)v225;
                v228 = v124 + *(int *)(v188 + 36);
                v229 = *(_QWORD *)v228;
                v230 = *(_DWORD *)(v228 + 8);
                v231 = (void *)swift_retain();
                if (!objc_sync_enter(v231))
                {
                  v232 = v402;
                  v233 = v402[20];
                  swift_retain();
                  if (objc_sync_exit(v232))
                    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v402);
                  swift_release();
                  v234 = *(unsigned int *)(v233 + 16);
                  swift_release();
                  LOWORD(v404) = 256;
                  v405[0] = v229;
                  v405[1] = 0;
                  v406 = v227;
                  v407 = v230;
                  v408 = 0;
                  v409 = 0;
                  sub_23B0E40BC((uint64_t)v405, v234, 0x100000, 0, (uint64_t)&v404, (uint64_t)sub_23B149774, 0);
                  if (v129)
                  {

                    v129 = 0;
                    v124 = (uint64_t)v397;
                    v189 = (uint64_t)v383;
LABEL_91:
                    LODWORD(v127) = v226;
                    goto LABEL_92;
                  }
                  v124 = (uint64_t)v397;
                  v189 = (uint64_t)v383;
                  if ((v404 & 0x100) == 0)
                    goto LABEL_91;
                  __break(1u);
                }
                sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v402);
              }
LABEL_188:
              __break(1u);
              goto LABEL_189;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_188;
        }
        if (v214)
        {
          if (v218 == 2 && v217 == 1)
            goto LABEL_134;
        }
        else if (v218 == 2 && !v217)
        {
          goto LABEL_134;
        }
      }
      else if (!*((_BYTE *)v397 + 8) && (_DWORD)v214 == (_DWORD)v217)
      {
        goto LABEL_134;
      }
LABEL_127:
      v271 = sub_23B152E74();
      if (*(_QWORD *)(v272 + 8))
      {
        v273 = v272;
        v387 = (char *)v271;
        v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
        v117 = v359;
        v275 = (char *)v359 + *(int *)(v274 + 48);
        v276 = *(int *)(v274 + 64);
        *v359 = v214;
        LOBYTE(v117[1].isa) = v216;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v392 + 56))(v275, 1, 1, v400);
        *(Class *)((char *)&v117->isa + v276) = 0;
        swift_storeEnumTagMultiPayload();
        sub_23AA8EFC8((uint64_t)v117, v360, qword_2542DDA70);
        v277 = *(_QWORD *)(v273 + 8);
        v278 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v273 + 8) = v277;
        if ((v278 & 1) == 0)
        {
          v277 = sub_23AF9A4D8(0, *(_QWORD *)(v277 + 16) + 1, 1, v277);
          *(_QWORD *)(v273 + 8) = v277;
        }
        v280 = *(_QWORD *)(v277 + 16);
        v279 = *(_QWORD *)(v277 + 24);
        if (v280 >= v279 >> 1)
        {
          v277 = sub_23AF9A4D8(v279 > 1, v280 + 1, 1, v277);
          *(_QWORD *)(v273 + 8) = v277;
        }
        *(_QWORD *)(v277 + 16) = v280 + 1;
        sub_23AA724E8(v360, v277+ ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80))+ *(_QWORD *)(v377 + 72) * v280, qword_2542DDA70);
        sub_23AA8A05C((uint64_t)v359, qword_2542DDA70);
        ((void (*)(uint64_t *, _QWORD))v387)(v405, 0);
      }
      else
      {
        ((void (*)(uint64_t *, _QWORD))v271)(v405, 0);
      }
      goto LABEL_134;
    }
    v124 = (uint64_t)v397;
    goto LABEL_134;
  }
  sub_23B1C590C();
  v96 = (uint64_t)v90;
  v91 = (uint64_t)v397;
  v97 = v391;
  if (v391)
  {
    v99 = sub_23B152E74();
    if (*(_QWORD *)(v98 + 8))
    {
      v100 = v98;
      *(_QWORD *)v82 = v97;
      v82[8] = 0;
      v101 = type metadata accessor for SyncState();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v82, 0, 1, v101);
      sub_23AD03F98((uint64_t)v82, 3);
      *(_QWORD *)(v100 + 48) = v97;
      *(_BYTE *)(v100 + 56) = 0;
    }
    ((void (*)(uint64_t *, _QWORD))v99)(v405, 0);
  }
  sub_23AA8EFC8(v390, (uint64_t)v63, &qword_2542E72C0);
  v102 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v392 + 48);
  v82 = (char *)v400;
  if (v102((uint64_t)v63, 1, v400) != 1)
  {
    v385 = v102;
    v390 = v96;
    sub_23AA94050((uint64_t)v63, v91, type metadata accessor for VFSItem);
    if (qword_2542E6818 == -1)
      goto LABEL_11;
    goto LABEL_185;
  }
  sub_23AA8A05C((uint64_t)v63, &qword_2542E72C0);
  v103 = v396;
  if (v396)
  {
    v104 = v97;
    v105 = (uint64_t)v402;
    v106 = MEMORY[0x23B8615C4](v402 + 34);
    v107 = v393;
    v108 = v394;
    if (v106)
    {
      v109 = *(_QWORD *)(v105 + 280);
      v110 = swift_getObjectType();
      v168 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 8))(v103, v110, v109);
      v170 = v169;
      v106 = swift_unknownObjectRelease();
      if (v170 != -1)
        goto LABEL_39;
    }
    MEMORY[0x24BDAC7A8](v106);
    *(&v349 - 4) = (_QWORD *)v105;
    *(&v349 - 3) = sub_23B1A0FB8;
    *(&v349 - 2) = (_QWORD *)v105;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E8F20);
    sub_23B1C59B4();
    if ((v405[1] & 0x100) != 0 || (v405[1] & 1) != 0)
    {
      sub_23B17E93C((int)v401, v398, v399, v396);
    }
    else
    {
      v184 = v405[0];
      if (MEMORY[0x23B8615C4](v105 + 272))
      {
        v185 = *(_QWORD *)(v105 + 280);
        v186 = swift_getObjectType();
        v168 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v185 + 8))(v184, v186, v185);
        v170 = v187;
        swift_unknownObjectRelease();
        if (v170 != -1)
        {
LABEL_39:
          v171 = v96;
          v173 = sub_23B152E74();
          v174 = (uint64_t)v366;
          if (*(_QWORD *)(v172 + 8))
          {
            v175 = v172;
            v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1E10);
            v177 = v174 + *(int *)(v176 + 48);
            v178 = *(int *)(v176 + 64);
            *(_QWORD *)v174 = v168;
            *(_BYTE *)(v174 + 8) = v170;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v392 + 56))(v177, 1, 1, v400);
            *(_QWORD *)(v174 + v178) = 0;
            swift_storeEnumTagMultiPayload();
            v179 = v362;
            sub_23AA8EFC8(v174, v362, qword_2542DDA70);
            v180 = *(_QWORD *)(v175 + 8);
            v181 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v175 + 8) = v180;
            if ((v181 & 1) == 0)
            {
              v180 = sub_23AF9A4D8(0, *(_QWORD *)(v180 + 16) + 1, 1, v180);
              *(_QWORD *)(v175 + 8) = v180;
            }
            v183 = *(_QWORD *)(v180 + 16);
            v182 = *(_QWORD *)(v180 + 24);
            if (v183 >= v182 >> 1)
            {
              v180 = sub_23AF9A4D8(v182 > 1, v183 + 1, 1, v180);
              *(_QWORD *)(v175 + 8) = v180;
            }
            *(_QWORD *)(v180 + 16) = v183 + 1;
            sub_23AA724E8(v179, v180+ ((*(unsigned __int8 *)(v377 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v377 + 80))+ *(_QWORD *)(v377 + 72) * v183, qword_2542DDA70);
            sub_23AA8A05C(v174, qword_2542DDA70);
          }
          ((void (*)(uint64_t *, _QWORD))v173)(v405, 0);
          sub_23B17E93C((int)v401, v398, v399, v396);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8))(v171, v107);
        }
      }
    }
    v219 = v96;
    v220 = (id)fpfs_current_or_default_log();
    v221 = v363;
    sub_23B1C5E58();
    v222 = sub_23B1C5E40();
    v223 = sub_23B1C6A94();
    if (os_log_type_enabled(v222, v223))
    {
      v224 = swift_slowAlloc();
      *(_DWORD *)v224 = 134349568;
      v405[0] = v396;
      sub_23B1C6CBC();
      *(_WORD *)(v224 + 12) = 2048;
      v405[0] = v104;
      sub_23B1C6CBC();
      *(_WORD *)(v224 + 22) = 1024;
      LODWORD(v405[0]) = (_DWORD)v401;
      sub_23B1C6CBC();
      _os_log_impl(&dword_23AA66000, v222, v223, "Dropping fsevent for %{public}llu (event#%llu, flags:%x)", (uint8_t *)v224, 0x1Cu);
      MEMORY[0x23B8614BC](v224, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v388 + 8))(v221, v395);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8))(v219, v107);
  }
  else
  {
    v148 = v97;
    v149 = v96;
    v150 = (id)fpfs_current_or_default_log();
    v151 = v380;
    sub_23B1C5E58();
    v152 = sub_23B1C5E40();
    v153 = sub_23B1C6A94();
    v154 = os_log_type_enabled(v152, v153);
    v155 = v393;
    v156 = v394;
    if (v154)
    {
      v157 = swift_slowAlloc();
      *(_DWORD *)v157 = 134218240;
      v405[0] = v148;
      sub_23B1C6CBC();
      *(_WORD *)(v157 + 12) = 1024;
      LODWORD(v405[0]) = (_DWORD)v401;
      sub_23B1C6CBC();
      _os_log_impl(&dword_23AA66000, v152, v153, "dropping fsevent without file ID (event#%llu, flags:%x)", (uint8_t *)v157, 0x12u);
      MEMORY[0x23B8614BC](v157, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v388 + 8))(v151, v395);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v156 + 8))(v149, v155);
  }
}

uint64_t sub_23B19A658(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void *v61;
  uint64_t v62;
  uint64_t (*v63)();
  uint64_t v64;
  uint64_t v65;
  char v66;
  id v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  id v81;
  char *v82;
  void (*v83)(uint64_t, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  id v87;
  uint64_t v88;
  _QWORD *v89;
  void *v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)();
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v116;
  uint64_t (*v117)();
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t (*v122)();
  uint64_t v123;
  uint64_t v124;
  id v125;
  char *v126;
  uint64_t v127;
  NSObject *v128;
  os_log_type_t v129;
  uint8_t *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  uint64_t (*v138)();
  uint64_t v139;
  char *v140;
  id v141;
  NSObject *v142;
  os_log_type_t v143;
  uint8_t *v144;
  uint64_t v145;
  char *v146;
  id v147;
  NSObject *v148;
  os_log_type_t v149;
  uint8_t *v150;
  uint64_t v151;
  char *v152;
  id v153;
  NSObject *v154;
  os_log_type_t v155;
  uint8_t *v156;
  uint8_t *v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  _QWORD v162[4];
  char *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t *v168;
  char *v169;
  char *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  void (*v177)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v178;
  int v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  uint64_t v204[16];
  uint64_t v205[3];
  __int128 v206;
  uint64_t v207;

  v6 = v5;
  v194 = a5;
  v192 = a4;
  v202 = a2;
  v203 = a3;
  v201 = a1;
  v207 = *MEMORY[0x24BDAC8D0];
  v166 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70);
  v162[3] = *(_QWORD *)(v166 - 8);
  v7 = MEMORY[0x24BDAC7A8](v166);
  v162[2] = (char *)v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v162[1] = (char *)v162 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v165 = (char *)v162 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v164 = (char *)v162 - v13;
  v14 = type metadata accessor for VFSItem(0);
  v198 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v183 = (char *)v162 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v191 = (char *)v162 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v171 = (uint64_t)v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v190 = (char *)v162 - v24;
  v25 = sub_23B1C5DC8();
  v185 = *(_QWORD *)(v25 - 8);
  v186 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v184 = (char *)v162 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)v162 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v199 = (uint64_t)v162 - v31;
  v32 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v32);
  v200 = (uint64_t)v162 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v187 = *(_QWORD *)(v34 - 8);
  v188 = v34;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)v162 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v35);
  v182 = (char *)v162 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v189 = (uint64_t)v162 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)v162 - v42;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE6D0);
  MEMORY[0x24BDAC7A8](v44);
  v168 = (_QWORD *)((char *)v162 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  v46 = sub_23B1C5E4C();
  v195 = *(_QWORD *)(v46 - 8);
  v196 = v46;
  v47 = MEMORY[0x24BDAC7A8](v46);
  v173 = (char *)v162 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x24BDAC7A8](v47);
  v167 = (char *)v162 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v170 = (char *)v162 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v169 = (char *)v162 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v163 = (char *)v162 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v176 = (char *)v162 - v58;
  MEMORY[0x24BDAC7A8](v57);
  v60 = (char *)v162 - v59;
  v61 = (void *)swift_retain();
  if (objc_sync_enter(v61))
LABEL_56:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v6);
  v62 = *(_QWORD *)(v5 + 160);
  swift_retain();
  if (objc_sync_exit((id)v6))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, v6);
  v172 = v17;
  v180 = v37;
  swift_release();
  v178 = *(_QWORD *)(v62 + 40);
  v179 = *(unsigned __int8 *)(v62 + 48);
  swift_release();
  v63 = sub_23B152E74();
  if (*(_QWORD *)(v64 + 8))
  {
    v65 = v202;
    swift_bridgeObjectRetain();
    v66 = sub_23ADE249C((uint64_t)v204, v203, v201, v65);
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t *, _QWORD))v63)(v205, 0);
    if ((v66 & 1) == 0)
    {
      v67 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v68 = v202;
      swift_bridgeObjectRetain_n();
      v69 = sub_23B1C5E40();
      v70 = sub_23B1C6A94();
      if (os_log_type_enabled(v69, v70))
      {
        v71 = swift_slowAlloc();
        v72 = swift_slowAlloc();
        v205[0] = v72;
        *(_DWORD *)v71 = 134218242;
        v204[0] = v203;
        sub_23B1C6CBC();
        *(_WORD *)(v71 + 12) = 2080;
        swift_bridgeObjectRetain();
        v204[0] = sub_23AABEC68(v201, v202, v205);
        v73 = v192;
        v68 = v202;
        sub_23B1C6CBC();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23AA66000, v69, v70, "deduplicating FSEvent lookup for %llu at %s", (uint8_t *)v71, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v72, -1, -1);
        MEMORY[0x23B8614BC](v71, -1, -1);

        (*(void (**)(char *, uint64_t))(v195 + 8))(v60, v196);
        if (!v73)
          return sub_23B17E93C(v194, v201, v68, v203);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v195 + 8))(v60, v196);
        v73 = v192;
        if (!v192)
          return sub_23B17E93C(v194, v201, v68, v203);
      }
      v111 = sub_23B152E74();
      if (*(_QWORD *)(v110 + 8))
      {
        v112 = v110;
        v113 = (uint64_t)v168;
        *v168 = v73;
        *(_BYTE *)(v113 + 8) = 0;
        v114 = type metadata accessor for SyncState();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v113, 0, 1, v114);
        sub_23AD03F98(v113, 3);
        *(_QWORD *)(v112 + 48) = v73;
        *(_BYTE *)(v112 + 56) = 0;
      }
      ((void (*)(uint64_t *, _QWORD))v111)(v205, 0);
      return sub_23B17E93C(v194, v201, v68, v203);
    }
  }
  else
  {
    ((void (*)(uint64_t *, _QWORD))v63)(v205, 0);
  }
  v197 = (_QWORD *)v6;
  v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v198 + 56);
  v181 = v43;
  v177 = v74;
  v74(v43, 1, 1, v14);
  if (qword_2542E6818 != -1)
    swift_once();
  v75 = (void *)qword_2542EDD28;
  v76 = v185;
  v77 = v186;
  v78 = v199;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v185 + 56))(v199, 1, 1, v186);
  v205[0] = 0;
  v205[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  strcpy((char *)v205, "lookup path ");
  BYTE5(v205[1]) = 0;
  HIWORD(v205[1]) = -5120;
  sub_23B1C64F4();
  sub_23B1C64F4();
  v204[0] = v203;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v79 = v205[1];
  v175 = v205[0];
  sub_23AA8EFC8(v78, (uint64_t)v30, (uint64_t *)&unk_2542E67B8);
  v80 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v76 + 48))(v30, 1, v77);
  v193 = v14;
  if (v80 == 1)
  {
    v81 = v75;
    v82 = v184;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v30, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v82 = v184;
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v184, v30, v77);
  }
  v83 = *(void (**)(uint64_t, char *, uint64_t))(v76 + 16);
  v84 = v76;
  v85 = v200;
  v83(v200, v82, v77);
  v174 = *(int *)(v32 + 20);
  *(_QWORD *)(v85 + v174) = v75;
  v86 = (char *)(v85 + *(int *)(v32 + 24));
  *(_QWORD *)v86 = "FS: handle event";
  *((_QWORD *)v86 + 1) = 16;
  v184 = v86;
  v86[16] = 2;
  v87 = v75;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v88 = swift_allocObject();
  *(_OWORD *)(v88 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v88 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v88 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v88 + 32) = v175;
  *(_QWORD *)(v88 + 40) = v79;
  v161 = v88;
  v160 = 2;
  v159 = 2;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v82, v77);
  swift_bridgeObjectRelease();
  sub_23AA8A05C(v199, (uint64_t *)&unk_2542E67B8);
  v89 = v197;
  v90 = (void *)swift_retain();
  if (objc_sync_enter(v90))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v89);
  v91 = v89[20];
  swift_retain();
  v92 = objc_sync_exit(v89);
  v6 = v187;
  if (v92)
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v89);
  swift_release();
  v93 = type metadata accessor for VFSFileTree(0);
  v94 = MEMORY[0x23B8615C4](v89 + 34);
  v95 = *(unsigned int *)(v91 + 16);
  v96 = MEMORY[0x24BDAC7A8](v94);
  v162[-10] = v93;
  v162[-9] = v91;
  v162[-8] = v96;
  v162[-7] = v97;
  LOBYTE(v162[-6]) = 0;
  *(_OWORD *)&v162[-5] = xmmword_23B1DAA80;
  v160 = -1;
  v161 = 0;
  v98 = (uint64_t)v190;
  v99 = v188;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v190, 1, 1, v188);
  v205[0] = v203;
  *(_OWORD *)&v205[1] = 0u;
  v206 = 0u;
  sub_23B0E1EBC((uint64_t)v205, v95, 2129920, 0, v98, (uint64_t)sub_23ADA9338, (uint64_t)&v162[-12]);
  v100 = v171;
  sub_23AA8EFC8(v98, v171, qword_2542E5250);
  v101 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v100, 1, v99);
  v102 = v189;
  if (v101 == 1)
  {
    __break(1u);
    __break(1u);
    __break(1u);
    goto LABEL_56;
  }
  sub_23AA724E8(v100, v189, &qword_2542E72C0);
  sub_23AA8A05C(v98, qword_2542E5250);
  v103 = v193;
  v104 = (uint64_t)v191;
  v105 = v202;
  v106 = (uint64_t)v181;
  sub_23AA8A05C((uint64_t)v181, &qword_2542E72C0);
  swift_release();
  v107 = v106;
  swift_unknownObjectRelease();
  sub_23AA724E8(v102, v106, &qword_2542E72C0);
  v108 = (uint64_t)v183;
  v109 = (uint64_t)v182;
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  sub_23AA8EFC8(v107, v109, &qword_2542E72C0);
  v116 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v109, 1, v103);
  if (v116 != 1)
  {
    sub_23AA94050(v109, v104, type metadata accessor for VFSItem);
    v119 = v104 + *(int *)(v103 + 28);
    v120 = type metadata accessor for ItemMetadata();
    v121 = *(unsigned __int8 *)(v119 + *(int *)(v120 + 68));
    if (v121 == 2)
    {
      sub_23AA907B0(v104, v108, type metadata accessor for VFSItem);
    }
    else
    {
      v124 = v120;
      sub_23AA907B0(v104, v108, type metadata accessor for VFSItem);
      if ((v121 & 1) != 0)
      {
        v137 = *(unsigned __int8 *)(v108 + *(int *)(v103 + 28) + *(int *)(v124 + 80));
        sub_23AA937BC(v108, type metadata accessor for VFSItem);
        if (v137 != 1)
        {
          v138 = sub_23B152E74();
          if (*(_QWORD *)(v139 + 8))
          {
            swift_bridgeObjectRetain();
            sub_23ADE0B10(v204, v201, v105);
            ((void (*)(uint64_t *, _QWORD))v138)(v205, 0);
            swift_bridgeObjectRelease();
          }
          else
          {
            ((void (*)(uint64_t *, _QWORD))v138)(v205, 0);
          }
          v152 = v163;
          v153 = (id)fpfs_current_or_default_log();
          sub_23B1C5E58();
          v154 = sub_23B1C5E40();
          v155 = sub_23B1C6A94();
          if (os_log_type_enabled(v154, v155))
          {
            v156 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v156 = 134349056;
            v205[0] = v203;
            sub_23B1C6CBC();
            _os_log_impl(&dword_23AA66000, v154, v155, "Ignoring event for item in an ignored folder fileID(%{public}llu)", v156, 0xCu);
            v157 = v156;
            v152 = v163;
            MEMORY[0x23B8614BC](v157, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v195 + 8))(v152, v196);
          v158 = (uint64_t)v180;
          v177(v180, 1, 1, v103);
          sub_23B197388(v201, v105, v203, v178, v179, v192, v194, v158);
          sub_23AA8A05C(v158, &qword_2542E72C0);
          v136 = v104;
          goto LABEL_37;
        }
LABEL_33:
        v125 = (id)fpfs_current_or_default_log();
        v126 = v176;
        sub_23B1C5E58();
        v127 = (uint64_t)v172;
        sub_23AA907B0(v104, (uint64_t)v172, type metadata accessor for VFSItem);
        v128 = sub_23B1C5E40();
        v129 = sub_23B1C6A94();
        if (os_log_type_enabled(v128, v129))
        {
          v130 = (uint8_t *)swift_slowAlloc();
          v131 = swift_slowAlloc();
          v205[0] = v131;
          *(_DWORD *)v130 = 136315138;
          v132 = sub_23AC3E1F8();
          v204[0] = sub_23AABEC68(v132, v133, v205);
          v107 = (uint64_t)v181;
          sub_23B1C6CBC();
          swift_bridgeObjectRelease();
          sub_23AA937BC(v127, type metadata accessor for VFSItem);
          _os_log_impl(&dword_23AA66000, v128, v129, "Delivering FSEvent notification for change on %s", v130, 0xCu);
          swift_arrayDestroy();
          v134 = v131;
          v104 = (uint64_t)v191;
          MEMORY[0x23B8614BC](v134, -1, -1);
          MEMORY[0x23B8614BC](v130, -1, -1);

          (*(void (**)(char *, uint64_t))(v195 + 8))(v176, v196);
        }
        else
        {
          sub_23AA937BC(v127, type metadata accessor for VFSItem);

          (*(void (**)(char *, uint64_t))(v195 + 8))(v126, v196);
        }
        v135 = (uint64_t)v180;
        sub_23AA907B0(v104, (uint64_t)v180, type metadata accessor for VFSItem);
        v177((char *)v135, 0, 1, v193);
        sub_23B197388(v201, v202, v203, v178, v179, v192, v194, v135);
        sub_23AA8A05C(v135, &qword_2542E72C0);
        v136 = v104;
LABEL_37:
        sub_23AA937BC(v136, type metadata accessor for VFSItem);
        goto LABEL_49;
      }
    }
    sub_23AA937BC(v108, type metadata accessor for VFSItem);
    goto LABEL_33;
  }
  sub_23AA8A05C(v109, &qword_2542E72C0);
  if ((v194 & 0x80A00) == 0x80000)
  {
    v117 = sub_23B152E74();
    if (*(_QWORD *)(v118 + 8))
    {
      swift_bridgeObjectRetain();
      sub_23B18DEC4(v203, v201, v105);
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t *, _QWORD))v117)(v205, 0);
      swift_bridgeObjectRelease();
    }
    else
    {
      ((void (*)(uint64_t *, _QWORD))v117)(v205, 0);
    }
    v140 = v169;
    v141 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v142 = sub_23B1C5E40();
    v143 = sub_23B1C6A94();
    if (os_log_type_enabled(v142, v143))
    {
      v144 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v144 = 134349056;
      v205[0] = v203;
      sub_23B1C6CBC();
      _os_log_impl(&dword_23AA66000, v142, v143, "Ignoring unresolved own-event on fileID(%{public}llu)", v144, 0xCu);
      MEMORY[0x23B8614BC](v144, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v195 + 8))(v140, v196);
    sub_23AA937BC(v200, type metadata accessor for Signpost);
    v145 = v107;
    return sub_23AA8A05C(v145, &qword_2542E72C0);
  }
  v122 = sub_23B152E74();
  if (*(_QWORD *)(v123 + 8))
  {
    swift_bridgeObjectRetain();
    sub_23ADE0B10(v204, v201, v105);
    ((void (*)(uint64_t *, _QWORD))v122)(v205, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    ((void (*)(uint64_t *, _QWORD))v122)(v205, 0);
  }
  v146 = v170;
  v147 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v148 = sub_23B1C5E40();
  v149 = sub_23B1C6A94();
  if (os_log_type_enabled(v148, v149))
  {
    v150 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v150 = 134349056;
    v205[0] = v203;
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v148, v149, "Unable to resolve FSEvent item attributes for event on fileID(%{public}llu)", v150, 0xCu);
    MEMORY[0x23B8614BC](v150, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v195 + 8))(v146, v196);
  v151 = (uint64_t)v180;
  v177(v180, 1, 1, v103);
  sub_23B197388(v201, v105, v203, v178, v179, v192, v194, v151);
  sub_23AA8A05C(v151, &qword_2542E72C0);
LABEL_49:
  sub_23AA937BC(v200, type metadata accessor for Signpost);
  v145 = v107;
  return sub_23AA8A05C(v145, &qword_2542E72C0);
}

uint64_t sub_23B19C20C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  void (*v19)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  v1 = sub_23B1C5DC8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  if (qword_2569E1310 != -1)
    swift_once();
  v11 = (void *)qword_256A07A18;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, v1);
  sub_23AA8EFC8((uint64_t)v10, (uint64_t)v8, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
  {
    v12 = v11;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v8, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
  }
  sub_23B1C6BF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v13 = swift_allocObject();
  v24 = xmmword_23B1CA760;
  *(_OWORD *)(v13 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v13 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v13 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v13 + 32) = 0x20646570706F7244;
  *(_QWORD *)(v13 + 40) = 0xEF746E6576455346;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E67B8);
  v14 = v0 + qword_2542EDF28;
  result = swift_beginAccess();
  v16 = *(_QWORD *)(v14 + 16);
  v17 = __CFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v14 + 16) = v18;
    v19 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v0 + 16);
    if (v19)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE800);
      v20 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70) - 8) + 80);
      v21 = (v20 + 32) & ~v20;
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v24;
      v23 = v22 + v21;
      *(_BYTE *)v23 = 1;
      *(_QWORD *)(v23 + 8) = 3;
      *(_BYTE *)(v23 + 16) = 1;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v19(v22, MEMORY[0x24BEE4AF8], 0, 0);
      sub_23AAB7948((uint64_t)v19);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_23B19C540(unint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  __CFString *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t result;
  void (*v21)(uint64_t, uint64_t, _QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  unint64_t v42;
  uint64_t v43;

  v3 = sub_23B1C5DC8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v41 - v11;
  if (qword_2569E1310 != -1)
    swift_once();
  v13 = (void *)qword_256A07A18;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  v42 = a1;
  v14 = resetReason2str_0(a1);
  v15 = sub_23B1C63E0();
  v17 = v16;

  sub_23AA8EFC8((uint64_t)v12, (uint64_t)v10, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v18 = v13;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
  }
  swift_bridgeObjectRetain();
  sub_23B1C6BF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v19 = swift_allocObject();
  v41 = xmmword_23B1CA760;
  *(_OWORD *)(v19 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v19 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v19 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v19 + 32) = v15;
  *(_QWORD *)(v19 + 40) = v17;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v12, (uint64_t *)&unk_2542E67B8);
  swift_getKeyPath();
  swift_getKeyPath();
  v43 = 0;
  swift_retain();
  result = sub_23B1C5F60();
  v21 = (void (*)(uint64_t, uint64_t, _QWORD, _QWORD))v1[2];
  if (v21)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE800);
    v22 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2542DDA70) - 8) + 80);
    v23 = (v22 + 32) & ~v22;
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v41;
    v25 = v24 + v23;
    v26 = v42;
    *(_BYTE *)v25 = (v42 & 0xFFFFFFFFFFFFFFFELL) == 8;
    *(_QWORD *)(v25 + 8) = v26;
    *(_BYTE *)(v25 + 16) = 0;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE848);
    v27 = *(_QWORD *)(type metadata accessor for SyncState() - 8);
    v28 = *(_QWORD *)(v27 + 72);
    v29 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_23B1D2330;
    v31 = v30 + v29;
    swift_retain();
    *(_QWORD *)v31 = FSEventsGetCurrentEventId();
    *(_BYTE *)(v31 + 8) = 0;
    swift_storeEnumTagMultiPayload();
    v32 = (void *)swift_retain();
    if (objc_sync_enter(v32))
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v1);
    v33 = v1[20];
    swift_retain();
    if (objc_sync_exit(v1))
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v1);
    swift_release();
    v34 = v31 + v28;
    v35 = (void *)objc_opt_self();
    v36 = *(unsigned int *)(v33 + 16);
    swift_release();
    v37 = objc_msgSend(v35, sel_eventStreamUUIDForDevice_, v36);
    if (v37)
    {
      v38 = v37;
      sub_23B1C5C24();

      v39 = sub_23B1C5C54();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v34, 0, 1, v39);
    }
    else
    {
      v40 = sub_23B1C5C54();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v34, 1, 1, v40);
    }
    swift_storeEnumTagMultiPayload();
    v21(v24, v30, 0, 0);
    sub_23AAB7948((uint64_t)v21);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B19CA34()
{
  return sub_23AA7E38C(&qword_2542DE270, type metadata accessor for VFSItem, (uint64_t)&unk_23B1D2C0C);
}

void sub_23B19CA60()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23B19CBC0(319, (unint64_t *)&qword_2542E43A8);
  if (v0 <= 0x3F)
  {
    sub_23B19CBC0(319, (unint64_t *)&qword_2542E4388);
    if (v1 <= 0x3F)
    {
      type metadata accessor for VFSCounters(319);
      if (v2 <= 0x3F)
        swift_initClassMetadata2();
    }
  }
}

void sub_23B19CBC0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_23B1C5F6C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t destroy for VFSEventAggregator()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VFSEventAggregator(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VFSEventAggregator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for VFSEventAggregator(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for VFSEventAggregator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VFSEventAggregator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSEventAggregator()
{
  return &type metadata for VFSEventAggregator;
}

uint64_t sub_23B19CEDC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B19CEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 28);
  v5 = sub_23B1C5BDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_23B19CF28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B19CF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 28);
  v6 = sub_23B1C5BDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

unint64_t sub_23B19CF78()
{
  unint64_t result;

  result = qword_2569E8EE0;
  if (!qword_2569E8EE0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E7CC4, &type metadata for VFSCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E8EE0);
  }
  return result;
}

uint64_t sub_23B19CFBC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16) | (*(unsigned __int8 *)(a1 + 17) << 8));
}

uint64_t sub_23B19CFF8()
{
  return objectdestroy_8Tm_1();
}

uint64_t sub_23B19D000()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 32);
  v2 = sub_23B1AD4CC(*(_QWORD *)(v0 + 24));
  if ((v4 & 1) != 0)
  {
    v2 = 0;
    v3 = 0;
  }
  return v1(v2, v3);
}

void sub_23B19D050()
{
  uint64_t v0;

  sub_23B149B0C(*(void (**)(id *))(v0 + 16));
}

uint64_t sub_23B19D05C()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 40);
  if (v1 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v0 + 32), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B19D0A0()
{
  uint64_t v0;

  return sub_23B17E63C(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), *(uint64_t (**)(_QWORD))(v0 + 80));
}

uint64_t sub_23B19D0B8()
{
  uint64_t v0;

  return sub_23B17E38C(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_23B19D0CC()
{
  uint64_t v0;

  return sub_23B17D3F0(*(_QWORD *)(v0 + 16), *(void (**)(BOOL))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23B19D0D8()
{
  return objectdestroy_35Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23B19D0E4()
{
  uint64_t v0;

  return sub_23B17D1B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23B19D0F4()
{
  return sub_23B19D278((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B17C6AC);
}

void sub_23B19D100(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_23B17CBF8(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

uint64_t sub_23B19D11C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_clear_acl();
  *a1 = result;
  return result;
}

uint64_t sub_23B19D14C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = fremovexattr(*(_DWORD *)(v1 + 16), "com.apple.fileprovider.detached#B", 0);
  *a1 = result;
  return result;
}

uint64_t sub_23B19D188@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = fremovexattr(*(_DWORD *)(v1 + 16), "com.apple.fileprovider.detached", 0);
  *a1 = result;
  return result;
}

uint64_t sub_23B19D1C4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = fremovexattr(*(_DWORD *)(v1 + 16), "com.apple.fileprovider.detached#PN", 0);
  *a1 = result;
  return result;
}

uint64_t sub_23B19D200@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = fremovexattr(*(_DWORD *)(v1 + 16), "com.apple.file-provider-domain-id", 0);
  *a1 = result;
  return result;
}

uint64_t objectdestroy_38Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B19D26C()
{
  return sub_23B19D278((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B17B88C);
}

uint64_t sub_23B19D278(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_23B19D290@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23B17BDDC(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

uint64_t sub_23B19D2AC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B19D2D8(uint64_t a1)
{
  uint64_t v1;

  sub_23B17B104(a1, *(void (**)(id))(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD **)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56));
}

uint64_t sub_23B19D2EC(int a1)
{
  uint64_t v1;

  return sub_23B17B598(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_23B19D30C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_unset_evictable();
  *a1 = result;
  return result;
}

uint64_t sub_23B19D340()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = v3 + v1[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_23B1C5A08();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B19D5AC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_23B17A4B0(*(_QWORD *)(v0 + 16), v0 + v2, *(unsigned __int8 *)(v0 + v2 + *(_QWORD *)(v1 + 64)), *(_QWORD *)(((v2 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 8), *(_QWORD *)(((v2 + *(_QWORD *)(v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0 + 16));
}

uint64_t sub_23B19D5F8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + v1[7];
  v4 = (int *)type metadata accessor for ItemMetadata();
  v5 = v3 + v4[7];
  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v3 + v4[33]);
  v11 = v10[1];
  if (v11 >> 60 != 15)
    sub_23AAAE53C(*v10, v11);
  swift_bridgeObjectRelease();
  v12 = v2 + v1[8];
  v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v14 = v2 + v1[12];
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = sub_23B1C5A08();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B19D85C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_23B17A5BC(a1, v1 + v4, *(uint64_t (**)(void *))v5, *(_QWORD *)(v5 + 8));
}

uint64_t sub_23B19D8B4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B1774CC(a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(unsigned __int8 *)(v1 + 41), *(_QWORD *)(v1 + 48));
}

uint64_t sub_23B19D8CC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B19D914);
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_23B19D914@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_set_is_pinned();
  *a1 = result;
  return result;
}

void sub_23B19D94C(uint64_t a1)
{
  uint64_t v1;

  sub_23B176C58(a1, *(void (**)(id))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(unsigned __int8 *)(v1 + 41), *(_QWORD **)(v1 + 48));
}

uint64_t sub_23B19D964(int a1)
{
  uint64_t v1;

  return sub_23B177180(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23B19D984@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B17725C(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_DWORD *)(v1 + 28), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_23B19D9A8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B177360(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23B19D9C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_23B19D9E4()
{
  return swift_deallocObject();
}

uint64_t sub_23B19D9F8(uint64_t a1)
{
  return sub_23B19DAAC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B175F28);
}

uint64_t sub_23B19DA04@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23B176724(a1, *(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), a2);
}

uint64_t sub_23B19DA24@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1769EC(*(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_23B19DA44@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B176AEC(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23B19DA60()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_64Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B19DAA0(uint64_t a1)
{
  return sub_23B19DAAC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B175104);
}

uint64_t sub_23B19DAAC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_23B19DAC4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23B175B70(a1, *(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), a2);
}

uint64_t sub_23B19DAE4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B175E38(*(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), a1);
}

void sub_23B19DB00(uint64_t a1)
{
  uint64_t v1;

  sub_23B174D3C(a1, *(void **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(void *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23B19DB10@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_remove_resurrected();
  *a1 = result;
  return result;
}

uint64_t sub_23B19DB40()
{
  return objectdestroy_8Tm_1();
}

void sub_23B19DB48()
{
  uint64_t v0;

  sub_23B1732B8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(void *))(v0 + 32), *(void (**)(void *))(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
}

uint64_t sub_23B19DB84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B19DC30(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23B173D20(a1, a2, *(void **)(v2 + 16), v2 + v6, *(_QWORD **)(v2 + v7), *(void (**)(uint64_t))(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23B19DCC8(uint64_t result)
{
  *(_BYTE *)(result + 120) = 3;
  return result;
}

uint64_t sub_23B19DCD4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B19DD20(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23B19DD70(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23B19DDC4@<X0>(_BYTE *a1@<X8>)
{
  return sub_23B15A4A4(a1);
}

uint64_t sub_23B19DDE0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_23B19FF5C(a1, a2);
}

uint64_t sub_23B19DDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0) - 8) + 80);
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = v0 + ((v1 + 168) & ~v1);
  v3 = (int *)type metadata accessor for VFSItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v3 - 1) + 48))(v2, 1, v3))
  {
    swift_bridgeObjectRelease();
    v4 = v2 + v3[7];
    v5 = (int *)type metadata accessor for ItemMetadata();
    v6 = v4 + v5[7];
    v7 = sub_23B1C5BDC();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v9(v6, v7);
    v9(v4 + v5[8], v7);
    swift_bridgeObjectRelease();
    v10 = v4 + v5[29];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
      v9(v10, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = (uint64_t *)(v4 + v5[33]);
    v12 = v11[1];
    if (v12 >> 60 != 15)
      sub_23AAAE53C(*v11, v12);
    swift_bridgeObjectRelease();
    v13 = v2 + v3[8];
    v14 = *(void **)(v13 + 16);
    if (v14 != (void *)1)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v13 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v15 = v2 + v3[12];
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
    {
      v17 = sub_23B1C5A08();
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_23B19E0A4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_23B171F60(a1, a2, *(void (**)(uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD **)(v2 + 40), *(void **)(v2 + 48), *(_QWORD *)(v2 + 56), *(_BYTE *)(v2 + 64), v2 + 72, v2 + v6, *(_BYTE *)(v2 + v6 + *(_QWORD *)(v5 + 64)));
}

uint64_t sub_23B19E12C(uint64_t result)
{
  *(_BYTE *)(result + 120) = 9;
  return result;
}

uint64_t sub_23B19E138(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_23B1C7388() & 1;
}

uint64_t sub_23B19E18C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B19E1B0()
{
  return swift_deallocObject();
}

uint64_t sub_23B19E1C0()
{
  return objectdestroy_35Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_35Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B19E204()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B19E228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  void *v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
        + 103) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 40);
  v6 = (int *)type metadata accessor for ItemMetadata();
  v7 = v5 + v6[7];
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v5 + v6[8], v8);
  swift_bridgeObjectRelease();
  v11 = v5 + v6[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(v5 + v6[33]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_23AAAE53C(*v12, v13);
  v14 = (v4 + 63) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v0 + v4 + 16);
  if (v15 >> 60 != 11 && v15 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v0 + v4 + 8), v15);
  v17 = v0 + v14;
  v18 = *(void **)(v0 + v14 + 16);
  if (v18 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v17 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_23B19E48C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B16EFF8(*(uint64_t (**)(uint64_t, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v0 + v5, *(_QWORD *)(v0 + ((v5 + 103) & 0xFFFFFFFFFFFFFFF8)), v0 + ((((v5 + 103) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v0 + ((((((v5 + 103) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_23B19E53C()
{
  swift_release();
  return swift_deallocObject();
}

double sub_23B19E560(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_BYTE *)(a1 + 120) = 10;
  return result;
}

_QWORD *sub_23B19E594(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
  return a1;
}

uint64_t sub_23B19E5E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  void *v18;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((((((((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 119) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 40);
  v6 = (int *)type metadata accessor for ItemMetadata();
  v7 = v5 + v6[7];
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v5 + v6[8], v8);
  swift_bridgeObjectRelease();
  v11 = v5 + v6[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(v5 + v6[33]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_23AAAE53C(*v12, v13);
  v14 = (v4 + 63) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v15 = *(_QWORD *)(v0 + v4 + 16);
  if (v15 >> 60 != 11 && v15 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v0 + v4 + 8), v15);
  v17 = v0 + v14;
  v18 = *(void **)(v0 + v14 + 16);
  if (v18 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v17 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_23B19E878()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 119) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B165560(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + v3), (_OWORD *)(v0 + v4), *(_QWORD *)(v0 + ((v4 + 103) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v4 + 103) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + v6), *(void (**)(_QWORD))(v0 + v7), *(_QWORD *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), v0 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), v0 + ((((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_23B19E944()
{
  uint64_t v0;

  return sub_23B149870(*(void (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), qword_2542E3690);
}

uint64_t sub_23B19E968()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B19E9A4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 96) & ~v2;
  swift_release();
  swift_release();
  v4 = *(_QWORD *)(v0 + 48);
  if (v4 >> 60 != 15 && (v4 & 0xF000000000000000) != 0xB000000000000000)
    sub_23AAAE53C(*(_QWORD *)(v0 + 40), v4);
  v6 = v0 + v3;
  swift_bridgeObjectRelease();
  v7 = v0 + v3 + v1[7];
  v8 = (int *)type metadata accessor for ItemMetadata();
  v9 = v7 + v8[7];
  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10))
    v12(v13, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = (uint64_t *)(v7 + v8[33]);
  v15 = v14[1];
  if (v15 >> 60 != 15)
    sub_23AAAE53C(*v14, v15);
  swift_bridgeObjectRelease();
  v16 = v6 + v1[8];
  v17 = *(void **)(v16 + 16);
  if (v17 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v16 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v18 = v6 + v1[12];
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
  {
    v20 = sub_23B1C5A08();
    v21 = *(_QWORD *)(v20 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B19EC50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  return sub_23B16806C(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), (_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 88), v1 + v4, *(_QWORD *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t (**)(uint64_t))(v1 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23B19ECE4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23B19ED08()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(unint64_t, uint64_t);
  unint64_t v32;
  unsigned int (*v33)(unint64_t, uint64_t, uint64_t);
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 9) & 0xFFFFFFFFFFFFFFF8;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v5 = *(_QWORD *)(v4 - 8);
  v52 = (v3 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v6 = (v52 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (int *)type metadata accessor for VFSItem(0);
  v9 = *((_QWORD *)v8 - 1);
  v53 = *(unsigned __int8 *)(v9 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v10 = v0 + v2;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(v9 + 48))(v0 + v2, 1, v8))
  {
    v51 = v4;
    swift_bridgeObjectRelease();
    v11 = v10 + v8[7];
    v12 = (int *)type metadata accessor for ItemMetadata();
    v13 = v11 + v12[7];
    v14 = sub_23B1C5BDC();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v16(v13, v14);
    v16(v11 + v12[8], v14);
    swift_bridgeObjectRelease();
    v17 = v11 + v12[29];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v17, 1, v14))
      v16(v17, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = (uint64_t *)(v11 + v12[33]);
    v19 = v18[1];
    if (v19 >> 60 != 15)
      sub_23AAAE53C(*v18, v19);
    swift_bridgeObjectRelease();
    v20 = v10 + v8[8];
    v21 = *(void **)(v20 + 16);
    v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
    v4 = v51;
    if (v21 != (void *)1)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v20 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v22 = v10 + v8[12];
    v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
    {
      v24 = sub_23B1C5A08();
      v25 = *(_QWORD *)(v24 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  v26 = v0 + v52 + *(int *)(v4 + 40);
  v27 = (int *)type metadata accessor for ItemMetadata();
  v28 = v26 + v27[7];
  v29 = sub_23B1C5BDC();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(void (**)(unint64_t, uint64_t))(v30 + 8);
  v31(v28, v29);
  v31(v26 + v27[8], v29);
  swift_bridgeObjectRelease();
  v32 = v26 + v27[29];
  v33 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v30 + 48);
  if (!v33(v32, 1, v29))
    v31(v32, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v34 = (uint64_t *)(v26 + v27[33]);
  v35 = v34[1];
  if (v35 >> 60 != 15)
    sub_23AAAE53C(*v34, v35);
  v36 = (v53 + v7 + 248) & ~v53;
  swift_bridgeObjectRelease();
  swift_release();
  v37 = v0 + v7;
  v38 = *(void **)(v0 + v7 + 16);
  if (v38 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v37 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v39 = v0 + v36;
  swift_bridgeObjectRelease();
  v40 = v0 + v36 + v8[7];
  v31(v40 + v27[7], v29);
  v31(v40 + v27[8], v29);
  swift_bridgeObjectRelease();
  v41 = v40 + v27[29];
  if (!v33(v41, 1, v29))
    v31(v41, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42 = (uint64_t *)(v40 + v27[33]);
  v43 = v42[1];
  if (v43 >> 60 != 15)
    sub_23AAAE53C(*v42, v43);
  swift_bridgeObjectRelease();
  v44 = v39 + v8[8];
  v45 = *(void **)(v44 + 16);
  if (v45 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v44 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v46 = v39 + v8[12];
  v47 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47))
  {
    v48 = sub_23B1C5A08();
    v49 = *(_QWORD *)(v48 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v46, 1, v48))
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v46, v48);
  }
  return swift_deallocObject();
}

uint64_t sub_23B19F370(const char *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = (v7 + 9) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + v8 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = v10 + *(_QWORD *)(v9 + 64);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VFSItem(0) - 8) + 80);
  return sub_23B168738(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(uint64_t **)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD **)(v2 + 56), *(_QWORD *)(v2 + 64), *(_BYTE *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), v2 + v6, *(_BYTE *)(v2 + v7), *(_BYTE *)(v2 + v7 + 1), *(_QWORD *)(v2 + v8), v2 + v10, *(_BYTE *)(v2 + v11), *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFFF8) + v2 + 8),
           v2 + (((v11 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8),
           (_QWORD *)(v2 + ((v12 + (((v11 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 248) & ~v12)));
}

double sub_23B19F4AC(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 6;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_BYTE *)(a1 + 120) = 10;
  return result;
}

uint64_t sub_23B19F4E0(uint64_t result)
{
  *(_BYTE *)(result + 120) = 1;
  return result;
}

uint64_t sub_23B19F4EC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B16DE0C(a1, *(uint64_t **)(v1 + 16), *(_QWORD **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_23B19F514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_23B16E414(a1, a2, a3, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), a4, *(_BYTE *)(v4 + 48), *(int ***)(v4 + 56), *(_QWORD **)(v4 + 64), *(int ***)(v4 + 72), *(_QWORD *)(v4 + 80), *(uint64_t **)(v4 + 88), *(_QWORD *)(v4 + 96));
}

uint64_t sub_23B19F558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23B16C1B8(a1, a2, a3, a4, *(_QWORD **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(uint64_t **)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(uint64_t **)(v4 + 80), *(void (***)(uint64_t))(v4 + 88), *(uint64_t **)(v4 + 96));
}

uint64_t sub_23B19F594(int a1)
{
  uint64_t v1;

  return sub_23B16C958(a1, *(_QWORD *)(v1 + 16), *(int ***)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_BYTE *)(v1 + 112));
}

uint64_t sub_23B19F5DC()
{
  return objectdestroy_8Tm_1();
}

uint64_t sub_23B19F5E4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B16D9F8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23B19F5F4()
{
  return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC34958);
}

void *sub_23B19F648@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  return sub_23B16BFD0(*(void ***)(v1 + 16), a1);
}

uint64_t sub_23B19F660()
{
  return sub_23B16C128();
}

void sub_23B19F668(uint64_t a1)
{
  uint64_t v1;

  sub_23B16CD98(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_DWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_23B19F6B0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B16D808(*(_QWORD **)(v1 + 40), a1);
}

uint64_t sub_23B19F6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23B16D1F4(a1, a2, a3, a4, *(_DWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_BYTE *)(v4 + 56));
}

uint64_t sub_23B19F714@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_is_dataless_fault();
  *a1 = result;
  return result;
}

uint64_t sub_23B19F748@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B16D5FC(*(_QWORD *)(v1 + 64), *(_QWORD **)(v1 + 72), a1);
}

uint64_t sub_23B19F774()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23B19F798()
{
  return swift_deallocObject();
}

uint64_t sub_23B19F7A8()
{
  return swift_deallocObject();
}

void sub_23B19F7B8()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = 1;
  sub_23B1AA030();
}

uint64_t sub_23B19F828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = *(unsigned int *)(v3 + 16);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 24);
  fpfs_pkg_dirstat();
  return v8(v7, a1, a2, a3);
}

uint64_t sub_23B19F8A0(uint64_t a1)
{
  return sub_23B1A01C8(a1, (uint64_t)sub_23B19F8E0, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _DWORD *))sub_23B1AA280);
}

uint64_t sub_23B19F8C4(uint64_t a1)
{
  return sub_23B1A0F3C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC3EE84);
}

uint64_t sub_23B19F8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23B19F828(a1, a2, a3);
}

void sub_23B19F8F4(int a1)
{
  sub_23B1A13D8(a1);
}

uint64_t sub_23B19F908@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B16E01C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23B19F928@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B16E2A4(*(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_23B19F948@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B16E140(*(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_23B19F968()
{
  return swift_deallocObject();
}

uint64_t sub_23B19F978()
{
  return swift_deallocObject();
}

uint64_t sub_23B19F988(int a1)
{
  uint64_t v1;

  return sub_23B168624(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23B19F9A0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_funset_resuming_sync_with_drop_local_changes();
  *a1 = result;
  return result;
}

uint64_t sub_23B19F9D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  void *v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(v1 + 40);
  v7 = (int *)type metadata accessor for ItemMetadata();
  v8 = v6 + v7[7];
  v9 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[8], v9);
  swift_bridgeObjectRelease();
  v12 = v6 + v7[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)(v6 + v7[33]);
  v14 = v13[1];
  if (v14 >> 60 != 15)
    sub_23AAAE53C(*v13, v14);
  v15 = (v4 + 63) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_release();
  v16 = *(_QWORD *)(v0 + v4 + 16);
  if (v16 >> 60 != 11 && v16 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v0 + v4 + 8), v16);
  v18 = v0 + v15;
  v19 = *(void **)(v0 + v15 + 16);
  if (v19 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v18 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B19FBFC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B163D10(v0 + v2, *(_QWORD *)(v0 + v3), v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8), v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8), *(void (**)(uint64_t, _QWORD))(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8)+ 255) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 255) & 0xFFFFFFFFFFFFFFF8)+ 8));
}

uint64_t sub_23B19FC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  int *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, uint64_t);
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64) + v3;
  swift_release();
  swift_release();
  swift_release();
  v5 = *(_QWORD *)(v0 + 64);
  if (v5 >> 60 != 15 && (v5 & 0xF000000000000000) != 0xB000000000000000)
    sub_23AAAE53C(*(_QWORD *)(v0 + 56), v5);
  v7 = v4 + 7;
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 40);
  v9 = (int *)type metadata accessor for ItemMetadata();
  v10 = v8 + v9[7];
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(unint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11))
    v13(v14, v11);
  v15 = v7 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = (uint64_t *)(v8 + v9[33]);
  v17 = v16[1];
  if (v17 >> 60 != 15)
    sub_23AAAE53C(*v16, v17);
  swift_bridgeObjectRelease();
  v18 = v0 + v15;
  v19 = *(void **)(v0 + v15 + 16);
  if (v19 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v18 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_23B19FE88()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B160668(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t *))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), (_QWORD *)(v0 + 48), v0 + v2, v0 + v3, *(_QWORD *)(v0 + ((v3 + 255) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B19FEE8()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 64);
  if (v1 >> 60 != 15 && (v1 & 0xF000000000000000) != 0xB000000000000000)
    sub_23AAAE53C(*(_QWORD *)(v0 + 56), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B19FF48(uint64_t a1)
{
  uint64_t v1;

  return sub_23B1619C8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD *))(v1 + 32), *(_QWORD *)(v1 + 40), (_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 104));
}

uint64_t sub_23B19FF5C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = sub_23B159E64(a1, *(_QWORD **)(v2 + 16), *(void (**)(uint64_t *__return_ptr, _BYTE *, char *))(v2 + 24), *(_QWORD *)(v2 + 32));
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_23B19FF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  v5 = v0 + v3;
  v6 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  swift_release();
  v7 = v0 + v4;
  v8 = *(void **)(v0 + v4 + 16);
  if (v8 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v7 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_23B1A00E0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B161E8C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(uint64_t *))(v2 + 32), *(_QWORD *)(v2 + 40), *(void **)(v2 + 48), *(_QWORD *)(v2 + 56), v2 + v6, *(_QWORD *)(v2 + v7), v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_23B1A0178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_23B1631F4(a1, a2, a3, *(_QWORD **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), a4, *(_QWORD *)(v4 + 48));
}

uint64_t sub_23B1A01A4(uint64_t a1)
{
  return sub_23B1A01C8(a1, (uint64_t)sub_23B19F8E0, (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _DWORD *))sub_23B1AA0D0);
}

uint64_t sub_23B1A01C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _DWORD *))
{
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _DWORD v13[6];
  __int128 v14;

  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_OWORD *)(v3 + 32);
  **(_BYTE **)(v3 + 16) = 1;
  v7 = v5 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext;
  v8 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext);
  v9 = *(unsigned int *)(v5 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext + 8);
  LODWORD(v7) = *(unsigned __int8 *)(v7 + 12);
  v13[4] = a1;
  v14 = v6;
  v10 = (_DWORD)v7 == 0;
  v11 = 0x100000000;
  if (v10)
    v11 = 0;
  return a3(a1, 0, v8, v11 | v9, a2, v13);
}

uint64_t sub_23B1A0238(uint64_t a1)
{
  return sub_23B1A0F3C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC3ECD4);
}

uint64_t sub_23B1A0254()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A02A0()
{
  uint64_t v0;

  return sub_23B15FEC8(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), (uint64_t *)(v0 + 40), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(void (**)(uint64_t, _QWORD))(v0 + 152));
}

void sub_23B1A02BC()
{
  uint64_t v0;

  sub_23B149924(*(void (**)(id *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (void (*)(id))MEMORY[0x24BEE4BC0]);
}

void sub_23B1A02E0(int a1)
{
  uint64_t v1;

  sub_23B1600A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(off_t **)(v1 + 32));
}

uint64_t sub_23B1A02FC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A0330()
{
  uint64_t v0;

  return sub_23B15DF44(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(unsigned int *)(v0 + 28), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void (**)(_QWORD, _QWORD))(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_23B1A034C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A0370()
{
  uint64_t v0;

  return sub_23B15DC80(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(unsigned int *)(v0 + 28), *(uint64_t (**)(_QWORD))(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_23B1A0388()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B1A03BC()
{
  uint64_t v0;

  return sub_23B15D2E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_23B1A03D4()
{
  uint64_t v0;

  return sub_23B149870(*(void (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), &qword_2569E8D38);
}

uint64_t sub_23B1A03F8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A042C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B15D3E8(a1, *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_23B1A0440()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A0464(uint64_t a1)
{
  uint64_t v1;

  return sub_23B15C65C(a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_23B1A0474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B1A04E8(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;

  v4 = a2 & 1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C5A08() - 8) + 80);
  return sub_23B15D060(a1, v4, *(void (**)(_QWORD *))(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5));
}

uint64_t sub_23B1A0538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A05CC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B1A05F8()
{
  uint64_t v0;

  sub_23B15A724(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(void (**)(_QWORD))(v0 + 40));
}

uint64_t sub_23B1A060C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A066C()
{
  uint64_t v0;

  return sub_23B149870(*(void (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), &qword_2542E21A0);
}

uint64_t sub_23B1A0690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23B159638(a1, *(char **)(v2 + 16), a2);
}

uint64_t sub_23B1A06B0()
{
  uint64_t v0;

  return sub_23B1559C4(v0);
}

uint64_t sub_23B1A06C8()
{
  _QWORD *v0;

  return sub_23B15590C(v0);
}

uint64_t sub_23B1A06E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A0704()
{
  uint64_t v0;

  return sub_23B154AA0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_23B1A0714@<X0>(_QWORD *a1@<X8>)
{
  return sub_23B181710(a1);
}

uint64_t sub_23B1A0738()
{
  return sub_23B181788();
}

void sub_23B1A075C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  sub_23AFE3404(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

__CFString *resetReason2str_0(unint64_t a1)
{
  __CFString *v1;
  __CFString *v2;

  if (a1 <= 0xA)
  {
    v1 = off_250C1B518[a1];
    v2 = off_250C1B4C0[a1];
  }
  return v1;
}

uint64_t sub_23B1A07BC@<X0>(_QWORD *a1@<X8>)
{
  return sub_23B181710(a1);
}

uint64_t sub_23B1A07E0()
{
  return sub_23B181788();
}

uint64_t sub_23B1A0804(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23B1A0874(uint64_t a1)
{
  uint64_t v1;

  return sub_23B179314(a1, *(NSObject **)(v1 + 16), *(_QWORD **)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_23B1A0880()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_23B1A08A8(void *a1)
{
  uint64_t v1;

  sub_23B17A1DC(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t objectdestroy_336Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_345Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_23B1A0944(void *a1, char a2)
{
  uint64_t v2;

  sub_23B17A8DC(a1, a2 & 1, *(void (**)(id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_BYTE *)(v2 + 48), *(void **)(v2 + 56), *(void **)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

void sub_23B1A0990()
{
  uint64_t v0;

  sub_23B149924(*(void (**)(id *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), (void (*)(id))MEMORY[0x24BEE4EF8]);
}

double sub_23B1A09B8(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 3;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_BYTE *)(a1 + 120) = 10;
  return result;
}

void sub_23B1A09EC(uint64_t a1)
{
  uint64_t v1;

  sub_23B15BFB4(a1, *(_BYTE **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_23B1A0A08()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A0A2C(uint64_t a1)
{
  uint64_t v1;

  return sub_23B14A3BC(a1, *(_QWORD *)(v1 + 16), *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23B1A0A38()
{
  return swift_deallocObject();
}

void sub_23B1A0A48(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_23B194FAC(a2, *(void (**)(void *))(v2 + 16));
}

void sub_23B1A0A5C(unsigned int a1)
{
  uint64_t v1;

  sub_23B179030(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t objectdestroy_358Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = type metadata accessor for VFSItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  swift_release();
  v29 = v0;
  v7 = v0 + v3;
  swift_bridgeObjectRelease();
  v8 = v1;
  v9 = v7 + *(int *)(v1 + 28);
  v10 = (int *)type metadata accessor for ItemMetadata();
  v11 = v9 + v10[7];
  v12 = sub_23B1C5BDC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  v14(v9 + v10[8], v12);
  swift_bridgeObjectRelease();
  v15 = v9 + v10[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12))
    v14(v15, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = (uint64_t *)(v9 + v10[33]);
  v17 = v16[1];
  if (v17 >> 60 != 15)
    sub_23AAAE53C(*v16, v17);
  swift_bridgeObjectRelease();
  v18 = v7 + *(int *)(v8 + 32);
  v19 = *(void **)(v18 + 16);
  if (v19 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v18 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v20 = (v4 + v6 + 9) & ~v6;
  v21 = v7 + *(int *)(v8 + 48);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v21, 1, v28))
  {
    v22 = sub_23B1C5A08();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  swift_release();
  v24 = sub_23B1C5A08();
  v25 = *(_QWORD *)(v24 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v29 + v20, 1, v24))
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v29 + v20, v24);
  return swift_deallocObject();
}

uint64_t sub_23B1A0D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740) - 8)
                          + 80);
  return sub_23B178E48(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD **)(v1 + v5), *(_BYTE *)(v1 + v5 + 8), v1 + ((v5 + v6 + 9) & ~v6));
}

uint64_t sub_23B1A0DDC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1A0E44);
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_23B1A0E44@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1789D4(*(_DWORD *)(v1 + 56), *(_QWORD **)(v1 + 64), a1);
}

uint64_t sub_23B1A0E6C()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_402Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B1A0EBC(uint64_t a1)
{
  uint64_t v1;

  sub_23B159C00(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(void (**)(void *, uint64_t))(v1 + 56));
}

uint64_t sub_23B1A0ED0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A0EF4()
{
  uint64_t v0;

  return sub_23B1578E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

double sub_23B1A0F00(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 5;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_BYTE *)(a1 + 120) = 10;
  return result;
}

void sub_23B1A0F34(int a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_23B1548BC(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_23B1A0F3C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(unsigned int *)(v2 + 16), *(unsigned int *)(v2 + 20), *(unsigned int *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_23B1A0F60(void *a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
  {

  }
  else
  {

  }
}

void sub_23B1A0F8C(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  if ((a5 & 1) != 0)
  {

  }
  else
  {

  }
}

uint64_t sub_23B1A0FB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_23B17FBC8(a1, a2, v3, a3);
}

uint64_t sub_23B1A0FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23B1A0FE4(a1, a2);
}

uint64_t sub_23B1A0FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  __int16 v6;

  result = sub_23B15A13C(a1, *(_QWORD **)(v2 + 16), *(void (**)(uint64_t *__return_ptr, _BYTE *, char *))(v2 + 24), *(_QWORD *)(v2 + 32));
  if (!v3)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v6;
    *(_BYTE *)(a2 + 9) = HIBYTE(v6) & 1;
  }
  return result;
}

uint64_t sub_23B1A1020@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B17FC64(*(void **)(v1 + 48), a1);
}

uint64_t sub_23B1A1040(uint64_t a1)
{
  uint64_t v1;

  return sub_23B152A5C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23B1A1048()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A109C()
{
  uint64_t v0;

  return sub_23B15E67C(v0 + 16, *(void (**)(uint64_t *))(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(unsigned __int8 *)(v0 + 136), *(void **)(v0 + 144), *(_QWORD *)(v0 + 152));
}

uint64_t sub_23B1A10B8()
{
  uint64_t v0;

  return sub_23B149870(*(void (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), &qword_2569E8F28);
}

uint64_t sub_23B1A10DC()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = v3 + v1[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_23B1C5A08();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A1350(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B15EFD8(a1, a2, *(void (**)(uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), v2 + v6, *(_QWORD **)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

void sub_23B1A13D8(int a1)
{
  uint64_t v1;

  sub_23B157604(*(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

uint64_t objectdestroy_377Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23B1A1444()
{
  uint64_t v0;

  sub_23B15AA40(*(void (**)(uint64_t@<X0>, uint64_t@<X8>))(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void (**)(uint64_t, uint64_t))(v0 + 40), *(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 48), *(_QWORD *)(v0 + 56), *(uint64_t (**)(uint64_t))(v0 + 64), *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 72));
}

uint64_t sub_23B1A1460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1A14F0(uint64_t a1)
{
  return sub_23B1A18E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t, _QWORD))sub_23B17062C);
}

uint64_t sub_23B1A14FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(unint64_t, uint64_t);
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  void (*v22)(unint64_t, uint64_t);
  uint64_t v23;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (int *)type metadata accessor for VFSItem(0);
  v6 = (v4 + *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  swift_release();
  v22 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v23 = v1;
  v22(v0 + v3, v1);
  swift_release();
  v7 = v0 + v6;
  swift_bridgeObjectRelease();
  v8 = v0 + v6 + v5[7];
  v9 = (int *)type metadata accessor for ItemMetadata();
  v10 = v8 + v9[7];
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(unint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11))
    v13(v14, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = (uint64_t *)(v8 + v9[33]);
  v16 = v15[1];
  if (v16 >> 60 != 15)
    sub_23AAAE53C(*v15, v16);
  swift_bridgeObjectRelease();
  v17 = v7 + v5[8];
  v18 = *(void **)(v17 + 16);
  if (v18 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v17 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v19 = v7 + v5[12];
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20)&& !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v19, 1, v23))
  {
    v22(v19, v23);
  }
  return swift_deallocObject();
}

uint64_t sub_23B1A1794(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VFSItem(0) - 8) + 80);
  return sub_23B170C54(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + v5), v1 + ((v5 + v6 + 8) & ~v6));
}

void sub_23B1A1810(uint64_t a1)
{
  uint64_t v1;

  sub_23B170D58(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_23B1A1828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23B170EE0(a1, a2, a3, *(_DWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_23B1A1844(uint64_t result)
{
  *(_DWORD *)(result + 4) |= 0x20u;
  return result;
}

uint64_t sub_23B1A1854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23B1A18D4(uint64_t a1)
{
  return sub_23B1A18E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t, _QWORD))sub_23B17116C);
}

uint64_t sub_23B1A18E0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), v2 + v5, *(_QWORD *)(v2 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B1A194C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_fset_resuming_sync_with_drop_local_changes();
  *a1 = result;
  return result;
}

uint64_t sub_23B1A197C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_funset_pause_sync_bundleID();
  *a1 = result;
  return result;
}

uint64_t sub_23B1A19AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23B1A1A40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_23B16FF4C(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40), v1 + v4, *v5, v5[1]);
}

void sub_23B1A1AA0(int a1)
{
  uint64_t v1;

  sub_23B170388(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_23B1A1ABC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_get_is_sync_paused();
  *a1 = result;
  return result;
}

uint64_t sub_23B1A1AF0@<X0>(_DWORD *a1@<X8>)
{
  int v2;
  uint64_t result;

  sub_23B1C6458();
  v2 = fpfs_fset_pause_sync_bundleID();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_23B1A1B48()
{
  uint64_t v0;

  return sub_23B17E1BC(*(uint64_t (**)(uint64_t))(v0 + 16));
}

uint64_t sub_23B1A1B60()
{
  uint64_t v0;

  return sub_23B17ABF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

uint64_t sub_23B1A1B6C()
{
  uint64_t v0;

  return sub_23B17AE30(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t storeEnumTagSinglePayload for VFSCounters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23B1A1BC4 + 4 * byte_23B1E78C2[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23B1A1BF8 + 4 * byte_23B1E78BD[v4]))();
}

uint64_t sub_23B1A1BF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B1A1C00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23B1A1C08);
  return result;
}

uint64_t sub_23B1A1C14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23B1A1C1CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23B1A1C20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23B1A1C28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VFSCounters.CodingKeys()
{
  return &type metadata for VFSCounters.CodingKeys;
}

uint64_t initializeBufferWithCopyOfBuffer for VFSEventAggregator.FileIDAndPath(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for VFSEventAggregator.FileIDAndPath()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for VFSEventAggregator.FileIDAndPath(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VFSEventAggregator.FileIDAndPath(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for VFSEventAggregator.FileIDAndPath()
{
  return &type metadata for VFSEventAggregator.FileIDAndPath;
}

unint64_t sub_23B1A1D14()
{
  unint64_t result;

  result = qword_2542DDFC8[0];
  if (!qword_2542DDFC8[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E7BA4, &type metadata for VFSEventAggregator.FileIDAndPath);
    atomic_store(result, qword_2542DDFC8);
  }
  return result;
}

unint64_t sub_23B1A1D5C()
{
  unint64_t result;

  result = qword_2569E8F38;
  if (!qword_2569E8F38)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E7C9C, &type metadata for VFSCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E8F38);
  }
  return result;
}

unint64_t sub_23B1A1DA4()
{
  unint64_t result;

  result = qword_2569E8F40;
  if (!qword_2569E8F40)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E7C0C, &type metadata for VFSCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E8F40);
  }
  return result;
}

unint64_t sub_23B1A1DEC()
{
  unint64_t result;

  result = qword_2569E8F48;
  if (!qword_2569E8F48)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E7C34, &type metadata for VFSCounters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E8F48);
  }
  return result;
}

void sub_23B1A1E38(_QWORD *a1@<X8>)
{
  sub_23B1A075C(a1);
}

uint64_t sub_23B1A1E50@<X0>(_BYTE *a1@<X8>)
{
  return sub_23B19DDC4(a1);
}

uint64_t sub_23B1A1F3C@<X0>(_DWORD *a1@<X8>)
{
  return sub_23B19D11C(a1);
}

uint64_t sub_23B1A1F50@<X0>(_DWORD *a1@<X8>)
{
  return sub_23B1A197C(a1);
}

uint64_t sub_23B1A1F78(uint64_t a1)
{
  return sub_23AC42B0C(a1);
}

void sub_23B1A1F8C(int a1@<W0>, _BYTE *a2@<X8>)
{
  sub_23B194490(a1, a2);
}

void sub_23B1A1FA0(int a1@<W0>, uint64_t a2@<X8>)
{
  sub_23AAB7D90(a1, a2);
}

_QWORD *sub_23B1A1FC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    v7 = *(int *)(a3 + 24);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_23B1C5DEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    *((_BYTE *)v4 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t sub_23B1A2074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23B1C5DEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_23B1A2104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23B1C5DEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_23B1A218C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23B1C5DEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_23B1A2214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_23B1C5DEC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 24), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_23B1A22A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23B1C5DEC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 24), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  return result;
}

uint64_t sub_23B1A2320()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B1C5DEC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23B1A23A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23B1C5DC8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    *(_OWORD *)v11 = *(_OWORD *)v12;
    v11[16] = v12[16];
    v13 = v10;
  }
  return a1;
}

uint64_t sub_23B1A244C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  return a1;
}

uint64_t sub_23B1A24D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  return a1;
}

uint64_t sub_23B1A254C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  return a1;
}

uint64_t sub_23B1A25CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B1A25D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_1Tm(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BEE7758]);
}

uint64_t sub_23B1A25E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23B1A25F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_2Tm(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BEE7758]);
}

uint64_t sub_23B1A25FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23B1A49D0(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BEE7758]);
}

uint64_t sub_23B1A261C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  int v13;
  uint64_t v15;

  v4 = type metadata accessor for ItemMetadata();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - v8;
  v10 = sub_23AF219A4(a1, a2);
  v11 = *(void (**)(uint64_t, uint64_t))(a2 + 104);
  if (v10 == 1)
  {
    v11(a1, a2);
    v12 = *((unsigned int *)v9 + 1);
    v13 = v9[8];
    sub_23AA937BC((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    if (v13)
      return 0;
  }
  else
  {
    v11(a1, a2);
    v12 = *(_QWORD *)&v7[*(int *)(v4 + 100)];
    sub_23AA937BC((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  }
  return v12;
}

uint64_t sub_23B1A2738(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  const char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  char *v43;
  int v44;
  char v45;
  uint64_t v46;
  const char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  const char *v51;
  uint64_t v52;
  const char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  char *v58;
  uint64_t result;
  unsigned int v60;
  const char *v61;
  uint64_t v62;
  char v63;
  char v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  os_signpost_id_t v73;
  void (*v74)(char *, uint64_t);
  int v75;
  int v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  os_signpost_id_t v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  char *v87;
  int v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  const char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  const char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;

  v3 = v2;
  v95 = a1;
  v5 = (const char *)sub_23B1C5DF8();
  v92 = *((_QWORD *)v5 - 1);
  v93 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v87 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v90 = (char *)&v86 - v8;
  v100 = sub_23B1C5DC8();
  v102 = *(_QWORD *)(v100 - 8);
  v9 = MEMORY[0x24BDAC7A8](v100);
  v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v91 = (char *)&v86 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v89 = (char *)&v86 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v97 = (char *)&v86 - v16;
  v17 = type metadata accessor for TelemetrySignpost(0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v94 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v98 = (char *)&v86 - v20;
  v21 = sub_23B1C5DEC();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v99 = (char *)&v86 - v26;
  v27 = type metadata accessor for TelemetrySignposter(0);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v86 - v31;
  v88 = a2;
  v101 = v17;
  if ((a2 & 0x80) == 0)
  {
    v33 = v22;
    v96 = v21;
    v34 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
    v35 = objc_msgSend(v34, sel_initWithInteger_, v95);
    sub_23B0DC740(2);
    v37 = v36;

    if (v37)
    {
      v94 = (char *)objc_msgSend(v37, sel_integerValue);

    }
    else
    {
      v94 = 0;
    }
    v49 = v96;
    v50 = v97;
    v21 = (uint64_t)v98;
    v51 = v99;
    sub_23AA907B0(v3, (uint64_t)v32, type metadata accessor for TelemetrySignposter);
    (*(void (**)(const char *, char *, uint64_t))(v33 + 32))(v51, &v32[*(int *)(v27 + 24)], v49);
    v52 = v33;
    v53 = *(const char **)v3;
    v54 = *(_BYTE *)(v3 + 16);
    sub_23AA907B0(v3, v21, type metadata accessor for TelemetrySignpost);
    sub_23B1A444C();
    sub_23B1A43E0();
    sub_23AAB7948(v55);
    sub_23AAF9F38();
    sub_23B1A43E0();
    sub_23AAB7948(v56);
    v57 = sub_23B1C5DD4();
    sub_23B1C5E10();
    LODWORD(v91) = sub_23B1C6BD8();
    if ((sub_23B1C6C80() & 1) == 0)
    {
      sub_23AA937BC(v21, type metadata accessor for TelemetrySignpost);

      (*(void (**)(char *, uint64_t))(v102 + 8))(v50, v100);
      return (*(uint64_t (**)(const char *, uint64_t))(v52 + 8))(v51, v49);
    }
    v95 = v52;
    if ((v54 & 1) == 0)
    {
      if (v53)
      {
        v58 = v90;
LABEL_20:
        v60 = v88;
        swift_retain();
        sub_23B1C5E34();
        swift_release();
        v62 = v92;
        v61 = v93;
        if ((*(unsigned int (**)(char *, const char *))(v92 + 88))(v58, v93) == *MEMORY[0x24BEE7810])
        {
          v63 = 0;
          v64 = 0;
          v93 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, const char *))(v62 + 8))(v58, v61);
          v93 = "  state=%{public, signpost.telemetry:string2, name=state,public}s\n"
                "  providerID=%{public, signpost.telemetry:number1, name=providerID,public}llu\n"
                "  size=%{public, signpost.telemetry:number2, name=size,public}ld";
          v64 = 2;
          v63 = 3;
        }
        v65 = v89;
        v66 = v50;
        v67 = v100;
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v89, v66, v100);
        v68 = swift_slowAlloc();
        v69 = swift_slowAlloc();
        v104 = v69;
        *(_BYTE *)v68 = v64;
        *(_BYTE *)(v68 + 1) = v63;
        *(_WORD *)(v68 + 2) = 2082;
        if ((v60 & 1) != 0)
          v70 = 0xEB00000000726964;
        else
          v70 = 0xEB00000000636F64;
        if (v60 >= 0x40)
          v71 = 0x5F73736563637573;
        else
          v71 = 0x5F79646165726C61;
        v103 = sub_23AABEC68(v71, v70, &v104);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        *(_WORD *)(v68 + 12) = 2050;
        v72 = (uint64_t)v98;
        v103 = *(_QWORD *)&v98[*(int *)(v101 + 24)];
        sub_23B1C6CBC();
        sub_23AA937BC(v72, type metadata accessor for TelemetrySignpost);
        *(_WORD *)(v68 + 22) = 2050;
        v103 = (uint64_t)v94;
        sub_23B1C6CBC();
        v73 = sub_23B1C5DBC();
        _os_signpost_emit_with_name_impl(&dword_23AA66000, v57, (os_signpost_type_t)v91, v73, v53, v93, (uint8_t *)v68, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v69, -1, -1);
        MEMORY[0x23B8614BC](v68, -1, -1);

        v74 = *(void (**)(char *, uint64_t))(v102 + 8);
        v74(v97, v67);
        (*(void (**)(const char *, uint64_t))(v95 + 8))(v99, v96);
        return ((uint64_t (*)(char *, uint64_t))v74)(v65, v67);
      }
      goto LABEL_46;
    }
    if ((unint64_t)v53 >> 32)
    {
      __break(1u);
    }
    else
    {
      v58 = v90;
      if (v53 >> 11 == 27)
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      if (v53 >> 16 <= 0x10)
      {
        v53 = &v105;
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
  v98 = v11;
  sub_23AA907B0(v3, (uint64_t)v30, type metadata accessor for TelemetrySignposter);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, &v30[*(int *)(v27 + 24)], v21);
  v99 = *(const char **)v3;
  v38 = *(_BYTE *)(v3 + 16);
  v39 = v3;
  v40 = (uint64_t)v94;
  sub_23AA907B0(v39, (uint64_t)v94, type metadata accessor for TelemetrySignpost);
  sub_23B1A444C();
  sub_23B1A43E0();
  sub_23AAB7948(v41);
  v42 = sub_23B1C5DD4();
  v43 = v91;
  sub_23B1C5E10();
  v44 = sub_23B1C6BD8();
  v45 = sub_23B1C6C80();
  v46 = v40;
  if ((v45 & 1) == 0)
  {
    sub_23AA937BC(v40, type metadata accessor for TelemetrySignpost);

    (*(void (**)(char *, uint64_t))(v102 + 8))(v43, v100);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  }
  v95 = v22;
  v96 = v21;
  if ((v38 & 1) != 0)
  {
    if ((unint64_t)v99 >> 32)
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v48 = v92;
    v47 = v93;
    v21 = (uint64_t)v87;
    if (v99 >> 11 == 27)
    {
LABEL_45:
      __break(1u);
LABEL_46:
      sub_23AA937BC(v21, type metadata accessor for TelemetrySignpost);
      __break(1u);
      goto LABEL_47;
    }
    if (v99 >> 16 > 0x10)
      goto LABEL_43;
    v99 = &v106;
  }
  else
  {
    if (!v99)
    {
LABEL_47:
      result = sub_23AA937BC(v46, type metadata accessor for TelemetrySignpost);
      __break(1u);
      return result;
    }
    v48 = v92;
    v47 = v93;
    v21 = (uint64_t)v87;
  }
  swift_retain();
  sub_23B1C5E34();
  swift_release();
  v75 = (*(uint64_t (**)(uint64_t, const char *))(v48 + 88))(v21, v47);
  v76 = *MEMORY[0x24BEE7810];
  v86 = v25;
  LODWORD(v97) = v44;
  if (v75 == v76)
  {
    v77 = 0;
    v93 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(uint64_t, const char *))(v48 + 8))(v21, v47);
    v93 = "  state=%{public, signpost.telemetry:string2, name=state,public}s\n"
          "  providerID=%{public, signpost.telemetry:number1, name=providerID,public}llu";
    v77 = 2;
  }
  v78 = v98;
  v79 = v102;
  v80 = v100;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v98, v43, v100);
  v81 = swift_slowAlloc();
  v82 = swift_slowAlloc();
  v104 = v82;
  *(_BYTE *)v81 = v77;
  *(_BYTE *)(v81 + 1) = v77;
  *(_WORD *)(v81 + 2) = 2082;
  v103 = sub_23AABEC68(1818845542, 0xE400000000000000, &v104);
  sub_23B1C6CBC();
  *(_WORD *)(v81 + 12) = 2050;
  v83 = (uint64_t)v94;
  v103 = *(_QWORD *)&v94[*(int *)(v101 + 24)];
  sub_23B1C6CBC();
  sub_23AA937BC(v83, type metadata accessor for TelemetrySignpost);
  v84 = sub_23B1C5DBC();
  _os_signpost_emit_with_name_impl(&dword_23AA66000, v42, (os_signpost_type_t)v97, v84, v99, v93, (uint8_t *)v81, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x23B8614BC](v82, -1, -1);
  MEMORY[0x23B8614BC](v81, -1, -1);

  v85 = *(void (**)(char *, uint64_t))(v79 + 8);
  v85(v43, v80);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v86, v96);
  return ((uint64_t (*)(char *, uint64_t))v85)(v78, v80);
}

uint64_t sub_23B1A30E4()
{
  uint64_t result;

  sub_23B1A318C();
  result = sub_23B1C6C8C();
  qword_2542EDD28 = result;
  return result;
}

uint64_t sub_23B1A313C()
{
  uint64_t result;

  sub_23B1A318C();
  result = sub_23B1C6C8C();
  qword_256A07A18 = result;
  return result;
}

unint64_t sub_23B1A318C()
{
  unint64_t result;

  result = qword_2542E7578;
  if (!qword_2542E7578)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542E7578);
  }
  return result;
}

void sub_23B1A31C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE788);
  MEMORY[0x24BDAC7A8](v12);
  v0 = sub_23B1C61B8();
  v11[1] = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_23B1C6428();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23B1C6134();
  v13 = *(_QWORD *)(v5 - 8);
  v14 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)v11 - v7;
  sub_23B1C63E0();
  sub_23B1C641C();
  sub_23B1C63EC();
  v9 = v8;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v9 >> 60 == 15)
    v10 = 0xC000000000000000;
  else
    v10 = v9;
  sub_23AA7E38C((unint64_t *)&qword_2542DD470, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
  sub_23B1C6128();
  __asm { BR              X10 }
}

unint64_t sub_23B1A33B4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;

  *(_QWORD *)(v6 - 112) = v5;
  *(_WORD *)(v6 - 104) = v1;
  *(_BYTE *)(v6 - 102) = BYTE2(v1);
  *(_BYTE *)(v6 - 101) = BYTE3(v1);
  *(_BYTE *)(v6 - 100) = BYTE4(v1);
  *(_BYTE *)(v6 - 99) = BYTE5(v1);
  sub_23B1C6110();
  sub_23AAAE53C(v5, v1);
  v7 = *(_QWORD *)(v6 - 120);
  sub_23B1C611C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 152) + 8))(v4, v2);
  sub_23AAAE53C(v5, v1);
  v8 = *(_QWORD *)(v6 - 136);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v10 = v7;
  v11 = *(_QWORD *)(v6 - 128);
  v9(v0, v10, v11);
  *(_QWORD *)(v0 + *(int *)(*(_QWORD *)(v6 - 144) + 36)) = 8;
  v9(v3, v0, v11);
  sub_23AA7E38C(&qword_2542DD468, (uint64_t (*)(uint64_t))MEMORY[0x24BDC62F0], MEMORY[0x24BDC6300]);
  sub_23B1C65CC();
  sub_23AA8A05C(v0, &qword_2542DE788);
  v12 = *(_QWORD *)(v6 - 112);
  v13 = *(_QWORD *)(v6 - 104);
  v14 = *(_QWORD *)(v12 + 16);
  if (v13 == v14)
  {
    swift_bridgeObjectRelease();
    v15 = 0;
  }
  else
  {
    v16 = v14 - v13;
    if (v14 < v13)
      v16 = 0;
    v17 = v14 + ~v13;
    if (v17 >= v16)
      v17 = v16;
    if (v17 >= 7)
      v17 = 7;
    if (v16 == v17)
    {
      __break(1u);
      JUMPOUT(0x23B1A36F4);
    }
    v18 = v12 + 32;
    v15 = (unint64_t)*(unsigned __int8 *)(v12 + 32 + v13) << 8;
    if (v13 + 1 == v14
      || (v15 = (v15 | *(unsigned __int8 *)(v18 + v13 + 1)) << 8, v13 + 2 == v14)
      || (v15 = (v15 | *(unsigned __int8 *)(v18 + v13 + 2)) << 8, v13 + 3 == v14)
      || (v15 = (v15 | *(unsigned __int8 *)(v18 + v13 + 3)) << 8, v13 + 4 == v14)
      || (v15 = (v15 | *(unsigned __int8 *)(v18 + v13 + 4)) << 8, v13 + 5 == v14)
      || (v15 = (v15 | *(unsigned __int8 *)(v18 + v13 + 5)) << 8, v13 + 6 == v14)
      || (v15 = (v15 | *(unsigned __int8 *)(v18 + v13 + 6)) << 8, v19 = v13 + 7, v19 == v14))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = *(unsigned __int8 *)(v18 + v19);
      swift_bridgeObjectRelease();
      v15 = (v15 | v21) << 8;
    }
  }
  (*(void (**)(_QWORD, uint64_t))(v8 + 8))(*(_QWORD *)(v6 - 120), v11);
  return v15;
}

id sub_23B1A370C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  __swift_allocate_value_buffer(v0, qword_2542EDC18);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2542EDC18);
  return sub_23B1A3758(v1);
}

id sub_23B1A3758@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id result;
  void *v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23B1C5C54();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (result)
  {
    v13 = result;
    v14 = objc_msgSend(result, sel_deviceIdentifierForVendor);

    if (v14)
    {
      sub_23B1C5C24();

      v15 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v15(v4, v9, v5);
      v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v16((uint64_t)v4, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v15(v11, v4, v5);
        sub_23B1C5C3C();
        sub_23B1C5C30();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        v17 = a1;
        v18 = 0;
        return (id)v16(v17, v18, 1, v5);
      }
    }
    else
    {
      v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v16((uint64_t)v4, 1, 1, v5);
    }
    sub_23AA8A05C((uint64_t)v4, (uint64_t *)&unk_2542E4320);
    v17 = a1;
    v18 = 1;
    return (id)v16(v17, v18, 1, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_23B1A3998(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  __int16 v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  unint64_t v28;
  char *v29;
  _QWORD v30[7];
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t __src;
  __int16 v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  time_t v46;
  tm v47;
  uint64_t v48;

  v36 = a1;
  v48 = *MEMORY[0x24BDAC8D0];
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE788);
  MEMORY[0x24BDAC7A8](v31);
  v32 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_23B1C6134();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v30[6] = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v30 - v6;
  v8 = sub_23B1C6428();
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v33 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C61B8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B1C5C54();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v37 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542DDDB8 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v12, (uint64_t)qword_2542EDC18);
  sub_23AA8EFC8(v18, (uint64_t)v14, (uint64_t *)&unk_2542E4320);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v37, v14, v15);
    v46 = time(0);
    memset(&v47, 0, 36);
    v47.tm_gmtoff = 0;
    v47.tm_zone = 0;
    localtime_r(&v46, &v47);
    v20 = 366 * v47.tm_year;
    if (v20 == (int)v20)
    {
      v30[5] = v10;
      if (!__OFADD__((_DWORD)v20, v47.tm_yday))
      {
        v30[1] = v7;
        v30[2] = v3;
        v30[3] = v2;
        if ((((_DWORD)v20 + v47.tm_yday) & 0x80000000) == 0)
        {
          sub_23B1C61AC();
          __src = sub_23B1C5C3C();
          v39 = v21;
          v40 = v22;
          v41 = v23;
          v42 = v24;
          v43 = v25;
          v44 = v26;
          v45 = v27;
          sub_23B0280EC((uint64_t)&__src, (uint64_t)&v46);
          v30[0] = v15;
          v29 = (char *)&loc_23B1A3CF0 + *((int *)qword_23B1A43C0 + (v28 >> 62));
          v30[4] = v11;
          __asm { BR              X10 }
        }
        sub_23B1C7040();
        __break(1u);
        JUMPOUT(0x23B1A43C0);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    JUMPOUT(0x23B1A435CLL);
  }
  sub_23AA8A05C((uint64_t)v14, (uint64_t *)&unk_2542E4320);
  return 0;
}

uint64_t sub_23B1A43E0()
{
  return sub_23B1C5E04();
}

unint64_t sub_23B1A444C()
{
  unint64_t result;

  result = qword_2542E21D0;
  if (!qword_2542E21D0)
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE45A8], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_2542E21D0);
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_23B1A44A8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_23B1C560C();
  if (!result || (result = sub_23B1C5624(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_23B1C5618();
      sub_23B1C61B8();
      sub_23AA7E38C((unint64_t *)&qword_2542DD470, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_23B1C6110();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

_QWORD *sub_23B1A45AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    v7 = type metadata accessor for TelemetrySignposter(0);
    v8 = *(int *)(v7 + 24);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_23B1C5DEC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *((_BYTE *)v4 + *(int *)(v7 + 28)) = *((_BYTE *)a2 + *(int *)(v7 + 28));
    v12 = *(int *)(a3 + 24);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(_QWORD *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
  }
  swift_retain();
  return v4;
}

uint64_t sub_23B1A4680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = type metadata accessor for TelemetrySignposter(0);
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23B1C5DEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(v6 + 28)) = *(_BYTE *)(a2 + *(int *)(v6 + 28));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23B1A4744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = type metadata accessor for TelemetrySignposter(0);
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23B1C5DEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(v6 + 28)) = *(_BYTE *)(a2 + *(int *)(v6 + 28));
  v11 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_23B1A47EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = type metadata accessor for TelemetrySignposter(0);
  v7 = *(int *)(v6 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_23B1C5DEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_BYTE *)(a1 + *(int *)(v6 + 28)) = *(_BYTE *)(a2 + *(int *)(v6 + 28));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23B1A48A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_1Tm(a1, a2, a3, type metadata accessor for TelemetrySignposter);
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;

  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  return (v10 + 1);
}

uint64_t sub_23B1A4928(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_2Tm(a1, a2, a3, a4, type metadata accessor for TelemetrySignposter);
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;
  uint64_t v10;

  result = a5(0);
  v10 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23B1A49AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23B1A49D0(a1, a2, a3, type metadata accessor for TelemetrySignposter);
}

uint64_t sub_23B1A49D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23B1A4A4C()
{
  swift_bridgeObjectRetain();
  return sub_23B1C6E84();
}

void sub_23B1A4A98(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v14[2];
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  __int16 v21;
  char v22;
  __int16 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  int v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[26];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;

  v5 = v4;
  v17 = a3;
  v18 = a4;
  v15 = a2;
  v19 = a1;
  v39 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v14[1] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = type metadata accessor for ItemMetadata();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v20 = 0;
  v22 = 0;
  v21 = 0;
  v23 = 0;
  v29 = 0;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v24 = 0u;
  v30 = 0;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  memset(v34, 0, sizeof(v34));
  v36 = 0;
  v37 = 0;
  v35 = 0;
  v38 = 0;
  sub_23AD66764(v5[*(int *)(v12 + 40)], (uint64_t)&v20);
  sub_23AD66784(v5[*(int *)(v11 + 52)], (uint64_t)&v20);
  v13 = (char *)sub_23B1A4C30 + 4 * byte_23B1E7DC8[*v5];
  v16 = v8;
  __asm { BR              X10 }
}

_QWORD *sub_23B1A4C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *(*v24)@<X0>(uint64_t@<X0>, _DWORD *@<X8>);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t (*v54)@<X0>(uint64_t@<X0>, _DWORD *@<X8>);
  uint64_t v55;
  _QWORD v57[2];
  uint64_t (*v58)@<X0>(uint64_t@<X0>, _DWORD *@<X8>);
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t (*v62)@<X0>(uint64_t@<X0>, _DWORD *@<X8>);
  unint64_t v63;
  _QWORD v64[2];
  _QWORD *(*v65)@<X0>(uint64_t@<X0>, _DWORD *@<X8>);
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *(*v70)@<X0>(uint64_t@<X0>, _DWORD *@<X8>);
  _QWORD *v71;

  if (*(_BYTE *)(v2 + v5[27]))
    v7 = 3;
  else
    v7 = 1;
  *(_DWORD *)(v0 + 112) = v7;
  sub_23AD667C4(*(unsigned __int8 *)(v2 + v5[20]), v0 + 112);
  sub_23AD667D8(*(unsigned __int8 *)(v2 + v5[9]), v0 + 112);
  v8 = v5[21];
  v9 = *(unsigned __int8 *)(v2 + v8);
  sub_23AA9BA80(v2, v4);
  if (v9)
    LOBYTE(v9) = *(_BYTE *)(v4 + v5[12]) ^ 1;
  sub_23AA9F854(v4);
  sub_23AD67488(v9 & 1, v0 + 112);
  *(_QWORD *)(v0 + 312) = qword_23B1E7E88[*(char *)(v2 + v8)];
  *(_QWORD *)(v0 + 232) = *(_QWORD *)(v2 + v5[19]);
  sub_23AD674A8(*(unsigned __int8 *)(v2 + v5[11]), v0 + 112);
  sub_23AD674C8(*(unsigned __int8 *)(v2 + v5[15]), v0 + 112);
  sub_23AD674E8(*(unsigned __int8 *)(v2 + v5[16]), v0 + 112);
  sub_23AD67508(*(unsigned __int8 *)(v2 + v5[28]), v0 + 112);
  sub_23AD67528(*(unsigned __int8 *)(v2 + v5[35]), v0 + 112);
  sub_23AD67548(*(unsigned __int8 *)(v2 + v5[18]), v0 + 112);
  sub_23AD67568(*(unsigned __int8 *)(v2 + v5[23]), v0 + 112);
  sub_23AD67588(*(unsigned __int8 *)(v2 + v5[24]), v0 + 112);
  sub_23AA724E8(*(_QWORD *)(v0 + 56), v0 + 584, &qword_2542E5050);
  if (sub_23AAFCF2C(v0 + 584) != 1)
  {
    v10 = *(_BYTE *)(v0 + 618);
    *(_BYTE *)(v0 + 296) = *(_BYTE *)(v0 + 616);
    *(_BYTE *)(v0 + 297) = v10;
  }
  v11 = *(_DWORD *)(v0 + 20);
  v12 = *(_QWORD *)(v0 + 48);
  v13 = *(_QWORD *)(v0 + 24);
  if (v11 != 6)
    *(_DWORD *)(v0 + 320) = v11;
  if (*(_BYTE *)v2 != 1)
  {
    v14 = *(_QWORD *)(v2 + v5[26]);
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(v2 + v5[25]);
    *(_QWORD *)(v0 + 240) = v14;
  }
  *(_WORD *)(v0 + 120) = *(_WORD *)(v2 + 10);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v15(v3, v2 + v5[7], v6);
  *(_QWORD *)(v0 + 136) = sub_23AD675A8(v3);
  *(_QWORD *)(v0 + 144) = v16;
  v15(v3, v2 + v5[8], v6);
  *(_QWORD *)(v0 + 152) = sub_23AD675A8(v3);
  *(_QWORD *)(v0 + 160) = v17;
  sub_23AA8EFC8(v2 + v5[29], v1, (uint64_t *)&unk_2542E4310);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v1, 1, v6) == 1)
  {
    sub_23AA8A05C(v1, (uint64_t *)&unk_2542E4310);
  }
  else
  {
    v18 = v1;
    v19 = v12;
    v20 = *(_QWORD *)(v0 + 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v20, v18, v6);
    v15(v3, v20, v6);
    *(_QWORD *)(v0 + 168) = sub_23AD675A8(v3);
    *(_QWORD *)(v0 + 176) = v21;
    sub_23AD676B4(v0 + 112);
    v22 = v20;
    v12 = v19;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v22, v6);
  }
  v24 = *(_QWORD *(**)@<X0>(uint64_t@<X0>, _DWORD *@<X8>))(v0 + 32);
  v23 = *(_QWORD **)(v0 + 40);
  v25 = v2 + v5[31];
  if (*(_BYTE *)(v25 + 8))
    v26 = 0;
  else
    v26 = *(_QWORD *)v25;
  *(_QWORD *)(v0 + 184) = v26;
  v27 = *(_QWORD *)(v0 + 56);
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
  {
    v28 = v2 + v5[36];
    if ((*(_BYTE *)(v28 + 4) & 1) != 0)
    {
      v29 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    v28 = v2 + 4;
  }
  v29 = *(_DWORD *)v28;
LABEL_23:
  *(_DWORD *)(v0 + 216) = v29;
  v30 = v2 + v5[34];
  if ((*(_BYTE *)(v30 + 8) & 1) != 0)
    v31 = 0;
  else
    v31 = __ROR8__(*(_QWORD *)v30, 32);
  *(_QWORD *)(v0 + 224) = v31;
  v32 = MEMORY[0x24BDAC7A8](v27);
  v67 = v0 + 112;
  v68 = v32;
  v69 = v2;
  v70 = v24;
  v71 = v23;
  if (v33)
  {
    MEMORY[0x24BDAC7A8](v32);
    v65 = sub_23B1B29C0;
    v66 = v34;
    v37 = sub_23AC3E880((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_23B1B29F4, (uint64_t)v64, v35, v36);
    if (!v12)
      v23 = v37;
  }
  else
  {
    *(_QWORD *)(v0 + 288) = 0;
    sub_23AA724E8(v32, v0 + 336, &qword_2542E5050);
    v38 = sub_23AAFCF2C(v0 + 336);
    v39 = MEMORY[0x24BDAC7A8](v38);
    v64[0] = v0 + 112;
    v64[1] = v2;
    v65 = v24;
    v66 = v23;
    if ((_DWORD)v39 == 1 || !v40)
    {
      *(_QWORD *)(v0 + 304) = 0;
      v45 = (_QWORD *)(v2 + v5[14]);
      v46 = v45[1];
      if (v46)
      {
        *(_QWORD *)(v0 + 96) = *v45;
        *(_QWORD *)(v0 + 104) = v46;
        *(_QWORD *)(v0 + 80) = 47;
        *(_QWORD *)(v0 + 88) = 0xE100000000000000;
        *(_QWORD *)(v0 + 64) = 58;
        *(_QWORD *)(v0 + 72) = 0xE100000000000000;
        v63 = sub_23AAA420C();
        v60 = MEMORY[0x24BEE0D00];
        v61 = v63;
        v39 = sub_23B1C6CF8();
        v48 = v47;
      }
      else
      {
        v48 = 0;
      }
      v49 = MEMORY[0x24BDAC7A8](v39);
      v60 = v0 + 112;
      v61 = v2;
      v62 = (uint64_t (*)@<X0>(uint64_t@<X0>, _DWORD *@<X8>))v24;
      v63 = (unint64_t)v23;
      if (v48)
      {
        MEMORY[0x24BDAC7A8](v49);
        v58 = sub_23B1B2A24;
        v59 = v50;
        v52 = sub_23AC3E880((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_23B1B29F4, (uint64_t)v57, v51, v48);
        if (!v12)
          v23 = v52;
        swift_bridgeObjectRelease();
      }
      else
      {
        *(_QWORD *)(v0 + 248) = 0;
        MEMORY[0x24BDAC7A8](v49);
        v57[0] = v2;
        v57[1] = v53;
        v58 = v54;
        v59 = v23;
        v55 = sub_23B1A869C((void (*)(unsigned int *__return_ptr, _QWORD, _QWORD, uint64_t))sub_23B1B2A38);
        if (!v12)
          v23 = (_QWORD *)v55;
      }
    }
    else
    {
      MEMORY[0x24BDAC7A8](v39);
      v62 = sub_23B1B2A08;
      v63 = v41;
      v44 = sub_23AC3E880((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_23B1B29F4, (uint64_t)&v60, v42, v43);
      if (!v12)
        v23 = v44;
    }
  }
  fpfs_free_metadata_tag_data();
  return v23;
}

void sub_23B1A5240(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[2];
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  __int16 v23;
  char v24;
  __int16 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  char v31;
  int v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[26];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;

  v6 = v5;
  v20 = a4;
  v21 = a1;
  v17 = a2;
  v41 = *MEMORY[0x24BDAC8D0];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23B1C5BDC();
  v18 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v16[0] = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = type metadata accessor for ItemMetadata();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v22 = 0;
  v24 = 0;
  v23 = 0;
  v25 = 0;
  v31 = 0;
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v26 = 0u;
  v32 = 0;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  memset(v36, 0, sizeof(v36));
  v38 = 0;
  v39 = 0;
  v37 = 0;
  v40 = 0;
  sub_23AD66764(v6[*(int *)(v14 + 40)], (uint64_t)&v22);
  sub_23AD66784(v6[*(int *)(v13 + 52)], (uint64_t)&v22);
  v15 = (char *)sub_23B1A53E0 + 4 * byte_23B1E7DCC[*v6];
  v16[1] = a5;
  v19 = a3;
  __asm { BR              X10 }
}

uint64_t sub_23B1A53E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (*(_BYTE *)(v2 + v5[27]))
    v7 = 3;
  else
    v7 = 1;
  *((_DWORD *)v0 + 28) = v7;
  sub_23AD667C4(*(unsigned __int8 *)(v2 + v5[20]), (uint64_t)(v0 + 14));
  sub_23AD667D8(*(unsigned __int8 *)(v2 + v5[9]), (uint64_t)(v0 + 14));
  v8 = v5[21];
  v9 = *(unsigned __int8 *)(v2 + v8);
  sub_23AA9BA80(v2, v4);
  if (v9)
    LOBYTE(v9) = *(_BYTE *)(v4 + v5[12]) ^ 1;
  sub_23AA9F854(v4);
  sub_23AD67488(v9 & 1, (uint64_t)(v0 + 14));
  v0[39] = qword_23B1E7E88[*(char *)(v2 + v8)];
  v0[29] = *(_QWORD *)(v2 + v5[19]);
  sub_23AD674A8(*(unsigned __int8 *)(v2 + v5[11]), (uint64_t)(v0 + 14));
  sub_23AD674C8(*(unsigned __int8 *)(v2 + v5[15]), (uint64_t)(v0 + 14));
  sub_23AD674E8(*(unsigned __int8 *)(v2 + v5[16]), (uint64_t)(v0 + 14));
  sub_23AD67508(*(unsigned __int8 *)(v2 + v5[28]), (uint64_t)(v0 + 14));
  sub_23AD67528(*(unsigned __int8 *)(v2 + v5[35]), (uint64_t)(v0 + 14));
  sub_23AD67548(*(unsigned __int8 *)(v2 + v5[18]), (uint64_t)(v0 + 14));
  sub_23AD67568(*(unsigned __int8 *)(v2 + v5[23]), (uint64_t)(v0 + 14));
  sub_23AD67588(*(unsigned __int8 *)(v2 + v5[24]), (uint64_t)(v0 + 14));
  sub_23AA724E8(v0[7], (uint64_t)(v0 + 73), &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)(v0 + 73)) != 1)
  {
    v10 = *((_BYTE *)v0 + 618);
    *((_BYTE *)v0 + 296) = *((_BYTE *)v0 + 616);
    *((_BYTE *)v0 + 297) = v10;
  }
  v11 = *((_DWORD *)v0 + 7);
  v12 = v0[4];
  if (v11 != 6)
    *((_DWORD *)v0 + 80) = v11;
  if (*(_BYTE *)v2 != 1)
  {
    v13 = *(_QWORD *)(v2 + v5[26]);
    v0[16] = *(_QWORD *)(v2 + v5[25]);
    v0[30] = v13;
  }
  *((_WORD *)v0 + 60) = *(_WORD *)(v2 + 10);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v14(v3, v2 + v5[7], v6);
  v0[17] = sub_23AD675A8(v3);
  v0[18] = v15;
  v14(v3, v2 + v5[8], v6);
  v0[19] = sub_23AD675A8(v3);
  v0[20] = v16;
  sub_23AA8EFC8(v2 + v5[29], v1, (uint64_t *)&unk_2542E4310);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v1, 1, v6) == 1)
  {
    sub_23AA8A05C(v1, (uint64_t *)&unk_2542E4310);
  }
  else
  {
    v17 = *v0;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 + 32))(*v0, v1, v6);
    v14(v3, v17, v6);
    v0[21] = sub_23AD675A8(v3);
    v0[22] = v18;
    sub_23AD676B4((uint64_t)(v0 + 14));
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v17, v6);
  }
  v19 = v2 + v5[31];
  if (*(_BYTE *)(v19 + 8))
    v20 = 0;
  else
    v20 = *(_QWORD *)v19;
  v0[23] = v20;
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
  {
    v21 = v2 + v5[36];
    if ((*(_BYTE *)(v21 + 4) & 1) != 0)
    {
      v22 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    v21 = v2 + 4;
  }
  v22 = *(_DWORD *)v21;
LABEL_23:
  *((_DWORD *)v0 + 54) = v22;
  v23 = v2 + v5[34];
  if ((*(_BYTE *)(v23 + 8) & 1) != 0)
    v24 = 0;
  else
    v24 = __ROR8__(*(_QWORD *)v23, 32);
  v0[28] = v24;
  v25 = MEMORY[0x24BDAC7A8](*(_QWORD *)(v2 + v5[37]));
  v27 = v0[7];
  if (v26)
  {
    sub_23B1A76F0(v25, v26, (uint64_t (*)(_QWORD *))sub_23B1B2478);
  }
  else
  {
    v0[36] = 0;
    sub_23AA724E8(v27, (uint64_t)(v0 + 42), &qword_2542E5050);
    sub_23AAFCF2C((uint64_t)(v0 + 42));
    v28 = MEMORY[0x24BDAC7A8](v0[47]);
    if (v30 == 1 || !v29)
    {
      v0[38] = 0;
      v31 = (uint64_t *)(v2 + v5[14]);
      v32 = v31[1];
      if (v32)
      {
        v0[12] = *v31;
        v0[13] = v32;
        v0[10] = 47;
        v0[11] = 0xE100000000000000;
        v0[8] = 58;
        v0[9] = 0xE100000000000000;
        sub_23AAA420C();
        v33 = sub_23B1C6CF8();
        v35 = v34;
      }
      else
      {
        v33 = 0;
        v35 = 0;
      }
      v36 = MEMORY[0x24BDAC7A8](v33);
      if (v35)
      {
        sub_23B1A76F0(v36, v35, (uint64_t (*)(_QWORD *))sub_23B1B24B4);
        swift_bridgeObjectRelease();
      }
      else
      {
        v0[31] = 0;
        MEMORY[0x24BDAC7A8](v36);
        sub_23B1A8908((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23B1B24C8);
      }
    }
    else
    {
      sub_23B1A76F0(v28, v29, (uint64_t (*)(_QWORD *))sub_23B1B2498);
    }
  }
  return fpfs_free_metadata_tag_data();
}

void sub_23B1A5934(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD v15[2];
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  __int16 v22;
  char v23;
  __int16 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char v30;
  int v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[26];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v6 = v5;
  v18 = a3;
  v19 = a4;
  v16 = a2;
  v20 = a1;
  v40 = *MEMORY[0x24BDAC8D0];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23B1C5BDC();
  v17 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v15[1] = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = type metadata accessor for ItemMetadata();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v21 = 0;
  v23 = 0;
  v22 = 0;
  v24 = 0;
  v30 = 0;
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  v25 = 0u;
  v31 = 0;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  memset(v35, 0, sizeof(v35));
  v37 = 0;
  v38 = 0;
  v36 = 0;
  v39 = 0;
  sub_23AD66764(v6[*(int *)(v13 + 40)], (uint64_t)&v21);
  sub_23AD66784(v6[*(int *)(v12 + 52)], (uint64_t)&v21);
  v14 = (char *)sub_23B1A5AD8 + 4 * byte_23B1E7DD0[*v6];
  v15[0] = a5;
  __asm { BR              X10 }
}

uint64_t sub_23B1A5AD8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  if (*(_BYTE *)(v2 + v5[27]))
    v7 = 3;
  else
    v7 = 1;
  *((_DWORD *)v0 + 32) = v7;
  sub_23AD667C4(*(unsigned __int8 *)(v2 + v5[20]), (uint64_t)(v0 + 16));
  sub_23AD667D8(*(unsigned __int8 *)(v2 + v5[9]), (uint64_t)(v0 + 16));
  v8 = v5[21];
  v9 = *(unsigned __int8 *)(v2 + v8);
  sub_23AA9BA80(v2, v4);
  if (v9)
    LOBYTE(v9) = *(_BYTE *)(v4 + v5[12]) ^ 1;
  sub_23AA9F854(v4);
  sub_23AD67488(v9 & 1, (uint64_t)(v0 + 16));
  v0[41] = qword_23B1E7E88[*(char *)(v2 + v8)];
  v0[31] = *(_QWORD *)(v2 + v5[19]);
  sub_23AD674A8(*(unsigned __int8 *)(v2 + v5[11]), (uint64_t)(v0 + 16));
  sub_23AD674C8(*(unsigned __int8 *)(v2 + v5[15]), (uint64_t)(v0 + 16));
  sub_23AD674E8(*(unsigned __int8 *)(v2 + v5[16]), (uint64_t)(v0 + 16));
  sub_23AD67508(*(unsigned __int8 *)(v2 + v5[28]), (uint64_t)(v0 + 16));
  sub_23AD67528(*(unsigned __int8 *)(v2 + v5[35]), (uint64_t)(v0 + 16));
  sub_23AD67548(*(unsigned __int8 *)(v2 + v5[18]), (uint64_t)(v0 + 16));
  sub_23AD67568(*(unsigned __int8 *)(v2 + v5[23]), (uint64_t)(v0 + 16));
  sub_23AD67588(*(unsigned __int8 *)(v2 + v5[24]), (uint64_t)(v0 + 16));
  sub_23AA724E8(v0[8], (uint64_t)(v0 + 98), &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)(v0 + 98)) != 1)
  {
    v10 = *((_BYTE *)v0 + 818);
    *((_BYTE *)v0 + 312) = *((_BYTE *)v0 + 816);
    *((_BYTE *)v0 + 313) = v10;
  }
  v11 = *((_DWORD *)v0 + 7);
  v12 = v0[4];
  if (v11 != 6)
    *((_DWORD *)v0 + 84) = v11;
  if (*(_BYTE *)v2 != 1)
  {
    v13 = *(_QWORD *)(v2 + v5[26]);
    v0[18] = *(_QWORD *)(v2 + v5[25]);
    v0[32] = v13;
  }
  *((_WORD *)v0 + 68) = *(_WORD *)(v2 + 10);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v14(v3, v2 + v5[7], v6);
  v0[19] = sub_23AD675A8(v3);
  v0[20] = v15;
  v14(v3, v2 + v5[8], v6);
  v0[21] = sub_23AD675A8(v3);
  v0[22] = v16;
  v17 = v1;
  sub_23AA8EFC8(v2 + v5[29], v1, (uint64_t *)&unk_2542E4310);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v1, 1, v6) == 1)
  {
    sub_23AA8A05C(v1, (uint64_t *)&unk_2542E4310);
  }
  else
  {
    v18 = v0[1];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v18, v17, v6);
    v14(v3, v18, v6);
    v0[23] = sub_23AD675A8(v3);
    v0[24] = v19;
    sub_23AD676B4((uint64_t)(v0 + 16));
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v18, v6);
  }
  v20 = v2 + v5[31];
  if (*(_BYTE *)(v20 + 8))
    v21 = 0;
  else
    v21 = *(_QWORD *)v20;
  v0[25] = v21;
  v22 = v0[8];
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
  {
    v23 = v2 + v5[36];
    if ((*(_BYTE *)(v23 + 4) & 1) != 0)
    {
      v24 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    v23 = v2 + 4;
  }
  v24 = *(_DWORD *)v23;
LABEL_23:
  *((_DWORD *)v0 + 58) = v24;
  v25 = v2 + v5[34];
  if ((*(_BYTE *)(v25 + 8) & 1) != 0)
    v26 = 0;
  else
    v26 = __ROR8__(*(_QWORD *)v25, 32);
  v0[30] = v26;
  v27 = MEMORY[0x24BDAC7A8](v22);
  if (!v28)
  {
    v0[38] = 0;
    sub_23AA724E8(v27, (uint64_t)(v0 + 67), &qword_2542E5050);
    v34 = sub_23AAFCF2C((uint64_t)(v0 + 67));
    v35 = MEMORY[0x24BDAC7A8](v34);
    if ((_DWORD)v35 == 1 || !v36)
    {
      v0[40] = 0;
      v40 = (uint64_t *)(v2 + v5[14]);
      v41 = v40[1];
      if (v41)
      {
        v0[14] = *v40;
        v0[15] = v41;
        v0[12] = 47;
        v0[13] = 0xE100000000000000;
        v0[10] = 58;
        v0[11] = 0xE100000000000000;
        sub_23AAA420C();
        v35 = sub_23B1C6CF8();
        v43 = v42;
      }
      else
      {
        v43 = 0;
      }
      v44 = MEMORY[0x24BDAC7A8](v35);
      if (v43)
      {
        MEMORY[0x24BDAC7A8](v44);
        v45 = v0[2];
        sub_23AC3EB54((_QWORD *(*)(__int128 *__return_ptr, _QWORD *))sub_23B1B2E50, v46, v43, (uint64_t)(v0 + 56));
        if (!v45)
        {
          v50 = *((_OWORD *)v0 + 28);
          v33 = v0[58];
          *((_OWORD *)v0 + 3) = *(_OWORD *)(v0 + 59);
          *((_OWORD *)v0 + 4) = v50;
          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v0[33] = 0;
        MEMORY[0x24BDAC7A8](v44);
        v47 = v0[2];
        sub_23B1A8B50((_QWORD *(*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_23B1B2E9C, (uint64_t)(v0 + 50));
        if (!v47)
        {
          v51 = *((_OWORD *)v0 + 25);
          v33 = v0[52];
          *((_OWORD *)v0 + 3) = *(_OWORD *)(v0 + 53);
          *((_OWORD *)v0 + 4) = v51;
          goto LABEL_44;
        }
      }
    }
    else
    {
      MEMORY[0x24BDAC7A8](v35);
      v37 = v0[2];
      sub_23AC3EB54((_QWORD *(*)(__int128 *__return_ptr, _QWORD *))sub_23B1B2E50, v38, v39, (uint64_t)(v0 + 44));
      if (!v37)
      {
        v49 = *((_OWORD *)v0 + 22);
        v33 = v0[46];
        *((_OWORD *)v0 + 3) = *(_OWORD *)(v0 + 47);
        *((_OWORD *)v0 + 4) = v49;
        goto LABEL_44;
      }
    }
    return fpfs_free_metadata_tag_data();
  }
  MEMORY[0x24BDAC7A8](v27);
  v29 = v0[2];
  sub_23AC3EB54((_QWORD *(*)(__int128 *__return_ptr, _QWORD *))sub_23B1B2E50, v30, v31, (uint64_t)(v0 + 62));
  if (v29)
    return fpfs_free_metadata_tag_data();
  v32 = *((_OWORD *)v0 + 31);
  v33 = v0[64];
  *((_OWORD *)v0 + 3) = *(_OWORD *)(v0 + 65);
  *((_OWORD *)v0 + 4) = v32;
LABEL_44:
  result = fpfs_free_metadata_tag_data();
  v52 = *v0;
  *(_OWORD *)v52 = *((_OWORD *)v0 + 4);
  *(_QWORD *)(v52 + 16) = v33;
  *(_OWORD *)(v52 + 24) = *((_OWORD *)v0 + 3);
  return result;
}

uint64_t sub_23B1A6158(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v6;
  _BOOL4 v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return 0;
  v6 = a2 == 2;
  v7 = a1 == (void *)1 && a2 == 2;
  v26 = v7;
  if (a1)
    v6 = 0;
  v25 = v6;
  v27 = SBYTE2(a2);
  v8 = (char *)(swift_bridgeObjectRetain() + 42);
  do
  {
    v9 = *(void **)(v8 - 10);
    v10 = *(v8 - 2);
    v11 = *(v8 - 1);
    v12 = *v8;
    if ((v11 & 1) != 0)
    {
      if ((a2 & 0x100) == 0)
      {
        sub_23AB5692C(*(id *)(v8 - 10), *(v8 - 2), 1);
        sub_23AB5692C(a1, a2, 0);
        v19 = a1;
        v20 = a2;
LABEL_27:
        sub_23AB7C6B4(v19, v20, 0);
        goto LABEL_9;
      }
      if (*(v8 - 2))
      {
        if ((_DWORD)v10 == 1)
        {
          if (a2 != 1 || v9 != a1)
            goto LABEL_35;
        }
        else if (v9)
        {
          if (!v26)
            goto LABEL_35;
        }
        else if (!v25)
        {
          goto LABEL_35;
        }
      }
      else if ((_BYTE)a2 || (_DWORD)v9 != (_DWORD)a1)
      {
LABEL_35:
        sub_23AB5692C(*(id *)(v8 - 10), *(v8 - 2), 1);
        sub_23AB5692C(a1, a2, 1);
        goto LABEL_9;
      }
      sub_23AB5692C(*(id *)(v8 - 10), *(v8 - 2), 1);
      sub_23AB5692C(v9, v10, 1);
      sub_23AB5692C(a1, a2, 1);
    }
    else
    {
      if ((a2 & 0x100) != 0)
      {
        sub_23AB5692C(*(id *)(v8 - 10), *(v8 - 2), 0);
        sub_23AB5692C(a1, a2, 1);

        goto LABEL_9;
      }
      v28 = *v8;
      v13 = sub_23B1C63E0();
      v15 = v14;
      if (v13 == sub_23B1C63E0() && v15 == v16)
        v18 = 1;
      else
        v18 = sub_23B1C7388();
      sub_23AB5692C(v9, v10, 0);
      sub_23AB5692C(v9, v10, 0);
      sub_23AB5692C(v9, v10, 0);
      sub_23AB5692C(v9, v10, 0);
      sub_23AB5692C(a1, a2, 0);
      sub_23AB5692C(a1, a2, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AB7C6B4(a1, a2, 0);

      sub_23AB7C6B4(v9, v10, 0);
      v12 = v28;
      if ((v18 & 1) == 0)
      {
        sub_23AB7C6B4(a1, a2, 0);
        sub_23AB7C6B4(v9, v10, 0);
        v19 = v9;
        v20 = v10;
        goto LABEL_27;
      }
    }
    v21 = qword_23B1E7EB8[v12];
    v22 = qword_23B1E7EB8[v27];
    sub_23AB7C6B4(a1, a2, BYTE1(a2) & 1);
    sub_23AB7C6B4(v9, v10, v11);
    sub_23AB7C6B4(v9, v10, v11);
    if (v21 == v22)
    {
      v23 = 1;
      goto LABEL_40;
    }
LABEL_9:
    v8 += 16;
    --v3;
  }
  while (v3);
  v23 = 0;
LABEL_40:
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_23B1A649C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v6;
  _BOOL4 v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return 0;
  v6 = a2 == 2;
  v7 = a1 == (void *)1 && a2 == 2;
  v26 = v7;
  if (a1)
    v6 = 0;
  v25 = v6;
  v27 = SBYTE2(a2);
  v8 = (char *)(swift_bridgeObjectRetain() + 42);
  do
  {
    v9 = *(void **)(v8 - 10);
    v10 = *(v8 - 2);
    v11 = *(v8 - 1);
    v12 = *v8;
    if ((v11 & 1) != 0)
    {
      if ((a2 & 0x100) == 0)
      {
        sub_23AA88218(*(id *)(v8 - 10), *(v8 - 2), 1);
        sub_23AA88218(a1, a2, 0);

        goto LABEL_9;
      }
      v28 = *v8;
      v13 = sub_23B1C63E0();
      v15 = v14;
      if (v13 == sub_23B1C63E0() && v15 == v16)
        v18 = 1;
      else
        v18 = sub_23B1C7388();
      sub_23AA88218(v9, v10, 1);
      sub_23AA88218(v9, v10, 1);
      sub_23AA88218(v9, v10, 1);
      sub_23AA88218(a1, a2, 1);
      sub_23AA88218(v9, v10, 1);
      sub_23AA88218(a1, a2, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AA862DC(a1, a2, 1);

      sub_23AA862DC(v9, v10, 1);
      v12 = v28;
      if ((v18 & 1) == 0)
      {
        sub_23AA862DC(a1, a2, 1);
        sub_23AA862DC(v9, v10, 1);
        v19 = v9;
        v20 = v10;
        goto LABEL_27;
      }
    }
    else
    {
      if ((a2 & 0x100) != 0)
      {
        sub_23AA88218(*(id *)(v8 - 10), *(v8 - 2), 0);
        sub_23AA88218(a1, a2, 1);
        v19 = a1;
        v20 = a2;
LABEL_27:
        sub_23AA862DC(v19, v20, 1);
        goto LABEL_9;
      }
      if (*(v8 - 2))
      {
        if ((_DWORD)v10 == 1)
        {
          if (a2 != 1 || v9 != a1)
            goto LABEL_35;
        }
        else if (v9)
        {
          if (!v26)
            goto LABEL_35;
        }
        else if (!v25)
        {
          goto LABEL_35;
        }
      }
      else if ((_BYTE)a2 || (_DWORD)v9 != (_DWORD)a1)
      {
LABEL_35:
        sub_23AA88218(*(id *)(v8 - 10), *(v8 - 2), 0);
        sub_23AA88218(a1, a2, 0);
        goto LABEL_9;
      }
      sub_23AA88218(*(id *)(v8 - 10), *(v8 - 2), 0);
      sub_23AA88218(v9, v10, 0);
      sub_23AA88218(a1, a2, 0);
    }
    v21 = qword_23B1E7EB8[v12];
    v22 = qword_23B1E7EB8[v27];
    sub_23AA862DC(a1, a2, BYTE1(a2) & 1);
    sub_23AA862DC(v9, v10, v11);
    sub_23AA862DC(v9, v10, v11);
    if (v21 == v22)
    {
      v23 = 1;
      goto LABEL_40;
    }
LABEL_9:
    v8 += 16;
    --v3;
  }
  while (v3);
  v23 = 0;
LABEL_40:
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_23B1A67E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X8 }
  }
  return 0;
}

uint64_t sub_23B1A7168(uint64_t a1, int a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  _BYTE *v6;

  v5 = *(_QWORD *)(a5 + 16);
  if (v5)
  {
    v6 = (_BYTE *)(a5 + 56);
    do
    {
      if (*((_QWORD *)v6 - 3) == a1 && *((_DWORD *)v6 - 4) == a2)
      {
        if ((*v6 & 1) != 0)
        {
          if ((a4 & 1) != 0)
            return 1;
        }
        else if ((a4 & 1) == 0 && *((_QWORD *)v6 - 1) == a3)
        {
          return 1;
        }
      }
      v6 += 32;
      --v5;
    }
    while (v5);
  }
  return 0;
}

unint64_t sub_23B1A71C4(uint64_t a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char v9;
  uint64_t v10;
  BOOL v11;
  _BOOL4 v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  BOOL v50;
  _BOOL4 v51;
  unint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;

  v5 = *(_QWORD *)(a5 + 16);
  if (!v5)
    return 0;
  v9 = a2;
  v10 = a1;
  v11 = a2 == 2;
  v12 = a1 == 1 && a2 == 2;
  if (a1)
    v11 = 0;
  v50 = v11;
  v51 = v12;
  if ((a4 & 0x2000000000000000) != 0)
    v13 = HIBYTE(a4) & 0xF;
  else
    v13 = a3 & 0xFFFFFFFFFFFFLL;
  v55 = v13;
  v52 = 4 * v13;
  swift_bridgeObjectRetain();
  v14 = (unint64_t *)(a5 + 56);
  v54 = v9;
  v53 = v10;
  v56 = a3;
  while (1)
  {
    v17 = *(v14 - 3);
    v19 = *(v14 - 1);
    v18 = *v14;
    if (!*((_BYTE *)v14 - 16))
      break;
    if (*((_BYTE *)v14 - 16) == 1)
    {
      if (v9 == 1 && v17 == v10)
        goto LABEL_27;
    }
    else if (v17)
    {
      if (v51)
        goto LABEL_27;
    }
    else if (v50)
    {
      goto LABEL_27;
    }
LABEL_14:
    v14 += 4;
    if (!--v5)
    {
      v49 = 0;
LABEL_50:
      swift_bridgeObjectRelease();
      return v49;
    }
  }
  if (v9 || (_DWORD)v17 != (_DWORD)v10)
    goto LABEL_14;
LABEL_27:
  if ((v18 & 0x2000000000000000) != 0)
    v20 = HIBYTE(v18) & 0xF;
  else
    v20 = v19 & 0xFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain();
  if (!v20)
    goto LABEL_38;
  swift_bridgeObjectRetain();
  v21 = sub_23B1C65A8();
  v23 = v22;
  swift_bridgeObjectRelease();
  if (v21 == 12565487 && v23 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  v24 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
  {
LABEL_38:
    swift_bridgeObjectRetain();
    v34 = v18;
    v35 = v56;
    if (!v55)
      goto LABEL_11;
    goto LABEL_39;
  }
LABEL_35:
  swift_bridgeObjectRetain();
  result = sub_23B1C64B8();
  if (4 * v20 >= result >> 14)
  {
    v26 = sub_23B1C65C0();
    v28 = v27;
    v30 = v29;
    v32 = v31;
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x23B85ED8C](v26, v28, v30, v32);
    v34 = v33;
    swift_bridgeObjectRelease();
    v35 = v56;
    if (!v55)
    {
LABEL_11:
      swift_bridgeObjectRetain();
      v15 = a4;
      if (v19 == v35)
        goto LABEL_12;
      goto LABEL_13;
    }
LABEL_39:
    swift_bridgeObjectRetain();
    v36 = sub_23B1C65A8();
    v38 = v37;
    swift_bridgeObjectRelease();
    if (v36 == 12565487 && v38 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v39 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0)
        goto LABEL_11;
    }
    swift_bridgeObjectRetain();
    result = sub_23B1C64B8();
    if (v52 < result >> 14)
      goto LABEL_53;
    v40 = sub_23B1C65C0();
    v42 = v41;
    v44 = v43;
    v46 = v45;
    swift_bridgeObjectRelease();
    v47 = MEMORY[0x23B85ED8C](v40, v42, v44, v46);
    v15 = v48;
    swift_bridgeObjectRelease();
    if (v19 == v47)
    {
LABEL_12:
      if (v34 == v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v49 = 1;
        goto LABEL_50;
      }
    }
LABEL_13:
    v16 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v54;
    v10 = v53;
    if ((v16 & 1) != 0)
    {
      v49 = 1;
      goto LABEL_50;
    }
    goto LABEL_14;
  }
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

BOOL sub_23B1A75EC(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B1A764C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_23B1A766C(uint64_t a1, unint64_t a2, uint64_t a3, const void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  sub_23B1AD8A4(a1, a2, a3, a4, a5 & 0x1FFFFFFFFLL, a6, a7);
  return v14;
}

uint64_t sub_23B1A76F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD *))
{
  _QWORD *v4;
  _QWORD v6[2];

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
    return sub_23B1C6EF0();
  if ((a2 & 0x2000000000000000) != 0)
  {
    v6[0] = a1;
    v6[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    v4 = v6;
  }
  else if ((a1 & 0x1000000000000000) != 0)
  {
    v4 = (_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v4 = (_QWORD *)sub_23B1C6F80();
  }
  return a3(v4);
}

uint64_t sub_23B1A77C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  _QWORD v8[2];

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8F50);
    return sub_23B1C6EF0();
  }
  else
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      v8[0] = a1;
      v8[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      *(_QWORD *)(a3 + 24) = v8;
    }
    else if ((a1 & 0x1000000000000000) != 0)
    {
      *(_QWORD *)(a3 + 24) = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
    }
    else
    {
      v7 = sub_23B1C6F80();
      if (v7)
        *(_QWORD *)(a3 + 24) = v7;
      else
        *(_QWORD *)(a3 + 24) = 0;
    }
    return a4(a3);
  }
}

_QWORD *sub_23B1A78C8(_QWORD *(*a1)(uint64_t *__return_ptr, _QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *result;
  _QWORD v25[3];
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *(*v29)(uint64_t *__return_ptr, _QWORD);
  uint64_t v30;
  char *v31;
  int64_t v32;
  uint64_t v33;
  const char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v29 = a1;
  v5 = sub_23B1C6428();
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a3 + 64);
  v33 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v32 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  v34 = "collaborationIdentifier";
  v35 = 0x800000023B1F8040;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_19;
    }
    v17 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v32)
      goto LABEL_23;
    v18 = *(_QWORD *)(v33 + 8 * v17);
    ++v11;
    if (!v18)
    {
      v11 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_23;
      v18 = *(_QWORD *)(v33 + 8 * v11);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_19:
    v20 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v16);
    v22 = *v20;
    v21 = v20[1];
    if (*v20 != 0xD000000000000015 || v21 != v35)
    {
      v12 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v16);
      v13 = *v12;
      v14 = v12[1];
      if ((sub_23B1C7388() & 1) == 0)
      {
        v36 = v22;
        v37 = v21;
        v25[2] = a2;
        v26 = v14 >> 62;
        swift_bridgeObjectRetain();
        sub_23AAAE668(v13, v14);
        sub_23B1C641C();
        sub_23AAA420C();
        sub_23B1C6CE0();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v28);
        __asm { BR              X9 }
      }
    }
  }
  v19 = v17 + 2;
  if (v19 < v32)
  {
    v18 = *(_QWORD *)(v33 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v11 = v19 + 1;
        if (__OFADD__(v19, 1))
          break;
        if (v11 >= v32)
          goto LABEL_23;
        v18 = *(_QWORD *)(v33 + 8 * v11);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
LABEL_27:
      __break(1u);
      JUMPOUT(0x23B1A7D00);
    }
    v11 = v19;
    goto LABEL_18;
  }
LABEL_23:
  swift_release();
  v23 = v30;
  result = v29(&v38, 0);
  if (!v23)
    return (_QWORD *)v38;
  return result;
}

uint64_t sub_23B1A7D48@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  char *v31;
  int64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v30 = a1;
  v29 = a4;
  v6 = sub_23B1C6428();
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a3 + 64);
  v33 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v32 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  v34 = "collaborationIdentifier";
  v37 = 0x800000023B1F8040;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_19;
    }
    v18 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v32)
      goto LABEL_23;
    v19 = *(_QWORD *)(v33 + 8 * v18);
    ++v12;
    if (!v19)
    {
      v12 = v18 + 1;
      if (v18 + 1 >= v32)
        goto LABEL_23;
      v19 = *(_QWORD *)(v33 + 8 * v12);
      if (!v19)
        break;
    }
LABEL_18:
    v11 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v12 << 6);
LABEL_19:
    v21 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v17);
    v23 = *v21;
    v22 = v21[1];
    if (*v21 != 0xD000000000000015 || v22 != v37)
    {
      v13 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v17);
      v15 = *v13;
      v14 = v13[1];
      if ((sub_23B1C7388() & 1) == 0)
      {
        v35 = v23;
        v36 = v22;
        v25[2] = a2;
        v26 = v14 >> 62;
        swift_bridgeObjectRetain();
        sub_23AAAE668(v15, v14);
        sub_23B1C641C();
        sub_23AAA420C();
        sub_23B1C6CE0();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v28);
        __asm { BR              X9 }
      }
    }
  }
  v20 = v18 + 2;
  if (v20 < v32)
  {
    v19 = *(_QWORD *)(v33 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        v12 = v20 + 1;
        if (__OFADD__(v20, 1))
          break;
        if (v12 >= v32)
          goto LABEL_23;
        v19 = *(_QWORD *)(v33 + 8 * v12);
        ++v20;
        if (v19)
          goto LABEL_18;
      }
LABEL_25:
      __break(1u);
      JUMPOUT(0x23B1A8180);
    }
    v12 = v20;
    goto LABEL_18;
  }
LABEL_23:
  swift_release();
  return v30(0);
}

double sub_23B1A81C8@<D0>(void (*a1)(__int128 *__return_ptr, _QWORD)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  __int128 v26;
  uint64_t v27;
  _QWORD v28[4];
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(__int128 *__return_ptr, _QWORD);
  uint64_t v33;
  char *v34;
  const char *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  double v41;
  __int128 v42;
  unint64_t v43;

  v32 = a1;
  v28[0] = a4;
  v6 = sub_23B1C6428();
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v34 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a3 + 64);
  v36 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v37 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  v35 = "collaborationIdentifier";
  v43 = 0x800000023B1F8040;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_21;
    }
    v18 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v37)
      goto LABEL_25;
    v19 = *(_QWORD *)(v36 + 8 * v18);
    ++v12;
    if (!v19)
    {
      v12 = v18 + 1;
      if (v18 + 1 >= v37)
        goto LABEL_25;
      v19 = *(_QWORD *)(v36 + 8 * v12);
      if (!v19)
      {
        v12 = v18 + 2;
        if (v18 + 2 >= v37)
          goto LABEL_25;
        v19 = *(_QWORD *)(v36 + 8 * v12);
        if (!v19)
          break;
      }
    }
LABEL_20:
    v11 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v12 << 6);
LABEL_21:
    v21 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v17);
    v23 = *v21;
    v22 = v21[1];
    if (*v21 != 0xD000000000000015 || v22 != v43)
    {
      v13 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v17);
      v14 = *v13;
      v15 = v13[1];
      if ((sub_23B1C7388() & 1) == 0)
      {
        v38 = v23;
        v39 = v22;
        v28[3] = a2;
        v29 = v15 >> 62;
        swift_bridgeObjectRetain();
        sub_23AAAE668(v14, v15);
        sub_23B1C641C();
        sub_23AAA420C();
        sub_23B1C6CE0();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v31);
        __asm { BR              X9 }
      }
    }
  }
  v20 = v18 + 3;
  if (v20 < v37)
  {
    v19 = *(_QWORD *)(v36 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        v12 = v20 + 1;
        if (__OFADD__(v20, 1))
          break;
        if (v12 >= v37)
          goto LABEL_25;
        v19 = *(_QWORD *)(v36 + 8 * v12);
        ++v20;
        if (v19)
          goto LABEL_20;
      }
LABEL_29:
      __break(1u);
      JUMPOUT(0x23B1A8654);
    }
    v12 = v20;
    goto LABEL_20;
  }
LABEL_25:
  swift_release();
  v24 = v33;
  v32(&v40, 0);
  if (!v24)
  {
    result = v41;
    v26 = v42;
    v27 = v28[0];
    *(_OWORD *)v28[0] = v40;
    *(double *)(v27 + 16) = result;
    *(_OWORD *)(v27 + 24) = v26;
  }
  return result;
}

uint64_t sub_23B1A869C(void (*a1)(unsigned int *__return_ptr, _QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;

  v3 = v2;
  v8 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ItemMetadata() + 132) + 8);
  if (v5 >> 60 != 15)
    __asm { BR              X10 }
  a1(&v7, 0, 0, 1);
  if (!v2)
    return v7;
  return v3;
}

uint64_t sub_23B1A8908(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  unint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ItemMetadata() + 132) + 8);
  if (v3 >> 60 != 15)
    __asm { BR              X10 }
  return a1(0, 0, 1);
}

_QWORD *sub_23B1A8B50@<X0>(_QWORD *(*a1)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  _QWORD *result;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for ItemMetadata() + 132) + 8);
  if (v6 >> 60 != 15)
    __asm { BR              X10 }
  result = a1(&v10, 0, 0, 1);
  if (!v3)
  {
    v8 = v11;
    v9 = v12;
    *(_OWORD *)a2 = v10;
    *(_QWORD *)(a2 + 16) = v8;
    *(_OWORD *)(a2 + 24) = v9;
  }
  return result;
}

_QWORD *sub_23B1A8E34(uint64_t a1, _QWORD *a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>), _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t (*v27)@<X0>(uint64_t@<X0>, _DWORD *@<X8>);
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t (*v31)@<X0>(uint64_t@<X0>, _DWORD *@<X8>);
  _QWORD *v32;
  _QWORD v33[12];
  _QWORD v34[34];

  v7 = v6;
  a2[22] = a1;
  sub_23AA724E8(a3, (uint64_t)v34, &qword_2542E5050);
  v12 = sub_23AAFCF2C((uint64_t)v34);
  v33[2] = a2;
  v33[3] = a4;
  v33[4] = a5;
  v33[5] = a6;
  if ((_DWORD)v12 == 1 || !v34[6])
  {
    v34[33] = v33;
    a2[24] = 0;
    v16 = type metadata accessor for ItemMetadata();
    v17 = (_QWORD *)((char *)a4 + *(int *)(v16 + 56));
    v18 = v17[1];
    if (v18)
    {
      v33[10] = *v17;
      v33[11] = v18;
      v33[8] = 47;
      v33[9] = 0xE100000000000000;
      v33[6] = 58;
      v33[7] = 0xE100000000000000;
      v32 = (_QWORD *)sub_23AAA420C();
      v29 = (_QWORD *)MEMORY[0x24BEE0D00];
      v30 = v32;
      v16 = sub_23B1C6CF8();
      v20 = v19;
    }
    else
    {
      v20 = 0;
    }
    v21 = MEMORY[0x24BDAC7A8](v16);
    v29 = a2;
    v30 = a4;
    v31 = a5;
    v32 = a6;
    if (v20)
    {
      MEMORY[0x24BDAC7A8](v21);
      v27 = sub_23B1B2A24;
      v28 = v22;
      v7 = sub_23AC3E880((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_23B1B29F4, (uint64_t)v26, v23, v20);
      swift_bridgeObjectRelease();
    }
    else
    {
      a2[17] = 0;
      MEMORY[0x24BDAC7A8](v21);
      v26[0] = a4;
      v26[1] = a2;
      v27 = a5;
      v28 = a6;
      v24 = sub_23B1A869C((void (*)(unsigned int *__return_ptr, _QWORD, _QWORD, uint64_t))sub_23B1B2A38);
      if (!v6)
        return (_QWORD *)v24;
    }
  }
  else
  {
    MEMORY[0x24BDAC7A8](v12);
    v31 = sub_23B1B2A08;
    v32 = v33;
    v15 = sub_23AC3E880((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_23B1B29F4, (uint64_t)&v29, v13, v14);
    if (!v6)
      return v15;
  }
  return v7;
}

uint64_t sub_23B1A90AC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[14];
  uint64_t v18[6];
  uint64_t v19;
  _QWORD *v20;

  a2[22] = a1;
  sub_23AA724E8(a3, (uint64_t)v18, &qword_2542E5050);
  v17[4] = a2;
  v17[5] = a4;
  v17[6] = a5;
  v17[7] = a6;
  if (sub_23AAFCF2C((uint64_t)v18) != 1 && v19)
    return sub_23B1A76F0(v18[5], v19, (uint64_t (*)(_QWORD *))sub_23B1B3210);
  v20 = v17;
  a2[24] = 0;
  v11 = (_QWORD *)(a4 + *(int *)(type metadata accessor for ItemMetadata() + 56));
  v12 = v11[1];
  if (v12)
  {
    v17[12] = *v11;
    v17[13] = v12;
    v17[10] = 47;
    v17[11] = 0xE100000000000000;
    v17[8] = 58;
    v17[9] = 0xE100000000000000;
    sub_23AAA420C();
    v13 = sub_23B1C6CF8();
    v15 = v14;
  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  v17[1] = v17;
  v16 = MEMORY[0x24BDAC7A8](v13);
  if (v15)
  {
    sub_23B1A76F0(v16, v15, (uint64_t (*)(_QWORD *))sub_23B1B24B4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    a2[17] = 0;
    MEMORY[0x24BDAC7A8](v16);
    return sub_23B1A8908((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23B1B24C8);
  }
}

uint64_t sub_23B1A92B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[15];
  _QWORD v30[5];
  _QWORD v31[5];
  _QWORD v32[5];
  _QWORD v33[32];

  a2[22] = a1;
  sub_23AA724E8(a3, (uint64_t)v33, &qword_2542E5050);
  v13 = sub_23AAFCF2C((uint64_t)v33);
  v29[4] = a2;
  v29[5] = a4;
  v29[6] = a5;
  v29[7] = a6;
  if ((_DWORD)v13 != 1 && v33[6])
  {
    MEMORY[0x24BDAC7A8](v13);
    result = (uint64_t)sub_23AC3EB54((_QWORD *(*)(__int128 *__return_ptr, _QWORD *))sub_23B1B2E50, v14, v15, (uint64_t)v32);
    if (v7)
      return result;
    v22 = v32[0];
    v23 = v32[1];
    v24 = v32[2];
    v25 = v32[3];
    v26 = v32[4];
LABEL_16:
    *a7 = v22;
    a7[1] = v23;
    a7[2] = v24;
    a7[3] = v25;
    a7[4] = v26;
    return result;
  }
  v29[1] = v29;
  a2[24] = 0;
  v17 = type metadata accessor for ItemMetadata();
  v18 = (_QWORD *)(a4 + *(int *)(v17 + 56));
  v19 = v18[1];
  if (v19)
  {
    v29[13] = *v18;
    v29[14] = v19;
    v29[11] = 47;
    v29[12] = 0xE100000000000000;
    v29[9] = 58;
    v29[10] = 0xE100000000000000;
    sub_23AAA420C();
    v17 = sub_23B1C6CF8();
    v21 = v20;
  }
  else
  {
    v21 = 0;
  }
  v27 = MEMORY[0x24BDAC7A8](v17);
  if (v21)
  {
    MEMORY[0x24BDAC7A8](v27);
    sub_23AC3EB54((_QWORD *(*)(__int128 *__return_ptr, _QWORD *))sub_23B1B2E50, v28, v21, (uint64_t)v31);
    if (v7)
      return swift_bridgeObjectRelease();
    v22 = v31[0];
    v23 = v31[1];
    v24 = v31[2];
    v25 = v31[3];
    v26 = v31[4];
    result = swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  a2[17] = 0;
  MEMORY[0x24BDAC7A8](v27);
  result = (uint64_t)sub_23B1A8B50((_QWORD *(*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_23B1B2E9C, (uint64_t)v30);
  if (!v7)
  {
    v22 = v30[0];
    v23 = v30[1];
    v24 = v30[2];
    v25 = v30[3];
    v26 = v30[4];
    goto LABEL_16;
  }
  return result;
}

_QWORD *sub_23B1A9568(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>), unint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t (*v21)@<X0>(uint64_t@<X0>, _DWORD *@<X8>);
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)@<X0>(uint64_t@<X0>, _DWORD *@<X8>);
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *(_QWORD *)(a2 + 192) = a1;
  v10 = type metadata accessor for ItemMetadata();
  v11 = (_QWORD *)((char *)a3 + *(int *)(v10 + 56));
  v12 = v11[1];
  if (v12)
  {
    v31 = *v11;
    v32 = v12;
    v29 = 47;
    v30 = 0xE100000000000000;
    v27 = 58;
    v28 = 0xE100000000000000;
    v26 = sub_23AAA420C();
    v23 = MEMORY[0x24BEE0D00];
    v24 = (_QWORD *)v26;
    v10 = sub_23B1C6CF8();
    v14 = v13;
  }
  else
  {
    v14 = 0;
  }
  v15 = MEMORY[0x24BDAC7A8](v10);
  v23 = a2;
  v24 = a3;
  v25 = a4;
  v26 = a5;
  if (v14)
  {
    MEMORY[0x24BDAC7A8](v15);
    v21 = sub_23B1B2A24;
    v22 = v16;
    a3 = sub_23AC3E880((_QWORD *(*)(unsigned int *__return_ptr, _QWORD *))sub_23B1B29F4, (uint64_t)v20, v17, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 136) = 0;
    MEMORY[0x24BDAC7A8](v15);
    v20[0] = a3;
    v20[1] = a2;
    v21 = a4;
    v22 = a5;
    v18 = sub_23B1A869C((void (*)(unsigned int *__return_ptr, _QWORD, _QWORD, uint64_t))sub_23B1B2A38);
    if (!v5)
      return (_QWORD *)v18;
  }
  return a3;
}

uint64_t sub_23B1A972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(a2 + 192) = a1;
  if (*(_QWORD *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 56) + 8))
  {
    sub_23AAA420C();
    v4 = sub_23B1C6CF8();
    v6 = v5;
  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = MEMORY[0x24BDAC7A8](v4);
  if (v6)
  {
    sub_23B1A76F0(v7, v6, (uint64_t (*)(_QWORD *))sub_23B1B24B4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 136) = 0;
    MEMORY[0x24BDAC7A8](v7);
    return sub_23B1A8908((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23B1B24C8);
  }
}

uint64_t sub_23B1A98B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;

  *(_QWORD *)(a2 + 192) = a1;
  v8 = type metadata accessor for ItemMetadata();
  if (*(_QWORD *)(a3 + *(int *)(v8 + 56) + 8))
  {
    sub_23AAA420C();
    v8 = sub_23B1C6CF8();
    v10 = v9;
  }
  else
  {
    v10 = 0;
  }
  v11 = MEMORY[0x24BDAC7A8](v8);
  if (v10)
  {
    MEMORY[0x24BDAC7A8](v11);
    sub_23AC3EB54((_QWORD *(*)(__int128 *__return_ptr, _QWORD *))sub_23B1B2E50, v12, v10, (uint64_t)&v22);
    if (v4)
      return swift_bridgeObjectRelease();
    v14 = v23;
    v17 = v24;
    v18 = v22;
    result = swift_bridgeObjectRelease();
    v16 = v17;
    v15 = v18;
    goto LABEL_11;
  }
  *(_QWORD *)(a2 + 136) = 0;
  MEMORY[0x24BDAC7A8](v11);
  result = (uint64_t)sub_23B1A8B50((_QWORD *(*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_23B1B2E9C, (uint64_t)&v19);
  if (!v4)
  {
    v15 = v19;
    v14 = v20;
    v16 = v21;
LABEL_11:
    *(_OWORD *)a4 = v15;
    *(_QWORD *)(a4 + 16) = v14;
    *(_OWORD *)(a4 + 24) = v16;
  }
  return result;
}

uint64_t sub_23B1A9AB0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[6];
  _QWORD aBlock[6];

  v16[2] = a2;
  v16[3] = a1;
  v16[4] = a3;
  v16[5] = a4;
  v9 = type metadata accessor for ItemMetadata();
  v10 = *(_QWORD *)(a1 + *(int *)(v9 + 128));
  if (v10)
    return sub_23B1A7D48(sub_23B1B24DC, (uint64_t)v16, v10, a5);
  *(_QWORD *)(a2 + 160) = 0;
  v12 = *(_QWORD *)(a1 + *(int *)(v9 + 120));
  if (!v12)
    return a3(a2);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  aBlock[4] = sub_23AD67840;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B135DF8;
  aBlock[3] = &block_descriptor_72_0;
  v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  fpfs_serialize_tags();
  _Block_release(v15);
  a3(a2);
  return swift_release();
}

_QWORD *sub_23B1A9C30(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD *result;
  _QWORD v12[6];
  uint64_t v13;

  *(_QWORD *)(a2 + 160) = a1;
  v7 = *(_QWORD *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 120));
  if (v7)
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = 0;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v8;
    *(_QWORD *)(v9 + 24) = v7;
    v12[4] = sub_23B1B32F8;
    v12[5] = v9;
    v12[0] = MEMORY[0x24BDAC760];
    v12[1] = 1107296256;
    v12[2] = sub_23B135DF8;
    v12[3] = &block_descriptor_127;
    v10 = _Block_copy(v12);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    fpfs_serialize_tags();
    _Block_release(v10);
    a4(&v13, a2);
    result = (_QWORD *)swift_release();
    if (v4)
      return result;
    return (_QWORD *)v13;
  }
  result = ((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))a4)(&v13, a2);
  if (!v4)
    return (_QWORD *)v13;
  return result;
}

uint64_t sub_23B1A9D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[6];

  *(_QWORD *)(a2 + 160) = a1;
  v6 = *(_QWORD *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 120));
  if (!v6)
    return a4(a2);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[4] = sub_23B1B32F8;
  v11[5] = v8;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_23B135DF8;
  v11[3] = &block_descriptor_80_1;
  v9 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  fpfs_serialize_tags();
  _Block_release(v9);
  a4(a2);
  return swift_release();
}

_QWORD *sub_23B1A9EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(__int128 *__return_ptr, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *result;
  uint64_t v14;
  __int128 v15;
  _QWORD v16[6];
  __int128 v17;
  uint64_t v18;
  __int128 v19;

  *(_QWORD *)(a2 + 160) = a1;
  v9 = *(_QWORD *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 120));
  if (v9)
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = 0;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v10;
    *(_QWORD *)(v11 + 24) = v9;
    v16[4] = sub_23B1B32F8;
    v16[5] = v11;
    v16[0] = MEMORY[0x24BDAC760];
    v16[1] = 1107296256;
    v16[2] = sub_23B135DF8;
    v16[3] = &block_descriptor_167_1;
    v12 = _Block_copy(v16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    fpfs_serialize_tags();
    _Block_release(v12);
    a4(&v17, a2);
    result = (_QWORD *)swift_release();
    if (v5)
      return result;
    goto LABEL_3;
  }
  result = ((_QWORD *(*)(__int128 *__return_ptr, uint64_t))a4)(&v17, a2);
  if (!v5)
  {
LABEL_3:
    v14 = v18;
    v15 = v19;
    *(_OWORD *)a5 = v17;
    *(_QWORD *)(a5 + 16) = v14;
    *(_OWORD *)(a5 + 24) = v15;
  }
  return result;
}

void sub_23B1AA030()
{
  uint64_t v0;

  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B18E8);
  if (v0)

  else
    __break(1u);
}

void sub_23B1AA0D0(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  int v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id *v35;
  id v36;

  v25 = a6;
  v24 = a7;
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v23 - v16;
  v36 = 0;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  v27 = a3;
  v28 = a4;
  v29 = BYTE4(a4) & 1;
  v30 = a1;
  v31 = a2;
  v32 = v17;
  v20 = v26;
  v33 = a5;
  v34 = v25;
  v35 = &v36;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2978);
  if (v20)
    goto LABEL_6;
  v21 = v24;
  if (v36)
  {
    v22 = v36;
    swift_willThrow();
LABEL_6:
    sub_23AA8A05C((uint64_t)v17, qword_2542E5250);

    return;
  }
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v15, qword_2542E5250);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) != 1)
  {
    sub_23AA724E8((uint64_t)v15, v21, &qword_2542E72C0);
    goto LABEL_6;
  }
  __break(1u);
}

void sub_23B1AA280(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char v29;
  int v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id *v35;
  id v36;

  v25 = a6;
  v24 = a7;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v23 - v16;
  v36 = 0;
  v18 = type metadata accessor for VFSItem(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  v27 = a3;
  v28 = a4;
  v29 = BYTE4(a4) & 1;
  v30 = a1;
  v31 = a2;
  v32 = v17;
  v20 = v26;
  v33 = a5;
  v34 = v25;
  v35 = &v36;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2B68);
  if (v20)
    goto LABEL_6;
  v21 = v24;
  if (v36)
  {
    v22 = v36;
    swift_willThrow();
LABEL_6:
    sub_23AA8A05C((uint64_t)v17, &qword_2542E72C0);

    return;
  }
  sub_23AA8EFC8((uint64_t)v17, (uint64_t)v15, &qword_2542E72C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) != 1)
  {
    sub_23AA94050((uint64_t)v15, v21, type metadata accessor for VFSItem);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_23B1AA42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[7];
  int v19;
  char v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  aBlock[6] = a1;
  v19 = a2;
  v20 = BYTE4(a2) & 1;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = a8;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B1B194C;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA698DC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_11_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_fgetfileattrs();
  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return v15;
}

uint64_t sub_23B1AA5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[7];
  int v19;
  char v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  aBlock[6] = a1;
  v19 = a2;
  v20 = BYTE4(a2) & 1;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = a8;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B1B29A4;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_117_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_fgetfileattrs();
  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return v15;
}

uint64_t sub_23B1AA74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char isEscapingClosureAtFileLocation;
  _QWORD aBlock[7];
  int v19;
  char v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  aBlock[6] = a1;
  v19 = a2;
  v20 = BYTE4(a2) & 1;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a6;
  v12[4] = a7;
  v12[5] = a8;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23B1B2BEC;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_23AA8A65C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_146_1;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v15 = fpfs_fgetfileattrs();
  _Block_release(v14);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return v15;
}

void sub_23B1AA8DC(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  void *v5;
  uint64_t v10;
  int v11;
  id v12;
  char v13;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unint64_t v20;

  v19 = 0x656372756F736572;
  v20 = 0xEA00000000002F73;
  sub_23B1C64F4();
  v10 = v4 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v11 = *(_DWORD *)(v10 + 12);
  v15 = a3;
  v16 = a1;
  v17 = a2;
  sub_23ADA9E50(v11, 0x656372756F736572, 0xEA00000000002F73, 0x200000, 0, 0, (uint64_t)sub_23AD676F0, (uint64_t)v14, a4, a3);
  if (v5)
  {
    swift_bridgeObjectRelease();
    v12 = v5;
    v18 = sub_23B1C54F8();
    sub_23AB6CD48();
    v13 = sub_23B1C575C();

    if ((v13 & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 1, 1, a3);

    }
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, 0, 1, a3);
  }
}

void sub_23B1AAA50()
{
  void *v0;
  id v1;
  char v2;

  sub_23B1C64F4();
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B3030);
  if (v0)
  {
    swift_bridgeObjectRelease();
    v1 = v0;
    sub_23B1C54F8();
    sub_23AB6CD48();
    v2 = sub_23B1C575C();

    if ((v2 & 1) != 0)
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23B1AAB2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_root;
  v2 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  _Block_release(*(const void **)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle + 56));

  swift_unknownObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E77E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  _Block_release(*(const void **)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext));

  return v0;
}

__n128 sub_23B1AABF8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  const void *v8;
  int v9;
  char v10;
  uint64_t v11;
  __n128 result;
  __n128 v13;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle);
  swift_beginAccess();
  v4 = *v3;
  v5 = *((_DWORD *)v3 + 4);
  v13 = *(__n128 *)(v3 + 3);
  v6 = v3[5];
  v7 = v3[6];
  v8 = (const void *)v3[7];
  v9 = *((_DWORD *)v3 + 16);
  v10 = *((_BYTE *)v3 + 68);
  v11 = v3[1];
  _Block_copy(v8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v11;
  *(_DWORD *)(a1 + 16) = v5;
  result = v13;
  *(__n128 *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_DWORD *)(a1 + 64) = v9;
  *(_BYTE *)(a1 + 68) = v10;
  return result;
}

uint64_t sub_23B1AACB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  _QWORD v12[2];

  v2 = sub_23B1C60A4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_activated) = 1;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1ADDC0);
  if (!v1)
  {
    sub_23B1AB3A4();
    sub_23AA9F52C(0, (unint64_t *)&qword_2542E7520);
    v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deferredWQ);
    v8 = sub_23B1C6B90();
    v9 = OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource;
    *(_QWORD *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource) = v8;
    swift_unknownObjectRelease();
    if (*(_QWORD *)(v0 + v9))
    {
      swift_getObjectType();
      v12[1] = v7;
      swift_unknownObjectRetain();
      sub_23B1C605C();
      v10 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_23AA78928(0, (uint64_t)v5, (uint64_t)sub_23B1ADF64, v10);
      swift_unknownObjectRelease();
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
      if (*(_QWORD *)(v0 + v9))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_23B1C6BCC();
        swift_unknownObjectRelease();
      }
    }
    *(_BYTE *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(_QWORD *)(v0 + v9))
    {
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      MEMORY[0x23B85F548](1, ObjectType);
      swift_unknownObjectRelease();
    }
    swift_retain();
    sub_23AA814FC(0, (uint64_t)"enableDirstat()", 15, 2, (uint64_t)sub_23B1AE1A0, v0);
    return swift_release();
  }
  return result;
}

void sub_23B1AAEF8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B1C6BCC();
    swift_unknownObjectRelease();
    if (*(_QWORD *)(v0 + v1))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_23B1C6BA8();
      swift_unknownObjectRelease();
    }
  }
  *(_QWORD *)(v0 + v1) = 0;
  swift_unknownObjectRelease();
  sub_23AC494B4(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_23B1AE224, v0);
}

uint64_t sub_23B1AAFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  unsigned __int8 *v9;
  char v10;
  uint64_t v11;

  v1 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_23B1C60EC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deferredWQ);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE5610], v2);
  v7 = v6;
  LOBYTE(v6) = sub_23B1C6104();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_invalidated) & 1) == 0)
    {
      v9 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy);
      do
        __ldxr(v9);
      while (__stxr(0, v9));
      MEMORY[0x24BDAC7A8](result);
      *(&v11 - 2) = v0;
      *((_BYTE *)&v11 - 8) = v10;
      return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B3014);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B1AB298(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  NSObject *v5;
  void *v6;
  _QWORD v7[6];

  *(_BYTE *)(v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = result;
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
  {
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    MEMORY[0x23B85F548](1, ObjectType);
    result = swift_unknownObjectRelease();
  }
  if ((a2 & 1) != 0)
  {
    v5 = *(NSObject **)(v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deferredWQ);
    v7[4] = nullsub_1;
    v7[5] = 0;
    v7[0] = MEMORY[0x24BDAC760];
    v7[1] = 1107296256;
    v7[2] = sub_23B1A764C;
    v7[3] = &block_descriptor_42;
    v6 = _Block_copy(v7);
    swift_release();
    dispatch_sync(v5, v6);
    _Block_release(v6);
    result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_23B1AB3A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  const __CFURL *v15;
  int v16;
  uint64_t (*v17)(char *, uint64_t);
  CFErrorRef v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __CFError *v22;
  void *v23;
  __CFError **v24;
  id v25;
  char *v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  id v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  _QWORD *v45;
  id v46;
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  _BOOL4 v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  void *v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  os_log_t v59;
  _QWORD v60[2];
  _QWORD *v61;
  uint8_t *v62;
  os_log_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  CFErrorRef error[3];

  error[1] = *(CFErrorRef *)MEMORY[0x24BDAC8D0];
  v1 = sub_23B1C5E4C();
  v71 = *(_QWORD *)(v1 - 8);
  v72 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v69 = (char *)v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v70 = (char *)v60 - v4;
  v5 = sub_23B1C5A08();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5750();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5744();
  sub_23B1C5714();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_root, v5);
  v13 = v73;
  sub_23B1C593C();
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v64 = v0;
  v65 = v6;
  v67 = v12;
  v68 = v5;
  v66 = 0;
  v73 = v9;
  error[0] = 0;
  v15 = (const __CFURL *)sub_23B1C5954();
  v16 = CFURLSetResourcePropertyForKey(v15, (CFStringRef)*MEMORY[0x24BDBD218], (CFTypeRef)*MEMORY[0x24BDBD270], error);

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v8, v68);
    v17 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    return v17(v67, v73);
  }
  v18 = error[0];
  v19 = v10;
  v20 = v8;
  v21 = v67;
  if (error[0])
  {
    v63 = (os_log_t)v10;
    v69 = v20;
    type metadata accessor for CFError(0);
    sub_23AA7E38C((unint64_t *)&unk_2569E8F60, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x24BDCFD90]);
    v22 = v18;
    v23 = (void *)swift_allocError();
    *v24 = v22;
    v25 = (id)fpfs_current_or_default_log();
    v26 = v70;
    sub_23B1C5E58();
    swift_retain();
    v27 = v23;
    swift_retain();
    v28 = v23;
    v29 = sub_23B1C5E40();
    v30 = sub_23B1C6AA0();
    v31 = v30;
    v32 = os_log_type_enabled(v29, v30);
    v33 = v68;
    v34 = v72;
    if (v32)
    {
      v35 = swift_slowAlloc();
      v61 = (_QWORD *)swift_slowAlloc();
      v76 = swift_slowAlloc();
      LODWORD(v62) = v31;
      v36 = v76;
      *(_DWORD *)v35 = 136315394;
      v60[1] = v35 + 4;
      v37 = v21;
      v38 = (void *)sub_23B1C5954();
      v39 = objc_msgSend(v38, sel_fp_shortDescription);

      v40 = sub_23B1C63E0();
      v41 = v23;
      v43 = v42;

      v75 = sub_23AABEC68(v40, v43, &v76);
      sub_23B1C6CBC();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2112;
      swift_getErrorValue();
      v44 = sub_23B0D9CF0(v74);
      v75 = (uint64_t)v44;
      sub_23B1C6CBC();
      v45 = v61;
      *v61 = v44;

      _os_log_impl(&dword_23AA66000, v29, (os_log_type_t)v62, "Failed to set _kCFURLIsExcludedFromCloudBackupKey on %s: %@", (uint8_t *)v35, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v45, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v36, -1, -1);
      MEMORY[0x23B8614BC](v35, -1, -1);

      (*(void (**)(char *, uint64_t))(v71 + 8))(v70, v72);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v69, v68);
      return ((uint64_t (*)(char *, uint64_t))v63[1].isa)(v37, v73);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v26, v34);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v69, v33);
      return ((uint64_t (*)(char *, uint64_t))v63[1].isa)(v21, v73);
    }
  }
  else
  {
    v46 = (id)fpfs_current_or_default_log();
    v47 = v69;
    sub_23B1C5E58();
    swift_retain_n();
    v48 = sub_23B1C5E40();
    v49 = sub_23B1C6AA0();
    LODWORD(v70) = v49;
    v50 = os_log_type_enabled(v48, v49);
    v51 = v68;
    if (v50)
    {
      v63 = v48;
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v76 = v53;
      *(_DWORD *)v52 = 136315138;
      v62 = v52 + 4;
      v54 = (void *)sub_23B1C5954();
      v55 = objc_msgSend(v54, sel_fp_shortDescription);

      v56 = sub_23B1C63E0();
      v58 = v57;

      v75 = sub_23AABEC68(v56, v58, &v76);
      sub_23B1C6CBC();
      swift_release_n();
      swift_bridgeObjectRelease();
      v59 = v63;
      _os_log_impl(&dword_23AA66000, v63, (os_log_type_t)v70, "Failed to set _kCFURLIsExcludedFromCloudBackupKey on %s", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v53, -1, -1);
      MEMORY[0x23B8614BC](v52, -1, -1);

      (*(void (**)(char *, uint64_t))(v71 + 8))(v69, v72);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v20, v68);
      v17 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
      return v17(v67, v73);
    }
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v71 + 8))(v47, v72);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v20, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v73);
  }
}

void sub_23B1ABAE8(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, char a10)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  id v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t ObjectType;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t inited;
  uint64_t v45;
  _OWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v12 = v10;
  v50 = a8;
  v49 = a7;
  v48 = a6;
  v47 = a5;
  *(_QWORD *)&v51 = a4;
  v46 = a9;
  v60 = *MEMORY[0x24BDAC8D0];
  v16 = sub_23B1C5570();
  *(_QWORD *)&v52 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a3[1];
  v20 = v10 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  v21 = swift_beginAccess();
  if (v19 != *(_QWORD *)(v20 + 32))
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/wharf/DocumentWharf.swift", 98, 2, 298);
  v22 = a3[3];
  v56[0] = *a3;
  v56[1] = v19;
  v57 = a3[2];
  v58 = v22;
  v59 = a3[4];
  MEMORY[0x24BDAC7A8](v21);
  *((_DWORD *)&v45 - 4) = a2;
  *(&v45 - 1) = (uint64_t)v56;
  v23 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2D14);
  if (v11)
  {
    v24 = v11;
    LODWORD(v53) = sub_23B1C5540();
    sub_23AB6CD48();
    v25 = sub_23B1C575C();

    if ((v25 & 1) == 0)
    {
      v26 = v11;
      LODWORD(v53) = sub_23B1C54E0();
      v27 = sub_23B1C575C();

      if ((v27 & 1) == 0)
      {
        *(_BYTE *)(v12 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
        if (!*(_QWORD *)(v12 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
          return;
        goto LABEL_14;
      }
    }

  }
  if ((_DWORD)v57 == *(_DWORD *)(a1 + 32) && v56[0] == *(_QWORD *)(a1 + 16) && HIDWORD(v57) == *(_DWORD *)(a1 + 36))
  {
    MEMORY[0x24BDAC7A8](v23);
    *(&v45 - 14) = v47;
    *(&v45 - 13) = v28;
    *(&v45 - 12) = (uint64_t)a3;
    *(&v45 - 11) = (uint64_t)v56;
    v29 = v49;
    *(&v45 - 10) = v48;
    *(&v45 - 9) = v29;
    *(&v45 - 8) = v50;
    *((_BYTE *)&v45 - 56) = a10;
    *((_BYTE *)&v45 - 55) = v30 & 1;
    *(&v45 - 6) = v12;
    *((_DWORD *)&v45 - 10) = a2;
    *(&v45 - 4) = v32;
    *(&v45 - 3) = v31;
    *((_DWORD *)&v45 - 4) = v33;
    sub_23B1C59B4();
    v34 = v53;
    v35 = v54;
    v36 = v55;
    *(_BYTE *)(v12 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(_QWORD *)(v12 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      v52 = v34;
      v51 = v36;
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      MEMORY[0x23B85F548](1, ObjectType);
      swift_unknownObjectRelease();
      v36 = v51;
      v34 = v52;
    }
    v38 = v46;
    *v46 = v34;
    *((_QWORD *)v38 + 2) = v35;
    *(_OWORD *)((char *)v38 + 24) = v36;
    return;
  }
  MEMORY[0x24BDAC7A8](v23);
  *(&v45 - 4) = v12;
  *((_DWORD *)&v45 - 6) = 1;
  *(&v45 - 2) = v39;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC27A04);
  v41 = OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy;
  *(_BYTE *)(v12 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
  v42 = OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource;
  if (*(_QWORD *)(v12 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
  {
    v43 = swift_getObjectType();
    swift_unknownObjectRetain();
    MEMORY[0x23B85F548](1, v43);
    swift_unknownObjectRelease();
  }
  LODWORD(v53) = 70;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
  *(_QWORD *)(inited + 32) = 0x6E6F73616572;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0xD000000000000028;
  *(_QWORD *)(inited + 56) = 0x800000023B21FD50;
  sub_23AAE9EB4(inited);
  sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
  sub_23B1C5864();
  sub_23B1C5558();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v16);
  swift_willThrow();
  *(_BYTE *)(v12 + v41) = 0;
  if (*(_QWORD *)(v12 + v42))
  {
LABEL_14:
    v40 = swift_getObjectType();
    swift_unknownObjectRetain();
    MEMORY[0x23B85F548](1, v40);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_23B1AC060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(_QWORD)@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  useconds_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t result;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  char v41;
  void *v42;
  id v43;
  char v44;
  void (**v45)(char *, uint64_t);
  void *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t *v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  void *v68;
  char v69;
  char v70;
  _QWORD v71[2];
  char v72;
  uint64_t v73;
  void (*v74)(_QWORD);
  uint64_t v75;
  void *v76;
  __int128 v77;
  unint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  __int128 v81;
  char v82;
  uint64_t v83;

  v53[1] = a8;
  v83 = *MEMORY[0x24BDAC8D0];
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2950);
  MEMORY[0x24BDAC7A8](v54);
  v55 = (_QWORD *)((char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = sub_23B1C5570();
  v57 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v58 = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a4;
  v73 = a4;
  v74 = a5;
  v56 = a5;
  v17 = a2;
  v61 = a6;
  v75 = a6;
  v76 = a7;
  v62 = a7;
  v66 = a3;
  v65 = a3 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v64 = &v82;
  v63 = &v79;
  v18 = 1000;
  v53[0] = MEMORY[0x24BEE4AE0] + 8;
  while (1)
  {
    v69 = 0;
    v19 = *(_QWORD *)(a1 + 40);
    v20 = *(_QWORD *)(a1 + 48);
    v21 = *(unsigned int *)(v65 + 8);
    v22 = MEMORY[0x24BDAC7A8](&v81);
    v53[-4] = &v69;
    v53[-3] = v66;
    v53[-2] = sub_23B1B3118;
    v53[-1] = &v72;
    v23 = MEMORY[0x24BDAC7A8](v22);
    LODWORD(v53[-4]) = v21;
    HIDWORD(v53[-4]) = v17;
    LODWORD(v53[-3]) = 0;
    v53[-2] = sub_23B1B3238;
    v53[-1] = &v53[-6];
    v28 = v64;
    *(_QWORD *)v64 = 0;
    *((_QWORD *)v28 + 1) = 0;
    *(_QWORD *)&v81 = v24;
    *((_QWORD *)&v81 + 1) = v25;
    *(_DWORD *)(v23 + 16) = v26;
    *(_DWORD *)(v23 + 20) = v27;
    if (!v20)
      break;
    v67 = v53;
    v29 = (_QWORD *)MEMORY[0x24BDAC7A8](v23);
    v53[-4] = v29;
    v53[-3] = sub_23B1B30F0;
    v53[-2] = v30;
    if ((v20 & 0x1000000000000000) != 0)
      goto LABEL_17;
    if ((v20 & 0x2000000000000000) != 0)
    {
      v71[0] = v19;
      v71[1] = v20 & 0xFFFFFFFFFFFFFFLL;
      v29[3] = v71;
      v70 = 1;
      v77 = v81;
      v78 = v29[2];
      v79 = v71;
      v80 = v29[4];
      swift_bridgeObjectRetain();
      v38 = v21;
      v39 = v68;
      result = sub_23B0E1B48((uint64_t)&v77, v38, v17, 0, (uint64_t)&v70, (uint64_t)sub_23B1B3238, (uint64_t)&v53[-6]);
      v34 = v39;
      if (!v39)
      {
        if ((v70 & 1) == 0)
          goto LABEL_32;
        __break(1u);
LABEL_31:
        if ((v71[0] & 1) == 0)
        {
LABEL_32:
          swift_release();
          swift_bridgeObjectRelease();
          v46 = v62;
          goto LABEL_33;
        }
        goto LABEL_36;
      }
      goto LABEL_11;
    }
    if ((v19 & 0x1000000000000000) == 0)
    {
LABEL_17:
      swift_bridgeObjectRetain();
      v42 = v68;
      sub_23B1C6EF0();
      v34 = v42;
      if (!v42)
        goto LABEL_32;
    }
    else
    {
      v29[3] = (v20 & 0xFFFFFFFFFFFFFFFLL) + 32;
      LOBYTE(v71[0]) = 1;
      v77 = v81;
      v78 = v29[2];
      v79 = (_QWORD *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32);
      v80 = v29[4];
      swift_bridgeObjectRetain();
      v31 = v21;
      v32 = v68;
      result = sub_23B0E1B48((uint64_t)&v77, v31, v17, 0, (uint64_t)v71, (uint64_t)sub_23B1B3238, (uint64_t)&v53[-6]);
      v34 = v32;
      if (!v32)
        goto LABEL_31;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    v68 = 0;
LABEL_12:
    v40 = v34;
    LODWORD(v81) = sub_23B1C5498();
    sub_23AB6CD48();
    v41 = sub_23B1C575C();

    if ((v41 & 1) == 0)
    {
      v43 = v34;
      LODWORD(v81) = sub_23B1C54F8();
      v44 = sub_23B1C575C();

      if ((v44 & 1) == 0)
      {
        v46 = v62;
        goto LABEL_26;
      }

      v45 = (void (**)(char *, uint64_t))(v57 + 8);
      v46 = v62;
      if (v69 == 1)
      {
        LODWORD(v81) = 2;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v47 = v58;
        v48 = v59;
        sub_23B1C5864();
        sub_23B1C5558();
        goto LABEL_24;
      }
      LODWORD(v81) = 2;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      v49 = v58;
      v50 = v59;
      sub_23B1C5864();
      v51 = sub_23B1C5558();
      (*v45)(v49, v50);
      v52 = (uint64_t)v55;
      *v55 = v51;
      swift_storeEnumTagMultiPayload();
      v56(v52);
      sub_23AA8A05C(v52, &qword_2569E2950);
      swift_release();
      goto LABEL_33;
    }

    if ((v69 & 1) != 0)
    {
      LODWORD(v81) = 16;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      v47 = v58;
      v48 = v59;
      sub_23B1C5864();
      sub_23B1C5558();
      v45 = (void (**)(char *, uint64_t))(v57 + 8);
      v46 = v62;
LABEL_24:
      (*v45)(v47, v48);
      swift_willThrow();
LABEL_26:

      swift_release();
      return swift_release();
    }
    usleep(v18);
    if (2 * v18 >= 0xF4240)
      v18 = 1000000;
    else
      v18 *= 2;
  }
  LOBYTE(v71[0]) = 1;
  *(_QWORD *)&v77 = v24;
  *((_QWORD *)&v77 + 1) = v25;
  v78 = __PAIR64__(v27, v26);
  v35 = v63;
  *v63 = 0;
  v35[1] = 0;
  v36 = v21;
  v37 = v68;
  result = sub_23B0E1B48((uint64_t)&v77, v36, v17, 0, (uint64_t)v71, (uint64_t)sub_23B1B3238, (uint64_t)&v53[-6]);
  v34 = v37;
  if (v37)
  {
    v68 = 0;
    goto LABEL_12;
  }
  if ((v71[0] & 1) == 0)
  {
    swift_release();
    v46 = v62;
LABEL_33:

    return swift_release();
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23B1AC868@<X0>(uint64_t a1@<X0>, useconds_t a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, void *a11, uint64_t *a12, _QWORD *a13, unsigned __int8 a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t result;
  void *v45;
  _QWORD *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  id v51;
  char v52;
  useconds_t v53;
  void *v54;
  id v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  id v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  useconds_t v92;
  void *v93;
  char v94;
  char v95;
  _QWORD v96[2];
  _QWORD v97[14];
  char v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  unsigned __int8 v109;
  uint64_t v110;
  __int128 v111;
  unint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  __int128 v115;
  unint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;

  v85 = a7;
  v86 = a8;
  v81 = a6;
  v78 = a5;
  v84 = a4;
  v91 = a3;
  v92 = a2;
  v88 = a1;
  v67 = a9;
  v79 = a11;
  v80 = a10;
  v90 = a15;
  LODWORD(v89) = a14;
  v87 = a13;
  v119 = *MEMORY[0x24BDAC8D0];
  v15 = *a12;
  v16 = a12[1];
  v82 = a12[2];
  v83 = v16;
  v76 = a12[3];
  v77 = v15;
  v75 = a12[4];
  LODWORD(v74) = *((unsigned __int8 *)a12 + 40);
  v17 = a12[6];
  v18 = a12[7];
  v19 = a12[8];
  v20 = a12[9];
  v21 = a12[10];
  v22 = a12[11];
  v23 = a12[12];
  v72 = a12[13];
  v73 = v17;
  v24 = a12[14];
  v25 = sub_23B1C5570();
  v69 = *(_QWORD *)(v25 - 8);
  v70 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v68 = (char *)&v67 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97[2] = v84;
  v97[3] = v78;
  v97[4] = v81;
  v97[5] = v85;
  v97[6] = v86;
  v97[7] = a10;
  v97[8] = a11;
  v97[9] = v77;
  v97[10] = v83;
  v97[11] = v82;
  v97[12] = v76;
  v97[13] = v75;
  v98 = v74;
  v99 = v73;
  v100 = v18;
  v73 = v20;
  v74 = v18;
  v71 = v19;
  v101 = v19;
  v102 = v20;
  v75 = v22;
  v76 = v21;
  v103 = v21;
  v104 = v22;
  v77 = v23;
  v78 = v24;
  v105 = v23;
  v27 = v92;
  v106 = v72;
  v107 = v24;
  v108 = a13;
  v109 = a14;
  v110 = a15;
  v90 = v91 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  v28 = swift_beginAccess();
  v89 = &v117;
  v87 = &v113;
  v29 = 1000;
  v72 = MEMORY[0x24BEE4AE0] + 8;
  while (1)
  {
    v94 = 0;
    v31 = *(_QWORD *)(v88 + 40);
    v30 = *(_QWORD *)(v88 + 48);
    v32 = *(unsigned int *)(v90 + 8);
    v33 = MEMORY[0x24BDAC7A8](v28);
    *(&v67 - 4) = (uint64_t)&v94;
    *(&v67 - 3) = v91;
    *(&v67 - 2) = (uint64_t)sub_23B1B304C;
    *(&v67 - 1) = (uint64_t)v97;
    v34 = MEMORY[0x24BDAC7A8](v33);
    *((_DWORD *)&v67 - 8) = v32;
    *((_DWORD *)&v67 - 7) = v27;
    *((_DWORD *)&v67 - 6) = 0;
    *(&v67 - 2) = v35;
    *(&v67 - 1) = (uint64_t)(&v67 - 6);
    v40 = v89;
    *v89 = 0;
    v40[1] = 0;
    *(_QWORD *)&v115 = v36;
    *((_QWORD *)&v115 + 1) = v37;
    v116 = __PAIR64__(v39, v38);
    v92 = v29;
    if (v30)
    {
      MEMORY[0x24BDAC7A8](v34);
      *(&v67 - 4) = (uint64_t)&v115;
      *(&v67 - 3) = (uint64_t)sub_23B1B30F0;
      *(&v67 - 2) = v41;
      if ((v30 & 0x1000000000000000) != 0)
        goto LABEL_17;
      if ((v30 & 0x2000000000000000) != 0)
      {
        v96[0] = v31;
        v96[1] = v30 & 0xFFFFFFFFFFFFFFLL;
        v117 = v96;
        v95 = 1;
        v111 = v115;
        v112 = v116;
        v113 = v96;
        v114 = v118;
        swift_bridgeObjectRetain();
        v49 = v32;
        v50 = v93;
        result = sub_23B0E1B48((uint64_t)&v111, v49, v27, 0, (uint64_t)&v95, (uint64_t)sub_23B1B30D4, (uint64_t)(&v67 - 6));
        v45 = v50;
        if (!v50)
        {
          if ((v95 & 1) == 0)
            goto LABEL_30;
          __break(1u);
LABEL_29:
          if ((v96[0] & 1) == 0)
          {
LABEL_30:
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_31;
          }
          goto LABEL_34;
        }
        goto LABEL_11;
      }
      if ((v31 & 0x1000000000000000) == 0)
      {
LABEL_17:
        swift_bridgeObjectRetain();
        v54 = v93;
        sub_23B1C6EF0();
        v45 = v54;
        if (!v54)
          goto LABEL_30;
      }
      else
      {
        v117 = (_QWORD *)((v30 & 0xFFFFFFFFFFFFFFFLL) + 32);
        LOBYTE(v96[0]) = 1;
        v111 = v115;
        v112 = v116;
        v113 = v117;
        v114 = v118;
        swift_bridgeObjectRetain();
        v42 = v32;
        v43 = v93;
        result = sub_23B0E1B48((uint64_t)&v111, v42, v27, 0, (uint64_t)v96, (uint64_t)sub_23B1B30D4, (uint64_t)(&v67 - 6));
        v45 = v43;
        if (!v43)
          goto LABEL_29;
      }
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    LOBYTE(v96[0]) = 1;
    *(_QWORD *)&v111 = v36;
    *((_QWORD *)&v111 + 1) = v37;
    v112 = __PAIR64__(v39, v38);
    v46 = v87;
    *v87 = 0;
    v46[1] = 0;
    v47 = v32;
    v48 = v93;
    result = sub_23B0E1B48((uint64_t)&v111, v47, v27, 0, (uint64_t)v96, v35, (uint64_t)(&v67 - 6));
    v45 = v48;
    if (!v48)
      break;
LABEL_12:
    v51 = v45;
    LODWORD(v115) = sub_23B1C5498();
    sub_23AB6CD48();
    v52 = sub_23B1C575C();

    if ((v52 & 1) == 0)
    {
      v55 = v45;
      LODWORD(v115) = sub_23B1C54F8();
      v56 = sub_23B1C575C();

      v57 = v74;
      if ((v56 & 1) != 0)
      {

        v58 = v76;
        v59 = v75;
        LODWORD(v115) = 2;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
        v60 = v68;
        v61 = v70;
        sub_23B1C5864();
        sub_23B1C5558();
        (*(void (**)(char *, uint64_t))(v69 + 8))(v60, v61);
        goto LABEL_22;
      }
      v59 = v75;
      v58 = v76;
LABEL_24:
      v64 = v85;
      swift_release();

      swift_unknownObjectRelease();
      swift_release();
      sub_23AAA3E18(v83, v82);
      sub_23AAAE53C(v57, v71);
      swift_bridgeObjectRelease();
      sub_23AAAE53C(v58, v59);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }

    if ((v94 & 1) != 0)
    {
      LODWORD(v115) = 16;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      v62 = v68;
      v63 = v70;
      sub_23B1C5864();
      sub_23B1C5558();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v62, v63);
      v59 = v75;
      v58 = v76;
      v57 = v74;
LABEL_22:
      swift_willThrow();
      goto LABEL_24;
    }
    v93 = 0;
    v53 = v92;
    v28 = usleep(v92);
    if (2 * v53 >= 0xF4240)
      v29 = 1000000;
    else
      v29 = 2 * v53;
  }
  if ((v96[0] & 1) == 0)
  {
    swift_release();
LABEL_31:
    v65 = v75;
    v66 = v76;

    swift_unknownObjectRelease();
    swift_release();

    sub_23AAA3E18(v83, v82);
    sub_23AAAE53C(v74, v71);
    swift_bridgeObjectRelease();
    sub_23AAAE53C(v66, v65);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23B1AD014(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v5 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = v2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  if (v6 == *(_QWORD *)(v7 + 40))
    return 0;
  v8 = *(_QWORD *)(a1 + 160);
  v16 = v8;
  if (!v8)
    return 0;
  v9 = sub_23AA940DC(v8, (uint64_t)a2);
  if ((v9 & 1) == 0)
  {
    while (1)
    {
      MEMORY[0x24BDAC7A8](v9);
      *(&v15 - 2) = (uint64_t)&v16;
      v17 = 1;
      v18 = v8;
      v19 = 0u;
      v20 = 0u;
      v9 = sub_23B0E1B48((uint64_t)&v18, v11, 0x100000, 0, (uint64_t)&v17, (uint64_t)sub_23B1B2CC4, (uint64_t)(&v15 - 4));
      if ((v17 & 1) != 0)
        goto LABEL_20;
      v8 = v16;
      v12 = a2[2];
      if (v12)
      {
        if (a2[4] == v16)
          return 1;
        if (v12 != 1)
        {
          if (a2[5] == v16)
            return 1;
          if (v12 != 2)
            break;
        }
      }
LABEL_6:
      if (!v16)
        return 0;
    }
    v13 = 6;
    while (1)
    {
      v14 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
        break;
      if (a2[v13] == v16)
        return 1;
      ++v13;
      if (v14 == v12)
        goto LABEL_6;
    }
    __break(1u);
LABEL_20:
    __break(1u);
  }
  return 1;
}

uint64_t sub_23B1AD360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t ObjectType;

  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC243B0);
  if (!v1)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      MEMORY[0x23B85F548](1, ObjectType);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

_QWORD *sub_23B1AD3EC(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  if (*result)
  {
    MEMORY[0x24BDAC7A8](result);
    result = (_QWORD *)sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC27A04);
    if (!v2)
    {
      *(_BYTE *)(v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
      {
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        MEMORY[0x23B85F548](1, ObjectType);
        return (_QWORD *)swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_23B1AD4AC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23B1AD4CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v2 = 1000;
  if (a1 > 1000)
    v2 = a1;
  if (!a1)
    v2 = 0;
  v3 = a1 + v2;
  if (__OFADD__(a1, v2))
    __break(1u);
  MEMORY[0x24BDAC7A8](a1);
  v4 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2C40);
  if (v3 < 0)
  {
    MEMORY[0x24BDAC7A8](v4);
    v5 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2C58);
    MEMORY[0x24BDAC7A8](v5);
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B32A8);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
    {
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      MEMORY[0x23B85F548](1, ObjectType);
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

uint64_t sub_23B1AD6D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23B1AD700@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_root;
  v4 = sub_23B1C5A08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void *sub_23B1AD744@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  int v4;
  const void *v5;
  int v6;
  char v7;

  v3 = *a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v4 = *(_DWORD *)(v3 + 16);
  v5 = *(const void **)(v3 + 56);
  v6 = *(_DWORD *)(v3 + 64);
  v7 = *(_BYTE *)(v3 + 68);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v3 + 8);
  *(_DWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v3 + 40);
  *(_QWORD *)(a2 + 56) = v5;
  *(_DWORD *)(a2 + 64) = v6;
  *(_BYTE *)(a2 + 68) = v7;
  return _Block_copy(v5);
}

void sub_23B1AD7D0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  const void *v7;
  int v8;
  char v9;
  uint64_t v10;
  const void *v11;
  __int128 v12;

  v3 = *a1;
  v4 = *((_DWORD *)a1 + 4);
  v12 = *(_OWORD *)(a1 + 3);
  v5 = a1[5];
  v6 = a1[6];
  v7 = (const void *)a1[7];
  v8 = *((_DWORD *)a1 + 16);
  v9 = *((_BYTE *)a1 + 68);
  v10 = *a2 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v11 = *(const void **)(v10 + 56);
  *(_QWORD *)v10 = v3;
  *(_QWORD *)(v10 + 8) = a1[1];
  *(_DWORD *)(v10 + 16) = v4;
  *(_OWORD *)(v10 + 24) = v12;
  *(_QWORD *)(v10 + 40) = v5;
  *(_QWORD *)(v10 + 48) = v6;
  *(_QWORD *)(v10 + 56) = v7;
  *(_DWORD *)(v10 + 64) = v8;
  *(_BYTE *)(v10 + 68) = v9;
  _Block_copy(v7);
  _Block_release(v11);
}

id sub_23B1AD894()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deferredWQ);
}

uint64_t sub_23B1AD8A4(uint64_t a1, unint64_t a2, uint64_t a3, const void *a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[4];
  uint64_t v38;
  uint64_t v39;
  const void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;

  v8 = v7;
  v51 = a6;
  v52 = a7;
  v53 = a3;
  v13 = sub_23B1C6B3C();
  v49 = *(_QWORD *)(v13 - 8);
  v50 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v48 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B1C6AE8();
  v47 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v46 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v41 = (char *)v37 - v18;
  v45 = sub_23B1C60A4();
  v42 = *(_QWORD *)(v45 - 8);
  v19 = MEMORY[0x24BDAC7A8](v45);
  v21 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)v37 - v22;
  *(_QWORD *)(v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource) = 0;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_invalidated) = 0;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_activated) = 0;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_disableGarbageCollection) = 0;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v24 = v7 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  *(_QWORD *)v24 = 0;
  *(_QWORD *)(v24 + 8) = 0;
  *(_DWORD *)(v24 + 16) = 0;
  *(_OWORD *)(v24 + 24) = 0u;
  *(_OWORD *)(v24 + 40) = 0u;
  *(_OWORD *)(v24 + 53) = 0u;
  swift_beginAccess();
  v25 = *(const void **)(v24 + 56);
  v40 = a4;
  *(_QWORD *)(v24 + 56) = a4;
  *(_DWORD *)(v24 + 64) = a5;
  v43 = HIDWORD(a5) & 1;
  v44 = a5;
  *(_BYTE *)(v24 + 68) = BYTE4(a5) & 1;
  swift_bridgeObjectRetain();
  _Block_copy(a4);
  _Block_release(v25);
  *(_DWORD *)(v24 + 12) = -1;
  v26 = v8 + OBJC_IVAR____TtC9libfssync13DocumentWharf_root;
  v27 = sub_23B1C5A08();
  v28 = *(_QWORD *)(v27 - 8);
  v38 = v27;
  v39 = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v26, v53, v27);
  v37[3] = sub_23AA9F52C(0, (unint64_t *)&qword_2542E5500);
  v54 = 0;
  v55 = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v54 = a1;
  v55 = a2;
  sub_23B1C64F4();
  v37[2] = v54;
  v37[1] = v55;
  v29 = v23;
  sub_23B1C605C();
  v54 = MEMORY[0x24BEE4AF8];
  sub_23AA7E38C((unint64_t *)&qword_2542E7500, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74C0);
  sub_23AD40DEC();
  v30 = v41;
  sub_23B1C6DE8();
  v31 = v42;
  v32 = v45;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v21, v29, v45);
  v33 = v47;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, v30, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v49 + 104))(v48, *MEMORY[0x24BEE5758], v50);
  v34 = sub_23B1C6B60();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v15);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v32);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v53, v38);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deferredWQ) = v34;
  v35 = v8 + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext;
  *(_QWORD *)v35 = v40;
  *(_DWORD *)(v35 + 8) = v44;
  *(_BYTE *)(v35 + 12) = v43;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC9libfssync13DocumentWharf_reporter) = v52;
  return v8;
}

uint64_t sub_23B1ADCBC()
{
  sub_23B1AAB2C();
  return swift_deallocClassInstance();
}

uint64_t sub_23B1ADCE0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  uint64_t result;

  sub_23B1C59E4();
  v4 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v5 = (const char *)(sub_23B1C6458() + 32);
  v6 = sub_23B1C6458();
  LODWORD(v4) = fpfs_wharf_open(v4, v5, (const char *)(v6 + 32));
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();
  result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_23B1ADDC0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1ADCE0(v1, a1);
}

uint64_t sub_23B1ADDD8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B1ADDFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t Strong;
  char v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t result;
  _BYTE v11[24];

  v0 = sub_23B1C5E4C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v11[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong
    && (v5 = *(_BYTE *)(Strong + OBJC_IVAR____TtC9libfssync13DocumentWharf_disableGarbageCollection),
        swift_release(),
        (v5 & 1) != 0))
  {
    v6 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v7 = sub_23B1C5E40();
    v8 = sub_23B1C6A94();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_23AA66000, v7, v8, "Wharf garbage collection is disabled, skipping garbage collection", v9, 2u);
      MEMORY[0x23B8614BC](v9, -1, -1);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (result)
    {
      sub_23B1AAFD0();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_23B1ADF64()
{
  return sub_23B1ADDFC();
}

uint64_t sub_23B1ADF6C()
{
  uint64_t v0;

  v0 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v0);
  return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B3134);
}

uint64_t sub_23B1AE1A0()
{
  return sub_23B1ADF6C();
}

uint64_t sub_23B1AE1A8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC9libfssync13DocumentWharf_invalidated;
  if ((*(_BYTE *)(result + OBJC_IVAR____TtC9libfssync13DocumentWharf_invalidated) & 1) == 0)
  {
    v2 = result;
    v3 = result + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
    swift_beginAccess();
    fpfs_wharf_close(v3);
    result = swift_endAccess();
    *(_BYTE *)(v2 + v1) = 1;
  }
  return result;
}

uint64_t sub_23B1AE224()
{
  uint64_t v0;

  return sub_23B1AE1A8(v0);
}

uint64_t sub_23B1AE23C@<X0>(_DWORD *a1@<X8>)
{
  int v2;
  uint64_t result;

  swift_beginAccess();
  v2 = fpfs_wharf_gc_deleted_items();
  result = swift_endAccess();
  *a1 = v2;
  return result;
}

uint64_t sub_23B1AE2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned int a7@<W6>, int a8@<W7>, _QWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  _QWORD *v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  int v93;
  int v94;
  _QWORD *v95;
  unsigned int v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  __int128 *v119;
  _QWORD v120[5];
  unsigned __int8 v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  _OWORD v126[2];
  uint64_t v127;
  uint64_t v128;

  v99 = a6;
  v96 = a7;
  v97 = a8;
  v98 = a5;
  v93 = a4;
  v94 = a3;
  v95 = a9;
  v128 = *MEMORY[0x24BDAC8D0];
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v102 = (uint64_t)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v101 = (uint64_t)&v77 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v104 = (char *)&v77 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v77 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v77 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v77 - v25;
  v27 = type metadata accessor for ItemMetadata();
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v77 - v31;
  v123 = 0u;
  v124 = 0u;
  v125 = 1;
  v103 = a1;
  v117 = a1;
  v118 = a2;
  v119 = &v123;
  v33 = v105;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2904);
  result = v123;
  if (v33)
    return sub_23AF40DBC(v123, *((uint64_t *)&v123 + 1), v124, *((uint64_t *)&v124 + 1), v125);
  v91 = v32;
  v92 = v26;
  v89 = v24;
  v90 = v21;
  v88 = v30;
  v105 = a2;
  if (v125 == 1)
  {
    __break(1u);
  }
  else
  {
    v126[0] = v123;
    v126[1] = v124;
    v127 = v125;
    v106 = 0;
    v107 = 0;
    v109 = 0;
    v108 = 0;
    v110 = 0u;
    v111 = 0u;
    v112 = 0u;
    v113 = 0u;
    v114 = 0u;
    v115 = 0u;
    v116 = 0u;
    v35 = MEMORY[0x24BDAC7A8](v123);
    v37 = v36;
    v38 = v35;
    v40 = v39;
    v42 = v41;
    v44 = v43;
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2920);
    v45 = (uint64_t)v104;
    v83 = v37;
    v84 = v38;
    v85 = v44;
    v86 = v42;
    v87 = v40;
    v96 &= 1u;
    v81 = v114;
    v82 = a10;
    v46 = sub_23B1C5BDC();
    v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
    v48 = (uint64_t)v92;
    v47(v92, 1, 1, v46);
    v49 = (uint64_t)v89;
    v47(v89, 1, 1, v46);
    v50 = (uint64_t)v90;
    v78 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v47;
    v79 = v46;
    v47(v90, 1, 1, v46);
    v51 = WORD2(v106);
    v52 = sub_23B1C5EB8() & v51;
    v80 = sub_23B1C5EB8();
    sub_23AA8EFC8(v48, v45, (uint64_t *)&unk_2542E4310);
    v53 = v45;
    v54 = v101;
    sub_23AA8EFC8(v49, v101, (uint64_t *)&unk_2542E4310);
    v55 = v102;
    sub_23AA8EFC8(v50, v102, (uint64_t *)&unk_2542E4310);
    LOBYTE(v120[0]) = 1;
    v75 = v52 == (unsigned __int16)v80;
    if (v52 == (unsigned __int16)v80)
      v56 = 493;
    else
      v56 = 420;
    v57 = (uint64_t)v91;
    sub_23AB58648(0, v81, 0, 1, 0x100000000, v56, v53, v54, (uint64_t)v91, 0, 0, 0, v55, 0, 0, 1u, 0, 0, 0xF000000000000000,
      0,
      4u,
      0,
      0,
      0,
      0,
      0,
      0,
      v75,
      2,
      0,
      0,
      0,
      1u,
      0x100000000,
      0,
      0,
      0,
      0,
      0,
      0);
    sub_23AA8A05C(v50, (uint64_t *)&unk_2542E4310);
    sub_23AA8A05C(v49, (uint64_t *)&unk_2542E4310);
    sub_23AA8A05C((uint64_t)v92, (uint64_t *)&unk_2542E4310);
    v58 = WORD2(v106);
    v59 = sub_23B1C5EC4() & v58;
    if (v59 == (unsigned __int16)sub_23B1C5EC4())
    {
      v60 = v114;
      v61 = (uint64_t)v104;
      v63 = v78;
      v62 = v79;
      v78((uint64_t)v104, 1, 1, v79);
      v64 = v101;
      v63(v101, 1, 1, v62);
      v65 = v102;
      v63(v102, 1, 1, v62);
      v66 = (uint64_t)v88;
      sub_23AB59054(v60, 493, v61, v64, 0, 0, v65, 0, (uint64_t)v88);
      sub_23AA8A05C(v65, (uint64_t *)&unk_2542E4310);
      sub_23AA8A05C(v64, (uint64_t *)&unk_2542E4310);
      sub_23AA8A05C(v61, (uint64_t *)&unk_2542E4310);
      sub_23AA9F854(v57);
      sub_23AA94050(v66, v57, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    }
    (*(void (**)(_QWORD *__return_ptr, _OWORD *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)v100 + 352))(v120, v126, v57, v98, v99, v96, v97 & 1, v82);
    v67 = v120[0];
    v68 = v120[1];
    v70 = v120[2];
    v69 = v120[3];
    v71 = v120[4];
    v72 = v121;
    v73 = v122;
    sub_23AF40DBC(v84, v83, v85, v86, v87);
    if ((v94 & 1) == 0)
    {
      LODWORD(v104) = v72;
      HIDWORD(v76) = 1;
      LOBYTE(v76) = v93 & 1;
      (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)v100 + 440))(v103, v105, 0, 0, 0, 256, 0, 1, v76);
      LOBYTE(v72) = (_BYTE)v104;
    }
    result = sub_23AA9F854((uint64_t)v91);
    v74 = v95;
    *v95 = v67;
    v74[1] = v68;
    v74[2] = v70;
    v74[3] = v69;
    v74[4] = v71;
    *((_BYTE *)v74 + 40) = v72;
    v74[6] = v73;
  }
  return result;
}

uint64_t sub_23B1AE94C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  __int128 v16;
  unint64_t v17;
  __int128 v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t ObjectType;
  _OWORD *v29;
  _QWORD v30[2];
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  __int128 v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  unint64_t v63;
  __int128 v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  char v70;
  _BYTE v71[16];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v9 = v8;
  v31 = a8;
  v74 = *MEMORY[0x24BDAC8D0];
  v37 = a6;
  v32 = a2;
  v33 = a3;
  v38 = a2;
  v39 = a3;
  v34 = a4;
  *(_QWORD *)&v35 = a7;
  v40 = a4;
  v41 = a5 & 1;
  v42 = a7;
  v60 = 0;
  v61 = 0;
  v11 = *a1;
  v10 = a1[1];
  v57[0] = *a1;
  v57[1] = v10;
  v12 = *((_DWORD *)a1 + 4);
  v13 = *((_DWORD *)a1 + 5);
  v58 = v12;
  v59 = v13;
  sub_23AA724E8((uint64_t)(a1 + 3), (uint64_t)v71, qword_2542E72C8);
  v14 = sub_23AA724E8((uint64_t)v71, (uint64_t)&v72, qword_2542E72C8);
  if (v73)
  {
    result = sub_23B1A77C0(v72, v73, (uint64_t)v57, (uint64_t (*)(uint64_t))sub_23B1B2664);
    if (!(_QWORD)v36)
    {
      v16 = v62;
      v17 = v63;
      v18 = v64;
      v19 = v65;
      v20 = v66;
      v21 = v67;
      v22 = v68;
      v23 = v69;
      v24 = v70;
LABEL_11:
      *(_BYTE *)(v9 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (*(_QWORD *)(v9 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
      {
        LODWORD(v34) = v19;
        v35 = v18;
        v36 = v16;
        v27 = v17;
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        MEMORY[0x23B85F548](1, ObjectType);
        result = swift_unknownObjectRelease();
        v17 = v27;
        v18 = v35;
        v16 = v36;
        LOBYTE(v19) = v34;
      }
      v29 = v31;
      *v31 = v16;
      *((_QWORD *)v29 + 2) = v17;
      *(_OWORD *)((char *)v29 + 24) = v18;
      *((_BYTE *)v29 + 40) = v19;
      *((_QWORD *)v29 + 6) = v20;
      *((_QWORD *)v29 + 7) = v21;
      *((_DWORD *)v29 + 16) = v22;
      *((_QWORD *)v29 + 9) = v23;
      *((_BYTE *)v29 + 80) = v24;
      return result;
    }
  }
  else
  {
    v30[1] = v30;
    v51 = v11;
    v52 = v10;
    v53 = v12;
    v54 = v13;
    v55 = 0;
    v56 = 0;
    v47 = 0uLL;
    v48 = 0xB000000000000000;
    v49 = 0u;
    v50 = 0u;
    v43 = 0;
    v44 = 0;
    v45 = 0;
    v46 = 256;
    MEMORY[0x24BDAC7A8](v14);
    v25 = v36;
    result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2690);
    if (!v25)
    {
      v17 = v48;
      if (v48 >> 60 == 11)
      {
        __break(1u);
      }
      else if ((v46 & 0x100) == 0)
      {
        v19 = v50 & 1;
        v16 = v47;
        v18 = v49;
        v20 = *((_QWORD *)&v50 + 1);
        v23 = v45;
        v22 = v44;
        v21 = v43;
        v24 = v46 & 1;
        goto LABEL_11;
      }
      __break(1u);
      return result;
    }
    result = sub_23AAAEE4C(v47, *((uint64_t *)&v47 + 1), v48);
  }
  *(_BYTE *)(v9 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
  if (*(_QWORD *)(v9 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
  {
    v26 = swift_getObjectType();
    swift_unknownObjectRetain();
    MEMORY[0x23B85F548](1, v26);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_23B1AEC6C()
{
  uint64_t v0;
  uint64_t result;

  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2690);
  if (v0)
    return sub_23AAAEE4C(0, 0, 0xB000000000000000);
  __break(1u);
  __break(1u);
  return result;
}

uint64_t sub_23B1AEDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, _DWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  int v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  _QWORD aBlock[6];
  _DWORD *v36;

  v31 = a8;
  v29 = a6;
  v30 = a7;
  v33 = a3;
  v34 = a2;
  v32 = a1;
  v36 = a9;
  v28 = a11;
  v13 = type metadata accessor for ItemMetadata();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA9BA80(a4, (uint64_t)v16);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 39) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject();
  sub_23AA94050((uint64_t)v16, v20 + v17, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  *(_QWORD *)(v20 + v18) = a5;
  v21 = v20 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = v30;
  *(_QWORD *)v21 = v29;
  *(_QWORD *)(v21 + 8) = v22;
  *(_BYTE *)(v21 + 16) = v31 & 1;
  *(_QWORD *)(v20 + v19) = a10;
  *(_QWORD *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8)) = v28;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_23B1B2818;
  *(_QWORD *)(v23 + 24) = v20;
  aBlock[4] = sub_23AA698DC;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B1AF238;
  aBlock[3] = &block_descriptor_106_2;
  v24 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  swift_beginAccess();
  v25 = fpfs_wharf_load_by_id();
  swift_endAccess();
  _Block_release(v24);
  swift_release();
  *v36 = v25;
  LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v24 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23B1AF014(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v40 = a6;
  v41 = a7;
  v16 = type metadata accessor for ItemMetadata();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v40 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v40 - v23;
  result = sub_23AA9BA80(a4, (uint64_t)&v40 - v23);
  *(_QWORD *)&v24[*(int *)(v16 + 100)] = a3;
  if (!a1)
  {
    __break(1u);
    goto LABEL_7;
  }
  v26 = *a5;
  v27 = a5[1];
  v28 = a5[2];
  *a5 = *a1;
  *(_OWORD *)(a5 + 1) = xmmword_23B1CA780;
  v29 = v41;
  a5[3] = v40;
  a5[4] = v29;
  a5[5] = a8 & 1;
  a5[6] = a9;
  result = sub_23AAAEE4C(v26, v27, v28);
  if (!a2)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v30 = *(_QWORD *)a2;
  v31 = *(unsigned int *)(a2 + 20);
  if (*(_QWORD *)(a2 + 24))
  {
    v46 = sub_23B1C650C();
    v47 = v32;
    v44 = 58;
    v45 = 0xE100000000000000;
    v42 = 47;
    v43 = 0xE100000000000000;
    sub_23AAA420C();
    sub_23B1C6CF8();
    swift_bridgeObjectRelease();
  }
  sub_23AA9BA80((uint64_t)v24, (uint64_t)v22);
  sub_23AA9BA80((uint64_t)v22, (uint64_t)v19);
  v33 = sub_23AA9BD7C(v30, v31, (uint64_t)v19);
  v35 = v34;
  v37 = v36;
  v39 = v38;
  swift_bridgeObjectRelease();
  sub_23AA9F854((uint64_t)v22);
  sub_23AA9F854((uint64_t)v24);
  *(_QWORD *)a10 = v33;
  *(_QWORD *)(a10 + 8) = v35;
  *(_QWORD *)(a10 + 16) = v37;
  *(_BYTE *)(a10 + 24) = v39 & 1;
  *(_BYTE *)(a10 + 25) = 0;
  return 0;
}

uint64_t sub_23B1AF238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4);
}

uint64_t sub_23B1AF264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  _BYTE v24[56];

  sub_23AA724E8(a1, (uint64_t)v24, qword_2542E48C0);
  v23 = 0;
  v14 = *(int *)(type metadata accessor for ItemMetadata() + 88);
  v17 = v6;
  v18 = a1;
  v19 = a4;
  v20 = a5;
  v21 = a6;
  v22 = &v23;
  sub_23B1A5240(a3, *(unsigned __int8 *)(a2 + v14), (uint64_t)sub_23B1B2410, (uint64_t)&v16, v14);
  result = v23;
  if (v7)
    return swift_release();
  if (!v23)
    __break(1u);
  return result;
}

uint64_t sub_23B1AF32C(uint64_t a1)
{
  uint64_t v2;

  sub_23AA724E8(a1, (uint64_t)&v2, qword_2542E48C0);
  return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B25AC);
}

uint64_t sub_23B1AF3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X6>, uint64_t a5@<X7>, _DWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t result;
  _QWORD aBlock[6];
  _DWORD *v17;

  v17 = a6;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a4;
  sub_23AA724E8(a5, v10 + 24, qword_2542E48C0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23B1B2614;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_23AA698DC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B1AF738;
  aBlock[3] = &block_descriptor_96_0;
  v12 = _Block_copy(aBlock);
  sub_23B1B2630(a5);
  swift_retain();
  swift_release();
  v13 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  sub_23B1C6458();
  LODWORD(v13) = fpfs_wharf_create(v13, a2, a3);
  swift_endAccess();
  swift_release();
  _Block_release(v12);
  swift_release();
  *v17 = v13;
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23B1AF5B0(uint64_t *a1, char a2, uint64_t *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _BYTE v21[48];
  uint64_t v22;
  _QWORD v23[5];
  char v24;

  result = sub_23AA724E8(a4, (uint64_t)v21, qword_2542E48C0);
  if (a1)
  {
    v9 = v22;
    v10 = *a1;
    v11 = a1[1];
    v12 = a1[2];
    if (a1[3])
    {
      v23[0] = sub_23B1C650C();
      v23[1] = v13;
      sub_23AAA420C();
      v14 = sub_23B1C6CF8();
      v16 = v15;
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = 0;
      v16 = 0;
    }
    sub_23AA724E8(a4, (uint64_t)v23, qword_2542E48C0);
    if (v23[2] >> 60 == 11)
    {
      v9 = 0;
      v17 = 0;
      v18 = 0;
      v19 = 1;
    }
    else
    {
      v17 = v23[3];
      v18 = v23[4];
      v19 = v24 & 1;
    }
    type metadata accessor for VFSStagedContext();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v10;
    *(_QWORD *)(v20 + 24) = v11;
    *(_QWORD *)(v20 + 32) = v12;
    *(_QWORD *)(v20 + 40) = v14;
    *(_QWORD *)(v20 + 48) = v16;
    *(_BYTE *)(v20 + 56) = a2 & 1;
    *(_QWORD *)(v20 + 64) = v17;
    *(_QWORD *)(v20 + 72) = v18;
    *(_BYTE *)(v20 + 80) = v19;
    *(_QWORD *)(v20 + 88) = v9;
    *a3 = v20;
    swift_release();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B1AF738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 32))(a2, a3);
}

void sub_23B1AF760(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, char a10, char a11)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  __int128 v28;
  _OWORD *v29;
  uint64_t v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;
  int v37;

  v33 = a2;
  v31 = a9;
  v32 = a3;
  v17 = sub_23B1C5570();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    MEMORY[0x24BDAC7A8](v19);
    *(&v30 - 12) = a4;
    *(&v30 - 11) = a5;
    *(&v30 - 10) = a6;
    *(&v30 - 9) = a7;
    *(&v30 - 8) = a8;
    *((_BYTE *)&v30 - 56) = a10;
    *((_BYTE *)&v30 - 55) = a11 & 1;
    *(&v30 - 6) = v22;
    *(&v30 - 5) = a1;
    *((_DWORD *)&v30 - 8) = v23;
    *(&v30 - 3) = v25;
    *(&v30 - 2) = v24;
    *((_DWORD *)&v30 - 2) = v26;
    v27 = v34;
    sub_23B1A5934(v32, 6, (uint64_t)sub_23B1B2DAC, (uint64_t)(&v30 - 14), (uint64_t)v35);
    if (!v27)
    {
      v28 = v35[1];
      v29 = v31;
      *v31 = v35[0];
      v29[1] = v28;
      *((_QWORD *)v29 + 4) = v36;
    }
  }
  else
  {
    v37 = 22;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    swift_willThrow();
  }
}

uint64_t sub_23B1AF914@<X0>(_OWORD *a1@<X0>, const void *a2@<X1>, uint64_t a3@<X2>, __int16 a4@<W6>, uint64_t a5@<X8>)
{
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t (*v16)@<X0>(_DWORD *@<X8>);
  uint64_t result;
  uint64_t v19;
  _BYTE v20[280];
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v8 = memcpy(v20, a2, sizeof(v20));
  *(_OWORD *)v20 = *(_OWORD *)a3;
  *(_QWORD *)&v20[16] = *(_QWORD *)(a3 + 16);
  *(_QWORD *)&v20[32] = *(_QWORD *)(a3 + 32);
  v9 = a1[11];
  *(_OWORD *)&v20[200] = a1[10];
  *(_OWORD *)&v20[216] = v9;
  v10 = a1[13];
  *(_OWORD *)&v20[232] = a1[12];
  *(_OWORD *)&v20[248] = v10;
  v11 = a1[7];
  *(_OWORD *)&v20[136] = a1[6];
  *(_OWORD *)&v20[152] = v11;
  v12 = a1[9];
  *(_OWORD *)&v20[168] = a1[8];
  *(_OWORD *)&v20[184] = v12;
  v13 = a1[3];
  *(_OWORD *)&v20[72] = a1[2];
  *(_OWORD *)&v20[88] = v13;
  v14 = a1[5];
  *(_OWORD *)&v20[104] = a1[4];
  *(_OWORD *)&v20[120] = v14;
  v15 = a1[1];
  *(_OWORD *)&v20[40] = *a1;
  *(_QWORD *)&v20[24] = *(_QWORD *)(a3 + 24);
  *(_OWORD *)&v20[56] = v15;
  MEMORY[0x24BDAC7A8](v8);
  if ((a4 & 0x100) != 0)
    v16 = sub_23B1B2F94;
  else
    v16 = sub_23B1B2FBC;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))v16);
  if (!v19)
  {
    result = 0;
    *(_OWORD *)a5 = 0u;
    *(_QWORD *)(a5 + 16) = 0;
    *(_QWORD *)(a5 + 24) = 0;
    *(_QWORD *)(a5 + 32) = 0;
  }
  return result;
}

uint64_t sub_23B1AFBC8@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, _DWORD *a9@<X8>, int a10)
{
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t result;
  _QWORD aBlock[6];
  _DWORD *v24;

  v24 = a9;
  v15 = *(_QWORD *)(a7 + 24);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_23B1B2158;
  *(_QWORD *)(v16 + 24) = a7;
  aBlock[4] = sub_23AD035D8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA7E744;
  aBlock[3] = &block_descriptor_183_2;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v18 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  LODWORD(v15) = fpfs_wharf_unload(v18, a2, a3, a4, a5, a6, v15, a8, (uint64_t)v17, a10);
  swift_endAccess();
  _Block_release(v17);
  swift_release();
  *v24 = v15;
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v15 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23B1AFD58@<X0>(uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, _DWORD *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t result;
  _QWORD aBlock[6];
  _DWORD *v23;

  v23 = a9;
  v15 = *(_QWORD *)(a6 + 24);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_23B1B2158;
  *(_QWORD *)(v16 + 24) = a6;
  aBlock[4] = sub_23AD035D8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA7E744;
  aBlock[3] = &block_descriptor_190;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v18 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  LODWORD(v15) = fpfs_wharf_unload(v18, a2, a3, a4, 0, a5, v15, a7, (uint64_t)v17, a8);
  swift_endAccess();
  _Block_release(v17);
  swift_release();
  *v23 = v15;
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v15 & 1) != 0)
    __break(1u);
  return result;
}

double sub_23B1AFEE8@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  double result;
  __int128 v9;
  _OWORD v10[2];
  uint64_t v11;

  sub_23B1ABAE8(a1, a2, a3, a4, a5, 0, 0, 0, v10, 0);
  if (!v6)
  {
    result = *(double *)v10;
    v9 = v10[1];
    *(_OWORD *)a6 = v10[0];
    *(_OWORD *)(a6 + 16) = v9;
    *(_QWORD *)(a6 + 32) = v11;
  }
  return result;
}

double sub_23B1AFF4C@<D0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10)
{
  uint64_t v10;
  double result;
  __int128 v13;
  _OWORD v14[2];
  uint64_t v15;

  sub_23B1ABAE8(a1, a2, a3, a4, a5, a6, a7, a8, v14, a10);
  if (!v10)
  {
    result = *(double *)v14;
    v13 = v14[1];
    *(_OWORD *)a9 = v14[0];
    *(_OWORD *)(a9 + 16) = v13;
    *(_QWORD *)(a9 + 32) = v15;
  }
  return result;
}

uint64_t sub_23B1AFFBC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int v9;
  uint64_t result;
  _QWORD v11[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_23B1B23C4;
  *(_QWORD *)(v7 + 24) = v6;
  v11[4] = sub_23AA698DC;
  v11[5] = v7;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_23B1A764C;
  v11[3] = &block_descriptor_63_3;
  v8 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  v9 = fpfs_fchdir();
  _Block_release(v8);
  swift_release();
  *a3 = v9;
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a3 & 1) != 0)
    __break(1u);
  return result;
}

void sub_23B1B0104(uint64_t a1, void **a2, char a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t inited;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;

  v5 = *(void **)(a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_reporter);
  if (v5 && (*a2 || (a3 & 1) == 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5600);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
    v10 = v5;
    v11 = MEMORY[0x24BEE0D00];
    sub_23B1C6E84();
    *(_QWORD *)(inited + 96) = v11;
    *(_QWORD *)(inited + 72) = a4;
    *(_QWORD *)(inited + 80) = a5;
    swift_bridgeObjectRetain();
    sub_23AAE9FE8(inited);
    v12 = (void *)sub_23B1C61F4();
    swift_bridgeObjectRelease();
    v13 = *a2;
    if (*a2)
    {
      v14 = v13;
      v15 = (void *)sub_23B1C5870();

    }
    else
    {
      v15 = 0;
    }
    objc_msgSend(v10, sel_postReportWithCategory_type_payload_error_, 1, 1, v12, v15);

  }
}

void sub_23B1B0278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, char a8, int a9, int a10)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v20;
  char v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t (*v25)@<X0>(_DWORD *@<X8>);
  uint64_t ObjectType;
  id v27;
  char v28;
  uint64_t v29;
  id v30;
  char v31;
  id v32;
  char v33;
  _QWORD v34[2];
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v12 = v10;
  v45 = *MEMORY[0x24BDAC8D0];
  sub_23B1B1C4C(a1, a2);
  if (v11)
  {
    v38 = a4;
    v39 = a7;
    v20 = v11;
    LODWORD(v40[0]) = sub_23B1C5534();
    sub_23AB6CD48();
    v21 = sub_23B1C575C();

    if ((v21 & 1) != 0)
      goto LABEL_5;
    v22 = v11;
    LODWORD(v40[0]) = sub_23B1C5564();
    v23 = sub_23B1C575C();

    if ((v23 & 1) != 0 && (a8 & 1) != 0)
      goto LABEL_5;
    v27 = v11;
    LODWORD(v40[0]) = sub_23B1C5564();
    v28 = sub_23B1C575C();

    if ((v28 & 1) != 0)
    {

      MEMORY[0x24BDAC7A8](v29);
      v35 = v39;
      LODWORD(v36) = a10;
      v37 = v12;
      LOBYTE(v40[0]) = 1;
      swift_bridgeObjectRetain();
      sub_23B0E1010(4294967294, a1, a2, 0x200000, 0, 0, (uint64_t)v40, (uint64_t)sub_23B1B21C0, (uint64_t)v34);
      if ((v40[0] & 1) != 0)
        __break(1u);
      else
        sub_23B1B1C4C(a1, a2);
      return;
    }
    v30 = v11;
    LODWORD(v40[0]) = sub_23B1C54B0();
    v31 = sub_23B1C575C();

    if ((v31 & 1) != 0 && (a8 & 1) != 0)
      goto LABEL_5;
    v32 = v11;
    LODWORD(v40[0]) = sub_23B1C54BC();
    v33 = sub_23B1C575C();

    if ((v33 & 1) != 0 && (a8 & 1) != 0)
    {
LABEL_5:

      if ((a6 & 0x100) != 0)
      {
        MEMORY[0x24BDAC7A8](v24);
        v35 = v12;
        v36 = (_QWORD *)a1;
        v37 = a2;
        v25 = sub_23B1B2184;
      }
      else
      {
        v43 = 0;
        v44 = 0;
        v40[0] = a3;
        v40[1] = 0;
        v41 = 0;
        v42 = v38;
        MEMORY[0x24BDAC7A8](v24);
        v34[0] = v12;
        v34[1] = a1;
        v35 = a2;
        v36 = v40;
        v37 = v39;
        v25 = sub_23B1B21A0;
      }
      sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))v25);
      *(_BYTE *)(v12 + OBJC_IVAR____TtC9libfssync13DocumentWharf_deleteBusy) = 0;
      if (*(_QWORD *)(v12 + OBJC_IVAR____TtC9libfssync13DocumentWharf_garbageCollectionSource))
      {
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        MEMORY[0x23B85F548](1, ObjectType);
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t sub_23B1B05F4()
{
  uint64_t v0;
  uint64_t result;

  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B21E0);
  if (!v0)
  {
    MEMORY[0x24BDAC7A8](result);
    return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2238);
  }
  return result;
}

uint64_t sub_23B1B0694@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, _DWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  int v9;
  uint64_t result;
  _QWORD v11[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_23B1B2268;
  *(_QWORD *)(v7 + 24) = v6;
  v11[4] = sub_23AA698DC;
  v11[5] = v7;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_23B1AF238;
  v11[3] = &block_descriptor_26_1;
  v8 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  v9 = fpfs_femptydir();
  _Block_release(v8);
  result = swift_release();
  *a3 = v9;
  return result;
}

uint64_t sub_23B1B07D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v13[6];

  if (a5)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_23B1B2158;
    *(_QWORD *)(v6 + 24) = a5;
    v7 = sub_23B1B22B8;
  }
  else
  {
    v6 = 0;
    v7 = sub_23AAED16C;
  }
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23B1B22A4;
  *(_QWORD *)(v9 + 24) = v8;
  v13[4] = sub_23AD035D8;
  v13[5] = v9;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_23AA7E744;
  v13[3] = &block_descriptor_36_5;
  v10 = _Block_copy(v13);
  swift_retain();
  swift_release();
  swift_beginAccess();
  v11 = fpfs_wharf_delete_resurrectable_at();
  swift_endAccess();
  _Block_release(v10);
  swift_release();
  return v11;
}

uint64_t sub_23B1B0958@<X0>(uint64_t a1@<X4>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  int v8;
  uint64_t result;
  _QWORD aBlock[6];

  if (a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = sub_23B1B2158;
    *(_QWORD *)(v3 + 24) = a1;
    v4 = sub_23B1B22B8;
  }
  else
  {
    v3 = 0;
    v4 = sub_23AAED16C;
  }
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23B1B22A4;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_23AD035D8;
  aBlock[5] = v6;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA7E744;
  aBlock[3] = &block_descriptor_50_2;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  swift_beginAccess();
  sub_23B1C6458();
  v8 = fpfs_wharf_delete_resurrectable_at();
  swift_endAccess();
  swift_release();
  _Block_release(v7);
  result = swift_release();
  *a2 = v8;
  return result;
}

uint64_t sub_23B1B0B08@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t result;

  v3 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v4 = sub_23B1C6458();
  v5 = fpfs_wharf_delete_item_at(v3, -2, (const char *)(v4 + 32));
  swift_endAccess();
  result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t sub_23B1B0BA4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, _DWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t result;

  v7 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  LODWORD(a3) = fpfs_wharf_delete_wharfed_item(v7, a2, a3);
  result = swift_endAccess();
  *a4 = a3;
  return result;
}

uint64_t sub_23B1B0C30()
{
  return type metadata accessor for DocumentWharf();
}

uint64_t type metadata accessor for DocumentWharf()
{
  uint64_t result;

  result = qword_2542E4798;
  if (!qword_2542E4798)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23B1B0C74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B1C5A08();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23B1B0D30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char v25;

  v4 = v3;
  v5 = v2;
  v7 = sub_23B1C5A08();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_23B1C5930();
  v13 = v12;
  sub_23B1C599C();
  v14 = sub_23B1C59E4();
  v16 = v15;
  v19 = v11;
  v20 = v13;
  v21 = v5;
  v22 = 0xD000000000000018;
  v23 = 0x800000023B21FBD0;
  v24 = a2;
  v25 = 1;
  swift_bridgeObjectRetain();
  result = sub_23B0E1010(4294967294, v14, v16, 0x100000, 0, 0, (uint64_t)&v25, (uint64_t)sub_23B1B16A8, (uint64_t)v18);
  if (!v4 && (v25 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23B1B0E80()
{
  if (MEMORY[0x24BEE4F18])
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E77E0);
  else
    return MEMORY[0x24BEE4AE0] + 8;
}

uint64_t sub_23B1B0EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v13 = a4;
  v14 = a5;
  v15 = a6;
  v16 = a1;
  v17 = a2;
  v18 = a3;
  v19 = a7;
  v20 = 1;
  swift_bridgeObjectRetain();
  result = sub_23B0E1010(a1, a2, a3, 0, 0, 0, (uint64_t)&v20, (uint64_t)sub_23B1B16C8, (uint64_t)v12);
  if (!v7 && (v20 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23B1B0F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23B1B1ED0(a5, a6, 0, a4);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23B1B1004@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, _DWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];
  _DWORD *v19;

  v19 = a6;
  v10 = *(_QWORD *)(a5 + 24);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23B1B2158;
  *(_QWORD *)(v11 + 24) = a5;
  aBlock[4] = sub_23AA7E774;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA7E744;
  aBlock[3] = &block_descriptor_17_2;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v13 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v14 = sub_23B1C6458();
  LODWORD(v13) = fpfs_wharf_resurrect(v13, a2, a3, v14 + 32, a4, v10);
  swift_endAccess();
  swift_release();
  _Block_release(v12);
  swift_release();
  *v19 = v13;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23B1B119C(uint64_t result, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _BOOL8 v4;
  uint64_t i;
  uint64_t v6;
  BOOL v7;

  v2 = *(_QWORD **)(a2 + 32);
  v3 = v2[2];
  if (!v3)
    return 0;
  if (v2[4] == result)
    return 1;
  if (v3 == 1)
    return 0;
  if (v2[5] == result)
    return 1;
  if (v3 == 2)
    return 0;
  for (i = 6; ; ++i)
  {
    v6 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v7 = v2[i] == result;
    v4 = v7;
    v7 = v7 || v6 == v3;
    if (v7)
      return v4;
  }
  __break(1u);
  return result;
}

uint64_t sub_23B1B1214@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, _DWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t result;
  _QWORD aBlock[6];

  swift_beginAccess();
  wharf_step_file_system_representation(a2);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_DWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_BYTE *)(v10 + 40) = a4;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23B1B2CA0;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_23AA698DC;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B1AF738;
  aBlock[3] = &block_descriptor_156_1;
  v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  LODWORD(a1) = fpfs_opendirat();
  _Block_release(v12);
  swift_release();
  *a5 = a1;
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a5 & 1) != 0)
    __break(1u);
  return result;
}

void sub_23B1B13A8(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned int a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int v9;

  if (!a2)
    goto LABEL_7;
  v7 = *a2;
  v8 = a3 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  v9 = fpfs_wharf_delete_wharfed_item(v8, a4, v7);
  swift_endAccess();
  if (v9 < 0)
    return;
  if (__OFADD__(*a5, 1))
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  ++*a5;
}

uint64_t sub_23B1B144C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  swift_beginAccess();
  result = (uint64_t)wharf_step_file_system_representation(0);
  if (result)
  {
    result = fpfs_num_entries_at();
    *a1 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23B1B14D0@<X0>(uint64_t a1@<X0>, int *a2@<X8>)
{
  return sub_23B1B1550(a1, a2);
}

uint64_t sub_23B1B14E4@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  result = mkdirat(*(_DWORD *)(v3 + 12), "resources", 0x1EDu);
  *a2 = result;
  return result;
}

uint64_t sub_23B1B1550@<X0>(uint64_t a1@<X0>, int *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t result;

  v3 = a1 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
  swift_beginAccess();
  LODWORD(v3) = *(_DWORD *)(v3 + 12);
  v4 = sub_23B1C6458();
  v5 = unlinkat(v3, (const char *)(v4 + 32), 0);
  result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t sub_23B1B15E8(uint64_t a1, uint64_t (*a2)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v4;
  _QWORD v5[7];

  v5[6] = *MEMORY[0x24BDAC8D0];
  v4 = 0;
  v5[0] = 0;
  v5[3] = a1;
  v5[4] = v5;
  v5[5] = &v4;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B3194);
  return a2(v5[0], v4, 0);
}

uint64_t sub_23B1B16A8(uint64_t a1)
{
  uint64_t *v1;

  return sub_23B1B0EA8(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

void sub_23B1B16C8()
{
  sub_23B1AA030();
}

uint64_t sub_23B1B1744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_23B1B0F40(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_23B1B177C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD))
{
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_23B1C560C();
  v8 = result;
  if (result)
  {
    result = sub_23B1C5624();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_13;
  }
  v11 = sub_23B1C5618();
  if (v11 >= v10)
    v12 = v10;
  else
    v12 = v11;
  v13 = v8 + v12;
  if (v8)
    v14 = v13;
  else
    v14 = 0;
  return a4(v8, v14, 0);
}

uint64_t sub_23B1B1824(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

_QWORD *sub_23B1B1844@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, void (*a3)(uint64_t *__return_ptr, uint64_t)@<X5>, uint64_t a4@<X6>, _DWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  _QWORD *result;
  _QWORD v12[6];

  v12[2] = a2;
  v12[3] = a1;
  v12[4] = a3;
  v12[5] = a4;
  v10 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ItemMetadata() + 128));
  if (v10)
  {
    result = sub_23B1A78C8((_QWORD *(*)(uint64_t *__return_ptr, _QWORD))sub_23B1B2A4C, (uint64_t)v12, v10);
    if (v5)
      return result;
    goto LABEL_3;
  }
  result = sub_23B1A9C30(0, a2, a1, a3);
  if (!v5)
LABEL_3:
    *a5 = (_DWORD)result;
  return result;
}

uint64_t sub_23B1B18E8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = 0x100000000;
  if (!*(_BYTE *)(v1 + 28))
    v4 = 0;
  result = sub_23B1AA42C(*(_QWORD *)(v1 + 16), v4 | *(unsigned int *)(v1 + 24), *(unsigned int *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_23B1B193C()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B194C(uint64_t a1)
{
  uint64_t v1;

  return sub_23AF4F5A8(a1, *(_BYTE **)(v1 + 16), *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), a1, *(void ***)(v1 + 40));
}

uint64_t sub_23B1B1980()
{
  return swift_deallocObject();
}

double sub_23B1B1990@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v6;
  _OWORD v7[2];
  uint64_t v8;

  *(_QWORD *)(a2 + 136) = a1;
  sub_23B1A8B50((_QWORD *(*)(__int128 *__return_ptr, _QWORD, _QWORD, uint64_t))sub_23B1B2E9C, (uint64_t)v7);
  if (!v3)
  {
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a3 = v7[0];
    *(_OWORD *)(a3 + 16) = v6;
    *(_QWORD *)(a3 + 32) = v8;
  }
  return result;
}

void sub_23B1B1A00(uint64_t a1@<X3>, uint64_t a2@<X4>, void (*a3)(__int128 *__return_ptr, uint64_t)@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  _BYTE *v11;
  _QWORD v12[6];
  _BYTE v13[40];
  _BYTE v14[40];

  v12[2] = a2;
  v12[3] = a1;
  v12[4] = a3;
  v12[5] = a4;
  v10 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ItemMetadata() + 128));
  if (v10)
  {
    v11 = v13;
    sub_23B1A81C8((void (*)(__int128 *__return_ptr, _QWORD))sub_23B1B2EB0, (uint64_t)v12, v10, (uint64_t)v13);
    if (v5)
      return;
    goto LABEL_3;
  }
  v11 = v14;
  sub_23B1A9EC8(0, a2, a1, a3, (uint64_t)v14);
  if (!v5)
  {
LABEL_3:
    *(_OWORD *)a5 = *(_OWORD *)v11;
    *(_QWORD *)(a5 + 16) = *((_QWORD *)v11 + 2);
    *(_OWORD *)(a5 + 24) = *(_OWORD *)(v11 + 24);
  }
}

_QWORD *sub_23B1B1AD0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, char *, _QWORD))
{
  uint64_t v4;
  _QWORD *result;
  _QWORD *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  result = (_QWORD *)sub_23B1C560C();
  v9 = result;
  if (result)
  {
    result = (_QWORD *)sub_23B1C5624();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 = (_QWORD *)((char *)v9 + a1 - (_QWORD)result);
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_23B1C5618();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = (char *)v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = a4(&v16, v9, v15, 0);
  if (!v4)
    return (_QWORD *)v16;
  return result;
}

_QWORD *sub_23B1B1B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *(*a3)(__int128 *__return_ptr, _QWORD *, char *, _QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;

  result = (_QWORD *)sub_23B1C560C();
  v10 = result;
  if (result)
  {
    result = (_QWORD *)sub_23B1C5624();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v10 = (_QWORD *)((char *)v10 + a1 - (_QWORD)result);
  }
  v11 = __OFSUB__(a2, a1);
  v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_15;
  }
  v13 = sub_23B1C5618();
  if (v13 >= v12)
    v14 = v12;
  else
    v14 = v13;
  v15 = (char *)v10 + v14;
  if (v10)
    v16 = v15;
  else
    v16 = 0;
  result = a3(&v19, v10, v16, 0);
  if (!v4)
  {
    v17 = v20;
    v18 = v21;
    *(_OWORD *)a4 = v19;
    *(_QWORD *)(a4 + 16) = v17;
    *(_OWORD *)(a4 + 24) = v18;
  }
  return result;
}

uint64_t sub_23B1B1C4C(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  id v10;
  char v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  int v26;

  v5 = sub_23B1C5570();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = a1;
  v25 = a2;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2334);
  if (v2)
  {
    v10 = v2;
    v26 = sub_23B1C548C();
    sub_23AB6CD48();
    v11 = sub_23B1C575C();

    if ((v11 & 1) != 0)
    {

      v12 = (void *)sub_23B1C63BC();
      v13 = objc_msgSend(v12, sel_lastPathComponent);

      v14 = sub_23B1C63E0();
      v16 = v15;

      v17 = (void *)sub_23B1C63BC();
      v18 = objc_msgSend(v17, sel_stringByDeletingLastPathComponent);

      sub_23B1C63E0();
      sub_23B1C6458();
      swift_bridgeObjectRelease();
      v19 = fpfs_open_longpath();
      v20 = swift_release();
      if ((v19 & 0x80000000) == 0)
      {
        MEMORY[0x24BDAC7A8](v20);
        *(_DWORD *)&v23[-32] = v19;
        *(_QWORD *)&v23[-24] = v14;
        *(_QWORD *)&v23[-16] = v16;
        sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2384);
        swift_bridgeObjectRelease();
        return close(v19);
      }
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x23B85E7A4](v21);
      v22 = sub_23B1C5E64();
      if ((v22 & 0x100000000) != 0)
        v26 = 22;
      else
        v26 = v22;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      sub_23B1C5864();
      sub_23B1C5558();
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    }
    return swift_willThrow();
  }
  return result;
}

void sub_23B1B1ED0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  void *v9;
  id v10;
  char v11;
  id v12;
  void *v13;
  uint64_t inited;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;

  v19 = 0;
  sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23B1B2134);
  v9 = v4;
  if (v4)
  {
    v10 = v4;
    LODWORD(v18) = sub_23B1C5528();
    sub_23AB6CD48();
    v11 = sub_23B1C575C();

    if ((v11 & 1) != 0)
    {

      type metadata accessor for NSFileProviderError(0);
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
      sub_23B1C5864();
      v9 = v18;
    }
    swift_willThrow();
    v19 = v9;
    v12 = v9;
    swift_willThrow();
    sub_23B1B0104(a4, &v19, a3 & 1, a1, a2);

  }
  else
  {
    v13 = *(void **)(a4 + OBJC_IVAR____TtC9libfssync13DocumentWharf_reporter);
    if (v13 && (a3 & 1) == 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5600);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
      v15 = v13;
      v16 = MEMORY[0x24BEE0D00];
      sub_23B1C6E84();
      *(_QWORD *)(inited + 96) = v16;
      *(_QWORD *)(inited + 72) = a1;
      *(_QWORD *)(inited + 80) = a2;
      swift_bridgeObjectRetain();
      sub_23AAE9FE8(inited);
      v17 = (void *)sub_23B1C61F4();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, sel_postReportWithCategory_type_payload_error_, 1, 1, v17, 0);

    }
  }
}

uint64_t sub_23B1B2134@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1B1004(*(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), *(unsigned int *)(v1 + 28), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), a1);
}

uint64_t sub_23B1B2158(uint64_t a1)
{
  uint64_t v1;

  return sub_23B1B119C(a1, v1) & 1;
}

uint64_t sub_23B1B2174()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B2184@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1B0B08(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23B1B21A0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1B0958(*(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_23B1B21C0()
{
  return sub_23B1B05F4();
}

uint64_t sub_23B1B21E0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_femptydir();
  *a1 = result;
  return result;
}

uint64_t sub_23B1B2238@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1B0694(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_23B1B225C()
{
  return objectdestroy_1924Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23B1B2268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23B1B07D4(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_23B1B2270()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B2280()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1B22A8()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B22BC(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(unsigned __int8 *__return_ptr, uint64_t *);
  unsigned __int8 v4;
  uint64_t v5;

  v2 = *(void (**)(unsigned __int8 *__return_ptr, uint64_t *))(v1 + 16);
  v5 = a1;
  v2(&v4, &v5);
  return v4;
}

uint64_t sub_23B1B22F4()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B2304@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_23B1B2334@<X0>(int *a1@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t result;

  v2 = sub_23B1C6458();
  v3 = rmdir((const char *)(v2 + 32));
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23B1B2384@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1AFFBC(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_23B1B23A0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B1B23C4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23B1C6458();
  v1 = rmdir((const char *)(v0 + 32));
  swift_release();
  return v1;
}

uint64_t sub_23B1B2400()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B2410(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_BYTE *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = a1;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  return (*(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t *, uint64_t))(*(_QWORD *)v8 + 472))(v2, sub_23B1B2588, &v7, MEMORY[0x24BEE4AE0] + 8);
}

uint64_t sub_23B1B2478(uint64_t a1)
{
  uint64_t v1;

  return sub_23B1A90AC(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_23B1B2498(uint64_t a1)
{
  uint64_t v1;

  return sub_23B1A972C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23B1B24B4(uint64_t a1)
{
  return sub_23B1B2520(a1);
}

uint64_t sub_23B1B24C8@<X0>(uint64_t a1@<X8>)
{
  return sub_23B1B2568(a1);
}

uint64_t sub_23B1B24DC(uint64_t a1)
{
  uint64_t v1;

  return sub_23B1A9D80(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_23B1B24F8()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B2508()
{
  return objectdestroy_1924Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23B1B2514()
{
  return objectdestroy_1924Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23B1B2520(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)(v1 + 16) + 136) = a1;
  return sub_23B1A8908((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23B1B24C8);
}

uint64_t sub_23B1B2568@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23B1A9AB0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_23B1B2588(uint64_t a1)
{
  return sub_23B1AF32C(a1);
}

uint64_t sub_23B1B25AC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1AF3E0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(__int128 **)(v1 + 32), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), a1);
}

uint64_t sub_23B1B25D4()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1 >> 60 != 15 && (v1 & 0xF000000000000000) != 0xB000000000000000)
    sub_23AAAE53C(*(_QWORD *)(v0 + 32), v1);
  return swift_deallocObject();
}

uint64_t sub_23B1B2614(uint64_t *a1, char a2)
{
  uint64_t v2;

  return sub_23B1AF5B0(a1, a2, *(uint64_t **)(v2 + 16), v2 + 24);
}

uint64_t sub_23B1B2620()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B2630(uint64_t a1)
{
  sub_23AAAE4B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return a1;
}

uint64_t sub_23B1B2664()
{
  return sub_23B1AEC6C();
}

uint64_t sub_23B1B2690@<X0>(_DWORD *a1@<X8>)
{
  return sub_23B1B28CC(a1);
}

uint64_t sub_23B1B26A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(uint64_t (**)(uint64_t))(v1 + 24);
  *(_QWORD *)(v2 + 24) = a1;
  return v3(v2);
}

uint64_t sub_23B1B26D0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;

  v1 = (int *)type metadata accessor for ItemMetadata();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = v3 + v1[7];
  v5 = sub_23B1C5BDC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(v3 + v1[8], v5);
  swift_bridgeObjectRelease();
  v8 = v3 + v1[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    v7(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = (uint64_t *)(v3 + v1[33]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_23AAAE53C(*v9, v10);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23B1B2818(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(type metadata accessor for ItemMetadata() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B1AF014(a1, a2, a3, v3 + v8, *(uint64_t **)(v3 + v9), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(_QWORD *)(v3 + ((v9 + 39) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v3 + ((((v9 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B1B28BC()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B28CC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1AEDD0(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(unsigned __int8 *)(v1 + 72), a1, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_23B1B2904@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23AF4009C(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_23B1B2920@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  stat *v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(stat **)(v1 + 32);
  v4 = sub_23B1C6458();
  LODWORD(v3) = lstat((const char *)(v4 + 32), v3);
  result = swift_release();
  *a1 = (_DWORD)v3;
  return result;
}

uint64_t sub_23B1B2978@<X0>(_DWORD *a1@<X8>)
{
  return sub_23B1B2B84(sub_23B1AA5BC, a1);
}

uint64_t sub_23B1B2994()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B29A4(uint64_t a1)
{
  return sub_23B1B2BF8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD))sub_23AF4F714);
}

uint64_t sub_23B1B29B0()
{
  return swift_deallocObject();
}

_QWORD *sub_23B1B29C0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;

  result = sub_23B1A8E34(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD **)(v2 + 32), *(uint64_t (**)@<X0>(uint64_t@<X0>, _DWORD *@<X8>))(v2 + 40), *(_QWORD **)(v2 + 48));
  if (!v3)
    *a2 = (_DWORD)result;
  return result;
}

_QWORD *sub_23B1B29F4@<X0>(_DWORD *a1@<X8>)
{
  return sub_23B1B2B0C(a1);
}

uint64_t sub_23B1B2A08@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_23B1B2AD8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B1A9568, a2);
}

uint64_t sub_23B1B2A24@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_23B1B2A74(a1, a2);
}

_QWORD *sub_23B1B2A38@<X0>(_DWORD *a1@<X8>)
{
  return sub_23B1B2B48(a1);
}

uint64_t sub_23B1B2A4C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_23B1B2AD8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B1A9C30, a2);
}

uint64_t sub_23B1B2A68()
{
  return objectdestroy_1924Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23B1B2A74@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(*(_QWORD *)(v2 + 16) + 136) = a1;
  result = sub_23B1A869C((void (*)(unsigned int *__return_ptr, _QWORD, _QWORD, uint64_t))sub_23B1B2A38);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_23B1B2AD8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD)@<X1>, _DWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  result = a2(a1, v3[2], v3[3], v3[4], v3[5]);
  if (!v4)
    *a3 = result;
  return result;
}

_QWORD *sub_23B1B2B0C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

_QWORD *sub_23B1B2B48@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1B1844(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_23B1B2B68@<X0>(_DWORD *a1@<X8>)
{
  return sub_23B1B2B84(sub_23B1AA74C, a1);
}

uint64_t sub_23B1B2B84@<X0>(uint64_t (*a1)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;

  v5 = 0x100000000;
  if (!*(_BYTE *)(v2 + 28))
    v5 = 0;
  result = a1(*(_QWORD *)(v2 + 16), v5 | *(unsigned int *)(v2 + 24), *(unsigned int *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_23B1B2BDC()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B2BEC(uint64_t a1)
{
  return sub_23B1B2BF8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD))sub_23AF4F8F8);
}

uint64_t sub_23B1B2BF8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], a1, v2[5]);
}

uint64_t sub_23B1B2C30()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B2C40@<X0>(_DWORD *a1@<X8>)
{
  return sub_23B1B144C(a1);
}

uint64_t sub_23B1B2C58@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1B1214(*(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
}

uint64_t sub_23B1B2C7C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23B1B2CA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23B1B13A8(a1, a2, *(_QWORD *)(v2 + 16), *(_DWORD *)(v2 + 24), *(_QWORD **)(v2 + 32));
}

uint64_t sub_23B1B2CB4()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B2CC4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;

  v2 = *(_QWORD **)(v0 + 16);
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ACFB6DC);
  if (!v1)
    *v2 = 0;
  return result;
}

uint64_t sub_23B1B2D14@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_pkg_dirstat();
  *a1 = result;
  return result;
}

void sub_23B1B2D50(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int16 v3;

  v3 = *(unsigned __int8 *)(v2 + 72) | (*(unsigned __int8 *)(v2 + 73) << 8);
  sub_23B1AF760(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, v3, SHIBYTE(v3));
}

uint64_t sub_23B1B2DAC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23B1AF914(a1, *(const void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 56) | (unsigned __int16)(*(unsigned __int8 *)(v2 + 57) << 8), a2);
}

double sub_23B1B2E00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  __int128 v6;
  _OWORD v7[2];
  uint64_t v8;

  sub_23B1A92B0(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), v7);
  if (!v3)
  {
    result = *(double *)v7;
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    *(_QWORD *)(a2 + 32) = v8;
  }
  return result;
}

double sub_23B1B2E50@<D0>(uint64_t a1@<X8>)
{
  return sub_23B1B2F28(a1);
}

double sub_23B1B2E64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23B1B2ED8(a1, (void (*)(_OWORD *__return_ptr, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B1A98B4, a2);
}

double sub_23B1B2E80@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23B1B1990(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_23B1B2E9C(uint64_t a1@<X8>)
{
  sub_23B1B2F74(a1);
}

double sub_23B1B2EB0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23B1B2ED8(a1, (void (*)(_OWORD *__return_ptr, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B1A9EC8, a2);
}

uint64_t sub_23B1B2ECC()
{
  return objectdestroy_1924Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

double sub_23B1B2ED8@<D0>(uint64_t a1@<X0>, void (*a2)(_OWORD *__return_ptr, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD)@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  double result;
  __int128 v7;
  _OWORD v8[2];
  uint64_t v9;

  a2(v8, a1, v3[2], v3[3], v3[4], v3[5]);
  if (!v4)
  {
    result = *(double *)v8;
    v7 = v8[1];
    *(_OWORD *)a3 = v8[0];
    *(_OWORD *)(a3 + 16) = v7;
    *(_QWORD *)(a3 + 32) = v9;
  }
  return result;
}

double sub_23B1B2F28@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  double v7;
  __int128 v8;

  (*(void (**)(__int128 *__return_ptr))(v1 + 16))(&v6);
  if (!v2)
  {
    result = v7;
    v5 = v8;
    *(_OWORD *)a1 = v6;
    *(double *)(a1 + 16) = result;
    *(_OWORD *)(a1 + 24) = v5;
  }
  return result;
}

void sub_23B1B2F74(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23B1B1A00(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(__int128 *__return_ptr, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_23B1B2F94@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1AFD58(*(_QWORD *)(v1 + 16), *(const char **)(v1 + 24), *(unsigned int *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_DWORD *)(v1 + 72), a1);
}

uint64_t sub_23B1B2FBC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1AFBC8(*(_QWORD *)(v1 + 16), *(const char **)(v1 + 24), *(unsigned int *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), a1, *(_DWORD *)(v1 + 80));
}

uint64_t sub_23B1B2FF4()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B3004()
{
  return swift_deallocObject();
}

uint64_t sub_23B1B3014@<X0>(_DWORD *a1@<X8>)
{
  return sub_23B1AE23C(a1);
}

uint64_t sub_23B1B3030@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1B1550(*(_QWORD *)(v1 + 16), a1);
}

void sub_23B1B304C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(void **)(v4 + 24);
  v7 = *(void **)(v4 + 32);
  v8 = *(void **)(v4 + 40);
  v9 = *(_OWORD *)(v4 + 48);
  v10 = *(void **)(v4 + 64);
  v11 = *(_QWORD *)(v4 + 104);
  v12 = *(_BYTE *)(v4 + 112);
  v13 = *(_OWORD *)(v4 + 88);
  v17[0] = *(_OWORD *)(v4 + 72);
  v17[1] = v13;
  v18 = v11;
  v19 = v12;
  v14 = *(_OWORD *)(v4 + 136);
  v20 = *(_OWORD *)(v4 + 120);
  v21 = v14;
  v15 = *(_OWORD *)(v4 + 168);
  v22 = *(_OWORD *)(v4 + 152);
  v23 = v15;
  v16 = *(_QWORD *)(v4 + 192);
  v24 = *(_QWORD *)(v4 + 184);
  sub_23AC117C8(a1, a2, a3, a4, v5, v6, v7, v8, v9, *((void **)&v9 + 1), v10, (uint64_t)v17, v16, *(_BYTE *)(v4 + 200), *(void (***)())(v4 + 208));
}

void sub_23B1B30D4(uint64_t a1)
{
  uint64_t v1;

  sub_23B1816A8(a1, *(_BYTE **)(v1 + 16));
}

uint64_t sub_23B1B30F0(__int128 *a1)
{
  return sub_23AC42C54(a1);
}

uint64_t sub_23B1B3104(uint64_t a1)
{
  return sub_23B1B26A4(a1);
}

uint64_t sub_23B1B3118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23AC0E614(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void (**)(_QWORD *))(v4 + 24), *(_QWORD *)(v4 + 32), *(void **)(v4 + 40));
}

uint64_t sub_23B1B3134@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  swift_beginAccess();
  result = fpfs_pkg_enable_dirstat();
  *a1 = result;
  return result;
}

uint64_t sub_23B1B3194@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  swift_beginAccess();
  result = fpfs_get_dirstat();
  *a1 = result;
  return result;
}

uint64_t sub_23B1B3210(uint64_t a1)
{
  return sub_23B1B2498(a1);
}

double sub_23B1B3224@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23B1B2E80(a1, a2);
}

void sub_23B1B3238(uint64_t a1)
{
  sub_23B1B30D4(a1);
}

uint64_t sub_23B1B324C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return sub_23B1B1824(a1, a2, a3);
}

uint64_t sub_23B1B32A8@<X0>(_DWORD *a1@<X8>)
{
  return sub_23B1B2C58(a1);
}

uint64_t sub_23B1B32FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return sub_23AABC754(a1, a2, a3);
}

void sub_23B1B3310()
{
  unint64_t v0;

  sub_23ACEAEC8();
  if (v0 <= 0x3F)
    swift_initClassMetadata2();
}

unint64_t sub_23B1B33E0()
{
  return 0xD000000000000079;
}

uint64_t sub_23B1B33FC()
{
  return sub_23B1C1144();
}

unint64_t sub_23B1B342C()
{
  return 0xD000000000000098;
}

unint64_t sub_23B1B3450()
{
  return 0xD0000000000000A6;
}

unint64_t sub_23B1B346C()
{
  return 0xD000000000000020;
}

unint64_t sub_23B1B3488()
{
  return 0xD000000000000046;
}

uint64_t sub_23B1B34A4()
{
  return sub_23B1C1144();
}

unint64_t sub_23B1B34D4()
{
  return 0xD000000000000052;
}

unint64_t sub_23B1B34F0()
{
  return 0xD000000000000049;
}

uint64_t sub_23B1B3510()
{
  return sub_23B1C1484();
}

uint64_t sub_23B1B3548()
{
  return sub_23B1C1484();
}

unint64_t sub_23B1B357C()
{
  return 0xD000000000000049;
}

unint64_t sub_23B1B3598()
{
  return 0xD000000000000035;
}

uint64_t sub_23B1B35CC(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_23B1B3608(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  id v10;
  id v11;
  _QWORD v12[6];
  id v13;
  unsigned __int8 v14;

  v3 = v2;
  v13 = 0;
  v14 = -1;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = &v13;
  v6[3] = a1;
  v6[4] = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_23B1C2FF8;
  *(_QWORD *)(v7 + 24) = v6;
  v12[4] = sub_23AB22A20;
  v12[5] = v7;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_23B1A764C;
  v12[3] = &block_descriptor_82_1;
  v8 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_runIfPossible_, v8);
  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if (v14 == 255)
    {
      swift_release();
      return 0;
    }
    else
    {
      v10 = v13;
      if ((v14 & 1) != 0)
      {
        v12[0] = v13;
        v11 = v13;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
        swift_willThrowTypedImpl();
      }
      sub_23B1C3014(v13, v14);
      swift_release();
    }
    return (uint64_t)v10;
  }
  return result;
}

void sub_23B1B37D4(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v3;
  uint64_t v4;

  a2(&v4);
  v3 = v4;
  sub_23B1C3014(*(void **)a1, *(_BYTE *)(a1 + 8));
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = 0;
}

unint64_t sub_23B1B3834(uint64_t a1)
{
  unint64_t result;

  result = 0;
  switch(a1)
  {
    case 1:
      result = 0x676E696E6E6970;
      break;
    case 2:
    case 64:
      result = 0x74616C7563657073;
      break;
    case 4:
      result = 0x20746E65746E6F63;
      break;
    case 8:
      result = 0x7220746365726964;
      break;
    case 16:
      result = 0xD00000000000001ALL;
      break;
    case 32:
      result = 0xD000000000000027;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_23B1B393C()
{
  uint64_t *v0;

  return sub_23B1B3834(*v0);
}

unint64_t sub_23B1B3944()
{
  unint64_t *v0;

  return sub_23AF1604C(*v0);
}

uint64_t sub_23B1B394C()
{
  uint64_t *v0;

  return sub_23AFD4D3C(*v0);
}

void sub_23B1B3954()
{
  uint64_t v0;

  sub_23B1B3970();
  qword_2542EDD60 = v0;
}

void sub_23B1B3970()
{
  xpc_object_t v0;
  id v1;
  void *v2;

  v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5B8], 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x24BDAC698], (const char *)*MEMORY[0x24BDAC6A8]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC6B8], 0);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC598], 0);
  if (*MEMORY[0x24BDAC6D8])
  {
    xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC6D8], 1);
    v1 = objc_allocWithZone(MEMORY[0x24BE313D0]);
    v2 = (void *)sub_23B1C63BC();
    objc_msgSend(v1, sel_initWithLabel_options_criteria_, v2, 1, v0);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

id sub_23B1B3A88()
{
  void *v0;

  swift_bridgeObjectRetain();
  v0 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_23B1B3AC8()
{
  return sub_23B1B3B10();
}

uint64_t sub_23B1B3ADC()
{
  return sub_23B1B3BC0();
}

uint64_t sub_23B1B3AF0()
{
  return sub_23B1B3C6C();
}

uint64_t sub_23B1B3AFC()
{
  return sub_23B1B3B10();
}

uint64_t sub_23B1B3B10()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23B1C5F54();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23B1B3BAC()
{
  return sub_23B1B3BC0();
}

uint64_t sub_23B1B3BC0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_23B1C5F60();
}

uint64_t sub_23B1B3C60()
{
  return sub_23B1B3C6C();
}

uint64_t sub_23B1B3C6C()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E67E8);
  sub_23B1C5F3C();
  return swift_endAccess();
}

void sub_23B1B3CC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (**v10)(char);
  uint64_t v11;

  v2 = *(uint64_t (**)(uint64_t))(v0 + 24);
  if (v2)
  {
    v3 = v0;
    v4 = swift_retain();
    v5 = v2(v4);
    sub_23AAB7948((uint64_t)v2);
    if (v5)
    {
      v6 = qword_2542EE080;
      *(_QWORD *)(v0 + qword_2542EE080) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 40) + 16) + 144);
      swift_retain();
      swift_release();
      if (!*(_QWORD *)(v0 + v6)
        || (swift_retain(), v7 = sub_23B072CF8(), swift_release(), *(_QWORD *)(v0 + qword_2542EE060))
        && (swift_retain(), sub_23AFF7FA8(v7 & 1), swift_release(), v1)
        || (v8 = *(_QWORD *)(v0 + v6)) == 0)
      {
        swift_release();
      }
      else
      {
        v9 = swift_allocObject();
        *(_QWORD *)(v9 + 16) = v5;
        *(_QWORD *)(v9 + 24) = v3;
        v10 = (uint64_t (**)(char))(v8 + qword_2542EE198);
        v11 = *(_QWORD *)(v8 + qword_2542EE198);
        *v10 = sub_23B1C396C;
        v10[1] = (uint64_t (*)(char))v9;
        swift_retain();
        sub_23AAB7948(v11);
      }
    }
  }
}

uint64_t sub_23B1B3E04(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a3;
  *(_BYTE *)(v5 + 24) = a1;
  swift_retain();
  sub_23ACFFA68((uint64_t)"speculativeDiskManagementActivation()", 37, 2, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23B1C3998, v5);
  return swift_release();
}

uint64_t sub_23B1B3E9C(uint64_t result, char a2)
{
  if (*(_QWORD *)(result + qword_2542EE060))
  {
    swift_retain();
    sub_23AFF7FA8(a2 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_23B1B3EE8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  __int128 v15;
  char *v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v63[2];
  void (*v64)(char *, uint64_t);
  void (*v65)(char *, uint64_t);
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  __int128 aBlock;
  __int128 v83;
  uint64_t (*v84)(char);
  _QWORD *v85;
  uint64_t v86;

  v2 = v0;
  v86 = *MEMORY[0x24BDAC8D0];
  v79 = *v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E54F0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_23B1C6B30();
  v75 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v7 = (char *)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67D8);
  v74 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v9 = (char *)v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD448);
  v76 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v81 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(uint64_t))v0[3];
  if (!v11 || (v12 = swift_retain(), v13 = v11(v12), sub_23AAB7948((uint64_t)v11), !v13))
    sub_23AFF36F0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLBackgroundDownloader.swift", 142, 2, 155);
  sub_23B1B3CC8();
  if (!v1)
  {
    v14 = sub_23AFB5D28();
    v72 = 0;
    if ((v14 & 0x1000) != 0 && *(uint64_t *)((char *)v0 + qword_2542EE078 + 72) >= 1)
    {
      v15 = *(_OWORD *)(v79 + 96);
      aBlock = *(_OWORD *)(v79 + 80);
      v83 = v15;
      type metadata accessor for SpeculativeSetPacer();
    }
    sub_23B1B3AF0();
    v16 = v7;
    sub_23B1C6B0C();
    v71 = v13;
    v17 = (void *)sub_23AFD7BC0();
    *(_QWORD *)&aBlock = v17;
    v18 = sub_23B1C6B00();
    v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
    v70 = v18;
    v69(v5, 1, 1, v18);
    v68 = sub_23AA9F52C(0, (unint64_t *)&qword_2542E5500);
    v67 = sub_23AAB5A28((unint64_t *)&unk_2542E67C8, (uint64_t *)&unk_2542E67D8, MEMORY[0x24BDB9EE8]);
    v66 = sub_23AAB635C();
    v19 = v17;
    v20 = v77;
    v63[0] = v5;
    sub_23B1C5F90();
    sub_23AA8A05C((uint64_t)v5, (uint64_t *)&unk_2542E54F0);

    v65 = *(void (**)(char *, uint64_t))(v75 + 8);
    v21 = v16;
    v65(v16, v80);
    v64 = *(void (**)(char *, uint64_t))(v74 + 8);
    v22 = v20;
    v64(v9, v20);
    v23 = swift_allocObject();
    swift_weakInit();
    v24 = (_QWORD *)swift_allocObject();
    v25 = (_QWORD *)v79;
    v73 = *(_QWORD *)(v79 + 80);
    v24[2] = v73;
    v74 = v25[11];
    v24[3] = v74;
    v75 = v25[12];
    v24[4] = v75;
    v79 = v25[13];
    v24[5] = v79;
    v24[6] = v23;
    v63[1] = sub_23AAB5A28((unint64_t *)&unk_2542E0298, &qword_2542DD448, MEMORY[0x24BDB9920]);
    v26 = v78;
    v27 = v81;
    v28 = sub_23B1C5FA8();
    swift_release();
    v76 = *(_QWORD *)(v76 + 8);
    ((void (*)(char *, uint64_t))v76)(v27, v26);
    *(_QWORD *)((char *)v2 + qword_2542EE088) = v28;
    swift_release();
    sub_23B1B3C60();
    v29 = v21;
    sub_23B1C6B24();
    v30 = (void *)sub_23AFD7BC0();
    *(_QWORD *)&aBlock = v30;
    v31 = v63[0];
    v69((char *)v63[0], 1, 1, v70);
    v32 = v30;
    sub_23B1C5F90();
    sub_23AA8A05C(v31, (uint64_t *)&unk_2542E54F0);

    v65(v29, v80);
    v64(v9, v22);
    v33 = swift_allocObject();
    swift_weakInit();
    v34 = (_QWORD *)swift_allocObject();
    v35 = v74;
    v34[2] = v73;
    v34[3] = v35;
    v36 = v79;
    v34[4] = v75;
    v34[5] = v36;
    v34[6] = v33;
    v37 = sub_23B1C5FA8();
    swift_release();
    ((void (*)(char *, uint64_t))v76)(v27, v26);
    *(_QWORD *)((char *)v2 + qword_2542E7028) = v37;
    swift_release();
    v38 = *(void **)((char *)v2 + qword_2542EE058);
    v39 = MEMORY[0x24BDAC760];
    if (v38)
    {
      swift_bridgeObjectRetain();
      v40 = (void *)sub_23B1C63BC();
      swift_bridgeObjectRelease();
      v41 = swift_allocObject();
      swift_weakInit();
      v42 = (_QWORD *)swift_allocObject();
      v43 = v74;
      v42[2] = v73;
      v42[3] = v43;
      v44 = v79;
      v42[4] = v75;
      v42[5] = v44;
      v42[6] = v41;
      v84 = sub_23B1C3958;
      v85 = v42;
      *(_QWORD *)&aBlock = v39;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v83 = sub_23B1B35CC;
      *((_QWORD *)&v83 + 1) = &block_descriptor_296;
      v45 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v38, sel_registerKey_notificationsUpdatesHandlers_, v40, v45);
      _Block_release(v45);

    }
    v46 = (void *)v2[2];
    v84 = (uint64_t (*)(char))sub_23B1B35BC;
    v85 = 0;
    *(_QWORD *)&aBlock = v39;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v83 = sub_23AA9432C;
    *((_QWORD *)&v83 + 1) = &block_descriptor_289_0;
    v47 = _Block_copy(&aBlock);
    swift_release();
    *(_QWORD *)&aBlock = 0;
    v48 = objc_msgSend(v46, sel_fetchSwift_error_, v47, &aBlock);
    _Block_release(v47);
    v49 = (id)aBlock;
    if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v48)
    {
      objc_msgSend(v48, sel_next);
      v50 = (uint64_t)objc_msgSend(v48, sel_longAtIndex_, 0);
      v51 = sub_23AFD7C80(8u);
      v53 = *(_QWORD *)(v51 + 16);
      v52 = *(_QWORD *)(v51 + 24);
      v54 = __OFSUB__(v52, v53);
      v55 = v52 - v53;
      if (!v54)
      {
        if (v55 < v50)
          *(_QWORD *)(v51 + 24) = v50;
        *(_QWORD *)(v51 + 16) = v50;
        v56 = swift_retain();
        if (v50 < 1)
        {
          v61 = v72;
        }
        else
        {
          v60 = v72;
          sub_23B1BFEC8(v56, v57, v58, v59);
          v61 = v60;
          if (v60)
          {
LABEL_21:
            swift_release();

            return swift_release();
          }
        }
        sub_23B1B4CF0();
        if (!v61)
          sub_23B1B51B0();
        goto LABEL_21;
      }
LABEL_24:
      __break(1u);
    }
    sub_23B1C587C();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_23B1B47B8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23B1B4CF0();
    return swift_release();
  }
  return result;
}

uint64_t sub_23B1B4824()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23B1C04F8();
    return swift_release();
  }
  return result;
}

uint64_t sub_23B1B4878(char a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_23B1B492C(a1 & 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_23B1B48D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = qword_2542EE060;
  if (*(_QWORD *)(v0 + qword_2542EE060))
  {
    swift_retain();
    sub_23AFF6568();
    swift_release();
  }
  *(_QWORD *)(v0 + v1) = 0;
  return swift_release();
}

uint64_t sub_23B1B492C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t result;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  _DWORD v17[4];

  v2 = v1;
  v4 = sub_23B1C5E4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_BYTE *)(v2 + qword_2542EE068) ^ 1) & a1;
  *(_BYTE *)(v2 + qword_2542EE068) = a1;
  v9 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v10 = sub_23B1C5E40();
  v11 = sub_23B1C6A88();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v12 = 67109120;
    v17[3] = a1 & 1;
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v10, v11, "⏰ update CacheDeleteCacheable: %{BOOL}d", v12, 8u);
    MEMORY[0x23B8614BC](v12, -1, -1);
  }

  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v14 = *(uint64_t (**)(uint64_t))(v2 + 24);
    if (v14)
    {
      v15 = swift_retain();
      v16 = v14(v15);
      result = sub_23AAB7948((uint64_t)v14);
      if (v16)
      {
        swift_retain();
        sub_23ACFFA68((uint64_t)"updateCacheDeleteCacheable(_:)", 30, 2, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23B1C38E0, v2);
        swift_release();
        return swift_release();
      }
    }
  }
  return result;
}

void sub_23B1B4B0C()
{
  void *v0;

  sub_23B1B9708();
  if (v0)

}

uint64_t sub_23B1B4B3C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_23B17FE44(a1, a2, a3, (void (*)(uint64_t))sub_23B1C1C58);
}

uint64_t sub_23B1B4B48(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_23B17FE44(a1, a2, a3, (void (*)(uint64_t))sub_23B1C1CC0);
}

id sub_23B1B4B54()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + qword_2542EE070) & 1) != 0)
  {
    if (qword_2542E4C20 != -1)
      swift_once();
    return (id)sub_23AFEA1B4((uint64_t)sub_23B1C38D8, v0);
  }
  else
  {
    *(_BYTE *)(v0 + qword_2542EE070) = 1;
    if (qword_2542E4C20 != -1)
      swift_once();
    return objc_msgSend((id)qword_2542EDD60, sel_addWatcher_, v0);
  }
}

uint64_t sub_23B1B4C10@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t))(result + 24);
  if (v3 && (v4 = swift_retain(), v5 = v3(v4), result = sub_23AAB7948((uint64_t)v3), v5))
  {
    sub_23AFB0B90();
    result = swift_release();
    v6 = 0;
  }
  else
  {
    v6 = 1;
  }
  *a2 = v6;
  return result;
}

id sub_23B1B4C80()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v1 = qword_2542EE070;
  if (*(_BYTE *)(v0 + qword_2542EE070) == 1)
  {
    if (qword_2542E4C20 != -1)
      swift_once();
    result = objc_msgSend((id)qword_2542EDD60, sel_removeWatcher_, v0);
    *(_BYTE *)(v0 + v1) = 0;
  }
  return result;
}

void sub_23B1B4CF0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 16);
  aBlock[4] = sub_23B1B35B8;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_276;
  v2 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v3 = objc_msgSend(v1, sel_fetchSwift_error_, v2, aBlock);
  _Block_release(v2);
  v4 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (v3)
  {
    if (objc_msgSend(v3, sel_next))
      sub_23B1B4B54();
    else
      sub_23B1B4C80();

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
}

void sub_23B1B4E3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id aBlock[7];

  v2 = v0;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = sub_23B1C60EC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(uint64_t (**)(uint64_t))(v0 + 24);
  if (!v7)
    return;
  v8 = swift_retain();
  v9 = v7(v8);
  sub_23AAB7948((uint64_t)v7);
  if (!v9)
    return;
  v10 = sub_23AFD7BC0();
  *v6 = v10;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE5610], v3);
  v11 = (id)v10;
  LOBYTE(v10) = sub_23B1C6104();
  (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
  }
  v12 = *(void **)(v2 + 16);
  aBlock[4] = sub_23B1B35C0;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_273_0;
  v13 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v14 = objc_msgSend(v12, sel_fetchSwift_error_, v13, aBlock);
  _Block_release(v13);
  v15 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    goto LABEL_15;
  if (v14)
  {
    if (objc_msgSend(v14, sel_next))
    {
      while (1)
      {
        v16 = (void *)MEMORY[0x23B8601A8]();
        sub_23B1B5098(v14);
        if (v1)
          break;
        objc_autoreleasePoolPop(v16);
        if ((objc_msgSend(v14, sel_next) & 1) == 0)
          goto LABEL_12;
      }
      objc_autoreleasePoolPop(v16);
    }
LABEL_12:
    swift_release();

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
  }
}

uint64_t sub_23B1B5098(void *a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v5 = (char *)&v8 - v4;
  v6 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  result = (*(uint64_t (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 16))(a1, 0, AssociatedTypeWitness, v6);
  if (!v1)
    sub_23B1B8048((uint64_t)v5);
  return result;
}

uint64_t sub_23B1B51B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void *v25;
  void (*v26)(char *, uint64_t);
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v1 = sub_23B1C602C();
  v33 = *(_QWORD *)(v1 - 8);
  v34 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v32 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23B1C60A4();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23B1C6020();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (void (**)(char *, uint64_t))((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = sub_23B1C60E0();
  v9 = *(_QWORD *)(v28 - 8);
  v10 = MEMORY[0x24BDAC7A8](v28);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v26 - v14;
  v16 = *(uint64_t (**)(uint64_t))(v0 + 24);
  if (v16)
  {
    v17 = swift_retain();
    v18 = v16(v17);
    result = sub_23AAB7948((uint64_t)v16);
    if (v18)
    {
      v27 = (id)sub_23AFD7BC0();
      sub_23B1C60C8();
      *v8 = *(_QWORD *)(v0 + qword_2542EE078 + 96);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE5400], v5);
      MEMORY[0x23B85EA14](v12, v8);
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
      v26 = *(void (**)(char *, uint64_t))(v9 + 8);
      v19 = v28;
      v26(v12, v28);
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v18;
      *(_QWORD *)(v20 + 24) = v0;
      aBlock[4] = sub_23B1C38BC;
      aBlock[5] = v20;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_270_0;
      v21 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      v22 = v29;
      sub_23B1C6068();
      v35 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      v23 = v32;
      v24 = v34;
      sub_23B1C6DE8();
      v25 = v27;
      MEMORY[0x23B85F410](v15, v22, v23, v21);
      _Block_release(v21);
      swift_release();

      (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v24);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v31);
      v26(v15, v19);
      return swift_release();
    }
  }
  return result;
}

void sub_23B1B5508(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v3);
  if (qword_2542E4C20 != -1)
    swift_once();
  v4 = sub_23AFE9F34((uint64_t)sub_23AAED16C, 0);
  if (v4 == 2 || (v4 & 1) != 0)
    sub_23AFB04F0((uint64_t)"scheduleCancellationOfSpeculativeSetDownloads()", 47, 2, (uint64_t)sub_23B1C38C4, a2, MEMORY[0x24BEE4AE0] + 8, MEMORY[0x24BEE4AE0]);
}

uint64_t sub_23B1B576C()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unsigned int v6;
  id v7;
  char isEscapingClosureAtFileLocation;
  void *v9;
  unsigned __int8 v10;
  id aBlock;
  uint64_t v13;
  id (*v14)(uint64_t, void *);
  void *v15;
  unint64_t (*v16)();
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v1 = *v0;
  v2 = (void *)v0[2];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 80);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(v1 + 88);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(v1 + 104);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_23B1C389C;
  *(_QWORD *)(v4 + 24) = v3;
  v16 = (unint64_t (*)())sub_23AA956C8;
  v17 = v4;
  aBlock = (id)MEMORY[0x24BDAC760];
  v13 = 1107296256;
  v14 = sub_23AA9432C;
  v15 = &block_descriptor_261;
  v5 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v6 = objc_msgSend(v2, sel_executeSwift_error_, v5, &aBlock);
  _Block_release(v5);
  v7 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (!v6)
  {
LABEL_5:
    sub_23B1C587C();

    swift_willThrow();
    return swift_release();
  }
  v16 = sub_23B1B33E0;
  v17 = 0;
  aBlock = (id)MEMORY[0x24BDAC760];
  v13 = 1107296256;
  v14 = sub_23AA9432C;
  v15 = &block_descriptor_264;
  v9 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v10 = objc_msgSend(v2, sel_executeSwift_error_, v9, &aBlock);
  _Block_release(v9);
  v7 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
LABEL_8:
    __break(1u);
  if ((v10 & 1) == 0)
    goto LABEL_5;
  return swift_release();
}

uint64_t sub_23B1B59C0()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t))(*(_QWORD *)(AssociatedConformanceWitness + 40) + 8))(AssociatedTypeWitness);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1B5AC8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  unsigned int v4;
  id v5;
  void *v6;
  unsigned int v7;
  void *v8;
  unsigned int v9;
  void *v10;
  unsigned int v11;
  id v12;
  uint64_t result;
  id aBlock;
  uint64_t v15;
  id (*v16)(uint64_t, void *);
  void *v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 16);
  v18 = sub_23B1B33FC;
  v19 = 0;
  v2 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v15 = 1107296256;
  v16 = sub_23AA9432C;
  v17 = &block_descriptor_242;
  v3 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  v5 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (!v4)
  {
LABEL_10:
    sub_23B1C587C();

    return swift_willThrow();
  }
  v18 = (uint64_t (*)())sub_23B1B342C;
  v19 = 0;
  aBlock = v2;
  v15 = 1107296256;
  v16 = sub_23AA9432C;
  v17 = &block_descriptor_245_0;
  v6 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v7 = objc_msgSend(v1, sel_executeSwift_error_, v6, &aBlock);
  _Block_release(v6);
  v5 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (!v7)
    goto LABEL_10;
  v18 = sub_23B1B3448;
  v19 = 0;
  aBlock = v2;
  v15 = 1107296256;
  v16 = sub_23AA9432C;
  v17 = &block_descriptor_248;
  v8 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  v5 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  if (!v9)
    goto LABEL_10;
  v18 = sub_23B1B344C;
  v19 = 0;
  aBlock = v2;
  v15 = 1107296256;
  v16 = sub_23AA9432C;
  v17 = &block_descriptor_251;
  v10 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v11 = objc_msgSend(v1, sel_executeSwift_error_, v10, &aBlock);
  _Block_release(v10);
  v12 = aBlock;
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
    goto LABEL_16;
  if (v11)
    return result;
  sub_23B1C587C();

  return swift_willThrow();
}

uint64_t sub_23B1B5DC8()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unsigned int v7;
  id v8;
  char isEscapingClosureAtFileLocation;
  void *v10;
  void *v11;
  unsigned int v12;
  id v13;
  void *v14;
  unsigned int v15;
  void *v16;
  unsigned int v17;
  void *v18;
  unsigned int v19;
  void *v20;
  unsigned __int8 v21;
  id v22;
  id aBlock;
  uint64_t v25;
  id (*v26)(uint64_t, void *);
  void *v27;
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v1 = *v0;
  v2 = (void *)v0[2];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 80);
  *(_OWORD *)(v3 + 24) = *(_OWORD *)(v1 + 88);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(v1 + 104);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_23B1C3870;
  *(_QWORD *)(v4 + 24) = v3;
  v28 = sub_23AA956C8;
  v29 = v4;
  aBlock = (id)MEMORY[0x24BDAC760];
  v25 = 1107296256;
  v26 = sub_23AA9432C;
  v27 = &block_descriptor_224_1;
  v5 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v6 = v2;
  v7 = objc_msgSend(v2, sel_executeSwift_error_, v5, &aBlock);
  _Block_release(v5);
  v8 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v7)
  {
    sub_23B1C587C();

    goto LABEL_16;
  }
  v28 = (uint64_t (*)())sub_23B1B3450;
  v29 = 0;
  v10 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v25 = 1107296256;
  v26 = sub_23AA9432C;
  v27 = &block_descriptor_227_2;
  v11 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v12 = objc_msgSend(v2, (SEL)&selRef_serialQueue + 4, v11, &aBlock);
  _Block_release(v11);
  v13 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    goto LABEL_19;
  if (!v12)
  {
LABEL_15:
    sub_23B1C587C();

    goto LABEL_16;
  }
  v28 = (uint64_t (*)())sub_23B1B346C;
  v29 = 0;
  aBlock = v10;
  v25 = 1107296256;
  v26 = sub_23AA9432C;
  v27 = &block_descriptor_230_0;
  v14 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v15 = objc_msgSend(v6, (SEL)&selRef_serialQueue + 4, v14, &aBlock);
  _Block_release(v14);
  v13 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (!v15)
    goto LABEL_15;
  v28 = (uint64_t (*)())sub_23B1B3488;
  v29 = 0;
  aBlock = v10;
  v25 = 1107296256;
  v26 = sub_23AA9432C;
  v27 = &block_descriptor_233_0;
  v16 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v17 = objc_msgSend(v6, (SEL)&selRef_serialQueue + 4, v16, &aBlock);
  _Block_release(v16);
  v13 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v17)
    goto LABEL_15;
  v28 = (uint64_t (*)())sub_23B1B33E0;
  v29 = 0;
  aBlock = v10;
  v25 = 1107296256;
  v26 = sub_23AA9432C;
  v27 = &block_descriptor_236_2;
  v18 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v19 = objc_msgSend(v6, (SEL)&selRef_serialQueue + 4, v18, &aBlock);
  _Block_release(v18);
  v13 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  if (!v19)
    goto LABEL_15;
  v28 = sub_23B1B34A4;
  v29 = 0;
  aBlock = v10;
  v25 = 1107296256;
  v26 = sub_23AA9432C;
  v27 = &block_descriptor_239;
  v20 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v21 = objc_msgSend(v6, (SEL)&selRef_serialQueue + 4, v20, &aBlock);
  _Block_release(v20);
  v22 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    goto LABEL_23;
  if ((v21 & 1) == 0)
  {
    sub_23B1C587C();

LABEL_16:
    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_23B1B6294()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t))(*(_QWORD *)(AssociatedConformanceWitness + 40) + 8))(AssociatedTypeWitness);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

void sub_23B1B639C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  if (v1)
  {
    v2 = swift_retain();
    v3 = v1(v2);
    sub_23AAB7948((uint64_t)v1);
    if (v3)
      sub_23AEAD3C0();
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_23B1B64A8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  unsigned int v4;
  id v5;
  void *v6;
  unsigned int v7;
  uint64_t result;
  id aBlock;
  uint64_t v10;
  id (*v11)(uint64_t, void *);
  void *v12;
  unint64_t (*v13)();
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 16);
  v13 = sub_23B1B34D4;
  v14 = 0;
  v2 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v10 = 1107296256;
  v11 = sub_23AA9432C;
  v12 = &block_descriptor_211;
  v3 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  v5 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v4)
  {
    v13 = sub_23B1B34F0;
    v14 = 0;
    aBlock = v2;
    v10 = 1107296256;
    v11 = sub_23AA9432C;
    v12 = &block_descriptor_214_1;
    v6 = _Block_copy(&aBlock);
    swift_release();
    aBlock = 0;
    v7 = objc_msgSend(v1, sel_executeSwift_error_, v6, &aBlock);
    _Block_release(v6);
    v5 = aBlock;
    result = swift_isEscapingClosureAtFileLocation();
    if ((result & 1) == 0)
    {
      if (v7)
        return result;
      goto LABEL_5;
    }
LABEL_8:
    __break(1u);
  }
LABEL_5:
  sub_23B1C587C();

  return swift_willThrow();
}

uint64_t sub_23B1B6674()
{
  return sub_23B1BE260(sub_23B1B34D4, &block_descriptor_208);
}

uint64_t sub_23B1B66D0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  unsigned int v4;
  id v5;
  void *v6;
  unsigned int v7;
  void *v8;
  unsigned int v9;
  uint64_t v10;
  void *v11;
  unsigned int v12;
  id v13;
  char isEscapingClosureAtFileLocation;
  uint64_t v15;
  void *v16;
  unsigned int v17;
  id v18;
  char v19;
  uint64_t v20;
  void *v21;
  unsigned __int8 v22;
  id v23;
  char v24;
  id aBlock;
  uint64_t v27;
  id (*v28)(uint64_t, void *);
  void *v29;
  unint64_t (*v30)();
  uint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 16);
  v30 = sub_23B1B34D4;
  v31 = 0;
  v2 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v27 = 1107296256;
  v28 = sub_23AA9432C;
  v29 = &block_descriptor_178_1;
  v3 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  v5 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (!v4)
  {
LABEL_15:
    sub_23B1C587C();

    return swift_willThrow();
  }
  v30 = sub_23B1B357C;
  v31 = 0;
  aBlock = v2;
  v27 = 1107296256;
  v28 = sub_23AA9432C;
  v29 = &block_descriptor_181;
  v6 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v7 = objc_msgSend(v1, sel_executeSwift_error_, v6, &aBlock);
  _Block_release(v6);
  v5 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (!v7)
    goto LABEL_15;
  v30 = sub_23B1B34F0;
  v31 = 0;
  aBlock = v2;
  v27 = 1107296256;
  v28 = sub_23AA9432C;
  v29 = &block_descriptor_184_0;
  v8 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  v5 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v9)
    goto LABEL_15;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_23B1C37C0;
  *(_QWORD *)(v10 + 24) = v0;
  v30 = (unint64_t (*)())sub_23AA956C8;
  v31 = v10;
  aBlock = v2;
  v27 = 1107296256;
  v28 = sub_23AA9432C;
  v29 = &block_descriptor_191_0;
  v11 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v12 = objc_msgSend(v1, sel_executeSwift_error_, v11, &aBlock);
  _Block_release(v11);
  v13 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!v12)
  {
    sub_23B1C587C();

    swift_willThrow();
    return swift_release();
  }
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_23B1C3804;
  *(_QWORD *)(v15 + 24) = v0;
  v30 = (unint64_t (*)())sub_23AA956C8;
  v31 = v15;
  aBlock = (id)MEMORY[0x24BDAC760];
  v27 = 1107296256;
  v28 = sub_23AA9432C;
  v29 = &block_descriptor_198;
  v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v17 = objc_msgSend(v1, sel_executeSwift_error_, v16, &aBlock);
  _Block_release(v16);
  v18 = aBlock;
  v19 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v19 & 1) != 0)
    goto LABEL_23;
  if (v17)
  {
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = sub_23B1C381C;
    *(_QWORD *)(v20 + 24) = v0;
    v30 = (unint64_t (*)())sub_23AA956C8;
    v31 = v20;
    aBlock = (id)MEMORY[0x24BDAC760];
    v27 = 1107296256;
    v28 = sub_23AA9432C;
    v29 = &block_descriptor_205_0;
    v21 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    v22 = objc_msgSend(v1, sel_executeSwift_error_, v21, &aBlock);
    _Block_release(v21);
    v23 = aBlock;
    v24 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v24 & 1) == 0)
    {
      if ((v22 & 1) == 0)
      {
        sub_23B1C587C();

        swift_willThrow();
      }
      return swift_release_n();
    }
LABEL_24:
    __break(1u);
  }
  sub_23B1C587C();

  swift_willThrow();
  return swift_release_n();
}

void sub_23B1B6C30()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1B639C();
}

void sub_23B1B6CB4()
{
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1B639C();
}

uint64_t sub_23B1B6D04()
{
  uint64_t v1;

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C27FC();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C2560();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return v1;
}

uint64_t sub_23B1B6E34()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C27FC();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C2560();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

void sub_23B1B6F30(char *a1, unint64_t a2, uint64_t a3)
{
  sub_23B1B6F4C(a1, a2, a3, (void *)0xFFFFFFFFFFFFFFFFLL, -1);
}

void sub_23B1B6F4C(char *a1, unint64_t a2, uint64_t a3, void *a4, int64_t a5)
{
  uint64_t *v5;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void (*v20)(char *, uint64_t, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  _BOOL4 v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  _BOOL4 v40;
  int64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void (**v49)(char *, id);
  _QWORD *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  char isEscapingClosureAtFileLocation;
  unsigned int v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  int64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  void *v72;
  unsigned __int8 v73;
  id v74;
  char v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  int64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  void *v86;
  unsigned int v87;
  char v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  unint64_t v99;
  void (**v100)(char *, id);
  id v101;
  int64_t v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  void (*v106)(char *, char *, uint64_t);
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  id aBlock;
  uint64_t v115;
  id (*v116)(uint64_t, void *);
  void *v117;
  uint64_t (*v118)();
  uint64_t v119;
  uint64_t v120;

  v102 = a5;
  v105 = a4;
  v95 = a3;
  v120 = *MEMORY[0x24BDAC8D0];
  v8 = *(_QWORD *)(*v5 + 96);
  v103 = *v5;
  v109 = *(_QWORD *)(v103 + 80);
  v110 = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v89 - v14;
  v16 = sub_23B1C5E4C();
  v100 = *(void (***)(char *, id))(v16 - 8);
  v101 = (id)v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v107 = a1;
  v108 = v10;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v20(v15, (uint64_t)a1, AssociatedTypeWitness);
  v21 = sub_23B1C5E40();
  v22 = sub_23B1C6A88();
  v23 = v22;
  v24 = os_log_type_enabled(v21, v22);
  v112 = v13;
  v106 = (void (*)(char *, char *, uint64_t))v20;
  v99 = a2;
  if (v24)
  {
    v25 = swift_slowAlloc();
    v98 = (void *)swift_slowAlloc();
    aBlock = v98;
    *(_DWORD *)v25 = 136446466;
    v96 = v25 + 4;
    v106(v13, v15, AssociatedTypeWitness);
    v26 = *(void (**)(char *, uint64_t))(v108 + 8);
    v26(v15, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    LODWORD(v97) = v23;
    v27 = sub_23B1C7304();
    v29 = v28;
    v26(v112, AssociatedTypeWitness);
    v30 = v112;
    v113 = sub_23AABEC68(v27, v29, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2082;
    v31 = sub_23AF1604C(a2);
    v113 = sub_23AABEC68(v31, v32, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v21, (os_log_type_t)v97, "⏰  scheduling background download <i:%{public}s reason:%{public}s>", (uint8_t *)v25, 0x16u);
    v33 = v98;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v33, -1, -1);
    v34 = v25;
    v20 = (void (*)(char *, uint64_t, uint64_t))v106;
    MEMORY[0x23B8614BC](v34, -1, -1);

    v100[1](v18, v101);
    v35 = AssociatedTypeWitness;
    v36 = v110;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v108 + 8))(v15, AssociatedTypeWitness);

    v100[1](v18, v101);
    v35 = AssociatedTypeWitness;
    v36 = v110;
    v30 = v13;
  }
  v37 = (id)sub_23B1C5480();
  v40 = (uint64_t)v105 < 0 || v37 == v105 || v102 < 0;
  if (v40)
    v41 = 0;
  else
    v41 = v102;
  if (v40)
    v42 = 0;
  else
    v42 = v105;
  v105 = *(id *)(v111 + 16);
  v20(v30, (uint64_t)v107, v35);
  v43 = v108;
  v44 = *(unsigned __int8 *)(v108 + 80);
  v45 = (v44 + 48) & ~v44;
  v92 = v44;
  v91 = v45 + v104;
  v46 = (v45 + v104 + 7) & 0xFFFFFFFFFFFFFFF8;
  v102 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  v98 = (void *)(v44 | 7);
  v47 = (_QWORD *)swift_allocObject();
  v47[2] = v109;
  v48 = v103;
  v96 = *(_QWORD *)(v103 + 88);
  v47[3] = v96;
  v47[4] = v36;
  v97 = *(_QWORD *)(v48 + 104);
  v47[5] = v97;
  v93 = v45;
  v49 = *(void (***)(char *, id))(v43 + 32);
  v50 = v47;
  v108 = v35;
  v100 = v49;
  ((void (*)(char *, char *, uint64_t))v49)((char *)v47 + v45, v112, v35);
  v94 = v46;
  *(_QWORD *)((char *)v50 + v46) = v111;
  v51 = (char *)v50 + v102;
  v101 = v42;
  v102 = v41;
  *(_QWORD *)v51 = v42;
  v51[8] = v40;
  v52 = (char *)v50 + ((v46 + 31) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)v52 = v41;
  LODWORD(v103) = v40;
  v52[8] = v40;
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = sub_23B1C3484;
  *(_QWORD *)(v53 + 24) = v50;
  v118 = sub_23AA956C8;
  v119 = v53;
  v54 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v115 = 1107296256;
  v116 = sub_23AA9432C;
  v117 = &block_descriptor_155_1;
  v55 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v56 = objc_msgSend(v105, sel_fetchSwift_error_, v55, &aBlock);
  _Block_release(v55);
  v57 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  if (!v56)
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
    return;
  }
  v90 = v56;
  v59 = objc_msgSend(v56, sel_next);
  v60 = v112;
  v61 = v108;
  v106(v112, v107, v108);
  if (v59)
  {
    v62 = (v92 + 56) & ~v92;
    v63 = (v104 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
    v64 = (_QWORD *)swift_allocObject();
    v65 = v96;
    v64[2] = v109;
    v64[3] = v65;
    v66 = v97;
    v64[4] = v110;
    v64[5] = v66;
    v64[6] = v99;
    ((void (*)(char *, char *, uint64_t))v100)((char *)v64 + v62, v60, v61);
    *(_QWORD *)((char *)v64 + v63) = v111;
    v67 = (char *)v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8);
    v68 = v102;
    *(_QWORD *)v67 = v101;
    v69 = v103;
    v67[8] = v103;
    v70 = (char *)v64 + ((v63 + 31) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)v70 = v68;
    v70[8] = v69;
    v71 = swift_allocObject();
    *(_QWORD *)(v71 + 16) = sub_23B1C371C;
    *(_QWORD *)(v71 + 24) = v64;
    v118 = sub_23AA956C8;
    v119 = v71;
    aBlock = (id)MEMORY[0x24BDAC760];
    v115 = 1107296256;
    v116 = sub_23AA9432C;
    v117 = &block_descriptor_175_1;
    v72 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    v73 = objc_msgSend(v105, sel_executeSwift_error_, v72, &aBlock);
    _Block_release(v72);
    v74 = aBlock;
    v75 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v75 & 1) == 0)
    {
      if ((v73 & 1) == 0)
        goto LABEL_30;
LABEL_29:
      swift_release();
      swift_release();

      return;
    }
    goto LABEL_32;
  }
  v76 = (v91 + 23) & 0xFFFFFFFFFFFFFFF8;
  v77 = (v91 + 39) & 0xFFFFFFFFFFFFFFF8;
  v78 = (_QWORD *)swift_allocObject();
  v79 = v96;
  v78[2] = v109;
  v78[3] = v79;
  v80 = v97;
  v78[4] = v110;
  v78[5] = v80;
  ((void (*)(char *, char *, uint64_t))v100)((char *)v78 + v93, v60, v61);
  v81 = (char *)v78 + v94;
  v82 = v102;
  *(_QWORD *)v81 = v101;
  v83 = v103;
  v81[8] = v103;
  v84 = (char *)v78 + v76;
  *(_QWORD *)v84 = v82;
  v84[8] = v83;
  *(_QWORD *)((char *)v78 + v77) = v95;
  *(_QWORD *)((char *)v78 + ((v77 + 15) & 0xFFFFFFFFFFFFFFF8)) = v99;
  v85 = swift_allocObject();
  *(_QWORD *)(v85 + 16) = sub_23B1C35B0;
  *(_QWORD *)(v85 + 24) = v78;
  v118 = sub_23AA956C8;
  v119 = v85;
  aBlock = v54;
  v115 = 1107296256;
  v116 = sub_23AA9432C;
  v117 = &block_descriptor_165;
  v86 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v87 = objc_msgSend(v105, sel_executeSwift_error_, v86, &aBlock);
  _Block_release(v86);
  v74 = aBlock;
  v88 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v88 & 1) != 0)
    goto LABEL_33;
  if (v87)
  {
    sub_23B1B4B54();
    goto LABEL_29;
  }
LABEL_30:
  sub_23B1C587C();

  swift_willThrow();
  swift_release();
  swift_release();

}

uint64_t sub_23B1B78F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  int v10;
  int v11;
  uint64_t v12;
  void (*v13)(void *, uint64_t, uint64_t);
  uint64_t v14;

  v10 = a5 & 1;
  v11 = a7 & 1;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v13 = *(void (**)(void *, uint64_t, uint64_t))(v12 + 32);
  v14 = swift_checkMetadataState();
  v13(a1, v14, v12);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AEB1E00(a1, a4, v10, a6, v11);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B1B7A64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t result;
  _QWORD v20[4];
  uint64_t v21;
  unint64_t v22;

  v20[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_23B1C64F4();
  v20[3] = MEMORY[0x24BEE1768];
  v20[0] = a2;
  sub_23AA94C90((uint64_t)v20);
  v15 = v14;
  sub_23AA8A05C((uint64_t)v20, qword_2542E5640);
  if (v15)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_getAssociatedTypeWitness();
    v16 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
    v17 = *(void (**)(void *, uint64_t, uint64_t))(v16 + 32);
    v18 = swift_checkMetadataState();
    v17(a1, v18, v16);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AEB1E00(a1, a5, a6 & 1, a7, a8 & 1);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v21;
  }
  else
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

uint64_t sub_23B1B7CB0(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  void (*v12)(void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v28 = 0;
  v29 = 0xE000000000000000;
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v12 = *(void (**)(void *, uint64_t, uint64_t))(v11 + 32);
  v13 = swift_checkMetadataState();
  v12(a1, v13, v11);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v14 = 0;
  if ((a4 & 1) == 0)
    v14 = sub_23B1C6938();
  v15 = objc_msgSend(a1, sel_bindObjectParameter_, v14);
  swift_unknownObjectRelease();
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if ((a6 & 1) != 0)
    v16 = 0;
  else
    v16 = sub_23B1C6938();
  v17 = objc_msgSend(a1, sel_bindObjectParameter_, v16);
  swift_unknownObjectRelease();
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v18 = MEMORY[0x24BEE1768];
  v27 = MEMORY[0x24BEE1768];
  v26[0] = a7;
  sub_23AA94C90((uint64_t)v26);
  v20 = v19;
  sub_23AA8A05C((uint64_t)v26, qword_2542E5640);
  if (!v20)
    goto LABEL_9;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v26[0] = 0;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v27 = v18;
  v26[0] = a8;
  sub_23AA94C90((uint64_t)v26);
  v22 = v21;
  sub_23AA8A05C((uint64_t)v26, qword_2542E5640);
  if (v22)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    return v28;
  }
  else
  {
LABEL_9:
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

void sub_23B1B8048(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[16];

  v8[8] = a1;
  v2 = (_QWORD *)*v1;
  v3 = sub_23B1C5BDC();
  v8[4] = *(_QWORD *)(v3 - 8);
  v8[5] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v8[3] = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v2[11];
  v7 = v2[12];
  v6 = v2[13];
  v8[12] = v2[10];
  v8[13] = v5;
  v8[6] = v6;
  v8[7] = v5;
  v8[14] = v7;
  v8[15] = v6;
  type metadata accessor for ConcreteDatabase.MaterializationRequest();
}

uint64_t sub_23B1B80D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  v12 = *(uint64_t (**)(uint64_t))(v1 + 24);
  if (v12)
  {
    v13 = swift_retain();
    v14 = v12(v13);
    v15 = (uint64_t)v12;
    v16 = v14;
    result = sub_23AAB7948(v15);
    if (v16)
    {
      *(_QWORD *)(v5 - 192) = v2;
      v17 = (uint64_t *)(v16 + qword_2542EDFF0);
      swift_beginAccess();
      v18 = *v17;
      *(_QWORD *)(v5 - 200) = v16;
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v20 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 32);
      swift_bridgeObjectRetain();
      MEMORY[0x23B85EBD0](*(_QWORD *)(v5 - 144), v18, AssociatedTypeWitness, a1, v20);
      swift_bridgeObjectRelease();
      LODWORD(v18) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v11, 1, a1);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      if ((_DWORD)v18 == 1)
      {
        v21 = *(_QWORD *)(v5 - 152);
        *(_QWORD *)(v5 - 112) = v3;
        *(_QWORD *)(v5 - 104) = v21;
        v22 = *(_QWORD *)(v5 - 160);
        *(_QWORD *)(v5 - 96) = v4;
        *(_QWORD *)(v5 - 88) = v22;
        type metadata accessor for ConcreteJobResult();
      }
      return swift_release();
    }
  }
  return result;
}

id (*sub_23B1B8340(uint64_t a1, unint64_t a2))(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  void (*v14)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, _BYTE *, uint64_t);
  uint64_t v21;
  void *v22;
  id (*v23)(uint64_t, void *);
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  char *v30;
  _BYTE *v31;
  uint64_t v32;
  void (*v33)(_BYTE *, _BYTE *, uint64_t);
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  void (*v44)(_BYTE *, uint64_t);
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _BYTE *v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  uint64_t (*v55)(uint64_t);
  id v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  id v65;
  char isEscapingClosureAtFileLocation;
  id v67;
  id v68;
  unsigned int v69;
  unsigned __int8 v70;
  void (*v71)(_BYTE *, uint64_t, uint64_t);
  uint64_t v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  unsigned int v81;
  id v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t KeyPath;
  void (*v91)(id *, _QWORD);
  _QWORD *v92;
  uint64_t v93;
  void (*v94)(_BYTE *, uint64_t, uint64_t);
  char **v95;
  _BYTE *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  id v102;
  char v103;
  _BYTE v105[4];
  int v106;
  void *v107;
  id (*v108)(uint64_t, void *);
  id v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  void (*v121)(char *, _BYTE *, uint64_t);
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  void (*v130)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v131;
  id v132;
  uint64_t v133;
  id aBlock;
  uint64_t v135;
  id (*v136)(uint64_t, void *);
  void *v137;
  uint64_t (*v138)();
  uint64_t v139;
  uint64_t v140;

  v123 = a2;
  v140 = *MEMORY[0x24BDAC8D0];
  v4 = (_QWORD *)*v2;
  v117 = sub_23B1C5E4C();
  v116 = *(_QWORD *)(v117 - 8);
  MEMORY[0x24BDAC7A8](v117);
  v120 = &v105[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v4[12];
  v7 = v4[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v115 = &v105[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v105[-v12];
  v110 = v2;
  v132 = (id)v2[2];
  v14 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16);
  v126 = (_BYTE *)a1;
  v130 = v14;
  v14(&v105[-v12], (_BYTE *)a1, AssociatedTypeWitness);
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = (v15 + 48) & ~v15;
  v114 = v10;
  v17 = v16 + v10;
  v18 = v9;
  v113 = v15;
  v111 = v17;
  v122 = v15 | 7;
  v19 = (char *)swift_allocObject();
  v127 = v7;
  v128 = v6;
  *((_QWORD *)v19 + 2) = v7;
  v124 = v4[11];
  *((_QWORD *)v19 + 3) = v124;
  *((_QWORD *)v19 + 4) = v6;
  v119 = v4[13];
  *((_QWORD *)v19 + 5) = v119;
  v112 = v16;
  v20 = *(void (**)(char *, _BYTE *, uint64_t))(v9 + 32);
  v125 = v13;
  v131 = AssociatedTypeWitness;
  v121 = v20;
  v20(&v19[v16], v13, AssociatedTypeWitness);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_23B1C3260;
  *(_QWORD *)(v21 + 24) = v19;
  v129 = v19;
  v138 = sub_23AA956C8;
  v139 = v21;
  v22 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v135 = 1107296256;
  v23 = sub_23AA9432C;
  v136 = sub_23AA9432C;
  v137 = &block_descriptor_115_1;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v25 = objc_msgSend(v132, sel_fetchSwift_error_, v24, &aBlock);
  _Block_release(v24);
  v26 = aBlock;
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v9 & 1) != 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (!v25)
  {
    sub_23B1C587C();

    swift_willThrow();
    goto LABEL_29;
  }
  v27 = v25;
  objc_msgSend(v27, sel_next);
  v28 = (uint64_t)objc_msgSend(v27, sel_longAtIndex_, 0);

  if (v28 < 1)
  {
    swift_release();
    v23 = 0;
    v53 = 0;
    v54 = 0;
    v55 = 0;
LABEL_34:

    sub_23AAB7948(v53);
    sub_23AAB7948((uint64_t)v54);
    sub_23AAB7948((uint64_t)v55);
    return v23;
  }
  v108 = (id (*)(uint64_t, void *))v28;
  v109 = v27;
  v29 = (id)fpfs_current_or_default_log();
  v30 = v120;
  sub_23B1C5E58();
  v31 = v115;
  v32 = (uint64_t)v126;
  v33 = v130;
  v130(v115, v126, v131);
  v34 = sub_23B1C5E40();
  v35 = sub_23B1C6A88();
  v36 = v35;
  if (os_log_type_enabled(v34, v35))
  {
    v37 = swift_slowAlloc();
    v106 = v36;
    v38 = v37;
    v107 = (void *)swift_slowAlloc();
    aBlock = v107;
    *(_DWORD *)v38 = 136446466;
    v39 = v22;
    v40 = v125;
    v41 = v31;
    v42 = v31;
    v43 = v131;
    v33(v125, v41, v131);
    v44 = *(void (**)(_BYTE *, uint64_t))(v18 + 8);
    v44(v42, v43);
    swift_getAssociatedConformanceWitness();
    v45 = sub_23B1C7304();
    v47 = v46;
    v48 = v40;
    v22 = v39;
    v23 = sub_23AA9432C;
    v44(v48, v43);
    v133 = sub_23AABEC68(v45, v47, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2082;
    v49 = v123;
    v50 = sub_23AF1604C(v123);
    v133 = sub_23AABEC68(v50, v51, (uint64_t *)&aBlock);
    v32 = (uint64_t)v126;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v34, (os_log_type_t)v106, "⏰  unscheduling background download <i:%{public}s reason:%{public}s>", (uint8_t *)v38, 0x16u);
    v52 = v107;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v52, -1, -1);
    MEMORY[0x23B8614BC](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v116 + 8))(v120, v117);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v31, v131);

    (*(void (**)(char *, uint64_t))(v116 + 8))(v30, v117);
    v49 = v123;
  }
  v56 = v132;
  v57 = v119;
  if (v49 != 64)
  {
    v117 = 0;
    v120 = 0;
LABEL_18:
    v71 = (void (*)(_BYTE *, uint64_t, uint64_t))v130;
    goto LABEL_19;
  }
  v58 = v125;
  v59 = v131;
  v130(v125, (_BYTE *)v32, v131);
  v60 = (char *)swift_allocObject();
  v61 = v124;
  *((_QWORD *)v60 + 2) = v127;
  *((_QWORD *)v60 + 3) = v61;
  *((_QWORD *)v60 + 4) = v128;
  *((_QWORD *)v60 + 5) = v57;
  v121(&v60[v112], v58, v59);
  v62 = swift_allocObject();
  *(_QWORD *)(v62 + 16) = sub_23B1C33B8;
  *(_QWORD *)(v62 + 24) = v60;
  v120 = v60;
  v138 = sub_23AA956C8;
  v139 = v62;
  aBlock = v22;
  v135 = 1107296256;
  v136 = sub_23AA9432C;
  v137 = &block_descriptor_145;
  v63 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v64 = objc_msgSend(v56, sel_fetchSwift_error_, v63, &aBlock);
  _Block_release(v63);
  v65 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v67 = v109;
  if (!v64)
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
    swift_release();

    return v23;
  }

  v68 = v64;
  v69 = objc_msgSend(v68, sel_next);
  v109 = v68;
  if (!v69 || objc_msgSend(v68, sel_longAtIndex_, 0) != (id)64)
  {

    v117 = (uint64_t)sub_23B1C33B8;
    v32 = (uint64_t)v126;
    v49 = v123;
    goto LABEL_18;
  }
  v70 = objc_msgSend(v68, sel_next);

  v32 = (uint64_t)v126;
  v49 = v123;
  v71 = (void (*)(_BYTE *, uint64_t, uint64_t))v130;
  if ((v70 & 1) == 0)
    sub_23B1B8048((uint64_t)v126);
  v117 = (uint64_t)sub_23B1C33B8;
LABEL_19:
  v72 = v113;
  v73 = v125;
  v74 = v32;
  v75 = v131;
  v71(v125, v74, v131);
  v76 = (v72 + 56) & ~v72;
  v77 = (char *)swift_allocObject();
  v78 = v124;
  *((_QWORD *)v77 + 2) = v127;
  *((_QWORD *)v77 + 3) = v78;
  *((_QWORD *)v77 + 4) = v128;
  *((_QWORD *)v77 + 5) = v57;
  *((_QWORD *)v77 + 6) = v49;
  v121(&v77[v76], v73, v75);
  v79 = swift_allocObject();
  *(_QWORD *)(v79 + 16) = sub_23B1C3310;
  *(_QWORD *)(v79 + 24) = v77;
  v138 = sub_23AA956C8;
  v139 = v79;
  aBlock = (id)MEMORY[0x24BDAC760];
  v135 = 1107296256;
  v136 = sub_23AA9432C;
  v137 = &block_descriptor_125_0;
  v80 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v81 = objc_msgSend(v56, sel_executeSwift_error_, v80, &aBlock);
  _Block_release(v80);
  v82 = aBlock;
  v83 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v83 & 1) != 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (!v81)
  {
    sub_23B1C587C();

    swift_willThrow();
    goto LABEL_28;
  }
  v84 = (uint64_t)objc_msgSend(v56, sel_changes);
  v85 = (uint64_t)v126;
  if (v84 >= 1)
  {
    MEMORY[0x24BDAC7A8](v84);
    v87 = v127;
    v86 = v128;
    v88 = v124;
    *(_QWORD *)&v105[-32] = v127;
    *(_QWORD *)&v105[-24] = v88;
    v89 = v119;
    *(_QWORD *)&v105[-16] = v86;
    *(_QWORD *)&v105[-8] = v89;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(_QWORD *)&v105[-32] = v87;
    *(_QWORD *)&v105[-24] = v88;
    v57 = v119;
    *(_QWORD *)&v105[-16] = v86;
    *(_QWORD *)&v105[-8] = v57;
    swift_getKeyPath();
    v91 = (void (*)(id *, _QWORD))sub_23B1C5F48();
    if (__OFADD__(*v92, 1))
      goto LABEL_43;
    ++*v92;
    v91(&aBlock, 0);
    swift_release();
    swift_release();
    v56 = v132;
  }
  if (v123 == 16)
  {
    v93 = v118;
    sub_23B1BE5F0(v85);
    v94 = (void (*)(_BYTE *, uint64_t, uint64_t))v130;
    v95 = &selRef_defaultManager;
    if (!v93)
    {
      v118 = 0;
      goto LABEL_31;
    }
LABEL_28:
    swift_release();

    sub_23AAB7948(v117);
    goto LABEL_29;
  }
  v94 = (void (*)(_BYTE *, uint64_t, uint64_t))v130;
  v95 = &selRef_defaultManager;
LABEL_31:
  v96 = v125;
  v97 = v131;
  v94(v125, v85, v131);
  v98 = (char *)swift_allocObject();
  v99 = v124;
  *((_QWORD *)v98 + 2) = v127;
  *((_QWORD *)v98 + 3) = v99;
  *((_QWORD *)v98 + 4) = v128;
  *((_QWORD *)v98 + 5) = v57;
  v121(&v98[v112], v96, v97);
  v100 = swift_allocObject();
  *(_QWORD *)(v100 + 16) = sub_23B1C3260;
  *(_QWORD *)(v100 + 24) = v98;
  v138 = sub_23AA956C8;
  v139 = v100;
  aBlock = (id)MEMORY[0x24BDAC760];
  v135 = 1107296256;
  v136 = sub_23AA9432C;
  v137 = &block_descriptor_135;
  v101 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v102 = objc_msgSend(v56, v95[405], v101, &aBlock);
  _Block_release(v101);
  v23 = (id (*)(uint64_t, void *))aBlock;
  v103 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v103 & 1) != 0)
  {
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
  }
  v53 = v117;
  if (v102)
  {

    v27 = v102;
    objc_msgSend(v27, sel_next);
    objc_msgSend(v27, sel_longAtIndex_, 0);
    swift_release();

    v55 = sub_23B1C3260;
    v54 = sub_23B1C3310;
    v23 = v108;
    goto LABEL_34;
  }
  sub_23B1C587C();

  swift_willThrow();
  swift_release();

  sub_23AAB7948(v53);
  swift_release();
LABEL_29:
  swift_release();
  return v23;
}

uint64_t sub_23B1B908C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t result;
  _QWORD v10[4];
  uint64_t v11;
  unint64_t v12;

  v10[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v11 = 0;
  v12 = 0xE000000000000000;
  sub_23B1C64F4();
  v10[3] = MEMORY[0x24BEE1768];
  v10[0] = a2;
  sub_23AA94C90((uint64_t)v10);
  v5 = v4;
  sub_23AA8A05C((uint64_t)v10, qword_2542E5640);
  if (v5)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_getAssociatedTypeWitness();
    v6 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v8 = swift_checkMetadataState();
    v7(a1, v8, v6);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

uint64_t sub_23B1B9264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  unsigned int v30;
  id v31;
  _QWORD v32[2];
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id aBlock[7];

  v4 = v3;
  v36 = a1;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = *v4;
  v8 = *(_QWORD *)(*v4 + 96);
  v37 = *(_QWORD *)(*v4 + 80);
  v38 = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(_QWORD *)(v10 + 64);
  result = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)v32 - v13;
  v15 = (uint64_t (*)(uint64_t))v4[3];
  if (v15)
  {
    v34 = a2;
    v35 = a3;
    v16 = swift_retain();
    v17 = v15(v16);
    result = sub_23AAB7948((uint64_t)v15);
    if (v17)
    {
      v18 = sub_23AFD7C80(8u);
      v19 = *(_QWORD *)(v18 + 16);
      v20 = __OFADD__(v19, 1);
      v21 = v19 + 1;
      if (v20)
      {
        __break(1u);
      }
      else
      {
        *(_QWORD *)(v18 + 16) = v21;
        v22 = (void *)v4[2];
        v32[1] = v17;
        v33 = v22;
        (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, v36, AssociatedTypeWitness);
        v23 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
        v24 = (char *)swift_allocObject();
        *((_QWORD *)v24 + 2) = v37;
        v25 = v38;
        *((_QWORD *)v24 + 3) = *(_QWORD *)(v7 + 88);
        *((_QWORD *)v24 + 4) = v25;
        *((_QWORD *)v24 + 5) = *(_QWORD *)(v7 + 104);
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v24[v23], v14, AssociatedTypeWitness);
        v26 = &v24[(v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8];
        v27 = v35;
        *(_QWORD *)v26 = v34;
        *((_QWORD *)v26 + 1) = v27;
        v28 = (_QWORD *)swift_allocObject();
        v28[2] = sub_23B1C31B8;
        v28[3] = v24;
        aBlock[4] = sub_23AA956C8;
        aBlock[5] = v28;
        aBlock[0] = (id)MEMORY[0x24BDAC760];
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_23AA9432C;
        aBlock[3] = &block_descriptor_105_3;
        v29 = _Block_copy(aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        aBlock[0] = 0;
        v30 = objc_msgSend(v33, sel_executeSwift_error_, v29, aBlock);
        _Block_release(v29);
        v31 = aBlock[0];
        LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v29 & 1) == 0)
        {
          if (v30)
          {
            swift_release();
            swift_release();
            return swift_release();
          }
          else
          {
            sub_23B1C587C();

            swift_willThrow();
            swift_release();
            swift_release();
            return swift_release();
          }
        }
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23B1B9564(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v7 = swift_checkMetadataState();
  v6(a1, v7, v5);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  a3(a1);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B1B9708()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  if (qword_2542E4C20 != -1)
    swift_once();
  result = sub_23B1B3608((uint64_t)sub_23B1C2FD0, v0);
  if ((v2 & 1) != 0)
    return 0;
  return result;
}

void sub_23B1B977C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t);
  uint64_t v6;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  _QWORD *v24;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = (uint64_t (*)(uint64_t))a1[3];
  if (!v4)
    goto LABEL_17;
  v6 = swift_retain();
  v7 = (_QWORD *)v4(v6);
  sub_23AAB7948((uint64_t)v4);
  if (!v7)
    goto LABEL_17;
  swift_retain();
  v8 = sub_23AABA464();
  swift_release();
  if ((v8 & 1) != 0 || *((_BYTE *)a1 + qword_2542EE068) != 1 || (sub_23AFB5D30() & 1) != 0)
    goto LABEL_16;
  v9 = sub_23AFD7C80(8u);
  v11 = *(_QWORD *)(v9 + 16);
  v10 = *(_QWORD *)(v9 + 24);
  v12 = __OFSUB__(v10, v11);
  v13 = v10 - v11;
  if (v12)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  if (v13 < 1)
  {
LABEL_16:
    swift_release();
LABEL_17:
    *a2 = 0;
    return;
  }
  v14 = v9;
  v15 = (void *)a1[2];
  aBlock[4] = sub_23B1B35C8;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_85_2;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v17 = objc_msgSend(v15, sel_fetchSwift_error_, v16, aBlock);
  _Block_release(v16);
  v18 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    goto LABEL_27;
  if (!v17)
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
    goto LABEL_24;
  }
  aBlock[0] = 0;
  if (!objc_msgSend(v17, sel_next))
  {
    v23 = 0;
LABEL_20:
    v24 = sub_23B1BFC20(v23);
    swift_release();
    if (v2)
    {
      swift_release();

    }
    else
    {

      swift_release();
      *a2 = v24;
    }
    return;
  }
  while (1)
  {
    v20 = *(_QWORD *)(v14 + 16);
    v19 = *(_QWORD *)(v14 + 24);
    v12 = __OFSUB__(v19, v20);
    v21 = v19 - v20;
    if (v12)
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v21 < 1)
      goto LABEL_15;
    v22 = (void *)MEMORY[0x23B8601A8]();
    sub_23B1B9A50(v17, v7, a1, (uint64_t)aBlock);
    if (v2)
      break;
    objc_autoreleasePoolPop(v22);
    if ((objc_msgSend(v17, sel_next) & 1) == 0)
    {
LABEL_15:
      v23 = aBlock[0];
      goto LABEL_20;
    }
  }
  objc_autoreleasePoolPop(v22);
  swift_release();

LABEL_24:
  swift_release();
}

uint64_t sub_23B1B9A50(void *a1, _QWORD *a2, _QWORD *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t (*v26)(void);
  id v27;
  _BYTE *v28;
  uint64_t result;
  _BYTE *v30;
  unsigned __int8 v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(_BYTE *, uint64_t);
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  void *v48;
  _BYTE *v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  unsigned int v57;
  id v58;
  char isEscapingClosureAtFileLocation;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t KeyPath;
  void (*v67)(id *, _QWORD);
  _QWORD *v68;
  _BYTE *v69;
  uint64_t v70;
  id v71;
  id v72;
  id v73;
  _BYTE *v74;
  id v75;
  void *v76;
  uint64_t v77;
  id (*v78)(uint64_t, void *);
  void *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  _BYTE *v83;
  id v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  _QWORD *v89;
  id v90;
  void (*v91)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v92;
  uint64_t TupleTypeMetadata2;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE v104[12];
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE *v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _BYTE *v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  _BYTE *v135;
  _QWORD *v136;
  id v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  id aBlock;
  uint64_t v142;
  id (*v143)(uint64_t, void *);
  void *v144;
  uint64_t (*v145)();
  uint64_t v146;
  uint64_t v147;

  v115 = a4;
  v133 = a3;
  v137 = a1;
  v147 = *MEMORY[0x24BDAC8D0];
  v136 = a2;
  v4 = (_QWORD *)*a2;
  v120 = sub_23B1C5E4C();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v122 = &v104[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v125 = sub_23B1C5BDC();
  v123 = *(_QWORD *)(v125 - 8);
  MEMORY[0x24BDAC7A8](v125);
  v124 = &v104[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v114 = sub_23B1C60A4();
  v113 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v112 = &v104[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v4[306];
  v130 = (void *)v4[308];
  v129 = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v111 = sub_23B1C6C98();
  v110 = *(_QWORD *)(v111 - 8);
  v10 = MEMORY[0x24BDAC7A8](v111);
  v121 = &v104[-v11];
  v118 = AssociatedTypeWitness;
  v117 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v10);
  v116 = &v104[-v12];
  v13 = v4[305];
  v14 = v4[307];
  v16 = type metadata accessor for SnapshotItem(255, v13, v14, v15);
  v127 = (_QWORD *)sub_23B1C6C98();
  v126 = *(v127 - 1);
  v17 = MEMORY[0x24BDAC7A8](v127);
  v135 = &v104[-v18];
  v131 = *(_QWORD *)(v16 - 8);
  v132 = v16;
  MEMORY[0x24BDAC7A8](v17);
  v128 = &v104[-v19];
  v20 = swift_getAssociatedTypeWitness();
  v134 = *(_QWORD *)(v20 - 8);
  v21 = *(_QWORD *)(v134 + 64);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v23 = &v104[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v22);
  v25 = &v104[-v24];
  v26 = *(uint64_t (**)(void))(*(_QWORD *)(swift_getAssociatedConformanceWitness() + 40) + 16);
  v27 = v137;
  v28 = v138;
  result = v26();
  if (v28)
    return result;
  v30 = v135;
  v106 = v21;
  v108 = (void *)v13;
  v107 = v14;
  v138 = v25;
  v105 = objc_msgSend(v27, sel_intAtIndex_, 3);
  v31 = objc_msgSend(v27, sel_isNullAtIndex_, 1);
  v109 = v20;
  if ((v31 & 1) != 0)
    v32 = -1;
  else
    v32 = (uint64_t)objc_msgSend(v27, sel_longAtIndex_, 1);
  v33 = v136;
  if ((objc_msgSend(v27, sel_isNullAtIndex_, 2) & 1) != 0)
    v34 = -1;
  else
    v34 = (uint64_t)objc_msgSend(v27, sel_longAtIndex_, 2);
  v35 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)v33[4] + 240);
  v36 = v30;
  v37 = (uint64_t)v138;
  v35(v138, 1);
  v137 = 0;
  v38 = v32;
  v39 = v131;
  v40 = v36;
  v41 = v36;
  v42 = v132;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v131 + 48))(v40, 1, v132) == 1)
  {
    (*(void (**)(_BYTE *, _QWORD *))(v126 + 8))(v41, v127);
LABEL_16:
    v47 = v134;
    v48 = (void *)v133[2];
    v49 = v23;
    v50 = v109;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v134 + 16))(v23, v37, v109);
    v51 = (*(unsigned __int8 *)(v47 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    v52 = (char *)swift_allocObject();
    v53 = v129;
    *((_QWORD *)v52 + 2) = v108;
    *((_QWORD *)v52 + 3) = v53;
    v54 = v130;
    *((_QWORD *)v52 + 4) = v107;
    *((_QWORD *)v52 + 5) = v54;
    (*(void (**)(char *, _BYTE *, uint64_t))(v47 + 32))(&v52[v51], v49, v50);
    v55 = swift_allocObject();
    *(_QWORD *)(v55 + 16) = sub_23B1C3030;
    *(_QWORD *)(v55 + 24) = v52;
    v145 = sub_23AA956C8;
    v146 = v55;
    aBlock = (id)MEMORY[0x24BDAC760];
    v142 = 1107296256;
    v143 = sub_23AA9432C;
    v144 = &block_descriptor_95_1;
    v56 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    aBlock = 0;
    v57 = objc_msgSend(v48, sel_executeSwift_error_, v56, &aBlock);
    _Block_release(v56);
    v58 = aBlock;
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    v60 = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
      JUMPOUT(0x23B1BACDCLL);
    }
    if (v57)
    {
      v61 = v47;
      MEMORY[0x24BDAC7A8](v60);
      v62 = v108;
      v63 = v129;
      *(_QWORD *)&v104[-32] = v108;
      *(_QWORD *)&v104[-24] = v63;
      v64 = v107;
      v65 = v130;
      *(_QWORD *)&v104[-16] = v107;
      *(_QWORD *)&v104[-8] = v65;
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      *(_QWORD *)&v104[-32] = v62;
      *(_QWORD *)&v104[-24] = v63;
      *(_QWORD *)&v104[-16] = v64;
      *(_QWORD *)&v104[-8] = v65;
      swift_getKeyPath();
      v67 = (void (*)(id *, _QWORD))sub_23B1C5F48();
      v69 = v138;
      if (__OFADD__(*v68, 1))
      {
        __break(1u);
        JUMPOUT(0x23B1BAD38);
      }
      ++*v68;
      v67(&aBlock, 0);
      swift_release();
      swift_release();
      (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v69, v109);
      return swift_release();
    }
    else
    {
      sub_23B1C587C();

      swift_willThrow();
      (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v138, v109);
      return swift_release();
    }
  }
  v43 = v128;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 32))(v128, v41, v42);
  v44 = MEMORY[0x23B8613CC](&unk_23B1DD478, v42);
  v45 = sub_23AF21910(v42, v44);
  if ((v45 & 1) == 0)
  {
    (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v43, v42);
    goto LABEL_16;
  }
  MEMORY[0x24BDAC7A8](v45);
  *(_QWORD *)&v104[-32] = v38;
  *(_QWORD *)&v104[-24] = v34;
  *(_QWORD *)&v104[-16] = v133;
  v46 = v137;
  sub_23B1B9264(v37, (uint64_t)sub_23B1C311C, (uint64_t)&v104[-48]);
  v137 = v46;
  if (!v46)
  {
    if (v38 < 0)
    {
      v76 = v130;
      v77 = v129;
      v78 = (id (*)(uint64_t, void *))v107;
      v79 = v108;
    }
    else
    {
      v70 = v38;
      v135 = (_BYTE *)v105;
      v71 = objc_msgSend((id)objc_opt_self(), sel_discreteProgressWithTotalUnitCount_, 1);
      v72 = objc_msgSend((id)objc_opt_self(), sel_requestForSelf);
      objc_msgSend(v72, sel_setRequestedExtent_, v70, v34);
      v73 = v137;
      v74 = v121;
      (*(void (**)(uint64_t))(*(_QWORD *)v136[2] + 160))(v37);
      if (v73)
      {

        v75 = v73;
      }
      else
      {
        v137 = 0;
        v80 = v117;
        v81 = v118;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v117 + 48))(v74, 1, v118) != 1)
        {
          v91 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v80 + 32);
          v133 = v71;
          v92 = v116;
          v91(v116, v74, v81);
          sub_23AA9F52C(255, (unint64_t *)&qword_2569E1B18);
          TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
          v94 = swift_allocBox();
          v95 = v81;
          v96 = v80;
          v98 = v97;
          v99 = *(int *)(TupleTypeMetadata2 + 48);
          v100 = v97;
          v101 = v92;
          v102 = (uint64_t)v133;
          (*(void (**)(uint64_t, _BYTE *, uint64_t))(v96 + 16))(v100, v101, v95);
          *(_QWORD *)(v98 + v99) = v72;
          v127 = v72;
          v103 = (uint64_t)v112;
          sub_23B1C605C();
          sub_23AFAEB6C(v37, v94 | 0x2000000000000004, v102, v103, (uint64_t)nullsub_1, 0);
        }
        (*(void (**)(_BYTE *, uint64_t))(v110 + 8))(v74, v111);
        type metadata accessor for NSFileProviderError(0);
        v139 = -1005;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
        sub_23B1C5864();
        v82 = v71;
        v75 = aBlock;
        swift_willThrow();

      }
      v137 = 0;
      v83 = v122;
      v84 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v85 = v75;
      v86 = sub_23B1C5E40();
      v87 = sub_23B1C6AA0();
      if (os_log_type_enabled(v86, v87))
      {
        v88 = (uint8_t *)swift_slowAlloc();
        v89 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v88 = 138412290;
        swift_getErrorValue();
        v90 = sub_23B0D9CF0(v140);
        aBlock = v90;
        v83 = v122;
        sub_23B1C6CBC();
        *v89 = v90;

        _os_log_impl(&dword_23AA66000, v86, v87, "⏰ BRM Materialization failed with %@, falling back to full materialization", v88, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v89, -1, -1);
        MEMORY[0x23B8614BC](v88, -1, -1);

      }
      else
      {

      }
      v76 = v130;
      v77 = v129;
      v78 = (id (*)(uint64_t, void *))v107;
      v79 = v108;
      (*(void (**)(_BYTE *, uint64_t))(v119 + 8))(v83, v120);
    }
    aBlock = v79;
    v142 = v77;
    v143 = v78;
    v144 = v76;
    type metadata accessor for ConcreteJobResult();
  }
  (*(void (**)(_BYTE *, uint64_t))(v131 + 8))(v43, v132);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v134 + 8))(v37, v109);
}

uint64_t sub_23B1BAD7C(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_23B1BAE7C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[15];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v11[6] = a2;
  v13 = a1;
  v18 = *MEMORY[0x24BDAC8D0];
  v3 = (_QWORD *)*v2;
  v4 = sub_23B1C5E4C();
  v11[8] = *(_QWORD *)(v4 - 8);
  v11[9] = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v11[10] = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v11[3] = (char *)v11 - v7;
  v8 = v3[11];
  v10 = v3[12];
  v9 = v3[13];
  v12 = v3[10];
  v14 = v12;
  v15 = v8;
  v11[11] = v8;
  v11[12] = v9;
  v11[13] = v10;
  v16 = v10;
  v17 = v9;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B1BAF44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  unsigned int v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t KeyPath;
  void (*v54)(uint64_t, _QWORD);
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, _QWORD);
  _QWORD *v65;
  _BYTE v66[96];

  v4 = sub_23B1C6C98();
  *(_QWORD *)(v2 - 256) = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v2 - 232) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v2 - 248) = &v66[-v6];
  v7 = sub_23B1C60EC();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)&v66[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(uint64_t (**)(uint64_t))(v1 + 24);
  if (v12)
  {
    *(_QWORD *)(v2 - 176) = v1;
    v13 = swift_retain();
    v14 = v12(v13);
    v15 = (uint64_t)v12;
    v16 = v14;
    result = sub_23AAB7948(v15);
    if (v16)
    {
      v17 = sub_23AFD7BC0();
      *v11 = v17;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x24BEE5610], v7);
      v18 = (id)v17;
      LOBYTE(v17) = sub_23B1C6104();
      (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v11, v7);
      if ((v17 & 1) == 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v19 = (_QWORD *)sub_23AFD7C80(8u);
      v20 = *(_QWORD *)(v2 - 160);
      v21 = *(_QWORD *)(v2 - 176);
      if ((*(_BYTE *)(v20 + 131) & 1) != 0)
      {
        v22 = v19[2];
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v23)
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        v19[2] = v24;
        v25 = v19[3];
        if (v25 != v19[4])
        {
          v23 = __OFSUB__(v25, 1);
          v26 = v25 - 1;
          if (v23)
          {
LABEL_41:
            __break(1u);
LABEL_42:
            __break(1u);
            goto LABEL_43;
          }
          v19[3] = v26;
        }
      }
      v27 = *(unsigned __int8 *)(v20 + 104);
      if (v27 == 3)
        goto LABEL_13;
      if (v27 == 4)
      {
        v28 = *(_QWORD *)(v20 + 88);
        v29 = *(_QWORD *)(v20 + 96);
        if (!(v28 ^ 1 | v29))
        {
          v50 = *(_BYTE *)(v20 + 132);
          v31 = *(_QWORD *)(v2 - 168);
          *(_QWORD *)(v2 - 272) = v19;
          v30 = v16;
          if ((v50 & 0x40) != 0)
          {
            if (*(_QWORD *)(v21 + qword_2542EE060))
            {
              swift_retain();
              swift_retain();
              sub_23AFF6980();
              swift_release();
            }
            else
            {
              swift_retain();
            }
            v21 = *(_QWORD *)(v2 - 176);
          }
          else
          {
            swift_retain();
          }
LABEL_16:
          v32 = *(void **)(v21 + 16);
          v33 = swift_allocObject();
          v34 = *(_QWORD *)(v2 - 160);
          *(_QWORD *)(v33 + 16) = sub_23B1C2F14;
          *(_QWORD *)(v33 + 24) = v34;
          *(_QWORD *)(v2 - 112) = sub_23AA956C8;
          *(_QWORD *)(v2 - 104) = v33;
          *(_QWORD *)(v2 - 144) = MEMORY[0x24BDAC760];
          *(_QWORD *)(v2 - 136) = 1107296256;
          *(_QWORD *)(v2 - 128) = sub_23AA9432C;
          *(_QWORD *)(v2 - 120) = &block_descriptor_62_1;
          v35 = _Block_copy((const void *)(v2 - 144));
          swift_retain();
          swift_retain();
          swift_release();
          *(_QWORD *)(v2 - 144) = 0;
          v36 = objc_msgSend(v32, sel_executeSwift_error_, v35, v2 - 144);
          _Block_release(v35);
          v37 = *(id *)(v2 - 144);
          LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v34 & 1) == 0)
          {
            if (!v36)
            {
              sub_23B1C587C();

              swift_willThrow();
              swift_release();
              swift_release();
              return swift_release();
            }
            v38 = (uint64_t)objc_msgSend(v32, sel_changes);
            *(_QWORD *)(v2 - 232) = v30;
            v39 = *(_QWORD *)(v2 - 184);
            if (v38 >= 1)
            {
              v40 = (id)fpfs_current_or_default_log();
              v41 = *(_QWORD *)(v2 - 208);
              sub_23B1C5E58();
              swift_retain_n();
              v42 = sub_23B1C5E40();
              v43 = sub_23B1C6A88();
              if (os_log_type_enabled(v42, v43))
              {
                v44 = (uint8_t *)swift_slowAlloc();
                v45 = swift_slowAlloc();
                *(_DWORD *)v44 = 136315138;
                *(_QWORD *)(v2 - 144) = v45;
                *(_QWORD *)(v2 - 240) = v44 + 4;
                swift_getAssociatedTypeWitness();
                v31 = *(_QWORD *)(v2 - 168);
                swift_getAssociatedConformanceWitness();
                v46 = sub_23B1C7304();
                *(_QWORD *)(v2 - 152) = sub_23AABEC68(v46, v47, (uint64_t *)(v2 - 144));
                sub_23B1C6CBC();
                swift_release_n();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_23AA66000, v42, v43, "⏰  finished background download <i:%s>", v44, 0xCu);
                swift_arrayDestroy();
                v48 = v45;
                v39 = *(_QWORD *)(v2 - 184);
                MEMORY[0x23B8614BC](v48, -1, -1);
                MEMORY[0x23B8614BC](v44, -1, -1);

                v49 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 224) + 8))(*(_QWORD *)(v2 - 208), *(_QWORD *)(v2 - 216));
              }
              else
              {

                swift_release_n();
                v49 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 224) + 8))(v41, *(_QWORD *)(v2 - 216));
              }
              MEMORY[0x24BDAC7A8](v49);
              v52 = *(_QWORD *)(v2 - 200);
              v51 = *(_QWORD *)(v2 - 192);
              *(_QWORD *)&v66[-32] = v31;
              *(_QWORD *)&v66[-24] = v52;
              *(_QWORD *)&v66[-16] = v39;
              *(_QWORD *)&v66[-8] = v51;
              KeyPath = swift_getKeyPath();
              MEMORY[0x24BDAC7A8](KeyPath);
              *(_QWORD *)&v66[-32] = v31;
              *(_QWORD *)&v66[-24] = v52;
              *(_QWORD *)&v66[-16] = v39;
              *(_QWORD *)&v66[-8] = v51;
              swift_getKeyPath();
              v54 = (void (*)(uint64_t, _QWORD))sub_23B1C5F48();
              if (__OFADD__(*v55, 1))
                goto LABEL_42;
              ++*v55;
              v54(v2 - 144, 0);
              swift_release();
              v38 = swift_release();
            }
            v56 = *(_QWORD *)(v2 - 272);
            v58 = *(_QWORD *)(v56 + 16);
            v57 = *(_QWORD *)(v56 + 24);
            v23 = __OFSUB__(v57, v58);
            v59 = v57 - v58;
            if (!v23)
            {
              if (v59 < 1)
              {
                swift_release();
                swift_release();
                return swift_release();
              }
              MEMORY[0x24BDAC7A8](v38);
              *(_QWORD *)&v66[-32] = v31;
              v60 = v31;
              v62 = *(_QWORD *)(v2 - 200);
              v61 = *(_QWORD *)(v2 - 192);
              *(_QWORD *)&v66[-24] = v62;
              *(_QWORD *)&v66[-16] = v39;
              *(_QWORD *)&v66[-8] = v61;
              v63 = swift_getKeyPath();
              MEMORY[0x24BDAC7A8](v63);
              *(_QWORD *)&v66[-32] = v60;
              *(_QWORD *)&v66[-24] = v62;
              *(_QWORD *)&v66[-16] = v39;
              *(_QWORD *)&v66[-8] = v61;
              swift_getKeyPath();
              v64 = (void (*)(uint64_t, _QWORD))sub_23B1C5F48();
              if (!__OFADD__(*v65, 1))
              {
                ++*v65;
                v64(v2 - 144, 0);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                return swift_release();
              }
LABEL_43:
              __break(1u);
              JUMPOUT(0x23B1BBCB4);
            }
            goto LABEL_40;
          }
          goto LABEL_38;
        }
        if (!(v28 | v29))
        {
LABEL_13:
          swift_retain();
          swift_retain();
          sub_23AB00114();
        }
      }
      v30 = v16;
      *(_QWORD *)(v2 - 272) = v19;
      swift_retain();
      v31 = *(_QWORD *)(v2 - 168);
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t sub_23B1BBCC0(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t result;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v15[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v17 = 0;
  v18 = 0xE000000000000000;
  sub_23B1C64F4();
  v6 = MEMORY[0x24BEE1768];
  v16 = MEMORY[0x24BEE1768];
  v15[0] = a2;
  sub_23AA94C90((uint64_t)v15);
  v8 = v7;
  sub_23AA8A05C((uint64_t)v15, qword_2542E5640);
  if (!v8)
    goto LABEL_4;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v16 = v6;
  v15[0] = a3;
  sub_23AA94C90((uint64_t)v15);
  v10 = v9;
  sub_23AA8A05C((uint64_t)v15, qword_2542E5640);
  if (v10)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_getAssociatedTypeWitness();
    v11 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
    v13 = swift_checkMetadataState();
    v12(a1, v13, v11);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
LABEL_4:
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

uint64_t sub_23B1BBF14(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_23B1BC020()
{
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B1BC080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[96];

  v5 = sub_23B1C6C98();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v19[-v8];
  v10 = MEMORY[0x24BDAC7A8](v7);
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = *(uint64_t (**)(uint64_t))(v1 + 24);
  if (v14)
  {
    *(_QWORD *)(v3 - 208) = &v19[-v12];
    *(_QWORD *)(v3 - 200) = v13;
    *(_QWORD *)(v3 - 192) = a1;
    *(_QWORD *)(v3 - 216) = v1;
    v15 = swift_retain();
    v16 = v14(v15);
    result = sub_23AAB7948((uint64_t)v14);
    if (v16)
    {
      (*(void (**)(uint64_t))(v3 - 144))(v16);
      if (v2)
      {
        return swift_release();
      }
      else
      {
        v18 = *(_QWORD *)(v3 - 200);
        v17 = *(_QWORD *)(v3 - 192);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) != 1)
        {
          (*(void (**)(_QWORD, _BYTE *, uint64_t))(v18 + 32))(*(_QWORD *)(v3 - 208), v9, v17);
          sub_23B1C0CE4();
        }
        swift_release();
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
      }
    }
  }
  return result;
}

uint64_t sub_23B1BC444(void *a1)
{
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  v2 = sub_23B1C6C98();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_23AFDF504(a1, v2, *(_QWORD *)(AssociatedConformanceWitness + 40));
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B1BC608(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  unsigned __int8 v16;
  uint64_t result;
  uint64_t v18;
  id v19;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 96);
  v5 = *(_QWORD *)(*v1 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)&v18 - v8;
  v19 = (id)v1[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v18 - v8, a1, AssociatedTypeWitness);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = (char *)swift_allocObject();
  *((_QWORD *)v11 + 2) = v5;
  *((_QWORD *)v11 + 3) = *(_QWORD *)(v3 + 88);
  *((_QWORD *)v11 + 4) = v4;
  *((_QWORD *)v11 + 5) = *(_QWORD *)(v3 + 104);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, AssociatedTypeWitness);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = sub_23B1C2A08;
  v12[3] = v11;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v12;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_45_1;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v14 = objc_msgSend(v19, sel_fetchSwift_error_, v13, aBlock);
  _Block_release(v13);
  v15 = aBlock[0];
  LOBYTE(AssociatedTypeWitness) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((AssociatedTypeWitness & 1) != 0)
    __break(1u);
  if (!v14)
  {
    sub_23B1C587C();

    swift_willThrow();
    return swift_release();
  }
  if (!objc_msgSend(v14, sel_next))
  {
    swift_release();

    return 0;
  }
  v16 = objc_msgSend(v14, sel_longAtIndex_, 0);
  swift_release();

  if ((v16 & 0x2C) != 0)
    return 0x1000000;
  if ((v16 & 0x10) != 0)
  {
    if ((v16 & 0x40) != 0)
      result = 0x4401000000;
    else
      result = 0x401000000;
  }
  else
  {
    if ((v16 & 0x40) == 0)
    {
      result = 0x1000000;
      if ((v16 & 1) != 0)
        return result | 0x10000000000;
      return result;
    }
    result = 0x4001000000;
  }
  if ((v16 & 1) != 0)
    return result | 0x10000000000;
  return result;
}

uint64_t sub_23B1BC900(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B1BCA54()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  if (qword_2542E4C20 != -1)
    swift_once();
  if ((objc_msgSend((id)qword_2542EDD60, sel_preventRunning) & 1) != 0)
  {
    LOBYTE(v1) = 0;
  }
  else if (*(_QWORD *)(v0 + qword_2542EE060) && (sub_23AFF6528() & 1) != 0)
  {
    LOBYTE(v1) = 1;
  }
  else
  {
    v2 = *(void **)(v0 + 16);
    aBlock[4] = sub_23B1B33DC;
    aBlock[5] = 0;
    aBlock[0] = (id)MEMORY[0x24BDAC760];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_23AA9432C;
    aBlock[3] = &block_descriptor_35_2;
    v3 = _Block_copy(aBlock);
    swift_release();
    aBlock[0] = 0;
    v4 = objc_msgSend(v2, sel_fetchSwift_error_, v3, aBlock);
    _Block_release(v3);
    v1 = aBlock[0];
    if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
      __break(1u);
    if (v4)
    {
      LOBYTE(v1) = objc_msgSend(v4, sel_next);

    }
    else
    {
      sub_23B1C587C();

      swift_willThrow();
    }
  }
  return v1 & 1;
}

void sub_23B1BCC04()
{
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23B1BCC54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  void (*v18)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[96];

  v6 = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 136) = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v26[-v9];
  *(_QWORD *)(v4 - 152) = v2;
  *(_QWORD *)(v4 - 144) = v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v15 = &v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v26[-v16];
  v18 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16);
  *(_QWORD *)(v4 - 128) = v3;
  v18(v10, v3, a1);
  if (swift_getEnumCaseMultiPayload() == 13)
  {
    *(_QWORD *)(v4 - 192) = v17;
    *(_QWORD *)(v4 - 184) = v15;
    *(_QWORD *)(v4 - 176) = v12;
    v18(*(_BYTE **)(v4 - 136), v10, a1);
    v19 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v21 = swift_getAssociatedConformanceWitness();
    *(_QWORD *)(v4 - 112) = v19;
    *(_QWORD *)(v4 - 104) = AssociatedTypeWitness;
    *(_QWORD *)(v4 - 96) = AssociatedConformanceWitness;
    *(_QWORD *)(v4 - 88) = v21;
    type metadata accessor for ReconciliationID();
  }
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v10, a1);
  if (*(_QWORD *)(*(_QWORD *)(v4 - 120) + qword_2542EE060))
  {
    swift_retain();
    sub_23AFF8770(*(_QWORD *)(v4 - 128), v23, v24, v25);
  }
  return result;
}

void sub_23B1BCF7C()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23B1BCFCC()
{
  uint64_t v0;

  v0 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v0);
  sub_23AB003A0();
}

void sub_23B1BD01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (!v1)
  {
    v9 = v6;
    *(_QWORD *)(v8 - 72) = v5;
    *(_QWORD *)(v8 - 120) = v2;
    v11 = *(_QWORD *)(v8 - 136);
    v10 = *(_QWORD *)(v8 - 128);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v4, 1, v3) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v7);
      *(_QWORD *)(v8 - 112) = v0;
      *(_QWORD *)(v8 - 104) = v11;
      v13 = *(_QWORD *)(v8 - 120);
      *(_QWORD *)(v8 - 96) = *(_QWORD *)(v8 - 72);
      *(_QWORD *)(v8 - 88) = v13;
      type metadata accessor for ItemReconciliation();
    }
    sub_23B0C62A4(v3, v12, v10);
  }
}

void sub_23B1BD114(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 aBlock;
  __int128 v23;
  unint64_t (*v24)();
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v26 = *MEMORY[0x24BDAC8D0];
  v4 = *v1;
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0xD000000000000015;
  *((_QWORD *)&aBlock + 1) = 0x800000023B2206B0;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(0xD000000000000015, 0x800000023B2206B0, v5, v6);
  swift_bridgeObjectRelease();
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0xD000000000000014;
  *((_QWORD *)&aBlock + 1) = 0x800000023B2206D0;
  if (qword_2542E4C20 != -1)
    swift_once();
  v9 = (id)qword_2542EDD60;
  v10 = objc_msgSend(v9, sel_description);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v7, v8);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)((char *)v2 + qword_2542EE060))
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    swift_retain();
    sub_23B1C6EFC();
    sub_23B1C64F4();
    v11 = *(_OWORD *)(v4 + 96);
    aBlock = *(_OWORD *)(v4 + 80);
    v23 = v11;
    type metadata accessor for SpeculativeSetPacer();
  }
  if (*(_QWORD *)((char *)v2 + qword_2542EE080))
  {
    v12 = a1[3];
    v13 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v12);
    swift_retain();
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    *(_QWORD *)&aBlock = 0xD00000000000001DLL;
    *((_QWORD *)&aBlock + 1) = 0x800000023B220720;
    sub_23B074B28();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(0xD00000000000001DLL, 0x800000023B220720, v12, v13);
    swift_release();
    swift_bridgeObjectRelease();
  }
  v14 = (void *)v2[2];
  v24 = sub_23B1B3598;
  v25 = 0;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v23 = sub_23AA9432C;
  *((_QWORD *)&v23 + 1) = &block_descriptor_32_1;
  v15 = _Block_copy(&aBlock);
  swift_release();
  *(_QWORD *)&aBlock = 0;
  v16 = objc_msgSend(v14, sel_fetchSwift_error_, v15, &aBlock);
  _Block_release(v15);
  v17 = (id)aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (v16)
  {
    if (objc_msgSend(v16, sel_next))
    {
      do
      {
        v18 = (void *)MEMORY[0x23B8601A8]();
        sub_23B1BD668(v16, a1);
        objc_autoreleasePoolPop(v18);
      }
      while ((objc_msgSend(v16, sel_next) & 1) != 0);
    }

  }
  else
  {
    v19 = (void *)sub_23B1C587C();

    swift_willThrow();
    v20 = a1[3];
    v21 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v20);
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    sub_23B1C7028();
    sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v20, v21);
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_23B1BD668(void *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(void);
  id v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;
  _BYTE *v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v21 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7 = (char *)&v15 - v6;
  v8 = *(uint64_t (**)(void))(*(_QWORD *)(swift_getAssociatedConformanceWitness() + 40) + 16);
  v9 = a1;
  result = v8();
  if (!v2)
  {
    v18 = v7;
    v11 = v21;
    if ((unint64_t)objc_msgSend(v9, sel_longAtIndex_, 1) > 2)
    {
      sub_23AB7B620();
      swift_allocError();
      *v13 = 0;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v18, AssociatedTypeWitness);
    }
    else
    {
      v16 = objc_msgSend(v9, sel_longAtIndex_, 2);
      v12 = v11[3];
      v17 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v12);
      v19 = 0;
      v20 = 0xE000000000000000;
      v14 = v18;
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23B1C7340();
      sub_23B1C64F4();
      sub_23AF1604C((unint64_t)v16);
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23AEBD130(v19, v20, v12, v17);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v14, AssociatedTypeWitness);
    }
  }
  return result;
}

void sub_23B1BD8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  char isEscapingClosureAtFileLocation;
  void *v20;
  id v21;
  uint64_t *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char v31;
  uint64_t *v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  id v46[62];
  _BYTE v47[504];
  _BYTE v48[504];
  uint64_t v49;
  char v50;
  char v51;
  id v52[65];

  v42 = a5;
  v43 = a4;
  v52[63] = *(id *)MEMORY[0x24BDAC8D0];
  v9 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v9);
  v38 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5474();
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v37 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(a2 + 16);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = sub_23B1C3D14;
  v15[3] = v14;
  v52[4] = sub_23AA956C8;
  v52[5] = v15;
  v52[0] = (id)MEMORY[0x24BDAC760];
  v52[1] = (id)1107296256;
  v52[2] = sub_23AA9432C;
  v52[3] = &block_descriptor_319;
  v16 = _Block_copy(v52);
  swift_retain();
  swift_release();
  v52[0] = 0;
  v17 = objc_msgSend(v13, sel_fetchSwift_error_, v16, v52);
  _Block_release(v16);
  v18 = v52[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (!v17)
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
    swift_release();
    return;
  }
  v20 = v17;
  v21 = objc_msgSend(v17, sel_next);
  if (!(_DWORD)v21)
  {
    swift_release();
    swift_release();

    return;
  }
  v36 = v14;
  v22 = v42;
  v44 = v17;
  v41 = a3;
  while (1)
  {
    v23 = (void *)MEMORY[0x23B8601A8](v21);
    v24 = v20;
    v25 = (uint64_t)objc_msgSend(v24, sel_longAtIndex_, 0, v36);
    if (v25 == 0x8000000000000000)
    {
      v27 = 2;
      v26 = 1;
      goto LABEL_16;
    }
    v26 = v25;
    if (!v25)
    {
      v27 = 2;
      goto LABEL_16;
    }
    if ((v25 & 0x8000000000000000) == 0)
    {
      v27 = 1;
      goto LABEL_16;
    }
    v26 = -v25;
    if ((unint64_t)-v25 >> 32)
      break;
    v27 = 0;
LABEL_16:

    v28 = *(_QWORD *)(a3 + 16);
    v49 = v26;
    v50 = v27;
    v51 = 0;
    (*(void (**)(id *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v28 + 168))(v52, &v49, 1);
    if (v5)
      goto LABEL_27;
    sub_23B1C3A38((uint64_t)v52, (uint64_t)v47);
    sub_23B1C3A38((uint64_t)v47, (uint64_t)v48);
    if (sub_23AAFC2A4((uint64_t)v48) != 1)
    {
      memcpy(v46, v52, sizeof(v46));
      if (v46[30])
      {
        if (LOBYTE(v46[42]) == 2)
        {
          sub_23AAFC3AC((uint64_t)v46);
        }
        else
        {
          v29 = *v22;
          v30 = v46[30];
          swift_bridgeObjectRetain();
          v31 = sub_23ADF8398((uint64_t)v30, v29);
          swift_bridgeObjectRelease();
          if ((v31 & 1) != 0)
          {
            v32 = v42;
            v33 = (void *)sub_23B18D754();
            sub_23AAFC3AC((uint64_t)v46);

            a3 = v41;
            v22 = v32;
          }
          else
          {
            sub_23ADE0930((uint64_t)&v45, v26, v27);
            sub_23AAFC3AC((uint64_t)v46);

            a3 = v41;
            v22 = v42;
          }
        }
        goto LABEL_7;
      }
      sub_23AAFC3AC((uint64_t)v46);
    }
    sub_23ADE0930((uint64_t)v46, v26, v27);
LABEL_7:
    objc_autoreleasePoolPop(v23);
    v21 = objc_msgSend(v24, sel_next);
    v20 = v44;
    if ((v21 & 1) == 0)
      goto LABEL_28;
  }
  sub_23B1C53FC();
  sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
  sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
  v34 = v37;
  v35 = v40;
  sub_23B1C5864();
  sub_23B1C5354();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v35);
  swift_willThrow();

LABEL_27:
  objc_autoreleasePoolPop(v23);
LABEL_28:
  swift_release();
  swift_release();

}

void sub_23B1BDDA0(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  void *v14;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = *(void **)(v3 + 16);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = sub_23B1C29D4;
  v9[3] = v8;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v9;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_29_2;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v11 = objc_msgSend(v7, sel_fetchSwift_error_, v10, aBlock);
  _Block_release(v10);
  v12 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (v11)
  {
    if (objc_msgSend(v11, sel_next))
    {
      while (1)
      {
        v14 = (void *)MEMORY[0x23B8601A8]();
        sub_23B1BE0E8(a2, a3, v11);
        if (v4)
          break;
        objc_autoreleasePoolPop(v14);
        if ((objc_msgSend(v11, sel_next) & 1) == 0)
          goto LABEL_9;
      }
      objc_autoreleasePoolPop(v14);
    }
LABEL_9:
    swift_release();

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
  }
}

uint64_t sub_23B1BDFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[4];
  uint64_t v7;
  unint64_t v8;

  v6[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v7 = 0;
  v8 = 0xE000000000000000;
  sub_23B1C64F4();
  v6[3] = MEMORY[0x24BEE1768];
  v6[0] = a2;
  sub_23AA94C90((uint64_t)v6);
  v4 = v3;
  sub_23AA8A05C((uint64_t)v6, qword_2542E5640);
  if (v4)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    return v7;
  }
  else
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

uint64_t sub_23B1BE0E8(void (*a1)(char *), uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  void (*v12)(char *);

  v12 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = (char *)&v11 - v7;
  v9 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  result = (*(uint64_t (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 16))(a3, 0, AssociatedTypeWitness, v9);
  if (!v3)
  {
    v12(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_23B1BE204()
{
  return sub_23B1BE260(sub_23B1B350C, &block_descriptor_19_0);
}

uint64_t sub_23B1BE260(void *a1, void *a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  unsigned int v5;
  id v6;
  uint64_t result;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = *(void **)(v2 + 16);
  aBlock[4] = a1;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = a2;
  v4 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v5 = objc_msgSend(v3, sel_executeSwift_error_, v4, aBlock);
  _Block_release(v4);
  v6 = aBlock[0];
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
    __break(1u);
  if (!v5)
  {
    sub_23B1C587C();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_23B1BE380()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  unsigned int v4;
  id v5;
  void *v6;
  unsigned int v7;
  void *v8;
  unsigned int v9;
  id v10;
  uint64_t result;
  id aBlock;
  uint64_t v13;
  id (*v14)(uint64_t, void *);
  void *v15;
  uint64_t (*v16)();
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 16);
  v16 = sub_23B1B3510;
  v17 = 0;
  v2 = (void *)MEMORY[0x24BDAC760];
  aBlock = (id)MEMORY[0x24BDAC760];
  v13 = 1107296256;
  v14 = sub_23AA9432C;
  v15 = &block_descriptor_10_0;
  v3 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  v5 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (!v4)
  {
LABEL_8:
    sub_23B1C587C();

    return swift_willThrow();
  }
  v16 = sub_23B1B3544;
  v17 = 0;
  aBlock = v2;
  v13 = 1107296256;
  v14 = sub_23AA9432C;
  v15 = &block_descriptor_13_3;
  v6 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v7 = objc_msgSend(v1, sel_executeSwift_error_, v6, &aBlock);
  _Block_release(v6);
  v5 = aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  if (!v7)
    goto LABEL_8;
  v16 = sub_23B1B3548;
  v17 = 0;
  aBlock = v2;
  v13 = 1107296256;
  v14 = sub_23AA9432C;
  v15 = &block_descriptor_16_2;
  v8 = _Block_copy(&aBlock);
  swift_release();
  aBlock = 0;
  v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  v10 = aBlock;
  result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) != 0)
    goto LABEL_13;
  if (v9)
    return result;
  sub_23B1C587C();

  return swift_willThrow();
}

uint64_t sub_23B1BE5F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_23B1C6C98();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - v7;
  result = MEMORY[0x24BDAC7A8](v6);
  v13 = (char *)&v19 - v12;
  v14 = *(uint64_t (**)(uint64_t))(v1 + 24);
  if (v14)
  {
    v19 = v11;
    v20 = result;
    v21 = v10;
    v15 = swift_retain();
    v16 = v14(v15);
    result = sub_23AAB7948((uint64_t)v14);
    if (v16)
    {
      v17 = *(void (**)(uint64_t))(**(_QWORD **)(v16 + 16) + 160);
      swift_retain();
      v17(a1);
      swift_release();
      if (v2)
      {
        return swift_release();
      }
      else
      {
        v18 = v21;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v8, 1, AssociatedTypeWitness) == 1)
        {
          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v8, v20);
        }
        else
        {
          result = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v13, v8, AssociatedTypeWitness);
          if (*(_QWORD *)(v1 + qword_2542EE080))
          {
            swift_retain();
            sub_23B0748EC();
            swift_release();
            swift_release();
            return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v13, AssociatedTypeWitness);
          }
          else
          {
            __break(1u);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_23B1BE7D0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  NSObject *v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*isa)(uint64_t);
  uint64_t v17;
  NSObject *v18;
  _QWORD **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  Class v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  _QWORD **v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t result;
  uint64_t v51;
  void *v52;
  NSObject *v53;
  _QWORD **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char v66;
  _QWORD *v67;
  uint64_t v68;
  id aBlock[8];

  v5 = v3;
  v63 = a3;
  v64 = a1;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v62 = (char *)&v51 - v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v15 = (char *)&v51 - v14;
  isa = (uint64_t (*)(uint64_t))v5[3].isa;
  if (!isa)
    return (uint64_t)v64;
  v60 = v15;
  v61 = v11;
  v55 = v13;
  v56 = v12;
  v58 = v8;
  v59 = AssociatedTypeWitness;
  v17 = swift_retain();
  v18 = v5;
  v19 = (_QWORD **)isa(v17);
  sub_23AAB7948((uint64_t)isa);
  if (!v19)
    return (uint64_t)v64;
  v57 = *(uint64_t *)((char *)&v18->isa + qword_2542EE080);
  if (!v57)
    goto LABEL_24;
  v54 = v19;
  v20 = sub_23AFD7C80(8u);
  v22 = *(_QWORD *)(v20 + 16);
  v21 = *(_QWORD *)(v20 + 24);
  v23 = __OFSUB__(v21, v22);
  v24 = v21 - v22;
  if (v23)
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v24 < 1)
  {
LABEL_24:
    swift_release();
    return (uint64_t)v64;
  }
  v25 = v20;
  v53 = v18;
  v26 = v18[2].isa;
  v27 = (_QWORD *)swift_allocObject();
  v28 = v63;
  v27[2] = a2;
  v27[3] = v28;
  aBlock[4] = sub_23AA698D4;
  aBlock[5] = v27;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_7_3;
  v29 = _Block_copy(aBlock);
  v63 = v25;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v30 = -[objc_class fetchSwift:error:](v26, sel_fetchSwift_error_, v29, aBlock);
  _Block_release(v29);
  v31 = aBlock[0];
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v25 & 1) != 0)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
  }
  if (!v30)
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
    return (uint64_t)v27;
  }
  v32 = v30;
  v33 = (void *)sub_23B1C61D0();
  v68 = 0;
  aBlock[0] = v33;
  if (!objc_msgSend(v30, sel_next))
    goto LABEL_28;
  do
  {
    v27 = (_QWORD *)MEMORY[0x23B8601A8]();
    sub_23B1BEEAC(v30, (uint64_t)aBlock, &v68);
    if (v4)
    {
      objc_autoreleasePoolPop(v27);

      swift_release();
      swift_release();
      swift_release();
      goto LABEL_29;
    }
    objc_autoreleasePoolPop(v27);
  }
  while ((objc_msgSend(v30, sel_next) & 1) != 0);
  v34 = v68;
  if (v68 < 1)
  {
LABEL_28:
    v27 = v64;
    swift_release();
    swift_release();
    swift_release();

LABEL_29:
    swift_bridgeObjectRelease();
    return (uint64_t)v27;
  }
  v35 = v54;
  swift_retain();
  sub_23B0736C8(v34, sub_23B1C1B00, (uint64_t)v35);
  swift_release();
  v67 = v64;
  v66 = 0;
  v36 = aBlock[0];
  v37 = swift_bridgeObjectRetain();
  v38 = v61;
  if (!MEMORY[0x23B85F0E0](v37, v61))
  {
    swift_bridgeObjectRelease();
    v40 = v53;
LABEL_34:
    if (v66 == 1)
    {
      swift_retain();
      sub_23AFABBFC((uint64_t)"startSpeculativeBackgroundDownloads(currentDownloadsCount:matching:)", 68, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23B1C1B0C, (uint64_t)v40);
      swift_release();
    }
    swift_release();
    swift_release();
    swift_release();

    v27 = v67;
    goto LABEL_29;
  }
  v52 = v32;
  v39 = 0;
  v64 = (_QWORD *)*(int *)(v38 + 48);
  v40 = v53;
  v41 = (uint64_t)v62;
  while (1)
  {
    v42 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v60, (unint64_t)v36+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v39, v38);
      v43 = v39 + 1;
      if (__OFADD__(v39, 1))
        goto LABEL_23;
      goto LABEL_16;
    }
    result = sub_23B1C6F38();
    if (v55 != 8)
      break;
    v65 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v56 + 16))(v60, &v65, v61);
    swift_unknownObjectRelease();
    v40 = v53;
    v41 = (uint64_t)v62;
    v43 = v39 + 1;
    if (__OFADD__(v39, 1))
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_16:
    v44 = *(_QWORD *)((char *)v64 + (_QWORD)v60);
    v45 = (*(uint64_t (**)(uint64_t))(v58 + 32))(v41);
    v47 = *(_QWORD *)(v63 + 16);
    v46 = *(_QWORD *)(v63 + 24);
    v23 = __OFSUB__(v46, v47);
    v48 = v46 - v47;
    if (v23)
      goto LABEL_39;
    if (v48 < 1)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v41, v59);
      goto LABEL_33;
    }
    v49 = (void *)MEMORY[0x23B8601A8](v45);
    sub_23B1BF084(v54, v41, v44, v40, &v66, v57, (uint64_t)&v67);
    objc_autoreleasePoolPop(v49);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v41, v59);
    v38 = v61;
    ++v39;
    if (v43 == MEMORY[0x23B85F0E0](v36, v61))
    {
      swift_bridgeObjectRelease();
LABEL_33:
      v32 = v52;
      goto LABEL_34;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23B1BEEAC(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(void);
  id v13;
  uint64_t result;
  id v15;
  id v16;
  uint64_t v17;
  _QWORD v18[2];
  _QWORD *v19;

  v19 = a3;
  v18[1] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18[0] = swift_getTupleTypeMetadata2();
  v6 = MEMORY[0x24BDAC7A8](v18[0]);
  v8 = (char *)v18 - v7;
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v18 - v10;
  v12 = *(uint64_t (**)(void))(*(_QWORD *)(swift_getAssociatedConformanceWitness() + 40) + 16);
  v13 = a1;
  result = v12();
  if (!v3)
  {
    v15 = objc_msgSend(v13, sel_longAtIndex_, 1);
    v16 = objc_msgSend(v13, sel_longLongAtIndex_, 2);
    v17 = *(int *)(v18[0] + 48);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v8, v11, AssociatedTypeWitness);
    *(_QWORD *)&v8[v17] = v15;
    sub_23B1C67DC();
    sub_23B1C67AC();
    result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
    if (__OFADD__(*v19, v16))
      __break(1u);
    else
      *v19 += v16;
  }
  return result;
}

uint64_t sub_23B1BF084(_QWORD **a1, uint64_t a2, uint64_t a3, NSObject *a4, _BYTE *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t result;
  char *v38;
  char *v39;
  uint64_t (**v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  os_log_t v58;
  id v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD **v71;
  _BYTE *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t AssociatedTypeWitness;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  Class isa;
  os_log_t v95;
  os_log_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  _QWORD **v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103[4];
  uint64_t v104;

  v76 = a7;
  v93 = a6;
  v78 = a5;
  v96 = a4;
  v97 = a3;
  v102 = a2;
  v8 = *a1;
  v83 = sub_23B1C5BDC();
  v81 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v82 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v8[307];
  v87 = v8[305];
  v88 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v92 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v85 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v77 = (char *)&v73 - v13;
  v14 = sub_23B1C5E4C();
  v90 = *(_QWORD *)(v14 - 8);
  v91 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v86 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v84 = (char *)&v73 - v17;
  v18 = v8[306];
  v19 = v8[308];
  v21 = type metadata accessor for SnapshotItem(255, v18, v19, v20);
  v22 = sub_23B1C6C98();
  isa = v22[-1].isa;
  v95 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v99 = (char *)&v73 - v24;
  v98 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v73 - v25;
  v79 = v19;
  v80 = v18;
  v27 = swift_getAssociatedTypeWitness();
  v28 = sub_23B1C6C98();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v73 - v31;
  v33 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v35 = (char *)&v73 - v34;
  v100 = a1;
  v36 = v101;
  result = (*(uint64_t (**)(uint64_t))(*a1[2] + 160))(v102);
  if (v36)
    return result;
  v74 = v26;
  v75 = v35;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v32, 1, v27) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v32, v28);
  v38 = v75;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v75, v32, v27);
  v39 = v99;
  (*(void (**)(char *, uint64_t))(*v100[5] + 240))(v38, 1);
  v41 = v98;
  v42 = v21;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v39, 1, v21) == 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v27);
    return (*((uint64_t (**)(char *, os_log_t))isa + 1))(v39, v95);
  }
  v101 = 0;
  v43 = (uint64_t)v74;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v74, v39, v21);
  if (v97 != 64)
    goto LABEL_12;
  v44 = *(uint64_t *)((char *)&v96->isa + qword_2542EE060);
  if (!v44)
    goto LABEL_12;
  swift_retain();
  if ((sub_23AFF6BB0(v43) & 1) != 0)
  {
    swift_release();
LABEL_12:
    type metadata accessor for ItemMetadata();
    if ((sub_23B074658() & 1) != 0)
    {
      v45 = v101;
      sub_23B1B9264(v102, (uint64_t)sub_23B1C1B24, (uint64_t)v96);
      if (!v45)
      {
        v99 = (char *)v27;
        v103[0] = v87;
        v103[1] = v80;
        v103[2] = v88;
        v103[3] = v79;
        type metadata accessor for ConcreteJobResult();
      }
      (*(void (**)(char *, uint64_t))(v41 + 8))(v74, v21);
      v40 = (uint64_t (**)(char *, uint64_t))(v33 + 8);
      return (*v40)(v38, v27);
    }
    v46 = (id)fpfs_current_or_default_log();
    v47 = v86;
    sub_23B1C5E58();
    v48 = v92;
    v49 = v85;
    v50 = AssociatedTypeWitness;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v85, v102, AssociatedTypeWitness);
    v51 = sub_23B1C5E40();
    v52 = sub_23B1C6A94();
    LODWORD(v102) = v52;
    if (os_log_type_enabled(v51, v52))
    {
      v96 = v51;
      v53 = (uint8_t *)swift_slowAlloc();
      v54 = swift_slowAlloc();
      v97 = v42;
      v99 = (char *)v27;
      v55 = v54;
      v103[0] = v54;
      *(_DWORD *)v53 = 136315138;
      v100 = (_QWORD **)v33;
      swift_getAssociatedConformanceWitness();
      v56 = sub_23B1C7304();
      v104 = sub_23AABEC68(v56, v57, v103);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      v58 = v96;
      _os_log_impl(&dword_23AA66000, v96, (os_log_type_t)v102, "💾 download for file %s won't be scheduled due to disk management concerns", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v55, -1, -1);
      MEMORY[0x23B8614BC](v53, -1, -1);

      (*(void (**)(char *, uint64_t))(v90 + 8))(v47, v91);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v74, v97);
      return ((uint64_t (*)(char *, char *))v100[1])(v75, v99);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v47, v91);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v74, v42);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v38, v27);
    }
  }
  v97 = v44;
  v99 = (char *)v27;
  v100 = (_QWORD **)v33;
  v59 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v60 = v92;
  v61 = v77;
  v62 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v77, v102, AssociatedTypeWitness);
  v63 = sub_23B1C5E40();
  v64 = sub_23B1C6A88();
  if (os_log_type_enabled(v63, v64))
  {
    v95 = v63;
    v65 = (uint8_t *)swift_slowAlloc();
    v66 = swift_slowAlloc();
    v103[0] = v66;
    *(_DWORD *)v65 = 136446210;
    swift_getAssociatedConformanceWitness();
    v67 = sub_23B1C7304();
    v104 = sub_23AABEC68(v67, v68, v103);
    v38 = v75;
    v41 = v98;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v61, v62);
    v63 = v95;
    _os_log_impl(&dword_23AA66000, v95, v64, "🔮  unscheduling download of item %{public}s not in the speculative set anymore", v65, 0xCu);
    swift_arrayDestroy();
    v69 = v66;
    v43 = (uint64_t)v74;
    MEMORY[0x23B8614BC](v69, -1, -1);
    MEMORY[0x23B8614BC](v65, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
  }

  (*(void (**)(char *, uint64_t))(v90 + 8))(v84, v91);
  v27 = (uint64_t)v99;
  v70 = v101;
  sub_23B1B8340(v102, 0x40uLL);
  v71 = v100;
  v72 = v78;
  if (v70)
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v21);
    v40 = (uint64_t (**)(char *, uint64_t))(v71 + 1);
    return (*v40)(v38, v27);
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v21);
  result = ((uint64_t (*)(char *, uint64_t))v71[1])(v38, v27);
  *v72 = 1;
  return result;
}

void sub_23B1BFB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  if (v0)
  {
    swift_release();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 168) + 8))(*(_QWORD *)(v4 - 360), v2);
  }
  else
  {
    sub_23B074778();
    swift_release();
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 168) + 8))(*(_QWORD *)(v4 - 360), v2);
    (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v1, *(_QWORD *)(v4 - 160));
    v5 = *(_QWORD **)(v4 - 344);
    if (!__OFADD__(*v5, 1))
    {
      ++*v5;
      JUMPOUT(0x23B1BF6E8);
    }
    __break(1u);
  }
  JUMPOUT(0x23B1BF3CCLL);
}

uint64_t sub_23B1BFBDC(uint64_t result)
{
  if (*(_QWORD *)(result + qword_2542EE060))
  {
    swift_retain();
    sub_23AFF8670();
    return swift_release();
  }
  return result;
}

_QWORD *sub_23B1BFC20(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *result;

  result = (_QWORD *)sub_23B1BE7D0(a1, (uint64_t)sub_23B1BFC58, 0);
  if (!v1)
    return (_QWORD *)sub_23B1BE7D0(result, (uint64_t)sub_23B1BFDB4, 0);
  return result;
}

uint64_t sub_23B1BFC58()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1BFDB4()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

void sub_23B1BFEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  char *v27;
  id v28;
  char *v29;
  void (*v30)(char *);
  char *v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  id aBlock[8];

  v6 = v5;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*v4 + 88), *(_QWORD *)(*v4 + 104), a4);
  v45 = sub_23B1C6C98();
  v44 = *(_QWORD *)(v45 - 8);
  v8 = MEMORY[0x24BDAC7A8](v45);
  v52 = (char *)&v39 - v9;
  v51 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v39 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_23B1C6C98();
  v46 = *(_QWORD *)(v12 - 8);
  v47 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v54 = (char *)&v39 - v14;
  v57 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v39 - v15;
  v55 = swift_getAssociatedTypeWitness();
  v53 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v18 = (char *)&v39 - v17;
  v19 = (uint64_t (*)(uint64_t))v4[3];
  if (v19)
  {
    v56 = v16;
    v49 = v18;
    v20 = swift_retain();
    v21 = v19(v20);
    sub_23AAB7948((uint64_t)v19);
    v58 = v21;
    if (v21)
    {
      v43 = v4;
      v22 = (void *)v4[2];
      aBlock[4] = sub_23B1B35B4;
      aBlock[5] = 0;
      aBlock[0] = (id)MEMORY[0x24BDAC760];
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_23AA9432C;
      aBlock[3] = &block_descriptor_4;
      v23 = _Block_copy(aBlock);
      swift_release();
      aBlock[0] = 0;
      v24 = objc_msgSend(v22, sel_fetchSwift_error_, v23, aBlock);
      _Block_release(v23);
      v25 = aBlock[0];
      if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
        __break(1u);
      if (v24)
      {
        v42 = qword_2542EE080;
        v48 = v24;
        if (objc_msgSend(v24, sel_next))
        {
          v26 = v55;
          v41 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
          v40 = *(void (**)(void))(v41 + 16);
          v27 = v49;
          while (1)
          {
            v28 = v48;
            v40();
            if (v6)
            {
              swift_release();

              return;
            }
            v29 = v27;
            v30 = *(void (**)(char *))(**(_QWORD **)(v58 + 16) + 160);
            swift_retain();
            v31 = v54;
            v30(v29);
            swift_release();
            v32 = v57;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v31, 1, AssociatedTypeWitness) == 1)
            {
              (*(void (**)(char *, uint64_t))(v53 + 8))(v49, v26);
              swift_release();

              (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v47);
              return;
            }
            v33 = v56;
            (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v56, v31, AssociatedTypeWitness);
            v34 = *(void (**)(char *, uint64_t))(**(_QWORD **)(v58 + 40) + 240);
            swift_retain();
            v35 = v52;
            v34(v33, 1);
            v27 = v49;
            swift_release();
            v36 = v51;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v35, 1, v7) == 1)
            {

              swift_release();
              (*(void (**)(char *, uint64_t))(v57 + 8))(v56, AssociatedTypeWitness);
              (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v26);
              (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v45);
              return;
            }
            v37 = v50;
            (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v50, v35, v7);
            type metadata accessor for ItemMetadata();
            if (!*(_QWORD *)((char *)v43 + v42))
              break;
            swift_retain();
            v38 = v56;
            sub_23B074778();
            swift_release();
            (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v7);
            (*(void (**)(char *, uint64_t))(v57 + 8))(v38, AssociatedTypeWitness);
            v26 = v55;
            (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v55);
            if ((objc_msgSend(v28, sel_next) & 1) == 0)
              goto LABEL_12;
          }
          __break(1u);
        }
        else
        {
LABEL_12:
          swift_release();

        }
      }
      else
      {
        sub_23B1C587C();

        swift_willThrow();
        swift_release();
      }
    }
  }
}

uint64_t sub_23B1C04F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  id aBlock[7];

  v1 = v0;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C60EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (_QWORD *)((char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = v1 + qword_2542EE090;
  result = MEMORY[0x23B8615C4](v1 + qword_2542EE090);
  if (!result)
    return result;
  v12 = *(uint64_t (**)(uint64_t))(v1 + 24);
  if (!v12)
    return swift_unknownObjectRelease();
  v34 = v2;
  v13 = swift_retain();
  v14 = v12(v13);
  v15 = (uint64_t)v12;
  v16 = v14;
  sub_23AAB7948(v15);
  if (!v16)
    return swift_unknownObjectRelease();
  v17 = sub_23AFD7BC0();
  *v9 = v17;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5610], v6);
  v18 = (id)v17;
  LOBYTE(v17) = sub_23B1C6104();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if ((v17 & 1) == 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
  }
  v19 = *(void **)(v1 + 16);
  aBlock[4] = sub_23B1B35C4;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_43;
  v20 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v21 = objc_msgSend(v19, sel_fetchSwift_error_, v20, aBlock);
  _Block_release(v20);
  v22 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    goto LABEL_20;
  if (v21)
  {
    if (objc_msgSend(v21, sel_next))
    {
      sub_23B07A800((uint64_t)objc_msgSend(v21, sel_longAtIndex_, 0), (uint64_t)objc_msgSend(v21, sel_longLongAtIndex_, 1));

      swift_unknownObjectRelease();
    }
    else
    {
      if (MEMORY[0x23B8615C4](v10))
      {
        sub_23B07A800(0, 0);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();

    }
    return swift_release();
  }
  else
  {
    v23 = (void *)sub_23B1C587C();

    swift_willThrow();
    v24 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v25 = v23;
    v26 = v23;
    v27 = sub_23B1C5E40();
    v28 = sub_23B1C6AA0();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v33[2] = v16;
      v31 = (_QWORD *)v30;
      *(_DWORD *)v29 = 138412290;
      v33[1] = v29 + 4;
      swift_getErrorValue();
      v32 = sub_23B0D9CF0(v35);
      aBlock[0] = v32;
      sub_23B1C6CBC();
      *v31 = v32;

      _os_log_impl(&dword_23AA66000, v27, v28, "Error fetching items from db: %@", v29, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v31, -1, -1);
      MEMORY[0x23B8614BC](v29, -1, -1);
      swift_unknownObjectRelease();

      swift_release();
    }
    else
    {
      swift_release();
      swift_unknownObjectRelease();

    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v34);
  }
}

uint64_t sub_23B1C09B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v9[8];

  sub_23AAB7948(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  v1 = v0 + qword_2542E7018;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E67E8);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_release();
  v3(v0 + qword_2542E7020, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  v4 = *(_OWORD *)(v0 + qword_2542EE078 + 80);
  v9[4] = *(_OWORD *)(v0 + qword_2542EE078 + 64);
  v9[5] = v4;
  v5 = *(_OWORD *)(v0 + qword_2542EE078 + 112);
  v9[6] = *(_OWORD *)(v0 + qword_2542EE078 + 96);
  v9[7] = v5;
  v6 = *(_OWORD *)(v0 + qword_2542EE078 + 16);
  v9[0] = *(_OWORD *)(v0 + qword_2542EE078);
  v9[1] = v6;
  v7 = *(_OWORD *)(v0 + qword_2542EE078 + 48);
  v9[2] = *(_OWORD *)(v0 + qword_2542EE078 + 32);
  v9[3] = v7;
  sub_23AB7C104((uint64_t)v9);
  sub_23ACF1828(v0 + qword_2542EE090);
  return v0;
}

uint64_t sub_23B1C0AE4()
{
  sub_23B1C09B8();
  return swift_deallocClassInstance();
}

void type metadata accessor for SQLBackgroundDownloader()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23B1C0B14()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23B1C0B28()
{
  return sub_23B1B576C();
}

uint64_t sub_23B1C0B48()
{
  return sub_23B1B5AC8();
}

uint64_t sub_23B1C0B68()
{
  return sub_23B1B5DC8();
}

uint64_t sub_23B1C0B88()
{
  return sub_23B1B64A8();
}

uint64_t sub_23B1C0BA8()
{
  return sub_23B1BE204();
}

uint64_t sub_23B1C0BC8()
{
  return sub_23B1BE380();
}

uint64_t sub_23B1C0BE8()
{
  return sub_23B1B6674();
}

uint64_t sub_23B1C0C08()
{
  return sub_23B1B66D0();
}

uint64_t sub_23B1C0C28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23B1B3AC8();
  *a1 = result;
  return result;
}

uint64_t sub_23B1C0C50()
{
  return sub_23B1B3ADC();
}

uint64_t sub_23B1C0C74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23B1B3AFC();
  *a1 = result;
  return result;
}

uint64_t sub_23B1C0C9C()
{
  return sub_23B1B3BAC();
}

uint64_t sub_23B1C0CC0(uint64_t (*a1)(void))
{
  return a1() & 1;
}

void sub_23B1C0CE4()
{
  uint64_t v0;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  v0 = sub_23B1C6C98();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B1C0DB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, _QWORD, _QWORD);
  char v10;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v5, *(_QWORD *)(v7 - 72) + *(int *)(a1 + 52), v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v5, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v4);
    LOBYTE(v2) = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v6, v5, v3);
    v8 = *(_QWORD *)(v7 - 120);
    v2 = *(_QWORD *)(*(_QWORD *)(v7 - 128) + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v2 + 336);
    v10 = v9(23, v6, 0, 0);
    if (v8)
    {
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v6, v3);
    }
    else if ((v10 & 1) != 0 || (v9(6, v6, 0, 0) & 1) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v6, v3);
      LOBYTE(v2) = 1;
    }
    else
    {
      LOBYTE(v2) = v9(1, v6, 0, 0);
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v6, v3);
    }
  }
  return v2 & 1;
}

uint64_t sub_23B1C0EFC()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B1C0FEC()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C1098()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C1144()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C11F4()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C12A0()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C1484()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C15D0()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C16F0()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C185C()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B1C18F0()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C1A00()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23B1C1AF0()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C1B00(uint64_t result)
{
  if ((result & 1) != 0)
    return sub_23AFB0B90();
  return result;
}

uint64_t sub_23B1C1B0C()
{
  uint64_t v0;

  return sub_23B1BFBDC(v0);
}

unint64_t sub_23B1C1B24()
{
  return 0xD000000000000031;
}

uint64_t sub_23B1C1B40()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

void sub_23B1C1C58()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  if (v1)
  {
    v2 = swift_retain();
    v3 = v1(v2);
    sub_23AAB7948((uint64_t)v1);
    if (v3)
    {
      sub_23AFB0B90();
      swift_release();
    }
  }
}

uint64_t sub_23B1C1CC4(uint64_t a1)
{
  int64_t v2;
  uint64_t *v3;
  unint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v2 = *(_QWORD *)(a1 + 16);
  v27 = a1;
  if (v2)
  {
    v28 = MEMORY[0x24BEE4AF8];
    sub_23ADACF28(0, v2, 0);
    v3 = (uint64_t *)(a1 + 32);
    v4 = *(_QWORD *)(v28 + 16);
    v5 = v2;
    do
    {
      v7 = *v3++;
      v6 = v7;
      v8 = *(_QWORD *)(v28 + 24);
      if (v4 >= v8 >> 1)
        sub_23ADACF28(v8 > 1, v4 + 1, 1);
      *(_QWORD *)(v28 + 16) = v4 + 1;
      *(_QWORD *)(v28 + 8 * v4++ + 32) = v6;
      --v5;
    }
    while (v5);
    a1 = v27;
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5540);
  sub_23AAB5A28(&qword_2542E75B0, (uint64_t *)&unk_2542E5540, MEMORY[0x24BEE2B40]);
  sub_23AAA420C();
  sub_23B1C6644();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (v2)
  {
    v29 = MEMORY[0x24BEE4AF8];
    sub_23ADACF28(0, v2, 0);
    v9 = (uint64_t *)(a1 + 32);
    v10 = *(_QWORD *)(v29 + 16);
    v11 = v2;
    do
    {
      v13 = *v9++;
      v12 = v13;
      v14 = *(_QWORD *)(v29 + 24);
      if (v10 >= v14 >> 1)
        sub_23ADACF28(v14 > 1, v10 + 1, 1);
      *(_QWORD *)(v29 + 16) = v10 + 1;
      *(_QWORD *)(v29 + 8 * v10++ + 32) = v12;
      --v11;
    }
    while (v11);
    a1 = v27;
  }
  swift_bridgeObjectRetain();
  sub_23B1C6644();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (v2)
  {
    v30 = MEMORY[0x24BEE4AF8];
    sub_23ADACF28(0, v2, 0);
    v15 = (uint64_t *)(a1 + 32);
    v16 = *(_QWORD *)(v30 + 16);
    v17 = v2;
    do
    {
      v19 = *v15++;
      v18 = v19;
      v20 = *(_QWORD *)(v30 + 24);
      if (v16 >= v20 >> 1)
        sub_23ADACF28(v20 > 1, v16 + 1, 1);
      *(_QWORD *)(v30 + 16) = v16 + 1;
      *(_QWORD *)(v30 + 8 * v16++ + 32) = v18;
      --v17;
    }
    while (v17);
    a1 = v27;
  }
  swift_bridgeObjectRetain();
  sub_23B1C6644();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (v2)
  {
    v31 = MEMORY[0x24BEE4AF8];
    sub_23ADACF28(0, v2, 0);
    v21 = (uint64_t *)(a1 + 32);
    v22 = *(_QWORD *)(v31 + 16);
    do
    {
      v24 = *v21++;
      v23 = v24;
      v25 = *(_QWORD *)(v31 + 24);
      if (v22 >= v25 >> 1)
        sub_23ADACF28(v25 > 1, v22 + 1, 1);
      *(_QWORD *)(v31 + 16) = v22 + 1;
      *(_QWORD *)(v31 + 8 * v22++ + 32) = v23;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRetain();
  sub_23B1C6644();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C238C()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2158);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1D2330;
  *(_OWORD *)(inited + 32) = xmmword_23B1D3BE0;
  v1 = sub_23B1C1CC4(inited);
  swift_setDeallocating();
  return v1;
}

uint64_t sub_23B1C2424()
{
  _OWORD *inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2158);
  inited = (_OWORD *)swift_initStackObject();
  inited[1] = xmmword_23B1D1B90;
  inited[2] = xmmword_23B1DC580;
  inited[3] = xmmword_23B1DC590;
  v1 = sub_23B1C1CC4((uint64_t)inited);
  swift_setDeallocating();
  return v1;
}

uint64_t sub_23B1C24C8()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2158);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
  *(_QWORD *)(inited + 32) = 501;
  v1 = sub_23B1C1CC4(inited);
  swift_setDeallocating();
  return v1;
}

uint64_t sub_23B1C2560()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C2424();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C238C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C24C8();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C27FC()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C24C8();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23B1C29C4()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C29D4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B1BDFC0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23B1C29DC()
{
  return swift_deallocObject();
}

void sub_23B1C29EC()
{
  sub_23B1BCF7C();
}

uint64_t sub_23B1C2A08(uint64_t a1)
{
  return sub_23B1C3058(a1, 72, 0x61747320444E4120, 0xED0000203D206574, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23B1BC900);
}

uint64_t sub_23B1C2A38()
{
  return swift_deallocObject();
}

void sub_23B1C2A48()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23B1C2A88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;

  v4 = v1
     + ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, AssociatedTypeWitness))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, AssociatedTypeWitness);
  type metadata accessor for ItemReconciliationHalf(0, v2, v3, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23B1C2BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  uint64_t v28;

  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v19, 1, a1))
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v19, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19 + *(int *)(a1 + 56), v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23AAAEE10(*(void **)(v16 + v18[16]), *(id *)(v16 + v18[16] + 8), *(_BYTE *)(v16 + v18[16] + 16));
  v22 = v16 + v18[17];
  v23 = *(_QWORD *)(v22 + 16);
  if (v23 >> 60 != 11 && v23 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v22 + 8), v23);

  v25 = v16 + *(int *)(a15 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v27 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, AssociatedTypeWitness))
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, AssociatedTypeWitness);
  type metadata accessor for ItemReconciliationHalf(0, a10, v17, v28);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23B1C2D80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;

  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v4, 1, a1))
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v4, v1);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + *(int *)(a1 + 56), v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23AAAEE10(*(void **)(v2 + v3[16]), *(id *)(v2 + v3[16] + 8), *(_BYTE *)(v2 + v3[16] + 16));
  v7 = v2 + v3[17];
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 >> 60 != 11 && v8 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v7 + 8), v8);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23B1C2E8C()
{
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23B1C2EC4()
{
  void *v0;

  return sub_23B1BC444(v0);
}

uint64_t sub_23B1C2F04()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C2F14(uint64_t a1)
{
  return sub_23B1BBF14(a1);
}

uint64_t sub_23B1C2F1C()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C2F2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23B1B3AC8();
  *a1 = result;
  return result;
}

uint64_t sub_23B1C2F54()
{
  return sub_23B1B3ADC();
}

uint64_t sub_23B1C2F78()
{
  return 32;
}

__n128 sub_23B1C2F84(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_23B1C2F90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1C2FB4(uint64_t a1)
{
  uint64_t v1;

  return sub_23B1BBCC0(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23B1C2FC0()
{
  return swift_deallocObject();
}

void sub_23B1C2FD0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  sub_23B1B977C(v1, a1);
}

uint64_t sub_23B1C2FE8()
{
  return swift_deallocObject();
}

void sub_23B1C2FF8()
{
  uint64_t v0;

  sub_23B1B37D4(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_23B1C3004()
{
  return swift_deallocObject();
}

void sub_23B1C3014(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_23ACFA9FC(a1, a2 & 1);
}

uint64_t sub_23B1C3030(uint64_t a1)
{
  return sub_23B1C3058(a1, 53, 0xD000000000000033, 0x800000023B2207D0, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23B1BAD7C);
}

uint64_t sub_23B1C3058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v11 = *((_QWORD *)v5 + 2);
  v12 = *((_QWORD *)v5 + 3);
  v13 = *((_QWORD *)v5 + 4);
  v14 = *((_QWORD *)v5 + 5);
  v15 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return a5(a1, &v5[(v15 + 48) & ~v15], v11, v12, v13, v14, a2, a3, a4);
}

uint64_t sub_23B1C310C()
{
  return swift_deallocObject();
}

unint64_t sub_23B1C311C(void *a1)
{
  uint64_t v1;

  return sub_23AEB1E00(a1, *(_QWORD *)(v1 + 16) & ~(*(uint64_t *)(v1 + 16) >> 63), *(_QWORD *)(v1 + 16) >> 63, *(_QWORD *)(v1 + 24) & ~(*(uint64_t *)(v1 + 24) >> 63), *(_QWORD *)(v1 + 24) >> 63);
}

uint64_t sub_23B1C3134()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_23B1C31B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23B1B9564(a1, v1 + v4, *(void (**)(uint64_t))(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_23B1C324C()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C3260(uint64_t a1)
{
  return sub_23B1C3058(a1, 57, 0xD000000000000037, 0x800000023B2065B0, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23B1BAD7C);
}

uint64_t sub_23B1C3288()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C3298()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_23B1C3310(uint64_t a1)
{
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  return sub_23B1B908C(a1, *(_QWORD *)(v1 + 48));
}

uint64_t sub_23B1C3390()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C33A4()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C33B8(uint64_t a1)
{
  return sub_23B1C3058(a1, 75, 0xD000000000000010, 0x800000023B1F8EF0, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23B1BC900);
}

uint64_t sub_23B1C33E0()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C33F0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1C3484(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B1B78F4(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v5 + 31) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((v5 + 31) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23B1C3514()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C3524()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_23B1C35B0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  return sub_23B1B7CB0(a1, v1 + v4, *(_QWORD *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v5 + 39) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23B1C3678()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C3688()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1C371C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23B1B7A64(a1, *(_QWORD *)(v1 + 48), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v5 + 31) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((v5 + 31) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23B1C37B0()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C37C0()
{
  return sub_23B1B6E34();
}

uint64_t sub_23B1C37F4()
{
  return swift_deallocObject();
}

void sub_23B1C3804()
{
  sub_23B1B6C30();
}

uint64_t sub_23B1C380C()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C381C()
{
  return sub_23B1B6E34();
}

uint64_t sub_23B1C3850()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C3860()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C3870()
{
  return sub_23B1B6294();
}

uint64_t sub_23B1C387C()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C388C()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C389C()
{
  return sub_23B1B59C0();
}

uint64_t sub_23B1C38A8()
{
  return swift_deallocObject();
}

void sub_23B1C38BC()
{
  uint64_t v0;

  sub_23B1B5508(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_23B1C38C4()
{
  sub_23B1B4E3C();
}

uint64_t sub_23B1C38D8@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1B4C10(v1, a1);
}

void sub_23B1C38E0()
{
  sub_23B1B4B0C();
}

uint64_t sub_23B1C38F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23B1C391C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1C3940(uint64_t a1)
{
  return sub_23AAFB0EC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B1B47B8);
}

uint64_t sub_23B1C394C(uint64_t a1)
{
  return sub_23AAFB0EC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23B1B4824);
}

uint64_t sub_23B1C3958(char a1)
{
  return sub_23B1B4878(a1);
}

uint64_t sub_23B1C396C(char a1)
{
  uint64_t v1;

  return sub_23B1B3E04(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23B1C3974()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23B1C3998()
{
  uint64_t v0;

  return sub_23B1B3E9C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_23B1C39B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23B1B3AFC();
  *a1 = result;
  return result;
}

uint64_t sub_23B1C39DC()
{
  return sub_23B1B3BAC();
}

uint64_t sub_23B1C3A00()
{
  return 32;
}

__n128 sub_23B1C3A0C(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_23B1C3A18()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C3A28()
{
  return swift_deallocObject();
}

uint64_t sub_23B1C3A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for BackgroundWorkReason()
{
  return &type metadata for BackgroundWorkReason;
}

unint64_t sub_23B1C3A94()
{
  unint64_t result;

  result = qword_2569E8F70;
  if (!qword_2569E8F70)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E84F4, &type metadata for BackgroundWorkReason);
    atomic_store(result, (unint64_t *)&qword_2569E8F70);
  }
  return result;
}

unint64_t sub_23B1C3ADC()
{
  unint64_t result;

  result = qword_2569E8F78;
  if (!qword_2569E8F78)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E8324, &type metadata for BackgroundWorkReason);
    atomic_store(result, (unint64_t *)&qword_2569E8F78);
  }
  return result;
}

uint64_t sub_23B1C3B20()
{
  return sub_23AAB5A28(&qword_2569E8F80, &qword_2569E8F88, (uint64_t)&unk_23B1DD070);
}

unint64_t sub_23B1C3B50()
{
  unint64_t result;

  result = qword_2569E8F90;
  if (!qword_2569E8F90)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E8354, &type metadata for BackgroundWorkReason);
    atomic_store(result, (unint64_t *)&qword_2569E8F90);
  }
  return result;
}

unint64_t sub_23B1C3B98()
{
  unint64_t result;

  result = qword_2569E8F98;
  if (!qword_2569E8F98)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E838C, &type metadata for BackgroundWorkReason);
    atomic_store(result, (unint64_t *)&qword_2569E8F98);
  }
  return result;
}

uint64_t sub_23B1C3BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23B1C3BF0, (uint64_t (*)(void))sub_23B1C3C34);
}

unint64_t sub_23B1C3BF0()
{
  unint64_t result;

  result = qword_2569E8FC0;
  if (!qword_2569E8FC0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E84BC, &type metadata for BackgroundWorkReason);
    atomic_store(result, (unint64_t *)&qword_2569E8FC0);
  }
  return result;
}

unint64_t sub_23B1C3C34()
{
  unint64_t result;

  result = qword_2569E8FC8;
  if (!qword_2569E8FC8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E8454, &type metadata for BackgroundWorkReason);
    atomic_store(result, (unint64_t *)&qword_2569E8FC8);
  }
  return result;
}

uint64_t sub_23B1C3C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23B1C3C8C, (uint64_t (*)(void))sub_23B1C3CD0);
}

unint64_t sub_23B1C3C8C()
{
  unint64_t result;

  result = qword_2569E8FD0;
  if (!qword_2569E8FD0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E851C, &type metadata for BackgroundWorkReason);
    atomic_store(result, (unint64_t *)&qword_2569E8FD0);
  }
  return result;
}

unint64_t sub_23B1C3CD0()
{
  unint64_t result;

  result = qword_2569E8FD8;
  if (!qword_2569E8FD8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E8544, &type metadata for BackgroundWorkReason);
    atomic_store(result, (unint64_t *)&qword_2569E8FD8);
  }
  return result;
}

void fp_task_tracker_is_cancelled_cold_1()
{
  __assert_rtn("fp_task_tracker_is_cancelled", "fp_task_tracker.m", 99, "task_tracker");
}

void fp_task_tracker_cancel_cold_1()
{
  __assert_rtn("fp_task_tracker_cancel", "fp_task_tracker.m", 105, "task_tracker");
}

void fp_task_tracker_sync_cold_1()
{
  __assert_rtn("fp_task_tracker_sync", "fp_task_tracker.m", 124, "task_tracker");
}

void fpfs_fsevent_stream_open_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0_1(&dword_23AA66000, v0, v1, "[DEBUG] Creating new FSEvent stream %s", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_0();
}

void _internalFSEventStreamCallback_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_3(&dword_23AA66000, v0, v1, "[ERROR] Unable to defer FSEvent XPC activity on stream %s", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_0();
}

void _internalFSEventStreamCallback_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0_1(&dword_23AA66000, v0, v1, "[DEBUG] Defer processing of FSEvents on stream %s per XPC activity", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_0();
}

void fpfs_fsevent_stream_suspend_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0_1(&dword_23AA66000, v0, v1, "[DEBUG] Suspending FSEvent stream %s", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_0();
}

void fpfs_fsevent_stream_resume_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0_1(&dword_23AA66000, v0, v1, "[DEBUG] Resuming FSEvent stream %s <XPC activity already running>", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_0();
}

void __fpfs_fsevent_stream_resume_block_invoke_cold_1(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_1(&dword_23AA66000, a2, a3, "[DEBUG] Resuming FSEvent stream %s <XPC activity running>", a5, a6, a7, a8, 2u);
  OUTLINED_FUNCTION_1_0();
}

void fpfs_fsevent_stream_close_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0_1(&dword_23AA66000, v0, v1, "[DEBUG] Stop processing of FSEvents on stream %s", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_0();
}

void fpfs_fsevent_stream_close_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_3(&dword_23AA66000, v0, v1, "[ERROR] Unable to mark done FSEvent XPC activity on stream %s", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1_0();
}

void __fpfs_wharf_load_by_id_block_invoke_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  __error();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_0_2(&dword_23AA66000, v0, v1, "Cloning file failed [%llu]: %{errno}d", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

void fpfs_wharf_unload_cold_1()
{
  __assert_rtn("fpfs_wharf_unload", "fpfs_wharf.c", 963, "attrs->item_handle.doc_id == 0");
}

void __fpfs_wharf_fload_block_invoke_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_1();
}

void __fpfs_wharf_fload_block_invoke_2_cold_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_0_2(&dword_23AA66000, v0, v1, "BSD flags cleanup on item cloned from ino:%llu failed: %{errno}d", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

void __fpfs_wharf_fload_block_invoke_2_cold_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_0_2(&dword_23AA66000, v0, v1, "stat of item cloned from ino:%llu failed: %{errno}d", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

void __fpfs_wharf_fload_block_invoke_2_cold_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_0_2(&dword_23AA66000, v0, v1, "ACL cleanup on item cloned from ino:%llu failed: %{errno}d", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

void __fpfs_wharf_fload_block_invoke_2_cold_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_0_2(&dword_23AA66000, v0, v1, "xattr cleanup on item cloned from ino:%llu failed: %{errno}d", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

void __fpfs_wharf_fload_block_invoke_2_cold_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_0_2(&dword_23AA66000, v0, v1, "Permission cleanup on item cloned from ino:%llu failed: %{errno}d", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_1();
}

void fpfs_wharf_fcopyfileat_status_cb_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_5(&dword_23AA66000, a1, a3, "skipping unsupported object in package", a5, a6, a7, a8, 0);
  OUTLINED_FUNCTION_6();
}

void fpfs_wharf_fcopyfileat_status_cb_cold_2(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_5(&dword_23AA66000, a1, a3, "skipping compressed / unreadable object in package", a5, a6, a7, a8, 0);
  OUTLINED_FUNCTION_6();
}

void fpfs_wharf_fcopyfileat_status_cb_cold_3(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_23AA66000, log, OS_LOG_TYPE_ERROR, "couldn't clone package", v1, 2u);
  OUTLINED_FUNCTION_6();
}

uint64_t sub_23B1C5354()
{
  return MEMORY[0x24BDCADA0]();
}

uint64_t sub_23B1C5360()
{
  return MEMORY[0x24BDCADC0]();
}

uint64_t sub_23B1C536C()
{
  return MEMORY[0x24BDCADC8]();
}

uint64_t sub_23B1C5378()
{
  return MEMORY[0x24BDCADD8]();
}

uint64_t sub_23B1C5384()
{
  return MEMORY[0x24BDCADE0]();
}

uint64_t sub_23B1C5390()
{
  return MEMORY[0x24BDCADE8]();
}

uint64_t sub_23B1C539C()
{
  return MEMORY[0x24BDCADF0]();
}

uint64_t sub_23B1C53A8()
{
  return MEMORY[0x24BDCADF8]();
}

uint64_t sub_23B1C53B4()
{
  return MEMORY[0x24BDCAE00]();
}

uint64_t sub_23B1C53C0()
{
  return MEMORY[0x24BDCAE18]();
}

uint64_t sub_23B1C53CC()
{
  return MEMORY[0x24BDCAE20]();
}

uint64_t sub_23B1C53D8()
{
  return MEMORY[0x24BDCAE28]();
}

uint64_t sub_23B1C53E4()
{
  return MEMORY[0x24BDCAE30]();
}

uint64_t sub_23B1C53F0()
{
  return MEMORY[0x24BDCAE38]();
}

uint64_t sub_23B1C53FC()
{
  return MEMORY[0x24BDCAE40]();
}

uint64_t sub_23B1C5408()
{
  return MEMORY[0x24BDCAE48]();
}

uint64_t sub_23B1C5414()
{
  return MEMORY[0x24BDCAE50]();
}

uint64_t sub_23B1C5420()
{
  return MEMORY[0x24BDCAE60]();
}

uint64_t sub_23B1C542C()
{
  return MEMORY[0x24BDCAE70]();
}

uint64_t sub_23B1C5438()
{
  return MEMORY[0x24BDCAE80]();
}

uint64_t sub_23B1C5444()
{
  return MEMORY[0x24BDCAE90]();
}

uint64_t sub_23B1C5450()
{
  return MEMORY[0x24BDCAEA0]();
}

uint64_t sub_23B1C545C()
{
  return MEMORY[0x24BDCAEB0]();
}

uint64_t sub_23B1C5468()
{
  return MEMORY[0x24BDCAED8]();
}

uint64_t sub_23B1C5474()
{
  return MEMORY[0x24BDCAEE8]();
}

uint64_t sub_23B1C5480()
{
  return MEMORY[0x24BDCAF28]();
}

uint64_t sub_23B1C548C()
{
  return MEMORY[0x24BDCAF38]();
}

uint64_t sub_23B1C5498()
{
  return MEMORY[0x24BDCAF40]();
}

uint64_t sub_23B1C54A4()
{
  return MEMORY[0x24BDCAF48]();
}

uint64_t sub_23B1C54B0()
{
  return MEMORY[0x24BDCAF50]();
}

uint64_t sub_23B1C54BC()
{
  return MEMORY[0x24BDCAF58]();
}

uint64_t sub_23B1C54C8()
{
  return MEMORY[0x24BDCAF60]();
}

uint64_t sub_23B1C54D4()
{
  return MEMORY[0x24BDCAF68]();
}

uint64_t sub_23B1C54E0()
{
  return MEMORY[0x24BDCAF70]();
}

uint64_t sub_23B1C54EC()
{
  return MEMORY[0x24BDCAF78]();
}

uint64_t sub_23B1C54F8()
{
  return MEMORY[0x24BDCAF80]();
}

uint64_t sub_23B1C5504()
{
  return MEMORY[0x24BDCAF88]();
}

uint64_t sub_23B1C5510()
{
  return MEMORY[0x24BDCAF90]();
}

uint64_t sub_23B1C551C()
{
  return MEMORY[0x24BDCAF98]();
}

uint64_t sub_23B1C5528()
{
  return MEMORY[0x24BDCAFA0]();
}

uint64_t sub_23B1C5534()
{
  return MEMORY[0x24BDCAFA8]();
}

uint64_t sub_23B1C5540()
{
  return MEMORY[0x24BDCAFB0]();
}

uint64_t sub_23B1C554C()
{
  return MEMORY[0x24BDCAFB8]();
}

uint64_t sub_23B1C5558()
{
  return MEMORY[0x24BDCAFC8]();
}

uint64_t sub_23B1C5564()
{
  return MEMORY[0x24BDCAFD0]();
}

uint64_t sub_23B1C5570()
{
  return MEMORY[0x24BDCAFE0]();
}

uint64_t sub_23B1C557C()
{
  return MEMORY[0x24BDCB108]();
}

uint64_t sub_23B1C5588()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23B1C5594()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23B1C55A0()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23B1C55AC()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23B1C55B8()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23B1C55C4()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23B1C55D0()
{
  return MEMORY[0x24BDCB680]();
}

uint64_t sub_23B1C55DC()
{
  return MEMORY[0x24BDCB728]();
}

uint64_t sub_23B1C55E8()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_23B1C55F4()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_23B1C5600()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_23B1C560C()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_23B1C5618()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_23B1C5624()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_23B1C5630()
{
  return MEMORY[0x24BDCBBF8]();
}

uint64_t sub_23B1C563C()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_23B1C5648()
{
  return MEMORY[0x24BDCBC28]();
}

uint64_t sub_23B1C5654()
{
  return MEMORY[0x24BDCBC38]();
}

uint64_t sub_23B1C5660()
{
  return MEMORY[0x24BDCBD00]();
}

uint64_t sub_23B1C566C()
{
  return MEMORY[0x24BDCBD10]();
}

uint64_t sub_23B1C5678()
{
  return MEMORY[0x24BDCBD68]();
}

uint64_t sub_23B1C5684()
{
  return MEMORY[0x24BDCBD78]();
}

uint64_t sub_23B1C5690()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_23B1C569C()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_23B1C56A8()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_23B1C56B4()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_23B1C56C0()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_23B1C56CC()
{
  return MEMORY[0x24BDCC6F8]();
}

uint64_t sub_23B1C56D8()
{
  return MEMORY[0x24BDCC710]();
}

uint64_t sub_23B1C56E4()
{
  return MEMORY[0x24BDCC720]();
}

uint64_t sub_23B1C56F0()
{
  return MEMORY[0x24BDCC730]();
}

uint64_t sub_23B1C56FC()
{
  return MEMORY[0x24BDCC760]();
}

uint64_t sub_23B1C5708()
{
  return MEMORY[0x24BDCC778]();
}

uint64_t sub_23B1C5714()
{
  return MEMORY[0x24BDCC7A0]();
}

uint64_t sub_23B1C5720()
{
  return MEMORY[0x24BDCC7C0]();
}

uint64_t sub_23B1C572C()
{
  return MEMORY[0x24BDCC7D0]();
}

uint64_t sub_23B1C5738()
{
  return MEMORY[0x24BDCC7E8]();
}

uint64_t sub_23B1C5744()
{
  return MEMORY[0x24BDCC808]();
}

uint64_t sub_23B1C5750()
{
  return MEMORY[0x24BDCC818]();
}

uint64_t sub_23B1C575C()
{
  return MEMORY[0x24BDCC930]();
}

uint64_t sub_23B1C5768()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_23B1C5774()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_23B1C5780()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_23B1C578C()
{
  return MEMORY[0x24BDCCA58]();
}

uint64_t sub_23B1C5798()
{
  return MEMORY[0x24BDCCA60]();
}

uint64_t sub_23B1C57A4()
{
  return MEMORY[0x24BDCCA88]();
}

uint64_t sub_23B1C57B0()
{
  return MEMORY[0x24BDCCA90]();
}

uint64_t sub_23B1C57BC()
{
  return MEMORY[0x24BDCCAB0]();
}

uint64_t sub_23B1C57C8()
{
  return MEMORY[0x24BDCCAB8]();
}

uint64_t sub_23B1C57D4()
{
  return MEMORY[0x24BDCCAC0]();
}

uint64_t sub_23B1C57E0()
{
  return MEMORY[0x24BDCCAD0]();
}

uint64_t sub_23B1C57EC()
{
  return MEMORY[0x24BDCCBB0]();
}

uint64_t sub_23B1C57F8()
{
  return MEMORY[0x24BDCCBD0]();
}

uint64_t sub_23B1C5804()
{
  return MEMORY[0x24BDCCC10]();
}

uint64_t sub_23B1C5810()
{
  return MEMORY[0x24BDCD280]();
}

uint64_t sub_23B1C581C()
{
  return MEMORY[0x24BDCD288]();
}

uint64_t sub_23B1C5828()
{
  return MEMORY[0x24BDCD290]();
}

uint64_t sub_23B1C5834()
{
  return MEMORY[0x24BDCD298]();
}

uint64_t sub_23B1C5840()
{
  return MEMORY[0x24BDCD2A0]();
}

uint64_t sub_23B1C584C()
{
  return MEMORY[0x24BDCD2A8]();
}

uint64_t sub_23B1C5858()
{
  return MEMORY[0x24BDCD2B8]();
}

uint64_t sub_23B1C5864()
{
  return MEMORY[0x24BDCD2C0]();
}

uint64_t sub_23B1C5870()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23B1C587C()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_23B1C5888()
{
  return MEMORY[0x24BDCD438]();
}

uint64_t sub_23B1C5894()
{
  return MEMORY[0x24BDCD508]();
}

uint64_t sub_23B1C58A0()
{
  return MEMORY[0x24BDCD520]();
}

uint64_t sub_23B1C58AC()
{
  return MEMORY[0x24BDCD5A8]();
}

uint64_t sub_23B1C58B8()
{
  return MEMORY[0x24BDCD728]();
}

uint64_t sub_23B1C58C4()
{
  return MEMORY[0x24BDCD748]();
}

uint64_t sub_23B1C58D0()
{
  return MEMORY[0x24BDCD760]();
}

uint64_t sub_23B1C58DC()
{
  return MEMORY[0x24BDCD768]();
}

uint64_t sub_23B1C58E8()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_23B1C58F4()
{
  return MEMORY[0x24BDCD810]();
}

uint64_t sub_23B1C5900()
{
  return MEMORY[0x24BDCD848]();
}

uint64_t sub_23B1C590C()
{
  return MEMORY[0x24BDCD860]();
}

uint64_t sub_23B1C5918()
{
  return MEMORY[0x24BDCD870]();
}

uint64_t sub_23B1C5924()
{
  return MEMORY[0x24BDCD880]();
}

uint64_t sub_23B1C5930()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_23B1C593C()
{
  return MEMORY[0x24BDCD8A0]();
}

uint64_t sub_23B1C5948()
{
  return MEMORY[0x24BDCD8B8]();
}

uint64_t sub_23B1C5954()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_23B1C5960()
{
  return MEMORY[0x24BDCD8E8]();
}

uint64_t sub_23B1C596C()
{
  return MEMORY[0x24BDCD910]();
}

uint64_t sub_23B1C5978()
{
  return MEMORY[0x24BDCD918]();
}

uint64_t sub_23B1C5984()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_23B1C5990()
{
  return MEMORY[0x24BDCD938]();
}

uint64_t sub_23B1C599C()
{
  return MEMORY[0x24BDCD968]();
}

uint64_t sub_23B1C59A8()
{
  return MEMORY[0x24BDCD988]();
}

uint64_t sub_23B1C59B4()
{
  return MEMORY[0x24BDCD9A0]();
}

uint64_t sub_23B1C59C0()
{
  return MEMORY[0x24BDCD9B0]();
}

uint64_t sub_23B1C59CC()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_23B1C59D8()
{
  return MEMORY[0x24BDCD9C8]();
}

uint64_t sub_23B1C59E4()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_23B1C59F0()
{
  return MEMORY[0x24BDCDA70]();
}

uint64_t sub_23B1C59FC()
{
  return MEMORY[0x24BDCDAA0]();
}

uint64_t sub_23B1C5A08()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23B1C5A14()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_23B1C5A20()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_23B1C5A2C()
{
  return MEMORY[0x24BDCDB80]();
}

uint64_t sub_23B1C5A38()
{
  return MEMORY[0x24BDCDBB0]();
}

uint64_t sub_23B1C5A44()
{
  return MEMORY[0x24BDCDBE0]();
}

uint64_t sub_23B1C5A50()
{
  return MEMORY[0x24BDCDC08]();
}

uint64_t sub_23B1C5A5C()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_23B1C5A68()
{
  return MEMORY[0x24BDCDC38]();
}

uint64_t sub_23B1C5A74()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_23B1C5A80()
{
  return MEMORY[0x24BDCDC58]();
}

uint64_t sub_23B1C5A8C()
{
  return MEMORY[0x24BDCDC80]();
}

uint64_t sub_23B1C5A98()
{
  return MEMORY[0x24BDCDC88]();
}

uint64_t sub_23B1C5AA4()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23B1C5AB0()
{
  return MEMORY[0x24BDCDCA8]();
}

uint64_t sub_23B1C5ABC()
{
  return MEMORY[0x24BDCDCC0]();
}

uint64_t sub_23B1C5AC8()
{
  return MEMORY[0x24BDCDCD8]();
}

uint64_t sub_23B1C5AD4()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_23B1C5AE0()
{
  return MEMORY[0x24BDCDCF0]();
}

uint64_t sub_23B1C5AEC()
{
  return MEMORY[0x24BDCDCF8]();
}

uint64_t sub_23B1C5AF8()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_23B1C5B04()
{
  return MEMORY[0x24BDCDD40]();
}

uint64_t sub_23B1C5B10()
{
  return MEMORY[0x24BDCDD58]();
}

uint64_t sub_23B1C5B1C()
{
  return MEMORY[0x24BDCDDA8]();
}

uint64_t sub_23B1C5B28()
{
  return MEMORY[0x24BDCDE90]();
}

uint64_t sub_23B1C5B34()
{
  return MEMORY[0x24BDCE2D0]();
}

uint64_t sub_23B1C5B40()
{
  return MEMORY[0x24BDCE2E8]();
}

uint64_t sub_23B1C5B4C()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_23B1C5B58()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_23B1C5B64()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_23B1C5B70()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_23B1C5B7C()
{
  return MEMORY[0x24BDCE628]();
}

uint64_t sub_23B1C5B88()
{
  return MEMORY[0x24BDCE778]();
}

uint64_t sub_23B1C5B94()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_23B1C5BA0()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_23B1C5BAC()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_23B1C5BB8()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23B1C5BC4()
{
  return MEMORY[0x24BDCE898]();
}

uint64_t sub_23B1C5BD0()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_23B1C5BDC()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23B1C5BE8()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_23B1C5BF4()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23B1C5C00()
{
  return MEMORY[0x24BDCE9B8]();
}

uint64_t sub_23B1C5C0C()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_23B1C5C18()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23B1C5C24()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_23B1C5C30()
{
  return MEMORY[0x24BDCEA10]();
}

uint64_t sub_23B1C5C3C()
{
  return MEMORY[0x24BDCEA18]();
}

uint64_t sub_23B1C5C48()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23B1C5C54()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23B1C5C60()
{
  return MEMORY[0x24BDCECA0]();
}

uint64_t sub_23B1C5C6C()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23B1C5C78()
{
  return MEMORY[0x24BDCF030]();
}

uint64_t sub_23B1C5C84()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_23B1C5C90()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_23B1C5C9C()
{
  return MEMORY[0x24BDCF500]();
}

uint64_t sub_23B1C5CA8()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_23B1C5CB4()
{
  return MEMORY[0x24BDCF610]();
}

uint64_t sub_23B1C5CC0()
{
  return MEMORY[0x24BEE6138]();
}

uint64_t sub_23B1C5CCC()
{
  return MEMORY[0x24BEE6140]();
}

uint64_t sub_23B1C5CD8()
{
  return MEMORY[0x24BEE6190]();
}

uint64_t sub_23B1C5CE4()
{
  return MEMORY[0x24BEE61A8]();
}

uint64_t sub_23B1C5CF0()
{
  return MEMORY[0x24BEE61D8]();
}

uint64_t sub_23B1C5CFC()
{
  return MEMORY[0x24BEE6210]();
}

uint64_t sub_23B1C5D08()
{
  return MEMORY[0x24BEE6238]();
}

uint64_t sub_23B1C5D14()
{
  return MEMORY[0x24BEE6260]();
}

uint64_t sub_23B1C5D20()
{
  return MEMORY[0x24BEE6288]();
}

uint64_t sub_23B1C5D2C()
{
  return MEMORY[0x24BEE62A8]();
}

uint64_t sub_23B1C5D38()
{
  return MEMORY[0x24BEE62D0]();
}

uint64_t sub_23B1C5D44()
{
  return MEMORY[0x24BEE6328]();
}

uint64_t sub_23B1C5D50()
{
  return MEMORY[0x24BEE6360]();
}

uint64_t sub_23B1C5D5C()
{
  return MEMORY[0x24BEE6368]();
}

uint64_t sub_23B1C5D68()
{
  return MEMORY[0x24BEE6388]();
}

uint64_t sub_23B1C5D74()
{
  return MEMORY[0x24BEE6390]();
}

uint64_t sub_23B1C5D80()
{
  return MEMORY[0x24BEE63A0]();
}

uint64_t sub_23B1C5D8C()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_23B1C5D98()
{
  return MEMORY[0x24BEE76F8]();
}

uint64_t sub_23B1C5DA4()
{
  return MEMORY[0x24BEE7700]();
}

uint64_t sub_23B1C5DB0()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_23B1C5DBC()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_23B1C5DC8()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_23B1C5DD4()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_23B1C5DE0()
{
  return MEMORY[0x24BEE77C8]();
}

uint64_t sub_23B1C5DEC()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_23B1C5DF8()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_23B1C5E04()
{
  return MEMORY[0x24BEE7840]();
}

uint64_t sub_23B1C5E10()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_23B1C5E1C()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_23B1C5E28()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_23B1C5E34()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_23B1C5E40()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23B1C5E4C()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23B1C5E58()
{
  return MEMORY[0x24BEE78E8]();
}

uint64_t sub_23B1C5E64()
{
  return MEMORY[0x24BEE7698]();
}

uint64_t sub_23B1C5E70()
{
  return MEMORY[0x24BEE76A0]();
}

uint64_t sub_23B1C5E7C()
{
  return MEMORY[0x24BEE5358]();
}

uint64_t sub_23B1C5E88()
{
  return MEMORY[0x24BEE76B0]();
}

uint64_t sub_23B1C5E94()
{
  return MEMORY[0x24BEE76B8]();
}

uint64_t sub_23B1C5EA0()
{
  return MEMORY[0x24BEE5360]();
}

uint64_t sub_23B1C5EAC()
{
  return MEMORY[0x24BEE5378]();
}

uint64_t sub_23B1C5EB8()
{
  return MEMORY[0x24BEE5380]();
}

uint64_t sub_23B1C5EC4()
{
  return MEMORY[0x24BEE5388]();
}

uint64_t sub_23B1C5ED0()
{
  return MEMORY[0x24BEE5398]();
}

uint64_t sub_23B1C5EDC()
{
  return MEMORY[0x24BEE53A0]();
}

uint64_t sub_23B1C5EE8()
{
  return MEMORY[0x24BEE53A8]();
}

uint64_t sub_23B1C5EF4()
{
  return MEMORY[0x24BEE53C0]();
}

uint64_t sub_23B1C5F00()
{
  return MEMORY[0x24BEE53C8]();
}

uint64_t sub_23B1C5F0C()
{
  return MEMORY[0x24BEE53D0]();
}

uint64_t sub_23B1C5F18()
{
  return MEMORY[0x24BEE53D8]();
}

uint64_t sub_23B1C5F24()
{
  return MEMORY[0x24BDB9B50]();
}

uint64_t sub_23B1C5F30()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t sub_23B1C5F3C()
{
  return MEMORY[0x24BDB9EA0]();
}

uint64_t sub_23B1C5F48()
{
  return MEMORY[0x24BDB9EC0]();
}

uint64_t sub_23B1C5F54()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t sub_23B1C5F60()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t sub_23B1C5F6C()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t sub_23B1C5F78()
{
  return MEMORY[0x24BDB9F68]();
}

uint64_t sub_23B1C5F84()
{
  return MEMORY[0x24BDB9F90]();
}

uint64_t sub_23B1C5F90()
{
  return MEMORY[0x24BDBA0A0]();
}

uint64_t sub_23B1C5F9C()
{
  return MEMORY[0x24BDBA0B0]();
}

uint64_t sub_23B1C5FA8()
{
  return MEMORY[0x24BDBA110]();
}

uint64_t sub_23B1C5FB4()
{
  return MEMORY[0x24BDBA118]();
}

uint64_t sub_23B1C5FC0()
{
  return MEMORY[0x24BDE00C8]();
}

uint64_t sub_23B1C5FCC()
{
  return MEMORY[0x24BDE0408]();
}

uint64_t sub_23B1C5FD8()
{
  return MEMORY[0x24BDE0410]();
}

uint64_t sub_23B1C5FE4()
{
  return MEMORY[0x24BDE0428]();
}

uint64_t sub_23B1C5FF0()
{
  return MEMORY[0x24BDE0438]();
}

uint64_t sub_23B1C5FFC()
{
  return MEMORY[0x24BDE0440]();
}

uint64_t sub_23B1C6008()
{
  return MEMORY[0x24BDE0608]();
}

uint64_t sub_23B1C6014()
{
  return MEMORY[0x24BDE0660]();
}

uint64_t sub_23B1C6020()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_23B1C602C()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_23B1C6038()
{
  return MEMORY[0x24BEE54A0]();
}

uint64_t sub_23B1C6044()
{
  return MEMORY[0x24BEE54A8]();
}

uint64_t sub_23B1C6050()
{
  return MEMORY[0x24BEE54B0]();
}

uint64_t sub_23B1C605C()
{
  return MEMORY[0x24BEE54C0]();
}

uint64_t sub_23B1C6068()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23B1C6074()
{
  return MEMORY[0x24BEE54E0]();
}

uint64_t sub_23B1C6080()
{
  return MEMORY[0x24BEE54E8]();
}

uint64_t sub_23B1C608C()
{
  return MEMORY[0x24BEE54F0]();
}

uint64_t sub_23B1C6098()
{
  return MEMORY[0x24BEE54F8]();
}

uint64_t sub_23B1C60A4()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23B1C60B0()
{
  return MEMORY[0x24BEE5550]();
}

uint64_t sub_23B1C60BC()
{
  return MEMORY[0x24BEE5560]();
}

uint64_t sub_23B1C60C8()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_23B1C60D4()
{
  return MEMORY[0x24BEE5578]();
}

uint64_t sub_23B1C60E0()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_23B1C60EC()
{
  return MEMORY[0x24BEE5618]();
}

uint64_t sub_23B1C60F8()
{
  return MEMORY[0x24BEE5620]();
}

uint64_t sub_23B1C6104()
{
  return MEMORY[0x24BEE5648]();
}

uint64_t sub_23B1C6110()
{
  return MEMORY[0x24BDC62A8]();
}

uint64_t sub_23B1C611C()
{
  return MEMORY[0x24BDC62B0]();
}

uint64_t sub_23B1C6128()
{
  return MEMORY[0x24BDC62C8]();
}

uint64_t sub_23B1C6134()
{
  return MEMORY[0x24BDC62F0]();
}

uint64_t sub_23B1C6140()
{
  return MEMORY[0x24BDC63A0]();
}

uint64_t sub_23B1C614C()
{
  return MEMORY[0x24BDC63B0]();
}

uint64_t sub_23B1C6158()
{
  return MEMORY[0x24BDC63C0]();
}

uint64_t sub_23B1C6164()
{
  return MEMORY[0x24BDC63E0]();
}

uint64_t sub_23B1C6170()
{
  return MEMORY[0x24BDC64F0]();
}

uint64_t sub_23B1C617C()
{
  return MEMORY[0x24BDC6510]();
}

uint64_t sub_23B1C6188()
{
  return MEMORY[0x24BDC66E0]();
}

uint64_t sub_23B1C6194()
{
  return MEMORY[0x24BDC66E8]();
}

uint64_t sub_23B1C61A0()
{
  return MEMORY[0x24BDC6AD8]();
}

uint64_t sub_23B1C61AC()
{
  return MEMORY[0x24BDC6AF0]();
}

uint64_t sub_23B1C61B8()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_23B1C61C4()
{
  return MEMORY[0x24BEE01A8]();
}

uint64_t sub_23B1C61D0()
{
  return MEMORY[0x24BEE01B8]();
}

uint64_t sub_23B1C61DC()
{
  return MEMORY[0x24BEE01C0]();
}

uint64_t sub_23B1C61E8()
{
  return MEMORY[0x24BDCF7F0]();
}

uint64_t sub_23B1C61F4()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_23B1C6200()
{
  return MEMORY[0x24BDCF828]();
}

uint64_t sub_23B1C620C()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_23B1C6218()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_23B1C6224()
{
  return MEMORY[0x24BEE0278]();
}

uint64_t sub_23B1C6230()
{
  return MEMORY[0x24BEE0290]();
}

uint64_t sub_23B1C623C()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_23B1C6248()
{
  return MEMORY[0x24BEE0300]();
}

uint64_t sub_23B1C6254()
{
  return MEMORY[0x24BEE0370]();
}

uint64_t sub_23B1C6260()
{
  return MEMORY[0x24BEE03B0]();
}

uint64_t sub_23B1C626C()
{
  return MEMORY[0x24BEE03D0]();
}

uint64_t sub_23B1C6278()
{
  return MEMORY[0x24BEE03E8]();
}

uint64_t sub_23B1C6284()
{
  return MEMORY[0x24BEE0420]();
}

uint64_t sub_23B1C6290()
{
  return MEMORY[0x24BEE0430]();
}

uint64_t sub_23B1C629C()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_23B1C62A8()
{
  return MEMORY[0x24BEE04A0]();
}

uint64_t sub_23B1C62B4()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_23B1C62C0()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_23B1C62CC()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23B1C62D8()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23B1C62E4()
{
  return MEMORY[0x24BEE0620]();
}

uint64_t sub_23B1C62F0()
{
  return MEMORY[0x24BEE06E8]();
}

uint64_t sub_23B1C62FC()
{
  return MEMORY[0x24BEE0770]();
}

uint64_t sub_23B1C6308()
{
  return MEMORY[0x24BEE0788]();
}

uint64_t sub_23B1C6314()
{
  return MEMORY[0x24BEE0790]();
}

uint64_t sub_23B1C6320()
{
  return MEMORY[0x24BEE07A0]();
}

uint64_t sub_23B1C632C()
{
  return MEMORY[0x24BEE07B0]();
}

uint64_t sub_23B1C6338()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_23B1C6344()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_23B1C6350()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_23B1C635C()
{
  return MEMORY[0x24BEE07F8]();
}

uint64_t sub_23B1C6368()
{
  return MEMORY[0x24BEE0800]();
}

uint64_t sub_23B1C6374()
{
  return MEMORY[0x24BEE0808]();
}

uint64_t sub_23B1C6380()
{
  return MEMORY[0x24BEE0850]();
}

uint64_t sub_23B1C638C()
{
  return MEMORY[0x24BEE0868]();
}

uint64_t sub_23B1C6398()
{
  return MEMORY[0x24BEE0870]();
}

uint64_t sub_23B1C63A4()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23B1C63B0()
{
  return MEMORY[0x24BDCF880]();
}

uint64_t sub_23B1C63BC()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23B1C63C8()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_23B1C63D4()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_23B1C63E0()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23B1C63EC()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_23B1C63F8()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_23B1C6404()
{
  return MEMORY[0x24BDCFA80]();
}

uint64_t sub_23B1C6410()
{
  return MEMORY[0x24BDCFA88]();
}

uint64_t sub_23B1C641C()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_23B1C6428()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_23B1C6434()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23B1C6440()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_23B1C644C()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t sub_23B1C6458()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_23B1C6464()
{
  return MEMORY[0x24BEE0A38]();
}

uint64_t sub_23B1C6470()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23B1C647C()
{
  return MEMORY[0x24BEE0A58]();
}

uint64_t sub_23B1C6488()
{
  return MEMORY[0x24BEE0AD8]();
}

uint64_t sub_23B1C6494()
{
  return MEMORY[0x24BEE0B18]();
}

uint64_t sub_23B1C64A0()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23B1C64AC()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_23B1C64B8()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_23B1C64C4()
{
  return MEMORY[0x24BEE0B78]();
}

uint64_t sub_23B1C64D0()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_23B1C64DC()
{
  return MEMORY[0x24BEE0B88]();
}

uint64_t sub_23B1C64E8()
{
  return MEMORY[0x24BEE0BB0]();
}

uint64_t sub_23B1C64F4()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23B1C6500()
{
  return MEMORY[0x24BEE0BC8]();
}

uint64_t sub_23B1C650C()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_23B1C6518()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_23B1C6524()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23B1C6530()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_23B1C653C()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_23B1C6548()
{
  return MEMORY[0x24BEE0C38]();
}

uint64_t sub_23B1C6554()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_23B1C6560()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_23B1C656C()
{
  return MEMORY[0x24BEE0CC8]();
}

uint64_t sub_23B1C6578()
{
  return MEMORY[0x24BEE0CD0]();
}

uint64_t sub_23B1C6584()
{
  return MEMORY[0x24BEE0CD8]();
}

uint64_t sub_23B1C6590()
{
  return MEMORY[0x24BEE0CE8]();
}

uint64_t sub_23B1C659C()
{
  return MEMORY[0x24BEE0D58]();
}

uint64_t sub_23B1C65A8()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_23B1C65B4()
{
  return MEMORY[0x24BEE0DD0]();
}

uint64_t sub_23B1C65C0()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23B1C65CC()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_23B1C65D8()
{
  return MEMORY[0x24BEE0DF8]();
}

uint64_t sub_23B1C65E4()
{
  return MEMORY[0x24BEE0E40]();
}

uint64_t sub_23B1C65F0()
{
  return MEMORY[0x24BEE0E50]();
}

uint64_t sub_23B1C65FC()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_23B1C6608()
{
  return MEMORY[0x24BEE0E78]();
}

uint64_t sub_23B1C6614()
{
  return MEMORY[0x24BEE0E90]();
}

uint64_t sub_23B1C6620()
{
  return MEMORY[0x24BEE0EE0]();
}

uint64_t sub_23B1C662C()
{
  return MEMORY[0x24BEE0EE8]();
}

uint64_t sub_23B1C6638()
{
  return MEMORY[0x24BEE0F30]();
}

uint64_t sub_23B1C6644()
{
  return MEMORY[0x24BEE0F40]();
}

uint64_t sub_23B1C6650()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_23B1C665C()
{
  return MEMORY[0x24BEE0FE8]();
}

uint64_t sub_23B1C6668()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_23B1C6674()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_23B1C6680()
{
  return MEMORY[0x24BEE1038]();
}

uint64_t sub_23B1C668C()
{
  return MEMORY[0x24BEE1060]();
}

uint64_t sub_23B1C6698()
{
  return MEMORY[0x24BEE1068]();
}

uint64_t sub_23B1C66A4()
{
  return MEMORY[0x24BEE1070]();
}

uint64_t sub_23B1C66B0()
{
  return MEMORY[0x24BEE1078]();
}

uint64_t sub_23B1C66BC()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_23B1C66C8()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_23B1C66D4()
{
  return MEMORY[0x24BEE10B8]();
}

uint64_t sub_23B1C66E0()
{
  return MEMORY[0x24BEE10E0]();
}

uint64_t sub_23B1C66EC()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23B1C66F8()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23B1C6704()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23B1C6710()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23B1C671C()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23B1C6728()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_23B1C6734()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_23B1C6740()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23B1C674C()
{
  return MEMORY[0x24BEE1170]();
}

uint64_t sub_23B1C6758()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_23B1C6764()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23B1C6770()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_23B1C677C()
{
  return MEMORY[0x24BEE11A8]();
}

uint64_t sub_23B1C6788()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23B1C6794()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_23B1C67A0()
{
  return MEMORY[0x24BEE11F0]();
}

uint64_t sub_23B1C67AC()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_23B1C67B8()
{
  return MEMORY[0x24BEE1208]();
}

uint64_t sub_23B1C67C4()
{
  return MEMORY[0x24BEE1220]();
}

uint64_t sub_23B1C67D0()
{
  return MEMORY[0x24BEE1228]();
}

uint64_t sub_23B1C67DC()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_23B1C67E8()
{
  return MEMORY[0x24BEE1268]();
}

uint64_t sub_23B1C67F4()
{
  return MEMORY[0x24BEE1278]();
}

uint64_t sub_23B1C6800()
{
  return MEMORY[0x24BEE1288]();
}

uint64_t sub_23B1C680C()
{
  return MEMORY[0x24BEE1290]();
}

uint64_t sub_23B1C6818()
{
  return MEMORY[0x24BEE1308]();
}

uint64_t sub_23B1C6824()
{
  return MEMORY[0x24BDCFC08]();
}

uint64_t sub_23B1C6830()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23B1C683C()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_23B1C6848()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_23B1C6854()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23B1C6860()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23B1C686C()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_23B1C6878()
{
  return MEMORY[0x24BEE1380]();
}

uint64_t sub_23B1C6884()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_23B1C6890()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_23B1C689C()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_23B1C68A8()
{
  return MEMORY[0x24BEE1598]();
}

uint64_t sub_23B1C68B4()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23B1C68C0()
{
  return MEMORY[0x24BEE1628]();
}

uint64_t sub_23B1C68CC()
{
  return MEMORY[0x24BEE1648]();
}

uint64_t sub_23B1C68D8()
{
  return MEMORY[0x24BEE1658]();
}

uint64_t sub_23B1C68E4()
{
  return MEMORY[0x24BEE1660]();
}

uint64_t sub_23B1C68F0()
{
  return MEMORY[0x24BEE1668]();
}

uint64_t sub_23B1C68FC()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_23B1C6908()
{
  return MEMORY[0x24BEE1690]();
}

uint64_t sub_23B1C6914()
{
  return MEMORY[0x24BEE16C0]();
}

uint64_t sub_23B1C6920()
{
  return MEMORY[0x24BEE16D8]();
}

uint64_t sub_23B1C692C()
{
  return MEMORY[0x24BEE16F8]();
}

uint64_t sub_23B1C6938()
{
  return MEMORY[0x24BDCFD28]();
}

uint64_t sub_23B1C6944()
{
  return MEMORY[0x24BEE1740]();
}

uint64_t sub_23B1C6950()
{
  return MEMORY[0x24BEE1748]();
}

uint64_t sub_23B1C695C()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_23B1C6968()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_23B1C6974()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_23B1C6980()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_23B1C698C()
{
  return MEMORY[0x24BEE1950]();
}

uint64_t sub_23B1C6998()
{
  return MEMORY[0x24BEE1978]();
}

uint64_t sub_23B1C69A4()
{
  return MEMORY[0x24BEE1980]();
}

uint64_t sub_23B1C69B0()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t sub_23B1C69BC()
{
  return MEMORY[0x24BEE19F8]();
}

uint64_t sub_23B1C69C8()
{
  return MEMORY[0x24BEE1A00]();
}

uint64_t sub_23B1C69D4()
{
  return MEMORY[0x24BEE1A18]();
}

uint64_t sub_23B1C69E0()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_23B1C69EC()
{
  return MEMORY[0x24BEE1AB8]();
}

uint64_t sub_23B1C69F8()
{
  return MEMORY[0x24BEE1B20]();
}

uint64_t sub_23B1C6A04()
{
  return MEMORY[0x24BEE1B28]();
}

uint64_t sub_23B1C6A10()
{
  return MEMORY[0x24BEE1B68]();
}

uint64_t sub_23B1C6A1C()
{
  return MEMORY[0x24BDCFD98]();
}

uint64_t sub_23B1C6A28()
{
  return MEMORY[0x24BDCFDA0]();
}

uint64_t sub_23B1C6A34()
{
  return MEMORY[0x24BDCFDA8]();
}

uint64_t sub_23B1C6A40()
{
  return MEMORY[0x24BDCFDB0]();
}

uint64_t sub_23B1C6A4C()
{
  return MEMORY[0x24BDCFDD8]();
}

uint64_t sub_23B1C6A58()
{
  return MEMORY[0x24BDCFE18]();
}

uint64_t sub_23B1C6A64()
{
  return MEMORY[0x24BDCFE60]();
}

uint64_t sub_23B1C6A70()
{
  return MEMORY[0x24BDCFE70]();
}

uint64_t sub_23B1C6A7C()
{
  return MEMORY[0x24BDCFF40]();
}

uint64_t sub_23B1C6A88()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23B1C6A94()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23B1C6AA0()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23B1C6AAC()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23B1C6AB8()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23B1C6AC4()
{
  return MEMORY[0x24BDCFFB0]();
}

uint64_t sub_23B1C6AD0()
{
  return MEMORY[0x24BEE5658]();
}

uint64_t sub_23B1C6ADC()
{
  return MEMORY[0x24BEE5660]();
}

uint64_t sub_23B1C6AE8()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_23B1C6AF4()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_23B1C6B00()
{
  return MEMORY[0x24BEE56F0]();
}

uint64_t sub_23B1C6B0C()
{
  return MEMORY[0x24BEE5700]();
}

uint64_t sub_23B1C6B18()
{
  return MEMORY[0x24BEE5710]();
}

uint64_t sub_23B1C6B24()
{
  return MEMORY[0x24BEE5720]();
}

uint64_t sub_23B1C6B30()
{
  return MEMORY[0x24BEE5728]();
}

uint64_t sub_23B1C6B3C()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_23B1C6B48()
{
  return MEMORY[0x24BEE5780]();
}

uint64_t sub_23B1C6B54()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_23B1C6B60()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_23B1C6B6C()
{
  return MEMORY[0x24BEE57A8]();
}

uint64_t sub_23B1C6B78()
{
  return MEMORY[0x24BEE57C0]();
}

uint64_t sub_23B1C6B84()
{
  return MEMORY[0x24BEE5828]();
}

uint64_t sub_23B1C6B90()
{
  return MEMORY[0x24BEE5890]();
}

uint64_t sub_23B1C6B9C()
{
  return MEMORY[0x24BEE58B8]();
}

uint64_t sub_23B1C6BA8()
{
  return MEMORY[0x24BEE58D0]();
}

uint64_t sub_23B1C6BB4()
{
  return MEMORY[0x24BEE58D8]();
}

uint64_t sub_23B1C6BC0()
{
  return MEMORY[0x24BEE58E0]();
}

uint64_t sub_23B1C6BCC()
{
  return MEMORY[0x24BEE58E8]();
}

uint64_t sub_23B1C6BD8()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_23B1C6BE4()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_23B1C6BF0()
{
  return MEMORY[0x24BEE7958]();
}

uint64_t sub_23B1C6BFC()
{
  return MEMORY[0x24BEE5920]();
}

uint64_t sub_23B1C6C08()
{
  return MEMORY[0x24BEE5928]();
}

uint64_t sub_23B1C6C14()
{
  return MEMORY[0x24BEE5958]();
}

uint64_t sub_23B1C6C20()
{
  return MEMORY[0x24BEE5960]();
}

uint64_t sub_23B1C6C2C()
{
  return MEMORY[0x24BEE5970]();
}

uint64_t sub_23B1C6C38()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_23B1C6C44()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_23B1C6C50()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_23B1C6C5C()
{
  return MEMORY[0x24BEE5BC8]();
}

uint64_t sub_23B1C6C68()
{
  return MEMORY[0x24BEE5BD0]();
}

uint64_t sub_23B1C6C74()
{
  return MEMORY[0x24BDD0248]();
}

uint64_t sub_23B1C6C80()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_23B1C6C8C()
{
  return MEMORY[0x24BEE79A0]();
}

uint64_t sub_23B1C6C98()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23B1C6CA4()
{
  return MEMORY[0x24BEE1C80]();
}

uint64_t sub_23B1C6CB0()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_23B1C6CBC()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23B1C6CC8()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23B1C6CD4()
{
  return MEMORY[0x24BDD04C8]();
}

uint64_t sub_23B1C6CE0()
{
  return MEMORY[0x24BDD04F8]();
}

uint64_t sub_23B1C6CEC()
{
  return MEMORY[0x24BDD0518]();
}

uint64_t sub_23B1C6CF8()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_23B1C6D04()
{
  return MEMORY[0x24BDD0580]();
}

uint64_t sub_23B1C6D10()
{
  return MEMORY[0x24BDD0608]();
}

uint64_t sub_23B1C6D1C()
{
  return MEMORY[0x24BDD0670]();
}

uint64_t sub_23B1C6D28()
{
  return MEMORY[0x24BEE1FD0]();
}

uint64_t sub_23B1C6D34()
{
  return MEMORY[0x24BEE2008]();
}

uint64_t sub_23B1C6D40()
{
  return MEMORY[0x24BEE2028]();
}

uint64_t sub_23B1C6D4C()
{
  return MEMORY[0x24BEE2068]();
}

uint64_t sub_23B1C6D58()
{
  return MEMORY[0x24BEE2070]();
}

uint64_t sub_23B1C6D64()
{
  return MEMORY[0x24BEE2078]();
}

uint64_t sub_23B1C6D70()
{
  return MEMORY[0x24BEE2090]();
}

uint64_t sub_23B1C6D7C()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_23B1C6D88()
{
  return MEMORY[0x24BEE2110]();
}

uint64_t sub_23B1C6D94()
{
  return MEMORY[0x24BEE2130]();
}

uint64_t sub_23B1C6DA0()
{
  return MEMORY[0x24BEE2140]();
}

uint64_t sub_23B1C6DAC()
{
  return MEMORY[0x24BEE2148]();
}

uint64_t sub_23B1C6DB8()
{
  return MEMORY[0x24BEE2150]();
}

uint64_t sub_23B1C6DC4()
{
  return MEMORY[0x24BEE2240]();
}

uint64_t sub_23B1C6DD0()
{
  return MEMORY[0x24BEE2250]();
}

uint64_t sub_23B1C6DDC()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_23B1C6DE8()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23B1C6DF4()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23B1C6E00()
{
  return MEMORY[0x24BEE22D8]();
}

uint64_t sub_23B1C6E0C()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_23B1C6E18()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_23B1C6E24()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_23B1C6E30()
{
  return MEMORY[0x24BEE2340]();
}

uint64_t sub_23B1C6E3C()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_23B1C6E48()
{
  return MEMORY[0x24BEE2360]();
}

uint64_t sub_23B1C6E54()
{
  return MEMORY[0x24BDD0698]();
}

uint64_t sub_23B1C6E60()
{
  return MEMORY[0x24BEE2398]();
}

uint64_t sub_23B1C6E6C()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_23B1C6E78()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_23B1C6E84()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_23B1C6E90()
{
  return MEMORY[0x24BEE23F0]();
}

uint64_t sub_23B1C6E9C()
{
  return MEMORY[0x24BEE2428]();
}

uint64_t sub_23B1C6EA8()
{
  return MEMORY[0x24BEE2438]();
}

uint64_t sub_23B1C6EB4()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23B1C6EC0()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23B1C6ECC()
{
  return MEMORY[0x24BEE24C8]();
}

uint64_t sub_23B1C6ED8()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23B1C6EE4()
{
  return MEMORY[0x24BEE24D8]();
}

uint64_t sub_23B1C6EF0()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_23B1C6EFC()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23B1C6F08()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23B1C6F14()
{
  return MEMORY[0x24BEE2548]();
}

uint64_t sub_23B1C6F20()
{
  return MEMORY[0x24BEE2588]();
}

uint64_t sub_23B1C6F2C()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_23B1C6F38()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_23B1C6F44()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23B1C6F50()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_23B1C6F5C()
{
  return MEMORY[0x24BEE26C0]();
}

uint64_t sub_23B1C6F68()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23B1C6F74()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23B1C6F80()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23B1C6F8C()
{
  return MEMORY[0x24BEE28C0]();
}

uint64_t sub_23B1C6F98()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23B1C6FA4()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23B1C6FB0()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_23B1C6FBC()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_23B1C6FC8()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23B1C6FD4()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23B1C6FE0()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_23B1C6FEC()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_23B1C6FF8()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_23B1C7004()
{
  return MEMORY[0x24BEE2AB8]();
}

uint64_t sub_23B1C7010()
{
  return MEMORY[0x24BEE2B20]();
}

uint64_t sub_23B1C701C()
{
  return MEMORY[0x24BEE2B80]();
}

uint64_t sub_23B1C7028()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23B1C7034()
{
  return MEMORY[0x24BEE2E60]();
}

uint64_t sub_23B1C7040()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23B1C704C()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23B1C7058()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_23B1C7064()
{
  return MEMORY[0x24BEE2FC8]();
}

uint64_t sub_23B1C7070()
{
  return MEMORY[0x24BEE2FD8]();
}

uint64_t sub_23B1C707C()
{
  return MEMORY[0x24BEE3038]();
}

uint64_t sub_23B1C7088()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23B1C7094()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23B1C70A0()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23B1C70AC()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23B1C70B8()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23B1C70C4()
{
  return MEMORY[0x24BEE30D0]();
}

uint64_t sub_23B1C70D0()
{
  return MEMORY[0x24BEE3158]();
}

uint64_t sub_23B1C70DC()
{
  return MEMORY[0x24BEE3160]();
}

uint64_t sub_23B1C70E8()
{
  return MEMORY[0x24BEE3168]();
}

uint64_t sub_23B1C70F4()
{
  return MEMORY[0x24BEE3178]();
}

uint64_t sub_23B1C7100()
{
  return MEMORY[0x24BEE3188]();
}

uint64_t sub_23B1C710C()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_23B1C7118()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_23B1C7124()
{
  return MEMORY[0x24BEE32D0]();
}

uint64_t sub_23B1C7130()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_23B1C713C()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_23B1C7148()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_23B1C7154()
{
  return MEMORY[0x24BEE3300]();
}

uint64_t sub_23B1C7160()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23B1C716C()
{
  return MEMORY[0x24BEE3320]();
}

uint64_t sub_23B1C7178()
{
  return MEMORY[0x24BEE3328]();
}

uint64_t sub_23B1C7184()
{
  return MEMORY[0x24BEE3340]();
}

uint64_t sub_23B1C7190()
{
  return MEMORY[0x24BEE3348]();
}

uint64_t sub_23B1C719C()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23B1C71A8()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_23B1C71B4()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_23B1C71C0()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23B1C71CC()
{
  return MEMORY[0x24BEE3398]();
}

uint64_t sub_23B1C71D8()
{
  return MEMORY[0x24BEE33A0]();
}

uint64_t sub_23B1C71E4()
{
  return MEMORY[0x24BEE33B0]();
}

uint64_t sub_23B1C71F0()
{
  return MEMORY[0x24BEE33B8]();
}

uint64_t sub_23B1C71FC()
{
  return MEMORY[0x24BEE33C0]();
}

uint64_t sub_23B1C7208()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_23B1C7214()
{
  return MEMORY[0x24BEE3420]();
}

uint64_t sub_23B1C7220()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_23B1C722C()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_23B1C7238()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23B1C7244()
{
  return MEMORY[0x24BEE3468]();
}

uint64_t sub_23B1C7250()
{
  return MEMORY[0x24BEE3470]();
}

uint64_t sub_23B1C725C()
{
  return MEMORY[0x24BEE3488]();
}

uint64_t sub_23B1C7268()
{
  return MEMORY[0x24BEE3490]();
}

uint64_t sub_23B1C7274()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23B1C7280()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_23B1C728C()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_23B1C7298()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_23B1C72A4()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23B1C72B0()
{
  return MEMORY[0x24BEE34E8]();
}

uint64_t sub_23B1C72BC()
{
  return MEMORY[0x24BEE34F0]();
}

uint64_t sub_23B1C72C8()
{
  return MEMORY[0x24BEE3500]();
}

uint64_t sub_23B1C72D4()
{
  return MEMORY[0x24BEE3508]();
}

uint64_t sub_23B1C72E0()
{
  return MEMORY[0x24BEE3510]();
}

uint64_t sub_23B1C72EC()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_23B1C72F8()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23B1C7304()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23B1C7310()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_23B1C731C()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_23B1C7328()
{
  return MEMORY[0x24BEE38F0]();
}

uint64_t sub_23B1C7334()
{
  return MEMORY[0x24BEE3930]();
}

uint64_t sub_23B1C7340()
{
  return MEMORY[0x24BEE3938]();
}

uint64_t sub_23B1C734C()
{
  return MEMORY[0x24BEE3948]();
}

uint64_t sub_23B1C7358()
{
  return MEMORY[0x24BEE39B0]();
}

uint64_t sub_23B1C7364()
{
  return MEMORY[0x24BEE39E0]();
}

uint64_t sub_23B1C7370()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_23B1C737C()
{
  return MEMORY[0x24BEE3A28]();
}

uint64_t sub_23B1C7388()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23B1C7394()
{
  return MEMORY[0x24BEE3B10]();
}

uint64_t sub_23B1C73A0()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_23B1C73AC()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_23B1C73B8()
{
  return MEMORY[0x24BEE3BB8]();
}

uint64_t sub_23B1C73C4()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_23B1C73D0()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_23B1C73DC()
{
  return MEMORY[0x24BEE3D90]();
}

uint64_t sub_23B1C73E8()
{
  return MEMORY[0x24BEE3D98]();
}

uint64_t sub_23B1C73F4()
{
  return MEMORY[0x24BEE3DD8]();
}

uint64_t sub_23B1C7400()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_23B1C740C()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_23B1C7418()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23B1C7424()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_23B1C7430()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_23B1C743C()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23B1C7448()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23B1C7454()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23B1C7460()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23B1C746C()
{
  return MEMORY[0x24BDD0750]();
}

uint64_t sub_23B1C7478()
{
  return MEMORY[0x24BDD0758]();
}

uint64_t sub_23B1C7484()
{
  return MEMORY[0x24BEE4248]();
}

uint64_t sub_23B1C7490()
{
  return MEMORY[0x24BEE4250]();
}

uint64_t sub_23B1C749C()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_23B1C74A8()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23B1C74B4()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23B1C74C0()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23B1C74CC()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_23B1C74D8()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_23B1C74E4()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23B1C74F0()
{
  return MEMORY[0x24BEE4408]();
}

uint64_t sub_23B1C74FC()
{
  return MEMORY[0x24BDD07C8]();
}

uint64_t sub_23B1C7508()
{
  return MEMORY[0x24BDD07D0]();
}

uint64_t sub_23B1C7514()
{
  return MEMORY[0x24BDD0810]();
}

uint64_t sub_23B1C7520()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23B1C752C()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_23B1C7538()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23B1C7544()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23B1C7550()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_23B1C755C()
{
  return MEMORY[0x24BEE4A18]();
}

uint64_t sub_23B1C7568()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t sub_23B1C7574()
{
  return MEMORY[0x24BEE4AA0]();
}

uint64_t APFSVolumeRole()
{
  return MEMORY[0x24BDFD2F8]();
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x24BDBC298](cf);
}

Boolean CFURLSetResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue, CFErrorRef *error)
{
  return MEMORY[0x24BDBC8C8](url, key, propertyValue, error);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return (CFStringRef)MEMORY[0x24BDBC8E8](alloc, uuid);
}

uint64_t CacheDeleteCopyPurgeableSpaceWithInfo()
{
  return MEMORY[0x24BE12310]();
}

uint64_t CacheDeletePurgeSpaceWithInfo()
{
  return MEMORY[0x24BE12318]();
}

uint64_t FPCaptureLogsForOperation()
{
  return MEMORY[0x24BDC7DB0]();
}

uint64_t FPDictFromVendorItem()
{
  return MEMORY[0x24BDC8018]();
}

uint64_t FPDomainUnavailableError()
{
  return MEMORY[0x24BDC8030]();
}

uint64_t FPDomainUnavailableErrorWithUnderlyingError()
{
  return MEMORY[0x24BDC8038]();
}

uint64_t FPEvictedByTheUserError()
{
  return MEMORY[0x24BDC8040]();
}

uint64_t FPEvictionOnBusyItemError()
{
  return MEMORY[0x24BDC8048]();
}

uint64_t FPEvictionOnItemWithHardlinkError()
{
  return MEMORY[0x24BDC8050]();
}

uint64_t FPEvictionWithUnsyncedEditsError()
{
  return MEMORY[0x24BDC8058]();
}

uint64_t FPFeatureFlagEbihilIsEnabled()
{
  return MEMORY[0x24BDC8078]();
}

uint64_t FPFeatureFlagSpaceAttributionIsEnabled()
{
  return MEMORY[0x24BDC8080]();
}

uint64_t FPFileIsAlreadyPausedError()
{
  return MEMORY[0x24BDC8088]();
}

uint64_t FPFileNotPausedError()
{
  return MEMORY[0x24BDC80A8]();
}

uint64_t FPGetTagsDataForTags()
{
  return MEMORY[0x24BDC80B0]();
}

uint64_t FPGetTagsFromTagsData()
{
  return MEMORY[0x24BDC80B8]();
}

uint64_t FPInvalidParameterError()
{
  return MEMORY[0x24BDC80D8]();
}

uint64_t FPIsCloudDocsWithFPFSEnabled()
{
  return MEMORY[0x24BDC80E0]();
}

uint64_t FPIsFPCKXPCServiceEnabled()
{
  return MEMORY[0x24BDC80E8]();
}

uint64_t FPItemNotFoundError()
{
  return MEMORY[0x24BDC8100]();
}

uint64_t FPItemNotFoundErrorAtURL()
{
  return MEMORY[0x24BDC8108]();
}

uint64_t FPLocv()
{
  return MEMORY[0x24BDC8120]();
}

uint64_t FPMissingAllowsEvictingCapabilitiesError()
{
  return MEMORY[0x24BDC8128]();
}

uint64_t FPNonEvictableChildrenError()
{
  return MEMORY[0x24BDC8130]();
}

uint64_t FPNotPermittedWriteError()
{
  return MEMORY[0x24BDC8138]();
}

uint64_t FPNotSupportedError()
{
  return MEMORY[0x24BDC8140]();
}

uint64_t FPOSVersion()
{
  return MEMORY[0x24BDC8148]();
}

uint64_t FPPerformWithPersona()
{
  return MEMORY[0x24BDC8150]();
}

uint64_t FPPinningIsEnabledForDomainID()
{
  return MEMORY[0x24BDC8158]();
}

uint64_t FPUserCancelledError()
{
  return MEMORY[0x24BDC8180]();
}

uint64_t FPVersion()
{
  return MEMORY[0x24BDC8188]();
}

uint64_t FPWriteImportCookieForDomainURL()
{
  return MEMORY[0x24BDC8190]();
}

FSEventStreamRef FSEventStreamCreate(CFAllocatorRef allocator, FSEventStreamCallback callback, FSEventStreamContext *context, CFArrayRef pathsToWatch, FSEventStreamEventId sinceWhen, CFTimeInterval latency, FSEventStreamCreateFlags flags)
{
  return (FSEventStreamRef)MEMORY[0x24BDC1470](allocator, callback, context, pathsToWatch, sinceWhen, *(_QWORD *)&flags, latency);
}

void FSEventStreamFlushSync(FSEventStreamRef streamRef)
{
  MEMORY[0x24BDC1480](streamRef);
}

void FSEventStreamInvalidate(FSEventStreamRef streamRef)
{
  MEMORY[0x24BDC1490](streamRef);
}

void FSEventStreamRelease(FSEventStreamRef streamRef)
{
  MEMORY[0x24BDC1498](streamRef);
}

void FSEventStreamSetDispatchQueue(FSEventStreamRef streamRef, dispatch_queue_t q)
{
  MEMORY[0x24BDC14A0](streamRef, q);
}

Boolean FSEventStreamStart(FSEventStreamRef streamRef)
{
  return MEMORY[0x24BDC14A8](streamRef);
}

void FSEventStreamStop(FSEventStreamRef streamRef)
{
  MEMORY[0x24BDC14B0](streamRef);
}

CFUUIDRef FSEventsCopyUUIDForDevice(dev_t dev)
{
  return (CFUUIDRef)MEMORY[0x24BDC14B8](*(_QWORD *)&dev);
}

FSEventStreamEventId FSEventsGetCurrentEventId(void)
{
  return MEMORY[0x24BDC14C0]();
}

uint64_t GSLibraryResolveDocumentId2()
{
  return MEMORY[0x24BE3AE78]();
}

uint64_t MGGetSInt32Answer()
{
  return MEMORY[0x24BED8490]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x24BDAC730](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _CFURLCStringIsPromiseName()
{
  return MEMORY[0x24BDBD0D0]();
}

uint64_t _CFURLCopyPromiseURLOfLogicalURL()
{
  return MEMORY[0x24BDBD0E8]();
}

void _Exit(int a1)
{
  MEMORY[0x24BDAC748](*(_QWORD *)&a1);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x24BDAC7A0](a1, a2, *(_QWORD *)&a3, a4);
}

int *__error(void)
{
  return (int *)MEMORY[0x24BDAC7D0]();
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x24BDAC7D8](a1);
  return result;
}

uint64_t __fp_create_section()
{
  return MEMORY[0x24BDC8400]();
}

uint64_t __fp_leave_section_Debug()
{
  return MEMORY[0x24BDC8408]();
}

uint64_t __fp_log_adopt()
{
  return MEMORY[0x24BDC8410]();
}

uint64_t __fp_log_fork()
{
  return MEMORY[0x24BDC8418]();
}

uint64_t __fp_pop_log()
{
  return MEMORY[0x24BDC8420]();
}

uint64_t __strlcpy_chk()
{
  return MEMORY[0x24BDAC910]();
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB68](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB80](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB88](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x24BEE4B28]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void abort(void)
{
  MEMORY[0x24BDAD008]();
}

int asprintf(char **a1, const char *a2, ...)
{
  return MEMORY[0x24BDAD200](a1, a2);
}

char *__cdecl basename_r(const char *a1, char *a2)
{
  return (char *)MEMORY[0x24BDAD2B8](a1, a2);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

int clonefileat(int a1, const char *a2, int a3, const char *a4, uint32_t a5)
{
  return MEMORY[0x24BDAD9D0](*(_QWORD *)&a1, a2, *(_QWORD *)&a3, a4, *(_QWORD *)&a5);
}

int close(int a1)
{
  return MEMORY[0x24BDAD9D8](*(_QWORD *)&a1);
}

int copyfile(const char *from, const char *to, copyfile_state_t state, copyfile_flags_t flags)
{
  return MEMORY[0x24BDADBB8](from, to, state, *(_QWORD *)&flags);
}

copyfile_state_t copyfile_state_alloc(void)
{
  return (copyfile_state_t)MEMORY[0x24BDADBC0]();
}

int copyfile_state_free(copyfile_state_t a1)
{
  return MEMORY[0x24BDADBC8](a1);
}

int copyfile_state_set(copyfile_state_t s, uint32_t flag, const void *src)
{
  return MEMORY[0x24BDADBD8](s, *(_QWORD *)&flag, src);
}

char *__cdecl dirname_r(const char *a1, char *a2)
{
  return (char *)MEMORY[0x24BDADC48](a1, a2);
}

void dispatch_activate(dispatch_object_t object)
{
  MEMORY[0x24BDADC58](object);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADC60](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x24BDADCA8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADCC0](queue, block);
}

void dispatch_async_and_wait(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADCC8](queue, block);
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x24BDADD20](flags, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority, block);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADDB8](group, queue, block);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADDE0](group, queue, block);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x24BDADDF0](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x24BDADEB8](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x24BDADEC8](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x24BDADED0](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x24BDADF18](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x24BDADF28](value);
}

uint64_t dispatch_set_qos_class_fallback()
{
  return MEMORY[0x24BDADF50]();
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x24BDADF68](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x24BDADF70](type, handle, mask, queue);
}

void dispatch_source_merge_data(dispatch_source_t source, uintptr_t value)
{
  MEMORY[0x24BDADF98](source, value);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x24BDADFA0](source, handler);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x24BDADFB0](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x24BDADFD0](source, start, interval, leeway);
}

void dispatch_suspend(dispatch_object_t object)
{
  MEMORY[0x24BDADFE0](object);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x24BDADFF8](when, delta);
}

dispatch_workloop_t dispatch_workloop_create(const char *label)
{
  return (dispatch_workloop_t)MEMORY[0x24BDAE010](label);
}

int dup(int a1)
{
  return MEMORY[0x24BDAE0B8](*(_QWORD *)&a1);
}

uint64_t errorInjectionPointEnabled()
{
  return MEMORY[0x24BE313E0]();
}

uint64_t errorInjectionThrowOnDBQueryEnabled()
{
  return MEMORY[0x24BE313E8]();
}

uint64_t errorInjectionUnknownDBVersionEnabled()
{
  return MEMORY[0x24BE313F0]();
}

void exit(int a1)
{
  MEMORY[0x24BDAE268](*(_QWORD *)&a1);
}

int faccessat(int a1, const char *a2, int a3, int a4)
{
  return MEMORY[0x24BDAE2A8](*(_QWORD *)&a1, a2, *(_QWORD *)&a3, *(_QWORD *)&a4);
}

int fchmod(int a1, mode_t a2)
{
  return MEMORY[0x24BDAE2B8](*(_QWORD *)&a1, a2);
}

int fclonefileat(int a1, int a2, const char *a3, uint32_t a4)
{
  return MEMORY[0x24BDAE2D8](*(_QWORD *)&a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4);
}

int fcntl(int a1, int a2, ...)
{
  return MEMORY[0x24BDAE2E8](*(_QWORD *)&a1, *(_QWORD *)&a2);
}

int ffsctl(int a1, unint64_t a2, void *a3, unsigned int a4)
{
  return MEMORY[0x24BDAE358](*(_QWORD *)&a1, a2, a3, *(_QWORD *)&a4);
}

int fgetattrlist(int a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return MEMORY[0x24BDAE360](*(_QWORD *)&a1, a2, a3, a4, *(_QWORD *)&a5);
}

ssize_t fgetxattr(int fd, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x24BDAE388](*(_QWORD *)&fd, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

ssize_t flistxattr(int fd, char *namebuff, size_t size, int options)
{
  return MEMORY[0x24BDAE3A8](*(_QWORD *)&fd, namebuff, size, *(_QWORD *)&options);
}

int flock(int a1, int a2)
{
  return MEMORY[0x24BDAE3B0](*(_QWORD *)&a1, *(_QWORD *)&a2);
}

uint64_t fp_current_or_default_log()
{
  return MEMORY[0x24BDC8428]();
}

uint64_t fp_default_log()
{
  return MEMORY[0x24BDC8430]();
}

uint64_t fpfs_adopt_log()
{
  return MEMORY[0x24BDC8440]();
}

uint64_t fpfs_clear_acl()
{
  return MEMORY[0x24BDC8448]();
}

uint64_t fpfs_clear_file_acl()
{
  return MEMORY[0x24BDC8450]();
}

uint64_t fpfs_create_dataless_fault_at()
{
  return MEMORY[0x24BDC8458]();
}

uint64_t fpfs_create_log_for_provider()
{
  return MEMORY[0x24BDC8460]();
}

uint64_t fpfs_current_log()
{
  return MEMORY[0x24BDC8468]();
}

uint64_t fpfs_current_or_default_log()
{
  return MEMORY[0x24BDC8470]();
}

uint64_t fpfs_delete_xattrs()
{
  return MEMORY[0x24BDC8478]();
}

uint64_t fpfs_deserialize_favorite_rank()
{
  return MEMORY[0x24BDC8480]();
}

uint64_t fpfs_deserialize_last_use_date()
{
  return MEMORY[0x24BDC8488]();
}

uint64_t fpfs_deserialize_tags()
{
  return MEMORY[0x24BDC8490]();
}

uint64_t fpfs_dirsize()
{
  return MEMORY[0x24BDC8498]();
}

uint64_t fpfs_evict()
{
  return MEMORY[0x24BDC84A8]();
}

uint64_t fpfs_eviction_urgency()
{
  return MEMORY[0x24BDC84B0]();
}

uint64_t fpfs_extension_in_filename()
{
  return MEMORY[0x24BDC84B8]();
}

uint64_t fpfs_fchdir()
{
  return MEMORY[0x24BDC84C0]();
}

uint64_t fpfs_fchflags()
{
  return MEMORY[0x24BDC84C8]();
}

uint64_t fpfs_femptydir()
{
  return MEMORY[0x24BDC84D0]();
}

uint64_t fpfs_fget_parent_id()
{
  return MEMORY[0x24BDC84D8]();
}

uint64_t fpfs_fget_parent_syncroot()
{
  return MEMORY[0x24BDC84E0]();
}

uint64_t fpfs_fget_syncroot()
{
  return MEMORY[0x24BDC84E8]();
}

uint64_t fpfs_fgetdirentries()
{
  return MEMORY[0x24BDC84F0]();
}

uint64_t fpfs_fgetfileattrs()
{
  return MEMORY[0x24BDC84F8]();
}

uint64_t fpfs_fgethandle()
{
  return MEMORY[0x24BDC8500]();
}

uint64_t fpfs_fgetpath()
{
  return MEMORY[0x24BDC8508]();
}

uint64_t fpfs_fgetxattr_checked()
{
  return MEMORY[0x24BDC8510]();
}

uint64_t fpfs_file_is_flocked()
{
  return MEMORY[0x24BDC8518]();
}

uint64_t fpfs_fileattrs_fullpath()
{
  return MEMORY[0x24BDC8520]();
}

uint64_t fpfs_filename_contains_ext()
{
  return MEMORY[0x24BDC8528]();
}

uint64_t fpfs_finder_info_deserialize()
{
  return MEMORY[0x24BDC8530]();
}

uint64_t fpfs_fopendir()
{
  return MEMORY[0x24BDC8538]();
}

uint64_t fpfs_free_metadata_tag_data()
{
  return MEMORY[0x24BDC8540]();
}

uint64_t fpfs_fremovexattr()
{
  return MEMORY[0x24BDC8548]();
}

uint64_t fpfs_fset_acl()
{
  return MEMORY[0x24BDC8550]();
}

uint64_t fpfs_fset_metadata()
{
  return MEMORY[0x24BDC8558]();
}

uint64_t fpfs_fset_pause_sync_bundleID()
{
  return MEMORY[0x24BDC8560]();
}

uint64_t fpfs_fset_resuming_sync_with_drop_local_changes()
{
  return MEMORY[0x24BDC8568]();
}

uint64_t fpfs_fset_syncroot()
{
  return MEMORY[0x24BDC8570]();
}

uint64_t fpfs_fsetxattr()
{
  return MEMORY[0x24BDC8578]();
}

uint64_t fpfs_fsgetpath()
{
  return MEMORY[0x24BDC8580]();
}

uint64_t fpfs_funset_pause_sync_bundleID()
{
  return MEMORY[0x24BDC8588]();
}

uint64_t fpfs_funset_resuming_sync_with_drop_local_changes()
{
  return MEMORY[0x24BDC8590]();
}

uint64_t fpfs_get_dirstat()
{
  return MEMORY[0x24BDC8598]();
}

uint64_t fpfs_get_finder_info()
{
  return MEMORY[0x24BDC85A0]();
}

uint64_t fpfs_get_finder_info_buffer()
{
  return MEMORY[0x24BDC85A8]();
}

uint64_t fpfs_get_flock_type()
{
  return MEMORY[0x24BDC85B0]();
}

uint64_t fpfs_get_is_ignore_root()
{
  return MEMORY[0x24BDC85B8]();
}

uint64_t fpfs_get_is_sync_paused()
{
  return MEMORY[0x24BDC85C0]();
}

uint64_t fpfs_get_materialization_alignment()
{
  return MEMORY[0x24BDC85C8]();
}

uint64_t fpfs_get_purgeable_info()
{
  return MEMORY[0x24BDC85D0]();
}

uint64_t fpfs_get_purgeable_stats()
{
  return MEMORY[0x24BDC85D8]();
}

uint64_t fpfs_gethandle_at()
{
  return MEMORY[0x24BDC85E0]();
}

uint64_t fpfs_icd_package_extension_list_reload()
{
  return MEMORY[0x24BDC85E8]();
}

uint64_t fpfs_is_busy_date()
{
  return MEMORY[0x24BDC85F0]();
}

uint64_t fpfs_is_dataless_fault()
{
  return MEMORY[0x24BDC85F8]();
}

uint64_t fpfs_is_dataless_fault_at()
{
  return MEMORY[0x24BDC8600]();
}

uint64_t fpfs_is_detached_root()
{
  return MEMORY[0x24BDC8608]();
}

uint64_t fpfs_is_finder_alias_at()
{
  return MEMORY[0x24BDC8610]();
}

uint64_t fpfs_item_handle_gencmp()
{
  return MEMORY[0x24BDC8618]();
}

uint64_t fpfs_load_additional_attrs()
{
  return MEMORY[0x24BDC8620]();
}

uint64_t fpfs_lp_faccessat()
{
  return MEMORY[0x24BDC8628]();
}

uint64_t fpfs_lp_unlinkat()
{
  return MEMORY[0x24BDC8630]();
}

uint64_t fpfs_make_fsevent()
{
  return MEMORY[0x24BDC8638]();
}

uint64_t fpfs_materialize()
{
  return MEMORY[0x24BDC8640]();
}

uint64_t fpfs_num_entries()
{
  return MEMORY[0x24BDC8648]();
}

uint64_t fpfs_num_entries_at()
{
  return MEMORY[0x24BDC8650]();
}

uint64_t fpfs_open()
{
  return MEMORY[0x24BDC8658]();
}

uint64_t fpfs_open_longpath()
{
  return MEMORY[0x24BDC8660]();
}

uint64_t fpfs_openat()
{
  return MEMORY[0x24BDC8668]();
}

uint64_t fpfs_openat_longparent()
{
  return MEMORY[0x24BDC8670]();
}

uint64_t fpfs_openbyid()
{
  return MEMORY[0x24BDC8678]();
}

uint64_t fpfs_openbyid_ext()
{
  return MEMORY[0x24BDC8680]();
}

uint64_t fpfs_opendirat()
{
  return MEMORY[0x24BDC8688]();
}

uint64_t fpfs_path_is_safe_save_temp_file()
{
  return MEMORY[0x24BDC8690]();
}

uint64_t fpfs_path_is_safe_save_temp_filename()
{
  return MEMORY[0x24BDC8698]();
}

uint64_t fpfs_path_relative_to()
{
  return MEMORY[0x24BDC86A0]();
}

uint64_t fpfs_pkg_demote()
{
  return MEMORY[0x24BDC86A8]();
}

uint64_t fpfs_pkg_dirstat()
{
  return MEMORY[0x24BDC86B0]();
}

uint64_t fpfs_pkg_enable_dirstat()
{
  return MEMORY[0x24BDC86B8]();
}

uint64_t fpfs_pkg_is_demoted()
{
  return MEMORY[0x24BDC86C0]();
}

uint64_t fpfs_pkg_is_demoted_at()
{
  return MEMORY[0x24BDC86C8]();
}

uint64_t fpfs_pkg_is_package_item()
{
  return MEMORY[0x24BDC86D0]();
}

uint64_t fpfs_pkg_is_package_root2()
{
  return MEMORY[0x24BDC86D8]();
}

uint64_t fpfs_pkg_is_promoted()
{
  return MEMORY[0x24BDC86E0]();
}

uint64_t fpfs_pkg_promote()
{
  return MEMORY[0x24BDC86E8]();
}

uint64_t fpfs_pkg_relative_path_lookup()
{
  return MEMORY[0x24BDC86F0]();
}

uint64_t fpfs_pkg_remove_demotion_xattr()
{
  return MEMORY[0x24BDC86F8]();
}

uint64_t fpfs_pkg_remove_promotion_xattr()
{
  return MEMORY[0x24BDC8700]();
}

uint64_t fpfs_pkg_set_bundle_bit()
{
  return MEMORY[0x24BDC8708]();
}

uint64_t fpfs_pkg_system_lookup()
{
  return MEMORY[0x24BDC8710]();
}

uint64_t fpfs_pkg_system_relative_lookup()
{
  return MEMORY[0x24BDC8718]();
}

uint64_t fpfs_recursive_prune_fault()
{
  return MEMORY[0x24BDC8720]();
}

uint64_t fpfs_recursive_unlinkat()
{
  return MEMORY[0x24BDC8730]();
}

uint64_t fpfs_remove_before_bounce_filename()
{
  return MEMORY[0x24BDC8738]();
}

uint64_t fpfs_remove_resurrected()
{
  return MEMORY[0x24BDC8740]();
}

uint64_t fpfs_removeat()
{
  return MEMORY[0x24BDC8748]();
}

uint64_t fpfs_root_exposure_symlink_xattr_is_equal()
{
  return MEMORY[0x24BDC8750]();
}

uint64_t fpfs_serialize_tags()
{
  return MEMORY[0x24BDC8758]();
}

uint64_t fpfs_set_dataless_cmpfs_attrs()
{
  return MEMORY[0x24BDC8760]();
}

uint64_t fpfs_set_evictable()
{
  return MEMORY[0x24BDC8768]();
}

uint64_t fpfs_set_is_ignore_root()
{
  return MEMORY[0x24BDC8770]();
}

uint64_t fpfs_set_is_pinned()
{
  return MEMORY[0x24BDC8778]();
}

uint64_t fpfs_set_purgeable_non_evictable()
{
  return MEMORY[0x24BDC8780]();
}

uint64_t fpfs_set_resurrected()
{
  return MEMORY[0x24BDC8788]();
}

uint64_t fpfs_set_root_exposure_symlink_xattr()
{
  return MEMORY[0x24BDC8790]();
}

uint64_t fpfs_should_be_tracked()
{
  return MEMORY[0x24BDC8798]();
}

uint64_t fpfs_should_be_tracked_internal()
{
  return MEMORY[0x24BDC87A0]();
}

uint64_t fpfs_supports_brm_sparse_files()
{
  return MEMORY[0x24BDC87A8]();
}

uint64_t fpfs_supports_lazy_recursive_deletion()
{
  return MEMORY[0x24BDC87B0]();
}

uint64_t fpfs_supports_long_paths()
{
  return MEMORY[0x24BDC87B8]();
}

uint64_t fpfs_supports_parent_mtime_iopolicy()
{
  return MEMORY[0x24BDC87C0]();
}

uint64_t fpfs_supports_partial_conflicts_resolution()
{
  return MEMORY[0x24BDC87C8]();
}

uint64_t fpfs_supports_partial_materialization()
{
  return MEMORY[0x24BDC87D0]();
}

uint64_t fpfs_supports_pkg_dataless_escape_prevention()
{
  return MEMORY[0x24BDC87D8]();
}

uint64_t fpfs_supports_purge_reasons()
{
  return MEMORY[0x24BDC87E0]();
}

uint64_t fpfs_supports_sokoban()
{
  return MEMORY[0x24BDC87E8]();
}

uint64_t fpfs_supports_speculative_set()
{
  return MEMORY[0x24BDC87F0]();
}

uint64_t fpfs_supports_vfs_ignore_permissions_iopolicy()
{
  return MEMORY[0x24BDC87F8]();
}

uint64_t fpfs_track_document()
{
  return MEMORY[0x24BDC8800]();
}

uint64_t fpfs_transfer_xattrs()
{
  return MEMORY[0x24BDC8808]();
}

uint64_t fpfs_unset_dataless_cmpfs_attrs()
{
  return MEMORY[0x24BDC8810]();
}

uint64_t fpfs_unset_evictable()
{
  return MEMORY[0x24BDC8818]();
}

uint64_t fpfs_untrack_document()
{
  return MEMORY[0x24BDC8820]();
}

uint64_t fpfs_update_dataless_fault()
{
  return MEMORY[0x24BDC8828]();
}

uint64_t fpfs_update_purgency()
{
  return MEMORY[0x24BDC8830]();
}

uint64_t fpfs_user_package_extension_list_init()
{
  return MEMORY[0x24BDC8838]();
}

uint64_t fpfs_xattr_is_syncable()
{
  return MEMORY[0x24BDC8840]();
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

int fremovexattr(int fd, const char *name, int options)
{
  return MEMORY[0x24BDAE478](*(_QWORD *)&fd, name, *(_QWORD *)&options);
}

int fsetxattr(int fd, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x24BDAE4F8](*(_QWORD *)&fd, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

ssize_t fsgetpath(char *a1, size_t a2, fsid_t *a3, uint64_t a4)
{
  return MEMORY[0x24BDAE500](a1, a2, a3, a4);
}

uint64_t fssync_default_log()
{
  return MEMORY[0x24BDC8848]();
}

int fstat(int a1, stat *a2)
{
  return MEMORY[0x24BDAE508](*(_QWORD *)&a1, a2);
}

int fstatat(int a1, const char *a2, stat *a3, int a4)
{
  return MEMORY[0x24BDAE510](*(_QWORD *)&a1, a2, a3, *(_QWORD *)&a4);
}

int fstatfs(int a1, statfs *a2)
{
  return MEMORY[0x24BDAE518](*(_QWORD *)&a1, a2);
}

int ftruncate(int a1, off_t a2)
{
  return MEMORY[0x24BDAE548](*(_QWORD *)&a1, a2);
}

int fts_close(FTS *a1)
{
  return MEMORY[0x24BDAE550](a1);
}

FTS *__cdecl fts_open(char *const *a1, int a2, int (__cdecl *a3)(const FTSENT **, const FTSENT **))
{
  return (FTS *)MEMORY[0x24BDAE558](a1, *(_QWORD *)&a2, a3);
}

FTSENT *__cdecl fts_read(FTS *a1)
{
  return (FTSENT *)MEMORY[0x24BDAE568](a1);
}

int getattrlist(const char *a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return MEMORY[0x24BDAE5A8](a1, a2, a3, a4, *(_QWORD *)&a5);
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x24BDAE5F0](a1);
}

uid_t geteuid(void)
{
  return MEMORY[0x24BDAE5F8]();
}

int getpagesize(void)
{
  return MEMORY[0x24BDAE6B8]();
}

uid_t getuid(void)
{
  return MEMORY[0x24BDAE788]();
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x24BDAE798](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

tm *__cdecl localtime_r(const time_t *a1, tm *a2)
{
  return (tm *)MEMORY[0x24BDAEAA0](a1, a2);
}

long double log(long double __x)
{
  long double result;

  MEMORY[0x24BDAEAA8](__x);
  return result;
}

long double log10(long double __x)
{
  long double result;

  MEMORY[0x24BDAEAB0](__x);
  return result;
}

off_t lseek(int a1, off_t a2, int a3)
{
  return MEMORY[0x24BDAEB20](*(_QWORD *)&a1, a2, *(_QWORD *)&a3);
}

int lstat(const char *a1, stat *a2)
{
  return MEMORY[0x24BDAEB28](a1, a2);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED70](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED78](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

int mkdir(const char *a1, mode_t a2)
{
  return MEMORY[0x24BDAEF28](a1, a2);
}

int mkdirat(int a1, const char *a2, mode_t a3)
{
  return MEMORY[0x24BDAEF30](*(_QWORD *)&a1, a2, a3);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x24BDAF160](name);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x24BEDCFA8](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x24BEDCFB0](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x24BEDCFC0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x24BEDD030](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x24BEDD038](location);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x24BEDD0C0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x24BEDD0E8](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x24BEDD148]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x24BEDD2A8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x24BEDD2C0](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x24BEDD420](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x24BEDD438](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x24BEDD440](obj);
}

void objc_terminate(void)
{
  MEMORY[0x24BEDD450]();
}

int open(const char *a1, int a2, ...)
{
  return MEMORY[0x24BDAF228](a1, *(_QWORD *)&a2);
}

int openat(int a1, const char *a2, int a3, ...)
{
  return MEMORY[0x24BDAF240](*(_QWORD *)&a1, a2, *(_QWORD *)&a3);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x24BDAF400](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x24BDAF408](log);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x24BDAF438]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return MEMORY[0x24BDAF490]();
}

uint64_t os_unfair_recursive_lock_unlock()
{
  return MEMORY[0x24BDAF4A8]();
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x24BDAF4D0]();
}

ssize_t pread(int __fd, void *__buf, size_t __nbyte, off_t a4)
{
  return MEMORY[0x24BDAF698](*(_QWORD *)&__fd, __buf, __nbyte, a4);
}

qos_class_t qos_class_self(void)
{
  return MEMORY[0x24BDAFA10]();
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return MEMORY[0x24BDAFA80](*(_QWORD *)&a1, a2, a3);
}

int removefile(const char *path, removefile_state_t state, removefile_flags_t flags)
{
  return MEMORY[0x24BDAFB40](path, state, *(_QWORD *)&flags);
}

int removexattr(const char *path, const char *name, int options)
{
  return MEMORY[0x24BDAFB68](path, name, *(_QWORD *)&options);
}

int renameatx_np(int a1, const char *a2, int a3, const char *a4, unsigned int a5)
{
  return MEMORY[0x24BDAFB88](*(_QWORD *)&a1, a2, *(_QWORD *)&a3, a4, *(_QWORD *)&a5);
}

int renamex_np(const char *a1, const char *a2, unsigned int a3)
{
  return MEMORY[0x24BDAFB90](a1, a2, *(_QWORD *)&a3);
}

int rmdir(const char *a1)
{
  return MEMORY[0x24BDAFBB0](a1);
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x24BDAFD98](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x24BDAFE40](__str, __size, __format);
}

int sqlite3_bind_parameter_count(sqlite3_stmt *a1)
{
  return MEMORY[0x24BEDDF78](a1);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE038](pStmt);
}

void sqlite3_result_int64(sqlite3_context *a1, sqlite3_int64 a2)
{
  MEMORY[0x24BEDE218](a1, a2);
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return (const char *)MEMORY[0x24BEDE2A0](pStmt);
}

int sqlite3_stmt_status(sqlite3_stmt *a1, int op, int resetFlg)
{
  return MEMORY[0x24BEDE2C0](a1, *(_QWORD *)&op, *(_QWORD *)&resetFlg);
}

const void *__cdecl sqlite3_value_blob(sqlite3_value *a1)
{
  return (const void *)MEMORY[0x24BEDE308](a1);
}

int sqlite3_value_bytes(sqlite3_value *a1)
{
  return MEMORY[0x24BEDE310](a1);
}

int sqlite3_value_int(sqlite3_value *a1)
{
  return MEMORY[0x24BEDE338](a1);
}

sqlite3_int64 sqlite3_value_int64(sqlite3_value *a1)
{
  return MEMORY[0x24BEDE340](a1);
}

int sqlite3_value_type(sqlite3_value *a1)
{
  return MEMORY[0x24BEDE368](a1);
}

int stat(const char *a1, stat *a2)
{
  return MEMORY[0x24BDAFEA8](a1, a2);
}

int statfs(const char *a1, statfs *a2)
{
  return MEMORY[0x24BDAFEB0](a1, a2);
}

int strcasecmp(const char *a1, const char *a2)
{
  return MEMORY[0x24BDAFED0](a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x24BDAFEF0](__s1, __s2);
}

char *__cdecl strdup(const char *__s1)
{
  return (char *)MEMORY[0x24BDAFF10](__s1);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x24BDAFF18](*(_QWORD *)&__errnum);
}

size_t strlcpy(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x24BDAFF38](__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x24BDAFF40](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocBox()
{
  return MEMORY[0x24BEE4BF8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocError()
{
  return MEMORY[0x24BEE4C08]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_deallocUninitializedObject()
{
  return MEMORY[0x24BEE4C20]();
}

uint64_t swift_deletedMethodError()
{
  return MEMORY[0x24BEE4C28]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x24BEE4C48]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x24BEE4C50]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x24BEE4C68]();
}

uint64_t swift_dynamicCastObjCProtocolUnconditional()
{
  return MEMORY[0x24BEE4C78]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x24BEE4D98]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x24BEE4DD8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x24BEE4DF0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x24BEE4E00]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x24BEE4E38]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x24BEE4E60]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return MEMORY[0x24BEE4F98]();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return MEMORY[0x24BEE4FA0]();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return MEMORY[0x24BEE4FA8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x24BEE4FB8]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x24BEE4FC0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x24BEE4FE0]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x24BEE4FE8]();
}

uint64_t swift_unownedRelease()
{
  return MEMORY[0x24BEE4FF0]();
}

uint64_t swift_unownedRetain()
{
  return MEMORY[0x24BEE4FF8]();
}

uint64_t swift_unownedRetainStrong()
{
  return MEMORY[0x24BEE5000]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x24BEE5010]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

int symlink(const char *a1, const char *a2)
{
  return MEMORY[0x24BDB0090](a1, a2);
}

int symlinkat(const char *a1, int a2, const char *a3)
{
  return MEMORY[0x24BDB0098](a1, *(_QWORD *)&a2, a3);
}

time_t time(time_t *a1)
{
  return MEMORY[0x24BDB0240](a1);
}

int unlink(const char *a1)
{
  return MEMORY[0x24BDB02B0](a1);
}

int unlinkat(int a1, const char *a2, int a3)
{
  return MEMORY[0x24BDB02B8](*(_QWORD *)&a1, a2, *(_QWORD *)&a3);
}

int usleep(useconds_t a1)
{
  return MEMORY[0x24BDB02E8](*(_QWORD *)&a1);
}

void uuid_generate(uuid_t out)
{
  MEMORY[0x24BDB0318](out);
}

void uuid_unparse(const uuid_t uu, uuid_string_t out)
{
  MEMORY[0x24BDB0338](uu, out);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x24BDB05E0](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
  MEMORY[0x24BDB05E8](identifier, criteria, handler);
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x24BDB0610](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x24BDB0618](activity);
}

void xpc_activity_unregister(const char *identifier)
{
  MEMORY[0x24BDB0620](identifier);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x24BDB08C0](keys, values, count);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x24BDB0978](xdict, key, value);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x24BDB09A8](xdict, key, value);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x24BDB09C8](xdict, key, string);
}

