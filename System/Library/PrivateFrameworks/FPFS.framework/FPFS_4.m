uint64_t sub_23ACEB7C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(const void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;

  v6 = sub_23B1C5C54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16((const void *)(a1 + v13), 1, v10);
  v18 = v16(v15, 1, v10);
  if (!v17)
  {
    if (!v18)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[10];
  v21 = *(void **)(a1 + v20);
  v22 = *(void **)(a2 + v20);
  *(_QWORD *)(a1 + v20) = v22;
  v23 = v22;

  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v12((void *)(a1 + a3[13]), (const void *)(a2 + a3[13]), v10);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_23ACEB9B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_23B1C5C54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  v17 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v12((void *)(a1 + a3[13]), (const void *)(a2 + a3[13]), v10);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_23ACEBB10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, const void *, uint64_t);
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(const void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v6 = sub_23B1C5C54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16((const void *)(a1 + v13), 1, v10);
  v18 = v16(v15, 1, v10);
  if (!v17)
  {
    if (!v18)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  v20 = a3[10];
  v21 = *(void **)(a1 + v20);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);

  v22 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v22) = *(_BYTE *)(a2 + v22);
  v12((void *)(a1 + a3[13]), (const void *)(a2 + a3[13]), v10);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_23ACEBCE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23ACEBCEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_23B1C5C54();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_23ACEBDBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23ACEBDC8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_23B1C5C54();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_23B1C5BDC();
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
  return result;
}

void sub_23ACEBE94()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_23B1C5C54();
  if (v0 <= 0x3F)
  {
    sub_23B1C5BDC();
    if (v1 <= 0x3F)
    {
      sub_23ACEAE7C(319, (unint64_t *)&qword_2542E6790, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_23ACEBF78(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

void sub_23ACEBFB4(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23ACC8EC8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23ACEBFBC(uint64_t a1, void *a2, void *a3, _BYTE *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  void *v14;
  char *v15;
  void *v16;
  unsigned __int8 v17;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t aBlock[6];
  id v23;

  v23 = a3;
  v21 = a2;
  v8 = sub_23B1C60EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for VFSFileTree(0);
  v12 = *(void **)(swift_dynamicCastClassUnconditional() + 216);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BEE5610], v8);
  v13 = v12;
  LOBYTE(v12) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v14 = *(void **)(swift_dynamicCastClassUnconditional() + 232);
  objc_msgSend(v14, sel_suspend);
  sub_23ACAB0D4((uint64_t)a4, a5);
  if (!v5)
  {
    a4 = v23;
    if (!objc_sync_enter(a4))
    {
      a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_urlsAreInTransientState] = 0;
      v15 = &a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___cachedURLs];
      v16 = *(void **)&a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___cachedURLs];
      *(_QWORD *)v15 = 0;
      v17 = v15[8];
      v15[8] = -1;
      sub_23ACE2278(v16, v17);
      if (objc_sync_exit(a4))
        goto LABEL_12;

      swift_dynamicCastClassUnconditional();
      a4 = a4;
      swift_retain();
      if (!objc_sync_enter(a4))
      {
        sub_23AA71B80((uint64_t)a4, aBlock);
        if (!objc_sync_exit(a4))
        {

          sub_23B155EB8(aBlock[0]);
          swift_release();
          swift_bridgeObjectRelease();
          aBlock[4] = (uint64_t)nullsub_1;
          aBlock[5] = 0;
          aBlock[0] = MEMORY[0x24BDAC760];
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_23AA698FC;
          aBlock[3] = (uint64_t)&block_descriptor_3108;
          v19 = _Block_copy(aBlock);
          objc_msgSend(v21, sel_didRefreshRootURLsWithCompletionHandler_, v19);
          _Block_release(v19);
          objc_msgSend(*(id *)(swift_dynamicCastClassUnconditional() + 232), sel_resume);
          return swift_bridgeObjectRelease();
        }
LABEL_12:
        sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a4);
      }
    }
LABEL_11:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a4);
  }
  swift_dynamicCastClassUnconditional();
  objc_msgSend(v14, sel_resume);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23ACEC348(uint64_t a1, void *a2, char *a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  void *v18;
  id v19;
  char *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  void *v30;
  void *v31;
  _QWORD *v32;
  char *v33;
  uint64_t v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD aBlock[6];

  v8 = sub_23B1C602C();
  v42 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v41 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C60A4();
  v39 = *(_QWORD *)(v10 - 8);
  v40 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v38 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a4;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = v13 | 0x3000000000000004;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_23AC052B4;
  *(_QWORD *)(v15 + 24) = v12;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = sub_23AC052B4;
  v16[3] = v12;
  v16[4] = a3;
  v16[5] = a1;
  v16[6] = v14;
  v17 = &a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v18 = (void *)MEMORY[0x23B8615C4](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  _Block_copy(a4);
  v19 = a2;
  v20 = a3;
  swift_retain();
  if (v18)
  {
    if (objc_msgSend(v18, sel_unableToStartup))
    {
      v21 = sub_23AC61E18();
      v22 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, void *))a4)[2](a4, v22);

      swift_release();
      swift_release();

      goto LABEL_9;
    }

  }
  if ((v20[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v23 = (void *)MEMORY[0x23B8615C4](v17);
    if (v23)
    {
      v24 = v23;
      v37 = objc_msgSend(v23, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_1241;
      v36 = _Block_copy(aBlock);
      v25 = v38;
      sub_23B1C6068();
      v44 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      v26 = v41;
      v27 = v43;
      sub_23B1C6DE8();
      v29 = v36;
      v28 = v37;
      MEMORY[0x23B85F470](0, v25, v26, v36);
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v27);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v40);
    }
  }
  v30 = *(void **)&v20[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v31 = *(void **)&v20[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v20;
  v32[3] = sub_23AA8A65C;
  v32[4] = v15;
  v32[5] = sub_23ACEA7E0;
  v32[6] = v16;
  v33 = v20;
  swift_retain();
  swift_retain();
  sub_23AA81A30((uint64_t)"detachKnownFolders(_:request:completionHandler:)", 48, 2, v30, v31, (uint64_t)sub_23AAB92FC, (uint64_t)v32);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  return swift_release_n();
}

uint64_t sub_23ACEC760(uint64_t a1, uint64_t a2, void *a3, char *a4, void (**a5)(_QWORD, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  void *v20;
  id v21;
  char *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  void *v32;
  void *v33;
  _QWORD *v34;
  char *v35;
  void *v37;
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD aBlock[6];

  v10 = sub_23B1C602C();
  v43 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v42 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B1C60A4();
  v40 = *(_QWORD *)(v12 - 8);
  v41 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v39 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a5;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a3;
  v16 = v15 | 0x3000000000000006;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_23AC052B4;
  *(_QWORD *)(v17 + 24) = v14;
  v45 = v17;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = sub_23AC052B4;
  v18[3] = v14;
  v18[4] = a4;
  v18[5] = a1;
  v18[6] = v16;
  v18[7] = a2;
  v19 = &a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v20 = (void *)MEMORY[0x23B8615C4](&a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  _Block_copy(a5);
  v21 = a3;
  v22 = a4;
  swift_retain();
  if (v20)
  {
    if (objc_msgSend(v20, sel_unableToStartup))
    {
      v23 = sub_23AC61E18();
      v24 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, void *))a5)[2](a5, v24);

      swift_release();
      swift_release();

      goto LABEL_9;
    }

  }
  if ((v22[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v25 = (void *)MEMORY[0x23B8615C4](v19);
    if (v25)
    {
      v26 = v25;
      v38 = objc_msgSend(v25, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_1221;
      v37 = _Block_copy(aBlock);
      v27 = v39;
      sub_23B1C6068();
      v46 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      v28 = v42;
      v29 = v44;
      sub_23B1C6DE8();
      v31 = v37;
      v30 = v38;
      MEMORY[0x23B85F470](0, v27, v28, v37);
      _Block_release(v31);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v41);
    }
  }
  v32 = *(void **)&v22[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v33 = *(void **)&v22[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = v22;
  v34[3] = sub_23AA8A65C;
  v34[4] = v45;
  v34[5] = sub_23ACEA808;
  v34[6] = v18;
  v35 = v22;
  swift_retain();
  swift_retain();
  sub_23AA81A30((uint64_t)"attachKnownFolders(_:options:request:completionHandler:)", 56, 2, v32, v33, (uint64_t)sub_23AAB92FC, (uint64_t)v34);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  return swift_release_n();
}

uint64_t sub_23ACECB80(void *a1, uint64_t a2, _BYTE *a3, void (**a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  _BYTE *v30;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[6];

  v8 = sub_23B1C602C();
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C60A4();
  v33 = *(_QWORD *)(v11 - 8);
  v34 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a4;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_23AC052B4;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = sub_23AC052B4;
  v16[3] = v14;
  v16[4] = a1;
  v16[5] = a2;
  v17 = &a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v18 = (void *)MEMORY[0x23B8615C4](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a4);
  v19 = a1;
  if (v18)
  {
    if (objc_msgSend(v18, sel_unableToStartup))
    {
      v20 = sub_23AC61E18();
      v21 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, void *))a4)[2](a4, v21);

      swift_release();
      swift_release();

      return swift_release_n();
    }

  }
  if ((a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v22 = (void *)MEMORY[0x23B8615C4](v17);
    if (v22)
    {
      v23 = v22;
      v32 = objc_msgSend(v22, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_1190;
      v24 = _Block_copy(aBlock);
      sub_23B1C6068();
      v37 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      v25 = v36;
      sub_23B1C6DE8();
      v26 = v32;
      MEMORY[0x23B85F470](0, v13, v10, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v25);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v34);
    }
  }
  v27 = *(void **)&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v28 = *(void **)&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = a3;
  v29[3] = sub_23AA8A65C;
  v29[4] = v15;
  v29[5] = sub_23ACFEAAC;
  v29[6] = v16;
  v30 = a3;
  swift_retain();
  swift_retain();
  sub_23AA81A30((uint64_t)"ingestFromCacheItem(with:requestedFields:request:completionHandler:)", 68, 2, v27, v28, (uint64_t)sub_23AAB92FC, (uint64_t)v29);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_23ACECF38(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result < 15)
    {
      return 0;
    }
    else
    {
      sub_23B1C563C();
      swift_allocObject();
      sub_23B1C5630();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_23B1C5A5C();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_23ACECFCC(uint64_t a1, void *a2, void *a3, void (**a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(const void *, void *, void *);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  void (**v39)(uint64_t, uint64_t);
  void *v40;
  void *v41;
  void *v42;
  void (**v43)(const void *, void *, void *);
  _BYTE *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  void *v60;
  void *v61;
  _QWORD *v62;
  uint64_t v63;
  _BYTE *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  _QWORD aBlock[7];

  v78 = a1;
  v79 = a2;
  v72 = sub_23B1C602C();
  v6 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v71 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C60A4();
  v69 = *(_QWORD *)(v8 - 8);
  v70 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v68 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v73 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v74 = (char *)&v67 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v67 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v67 - v18;
  v20 = sub_23B1C5A08();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a4;
  v80 = a3;
  v25 = (uint64_t)a3 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain;
  v26 = (void *)MEMORY[0x23B8615C4](v25);
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
    _Block_copy(a4);
    v51 = sub_23AC61E18();
    sub_23AA8EFC8((uint64_t)v19, (uint64_t)v17, (uint64_t *)&unk_2542E6740);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20) == 1)
    {
      v52 = 0;
    }
    else
    {
      v52 = (void *)sub_23B1C5954();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v20);
    }
    v65 = (void *)sub_23B1C5870();
    ((void (**)(_QWORD, void *, void *))a4)[2](a4, v52, v65);

    sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542E6740);
LABEL_15:
    swift_release();
    return;
  }
  v67 = v6;
  v77 = v26;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_23AC048D8;
  *(_QWORD *)(v27 + 24) = v24;
  v76 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v78, v20);
  v28 = *(unsigned __int8 *)(v21 + 80);
  v78 = v24;
  v29 = (void (**)(const void *, void *, void *))a4;
  v30 = (v28 + 16) & ~v28;
  v31 = (v22 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  v34 = swift_allocObject();
  v75 = v34;
  v35 = v34 + v30;
  v36 = (void (*)(uint64_t, uint64_t))v78;
  v37 = v23;
  v38 = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v35, v37, v20);
  v39 = (void (**)(uint64_t, uint64_t))(v34 + v31);
  *v39 = sub_23AC048D8;
  v39[1] = v36;
  v40 = v80;
  *(_QWORD *)(v34 + v32) = v80;
  v41 = v79;
  *(_QWORD *)(v34 + v33) = v79;
  v42 = (void *)MEMORY[0x23B8615C4](v25);
  swift_retain_n();
  v43 = v29;
  _Block_copy(v29);
  swift_retain();
  v44 = v40;
  v45 = v41;
  if (!v42)
  {
LABEL_9:
    if ((v44[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
    {
      v53 = (void *)MEMORY[0x23B8615C4](v25);
      if (v53)
      {
        v54 = v53;
        v55 = objc_msgSend(v53, sel_serialQueue);

        aBlock[4] = nullsub_1;
        aBlock[5] = 0;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_23AA698FC;
        aBlock[3] = &block_descriptor_1168;
        v56 = _Block_copy(aBlock);
        v57 = v68;
        sub_23B1C6068();
        v81 = MEMORY[0x24BEE4AF8];
        sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
        sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
        v59 = v71;
        v58 = v72;
        sub_23B1C6DE8();
        MEMORY[0x23B85F470](0, v57, v59, v56);
        _Block_release(v56);

        (*(void (**)(char *, uint64_t))(v67 + 8))(v59, v58);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v57, v70);
      }
    }
    v60 = *(void **)&v44[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
    v61 = *(void **)&v44[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
    v62 = (_QWORD *)swift_allocObject();
    v62[2] = v44;
    v62[3] = sub_23ACFF940;
    v63 = v75;
    v62[4] = v76;
    v62[5] = sub_23ACEA970;
    v62[6] = v63;
    v64 = v44;
    swift_retain();
    swift_retain();
    sub_23AA81A30((uint64_t)"trashItem(at:request:completionHandler:)", 40, 2, v60, v61, (uint64_t)sub_23AAB92FC, (uint64_t)v62);
    swift_release();

    swift_release_n();
    swift_release();
    goto LABEL_15;
  }
  if ((objc_msgSend(v42, sel_unableToStartup) & 1) == 0)
  {

    goto LABEL_9;
  }
  v46 = sub_23AC61E18();
  v47 = (uint64_t)v74;
  v48 = v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v74, 1, 1, v38);
  v49 = v73;
  sub_23AA8EFC8(v47, v73, (uint64_t *)&unk_2542E6740);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v49, 1, v48) == 1)
  {
    v50 = 0;
  }
  else
  {
    v50 = (void *)sub_23B1C5954();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v49, v48);
  }
  v66 = (void *)sub_23B1C5870();
  v43[2](v43, v50, v66);

  sub_23AA8A05C(v47, (uint64_t *)&unk_2542E6740);
  swift_release();

  swift_release_n();
  swift_release();

}

uint64_t sub_23ACED67C(uint64_t a1, _BYTE *a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  _BYTE *v34;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD aBlock[6];

  v6 = sub_23B1C602C();
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C60A4();
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v38 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5A08();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_23AC052B4;
  *(_QWORD *)(v15 + 24) = v14;
  v44 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v16 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = (v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v16, v13, v10);
  v19 = (_QWORD *)(v18 + v17);
  *v19 = sub_23AC052B4;
  v19[1] = v14;
  v20 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v21 = (void *)MEMORY[0x23B8615C4](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  if (v21)
  {
    if (objc_msgSend(v21, sel_unableToStartup))
    {
      v22 = sub_23AC61E18();
      v23 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, void *))a3)[2](a3, v23);

      swift_release();
      swift_release();

      goto LABEL_9;
    }

  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v24 = (void *)MEMORY[0x23B8615C4](v20);
    if (v24)
    {
      v25 = v24;
      v37 = objc_msgSend(v24, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_1150;
      v26 = _Block_copy(aBlock);
      v27 = v38;
      sub_23B1C6068();
      v45 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      v28 = v41;
      v29 = v43;
      sub_23B1C6DE8();
      v30 = v37;
      MEMORY[0x23B85F470](0, v27, v28, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v40);
    }
  }
  v31 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v32 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v33 = (_QWORD *)swift_allocObject();
  v33[2] = a2;
  v33[3] = sub_23AA8A65C;
  v33[4] = v44;
  v33[5] = sub_23ACEA97C;
  v33[6] = v18;
  v34 = a2;
  swift_retain();
  swift_retain();
  sub_23AA81A30((uint64_t)"resolveConflict(at:completionHandler:)", 38, 2, v31, v32, (uint64_t)sub_23AAB92FC, (uint64_t)v33);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  return swift_release();
}

uint64_t sub_23ACEDABC(uint64_t a1, char a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v14;
  _OWORD v15[2];
  __int128 v16;
  __int128 v17;
  _OWORD v18[2];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v2 = MEMORY[0x24BEE4AF8];
  if ((a2 & 1) == 0)
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)FPGSStorageManager), sel_init);
    v4 = (void *)sub_23B1C5954();
    *(_QWORD *)&v18[0] = 0;
    v5 = objc_msgSend(v3, sel_permanentStorageForItemAtURL_allocateIfNone_error_, v4, 0, v18);

    if (v5)
    {
      v6 = *MEMORY[0x24BE3AE60];
      v7 = *(id *)&v18[0];
      v8 = objc_msgSend(v5, sel_enumeratorForAdditionsInNameSpace_withOptions_withoutOptions_ordering_, v6, 0, 0, 0);
      v14 = v2;
      if (v8)
      {
        v9 = v8;
        while (1)
        {
          if (objc_msgSend(v9, sel_nextObject, v14))
          {
            sub_23B1C6D7C();
            swift_unknownObjectRelease();
          }
          else
          {
            memset(v15, 0, sizeof(v15));
          }
          sub_23AA724E8((uint64_t)v15, (uint64_t)&v16, qword_2542E5640);
          if (!*((_QWORD *)&v17 + 1))
            break;
          sub_23AAA159C(&v16, v18);
          sub_23AAA15AC((uint64_t)v18, (uint64_t)&v16);
          sub_23AA9F52C(0, (unint64_t *)&qword_2569E3200);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v10 = *(id *)&v15[0];
            MEMORY[0x23B85F008]();
            if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_23B1C6740();
            sub_23B1C6788();
            sub_23B1C671C();

          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
        }

      }
      else
      {
        v16 = 0u;
        v17 = 0u;
      }

      sub_23AA8A05C((uint64_t)&v16, qword_2542E5640);
      return v14;
    }
    else
    {
      v11 = *(id *)&v18[0];
      v12 = (void *)sub_23B1C587C();

      swift_willThrow();
    }
  }
  return v2;
}

uint64_t sub_23ACEDD5C(void *a1, char *a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  void *v33;
  id v34;
  char *v35;
  void *v36;
  void *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  void *v43;
  void *v44;
  _QWORD *v45;
  char *v46;
  void *v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 aBlock;
  __int128 v59;
  uint64_t (*v60)(_QWORD);
  uint64_t v61;

  v6 = sub_23B1C602C();
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C60A4();
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v50 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  _Block_copy(a3);
  v11 = a1;
  v12 = sub_23AFEC570((uint64_t)a1);
  v13 = (void *)sub_23B1C5870();
  v14 = objc_msgSend(v13, sel_userInfo);

  v15 = sub_23B1C620C();
  if (!*(_QWORD *)(v15 + 16) || (v16 = sub_23AAAF4C4(0xD00000000000001FLL, 0x800000023B1FD9D0), (v17 & 1) == 0))
  {
    aBlock = 0u;
    v59 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_23AAA15AC(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v59 + 1))
  {
LABEL_8:
    sub_23AA8A05C((uint64_t)&aBlock, qword_2542E5640);
    v18 = 0;
    goto LABEL_9;
  }
  if (swift_dynamicCast())
    v18 = v57;
  else
    v18 = 0;
LABEL_9:
  v19 = (void *)sub_23B1C5870();
  v20 = objc_msgSend(v19, sel_userInfo);

  v21 = sub_23B1C620C();
  v22 = sub_23B1C63E0();
  if (*(_QWORD *)(v21 + 16) && (v24 = sub_23AAAF4C4(v22, v23), (v25 & 1) != 0))
  {
    sub_23AAA15AC(*(_QWORD *)(v21 + 56) + 32 * v24, (uint64_t)&aBlock);
  }
  else
  {
    aBlock = 0u;
    v59 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v59 + 1))
  {
    sub_23AA8A05C((uint64_t)&aBlock, qword_2542E5640);
    v27 = 0;
    v28 = 0;
    if (v12)
      goto LABEL_21;
LABEL_24:
    if (!v18)
    {
      swift_bridgeObjectRelease();
      a3[2](a3, 0);
      return swift_release();
    }
    goto LABEL_25;
  }
  v26 = swift_dynamicCast();
  if (v26)
    v27 = v56;
  else
    v27 = 0;
  if (v26)
    v28 = v57;
  else
    v28 = 0;
  if (!v12)
    goto LABEL_24;
LABEL_21:
  if (!v18)
  {
    v29 = 0;
    goto LABEL_26;
  }
LABEL_25:
  v30 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v29 = sub_23AAB7B40(v30);
LABEL_26:
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_23AC052B4;
  *(_QWORD *)(v31 + 24) = v10;
  *(_QWORD *)(v31 + 32) = a2;
  *(_BYTE *)(v31 + 40) = v12;
  *(_QWORD *)(v31 + 48) = v27;
  *(_QWORD *)(v31 + 56) = v28;
  *(_QWORD *)(v31 + 64) = v29;
  *(_QWORD *)(v31 + 72) = a1;
  v32 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v33 = (void *)MEMORY[0x23B8615C4](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  v34 = a1;
  swift_retain();
  if (v33)
  {
    swift_retain();
    a2;
    if ((objc_msgSend(v33, sel_unableToStartup) & 1) != 0)
    {

      swift_release();
      swift_release();

      return swift_release();
    }

  }
  else
  {
    swift_retain();
    v35 = a2;
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v36 = (void *)MEMORY[0x23B8615C4](v32);
    if (v36)
    {
      v37 = v36;
      v49 = objc_msgSend(v36, sel_serialQueue);

      v60 = nullsub_1;
      v61 = 0;
      *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v59 = sub_23AA698FC;
      *((_QWORD *)&v59 + 1) = &block_descriptor_1080;
      v48 = _Block_copy(&aBlock);
      v38 = v50;
      sub_23B1C6068();
      v56 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      v39 = v53;
      v40 = v55;
      sub_23B1C6DE8();
      v42 = v48;
      v41 = v49;
      MEMORY[0x23B85F470](0, v38, v39, v48);
      _Block_release(v42);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v40);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v52);
    }
  }
  v43 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v44 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v45 = (_QWORD *)swift_allocObject();
  v45[2] = a2;
  v45[3] = nullsub_1;
  v45[4] = 0;
  v45[5] = sub_23ACEAB28;
  v45[6] = v31;
  v46 = a2;
  swift_retain();
  sub_23AA81A30((uint64_t)"signalErrorResolved(_:completionHandler:)", 41, 2, v43, v44, (uint64_t)sub_23AAB92FC, (uint64_t)v45);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23ACEE354(char a1, _BYTE *a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  const void *v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  _BYTE *v26;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v6 = sub_23B1C602C();
  v32 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C60A4();
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a3;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23AC052B4;
  *(_QWORD *)(v13 + 24) = v12;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_23AC052B4;
  *(_QWORD *)(v14 + 24) = v12;
  *(_BYTE *)(v14 + 32) = a1;
  v15 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v16 = (void *)MEMORY[0x23B8615C4](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      v17 = sub_23AC61E18();
      v18 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, void *))a3)[2](a3, v18);

      swift_release();
      swift_release();

      return swift_release_n();
    }

  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v19 = (void *)MEMORY[0x23B8615C4](v15);
    if (v19)
    {
      v20 = v19;
      v29 = objc_msgSend(v19, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_1065;
      v28 = _Block_copy(aBlock);
      sub_23B1C6068();
      v33 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      sub_23B1C6DE8();
      v22 = v28;
      v21 = v29;
      MEMORY[0x23B85F470](0, v11, v8, v28);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
    }
  }
  v23 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v24 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a2;
  v25[3] = sub_23AA8A65C;
  v25[4] = v13;
  v25[5] = sub_23ACFEA68;
  v25[6] = v14;
  v26 = a2;
  swift_retain();
  swift_retain();
  sub_23AA81A30((uint64_t)"updateShouldRetryThrottledOperations(_:completionHandler:)", 58, 2, v23, v24, (uint64_t)sub_23AAB92FC, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_23ACEE704(uint64_t a1, _BYTE *a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  _BYTE *v27;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v6 = sub_23B1C602C();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C60A4();
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a3;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23AC052B4;
  *(_QWORD *)(v13 + 24) = v12;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = sub_23AC052B4;
  v14[4] = v12;
  v15 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v16 = (void *)MEMORY[0x23B8615C4](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  swift_unknownObjectRetain();
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      v17 = sub_23AC61E18();
      v18 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, void *))a3)[2](a3, v18);

      swift_release();
      swift_release();

      return swift_release_n();
    }

  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v19 = (void *)MEMORY[0x23B8615C4](v15);
    if (v19)
    {
      v20 = v19;
      v29 = objc_msgSend(v19, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_1013;
      v21 = _Block_copy(aBlock);
      sub_23B1C6068();
      v34 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      v22 = v33;
      sub_23B1C6DE8();
      v23 = v29;
      MEMORY[0x23B85F470](0, v11, v8, v21);
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v22);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
    }
  }
  v24 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v25 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = a2;
  v26[3] = sub_23AA8A65C;
  v26[4] = v13;
  v26[5] = sub_23ACFEA64;
  v26[6] = v14;
  v27 = a2;
  swift_retain();
  swift_retain();
  sub_23AA81A30((uint64_t)"subscribe(toUploadProgressUpdates:completionHandler:)", 53, 2, v24, v25, (uint64_t)sub_23AAB92FC, (uint64_t)v26);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_23ACEEABC(uint64_t a1, _BYTE *a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  _BYTE *v27;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v6 = sub_23B1C602C();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C60A4();
  v30 = *(_QWORD *)(v9 - 8);
  v31 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a3;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23AC052B4;
  *(_QWORD *)(v13 + 24) = v12;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = sub_23AC052B4;
  v14[4] = v12;
  v15 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v16 = (void *)MEMORY[0x23B8615C4](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  swift_unknownObjectRetain();
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      v17 = sub_23AC61E18();
      v18 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, void *))a3)[2](a3, v18);

      swift_release();
      swift_release();

      return swift_release_n();
    }

  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v19 = (void *)MEMORY[0x23B8615C4](v15);
    if (v19)
    {
      v20 = v19;
      v29 = objc_msgSend(v19, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_994;
      v21 = _Block_copy(aBlock);
      sub_23B1C6068();
      v34 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      v22 = v33;
      sub_23B1C6DE8();
      v23 = v29;
      MEMORY[0x23B85F470](0, v11, v8, v21);
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v22);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
    }
  }
  v24 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v25 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = a2;
  v26[3] = sub_23AA8A65C;
  v26[4] = v13;
  v26[5] = sub_23ACFEA60;
  v26[6] = v14;
  v27 = a2;
  swift_retain();
  swift_retain();
  sub_23AA81A30((uint64_t)"subscribe(toDownloadProgressUpdates:completionHandler:)", 55, 2, v24, v25, (uint64_t)sub_23AAB92FC, (uint64_t)v26);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_23ACEEE74(_BYTE *a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  const void *v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  _BYTE *v24;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v4 = sub_23B1C602C();
  v30 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C60A4();
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23AC052B4;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_23AC052B4;
  *(_QWORD *)(v12 + 24) = v10;
  v13 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v14 = (void *)MEMORY[0x23B8615C4](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a2);
  if (v14)
  {
    if (objc_msgSend(v14, sel_unableToStartup))
    {
      v15 = sub_23AC61E18();
      v16 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, void *))a2)[2](a2, v16);

      swift_release();
      swift_release();

      return swift_release_n();
    }

  }
  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v17 = (void *)MEMORY[0x23B8615C4](v13);
    if (v17)
    {
      v18 = v17;
      v27 = objc_msgSend(v17, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_964;
      v26 = _Block_copy(aBlock);
      sub_23B1C6068();
      v31 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      sub_23B1C6DE8();
      v20 = v26;
      v19 = v27;
      MEMORY[0x23B85F470](0, v9, v6, v26);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    }
  }
  v21 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v22 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a1;
  v23[3] = sub_23AA8A65C;
  v23[4] = v11;
  v23[5] = sub_23ACFF938;
  v23[6] = v12;
  v24 = a1;
  swift_retain();
  swift_retain();
  sub_23AA81A30((uint64_t)"resetCounters(completionHandler:)", 33, 2, v21, v22, (uint64_t)sub_23AAB92FC, (uint64_t)v23);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_23ACEF21C(_BYTE *a1, void (**a2)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  _BYTE *v26;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v4 = sub_23B1C602C();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C60A4();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23ACF02D8;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_23ACFEA30;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = sub_23ACFEA30;
  v13[3] = v11;
  v13[4] = sub_23ACF02D8;
  v13[5] = v10;
  v14 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v15 = (void *)MEMORY[0x23B8615C4](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_retain_n();
  _Block_copy(a2);
  if (v15)
  {
    if (objc_msgSend(v15, sel_unableToStartup))
    {
      v16 = sub_23AC61E18();
      v17 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, _QWORD, void *))a2)[2](a2, 0, v17);

      swift_release();
      swift_release();

      goto LABEL_9;
    }

  }
  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v18 = (void *)MEMORY[0x23B8615C4](v14);
    if (v18)
    {
      v19 = v18;
      v30 = objc_msgSend(v18, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_945;
      v29 = _Block_copy(aBlock);
      sub_23B1C6068();
      v35 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      v20 = v34;
      sub_23B1C6DE8();
      v22 = v29;
      v21 = v30;
      MEMORY[0x23B85F470](0, v9, v6, v29);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v20);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
    }
  }
  v23 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v24 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a1;
  v25[3] = sub_23AA8A65C;
  v25[4] = v12;
  v25[5] = sub_23ACFEA94;
  v25[6] = v13;
  v26 = a1;
  swift_retain();
  swift_retain();
  sub_23AA81A30((uint64_t)"hasNonUploadedFiles(completionHandler:)", 39, 2, v23, v24, (uint64_t)sub_23AAB92FC, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release_n();
  return swift_release_n();
}

uint64_t sub_23ACEF608(void *a1, void (*a2)(uint64_t, uint64_t, id, _QWORD), uint64_t a3, _BYTE *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t result;
  void (*v26)(uint64_t, uint64_t, id, _QWORD);
  unint64_t v27;
  unint64_t v28;
  char *v29;
  void *v30;
  char *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  _BYTE *v48;

  v46 = a6;
  v47 = a8;
  v48 = a4;
  v15 = sub_23B1C5A08();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    v44 = a9;
    v45 = a10;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v15);
    v27 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v28 = (v17 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v29 = (char *)swift_allocObject();
    *((_QWORD *)v29 + 2) = a5;
    *((_QWORD *)v29 + 3) = a2;
    v43 = a5;
    v30 = v46;
    *((_QWORD *)v29 + 4) = a3;
    *((_QWORD *)v29 + 5) = v30;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v29[v27], v18, v15);
    *(_QWORD *)&v29[v28] = v47;
    v31 = &v29[(v28 + 15) & 0xFFFFFFFFFFFFFFF8];
    v32 = v45;
    *(_QWORD *)v31 = v44;
    *((_QWORD *)v31 + 1) = v32;
    swift_retain_n();
    v33 = v43;
    v34 = v30;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23ACE1720((uint64_t)"fetchLatestVersion(for:request:completionHandler:)", 50, 2, (uint64_t)sub_23ACF2714, (uint64_t)v29, v48, (void (*)(_QWORD, _QWORD, _QWORD, id))a2, a3);
    swift_release();
    return swift_release_n();
  }
  v22 = a1;
  v23 = objc_msgSend(v22, "url");
  if (!v23)
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v21, 1, 1, v15);
    goto LABEL_12;
  }
  v24 = v23;
  sub_23B1C59CC();

  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v18, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15);
  if ((_DWORD)result == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  sub_23AA9F52C(0, (unint64_t *)&unk_2542E1F90);
  v26 = a2;
  v35 = sub_23AAB60B8((uint64_t)v21, 1);
  v36 = objc_msgSend(v22, sel_name);
  if (v36)
  {
    v37 = v36;
    v38 = sub_23B1C63E0();
    v40 = v39;

  }
  else
  {
    v38 = 0;
    v40 = 0;
  }
  v41 = v35;
  v26(v38, v40, v35, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_23ACEF948(_BYTE *a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  const void *v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  _BYTE *v24;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v4 = sub_23B1C602C();
  v30 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C60A4();
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23AC052B4;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_23AC052B4;
  *(_QWORD *)(v12 + 24) = v10;
  v13 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v14 = (void *)MEMORY[0x23B8615C4](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a2);
  if (v14)
  {
    if (objc_msgSend(v14, sel_unableToStartup))
    {
      v15 = sub_23AC61E18();
      v16 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, void *))a2)[2](a2, v16);

      swift_release();
      swift_release();

      return swift_release_n();
    }

  }
  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v17 = (void *)MEMORY[0x23B8615C4](v13);
    if (v17)
    {
      v18 = v17;
      v27 = objc_msgSend(v17, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_858;
      v26 = _Block_copy(aBlock);
      sub_23B1C6068();
      v31 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      sub_23B1C6DE8();
      v20 = v26;
      v19 = v27;
      MEMORY[0x23B85F470](0, v9, v6, v26);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    }
  }
  v21 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v22 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a1;
  v23[3] = sub_23AA8A65C;
  v23[4] = v11;
  v23[5] = sub_23ACFF934;
  v23[6] = v12;
  v24 = a1;
  swift_retain();
  swift_retain();
  sub_23AA81A30((uint64_t)"disableDBQueryStatistics(completionHandler:)", 44, 2, v21, v22, (uint64_t)sub_23AAB92FC, (uint64_t)v23);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_23ACEFCF0(_BYTE *a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  const void *v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  _BYTE *v24;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v4 = sub_23B1C602C();
  v30 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23B1C60A4();
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_23AC04714;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_23AC04714;
  *(_QWORD *)(v12 + 24) = v10;
  v13 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  v14 = (void *)MEMORY[0x23B8615C4](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a2);
  if (v14)
  {
    if (objc_msgSend(v14, sel_unableToStartup))
    {
      v15 = sub_23AC61E18();
      v16 = (void *)sub_23B1C5870();
      ((void (**)(_QWORD, void *))a2)[2](a2, v16);

      swift_release();
      swift_release();

      return swift_release_n();
    }

  }
  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    v17 = (void *)MEMORY[0x23B8615C4](v13);
    if (v17)
    {
      v18 = v17;
      v27 = objc_msgSend(v17, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23AA698FC;
      aBlock[3] = &block_descriptor_839;
      v26 = _Block_copy(aBlock);
      sub_23B1C6068();
      v31 = MEMORY[0x24BEE4AF8];
      sub_23AA7E38C((unint64_t *)&unk_2542E43B0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7470);
      sub_23AAB5A28((unint64_t *)&qword_2542E7480, (uint64_t *)&unk_2542E7470, MEMORY[0x24BEE12C8]);
      sub_23B1C6DE8();
      v20 = v26;
      v19 = v27;
      MEMORY[0x23B85F470](0, v9, v6, v26);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    }
  }
  v21 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  v22 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a1;
  v23[3] = sub_23AA8A65C;
  v23[4] = v11;
  v23[5] = sub_23ACFF930;
  v23[6] = v12;
  v24 = a1;
  swift_retain();
  swift_retain();
  sub_23AA81A30((uint64_t)"resetDBQueryStatistics(completionHandler:)", 42, 2, v21, v22, (uint64_t)sub_23AAB92FC, (uint64_t)v23);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

void sub_23ACF00A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_23ACC7F3C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t objectdestroy_778Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23ACF0128(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C5A08() - 8) + 80);
  return sub_23ACC61D0(a1, a2, *(void (**)(_QWORD, _QWORD, _QWORD, id))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), v2 + ((v5 + 40) & ~v5));
}

uint64_t sub_23ACF0180(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_23ACC32AC(a1, a2, *(void (**)(_QWORD, id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE **)(v2 + 32), *(_QWORD *)(v2 + 40), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF01EC(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23ACC1DD8(a1, a2, *(void (**)(_QWORD, id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE **)(v2 + 32), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

void sub_23ACF0280(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23ACC1B7C(a1, a2, *(_QWORD *)(v2 + 16), &qword_2569E3070);
}

uint64_t sub_23ACF02A8()
{
  return objectdestroy_656Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23ACF02B8()
{
  return objectdestroy_278Tm();
}

uint64_t sub_23ACF02C0()
{
  return objectdestroy_278Tm();
}

uint64_t sub_23ACF02C8()
{
  return objectdestroy_239Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF02D8(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_23B0BB6A0(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_23ACF02EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23ACBE168(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23ACF02F4()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_23ACF0308()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23ACF032C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF0350()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

void sub_23ACF0364(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23ACBC538(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23ACF036C()
{
  return objectdestroy_656Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23ACF037C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_23AA9F52C(255, a2);
    result = MEMORY[0x23B8613CC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23ACF03BC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23ACC1B7C(a1, a2, *(_QWORD *)(v2 + 16), (unint64_t *)&unk_2569E3078);
}

uint64_t sub_23ACF03E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_623Tm()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF0458(uint64_t a1)
{
  uint64_t v1;

  return sub_23ACB90E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_BYTE *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(void **)(v1 + 72));
}

void sub_23ACF0494(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  sub_23ACB7E3C(a1, a2, a3, *(_QWORD *)(v3 + 16), (unint64_t *)&unk_2569E3090);
}

void sub_23ACF04C0(void *a1, char a2)
{
  uint64_t v2;

  sub_23ACB7A8C(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD, _QWORD, id))(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_23ACF04DC()
{
  return objectdestroy_88Tm();
}

void sub_23ACF04E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_23ACB747C(a1, a2, a3, a4, a5, a6, a7, a8, *(_QWORD *)(v8 + 16));
}

void sub_23ACF0508(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  sub_23ACB7E3C(a1, a2, a3, *(_QWORD *)(v3 + 16), (unint64_t *)&unk_2569E30A0);
}

uint64_t objectdestroy_572Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_23ACF05C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23ACB5BFC(a1, v1 + v4, *(void (**)(_QWORD, _QWORD, id))(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(void **)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t objectdestroy_548Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF06D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23ACB3500(a1, v1 + v4, *(void (**)(char *, id))(v1 + v5), *(void (**)(char *, id))(v1 + v5 + 8), *(void **)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

void sub_23ACF0748(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23ACB2DF4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23ACF0750()
{
  return objectdestroy_278Tm();
}

uint64_t objectdestroy_487Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF0794()
{
  return objectdestroy_457Tm();
}

uint64_t sub_23ACF07A0()
{
  return objectdestroy_457Tm();
}

uint64_t objectdestroy_457Tm()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  sub_23AC03BE4(*(_QWORD *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t objectdestroy_440Tm()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF0838()
{
  return objectdestroy_239Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF0848()
{
  return objectdestroy_239Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_419Tm()
{
  id *v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF08A0(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC9C7A0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56), *(_QWORD *)(v1 + 64), *(void **)(v1 + 72));
}

uint64_t sub_23ACF08D4()
{
  return objectdestroy_239Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF08E4(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC98964(a1, *(void (**)(id))(v1 + 16), *(char **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(_BYTE *)(v1 + 48));
}

void sub_23ACF08F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23AC96594(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23ACF0900()
{
  return objectdestroy_239Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF0910(uint64_t a1)
{
  uint64_t v1;

  sub_23AC95D4C(a1, *(_QWORD *)(v1 + 16));
}

void sub_23ACF0920(uint64_t a1)
{
  uint64_t v1;

  sub_23AC9115C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23ACF0928()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23ACF0934()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_23ACF0948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23AC90B58(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t objectdestroy_341Tm()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23ACF0990(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC90038(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_BYTE *)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t objectdestroy_335Tm()
{
  id *v0;

  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23ACF09F8(uint64_t a1)
{
  uint64_t v1;

  return sub_23AA7AB68(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_23ACF0A10(uint64_t a1, uint64_t a2)
{
  return sub_23AC04D34(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC8F75C);
}

uint64_t sub_23ACF0A20()
{
  return objectdestroy_88Tm();
}

uint64_t sub_23ACF0A28()
{
  return objectdestroy_44Tm();
}

uint64_t sub_23ACF0A38(char a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v2 + 16) + 16))(*(_QWORD *)(v2 + 16), a1 & 1, a2);
}

uint64_t sub_23ACF0A50()
{
  return objectdestroy_278Tm();
}

void sub_23ACF0A5C(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v8;

  sub_23AC89644(a8, a1, a2, a3, a4, a5, a6, a7, *(_QWORD *)(v8 + 16));
}

uint64_t sub_23ACF0A64()
{
  return objectdestroy_239Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF0A78()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_23ACF0A8C()
{
  return objectdestroy_239Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF0AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23AC8451C(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_23ACF0AA8()
{
  return objectdestroy_88Tm();
}

uint64_t sub_23ACF0AB0(uint64_t a1)
{
  uint64_t v1;

  return sub_23AAB8FB8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(unsigned __int8 *)(v1 + 49));
}

uint64_t objectdestroy_210Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_196Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF0B38(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC82A28(a1, *(unsigned int *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void (**)(id))(v1 + 40), *(char **)(v1 + 48));
}

uint64_t objectdestroy_189Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_23ACF0BF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AC821F4(a1, v1 + v4, *(void (**)(_QWORD, void *))(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(unsigned int *)(v1 + ((v5 + 19) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v5 + 19) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((((v5 + 19) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_179Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF0D18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AC81870(a1, *(void **)(v1 + 16), v1 + v4, *(void **)(v1 + v5), *(void (**)(void))(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23ACF0D80()
{
  return objectdestroy_1628Tm((void (*)(_QWORD))MEMORY[0x24BDAC738]);
}

uint64_t sub_23ACF0D8C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23ACFEA88;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_2569E30B0 + dword_2569E30B0))(v2, v3, v4);
}

uint64_t sub_23ACF0DF8()
{
  return objectdestroy_1632Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_23ACF0E04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23ACFEA88;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2569E30C0 + dword_2569E30C0))(v2, v3, v4);
}

uint64_t sub_23ACF0E7C()
{
  return objectdestroy_1632Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_23ACF0E88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23ACFEA88;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2569E30D0 + dword_2569E30D0))(a1, v4, v5, v6);
}

uint64_t sub_23ACF0F0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23ACFEA88;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2569E30E0 + dword_2569E30E0))(a1, v4);
}

void sub_23ACF0F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23AC80BBC(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t objectdestroy_171Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_23B1C5A08();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  v8 = v0 + v3;
  v9 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_23ACF1080(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C5A08() - 8) + 80);
  return sub_23AC8035C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), v1 + ((v5 + v6 + 16) & ~v6));
}

void sub_23ACF1100(uint64_t a1)
{
  uint64_t v1;

  sub_23AC65F00(a1, *(void (**)(id *, char *, uint64_t))(v1 + 16));
}

uint64_t sub_23ACF110C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AC2D0CC(*(_QWORD *)(v1 + 16), *(char **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t objectdestroy_145Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = v0 + v3;
  v5 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

uint64_t sub_23ACF11C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8)
                          + 80);
  return sub_23AC7C0F4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t objectdestroy_148Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v4 + v6 + 8) & ~v6;
  v8 = v0 + v3;
  v9 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  v10 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v0 + v7, v10);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF130C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_23AC7C1D4(a1, v1 + v4, *(_QWORD *)(v1 + v5), v1 + v7, *(uint64_t (**)(uint64_t))(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_155Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(unint64_t, uint64_t);

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (((v4 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  v8 = (*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80) + v6 + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  swift_release();

  v9 = v0 + v3;
  v10 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + v4);

  v10(v0 + v8, v1);
  return swift_deallocObject();
}

uint64_t sub_23ACF14B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 39) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8)
                          + 80);
  return sub_23AC7C35C(a1, *(void (**)(id))(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), v1 + v4, v1 + v5, *(void (**)(char *, uint64_t, uint64_t))(v1 + v6), *(void **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), v1 + ((v7 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7));
}

uint64_t objectdestroy_127Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF1630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AC7974C(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(void (**)(uint64_t, _QWORD))(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(uint8_t **)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF1694(uint64_t a1)
{
  uint64_t v1;

  return sub_23ACB3450(a1, *(void (**)(char *, uint64_t))(v1 + 16));
}

uint64_t sub_23ACF16B0()
{
  return objectdestroy_44Tm();
}

uint64_t sub_23ACF16BC()
{
  return objectdestroy_88Tm();
}

uint64_t objectdestroy_74Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_58Tm()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23ACF1740()
{
  return objectdestroy_44Tm();
}

uint64_t sub_23ACF174C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23AC66990(a1, a2, a3, *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v3 + 16));
}

uint64_t sub_23ACF1754()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF1790()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23ACF17B4()
{
  return objectdestroy_1892Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF17C4()
{
  return sub_23AA85308((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC6710C);
}

uint64_t sub_23ACF17D0(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC672C0(a1, *(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), *(char **)(v1 + 32), *(_QWORD **)(v1 + 40), *(uint64_t **)(v1 + 48));
}

uint64_t sub_23ACF17F0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit();
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  return a2;
}

uint64_t sub_23ACF1828(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

void sub_23ACF184C(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0)

}

uint64_t sub_23ACF1864(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC5F410(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23ACF186C()
{
  return objectdestroy_239Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

id sub_23ACF187C()
{
  uint64_t v0;

  return sub_23AC5F474(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

unint64_t sub_23ACF1888(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return (unint64_t)(id)(result & 0x3FFFFFFFFFFFFFFFLL);
  return result;
}

uint64_t sub_23ACF18A0()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

void sub_23ACF18C4()
{
  uint64_t v0;

  sub_23AC5FAC0(v0, &OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_enumerationAnchorChangedSource);
}

void sub_23ACF18E4()
{
  uint64_t v0;

  sub_23AC5FAC0(v0, &OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_itemsChangedSource);
}

uint64_t sub_23ACF1904(uint64_t a1, uint64_t a2)
{
  return sub_23AC5FB24(a1, a2);
}

uint64_t sub_23ACF191C()
{
  return sub_23AC5FE74();
}

void sub_23ACF1924()
{
  uint64_t v0;

  sub_23AC5FF20(v0);
}

void sub_23ACF192C()
{
  uint64_t v0;

  sub_23AC60014(v0);
}

uint64_t sub_23ACF1934()
{
  return objectdestroy_1924Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF1940()
{
  uint64_t v0;

  sub_23AC60064(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_23ACF1948(char a1)
{
  uint64_t v1;

  sub_23AC60314(a1 & 1, v1);
}

uint64_t sub_23ACF1954()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

void sub_23ACF1998()
{
  uint64_t v0;

  sub_23AC60AB0(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ACF19B0()
{
  uint64_t v0;

  return sub_23AC6081C(v0);
}

uint64_t sub_23ACF19B8()
{
  return swift_release();
}

uint64_t sub_23ACF19C8()
{
  uint64_t v0;

  return sub_23AC8A508(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_23ACF19E0(void *a1)
{
  uint64_t v1;

  sub_23AC8A7B0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t objectdestroy_1932Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE058) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);

  v4 = v0 + v2;
  v5 = (int *)type metadata accessor for FPDDomainFPFSBackend.PendingSetState(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v0 + v2, 1, v5))
  {
    v6 = sub_23B1C5C54();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v2, v6);
    v7 = v4 + v5[5];
    v8 = sub_23B1C5BDC();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v10(v7, v8);
    v11 = v4 + v5[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
      v10(v11, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v10(v4 + v5[13], v8);
  }

  return swift_deallocObject();
}

uint64_t sub_23ACF1B54()
{
  uint64_t v0;

  return sub_23AC60130(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ACF1B5C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;

  v1 = (int *)type metadata accessor for FPDDomainFPFSBackend.PendingSetState(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  v5 = v0 + v3;
  v6 = sub_23B1C5C54();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  v7 = v0 + v3 + v1[5];
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v11 = v0 + v3 + v1[6];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10(v5 + v1[13], v8);
  return swift_deallocObject();
}

uint64_t sub_23ACF1C98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for FPDDomainFPFSBackend.PendingSetState(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23AC8B404(*(double *)(v1 + 32), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF1CF8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;

  v1 = (int *)type metadata accessor for FPDDomainFPFSBackend.PendingSetState(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  v5 = v0 + v3;
  v6 = sub_23B1C5C54();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  v7 = v0 + v3 + v1[5];
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v11 = v0 + v3 + v1[6];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v10(v5 + v1[13], v8);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF1E48()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for FPDDomainFPFSBackend.PendingSetState(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AC8B5B8(*(char **)(v0 + 16), v0 + v2, *(char **)(v0 + v3), *(void (**)(uint64_t))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(double *)(v0 + 24));
}

uint64_t sub_23ACF1EB4(uint64_t a1)
{
  uint64_t v1;

  return sub_23AD035DC(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_23ACF1EC0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE058) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_23AC8A31C(*(char **)(v0 + 16), v0 + v2, *(void **)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF1F08()
{
  uint64_t v0;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_23ACF1F38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AC5FCCC(*(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), a1);
}

uint64_t sub_23ACF1F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_23ACF1FC8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23AC5A674(a1, v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_23ACF201C()
{
  uint64_t v0;

  sub_23AC59C48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), "database has already been dropped");
}

uint64_t sub_23ACF2040()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23ACF2064()
{
  uint64_t v0;

  sub_23AC59B80(*(_QWORD *)(v0 + 16), (uint64_t)sub_23ACF20E0);
}

uint64_t objectdestroy_1987Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_23ACF20BC()
{
  uint64_t v0;

  sub_23AC59C48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), "database was already dropped");
}

id sub_23ACF20E0()
{
  uint64_t v0;

  return sub_23ADD4FDC(v0);
}

uint64_t sub_23ACF20F8@<X0>(_DWORD *a1@<X8>)
{
  return sub_23AC516BC(a1);
}

unint64_t sub_23ACF2110(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1)
      return result;
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  return (unint64_t)(id)result;
}

void sub_23ACF212C(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1)
      return;
    a1 &= 0x3FFFFFFFFFFFFFFFuLL;
  }

}

void sub_23ACF2150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23AC68A9C(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_23ACF2160()
{
  id *v0;

  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_23ACF21BC()
{
  uint64_t v0;

  sub_23ABFBFB8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
}

uint64_t sub_23ACF21F0()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23ACF2200(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC912D8(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23ACF2210()
{
  return objectdestroy_2050Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23ACF221C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t result;

  v2 = *(uint64_t (**)(uint64_t))(v0 + 32);
  result = sub_23AA88520(*(_QWORD *)(v0 + 24));
  if (!v1)
    return v2(result);
  return result;
}

void sub_23ACF2260(unint64_t a1)
{
  uint64_t v1;

  sub_23ABF8C64(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_23ACF2268()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23ACF2274()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_23ACF229C()
{
  return objectdestroy_1632Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23ACF22A8(uint64_t a1)
{
  uint64_t *v1;

  return sub_23AC911C0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_23ACF22B8()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23ACF22C8()
{
  return sub_23ACFDAD8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACD4A2C);
}

uint64_t sub_23ACF22F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23ACF2314()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF2324()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_23ACF2348(void *a1)
{
  uint64_t v1;

  sub_23AC46A44(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_23ACF2354(void *a1)
{
  uint64_t v1;
  void (*v3)(_QWORD *);
  id v4;
  _QWORD v5[3];
  char v6;

  v3 = *(void (**)(_QWORD *))(v1 + 16);
  v5[1] = 0;
  v5[2] = 0;
  v5[0] = a1;
  v6 = 1;
  v4 = a1;
  v3(v5);

}

void sub_23ACF23A8(void *a1)
{
  uint64_t v1;
  void (*v3)(_QWORD *);
  id v4;
  _QWORD v5[4];
  char v6;

  v3 = *(void (**)(_QWORD *))(v1 + 16);
  v5[0] = a1;
  memset(&v5[1], 0, 24);
  v6 = 1;
  v4 = a1;
  v3(v5);

}

uint64_t sub_23ACF2404()
{
  return objectdestroy_1632Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF2410()
{
  uint64_t v0;

  sub_23ACC8D00(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(uint64_t, id))(v0 + 32));
}

uint64_t sub_23ACF2430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23ACF24B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C5A08() - 8) + 80);
  return sub_23ACC63A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), v1 + ((v3 + 64) & ~v3));
}

uint64_t sub_23ACF2504(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD *, uint64_t *, uint64_t);
  uint64_t v4;
  _QWORD v5[2];

  v2 = *(uint64_t (**)(_QWORD *, uint64_t *, uint64_t))(v1 + 16);
  v5[0] = 0;
  v5[1] = 0;
  v4 = 0;
  return v2(v5, &v4, a1);
}

uint64_t sub_23ACF2544(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(v3 + 16))(*a1, a1[1], *a2, a3);
}

uint64_t sub_23ACF2578()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23ACF259C()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF25A8(uint64_t *a1, void **a2, void *a3)
{
  uint64_t v3;

  sub_23ACD4A94(*a1, a1[1], *a2, a3, *(void (**)(_QWORD *, void **, id))(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_23ACF25C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, uint64_t *, uint64_t);
  uint64_t v7;
  _QWORD v8[2];

  v5 = *(uint64_t (**)(_QWORD *, uint64_t *, uint64_t))(v4 + 16);
  v8[0] = a1;
  v8[1] = a2;
  v7 = a3;
  return v5(v8, &v7, a4);
}

uint64_t sub_23ACF2604(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(v1 + 16))(0, 0, 0, a1);
}

uint64_t sub_23ACF2634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_23ACF26C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C5A08() - 8) + 80);
  sub_23ACC65D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(void (**)(uint64_t, uint64_t, id, id))(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(_BYTE **)(v0 + 64), (void *)(v0 + ((v1 + 72) & ~v1)));
}

uint64_t objectdestroy_2213Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23ACF27D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23ACC74B4(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23ACF2848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23ACF28F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23ACC767C(a1, *(void (**)(uint64_t, uint64_t, id, id))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23ACF295C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23ACF2990(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(__int128 *, uint64_t *, uint64_t);
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v2 = *(uint64_t (**)(__int128 *, uint64_t *, uint64_t))(v1 + 16);
  v3 = *(_QWORD *)(v1 + 48);
  v6 = *(_OWORD *)(v1 + 32);
  v5 = v3;
  return v2(&v6, &v5, a1);
}

uint64_t objectdestroy_775Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_23AC03BE4(*(_QWORD *)(v0 + v4));
  return swift_deallocObject();
}

uint64_t sub_23ACF2A74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23ACC3420(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF2ACC()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF2AD8(void **a1, void *a2)
{
  uint64_t v2;

  sub_23AC023E4(*a1, a2, *(void (**)(void **, id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_23ACF2AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_23AC03BE4(*(_QWORD *)(v0 + v4));
  swift_release();
  return swift_deallocObject();
}

void sub_23ACF2B9C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23ACC36B0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(_QWORD, id))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23ACF2C18()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF2C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + v4));
  return swift_deallocObject();
}

void sub_23ACF2D04(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_23ACC5338(a1, *(void (**)(_QWORD, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + v7), *(_QWORD *)(v1 + v7 + 8), *(_QWORD *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23ACF2DB8()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF2DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 56));
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_23ACF2E7C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23ACC42C8(a1, *(void (**)(_QWORD, void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), v1 + v4, *(_QWORD *)(v1 + v5), *(void **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF2F00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23ACF2F7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C5A08() - 8) + 80);
  return sub_23B1704E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v0 + ((v1 + 56) & ~v1));
}

uint64_t sub_23ACF2FB4()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF2FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 40));
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF308C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23ACC4530(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF311C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();

  sub_23AC03BE4(*(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

void sub_23ACF31F0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23ACC4970(a1, *(void (**)(_QWORD, void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), v1 + v4, *(void **)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF3288()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_23AC03BE4(*(_QWORD *)(v0 + 88));
  return swift_deallocObject();
}

void sub_23ACF32D4(void *a1)
{
  uint64_t v1;

  sub_23ACC4CF0(a1, *(void (**)(_QWORD, void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(void **)(v1 + 64), *(_QWORD *)(v1 + 72), *(_BYTE *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t objectdestroy_2261Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23ACF33A0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_23B171028(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF33EC()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF33F8()
{
  uint64_t v0;

  swift_release();
  swift_release();

  sub_23AC03BE4(*(_QWORD *)(v0 + 56));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF3444()
{
  uint64_t v0;

  return sub_23ACC4EAC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void (**)(id, _QWORD))(v0 + 80), *(unint64_t **)(v0 + 88));
}

uint64_t sub_23ACF347C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 72));
  return swift_deallocObject();
}

uint64_t sub_23ACF34C8()
{
  uint64_t v0;

  return sub_23ACC5648(*(unint64_t **)(v0 + 16), *(void (**)(_QWORD, id))(v0 + 24), *(void (**)(void *))(v0 + 32), *(void (**)(id, _QWORD))(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(_QWORD **)(v0 + 64), *(_QWORD *)(v0 + 72), *(uint64_t **)(v0 + 80), *(_BYTE *)(v0 + 88));
}

uint64_t sub_23ACF3504()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF3540(uint64_t a1)
{
  return sub_23AAB9308(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACC5AB4);
}

uint64_t sub_23ACF354C()
{
  uint64_t v0;

  sub_23AC03BE4(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23ACF3570(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 16))(0, a1);
}

uint64_t sub_23ACF3598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = (v4 + 7) & 0xFFFFFFFFFFFFF8;
  v6 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_23AC03BE4(*(_QWORD *)(v0 + v5));

  return swift_deallocObject();
}

void sub_23ACF3638(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_23AC74298(a1, *(void (**)(id, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(_QWORD *)(v1 + ((v4 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v4 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v1 + ((v4 + *(_QWORD *)(v3 + 64) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF36A4()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF36B4()
{
  return sub_23ACF3D48((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23AC74C48);
}

uint64_t sub_23ACF36D0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, uint64_t);
  unint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v23 = *(_QWORD *)(v2 + 64);
  v4 = sub_23B1C5A08();
  v5 = *(_QWORD *)(v4 - 8);
  v25 = *(unsigned __int8 *)(v5 + 80);
  v26 = v4;
  v24 = v3;
  v6 = v0 + v3;
  swift_bridgeObjectRelease();
  v7 = v0 + v3 + v1[7];
  v8 = (int *)type metadata accessor for ItemMetadata();
  v9 = v7 + v8[7];
  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10))
    v12(v13, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = (uint64_t *)(v7 + v8[33]);
  v15 = v14[1];
  if (v15 >> 60 != 15)
    sub_23AAAE53C(*v14, v15);
  swift_bridgeObjectRelease();
  v16 = v6 + v1[8];
  v17 = *(void **)(v16 + 16);
  if (v17 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v16 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v18 = v6 + v1[12];
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19)
    && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v18, 1, v26))
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v26);
  }
  v20 = (v23 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (((((v20 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_23AC03BE4(*(_QWORD *)(v0 + v20));
  swift_release();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v25 + v21 + 8) & ~v25), v26);
  return swift_deallocObject();
}

void sub_23ACF39A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C5A08() - 8) + 80);
  sub_23AC7526C(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(void (**)(_QWORD, void *))(v1 + v6), *(_QWORD *)(v1 + v6 + 8), *(_QWORD *)(v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), v1 + ((v7 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7));
}

uint64_t objectdestroy_2369Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v22 = *(_QWORD *)(v2 + 64);
  v25 = sub_23B1C5A08();
  v4 = *(_QWORD *)(v25 - 8);
  v24 = *(unsigned __int8 *)(v4 + 80);
  swift_release();
  v23 = v3;
  v5 = v0 + v3;
  swift_bridgeObjectRelease();
  v6 = v0 + v3 + v1[7];
  v7 = (int *)type metadata accessor for ItemMetadata();
  v8 = v6 + v7[7];
  v9 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[8], v9);
  swift_bridgeObjectRelease();
  v12 = v6 + v7[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)(v6 + v7[33]);
  v14 = v13[1];
  if (v14 >> 60 != 15)
    sub_23AAAE53C(*v13, v14);
  swift_bridgeObjectRelease();
  v15 = v5 + v1[8];
  v16 = *(void **)(v15 + 16);
  if (v16 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v15 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v17 = v5 + v1[12];
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18)
    && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v17, 1, v25))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v25);
  }
  v19 = (v22 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_23AC03BE4(*(_QWORD *)(v0 + v19));

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v24 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v24), v25);
  return swift_deallocObject();
}

uint64_t sub_23ACF3D2C()
{
  return sub_23ACF3D48((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_23AC758B0);
}

uint64_t sub_23ACF3D48(uint64_t (*a1)(_QWORD, unint64_t, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t))
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C5A08() - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v1 + ((v7 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7));
}

void sub_23ACF3DF0()
{
  uint64_t v0;

  sub_23ACD1F74(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void (**)(void))(v0 + 64));
}

uint64_t sub_23ACF3E18()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF3E28()
{
  uint64_t v0;

  return sub_23ACD1DC8(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_23ACF3E34()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF3E48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23ACC1F8C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF3ECC()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF3ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23AC03BE4(*(_QWORD *)(v0 + v4));
  return swift_deallocObject();
}

void sub_23ACF3FB0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_23ACC2244(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(_QWORD, void *))(v0 + 32), *(_QWORD *)(v0 + 40), v0 + v2, *(_QWORD *)(v0 + v3), *(void (**)(_QWORD, _QWORD))(v0 + v4), *(_QWORD *)(v0 + v4 + 8), *(_QWORD *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF4048(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  id v7;
  uint64_t v9;
  void *v10;

  v2 = *(void **)(a1 + 144);
  v3 = *(void **)(a1 + 152);
  v4 = *(_QWORD *)(a1 + 176);
  v5 = *(_QWORD *)(a1 + 184);
  v9 = *(_QWORD *)(a1 + 168);
  v10 = *(void **)(a1 + 224);
  v6 = *(_BYTE *)(a1 + 160);
  sub_23AAA7638(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_23AAAE478(v2, v3, v6);
  sub_23AAAE4B4(v9, v4, v5);
  v7 = v10;
  return a1;
}

uint64_t sub_23ACF410C(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v8;
  void *v9;

  v2 = *(void **)(a1 + 144);
  v3 = *(void **)(a1 + 152);
  v4 = *(_QWORD *)(a1 + 176);
  v5 = *(_QWORD *)(a1 + 184);
  v8 = *(_QWORD *)(a1 + 168);
  v9 = *(void **)(a1 + 224);
  v6 = *(_BYTE *)(a1 + 160);
  sub_23AAAEE68(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_23AAAEE10(v2, v3, v6);
  sub_23AAAEE4C(v8, v4, v5);

  return a1;
}

uint64_t sub_23ACF41D0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 56));
  swift_release();

  return swift_deallocObject();
}

void sub_23ACF4214(void *a1)
{
  uint64_t v1;

  sub_23ACC2A1C(a1, *(void (**)(_QWORD, void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(void **)(v1 + 80));
}

uint64_t sub_23ACF4248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23ACF42E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_23B16FDF4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), v0 + v2, *v3, v3[1]);
}

uint64_t sub_23ACF4334()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF4340()
{
  uint64_t v0;

  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 40));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF437C()
{
  return sub_23ACF5DE8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACC2BAC);
}

uint64_t sub_23ACF43A0(uint64_t a1, char a2)
{
  return sub_23ACF4900(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACC0ADC);
}

uint64_t sub_23ACF43B0()
{
  uint64_t v0;

  return sub_23AF3C540(*(_DWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void (**)(_QWORD, _QWORD))(v0 + 32));
}

uint64_t sub_23ACF43C0()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF43CC()
{
  uint64_t v0;

  return sub_23AC90A4C(*(void (**)(uint64_t, _QWORD))(v0 + 16));
}

uint64_t objectdestroy_2464Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF4418(uint64_t a1, char a2)
{
  return sub_23ACF4900(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACC1028);
}

uint64_t sub_23ACF4428()
{
  uint64_t v0;

  return sub_23AF3C6EC(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(void (**)(_QWORD, _QWORD))(v0 + 32));
}

uint64_t sub_23ACF4434()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF4470(uint64_t a1, char a2)
{
  return sub_23ACF4900(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACC1570);
}

uint64_t sub_23ACF447C()
{
  return objectdestroy_656Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF448C()
{
  uint64_t v0;

  sub_23B084130(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32));
}

void sub_23ACF44AC(void *a1, char a2)
{
  uint64_t v2;

  sub_23ACC186C(a1, a2 & 1, *(id *)(v2 + 16), *(NSObject **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_23ACF44C4(void *a1, char a2)
{
  uint64_t v2;

  sub_23ACC1258(a1, a2 & 1, *(id *)(v2 + 16), *(NSObject **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_23ACF44D4()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF44E4()
{
  uint64_t v0;

  sub_23B083D0C(*(_QWORD *)(v0 + 16), *(void (**)(void *, uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t objectdestroy_2493Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_23ACF4538(void *a1, char a2)
{
  uint64_t v2;

  sub_23ACC0D10(a1, a2 & 1, *(id *)(v2 + 16), *(NSObject **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t objectdestroy_738Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ACF4578()
{
  uint64_t v0;

  sub_23B083B84(*(_DWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(void *, uint64_t))(v0 + 32));
}

uint64_t sub_23ACF4598()
{
  return objectdestroy_278Tm();
}

void sub_23ACF45A0(uint64_t a1)
{
  uint64_t v1;

  sub_23ACBF7A0(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_23ACF45B0()
{
  return objectdestroy_656Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF45C0()
{
  uint64_t v0;

  return sub_23ACBFAC8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(_QWORD))(v0 + 32));
}

uint64_t sub_23ACF45DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23ACBFB84(*(void **)(v1 + 16), *(_QWORD **)(v1 + 24), a1);
}

uint64_t sub_23ACF45F4()
{
  return objectdestroy_44Tm();
}

void sub_23ACF45FC(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(v1 + 24);
  v3 = objc_msgSend(*(id *)(a1 + 32), sel_getAlternateContentsURLWrapperForItemID_, *(_QWORD *)(v1 + 16));
  v2();

}

uint64_t sub_23ACF4650()
{
  return objectdestroy_88Tm();
}

uint64_t objectdestroy_88Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF4698(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  v2 = v1[3];
  v3 = (uint64_t (*)(uint64_t, _QWORD))v1[4];
  objc_msgSend(*(id *)(a1 + 32), sel_setAlternateContentsURLWrapper_forDocumentWithItemID_, v1[2], v2);
  return v3(v2, 0);
}

uint64_t sub_23ACF46E4()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF46F4()
{
  uint64_t v0;

  return sub_23ACBEBE0(*(_QWORD *)(v0 + 16), *(uint64_t (**)(BOOL, _QWORD))(v0 + 24));
}

uint64_t type metadata accessor for FPDDomainFPFSBackend.Counters(uint64_t a1)
{
  return sub_23AA94094(a1, qword_2569E3330);
}

uint64_t sub_23ACF4728()
{
  return objectdestroy_2050Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_23ACF4734()
{
  uint64_t *v0;

  return sub_23B092B94(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_23ACF4750()
{
  return objectdestroy_2050Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t objectdestroy_2050Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF479C()
{
  uint64_t *v0;

  return sub_23B092ADC(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_23ACF47BC()
{
  return sub_23ACFA4E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACBD078);
}

uint64_t sub_23ACF47D8()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF47E8()
{
  uint64_t v0;

  sub_23ACBCD08(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), (void (*)(void))sub_23AF944F8);
}

uint64_t sub_23ACF480C()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF4818()
{
  uint64_t v0;

  sub_23ACBD454(*(void (**)(void *, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t objectdestroy_2633Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_23ACF4874()
{
  uint64_t v0;

  sub_23ACBCD08(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), (void (*)(void))sub_23AF94280);
}

uint64_t sub_23ACF4898()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF48A8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23ACF48CC()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

void sub_23ACF48D8(_QWORD *a1, char a2)
{
  uint64_t v2;

  sub_23ACBBD74(a1, a2 & 1, *(void (**)(unint64_t, _QWORD *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_23ACF48E8()
{
  return objectdestroy_2673Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23ACF48F4(uint64_t a1, char a2)
{
  return sub_23ACF4900(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACCC1A0);
}

uint64_t sub_23ACF4900(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2 & 1, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_23ACF4914()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF4920(void *a1)
{
  uint64_t v1;

  sub_23ACCBE8C(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23ACF4930()
{
  uint64_t v0;

  return sub_23ACCAAC0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23ACF4950(uint64_t a1)
{
  return sub_23AC048C0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACCA90C);
}

void sub_23ACF4960()
{
  uint64_t v0;

  sub_23ACCA224(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24), "🚀  FSTree stable for %s");
}

uint64_t sub_23ACF4984(uint64_t a1)
{
  uint64_t v1;

  return sub_23ACC929C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t objectdestroy_2689Tm()
{
  uint64_t v0;

  sub_23AC03BE4(*(_QWORD *)(v0 + 16));

  return swift_deallocObject();
}

void sub_23ACF49C0()
{
  uint64_t v0;

  sub_23ACCA224(*(_QWORD *)(v0 + 16), *(NSObject **)(v0 + 24), "🚀  FPTree stable for %s");
}

uint64_t sub_23ACF49E0()
{
  uint64_t v0;

  sub_23AC03BE4(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF4A14()
{
  uint64_t v0;

  return sub_23ACCA434(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_23ACF4A20()
{
  sub_23AE2B1C0();
}

uint64_t sub_23ACF4A40()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_23ACF4A74()
{
  uint64_t v0;

  return sub_23ACD38C0(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23ACF4A90()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF4AEC(uint64_t a1)
{
  uint64_t v1;

  return sub_23AFD44E4(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t (**)(uint64_t))(v1 + 48), *(_QWORD *)(v1 + 56), *(uint64_t (**)(uint64_t))(v1 + 64), *(_QWORD *)(v1 + 72), *(uint64_t (**)(uint64_t))(v1 + 80), *(_QWORD *)(v1 + 88), *(void (**)(uint64_t))(v1 + 96), *(_QWORD *)(v1 + 104), *(uint64_t (**)(uint64_t))(v1 + 112));
}

uint64_t sub_23ACF4B34()
{
  uint64_t v0;

  return sub_23ACD490C(v0);
}

uint64_t sub_23ACF4B40()
{
  uint64_t v0;

  return sub_23ACC9A34(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23ACF4B4C()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

unint64_t sub_23ACF4B60()
{
  uint64_t v0;

  return sub_23ACC9C4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_23ACF4B80(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_23AC03BE4(result);
  return result;
}

uint64_t objectdestroy_2740Tm()
{
  uint64_t v0;

  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

unint64_t sub_23ACF4BC4()
{
  uint64_t v0;

  return sub_23ACC9C4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ACF4BE4()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF4BF4()
{
  uint64_t v0;

  return sub_23ACC9704(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_23ACF4C00()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF4C10()
{
  uint64_t *v0;

  return sub_23B17E044(v0[2], v0[3], v0[4]);
}

uint64_t sub_23ACF4C1C()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF4C2C()
{
  uint64_t v0;

  sub_23B17DA04(*(_QWORD **)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t objectdestroy_2686Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_23ACF4C70()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF4C7C()
{
  uint64_t v0;

  sub_23ACCBFB4(*(void (**)(void *, BOOL))(v0 + 16));
}

uint64_t sub_23ACF4C98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF4CD4()
{
  return sub_23ACFDAD8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACCC324);
}

void sub_23ACF4CF0(void *a1)
{
  uint64_t v1;

  sub_23AAECB98(a1, *(void (**)(void **))(v1 + 16));
}

uint64_t sub_23ACF4CF8()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF4D04()
{
  uint64_t v0;

  return sub_23ACCD564(*(void (**)(uint64_t, _QWORD))(v0 + 16));
}

uint64_t sub_23ACF4D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t *v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  int *v83;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0) - 8) + 80);

  swift_release();
  v2 = v0 + ((v1 + 32) & ~v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:

        v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31B0);
        v5 = v2 + *(int *)(v4 + 48);
        v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
          goto LABEL_47;
        v81 = v4;

        sub_23AAAE53C(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
        swift_bridgeObjectRelease();
        sub_23AAAE53C(*(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_38;
      case 1u:

        v7 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5EE0);
        v52 = v2 + v7[12];
        v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v52, 1, v53))
        {
          v83 = v7;

          sub_23AAAE53C(*(_QWORD *)(v52 + 16), *(_QWORD *)(v52 + 24));
          swift_bridgeObjectRelease();
          sub_23AAAE53C(*(_QWORD *)(v52 + 40), *(_QWORD *)(v52 + 48));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v79 = v53;
          v54 = v52 + *(int *)(v53 + 48);
          v55 = (int *)type metadata accessor for ItemMetadata();
          v56 = v54 + v55[7];
          v57 = sub_23B1C5BDC();
          v58 = *(_QWORD *)(v57 - 8);
          v59 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
          v59(v56, v57);
          v59(v54 + v55[8], v57);
          swift_bridgeObjectRelease();
          v60 = v54 + v55[29];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v60, 1, v57))
            v59(v60, v57);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v61 = (uint64_t *)(v54 + v55[33]);
          v62 = v61[1];
          if (v62 >> 60 != 15)
            sub_23AAAE53C(*v61, v62);
          swift_bridgeObjectRelease();
          v7 = v83;
          v63 = v52 + *(int *)(v79 + 52);
          v64 = *(void **)(v63 + 16);
          if (v64 != (void *)1)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v63 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_23AAA12F0(*(_QWORD *)(v52 + *(int *)(v79 + 68)), *(_QWORD *)(v52 + *(int *)(v79 + 68) + 8));
        }
        if (!*(_QWORD *)(v2 + v7[20] + 64))
          goto LABEL_61;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_60;
      case 2u:

        if (*(_QWORD *)(v2 + 88))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v3 = *(id *)(v2 + 128);
        goto LABEL_78;
      case 3u:

        v22 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31C0) + 48);
        v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
          goto LABEL_76;

        sub_23AAAE53C(*(_QWORD *)(v22 + 16), *(_QWORD *)(v22 + 24));
        swift_bridgeObjectRelease();
        sub_23AAAE53C(*(_QWORD *)(v22 + 40), *(_QWORD *)(v22 + 48));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_67;
      case 4u:
      case 5u:
      case 7u:
        v3 = *(id *)v2;
        goto LABEL_78;
      case 6u:

        v3 = *(id *)(v2 + 8);
        goto LABEL_78;
      default:
        return swift_deallocObject();
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3190);
      v5 = v2 + *(int *)(v4 + 48);
      v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
      {
        v81 = v4;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_38:
        swift_bridgeObjectRelease();
        v78 = v6;
        v41 = v5 + *(int *)(v6 + 48);
        v42 = (int *)type metadata accessor for ItemMetadata();
        v43 = v41 + v42[7];
        v44 = sub_23B1C5BDC();
        v45 = *(_QWORD *)(v44 - 8);
        v46 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v46(v43, v44);
        v46(v41 + v42[8], v44);
        swift_bridgeObjectRelease();
        v47 = v41 + v42[29];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v47, 1, v44))
          v46(v47, v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v48 = (uint64_t *)(v41 + v42[33]);
        v49 = v48[1];
        if (v49 >> 60 != 15)
          sub_23AAAE53C(*v48, v49);
        swift_bridgeObjectRelease();
        v50 = v5 + *(int *)(v78 + 52);
        v51 = *(void **)(v50 + 16);
        if (v51 != (void *)1)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v50 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_23AAA12F0(*(_QWORD *)(v5 + *(int *)(v78 + 68)), *(_QWORD *)(v5 + *(int *)(v78 + 68) + 8));
        v4 = v81;
      }
LABEL_47:
      v3 = *(id *)(v2 + *(int *)(v4 + 80));
      goto LABEL_78;
    case 1u:
      v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E3198);
      v8 = v2 + v7[12];
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      {
        v82 = v7;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v77 = v9;
        v10 = v8 + *(int *)(v9 + 48);
        v11 = (int *)type metadata accessor for ItemMetadata();
        v12 = v10 + v11[7];
        v13 = sub_23B1C5BDC();
        v14 = *(_QWORD *)(v13 - 8);
        v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
        v15(v12, v13);
        v15(v10 + v11[8], v13);
        swift_bridgeObjectRelease();
        v16 = v10 + v11[29];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v16, 1, v13))
          v15(v16, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 = (uint64_t *)(v10 + v11[33]);
        v18 = v17[1];
        if (v18 >> 60 != 15)
          sub_23AAAE53C(*v17, v18);
        swift_bridgeObjectRelease();
        v7 = v82;
        v19 = v8 + *(int *)(v77 + 52);
        v20 = *(void **)(v19 + 16);
        if (v20 != (void *)1)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v19 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_23AAA12F0(*(_QWORD *)(v8 + *(int *)(v77 + 68)), *(_QWORD *)(v8 + *(int *)(v77 + 68) + 8));
      }

      v21 = (uint64_t *)(v2 + v7[20]);
      if (v21[2] != 1)
      {
        sub_23AAAE53C(*v21, v21[1]);
        swift_bridgeObjectRelease();
        sub_23AAAE53C(v21[3], v21[4]);
        swift_bridgeObjectRelease();
LABEL_60:
        swift_bridgeObjectRelease();
      }
LABEL_61:
      v3 = *(id *)(v2 + v7[32]);
      goto LABEL_78;
    case 2u:

      if (*(_QWORD *)(v2 + 40) != 1)
      {
        sub_23AAAE53C(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
        swift_bridgeObjectRelease();
        sub_23AAAE53C(*(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v3 = *(id *)(v2 + 96);
LABEL_78:

      break;
    case 3u:
      v22 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31A0) + 48);
      v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_67:
        swift_bridgeObjectRelease();
        v80 = v23;
        v65 = v22 + *(int *)(v23 + 48);
        v66 = (int *)type metadata accessor for ItemMetadata();
        v67 = v65 + v66[7];
        v68 = sub_23B1C5BDC();
        v69 = *(_QWORD *)(v68 - 8);
        v70 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
        v70(v67, v68);
        v70(v65 + v66[8], v68);
        swift_bridgeObjectRelease();
        v71 = v65 + v66[29];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v71, 1, v68))
          v70(v71, v68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v72 = (uint64_t *)(v65 + v66[33]);
        v73 = v72[1];
        if (v73 >> 60 != 15)
          sub_23AAAE53C(*v72, v73);
        swift_bridgeObjectRelease();
        v74 = v22 + *(int *)(v80 + 52);
        v75 = *(void **)(v74 + 16);
        if (v75 != (void *)1)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v74 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_23AAA12F0(*(_QWORD *)(v22 + *(int *)(v80 + 68)), *(_QWORD *)(v22 + *(int *)(v80 + 68) + 8));
      }
LABEL_76:
      swift_bridgeObjectRelease();
      break;
    case 6u:
      v24 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6420) + 48);
      v25 = (int *)type metadata accessor for VFSItem(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v25 - 1) + 48))(v24, 1, v25))
      {
        swift_bridgeObjectRelease();
        v26 = v24 + v25[7];
        v27 = (int *)type metadata accessor for ItemMetadata();
        v28 = v26 + v27[7];
        v29 = sub_23B1C5BDC();
        v30 = *(_QWORD *)(v29 - 8);
        v31 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
        v31(v28, v29);
        v31(v26 + v27[8], v29);
        swift_bridgeObjectRelease();
        v32 = v26 + v27[29];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v32, 1, v29))
          v31(v32, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = (uint64_t *)(v26 + v27[33]);
        v34 = v33[1];
        if (v34 >> 60 != 15)
          sub_23AAAE53C(*v33, v34);
        swift_bridgeObjectRelease();
        v35 = v24 + v25[8];
        v36 = *(void **)(v35 + 16);
        if (v36 != (void *)1)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v35 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v37 = v24 + v25[12];
        v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
        {
          v39 = sub_23B1C5A08();
          v40 = *(_QWORD *)(v39 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v37, 1, v39))
            (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v37, v39);
        }
      }
      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

void sub_23ACF5A6C(void *a1)
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  sub_23ACCCEC8(a1, *(dispatch_group_t *)(v1 + 16));
}

uint64_t sub_23ACF5AB0()
{
  uint64_t v0;

  return sub_23ACCCF58(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_23ACF5AD0()
{
  return objectdestroy_278Tm();
}

void sub_23ACF5AD8(void *a1, char a2)
{
  uint64_t v2;

  sub_23ACBB754(a1, a2 & 1, *(void (**)(uint64_t, id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_23ACF5AE8()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF5AF8()
{
  uint64_t v0;

  return sub_23ACD1C60(*(_QWORD *)(v0 + 16), (void (*)(uint64_t))sub_23AE5A780);
}

uint64_t sub_23ACF5B18()
{
  uint64_t v0;

  return sub_23ACD1C60(*(_QWORD *)(v0 + 16), (void (*)(uint64_t))sub_23AE59E20);
}

uint64_t sub_23ACF5B38()
{
  return objectdestroy_1632Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_1632Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF5B74()
{
  uint64_t v0;

  return sub_23ACBB2C8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(_QWORD))(v0 + 32));
}

uint64_t sub_23ACF5B94()
{
  return sub_23AB7119C();
}

uint64_t sub_23ACF5BAC()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF5BBC()
{
  uint64_t v0;

  return sub_23AC47E90(v0, (void (*)(uint64_t))sub_23AC486E4);
}

uint64_t sub_23ACF5BDC()
{
  uint64_t v0;

  return sub_23AC490B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ACF5BF4(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_23AC49174(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23ACF5C0C()
{
  return sub_23AC4AB6C();
}

uint64_t sub_23ACF5C24()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF5C34()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF5C44()
{
  uint64_t v0;

  return sub_23AC47E90(v0, (void (*)(uint64_t))sub_23AC48020);
}

uint64_t sub_23ACF5C64()
{
  uint64_t v0;

  return sub_23AC48FEC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ACF5C7C()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF5C8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_23ACF5CD8()
{
  uint64_t v0;

  sub_23ACB921C(*(_QWORD **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD **)(v0 + 64), *(void (**)(_QWORD))(v0 + 72));
}

uint64_t sub_23ACF5D10(void *a1)
{
  uint64_t v1;

  return sub_23AC4A444(a1, *(_BYTE *)(v1 + 16));
}

unint64_t sub_23ACF5D20(void *a1, char a2)
{
  return sub_23ACFD5E4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_23AB5692C, (void (*)(uint64_t, _QWORD, uint64_t))sub_23AEA9B94, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB7C6B4);
}

uint64_t sub_23ACF5D3C(void *a1)
{
  uint64_t v1;

  return sub_23AC4A838(a1, *(_BYTE *)(v1 + 16), **(_QWORD **)(v1 + 24), *(_BYTE *)(*(_QWORD *)(v1 + 24) + 8));
}

unint64_t sub_23ACF5D50(void *a1, char a2)
{
  return sub_23ACFD5E4(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_23AA88218, (void (*)(uint64_t, _QWORD, uint64_t))sub_23AEA989C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AA862DC);
}

void (*sub_23ACF5D6C())(uint64_t *, _QWORD)
{
  return sub_23ACB87FC();
}

uint64_t sub_23ACF5D74()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF5D90()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF5DCC()
{
  return sub_23ACF5DE8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACB7850);
}

uint64_t sub_23ACF5DE8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_23ACF5E14()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v22 = *(_QWORD *)(v2 + 64);
  v25 = sub_23B1C5A08();
  v4 = *(_QWORD *)(v25 - 8);
  v24 = *(unsigned __int8 *)(v4 + 80);
  swift_release();
  v23 = v3;
  v5 = v0 + v3;
  swift_bridgeObjectRelease();
  v6 = v0 + v3 + v1[7];
  v7 = (int *)type metadata accessor for ItemMetadata();
  v8 = v6 + v7[7];
  v9 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[8], v9);
  swift_bridgeObjectRelease();
  v12 = v6 + v7[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)(v6 + v7[33]);
  v14 = v13[1];
  if (v14 >> 60 != 15)
    sub_23AAAE53C(*v13, v14);
  swift_bridgeObjectRelease();
  v15 = v5 + v1[8];
  v16 = *(void **)(v15 + 16);
  if (v16 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v15 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v17 = v5 + v1[12];
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18)
    && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v17, 1, v25))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v25);
  }
  v19 = (v22 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v24 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v24;

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v20, v25);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_23ACF6108()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + v4 + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_23ACB7130(*(double *)(v0 + v8), *(double *)(v0 + v8 + 8), *(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(void (**)(id))(v0 + v4), *(_QWORD *)(v0 + v4 + 8), v0 + v6, *(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23ACF61D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v2 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v1 + 16);
  v4 = 0;
  v5 = 0;
  return v2(&v5, &v4, a1);
}

uint64_t sub_23ACF6214(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v1 + 16))(0, MEMORY[0x24BEE4AF8], a1);
}

uint64_t sub_23ACF6244()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v22 = *(_QWORD *)(v2 + 64);
  v25 = sub_23B1C5A08();
  v4 = *(_QWORD *)(v25 - 8);
  v24 = *(unsigned __int8 *)(v4 + 80);
  swift_release();
  v23 = v3;
  v5 = v0 + v3;
  swift_bridgeObjectRelease();
  v6 = v0 + v3 + v1[7];
  v7 = (int *)type metadata accessor for ItemMetadata();
  v8 = v6 + v7[7];
  v9 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[8], v9);
  swift_bridgeObjectRelease();
  v12 = v6 + v7[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)(v6 + v7[33]);
  v14 = v13[1];
  if (v14 >> 60 != 15)
    sub_23AAAE53C(*v13, v14);
  swift_bridgeObjectRelease();
  v15 = v5 + v1[8];
  v16 = *(void **)(v15 + 16);
  if (v16 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v15 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v17 = v5 + v1[12];
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18)
    && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v17, 1, v25))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v25);
  }
  v19 = (v22 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v24 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v24;

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v20, v25);
  return swift_deallocObject();
}

void sub_23ACF650C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + v4 + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_23ACB5F18(*(_QWORD *)(v0 + 16), v0 + v2, *(char **)(v0 + v3), *(void (**)(_QWORD, _QWORD, _QWORD))(v0 + v4), *(_QWORD *)(v0 + v4 + 8), v0 + v6, *(unsigned __int8 *)(v0 + v6 + *(_QWORD *)(v5 + 64)));
}

void sub_23ACF65AC(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_23ACB634C(a1, v4, *(void (**)(_QWORD, _QWORD, void *))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), v2 + v6, *(unsigned __int8 *)(v2 + v6 + *(_QWORD *)(v5 + 64)), *(void **)(((v6 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFF8) + v2 + 8));
}

void sub_23ACF6618(id a1, char a2, void (*a3)(id))
{
  if ((a2 & 1) != 0)

  else
    a3(a1);
}

uint64_t objectdestroy_2951Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = ((v3 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

id sub_23ACF66C0(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_23ACB6568(a1, a2, *(void (**)(uint64_t, unint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), v2 + v6, *(_BYTE *)(v2 + v6 + *(_QWORD *)(v5 + 64)), *(_QWORD *)(((v6 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFF8) + v2 + 8));
}

id sub_23ACF672C@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_23ACB4C18(*a1, *(_QWORD *)(v2 + 24), *(char **)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t sub_23ACF6770()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + v1[7];
  v4 = (int *)type metadata accessor for ItemMetadata();
  v5 = v3 + v4[7];
  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (uint64_t *)(v3 + v4[33]);
  v11 = v10[1];
  if (v11 >> 60 != 15)
    sub_23AAAE53C(*v10, v11);
  swift_bridgeObjectRelease();
  v12 = v2 + v1[8];
  v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v14 = v2 + v1[12];
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = sub_23B1C5A08();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF69E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23ACB47A0(v0 + v2, *(_QWORD *)(v0 + v3), *(uint64_t (**)(_QWORD))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23ACF6A48()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v23 = *(_QWORD *)(v2 + 64);
  v26 = sub_23B1C5A08();
  v4 = *(_QWORD *)(v26 - 8);
  v25 = *(unsigned __int8 *)(v4 + 80);
  v22 = *(_QWORD *)(v4 + 64);
  swift_release();
  v24 = v3;
  v5 = v0 + v3;
  swift_bridgeObjectRelease();
  v6 = v0 + v3 + v1[7];
  v7 = (int *)type metadata accessor for ItemMetadata();
  v8 = v6 + v7[7];
  v9 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v11(v6 + v7[8], v9);
  swift_bridgeObjectRelease();
  v12 = v6 + v7[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9))
    v11(v12, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)(v6 + v7[33]);
  v14 = v13[1];
  if (v14 >> 60 != 15)
    sub_23AAAE53C(*v13, v14);
  swift_bridgeObjectRelease();
  v15 = v5 + v1[8];
  v16 = *(void **)(v15 + 16);
  if (v16 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v15 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v17 = v5 + v1[12];
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18)
    && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v17, 1, v26))
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v17, v26);
  }
  v19 = (v23 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v25 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v25;

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v20, v26);

  return swift_deallocObject();
}

uint64_t sub_23ACF6D20()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + v4 + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_23ACB388C(*(_QWORD *)(v0 + 16), v0 + v2, *(char **)(v0 + v3), *(void **)(v0 + v4), *(_QWORD *)(v0 + v4 + 8), (char *)(v0 + v6), *(void **)(v0 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF6DC4(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23ACB3DAC(a1, a2, *(void (**)(char *, uint64_t))(v2 + 16));
}

uint64_t sub_23ACF6DD0()
{
  id *v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF6E34(void *a1, void *a2)
{
  uint64_t v2;

  return sub_23ACB2A74(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104));
}

uint64_t objectdestroy_523Tm()
{
  uint64_t v0;

  sub_23AC03BE4(*(_QWORD *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF6EAC()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF6EB8(void **a1, void *a2)
{
  uint64_t v2;

  sub_23AC0251C(*a1, a2, *(void (**)(void **, id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_23ACF6EC8()
{
  uint64_t v0;

  swift_release();
  swift_release();

  sub_23AC03BE4(*(_QWORD *)(v0 + 64));
  swift_release();
  return swift_deallocObject();
}

void sub_23ACF6F14(uint64_t a1)
{
  uint64_t v1;

  sub_23ACAD944(a1, *(void **)(v1 + 16), *(void (**)(_QWORD, void *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_BYTE *)(v1 + 80), *(_BYTE *)(v1 + 81));
}

uint64_t sub_23ACF6F54()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_23ACF6FA8(void *a1, __int16 a2)
{
  uint64_t v2;

  sub_23ACAE754(a1, a2 & 0x1FF, *(void **)(v2 + 16), *(void (**)(_QWORD, void *))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(unsigned __int8 *)(v2 + 49), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_23ACF6FEC()
{
  uint64_t v0;

  swift_release();

  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 40));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF7038(uint64_t a1)
{
  return sub_23ACFA458(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACAC89C);
}

ssize_t sub_23ACF7044@<X0>(ssize_t *a1@<X8>)
{
  uint64_t v1;
  ssize_t result;

  result = fgetxattr(*(_DWORD *)(v1 + 16), "com.apple.fileprovider.trash-put-back#PN", 0, 0, 0, 0);
  *a1 = result;
  return result;
}

ssize_t sub_23ACF708C@<X0>(ssize_t *a1@<X8>)
{
  return sub_23ACF70A0(a1);
}

ssize_t sub_23ACF70A0@<X0>(ssize_t *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  size_t v4;
  ssize_t result;

  v3 = *(void **)(v1 + 24);
  if (v3)
    v4 = *(_QWORD *)(v1 + 32) - (_QWORD)v3;
  else
    v4 = 0;
  result = fgetxattr(*(_DWORD *)(v1 + 16), "com.apple.fileprovider.trash-put-back#PN", v3, v4, 0, 0);
  *a1 = result;
  return result;
}

uint64_t sub_23ACF70F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90) - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = type metadata accessor for TelemetrySignpost(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = v2 + *(int *)(type metadata accessor for TelemetrySignposter(0) + 24);
    v5 = sub_23B1C5DEC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    swift_release();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF71D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23AC432D0(a1, v1 + v4, *(uint64_t (**)(uint64_t))(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF7228()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  sub_23AC03BE4(*(_QWORD *)(v0 + 16));
  v4 = type metadata accessor for TelemetrySignpost(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    v5 = v0 + v2 + *(int *)(type metadata accessor for TelemetrySignposter(0) + 24);
    v6 = sub_23B1C5DEC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

char *sub_23ACF7354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE90) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v5 + 31) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AC43578(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(void (**)(uint64_t))(v1 + v6), *(_QWORD *)(v1 + v6 + 8), *(unsigned __int8 *)(v1 + v6 + 16), *(_QWORD *)(v1 + v7), *(_QWORD *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v1 + v8), *(void (**)(_QWORD))(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_23ACF7410()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v21 = *(_QWORD *)(v2 + 64);
  v22 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v3 = v0 + v22;
  swift_bridgeObjectRelease();
  v4 = v0 + v22 + v1[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = v3 + v1[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_23B1C5A08();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  v19 = (((v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + ((v19 + 15) & 0xFFFFFFFFFFFFF8)));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF76B4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v21 = *(_QWORD *)(v2 + 64);
  v22 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v3 = v0 + v22;
  swift_bridgeObjectRelease();
  v4 = v0 + v22 + v1[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = v3 + v1[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_23B1C5A08();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  v19 = (((v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + v19));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_23ACF7958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 31) & 0xFFFFFFFFFFFFFFF8;
  sub_23AC43FC4(a1, v1 + v4, *(void (**)(uint64_t))(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + v6), *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + v7), *(_BYTE *)(v1 + v7 + 8), *(_BYTE *)(v1 + v7 + 9), *(_QWORD *)(v1 + ((v7 + 17) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACF7A08()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 64));

  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = v3 + v1[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_23B1C5A08();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  return swift_deallocObject();
}

uint64_t sub_23ACF7C78(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VFSItem(0) - 8) + 80);
  return sub_23AC44C6C(a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(unsigned __int8 *)(v1 + 57), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), v1 + ((v3 + 80) & ~v3));
}

void sub_23ACF7CE4()
{
  sub_23ACF8EC0();
}

uint64_t sub_23ACF7CF8()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF7D08(uint64_t a1)
{
  uint64_t v1;

  sub_23ACAC534(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23ACF7D14()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF7D24()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF7D68(uint64_t a1)
{
  return sub_23ACFA458(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACAFBF4);
}

uint64_t sub_23ACF7D74@<X0>(int a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23ACAF57C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23ACF7D8C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

id sub_23ACF7DA0(id result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return result;
  return result;
}

void sub_23ACF7DAC(id a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

}

uint64_t sub_23ACF7DB8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF7DF4()
{
  return sub_23ACFA4E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACB08E0);
}

uint64_t sub_23ACF7E10(int a1)
{
  uint64_t v1;

  return sub_23ACB04B0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23ACF7E1C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = 0;
  return result;
}

uint64_t sub_23ACF7E54()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF7E60()
{
  return objectdestroy_656Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_656Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF7EB4()
{
  return sub_23ACFDAD8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACABE50);
}

uint64_t sub_23ACF7ED4()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF7EE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  swift_bridgeObjectRelease();
  sub_23AC03BE4(*(_QWORD *)(v0 + 40));

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF7F94()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;

  v1 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (uint64_t *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_23ACA99A4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v0 + v2, *v3, v3[1]);
}

void sub_23ACF7FF4(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  sub_23ACAAA0C(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

void sub_23ACF8014(uint64_t a1)
{
  uint64_t v1;

  sub_23ACAB458(a1, *(NSObject **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23ACF801C()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF8028()
{
  uint64_t v0;

  sub_23ACAB540(*(void (**)(void *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23ACF8034(uint64_t a1)
{
  uint64_t *v1;

  return sub_23ACA8510(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_23ACF8050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23ACA8B40(a1, a2, *(void **)(v2 + 16)) & 1;
}

uint64_t sub_23ACF806C@<X0>(int a1@<W0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_23ACAADDC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23ACF8084()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF8090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 96) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 40));

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  return swift_deallocObject();
}

void sub_23ACF8164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  sub_23ACA4574(*(_QWORD *)(v0 + 16), *(void (**)(void *))(v0 + 24), *(void (**)(void *))(v0 + 32), *(_QWORD *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(void **)(v0 + 80), *(_QWORD *)(v0 + 88), v0 + ((v2 + 96) & ~v2), v0 + ((*(_QWORD *)(v1 + 64) + v2 + ((v2 + 96) & ~v2)) & ~v2));
}

uint64_t sub_23ACF81CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 24));
  swift_release();

  swift_release();
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF82B8()
{
  return sub_23ACF83BC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *, char *, _QWORD, _QWORD, _QWORD))sub_23ACA4B4C);
}

uint64_t sub_23ACF82C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  sub_23AC03BE4(*(_QWORD *)(v0 + 16));
  swift_release();

  swift_release();
  swift_release();

  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF83B0()
{
  return sub_23ACF83BC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *, char *, _QWORD, _QWORD, _QWORD))sub_23ACA4D8C);
}

uint64_t sub_23ACF83BC(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char *, char *, _QWORD, _QWORD, _QWORD))
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 64) & ~v4;
  v6 = *(_QWORD *)(v3 + 64);
  v7 = (v6 + v4 + v5) & ~v4;
  return a1(*((_QWORD *)v1 + 2), *((_QWORD *)v1 + 3), *((_QWORD *)v1 + 4), *((_QWORD *)v1 + 5), *((_QWORD *)v1 + 6), *((_QWORD *)v1 + 7), &v1[v5], &v1[v7], *(_QWORD *)&v1[(v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8], *(_QWORD *)&v1[(((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8], *(_QWORD *)&v1[((((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8]);
}

void sub_23ACF8448()
{
  uint64_t v0;

  sub_23ACA71D0(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unint64_t **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_23ACF846C(int a1)
{
  uint64_t v1;

  return sub_23ACA8180(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23ACF8488()
{
  uint64_t v0;

  sub_23AC03BE4(*(_QWORD *)(v0 + 24));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ACF84CC(uint64_t a1)
{
  uint64_t v1;

  sub_23ACA4160(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(NSObject **)(v1 + 32), *(void ***)(v1 + 40), *(NSObject **)(v1 + 48));
}

uint64_t sub_23ACF84DC()
{
  uint64_t v0;

  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF8510(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC45814(a1, *(void (**)(void **))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23ACF851C()
{
  return objectdestroy_3148Tm();
}

void sub_23ACF8524(void *a1, void *a2)
{
  uint64_t v2;

  sub_23ACC7FBC(a1, a2, *(void (**)(void *, id))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_23ACF8530()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF853C()
{
  return objectdestroy_1892Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF854C()
{
  sub_23ACF8D80();
}

uint64_t sub_23ACF8560(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC022E0(a1, *(uint64_t (**)(uint64_t *, uint64_t))(v1 + 16));
}

void sub_23ACF856C(uint64_t a1)
{
  uint64_t v1;

  sub_23ACD5208(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23ACF8578()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  swift_release();
  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = v3 + v1[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_23B1C5A08();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  return swift_deallocObject();
}

uint64_t sub_23ACF87D0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VFSItem(0) - 8) + 80);
  return sub_23ACD5750(v0[2], v0[3], v0[4], (uint64_t)v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_23ACF8804()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  swift_release();
  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = v3 + v1[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_23B1C5A08();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  return swift_deallocObject();
}

void sub_23ACF8A5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for VFSItem(0) - 8) + 80);
  sub_23ACD58C8(*(void (**)(char *, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + ((v1 + 40) & ~v1));
}

void sub_23ACF8AA4(void *a1, char a2)
{
  uint64_t v2;

  sub_23ACC81D8(a1, a2 & 1, *(void (**)(id, id))(v2 + 16));
}

uint64_t sub_23ACF8AC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1 + 5;
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23ACFEA88;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_2569E3220 + dword_2569E3220))(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23ACF8B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23ACF8BE0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2569E3230 + dword_2569E3230))(a1, v4);
}

uint64_t sub_23ACF8BE0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_23ACF8C28(uint64_t a1)
{
  uint64_t v1;

  sub_23ACCE160(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), **(_QWORD **)(v1 + 32));
}

uint64_t sub_23ACF8C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE718);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  sub_23AC03BE4(*(_QWORD *)(v0 + 24));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23ACF8CB8(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;

  v4 = a2 & 1;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE718) - 8)
                          + 80);
  return sub_23AEC479C(a1, v4, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5));
}

uint64_t sub_23ACF8D0C()
{
  return objectdestroy_3148Tm();
}

uint64_t sub_23ACF8D14()
{
  uint64_t v0;

  swift_release();
  swift_release();

  sub_23AC03BE4(*(_QWORD *)(v0 + 48));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF8D58(uint64_t a1)
{
  return sub_23ACFA458(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACA0AEC);
}

uint64_t sub_23ACF8D64()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF8D70()
{
  return objectdestroy_1892Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF8D80()
{
  uint64_t v0;

  sub_23ACD4D54(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(uint8_t **)(v0 + 32), *(void (**)(_QWORD, void *))(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_23ACF8DA4()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF8DB0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACF8DF4()
{
  return sub_23ACFA4E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC9FF80);
}

uint64_t sub_23ACF8E10()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_23ACF8E54(void *a1)
{
  uint64_t v1;

  sub_23ACA020C(a1, *(void **)(v1 + 16), *(void (**)(_QWORD, void *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(_BYTE *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t objectdestroy_3040Tm()
{
  uint64_t v0;

  sub_23AC03BE4(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ACF8EC0()
{
  uint64_t v0;

  sub_23AAEED80(v0 + 16, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_23ACF8EE0()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_601Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_23ACF8F24(void *a1)
{
  uint64_t v1;

  sub_23AC9F574(a1, *(void **)(v1 + 16), *(NSObject **)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_23ACF8F30()
{
  uint64_t v0;

  sub_23AC03BE4(*(_QWORD *)(v0 + 24));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ACF8F6C()
{
  uint64_t v0;

  sub_23AAEED68((void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_23ACF8F90()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF8F9C()
{
  id *v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_23ACF8FF0(uint64_t a1)
{
  uint64_t v1;

  sub_23AC9CCCC(a1, *(void (**)(_QWORD, id))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

void sub_23ACF902C()
{
  uint64_t v0;

  sub_23AC9ECF0(*(void (**)(_QWORD))(v0 + 16));
}

uint64_t sub_23ACF9038()
{
  return sub_23ACF92E4((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_23AC9ED9C);
}

uint64_t objectdestroy_3346Tm()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = v3 + v1[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_23B1C5A08();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF92C8()
{
  return sub_23ACF92E4((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_23AC9EC5C);
}

uint64_t sub_23ACF92E4(uint64_t (*a1)(_QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;

  v3 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(*(_QWORD *)(v1 + 16), v1 + v4, *v5, v5[1]);
}

uint64_t sub_23ACF9344()
{
  return objectdestroy_30Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF9354(char a1)
{
  uint64_t v1;
  NSObject *v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(NSObject **)(v1 + 24);
  swift_beginAccess();
  *(_BYTE *)(v4 + 16) = a1;
  dispatch_group_leave(v3);
}

uint64_t sub_23ACF93A4()
{
  return objectdestroy_278Tm();
}

uint64_t sub_23ACF93AC(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC9B260(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_23ACF93BC()
{
  uint64_t v0;

  sub_23AC9B364(*(void (**)(_QWORD, id))(v0 + 16));
}

void sub_23ACF93C8()
{
  uint64_t v0;

  sub_23AC9B3AC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD, id))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23ACF93E4()
{
  return objectdestroy_30Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF93F4(uint64_t a1)
{
  uint64_t v1;

  sub_23AC9C324(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_23ACF93FC(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC9B644(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_23ACF9404()
{
  return objectdestroy_278Tm();
}

uint64_t sub_23ACF940C(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC9B6E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_23ACF941C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23ACF9464()
{
  uint64_t v0;

  return sub_23AC9B7E8(*(void (**)(char *))(v0 + 16));
}

uint64_t sub_23ACF9470()
{
  uint64_t v0;

  return sub_23AC9B888(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23ACF948C()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF9498(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC9BCB8(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t objectdestroy_2617Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF94F0()
{
  return sub_23ACFA4E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC99434);
}

uint64_t sub_23ACF950C()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACF9518()
{
  uint64_t v0;

  sub_23AC9B038(*(void (**)(void *, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t *sub_23ACF9524(uint64_t *a1)
{
  sub_23ACF9574(*a1, a1[1], a1[2]);
  return a1;
}

uint64_t sub_23ACF9574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23ACF95C4()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF95D0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ACF960C()
{
  uint64_t v0;

  sub_23AC98C24(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void (**)(void))(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_23ACF9630()
{
  uint64_t v0;

  sub_23ACF212C(*(_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF9664(uint64_t a1)
{
  return sub_23ACF9670(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC969B0);
}

uint64_t sub_23ACF9670(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_23ACF9688()
{
  uint64_t v0;

  swift_release();
  sub_23ACF212C(*(_QWORD *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23ACF96BC()
{
  uint64_t v0;

  return sub_23AC96CA0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23ACF96C8()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF96D8()
{
  uint64_t v0;

  sub_23ACF212C(*(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_23ACF9704()
{
  uint64_t v0;

  return sub_23AC97ACC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ACF970C()
{
  return swift_deallocObject();
}

void sub_23ACF971C()
{
  uint64_t v0;

  sub_23AC96D0C(*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_23ACF9734()
{
  return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ACF9768);
}

uint64_t sub_23ACF9768@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23AC979DC(*(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), a1);
}

uint64_t sub_23ACF9784()
{
  return objectdestroy_44Tm();
}

uint64_t objectdestroy_44Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF97C4()
{
  uint64_t v0;

  return sub_23AC9844C(*(char **)(v0 + 16), *(void (**)(_QWORD))(v0 + 24));
}

uint64_t sub_23ACF97D0()
{
  return sub_23AC98590();
}

uint64_t sub_23ACF97D8()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF97E8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23AC9617C(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_23ACF97F0()
{
  return objectdestroy_3528Tm();
}

uint64_t sub_23ACF97F8()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACF982C()
{
  uint64_t v0;

  return sub_23AC9304C(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), (void *)(v0 + 32), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_23ACF9854()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF9864(void *a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return sub_23AC95998(a1, a2, a3 & 1, *(_QWORD *)(v3 + 16), *(void (**)(uint64_t))(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_23ACF9874()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACF9884()
{
  uint64_t v0;

  return sub_23B1B15E8(*(_QWORD *)(v0 + 16), *(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v0 + 24));
}

uint64_t sub_23ACF9890(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23ACF98B8(void *a1)
{
  uint64_t v1;

  return sub_23ACCF938(a1, v1);
}

uint64_t sub_23ACF98C0()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF98D0()
{
  return sub_23ACCFB94();
}

uint64_t sub_23ACF98D8()
{
  return swift_deallocObject();
}

uint64_t sub_23ACF98E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t *v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C64F4();
  v4 = *(_QWORD *)(a3 + 16);
  v29 = a3;
  if (v4)
  {
    v30 = MEMORY[0x24BEE4AF8];
    sub_23ADACF28(0, v4, 0);
    v5 = (uint64_t *)(a3 + 32);
    v6 = *(_QWORD *)(v30 + 16);
    v7 = v4;
    do
    {
      v9 = *v5++;
      v8 = v9;
      v10 = *(_QWORD *)(v30 + 24);
      if (v6 >= v10 >> 1)
        sub_23ADACF28(v10 > 1, v6 + 1, 1);
      *(_QWORD *)(v30 + 16) = v6 + 1;
      *(_QWORD *)(v30 + 8 * v6++ + 32) = v8;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5540);
  sub_23AAB5A28(&qword_2542E75B0, (uint64_t *)&unk_2542E5540, MEMORY[0x24BEE2B40]);
  sub_23AAA420C();
  sub_23B1C6644();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C64F4();
  if (v4)
  {
    v31 = MEMORY[0x24BEE4AF8];
    sub_23ADACF28(0, v4, 0);
    v11 = (uint64_t *)(a3 + 32);
    v12 = *(_QWORD *)(v31 + 16);
    v13 = v4;
    do
    {
      v15 = *v11++;
      v14 = v15;
      v16 = *(_QWORD *)(v31 + 24);
      if (v12 >= v16 >> 1)
        sub_23ADACF28(v16 > 1, v12 + 1, 1);
      *(_QWORD *)(v31 + 16) = v12 + 1;
      *(_QWORD *)(v31 + 8 * v12++ + 32) = v14;
      --v13;
    }
    while (v13);
    a3 = v29;
  }
  swift_bridgeObjectRetain();
  sub_23B1C6644();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C64F4();
  if (v4)
  {
    v32 = MEMORY[0x24BEE4AF8];
    sub_23ADACF28(0, v4, 0);
    v17 = (uint64_t *)(a3 + 32);
    v18 = *(_QWORD *)(v32 + 16);
    v19 = v4;
    do
    {
      v21 = *v17++;
      v20 = v21;
      v22 = *(_QWORD *)(v32 + 24);
      if (v18 >= v22 >> 1)
        sub_23ADACF28(v22 > 1, v18 + 1, 1);
      *(_QWORD *)(v32 + 16) = v18 + 1;
      *(_QWORD *)(v32 + 8 * v18++ + 32) = v20;
      --v19;
    }
    while (v19);
    a3 = v29;
  }
  swift_bridgeObjectRetain();
  sub_23B1C6644();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  sub_23B1C64F4();
  if (v4)
  {
    v33 = MEMORY[0x24BEE4AF8];
    sub_23ADACF28(0, v4, 0);
    v23 = (uint64_t *)(a3 + 32);
    v24 = *(_QWORD *)(v33 + 16);
    do
    {
      v26 = *v23++;
      v25 = v26;
      v27 = *(_QWORD *)(v33 + 24);
      if (v24 >= v27 >> 1)
        sub_23ADACF28(v27 > 1, v24 + 1, 1);
      *(_QWORD *)(v33 + 16) = v24 + 1;
      *(_QWORD *)(v33 + 8 * v24++ + 32) = v25;
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRetain();
  sub_23B1C6644();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23ACFA0C0()
{
  return sub_23ACCE9D8();
}

uint64_t sub_23ACFA0C8()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFA0D8()
{
  return objectdestroy_1924Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23ACFA0E4()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFA0F4()
{
  return objectdestroy_1924Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_23ACFA100(uint64_t a1)
{
  uint64_t v1;

  return sub_23ACCF2D0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23ACFA118()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFA128()
{
  return sub_23ACCED00();
}

uint64_t sub_23ACFA130()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFA140()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFA164()
{
  return sub_23ACCF614();
}

uint64_t sub_23ACFA16C()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFA17C()
{
  return sub_23ACCF764();
}

uint64_t sub_23ACFA184()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFA194()
{
  return sub_23ACCF828();
}

uint64_t sub_23ACFA19C()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFA1AC(_QWORD *a1)
{
  uint64_t v1;

  return sub_23B191EA0(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_23ACFA1C8()
{
  return sub_23ACCFD4C();
}

uint64_t sub_23ACFA1D0()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFA1E0@<X0>(_QWORD *a1@<X8>)
{
  return sub_23ACFDD2C(a1);
}

uint64_t sub_23ACFA1F4()
{
  return sub_23ACCFC8C();
}

uint64_t sub_23ACFA228()
{
  return sub_23ACCFC8C();
}

void sub_23ACFA25C(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_23ACD2448(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void (**)(_QWORD *__return_ptr))(v1 + 64));
  if (!v2)
    *a1 = v4;
}

uint64_t sub_23ACFA298()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFA2A8()
{
  uint64_t v0;

  return sub_23ACD1F08(*(uint64_t **)(v0 + 16), *(void (**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_23ACFA2B4()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFA2C4(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_23ACFA2D4()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_2075Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFA318()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACFA324(uint64_t *a1, void *a2)
{
  uint64_t v2;

  sub_23AC02400(*a1, a2, *(void (**)(uint64_t *, id))(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_23ACFA334()
{
  uint64_t v0;
  void (*v1)(void);

  v1 = *(void (**)(void))(v0 + 16);
  sub_23AAEA254(MEMORY[0x24BEE4AF8]);
  v1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23ACFA378()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFA3C4()
{
  uint64_t v0;

  return sub_23AC901F0(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

uint64_t sub_23ACFA3EC()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFA3F8()
{
  id *v0;

  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACFA44C(uint64_t a1)
{
  return sub_23ACFA458(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC907D4);
}

uint64_t sub_23ACFA458(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

void sub_23ACFA470()
{
  uint64_t v0;

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t sub_23ACFA478()
{
  id *v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFA4C4()
{
  return sub_23ACFA4E0((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC908F8);
}

uint64_t sub_23ACFA4E0(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t objectdestroy_1412Tm()
{
  uint64_t v0;

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23ACFA550()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFA55C()
{
  uint64_t v0;

  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 32));

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_23ACFA5B8(uint64_t a1)
{
  uint64_t v1;

  sub_23AC8DC10(a1, *(void (**)(char *, void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(void **)(v1 + 80), *(_BYTE *)(v1 + 88));
}

uint64_t sub_23ACFA5F4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v21 = *(_QWORD *)(v2 + 64);
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 32));

  v22 = v3;
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + v1[7];
  v6 = (int *)type metadata accessor for ItemMetadata();
  v7 = v5 + v6[7];
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v5 + v6[8], v8);
  swift_bridgeObjectRelease();
  v11 = v5 + v6[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(v5 + v6[33]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_23AAAE53C(*v12, v13);
  swift_bridgeObjectRelease();
  v14 = v4 + v1[8];
  v15 = *(void **)(v14 + 16);
  if (v15 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v14 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v16 = v4 + v1[12];
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = sub_23B1C5A08();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

void sub_23ACFA8A0(void *a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_23AC8EF08(a1, v4, *(void (**)(char *, void *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), (uint64_t *)(v2 + v6), *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + v8), *(void **)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v2 + ((v8 + 31) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACFA950()
{
  return sub_23AABA0D4();
}

void sub_23ACFA964()
{
  sub_23ACFBBEC();
}

void sub_23ACFA97C()
{
  sub_23ACFBFD4();
}

uint64_t sub_23ACFA990()
{
  return objectdestroy_3148Tm();
}

void sub_23ACFA998(uint64_t a1)
{
  uint64_t v1;

  sub_23AC45690(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23ACFA9A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23AC8F574(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

void sub_23ACFA9FC(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t objectdestroy_3733Tm()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = v3 + v1[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_23B1C5A08();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  swift_release();
  return swift_deallocObject();
}

void sub_23ACFAC78()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_23AC8F690(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + v2), *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_3721Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v21 = *(_QWORD *)(v2 + 64);
  swift_release();
  v22 = v3;
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + v1[7];
  v6 = (int *)type metadata accessor for ItemMetadata();
  v7 = v5 + v6[7];
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v5 + v6[8], v8);
  swift_bridgeObjectRelease();
  v11 = v5 + v6[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(v5 + v6[33]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_23AAAE53C(*v12, v13);
  swift_bridgeObjectRelease();
  v14 = v4 + v1[8];
  v15 = *(void **)(v14 + 16);
  if (v15 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v14 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v16 = v4 + v1[12];
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = sub_23B1C5A08();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + ((((v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

uint64_t sub_23ACFAF54(void *a1)
{
  uint64_t v1;

  return sub_23AC8C574(a1, *(uint64_t (**)(_QWORD, _QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), "state - fpfs.db.asyncRead error: %@.");
}

uint64_t sub_23ACFAF74()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFAF84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD);
  uint64_t result;
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t, _QWORD))(v0 + 24);
  result = sub_23AE14428(0);
  if (!v1)
  {
    if ((result & 1) != 0)
      v4 = 1;
    else
      v4 = 2;
    return v2(v4, 0);
  }
  return result;
}

void sub_23ACFAFE0()
{
  uint64_t v0;

  sub_23AC89BFC(*(void **)(v0 + 16), *(char **)(v0 + 24), *(void (**)(uint64_t, void *, double))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23ACFAFFC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, double))(v1 + 16))(MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], 0, 0, 0, 0, a1, 0.0);
}

uint64_t sub_23ACFB040()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFB084()
{
  return sub_23ACFB1DC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC8813C);
}

uint64_t sub_23ACFB0A0()
{
  uint64_t v0;

  return sub_23AC88EC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ACFB0B8()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFB0C8()
{
  uint64_t v0;

  return sub_23AC865E4(*(_QWORD *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23ACFB0E4()
{
  return objectdestroy_278Tm();
}

uint64_t objectdestroy_278Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_23ACFB124()
{
  uint64_t v0;
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, id);
  id v2;

  v1 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, id))(v0 + 16);
  v2 = sub_23AC61E18();
  v1(MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], 0, 0, 0, v2);

}

uint64_t sub_23ACFB17C()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFB1C0()
{
  return sub_23ACFB1DC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC851A0);
}

uint64_t sub_23ACFB1DC(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_23ACFB204()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFB214()
{
  return sub_23B04E7F8();
}

uint64_t sub_23ACFB21C()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFB22C()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFB23C(void *a1)
{
  uint64_t v1;

  return sub_23B04E8A0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23ACFB244()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFB254(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t *, uint64_t *);
  uint64_t v4;
  uint64_t v5;

  v2 = *(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(v1 + 16);
  v4 = 0;
  v5 = 0;
  return v2(a1, &v5, &v4);
}

uint64_t sub_23ACFB28C()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACFB298(void *a1, void **a2, void **a3)
{
  uint64_t v3;

  sub_23ACD4C00(a1, *a2, *a3, *(void (**)(void))(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_23ACFB2AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t *, uint64_t *);
  uint64_t v6;
  uint64_t v7;

  v4 = *(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(v3 + 16);
  v6 = a3;
  v7 = a2;
  return v4(a1, &v7, &v6);
}

uint64_t sub_23ACFB2E0()
{
  return objectdestroy_239Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_239Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));

  return swift_deallocObject();
}

uint64_t sub_23ACFB334(uint64_t a1)
{
  _QWORD *v1;
  uint64_t (*v2)(uint64_t, uint64_t *, uint64_t *);
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t *))v1[2];
  v3 = v1[4];
  v5 = v1[5];
  v6 = v3;
  return v2(a1, &v6, &v5);
}

uint64_t sub_23ACFB370()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFB37C()
{
  return objectdestroy_3148Tm();
}

uint64_t objectdestroy_3148Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 40));
  return swift_deallocObject();
}

void sub_23ACFB3C4(uint64_t a1)
{
  uint64_t v1;

  sub_23AC831C0(a1, *(void (**)(id))(v1 + 16), *(void (**)(id))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_23ACFB3D4()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 24));
  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[7];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[8];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v15 = v3 + v1[12];
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = sub_23B1C5A08();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFB654()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AC8359C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(void (**)(_QWORD))(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_23ACFB6C4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_23AC811E0(a1, *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_23ACFB6DC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_fget_parent_syncroot();
  *a1 = result;
  return result;
}

uint64_t sub_23ACFB710@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_fget_syncroot();
  *a1 = result;
  return result;
}

uint64_t sub_23ACFB748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_23B1C5A08();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v0 + v3;
  v9 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_23ACFB830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C5A08() - 8) + 80);
  return sub_23AC80850(a1, v1 + v4, *(void (**)(id, char *, void *))(v1 + v5), *(_QWORD *)(v1 + v5 + 8), v1 + ((v5 + v6 + 16) & ~v6));
}

uint64_t sub_23ACFB8AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Signpost(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = sub_23B1C5DC8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACFB974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(type metadata accessor for Signpost(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AC7F9E8(a1, v1 + v4, *(void (**)(char *, void *))(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACFB9E0()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_23ACFBA14(void *a1)
{
  uint64_t v1;

  sub_23AC7CC78(a1, *(void (**)(id))(v1 + 16), *(char **)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23ACFBA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = (v7 + v5 + 8) & ~v7;
  swift_release();

  swift_release();
  v9 = v0 + v3;
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  sub_23AC03BE4(*(_QWORD *)(v0 + v4));

  v10(v0 + v8, v1);
  return swift_deallocObject();
}

void sub_23ACFBB24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8)
                          + 80);
  sub_23AC7D388(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(char **)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), v1 + ((v6 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6));
}

uint64_t sub_23ACFBBD4()
{
  return sub_23ACFDCB4((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_23B16FCDC);
}

uint64_t sub_23ACFBBE0()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void sub_23ACFBBEC()
{
  sub_23ADAB11C();
}

void sub_23ACFBC24(uint64_t a1)
{
  uint64_t v1;

  sub_23AC7EDEC(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_23ACFBC2C@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t v1;

  return sub_23B17AA64(*(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_23ACFBC48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_release();
  swift_release();
  v4 = v0 + v3;
  v5 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

uint64_t sub_23ACFBCE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8)
                          + 80);
  return sub_23AC7EEC8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_23ACFBD10()
{
  return objectdestroy_3528Tm();
}

uint64_t objectdestroy_3528Tm()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFBD58(uint64_t a1)
{
  return sub_23AC048C0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC7EFE4);
}

uint64_t objectdestroy_3724Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v21 = *(_QWORD *)(v2 + 64);
  swift_release();
  v22 = v3;
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + v1[7];
  v6 = (int *)type metadata accessor for ItemMetadata();
  v7 = v5 + v6[7];
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v5 + v6[8], v8);
  swift_bridgeObjectRelease();
  v11 = v5 + v6[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(v5 + v6[33]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_23AAAE53C(*v12, v13);
  swift_bridgeObjectRelease();
  v14 = v4 + v1[8];
  v15 = *(void **)(v14 + 16);
  if (v15 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v14 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v16 = v4 + v1[12];
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = sub_23B1C5A08();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }
  sub_23AC03BE4(*(_QWORD *)(v0 + ((v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)));
  return swift_deallocObject();
}

void sub_23ACFBFD4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_23AC8EB2C(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + v2), *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACFC02C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_23B191FAC(a1, *(_QWORD **)(v2 + 16), *(void (**)(uint64_t *__return_ptr, _BYTE *, char *))(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_23ACFC048@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_23AC7ECE4(*(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

void sub_23ACFC060(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  sub_23ACD22A8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void (**)(_QWORD *__return_ptr))(v1 + 64));
  if (!v2)
  {
    *a1 = v4;
    a1[1] = v5;
  }
}

uint64_t sub_23ACFC09C()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFC0AC()
{
  uint64_t v0;

  return sub_23ACD1E9C(*(uint64_t **)(v0 + 16), *(void (**)(__int128 *__return_ptr))(v0 + 24));
}

uint64_t sub_23ACFC0B8()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFC0C8()
{
  uint64_t v0;

  sub_23AC04E04(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void **)(v0 + 88), *(_BYTE *)(v0 + 96));
  return swift_deallocObject();
}

id sub_23ACFC110(id result, unint64_t a2, unint64_t a3, void *a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10, char a11)
{
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  switch(a11)
  {
    case 0:
      v15 = result;
      sub_23AAAE5C0(a2, a3, (uint64_t)a4, a5, a6);
      result = a10;
      goto LABEL_6;
    case 1:
      v16 = result;
      swift_bridgeObjectRetain();
      v17 = a4;
      sub_23ACFC26C(a5, a6);
      result = a7;
      goto LABEL_6;
    case 2:
      swift_bridgeObjectRetain();
      result = (id)a3;
      goto LABEL_6;
    case 3:
      v18 = result;
      result = (id)a2;
      goto LABEL_6;
    case 4:
      v19 = result;
      result = (id)a2;
      goto LABEL_6;
    case 6:
    case 8:
    case 9:
LABEL_6:
      result = result;
      break;
    case 7:
      sub_23AAAE668((uint64_t)result, a2);
      result = (id)sub_23AAAE668(a3, (unint64_t)a4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23ACFC26C(uint64_t a1, unint64_t a2)
{
  if ((unint64_t)a1 < 0xFFFFFFFF00000000 || (a2 & 0xF000000000000007) != 0)
    return sub_23AA7F2D4(a1, a2);
  return a1;
}

void sub_23ACFC288(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23AABD5BC(a1, a2);
}

uint64_t sub_23ACFC29C()
{
  return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC374C8);
}

uint64_t sub_23ACFC2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_23AC79BE4(a1, v1 + v4, *(void (**)(uint64_t, void *))v5, *(_QWORD *)(v5 + 8));
}

uint64_t sub_23ACFC34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_23AC03BE4(*(_QWORD *)(v0 + v4));

  return swift_deallocObject();
}

uint64_t sub_23ACFC3EC()
{
  sub_23B1C5A08();
  sub_23AA7E38C(&qword_2542E21F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB00]);
  return sub_23B1C63A4() & 1;
}

void sub_23ACFC460(int a1)
{
  uint64_t v1;

  sub_23AC79354(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_23ACFC478@<X0>(_BYTE *a1@<X8>)
{
  return sub_23ACFD854(a1);
}

void sub_23ACFC490(void *a1)
{
  uint64_t v1;
  void (*v3)(void **);
  id v4;
  void *v5;
  __int16 v6;

  v3 = *(void (**)(void **))(v1 + 16);
  v5 = a1;
  v6 = 256;
  v4 = a1;
  v3(&v5);

}

uint64_t sub_23ACFC4E0()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFC4EC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  unint64_t v24;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v23 = *(_QWORD *)(v2 + 64);
  swift_release();
  v24 = v3;
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + v1[7];
  v6 = (int *)type metadata accessor for ItemMetadata();
  v7 = v5 + v6[7];
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v5 + v6[8], v8);
  swift_bridgeObjectRelease();
  v11 = v5 + v6[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(v5 + v6[33]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_23AAAE53C(*v12, v13);
  swift_bridgeObjectRelease();
  v14 = v4 + v1[8];
  v15 = *(void **)(v14 + 16);
  if (v15 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v14 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v16 = v4 + v1[12];
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = sub_23B1C5A08();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }
  v20 = (v23 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;

  sub_23AC03BE4(*(_QWORD *)(v0 + v21));
  swift_release();
  return swift_deallocObject();
}

void sub_23ACFC77C(void *a1)
{
  uint64_t v1;

  sub_23AAECB48(a1, *(void (**)(void **))(v1 + 16));
}

double sub_23ACFC784(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[29] = 0u;
  a1[30] = 0u;
  a1[27] = 0u;
  a1[28] = 0u;
  a1[25] = 0u;
  a1[26] = 0u;
  a1[23] = 0u;
  a1[24] = 0u;
  a1[21] = 0u;
  a1[22] = 0u;
  a1[19] = 0u;
  a1[20] = 0u;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_23ACFC7CC()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFC7D8(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v15 = *(_OWORD *)(a1 + 416);
  v16 = *(_OWORD *)(a1 + 432);
  v13 = *(_OWORD *)(a1 + 384);
  v14 = *(_OWORD *)(a1 + 400);
  v11 = *(_OWORD *)(a1 + 352);
  v12 = *(_OWORD *)(a1 + 368);
  v9 = *(_OWORD *)(a1 + 320);
  v10 = *(_OWORD *)(a1 + 336);
  v7 = *(_OWORD *)(a1 + 288);
  v8 = *(_OWORD *)(a1 + 304);
  v5 = *(_OWORD *)(a1 + 256);
  v6 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  v4 = *(_OWORD *)(a1 + 240);
  sub_23AAAEC3C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(void **)(a1 + 144),
    *(void **)(a1 + 152),
    *(_OWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    (void *)v3,
    *((uint64_t *)&v3 + 1),
    (void *)v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((unint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((void **)&v10 + 1),
    (void *)v11,
    SBYTE8(v11),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((void **)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    *(_QWORD *)(a1 + 448));
  return a1;
}

uint64_t sub_23ACFC894(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1 + 5;
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_23ACF8BE0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_2569E3220 + dword_2569E3220))(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_23ACFC940(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  id v7;
  id v8;
  id v9;
  uint64_t v11;
  char v12;
  void *v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;

  v3 = *(void **)(a1 + 144);
  v2 = *(void **)(a1 + 152);
  v4 = *(_QWORD *)(a1 + 176);
  v11 = *(_QWORD *)(a1 + 168);
  v5 = *(_QWORD *)(a1 + 184);
  v13 = *(void **)(a1 + 240);
  v14 = *(void **)(a1 + 224);
  v18 = *(_QWORD *)(a1 + 280);
  v19 = *(_QWORD *)(a1 + 272);
  v16 = *(_QWORD *)(a1 + 296);
  v17 = *(_QWORD *)(a1 + 288);
  v15 = *(_QWORD *)(a1 + 304);
  v20 = *(void **)(a1 + 352);
  v21 = *(void **)(a1 + 344);
  v23 = *(_QWORD *)(a1 + 376);
  v24 = *(_QWORD *)(a1 + 368);
  v22 = *(_QWORD *)(a1 + 384);
  v25 = *(void **)(a1 + 424);
  v6 = *(_BYTE *)(a1 + 160);
  v12 = *(_BYTE *)(a1 + 360);
  sub_23AAA7638(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_23AAAE478(v3, v2, v6);
  sub_23AAAE4B4(v11, v4, v5);
  v7 = v13;
  v8 = v14;
  sub_23AAAE5C0(v19, v18, v17, v16, v15);
  sub_23AAAE478(v21, v20, v12);
  sub_23AAAE4B4(v24, v23, v22);
  v9 = v25;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23ACFCAD4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_23ACFCB10(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC769E0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(_BYTE *)(v1 + 56), *(_BYTE *)(v1 + 57));
}

uint64_t sub_23ACFCB2C()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFCB38()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

void sub_23ACFCB7C()
{
  uint64_t v0;

  sub_23AC76BC8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void **)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(unsigned __int8 *)(v0 + 65));
}

uint64_t sub_23ACFCBA4()
{
  uint64_t v0;

  sub_23AC03BE4(*(_QWORD *)(v0 + 16));

  swift_release();
  return swift_deallocObject();
}

void sub_23ACFCBD8(uint64_t a1)
{
  uint64_t v1;

  sub_23AC781BC(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(_QWORD, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23ACFCBE8(uint64_t a1)
{
  return sub_23ACFCC40(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC77AB4);
}

uint64_t objectdestroy_4075Tm()
{
  uint64_t v0;

  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACFCC34(uint64_t a1)
{
  return sub_23ACFCC40(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC77550);
}

uint64_t sub_23ACFCC40(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(unsigned __int8 *)(v2 + 56));
}

void sub_23ACFCC5C()
{
  sub_23ACFCF34((uint64_t)&unk_250BF5B40, (uint64_t)&unk_2569E32C0);
}

uint64_t objectdestroy_4085Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t);
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;

  v1 = (int *)type metadata accessor for VFSItem(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v21 = *(_QWORD *)(v2 + 64);

  swift_release();
  v22 = v3;
  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + v1[7];
  v6 = (int *)type metadata accessor for ItemMetadata();
  v7 = v5 + v6[7];
  v8 = sub_23B1C5BDC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(unint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  v10(v5 + v6[8], v8);
  swift_bridgeObjectRelease();
  v11 = v5 + v6[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
    v10(v11, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)(v5 + v6[33]);
  v13 = v12[1];
  if (v13 >> 60 != 15)
    sub_23AAAE53C(*v12, v13);
  swift_bridgeObjectRelease();
  v14 = v4 + v1[8];
  v15 = *(void **)(v14 + 16);
  if (v15 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v14 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v16 = v4 + v1[12];
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = sub_23B1C5A08();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }
  sub_23AC03BE4(*(_QWORD *)(v0 + ((v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();
  return swift_deallocObject();
}

void sub_23ACFCF10()
{
  sub_23ACFCF34((uint64_t)&unk_250BF5BE0, (uint64_t)&unk_2569E32C8);
}

void sub_23ACFCF34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for VFSItem(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AC77FBC(*(char **)(v2 + 16), *(_BYTE *)(v2 + 24), *(_QWORD *)(v2 + 32), v2 + v6, *(_QWORD *)(v2 + v7), *(void (**)(char *, _QWORD))(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), a1, a2);
}

uint64_t objectdestroy_3194Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  sub_23AC03BE4(*(_QWORD *)(v0 + 48));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFD010()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFD020()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFD02C()
{
  uint64_t v0;

  sub_23AC03BE4(*(_QWORD *)(v0 + 16));
  swift_release();

  swift_release();
  return swift_deallocObject();
}

void sub_23ACFD068()
{
  uint64_t v0;

  sub_23ACCAC04(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void (**)(_QWORD))(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_23ACFD088()
{
  uint64_t v0;

  sub_23AC03BE4(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACFD0C4()
{
  uint64_t v0;

  return sub_23ACCB17C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_23ACFD0DC()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFD0EC()
{
  return objectdestroy_2673Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_2673Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  swift_release();
  a1(*(_QWORD *)(v1 + 40));
  return swift_deallocObject();
}

uint64_t sub_23ACFD138(uint64_t a1)
{
  uint64_t v1;

  return sub_23ADA7CE4(a1, *(void (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23ACFD144()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 56));

  return swift_deallocObject();
}

void sub_23ACFD190(void *a1)
{
  uint64_t v1;

  sub_23ACCB56C(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_BYTE *)(v1 + 72), *(void **)(v1 + 80));
}

uint64_t objectdestroy_2683Tm()
{
  uint64_t v0;

  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFD204()
{
  uint64_t v0;

  return sub_23ACD4150(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(_QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_23ACFD220()
{
  uint64_t v0;

  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFD254(uint64_t a1)
{
  return sub_23AC048C0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACD46CC);
}

uint64_t sub_23ACFD264(uint64_t a1)
{
  return sub_23ACFD2E8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACCB834);
}

uint64_t sub_23ACFD274()
{
  uint64_t v0;

  return sub_23ACDBE60(*(_QWORD *)(v0 + 16), v0 + 24, *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), (void **)(v0 + 72));
}

uint64_t objectdestroy_4179Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 56));

  return swift_deallocObject();
}

uint64_t sub_23ACFD2DC(uint64_t a1)
{
  return sub_23ACFD2E8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ACCB988);
}

uint64_t sub_23ACFD2E8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_23ACFD320()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFD344()
{
  uint64_t *v0;

  return sub_23ACDBF54(v0[2], v0 + 3, v0[5]);
}

uint64_t objectdestroy_4186Tm()
{
  uint64_t v0;

  swift_release();
  sub_23AC03BE4(*(_QWORD *)(v0 + 40));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ACFD3A4()
{
  uint64_t v0;

  return sub_23ACCBAEC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72));
}

uint64_t sub_23ACFD3CC()
{
  uint64_t v0;

  swift_release();
  swift_release();

  sub_23AC03BE4(*(_QWORD *)(v0 + 48));
  return swift_deallocObject();
}

void sub_23ACFD408(void *a1)
{
  uint64_t v1;

  sub_23ACCBC30(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

void *sub_23ACFD418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *result;
  uint64_t v6;
  char v7;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = v4;
  result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(**(_QWORD **)(v3 + 32) + 576))(&v6, v2);
  if (v1)
    return &unk_250BDEEF8;
  return result;
}

uint64_t sub_23ACFD47C()
{
  return objectdestroy_354Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_354Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFD4C8(uint64_t a1)
{
  _QWORD *v1;

  return sub_23AFD0050(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23ACFD4D4()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_23AC03BE4(*(_QWORD *)(v0 + 64));
  swift_release();
  return swift_deallocObject();
}

void sub_23ACFD518(void *a1)
{
  uint64_t v1;

  sub_23ACD2F00(a1, *(NSObject **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(_QWORD *)(v1 + 64), *(void (**)(void *))(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_23ACFD550()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23AC03BE4(*(_QWORD *)(v0 + 72));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFD5A4()
{
  uint64_t v0;

  return sub_23ACD3544(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(uint64_t (**)(_QWORD))(v0 + 88), *(_QWORD *)(v0 + 96), *(uint64_t (**)(_QWORD))(v0 + 104), *(_QWORD *)(v0 + 112));
}

unint64_t sub_23ACFD5E4(void *a1, char a2, void (*a3)(uint64_t, uint64_t, uint64_t), void (*a4)(uint64_t, _QWORD, uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  return sub_23AC48DA8(a1, a2, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), a3, a4, a5);
}

uint64_t sub_23ACFD61C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_23AC03BE4(*(_QWORD *)(v0 + 40));
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFD660()
{
  _QWORD *v0;

  return sub_23ACD25E8(v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_23ACFD694()
{
  uint64_t v0;

  swift_release();

  sub_23AC03BE4(*(_QWORD *)(v0 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFD6D0()
{
  uint64_t v0;

  return sub_23ACDBFC0(*(_QWORD *)(v0 + 16), (void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_23ACFD6F4()
{
  return objectdestroy_30Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

void *sub_23ACFD704()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  uint64_t v5;

  v2 = v0[4];
  v3 = v0[2];
  v5 = v0[3];
  result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(**(_QWORD **)(v3 + 40) + 568))(&v5, v2);
  if (v1)
    return &unk_250BDEE78;
  return result;
}

uint64_t sub_23ACFD758()
{
  uint64_t v0;

  return sub_23AC72D28(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

void sub_23ACFD770(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_23AC518F4(a1, a2, *(NSObject **)(v2 + 16));
}

uint64_t sub_23ACFD788@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ACFD7D0);
  if (!v1)
    *a1 = result;
  return result;
}

void sub_23ACFD7D0(_DWORD *a1@<X8>)
{
  uint64_t v1;

  sub_23AC52578(*(_DWORD *)(v1 + 24), a1);
}

uint64_t sub_23ACFD7EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23ACFD818(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC6E2A8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_23ACFD828()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFD838(int a1)
{
  uint64_t v1;

  return sub_23AC6F018(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23ACFD854@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
    *a1 = 0;
  return result;
}

uint64_t sub_23ACFD880@<X0>(int *a1@<X8>)
{
  return sub_23AC6FA98(a1);
}

uint64_t sub_23ACFD898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_23ACFD924(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AC70AE8(a1, v1 + v4, *(void **)(v1 + v5), *(NSObject **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23ACFD980()
{
  return swift_deallocObject();
}

_QWORD *sub_23ACFD990()
{
  uint64_t v0;

  return sub_23ACD1CFC(*(_BYTE **)(v0 + 16), *(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_23ACFD99C()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFD9AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_23ACD2104(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void (**)(char *__return_ptr))(v1 + 64));
  if (!v2)
    *a1 = result & 1;
  return result;
}

uint64_t sub_23ACFD9EC()
{
  return swift_deallocObject();
}

_QWORD *sub_23ACFD9FC()
{
  uint64_t v0;

  return sub_23ACD1D60(*(_BYTE **)(v0 + 16), *(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_23ACFDA08()
{
  return swift_deallocObject();
}

uint64_t sub_23ACFDA18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AB6395C(*(void **)(v1 + 24), a1);
}

uint64_t sub_23ACFDA30()
{
  return swift_deallocObject();
}

void sub_23ACFDA44(void *a1)
{
  uint64_t v1;

  sub_23AC46C14(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

char *keypath_get_selector_iCDPackageExtensions()
{
  return sel_iCDPackageExtensions;
}

uint64_t sub_23ACFDA60()
{
  return objectdestroy_1892Tm((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t objectdestroy_1892Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFDABC()
{
  return sub_23ACFDAD8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AC6A304);
}

uint64_t sub_23ACFDAD8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_23ACFDAFC()
{
  return objectdestroy_30Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_30Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject();
}

uint64_t sub_23ACFDB48(void *a1)
{
  return sub_23AE10390(a1);
}

uint64_t sub_23ACFDB50()
{
  return swift_deallocObject();
}

id sub_23ACFDB60()
{
  uint64_t v0;

  return sub_23AC69634(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23ACFDB68(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD *, uint64_t);
  _QWORD v4[2];

  v2 = *(uint64_t (**)(_QWORD *, uint64_t))(v1 + 16);
  v4[0] = 0;
  v4[1] = 0;
  return v2(v4, a1);
}

uint64_t sub_23ACFDBA0()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ACFDBAC()
{
  uint64_t v0;

  return sub_23AC688AC(*(void (**)(uint64_t, uint64_t, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_23ACFDBC8(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC022A8(a1, *(uint64_t (**)(_QWORD *, uint64_t))(v1 + 16));
}

uint64_t sub_23ACFDBD0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23ACFDBF4()
{
  uint64_t v0;

  sub_23AC68538(*(_BYTE **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t objectdestroy_3907Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ACFDCA8()
{
  return sub_23ACFDCB4((uint64_t (*)(_QWORD, unint64_t, _QWORD, _QWORD))sub_23AC67BC4);
}

uint64_t sub_23ACFDCB4(uint64_t (*a1)(_QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (_QWORD *)(v1 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(*(_QWORD *)(v1 + 16), v1 + v3, *v4, v4[1]);
}

void sub_23ACFDD10()
{
  uint64_t v0;

  sub_23AC5681C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ACFDD2C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs);
  return swift_retain();
}

uint64_t sub_23ACFDD54()
{
  uint64_t v0;

  return sub_23AC56904(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ACFDD6C()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_2119Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ACFDDB4(void *a1)
{
  uint64_t v1;

  sub_23AC46AE8(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_23ACFDDC0(uint64_t a1)
{
  uint64_t v1;

  sub_23AC51070(a1, v1);
}

uint64_t sub_23ACFDDC8(uint64_t a1)
{
  uint64_t v1;

  return sub_23AC513AC(a1, *(void **)(v1 + 16));
}

void sub_23ACFDDD8()
{
  uint64_t v0;

  sub_23AC51448(*(_QWORD *)(v0 + 16));
}

void sub_23ACFDDF0()
{
  uint64_t v0;

  sub_23AC514DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ACFDE08()
{
  return objectdestroy_1628Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_1628Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

void sub_23ACFDE54(void *a1)
{
  uint64_t v1;

  sub_23AC50430(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_23ACFDE64(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (_QWORD *)(v2 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a2(a1, v2 + v5, *v6, v6[1]);
}

void sub_23ACFDECC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  sub_23AC50150(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t *sub_23ACFDED4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v7 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
    v8 = (char *)v4 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23B1C5BDC();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = a3[5];
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for DBCounters();
    v11(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v10);
    v16 = a3[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    *(_OWORD *)v17 = *(_OWORD *)((char *)a2 + v16);
    *((_QWORD *)v17 + 2) = *(uint64_t *)((char *)a2 + v16 + 16);
    v19 = type metadata accessor for SnapshotCounters();
    v11(&v17[*(int *)(v19 + 28)], &v18[*(int *)(v19 + 28)], v10);
    v20 = a3[7];
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    v11(&v21[*(int *)(v19 + 28)], &v22[*(int *)(v19 + 28)], v10);
  }
  return v4;
}

uint64_t sub_23ACFE024(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v11)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(type metadata accessor for VFSCounters(0) + 28);
  v5 = sub_23B1C5BDC();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v11(v4, v5);
  v6 = a1 + a2[5];
  v7 = type metadata accessor for DBCounters();
  v11(v6 + *(int *)(v7 + 20), v5);
  v8 = a1 + a2[6];
  v9 = type metadata accessor for SnapshotCounters();
  v11(v8 + *(int *)(v9 + 28), v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)(a1 + a2[7] + *(int *)(v9 + 28), v5);
}

uint64_t sub_23ACFE0F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23B1C5BDC();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = a3[5];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v14 = type metadata accessor for DBCounters();
  v10(v12 + *(int *)(v14 + 20), v13 + *(int *)(v14 + 20), v9);
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)(a2 + v15);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(a2 + v15 + 16);
  v18 = type metadata accessor for SnapshotCounters();
  v10(v16 + *(int *)(v18 + 28), v17 + *(int *)(v18 + 28), v9);
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  v10(v20 + *(int *)(v18 + 28), v21 + *(int *)(v18 + 28), v9);
  return a1;
}

_QWORD *sub_23ACFE21C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23B1C5BDC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);
  v14 = type metadata accessor for DBCounters();
  v10(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v9);
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)((char *)a2 + v15);
  *((_QWORD *)v16 + 1) = *(_QWORD *)((char *)a2 + v15 + 8);
  *((_QWORD *)v16 + 2) = *(_QWORD *)((char *)a2 + v15 + 16);
  v18 = type metadata accessor for SnapshotCounters();
  v10(&v16[*(int *)(v18 + 28)], &v17[*(int *)(v18 + 28)], v9);
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  v10(&v20[*(int *)(v18 + 28)], &v21[*(int *)(v18 + 28)], v9);
  return a1;
}

uint64_t sub_23ACFE358(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23B1C5BDC();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = a3[5];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v14 = type metadata accessor for DBCounters();
  v10(v12 + *(int *)(v14 + 20), v13 + *(int *)(v14 + 20), v9);
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)(a2 + v15);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(a2 + v15 + 16);
  v18 = type metadata accessor for SnapshotCounters();
  v10(v16 + *(int *)(v18 + 28), v17 + *(int *)(v18 + 28), v9);
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  v10(v20 + *(int *)(v18 + 28), v21 + *(int *)(v18 + 28), v9);
  return a1;
}

uint64_t sub_23ACFE47C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23B1C5BDC();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v11 = a3[5];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  v14 = type metadata accessor for DBCounters();
  v10(v12 + *(int *)(v14 + 20), v13 + *(int *)(v14 + 20), v9);
  v15 = a3[6];
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_OWORD *)v16 = *(_OWORD *)(a2 + v15);
  *(_QWORD *)(v16 + 16) = *(_QWORD *)(a2 + v15 + 16);
  v18 = type metadata accessor for SnapshotCounters();
  v10(v16 + *(int *)(v18 + 28), v17 + *(int *)(v18 + 28), v9);
  v19 = a3[7];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_QWORD *)(v20 + 16) = *(_QWORD *)(v21 + 16);
  v10(v20 + *(int *)(v18 + 28), v21 + *(int *)(v18 + 28), v9);
  return a1;
}

uint64_t sub_23ACFE5A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23ACFE5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for VFSCounters(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = type metadata accessor for DBCounters();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = type metadata accessor for SnapshotCounters();
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23ACFE644()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23ACFE650(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for VFSCounters(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = type metadata accessor for DBCounters();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for SnapshotCounters();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23ACFE6F0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for VFSCounters(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DBCounters();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for SnapshotCounters();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_23ACFE790()
{
  unint64_t result;

  result = qword_2569E3378;
  if (!qword_2569E3378)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D38FC, &type metadata for FPDDomainFPFSBackend.Counters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E3378);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FileItemKind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FPDDomainFPFSBackend.Counters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23ACFE8B0 + 4 * byte_23B1D353C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23ACFE8E4 + 4 * byte_23B1D3537[v4]))();
}

uint64_t sub_23ACFE8E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23ACFE8EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23ACFE8F4);
  return result;
}

uint64_t sub_23ACFE900(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23ACFE908);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23ACFE90C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23ACFE914(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FPDDomainFPFSBackend.Counters.CodingKeys()
{
  return &type metadata for FPDDomainFPFSBackend.Counters.CodingKeys;
}

unint64_t sub_23ACFE934()
{
  unint64_t result;

  result = qword_2569E33B8;
  if (!qword_2569E33B8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D38D4, &type metadata for FPDDomainFPFSBackend.Counters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E33B8);
  }
  return result;
}

unint64_t sub_23ACFE97C()
{
  unint64_t result;

  result = qword_2569E33C0;
  if (!qword_2569E33C0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D3844, &type metadata for FPDDomainFPFSBackend.Counters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E33C0);
  }
  return result;
}

unint64_t sub_23ACFE9C4()
{
  unint64_t result;

  result = qword_2569E33C8;
  if (!qword_2569E33C8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D386C, &type metadata for FPDDomainFPFSBackend.Counters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E33C8);
  }
  return result;
}

uint64_t sub_23ACFEA08@<X0>(_DWORD *a1@<X8>)
{
  return sub_23AC374EC(a1);
}

uint64_t sub_23ACFEA38(uint64_t a1)
{
  return sub_23ACF8034(a1);
}

uint64_t sub_23ACFEAC4()
{
  return sub_23ACF4930();
}

void sub_23ACFF500()
{
  sub_23ACE2258();
}

void sub_23ACFF518(uint64_t a1, void *a2)
{
  sub_23ACE2324(a1, a2);
}

void sub_23ACFF87C(uint64_t a1@<X8>)
{
  sub_23ACDC1C8(a1);
}

uint64_t sub_23ACFF894()
{
  return sub_23ACF2324();
}

uint64_t sub_23ACFF8A8@<X0>(uint64_t a1@<X8>)
{
  return sub_23ACFDA18(a1);
}

uint64_t sub_23ACFF8D8@<X0>(_QWORD *a1@<X8>)
{
  return sub_23ACE2500(a1);
}

void sub_23ACFF90C(_QWORD *a1@<X8>)
{
  sub_23AAB92E4(a1);
}

void sub_23ACFF97C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_23ACFB6C4(a1, a2);
}

uint64_t sub_23ACFF994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v16;
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);

  v16 = (_QWORD *)*v8;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16[10];
  v17[3] = v16[11];
  v17[4] = a8;
  v17[5] = v16[12];
  v17[6] = v16[13];
  v17[7] = a4;
  v17[8] = a5;
  v18 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))v16[54];
  swift_retain();
  v18(a1, a2, a3, sub_23AD03298, v17, a6, a7);
  return swift_release();
}

uint64_t sub_23ACFFA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t);

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a6;
  *(_QWORD *)(v18 + 24) = a7;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(*(_QWORD *)v9 + 400);
  swift_retain();
  swift_retain();
  v19(a1, a2, a3, 0, sub_23AD035D8, v17, sub_23AA698DC, v18, a8, a9);
  swift_release();
  return swift_release();
}

uint64_t sub_23ACFFB5C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t (*)(), uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);

  v16 = (_QWORD *)*v10;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v16[10];
  v18[3] = v16[11];
  v18[4] = a10;
  v18[5] = v16[12];
  v18[6] = v16[13];
  v18[7] = a6;
  v18[8] = a7;
  v19 = (void (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t (*)(), uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))v16[50];
  swift_retain();
  swift_retain();
  v19(a1, a2, a3, 0, sub_23AD035D8, v17, sub_23AD03298, v18, a8, a9);
  swift_release();
  return swift_release();
}

uint64_t sub_23ACFFC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t);

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(*(_QWORD *)v7 + 432);
  swift_retain();
  v16(a1, a2, a3, sub_23AA8A65C, v15, a6, a7);
  return swift_release();
}

void sub_23ACFFD18()
{
  type metadata accessor for Mutation();
}

uint64_t sub_23ACFFD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v3 = sub_23B1C67DC();
  MEMORY[0x23B8613CC](MEMORY[0x24BEE12C8], v3);
  result = sub_23B1C6620();
  if (!v0)
  {
    *(_QWORD *)(v2 - 72) = v1;
    type metadata accessor for ReconciliationMutation();
  }
  return result;
}

uint64_t sub_23ACFFF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  _QWORD *v16;
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t);

  v16 = (_QWORD *)*v9;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16[10];
  v17[3] = v16[11];
  v17[4] = a8;
  v17[5] = a9;
  v17[6] = v16[12];
  v17[7] = v16[13];
  v17[8] = a4;
  v17[9] = a5;
  v18 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t))v16[54];
  swift_retain();
  v18(a1, a2, a3, sub_23AD03270, v17, a6, a7);
  return swift_release();
}

uint64_t sub_23AD00018()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E33E0);
  return sub_23B1C644C();
}

unint64_t sub_23AD0004C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
  *(_QWORD *)(inited + 32) = sub_23B1C63E0();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_23B1C6434();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v3;
  return sub_23AAE9EB4(inited);
}

uint64_t sub_23AD000DC()
{
  sub_23AD03594();
  return sub_23B1C7430();
}

uint64_t sub_23AD00104()
{
  sub_23AD03594();
  return sub_23B1C7424();
}

uint64_t sub_23AD0012C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  double v6;
  uint64_t result;
  double v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v1 = sub_23B1C5BDC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v23 = 91;
  v24 = 0xE100000000000000;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v6 = v5;
  result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v8 = v6 * 1000000000.0;
  if ((~COERCE__INT64(v6 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v22 = (uint64_t)v8 / 1000000;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v22 = v0[2];
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v10 = v23;
  v9 = v24;
  v23 = 0x676E696E6E757220;
  v24 = 0xE90000000000003ALL;
  v22 = v0[3];
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v23 = v10;
  v24 = v9;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v23;
  v11 = v24;
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_23B1C6EFC();
  result = swift_bridgeObjectRelease();
  v23 = 0xD000000000000013;
  v24 = 0x800000023B200870;
  v13 = v0[4];
  v14 = v0[5];
  v15 = __OFADD__(v13, v14);
  v16 = v13 + v14;
  if (v15)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v22 = v16;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v23 = v12;
  v24 = v11;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v23;
  v17 = v24;
  v23 = 0x6E69767261747320;
  v24 = 0xEA00000000003A67;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v23 = v18;
  v24 = v17;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v23;
  v19 = v24;
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_23B1C6EFC();
  result = swift_bridgeObjectRelease();
  v23 = 0xD000000000000010;
  v24 = 0x800000023B200890;
  if ((uint64_t)v0[3] < 1 || !__OFADD__(v0[4], v0[5]))
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v23 = v20;
    v24 = v19;
    swift_bridgeObjectRetain();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_23AD00560()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistenceCounters()
{
  return objc_opt_self();
}

uint64_t sub_23AD00590()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23AD005E4()
{
  return sub_23AD0012C();
}

void sub_23AD00604()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00664()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD006C4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00724()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00784()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD007E4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00844()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD008A4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00904()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00964()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD009C4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00A24()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00A84()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00AE4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00B44()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00BA4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00C04()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00C64()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00CC4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00D24()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00D84()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00DE4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00E44()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00EA4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00F04()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00F64()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD00FC4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD01024()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD01084()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD010E4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD01144()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD011A4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD01204()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD01264()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD012C4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD01324()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD01384()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD013E4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD01444()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD014A4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD01504()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD01564()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD015C4()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23AD01624()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_23AD01660()
{
  sub_23AD01624();
  return swift_deallocClassInstance();
}

void type metadata accessor for Database()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD0168C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 24) + 256))();
  if (!v1)
  {
    if (v3)
      type metadata accessor for Propagation.UpdateItem();
    return 0;
  }
  return v2;
}

void sub_23AD0181C(uint64_t a1)
{
  uint64_t v1;

  sub_23AD025B0(a1, v1, (void (*)(uint64_t, uint64_t))sub_23AD0183C);
}

void sub_23AD0183C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[12];

  v16[7] = a1;
  v16[3] = a2;
  v4 = *a2;
  v5 = *(_QWORD *)(*a2 + 88);
  v6 = *(_QWORD *)(*a2 + 104);
  v7 = type metadata accessor for SnapshotMutation(0, v5, v6, a4);
  v16[2] = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v16[1] = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v16[0] = (char *)v16 - v10;
  v11 = *(_QWORD *)(v4 + 80);
  v12 = *(_QWORD *)(v4 + 96);
  v14 = type metadata accessor for SnapshotMutation(0, v11, v12, v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  v16[4] = v11;
  v16[5] = v6;
  v16[8] = v11;
  v16[9] = v5;
  v16[6] = v5;
  v16[10] = v12;
  v16[11] = v6;
  type metadata accessor for Mutation();
}

void sub_23AD01A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(v6 - 144), v4, a4);
  swift_getTupleTypeMetadata2();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  sub_23B0EBD2C();
}

void sub_23AD01A88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  MEMORY[0x24BDAC7A8](a1);
  v4 = *(_QWORD *)(v2 - 136);
  v3 = *(_QWORD *)(v2 - 128);
  v6 = type metadata accessor for SnapshotItem(255, v3, v4, v5);
  *(_QWORD *)(v2 - 112) = v6;
  *(_QWORD *)(v2 - 104) = v6;
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v2 - 96) = &type metadata for Fields;
  *(_QWORD *)(v2 - 88) = v7;
  v8 = v1 + *(int *)(swift_getTupleTypeMetadata() + 48);
  swift_bridgeObjectRelease();
  v10 = type metadata accessor for SnapshotItem(0, v3, v4, v9);
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v8, v10);
  v11(v1, v10);
  JUMPOUT(0x23AD01D04);
}

void sub_23AD01B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E74E0);
  swift_getTupleTypeMetadata3();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0, AssociatedTypeWitness);
  JUMPOUT(0x23AD01FF0);
}

void sub_23AD01CA0()
{
  swift_getAssociatedTypeWitness();
  JUMPOUT(0x23AD01CBCLL);
}

void sub_23AD01D2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v4 = v1;
  MEMORY[0x24BDAC7A8](a1);
  v5 = *(_QWORD *)(v3 - 144);
  v7 = type metadata accessor for SnapshotItem(255, v5, v4, v6);
  *(_QWORD *)(v3 - 112) = v7;
  *(_QWORD *)(v3 - 104) = v7;
  v8 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 - 96) = &type metadata for Fields;
  *(_QWORD *)(v3 - 88) = v8;
  v9 = v2 + *(int *)(swift_getTupleTypeMetadata() + 48);
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for SnapshotItem(0, v5, v4, v10);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v9, v11);
  v12(v2, v11);
  JUMPOUT(0x23AD01FC8);
}

void sub_23AD01E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E74E0);
  swift_getTupleTypeMetadata3();
  swift_bridgeObjectRelease();
  JUMPOUT(0x23AD01F50);
}

void sub_23AD01F60()
{
  swift_getAssociatedTypeWitness();
  JUMPOUT(0x23AD01F80);
}

void sub_23AD01FDC()
{
  JUMPOUT(0x23AD01FECLL);
}

void sub_23AD02014()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD0204C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
  if (qword_2542DE248 != -1)
    swift_once();
  sub_23AD020B8();
}

void sub_23AD020B0()
{
  sub_23AD02014();
}

void sub_23AD020B8()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD02100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t AssociatedConformanceWitness;
  uint64_t v20;

  *(_QWORD *)(v12 - 128) = a1;
  v13 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v12 - 136) = (char *)&a9 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v12 - 192) = (char *)&a9 - v16;
  MEMORY[0x24BDAC7A8](v15);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v12 - 168) = v11;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v12 - 152) = v9;
  *(_QWORD *)(v12 - 144) = v10;
  v20 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v12 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v12 - 104) = v18;
  *(_QWORD *)(v12 - 96) = AssociatedConformanceWitness;
  *(_QWORD *)(v12 - 88) = v20;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AD02210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[96];

  v6 = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 160) = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v41[-v9];
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  v12 = *(_QWORD *)(v4 - 128);
  v11(v2, *(_QWORD *)(v4 - 120), v12);
  if (swift_getEnumCaseMultiPayload() != 9)
  {
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v12);
    goto LABEL_5;
  }
  v14 = type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v4 - 168), v3, v13);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v16 = (uint64_t *)(v2 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v10, v2, a1);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v10, a1);
    (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v16, v14);
LABEL_5:
    v17 = *(_QWORD *)(v4 - 120);
    goto LABEL_6;
  }
  v25 = *v16;
  *(_QWORD *)(v4 - 168) = v16[1];
  *(_QWORD *)(v4 - 208) = v16[2];
  if (!sub_23AE4F6B4() || (v25 & *(_QWORD *)(v4 - 176)) == 0)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v10, a1);
    goto LABEL_5;
  }
  *(_QWORD *)(v4 - 200) = v1;
  v26 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v27 = v12;
  v28 = *(_QWORD *)(v4 - 120);
  v26(v28, v27);
  v29 = *(int *)(TupleTypeMetadata2 + 48);
  v30 = *(_QWORD *)(v4 - 192);
  v31 = (_QWORD *)(v30 + v29);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 16))(v30, v10, a1);
  *(_QWORD *)(v4 - 216) = v25 & ~*(_QWORD *)(v4 - 176);
  v17 = v28;
  v12 = v27;
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v10, a1);
  v32 = *(_QWORD *)(v4 - 168);
  *v31 = *(_QWORD *)(v4 - 216);
  v31[1] = v32;
  v1 = *(_QWORD *)(v4 - 200);
  v31[2] = *(_QWORD *)(v4 - 208);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v17, v30, v12);
LABEL_6:
  v18 = *(_QWORD *)(v4 - 136);
  v11(v18, v17, v12);
  if (swift_getEnumCaseMultiPayload() != 8)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v18, v12);
  v20 = type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v4 - 144), *(_QWORD *)(v4 - 152), v19);
  v21 = swift_getTupleTypeMetadata2();
  v22 = (uint64_t *)(v18 + *(int *)(v21 + 48));
  v23 = *(_QWORD *)(v4 - 160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v23, v18, a1);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v23, a1);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v22, v20);
  }
  else
  {
    v33 = v12;
    v34 = *v22;
    *(_QWORD *)(v4 - 136) = v22[1];
    v35 = v22[2];
    if (sub_23AE4F6B4() && (v34 & *(_QWORD *)(v4 - 176)) != 0)
    {
      *(_QWORD *)(v4 - 200) = v1;
      (*(void (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v4 - 120), v33);
      v36 = v35;
      v37 = *(_QWORD *)(v4 - 192);
      v38 = (uint64_t *)(v37 + *(int *)(v21 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v37, v23, a1);
      v39 = v34 & ~*(_QWORD *)(v4 - 176);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v23, a1);
      v40 = *(_QWORD *)(v4 - 136);
      *v38 = v39;
      v38[1] = v40;
      v38[2] = v36;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 200) + 32))(*(_QWORD *)(v4 - 120), v37, v33);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v23, a1);
    }
  }
}

void sub_23AD025B0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  void *v6;

  v6 = (void *)MEMORY[0x23B8601A8]();
  a3(a1, a2);
  objc_autoreleasePoolPop(v6);
}

void sub_23AD02610(uint64_t a1)
{
  uint64_t v1;

  sub_23AD025B0(a1, v1, (void (*)(uint64_t, uint64_t))sub_23AD02630);
}

void sub_23AD02630(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[12];

  v16[7] = a1;
  v16[3] = a2;
  v4 = *a2;
  v5 = *(_QWORD *)(*a2 + 88);
  v6 = *(_QWORD *)(*a2 + 104);
  v7 = type metadata accessor for SnapshotMutation(0, v5, v6, a4);
  v16[2] = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v16[1] = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v16[0] = (char *)v16 - v10;
  v11 = *(_QWORD *)(v4 + 80);
  v12 = *(_QWORD *)(v4 + 96);
  v14 = type metadata accessor for SnapshotMutation(0, v11, v12, v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  v16[4] = v11;
  v16[5] = v6;
  v16[8] = v11;
  v16[9] = v5;
  v16[6] = v5;
  v16[10] = v12;
  v16[11] = v6;
  type metadata accessor for Mutation();
}

void sub_23AD02878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  type metadata accessor for SnapshotItem(255, *(_QWORD *)(v4 - 144), v0, v5);
  swift_getTupleTypeMetadata2();
  swift_bridgeObjectRelease();
  JUMPOUT(0x23AD02DD0);
}

void sub_23AD0289C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  MEMORY[0x24BDAC7A8](v5);
  v7 = *(_QWORD *)(v4 - 136);
  v6 = *(_QWORD *)(v4 - 128);
  v9 = type metadata accessor for SnapshotItem(255, v6, v7, v8);
  *(_QWORD *)(v4 - 112) = v9;
  *(_QWORD *)(v4 - 104) = v9;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 - 96) = &type metadata for Fields;
  *(_QWORD *)(v4 - 88) = v10;
  v11 = v0 + *(int *)(swift_getTupleTypeMetadata() + 48);
  swift_bridgeObjectRelease();
  v13 = type metadata accessor for SnapshotItem(0, v6, v7, v12);
  v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
  v14(v11, v13);
  v14(v0, v13);
  JUMPOUT(0x23AD02DD8);
}

void sub_23AD02998()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E74E0);
  swift_getTupleTypeMetadata3();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0, AssociatedTypeWitness);
  sub_23B0EBD2C();
}

void sub_23AD02AA8()
{
  JUMPOUT(0x23AD02DD4);
}

void sub_23AD02ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
  swift_getAssociatedTypeWitness();
  JUMPOUT(0x23AD02AE8);
}

void sub_23AD02B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v4, v1);
  MEMORY[0x24BDAC7A8](v6);
  v7 = *(_QWORD *)(v5 - 144);
  v9 = type metadata accessor for SnapshotItem(255, v7, v0, v8);
  *(_QWORD *)(v5 - 112) = v9;
  *(_QWORD *)(v5 - 104) = v9;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 - 96) = &type metadata for Fields;
  *(_QWORD *)(v5 - 88) = v10;
  v11 = v3 + *(int *)(swift_getTupleTypeMetadata() + 48);
  swift_bridgeObjectRelease();
  v13 = type metadata accessor for SnapshotItem(0, v7, v0, v12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  JUMPOUT(0x23AD02C24);
}

void sub_23AD02C30()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E74E0);
  swift_getTupleTypeMetadata3();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0, AssociatedTypeWitness);
  sub_23B0EBD2C();
}

void sub_23AD02D4C()
{
  JUMPOUT(0x23AD02DD4);
}

void sub_23AD02D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
  swift_getAssociatedTypeWitness();
  JUMPOUT(0x23AD02D90);
}

uint64_t sub_23AD02DFC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v11;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t);

  v16 = (_QWORD *)*v11;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v16[10];
  v18[3] = v16[11];
  v18[4] = a10;
  v18[5] = a11;
  v18[6] = v16[12];
  v18[7] = v16[13];
  v18[8] = a6;
  v18[9] = a7;
  v19 = (void (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t))v16[50];
  swift_retain();
  swift_retain();
  v19(a1, a2, a3, 0, sub_23AA7E774, v17, sub_23AD03270, v18, a8, a9);
  swift_release();
  return swift_release();
}

uint64_t sub_23AD02F10(void *a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v4 = sub_23B1C74F0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - v6;
  *(uint64_t *)((char *)&v10 - v6) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  v8 = a1;
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23AD02FD0(uint64_t a1, void (*a2)(char *, char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  v20 = a2;
  v10 = sub_23B1C6C98();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v19 - v12;
  v14 = sub_23B1C6C98();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v19 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 56))((char *)&v19 - v16, 1, 1, a6);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 56))(v13, 1, 1, a7);
  v20(v17, v13, a1);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

void sub_23AD03100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v4 + 456))(a1, 1, a2, a3, a4);
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_getErrorValue();
  v5 = sub_23B0D9CF0(v7);
  v6 = objc_msgSend(v5, sel_description);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23AD0324C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD03274()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD0329C(void *a1)
{
  uint64_t v1;

  return sub_23AD02F10(a1, *(void (**)(char *))(v1 + 56));
}

uint64_t sub_23AD032C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD032E4(uint64_t a1)
{
  uint64_t v1;

  return sub_23AD02FD0(a1, *(void (**)(char *, char *, uint64_t))(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

_QWORD *sub_23AD03314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  swift_weakAssign();
  swift_weakAssign();
  v7 = *(void (**)(uint64_t))(*v6 + 176);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v8 = swift_unknownObjectRetain();
  v7(v8);
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_weakAssign();
  swift_release();
  return v6;
}

uint64_t getEnumTagSinglePayload for EvictionUrgency(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MaterializationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23AD034C8 + 4 * byte_23B1D3C49[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23AD034FC + 4 * byte_23B1D3C44[v4]))();
}

uint64_t sub_23AD034FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD03504(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD0350CLL);
  return result;
}

uint64_t sub_23AD03518(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD03520);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23AD03524(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD0352C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MaterializationError()
{
  return &type metadata for MaterializationError;
}

unint64_t sub_23AD03550()
{
  unint64_t result;

  result = qword_2569E33D0;
  if (!qword_2569E33D0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D3E18, &type metadata for MaterializationError);
    atomic_store(result, (unint64_t *)&qword_2569E33D0);
  }
  return result;
}

unint64_t sub_23AD03594()
{
  unint64_t result;

  result = qword_2569E33D8;
  if (!qword_2569E33D8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D3D98, &type metadata for MaterializationError);
    atomic_store(result, (unint64_t *)&qword_2569E33D8);
  }
  return result;
}

uint64_t sub_23AD035F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_23AAA159C((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_23AD1A024(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_23AA8A05C(a1, qword_2542E5640);
    sub_23B182330(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_23AA8A05C((uint64_t)v9, qword_2542E5640);
  }
}

uint64_t sub_23AD036CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_23AA8A05C(a1, (uint64_t *)&unk_2542E4750);
    v15 = sub_23AA97254(a2, a3);
    if ((v16 & 1) != 0)
    {
      v17 = v15;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v19 = *v4;
      v24 = *v4;
      *v4 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_23B186830();
        v19 = v24;
      }
      sub_23AA724E8(*(_QWORD *)(v19 + 56) + *(_QWORD *)(v12 + 72) * v17, (uint64_t)v10, (uint64_t *)&unk_2542E6B00);
      sub_23B18364C(v17, v19);
      *v4 = v19;
      swift_bridgeObjectRelease();
      v20 = 0;
    }
    else
    {
      v20 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v20, 1, v11);
    return sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E4750);
  }
  else
  {
    sub_23AA724E8(a1, (uint64_t)v14, (uint64_t *)&unk_2542E6B00);
    v21 = swift_isUniquelyReferenced_nonNull_native();
    v24 = *v4;
    *v4 = 0x8000000000000000;
    sub_23AD24D0C((uint64_t)v14, a2, a3, v21, (void (*)(void))sub_23B186830, (uint64_t *)&unk_2542E6B00, &qword_2542E3650);
    *v4 = v24;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23AD038CC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A18);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_23AA8A05C(a1, &qword_2542E6A18);
    v13 = sub_23AAB567C(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_23B186DDC();
        v17 = v22;
      }
      sub_23AA724E8(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, &qword_2542E6A10);
      sub_23B183664(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_23AA8A05C((uint64_t)v8, &qword_2542E6A18);
  }
  else
  {
    sub_23AA724E8(a1, (uint64_t)v12, &qword_2542E6A10);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_23AD24E58((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23AD03AA8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDD10);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_23AA8A05C(a1, qword_2542DDD10);
    v15 = sub_23AA97254(a2, a3);
    if ((v16 & 1) != 0)
    {
      v17 = v15;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v19 = *v4;
      v24 = *v4;
      *v4 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_23B186B9C();
        v19 = v24;
      }
      sub_23AA724E8(*(_QWORD *)(v19 + 56) + *(_QWORD *)(v12 + 72) * v17, (uint64_t)v10, &qword_2542E6C80);
      sub_23B183658(v17, v19);
      *v4 = v19;
      swift_bridgeObjectRelease();
      v20 = 0;
    }
    else
    {
      v20 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v20, 1, v11);
    return sub_23AA8A05C((uint64_t)v10, qword_2542DDD10);
  }
  else
  {
    sub_23AA724E8(a1, (uint64_t)v14, &qword_2542E6C80);
    v21 = swift_isUniquelyReferenced_nonNull_native();
    v24 = *v4;
    *v4 = 0x8000000000000000;
    sub_23AD24D0C((uint64_t)v14, a2, a3, v21, (void (*)(void))sub_23B186B9C, &qword_2542E6C80, (uint64_t *)&unk_2569E1AD8);
    *v4 = v24;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23AD03CA8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_23AA8A05C(a1, (uint64_t *)&unk_2542E4310);
    sub_23B1828AC(a2, (uint64_t)v8);
    sub_23AD2873C(a2);
    return sub_23AA8A05C((uint64_t)v8, (uint64_t *)&unk_2542E4310);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_23AD257C4((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    swift_bridgeObjectRelease();
    return sub_23AD2873C(a2);
  }
}

uint64_t sub_23AD03E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_23AA8A05C(a1, (uint64_t *)&unk_2542E4310);
    sub_23B182898(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E4310);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_23AD263DC((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_23B188018, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &qword_2569E1B40);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23AD03F98(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE6D0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_23AA8A05C(a1, &qword_2542DE6D0);
    sub_23B182ADC(a2, (uint64_t)v8);
    return sub_23AA8A05C((uint64_t)v8, &qword_2542DE6D0);
  }
  else
  {
    sub_23AA94050(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_23AD25D3C((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23AD040E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5A08();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_23AA8A05C(a1, (uint64_t *)&unk_2542E6740);
    sub_23B182F84(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E6740);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_23AD263DC((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_23B189C8C, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0], &qword_2569E1CA8);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_23AD0426C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_23AD042A4(a1, a2, a3, a4, (void (*)(void))sub_23B18AE24, (uint64_t *)&unk_2542DF3A8, (void (*)(unint64_t, uint64_t))sub_23B185D7C);
}

uint64_t sub_23AD04288(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_23AD042A4(a1, a2, a3, a4, (void (*)(void))sub_23B18AE18, &qword_2569E40D8, (void (*)(unint64_t, uint64_t))sub_23B185D7C);
}

uint64_t sub_23AD042A4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t *a6, void (*a7)(unint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v9;
  char v14;
  unint64_t v16;
  char v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v9 = v7;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v16 = sub_23AAAF4C4(a3, a4);
    v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v20 = *v7;
      v23 = *v9;
      *v9 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        a5();
        v20 = v23;
      }
      swift_bridgeObjectRelease();
      a7(v16, v20);
      *v9 = v20;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v14 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v7;
    *v7 = 0x8000000000000000;
    sub_23AD26E10(a1, a3, a4, v14, (uint64_t (*)(void))a5, a6);
    *v7 = v22;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AD043FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_23ABD76F0((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_23AD26CB8(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_23AA8A05C(a1, &qword_2569E40E0);
    sub_23B183114(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_23AA8A05C((uint64_t)v9, &qword_2569E40E0);
  }
}

uint64_t sub_23AD044D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t EnumCaseMultiPayload;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  int *TupleTypeMetadata;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  ValueMetadata *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v4 = (uint64_t *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v2 + 16))(v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 0:
      swift_getAssociatedTypeWitness();
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v7 = swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v9 = swift_getAssociatedConformanceWitness();
      v18 = AssociatedTypeWitness;
      v19 = (ValueMetadata *)v7;
      v20 = AssociatedConformanceWitness;
      v21 = v9;
      type metadata accessor for FileItemVersion();
    case 1:
      MEMORY[0x24BDAC7A8](EnumCaseMultiPayload);
      strcpy((char *)&v17 - 48, " filename below syncability originalError ");
      v18 = swift_getAssociatedTypeWitness();
      v19 = &type metadata for Filename;
      v20 = v18;
      v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E22A0);
      v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E7700);
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      swift_bridgeObjectRelease();
      v11 = (char *)v4 + TupleTypeMetadata[16];
      sub_23AB22AE4(*(uint64_t *)((char *)v4 + TupleTypeMetadata[20]), *(uint64_t *)((char *)v4 + TupleTypeMetadata[20] + 8));
      v12 = *(uint64_t *)((char *)v4 + TupleTypeMetadata[24]);
      v13 = swift_getAssociatedTypeWitness();
      v14 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
      v14(v11, v13);
      v14((char *)v4, v13);
      break;
    case 3:
      v15 = swift_getAssociatedTypeWitness();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E7700);
      v12 = *(uint64_t *)((char *)v4 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v4, v15);
      break;
    case 8:
      v12 = *v4;
      break;
    default:
      (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, a1);
      v12 = 0;
      break;
  }
  return v12;
}

uint64_t sub_23AD0488C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for FileTreeError(0, a1, a2, a4);
  swift_getMetatypeMetadata();
  return sub_23B1C644C();
}

uint64_t type metadata accessor for FileTreeError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError);
}

void sub_23AD048D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v1 + 16))((char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_23AD04964 + 4 * word_23B1D3E9A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23AD04964()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v0 - 104) = AssociatedTypeWitness;
  *(_QWORD *)(v0 - 96) = v2;
  *(_QWORD *)(v0 - 88) = AssociatedConformanceWitness;
  *(_QWORD *)(v0 - 80) = v4;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD04A20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t TupleTypeMetadata3;
  uint64_t v4;

  v2 = sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E7700);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v4 = v0 + *(int *)(TupleTypeMetadata3 + 48);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v4, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  return 0;
}

unint64_t sub_23AD04EA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[2];
  __int128 v27;
  uint64_t v28;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23AD044D0(v4);
  if (v7
    && (*(_QWORD *)&v27 = v7,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880),
        sub_23AB6CDB0(),
        (swift_dynamicCast() & 1) != 0))
  {
    v8 = *(void **)&v26[0];
    v9 = objc_msgSend(*(id *)&v26[0], sel_userInfo);
    v10 = MEMORY[0x24BEE0D00];
    v11 = sub_23B1C620C();

    v12 = sub_23B1C63E0();
    v14 = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, a1);
    v15 = sub_23B1C6434();
    v28 = v10;
    *(_QWORD *)&v27 = v15;
    *((_QWORD *)&v27 + 1) = v16;
    sub_23AAA159C(&v27, v26);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v11;
    sub_23AD1A024(v26, v12, v14, isUniquelyReferenced_nonNull_native);
    v18 = v25;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
    *(_QWORD *)(inited + 32) = sub_23B1C63E0();
    *(_QWORD *)(inited + 40) = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, a1);
    v21 = sub_23B1C6434();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v21;
    *(_QWORD *)(inited + 56) = v22;
    return sub_23AAE9EB4(inited);
  }
  return v18;
}

uint64_t sub_23AD050A0()
{
  unint64_t v0;

  v0 = sub_23B1C73C4();
  swift_bridgeObjectRelease();
  if (v0 >= 0x19)
    return 25;
  else
    return v0;
}

uint64_t sub_23AD050F4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AD05130 + 4 * byte_23B1D3EC6[a1]))(0x46746F4E6D657469, 0xEC000000646E756FLL);
}

uint64_t sub_23AD05130()
{
  return 0x6C6C6F436D657469;
}

uint64_t sub_23AD05154()
{
  return 0x6F42746F6E6E6163;
}

unint64_t sub_23AD05174()
{
  return 0xD000000000000012;
}

uint64_t sub_23AD053B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AD0488C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a3, a4);
}

uint64_t sub_23AD053C8(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D408C, a1);
  return sub_23B1C7430();
}

uint64_t sub_23AD053FC(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D408C, a1);
  return sub_23B1C7424();
}

uint64_t sub_23AD05430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x23B8613CC](&unk_23B1D4760, a3);
  return sub_23B1C73B8();
}

uint64_t sub_23AD05484(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D4760, a1);
  return sub_23B1C6698();
}

uint64_t sub_23AD054D0()
{
  MEMORY[0x23B8613CC](&unk_23B1D4760);
  return sub_23B1C66B0();
}

uint64_t sub_23AD05520()
{
  MEMORY[0x23B8613CC](&unk_23B1D4760);
  return sub_23B1C66A4();
}

uint64_t sub_23AD05570@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AD050A0();
  *a1 = result;
  return result;
}

uint64_t sub_23AD055A4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23AD050F4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_23AD055D0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_23AD053B0(*v1, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_23AD055DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = sub_23AD050F0(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_23AD05608@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AD283F0();
  *a1 = result;
  return result;
}

uint64_t sub_23AD05630(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D4F30, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD05664(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D4F30, a1);
  return sub_23B1C7550();
}

void sub_23AD05698(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t AssociatedConformanceWitness;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = v2;
  v43 = a2;
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = sub_23B1C6C98();
  v38 = *(_QWORD *)(v40 - 8);
  v8 = MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)&v34 - v9;
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v36 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v35 = (char *)&v34 - v12;
  v41 = v6;
  v42 = v5;
  v13 = swift_getAssociatedTypeWitness();
  v14 = sub_23B1C6C98();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v34 - v17;
  v19 = *(_QWORD *)(v13 - 8);
  v20 = MEMORY[0x24BDAC7A8](v16);
  v34 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v34 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v3 + *(int *)(a1 + 36), v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v24(v23, v18, v13);
    v26 = v38;
    v25 = v39;
    v27 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v39, v3 + *(int *)(a1 + 40), v40);
    v28 = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v25, 1, AssociatedTypeWitness) != 1)
    {
      v31 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
      v32 = v35;
      v31(v35, v25, AssociatedTypeWitness);
      v33 = (uint64_t)v34;
      v24(v34, v23, v13);
      v31(v36, v32, AssociatedTypeWitness);
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      sub_23AA6B6BC(v33, v13, v43);
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v13);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v27);
  }
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v30 = swift_getAssociatedConformanceWitness();
  v44 = v13;
  v45 = AssociatedTypeWitness;
  v46 = AssociatedConformanceWitness;
  v47 = v30;
  type metadata accessor for FileItemVersion();
}

void sub_23AD05A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v2;
  *(_QWORD *)(v4 - 104) = v3;
  *(_QWORD *)(v4 - 96) = v1;
  *(_QWORD *)(v4 - 88) = v0;
  type metadata accessor for FileItemVersion();
}

void sub_23AD05A30()
{
  JUMPOUT(0x23AD05A44);
}

uint64_t sub_23AD05A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  int *found;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  unint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t, uint64_t);
  void (*v28)(uint64_t, uint64_t);
  uint64_t result;
  void *v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t AssociatedTypeWitness;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v36 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v38 = a1;
  (*(void (**)(uint64_t, uint64_t))(v36 + 16))(a7, a1);
  found = (int *)type metadata accessor for FileTreeError.ItemNotFoundStruct(0, a5, a6, v14);
  v16 = a7 + found[9];
  swift_getAssociatedTypeWitness();
  v17 = sub_23B1C6C98();
  v33 = v16;
  v34 = *(_QWORD *)(v17 - 8);
  v37 = a2;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v16, v18, v17);
  v21 = a7 + found[10];
  swift_getAssociatedTypeWitness();
  v22 = sub_23B1C6C98();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v21, v19, v22);
  if (v20)
  {
    swift_getErrorValue();
    v24 = sub_23AD3DAEC(v40, v41);
    if (v39)
    {

      v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v26(v19, v22);
      v27 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v27(v37, v17);
      v28 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v28(v38, AssociatedTypeWitness);
      v28(a7, AssociatedTypeWitness);
      v27(v33, v17);
      return ((uint64_t (*)(uint64_t, uint64_t))v26)(v21, v22);
    }
    v31 = v25;
    v30 = v24;

  }
  else
  {
    v30 = 0;
    v31 = 0xF000000000000000;
  }
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v19, v22);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v37, v17);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v38, AssociatedTypeWitness);
  v32 = (_QWORD *)(a7 + found[11]);
  *v32 = v30;
  v32[1] = v31;
  return result;
}

uint64_t sub_23AD05CCC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x56746E65746E6F63 && a2 == 0xEE006E6F69737265 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023B200930 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023B200950)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23AD05E94(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AD05EC4 + 4 * byte_23B1D3EDF[a1]))(0x44496D657469, 0xE600000000000000);
}

uint64_t sub_23AD05EC4()
{
  return 0x56746E65746E6F63;
}

unint64_t sub_23AD05EE8()
{
  return 0xD000000000000011;
}

unint64_t sub_23AD05F04()
{
  return 0xD000000000000014;
}

uint64_t sub_23AD05F24(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t found;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  char v21;

  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v16 = a2;
  found = type metadata accessor for FileTreeError.ItemNotFoundStruct.CodingKeys(255, v6, v5, a4);
  MEMORY[0x23B8613CC](&unk_23B1D6490, found);
  v8 = sub_23B1C72EC();
  v17 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v15 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C7538();
  LOBYTE(v20) = 0;
  swift_getAssociatedTypeWitness();
  v15[1] = v6;
  swift_getAssociatedConformanceWitness();
  v11 = v18;
  v12 = v8;
  sub_23B1C72A4();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, v8);
  v14 = v17;
  LOBYTE(v20) = 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7238();
  LOBYTE(v20) = 2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7238();
  v20 = *(_OWORD *)(v19 + *(int *)(v16 + 44));
  v21 = 3;
  sub_23AB5EB5C();
  sub_23B1C7238();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v10, v12);
}

uint64_t sub_23AD06200@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t found;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t AssociatedTypeWitness;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  __int128 v53;
  char v54;

  v35 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = sub_23B1C6C98();
  v40 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v31 - v7;
  v45 = swift_getAssociatedTypeWitness();
  v44 = sub_23B1C6C98();
  v41 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v39 = (char *)&v31 - v8;
  v46 = swift_getAssociatedTypeWitness();
  v42 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v47 = (char *)&v31 - v9;
  found = type metadata accessor for FileTreeError.ItemNotFoundStruct.CodingKeys(255, a2, a3, v10);
  MEMORY[0x23B8613CC](&unk_23B1D6490, found);
  v50 = sub_23B1C7208();
  v43 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v13 = (char *)&v31 - v12;
  v48 = a2;
  v49 = a3;
  v15 = type metadata accessor for FileTreeError.ItemNotFoundStruct(0, a2, a3, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v31 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v51 = v13;
  v19 = (uint64_t)v52;
  sub_23B1C7520();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v32 = v16;
  v20 = v43;
  v34 = v18;
  v33 = v15;
  v21 = v44;
  v52 = a1;
  LOBYTE(v53) = 0;
  v22 = v46;
  swift_getAssociatedConformanceWitness();
  v23 = v47;
  sub_23B1C71C0();
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v34, v23, v22);
  LOBYTE(v53) = 1;
  swift_getAssociatedConformanceWitness();
  v24 = v39;
  sub_23B1C7160();
  v25 = v33;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v34[*(int *)(v33 + 36)], v24, v21);
  LOBYTE(v53) = 2;
  swift_getAssociatedConformanceWitness();
  v26 = v37;
  sub_23B1C7160();
  (*(void (**)(char *, char *))(v40 + 32))(&v34[*(int *)(v25 + 40)], v26);
  v54 = 3;
  sub_23AB5EC6C();
  sub_23B1C7160();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v51, v50);
  v27 = v33;
  v28 = v34;
  *(_OWORD *)&v34[*(int *)(v33 + 44)] = v53;
  v29 = v32;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v35, v28, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v27);
}

BOOL sub_23AD06760(char *a1, char *a2)
{
  return sub_23AA9F51C(*a1, *a2);
}

uint64_t sub_23AD06774()
{
  return sub_23ABDD228();
}

uint64_t sub_23AD06790()
{
  return sub_23ABDD204();
}

uint64_t sub_23AD0679C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD09C48(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_23ABDD204);
}

uint64_t sub_23AD067A8()
{
  unsigned __int8 *v0;

  return sub_23AD05E94(*v0);
}

uint64_t sub_23AD067B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD05CCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AD067E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AD28488();
  *a1 = result;
  return result;
}

uint64_t sub_23AD06808(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6490, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0683C(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6490, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD06870@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23AD06200(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23AD0688C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AD05F24(a1, a2, a3, a4);
}

uint64_t sub_23AD068A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t AssociatedTypeWitness;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  int *v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t result;
  void *v25;
  unint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  void *v34;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v30 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  v31 = a1;
  v16(a8, a1, AssociatedTypeWitness);
  v18 = (int *)type metadata accessor for FileTreeError.ItemCollisionStruct(0, a6, a7, v17);
  v19 = (_QWORD *)(a8 + v18[9]);
  *v19 = a2;
  v19[1] = a3;
  v20 = a8 + v18[10];
  v16(v20, a4, AssociatedTypeWitness);
  if (a5)
  {
    swift_getErrorValue();
    v21 = sub_23AD3DAEC(v33, v34);
    if (v29)
    {

      v23 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v23(a4, AssociatedTypeWitness);
      v23(v31, AssociatedTypeWitness);
      v23(a8, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(uint64_t, uint64_t))v23)(v20, AssociatedTypeWitness);
    }
    v25 = v21;
    v26 = v22;

  }
  else
  {
    v25 = 0;
    v26 = 0xF000000000000000;
  }
  v27 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v27(a4, AssociatedTypeWitness);
  result = ((uint64_t (*)(uint64_t, uint64_t))v27)(v31, AssociatedTypeWitness);
  v28 = (_QWORD *)(a8 + v18[11]);
  *v28 = v25;
  v28[1] = v26;
  return result;
}

uint64_t sub_23AD06A48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449746E65726170 && a2 == 0xE800000000000000 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023B200950)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23AD06BF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AD06C24 + 4 * byte_23B1D3EE3[a1]))(0x44496D657469, 0xE600000000000000);
}

uint64_t sub_23AD06C24()
{
  return 0x656D616E656C6966;
}

uint64_t sub_23AD06C3C()
{
  return 0x4449746E65726170;
}

unint64_t sub_23AD06C54()
{
  return 0xD000000000000014;
}

uint64_t sub_23AD06C70(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  char v24;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v19 = a2;
  v7 = type metadata accessor for FileTreeError.ItemCollisionStruct.CodingKeys(255, v5, v6, a4);
  MEMORY[0x23B8613CC](&unk_23B1D6440, v7);
  v8 = sub_23B1C72EC();
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = v21;
  sub_23B1C7538();
  LOBYTE(v23) = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v12 = v22;
  sub_23B1C72A4();
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  v15 = v19;
  v14 = v20;
  v16 = (uint64_t *)(v11 + *(int *)(v19 + 36));
  v18 = *v16;
  v17 = v16[1];
  *(_QWORD *)&v23 = v18;
  *((_QWORD *)&v23 + 1) = v17;
  v24 = 1;
  sub_23AB5EA4C();
  sub_23B1C72A4();
  LOBYTE(v23) = 2;
  sub_23B1C72A4();
  v23 = *(_OWORD *)(v11 + *(int *)(v15 + 44));
  v24 = 3;
  sub_23AB5EB5C();
  sub_23B1C7238();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v10, v8);
}

uint64_t sub_23AD06EB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  __int128 v44;
  char v45;

  v33 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v38 = AssociatedTypeWitness;
  v39 = v8;
  v9 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v34 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v40 = (char *)&v32 - v11;
  v13 = type metadata accessor for FileTreeError.ItemCollisionStruct.CodingKeys(255, a2, a3, v12);
  MEMORY[0x23B8613CC](&unk_23B1D6440, v13);
  v41 = sub_23B1C7208();
  v35 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v15 = (char *)&v32 - v14;
  v36 = a3;
  v37 = a2;
  v17 = type metadata accessor for FileTreeError.ItemCollisionStruct(0, a2, a3, v16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v32 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v42 = v15;
  v21 = (uint64_t)v43;
  sub_23B1C7520();
  if (v21)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v32 = v18;
  v22 = v35;
  v24 = v38;
  v23 = v39;
  v43 = a1;
  LOBYTE(v44) = 0;
  swift_getAssociatedConformanceWitness();
  sub_23B1C71C0();
  v25 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v25(v20, v40, v24);
  v45 = 1;
  sub_23AA7E3CC();
  sub_23B1C71C0();
  v26 = *((_QWORD *)&v44 + 1);
  v40 = (char *)v17;
  v27 = &v20[*(int *)(v17 + 36)];
  *(_QWORD *)v27 = v44;
  *((_QWORD *)v27 + 1) = v26;
  LOBYTE(v44) = 2;
  v28 = v34;
  sub_23B1C71C0();
  v29 = v40;
  v25(&v20[*((int *)v40 + 10)], v28, v24);
  v45 = 3;
  sub_23AB5EC6C();
  sub_23B1C7160();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v42, v41);
  *(_OWORD *)&v20[*((int *)v29 + 11)] = v44;
  v30 = v32;
  (*(void (**)(uint64_t, char *, char *))(v32 + 16))(v33, v20, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return (*(uint64_t (**)(char *, char *))(v30 + 8))(v20, v29);
}

uint64_t sub_23AD072A4()
{
  return sub_23B1C74B4();
}

uint64_t sub_23AD072C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x776F6C6562 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23AD073B0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x776F6C6562;
  else
    return 0x656D616E656C6966;
}

uint64_t sub_23AD073E4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16[4];
  uint64_t v17;
  uint64_t v18;
  char v19;

  v6 = *(_QWORD *)(a2 + 16);
  v16[0] = *(_QWORD *)(a2 + 24);
  v16[1] = v6;
  v7 = type metadata accessor for FileTreeError.CannotBounceStruct.CodingKeys(255, v6, v16[0], a4);
  MEMORY[0x23B8613CC](&unk_23B1D63F0, v7);
  v8 = sub_23B1C72EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v16 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = (uint64_t *)v16[2];
  sub_23B1C7538();
  v13 = v12[1];
  v17 = *v12;
  v18 = v13;
  v19 = 0;
  sub_23AB5EA4C();
  v14 = v16[3];
  sub_23B1C72A4();
  if (!v14)
  {
    LOBYTE(v17) = 1;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_23B1C72A4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_23AD07598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v7;
  uint64_t AssociatedTypeWitness;

  *a6 = a1;
  a6[1] = a2;
  v7 = (char *)a6 + *(int *)(type metadata accessor for FileTreeError.CannotBounceStruct(0, a4, a5, a4) + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v7, a3, AssociatedTypeWitness);
}

uint64_t sub_23AD07618@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t AssociatedTypeWitness;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v27 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v28 = (char *)&v24 - v7;
  v9 = type metadata accessor for FileTreeError.CannotBounceStruct.CodingKeys(255, a2, a3, v8);
  MEMORY[0x23B8613CC](&unk_23B1D63F0, v9);
  v34 = sub_23B1C7208();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v11 = (char *)&v24 - v10;
  v30 = a3;
  v31 = a2;
  v13 = type metadata accessor for FileTreeError.CannotBounceStruct(0, a2, a3, v12);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v33 = v11;
  v17 = (uint64_t)v35;
  sub_23B1C7520();
  if (v17)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = v14;
  v18 = v16;
  v20 = v28;
  v19 = AssociatedTypeWitness;
  v35 = a1;
  v38 = 0;
  sub_23AA7E3CC();
  sub_23B1C71C0();
  v21 = v37;
  *(_QWORD *)v18 = v36;
  *((_QWORD *)v18 + 1) = v21;
  LOBYTE(v36) = 1;
  swift_getAssociatedConformanceWitness();
  sub_23B1C71C0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v18[*(int *)(v13 + 36)], v20, v19);
  v22 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v27, v18, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v18, v13);
}

uint64_t sub_23AD078F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023B200970 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023B200990 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023B2009B0 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023B2009D0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23AD07AD4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AD07B04 + 4 * byte_23B1D3EE7[a1]))(0x44496D657469, 0xE600000000000000);
}

unint64_t sub_23AD07B04()
{
  return 0xD000000000000017;
}

unint64_t sub_23AD07B2C()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_23AD07B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD09C48(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_23AD28E2C);
}

uint64_t sub_23AD07B70()
{
  unsigned __int8 *v0;

  return sub_23AD06BF4(*v0);
}

uint64_t sub_23AD07B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD06A48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AD07BA8(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6440, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD07BDC(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6440, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD07C10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23AD06EB0(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23AD07C2C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AD06C70(a1, a2, a3, a4);
}

BOOL sub_23AD07C40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23AC37E20(*a1, *a2);
}

uint64_t sub_23AD07C54()
{
  return sub_23AD0A6E8();
}

uint64_t sub_23AD07C74()
{
  return sub_23AD072A4();
}

uint64_t sub_23AD07C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD0B454(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_23AD072A4);
}

uint64_t sub_23AD07C90()
{
  char *v0;

  return sub_23AD073B0(*v0);
}

uint64_t sub_23AD07CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD072C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AD07CCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AAEC8C8();
  *a1 = result;
  return result;
}

uint64_t sub_23AD07CF4(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D63F0, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD07D28(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D63F0, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD07D5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23AD07618(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23AD07D78(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AD073E4(a1, a2, a3, a4);
}

uint64_t sub_23AD07D8C()
{
  return 0;
}

uint64_t sub_23AD07D98@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  return sub_23AD0B77C(a1, (uint64_t (*)(_QWORD, _QWORD))sub_23AAED140, a2);
}

uint64_t sub_23AD07DA4(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5D60, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD07DD8(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5D60, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD07E0C(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct.CodingKeys, (uint64_t)&unk_23B1D5D60);
}

uint64_t sub_23AD07E38()
{
  unsigned __int8 *v0;

  return sub_23AD07AD4(*v0);
}

uint64_t sub_23AD07E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD078F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AD07E70(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D63A0, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD07EA4(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D63A0, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD07ED8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23AD08BB8(a1, *(void (**)(char *, char *, uint64_t))(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t, _QWORD, uint64_t))type metadata accessor for FileTreeError.ContentUnavailableStruct.CodingKeys, (uint64_t)&unk_23B1D63A0, (uint64_t (*)(_QWORD, _QWORD, uint64_t))type metadata accessor for FileTreeError.ContentUnavailableStruct, a3);
}

uint64_t sub_23AD07F0C(_QWORD *a1, uint64_t a2)
{
  return sub_23AD088A4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.ContentUnavailableStruct.CodingKeys, (uint64_t)&unk_23B1D63A0);
}

uint64_t sub_23AD07F30@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t result;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  uint64_t v21;
  void *v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(a5, a1, AssociatedTypeWitness);
  if (a2)
  {
    swift_getErrorValue();
    v13 = sub_23AD3DAEC(v21, v22);
    if (v5)
    {

      v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v15(a1, AssociatedTypeWitness);
      return ((uint64_t (*)(uint64_t, uint64_t))v15)(a5, AssociatedTypeWitness);
    }
    v17 = v14;
    v20 = v13;

    a2 = v20;
  }
  else
  {
    v17 = 0xF000000000000000;
  }
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, AssociatedTypeWitness);
  result = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct(0, a3, a4, v18);
  v19 = (_QWORD *)(a5 + *(int *)(result + 36));
  *v19 = a2;
  v19[1] = v17;
  return result;
}

uint64_t sub_23AD08060(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023B200950)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23AD08144(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 0x44496D657469;
}

uint64_t sub_23AD0817C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  char v17;

  v13[0] = a2;
  v5 = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x23B8613CC](&unk_23B1D6350, v5);
  v6 = sub_23B1C72EC();
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = v13[1];
  sub_23B1C7538();
  LOBYTE(v16) = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = v15;
  sub_23B1C72A4();
  if (v10)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v8, v6);
  v12 = v14;
  v16 = *(_OWORD *)(v9 + *(int *)(v13[0] + 36));
  v17 = 1;
  sub_23AB5EB5C();
  sub_23B1C7238();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v8, v6);
}

uint64_t sub_23AD08340@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t AssociatedTypeWitness;
  char *v34;
  char *v35;
  _QWORD *v36;
  __int128 v37;
  char v38;

  v27 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v34 = (char *)&v25 - v7;
  v9 = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct.CodingKeys(255, a2, a3, v8);
  MEMORY[0x23B8613CC](&unk_23B1D6350, v9);
  v32 = sub_23B1C7208();
  v28 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v11 = (char *)&v25 - v10;
  v30 = a3;
  v31 = a2;
  v13 = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct(0, a2, a3, v12);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v25 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v35 = v11;
  v17 = (uint64_t)v36;
  sub_23B1C7520();
  if (v17)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v26 = v14;
  v36 = a1;
  v18 = v16;
  v20 = v28;
  v19 = v29;
  LOBYTE(v37) = 0;
  v21 = AssociatedTypeWitness;
  swift_getAssociatedConformanceWitness();
  v22 = v32;
  sub_23B1C71C0();
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v18, v34, v21);
  v38 = 1;
  sub_23AB5EC6C();
  sub_23B1C7160();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v35, v22);
  *(_OWORD *)&v18[*(int *)(v13 + 36)] = v37;
  v23 = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 16))(v27, v18, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v18, v13);
}

uint64_t sub_23AD08618(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023B2009F0 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023B200A10 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000023B200A30 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023B200A50)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23AD08808(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AD08838 + 4 * byte_23B1D3EEC[a1]))(0x44496D657469, 0xE600000000000000);
}

unint64_t sub_23AD08838()
{
  return 0xD000000000000016;
}

uint64_t sub_23AD088A4(_QWORD *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v6 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(a2 + 16);
  v14[0] = a2;
  v7 = a3(255, v15, v6);
  MEMORY[0x23B8613CC](a4, v7);
  v8 = sub_23B1C72EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C7538();
  v22 = 0;
  swift_getAssociatedTypeWitness();
  v14[1] = v6;
  swift_getAssociatedConformanceWitness();
  v12 = v16;
  v17 = v11;
  sub_23B1C72A4();
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v17, v8);
  v16 = v9;
  v21 = 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C72A4();
  v20 = 2;
  sub_23B1C72A4();
  v19 = 3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C72A4();
  v18 = 4;
  sub_23B1C72A4();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v17, v8);
}

uint64_t sub_23AD08BB8@<X0>(_QWORD *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, _QWORD, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(_QWORD, _QWORD, uint64_t)@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;

  v65 = a1;
  v46 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v50 = AssociatedTypeWitness;
  v51 = v13;
  v14 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v47 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v48 = (char *)&v45 - v16;
  v17 = swift_getAssociatedTypeWitness();
  v52 = *(_QWORD *)(v17 - 8);
  v53 = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v49 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v57 = (char *)&v45 - v20;
  v60 = swift_getAssociatedTypeWitness();
  v54 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v61 = (char *)&v45 - v21;
  v22 = a4(255, a2, a3);
  MEMORY[0x23B8613CC](a5, v22);
  v63 = sub_23B1C7208();
  v55 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v24 = (char *)&v45 - v23;
  v58 = a2;
  v59 = a3;
  v56 = a6(0, a2, a3);
  v25 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v27 = (char *)&v45 - v26;
  v28 = v65;
  __swift_project_boxed_opaque_existential_1(v65, v65[3]);
  v62 = v24;
  v29 = v64;
  sub_23B1C7520();
  if (v29)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  v31 = v56;
  v30 = v57;
  v64 = v25;
  v70 = 0;
  v32 = v60;
  swift_getAssociatedConformanceWitness();
  sub_23B1C71C0();
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v27, v61, v32);
  v69 = 1;
  v33 = v53;
  swift_getAssociatedConformanceWitness();
  sub_23B1C71C0();
  v34 = *(int *)(v31 + 36);
  v61 = v27;
  v35 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  v35(&v61[v34], v30, v33);
  v68 = 2;
  v36 = v49;
  sub_23B1C71C0();
  v35(&v61[*(int *)(v31 + 40)], v36, v33);
  v67 = 3;
  v37 = v50;
  swift_getAssociatedConformanceWitness();
  v38 = v48;
  sub_23B1C71C0();
  v39 = v31;
  v40 = v61;
  v41 = &v61[*(int *)(v39 + 44)];
  v58 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  v59 = 0;
  v58(v41, v38, v37);
  v66 = 4;
  v42 = v47;
  sub_23B1C71C0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v62, v63);
  v58(&v40[*(int *)(v39 + 48)], v42, v37);
  v43 = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 16))(v46, v40, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v40, v39);
}

uint64_t sub_23AD091C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6465746365707865 && a2 == 0xEE0044496D657449;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766965636572 && a2 == 0xEE0044496D657449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23AD092F4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6465766965636572;
  else
    return 0x6465746365707865;
}

uint64_t sub_23AD09330(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v12 = a2;
  v5 = type metadata accessor for FileTreeError.ItemMismatchStruct.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x23B8613CC](&unk_23B1D6260, v5);
  v6 = sub_23B1C72EC();
  v13 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C7538();
  v16 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v9 = v14;
  sub_23B1C7238();
  if (v9)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v6);
  v11 = v13;
  v15 = 1;
  sub_23B1C72A4();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v6);
}

uint64_t sub_23AD094E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a5, a1, v11);
  v13 = a5 + *(int *)(type metadata accessor for FileTreeError.ItemMismatchStruct(0, a3, a4, v12) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v13, a2, AssociatedTypeWitness);
}

uint64_t sub_23AD09590@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  char v43;

  v30 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v33 = (char *)&v28 - v8;
  v38 = v9;
  v32 = sub_23B1C6C98();
  v36 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v28 - v10;
  v12 = type metadata accessor for FileTreeError.ItemMismatchStruct.CodingKeys(255, a2, a3, v11);
  MEMORY[0x23B8613CC](&unk_23B1D6260, v12);
  v40 = sub_23B1C7208();
  v31 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v14 = (char *)&v28 - v13;
  v34 = a3;
  v35 = a2;
  v16 = type metadata accessor for FileTreeError.ItemMismatchStruct(0, a2, a3, v15);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v28 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v39 = v14;
  v20 = (uint64_t)v41;
  sub_23B1C7520();
  if (v20)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = v31;
  v21 = v32;
  v28 = v17;
  v23 = v19;
  v24 = v36;
  v41 = a1;
  v25 = v33;
  v43 = 0;
  swift_getAssociatedConformanceWitness();
  sub_23B1C7160();
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v37, v21);
  v42 = 1;
  sub_23B1C71C0();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v39, v40);
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v23[*(int *)(v16 + 36)], v25, v38);
  v26 = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v30, v23, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v23, v16);
}

uint64_t sub_23AD098AC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x726573557962 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23AD09928(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v5 = type metadata accessor for FileTreeError.DownloadCancelled.CodingKeys(255, a3, a4, a4);
  MEMORY[0x23B8613CC](&unk_23B1D62B0, v5);
  v6 = sub_23B1C72EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C7538();
  sub_23B1C722C();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23AD09A30(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v6 = type metadata accessor for FileTreeError.DownloadCancelled.CodingKeys(255, a2, a3, a4);
  MEMORY[0x23B8613CC](&unk_23B1D62B0, v6);
  v7 = sub_23B1C7208();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - v9;
  v11 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C7520();
  if (!v4)
  {
    v11 = sub_23B1C713C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

uint64_t sub_23AD09B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD0B454(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_23AD28E1C);
}

uint64_t sub_23AD09B74()
{
  char *v0;

  return sub_23AD08144(*v0);
}

uint64_t sub_23AD09B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD08060(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AD09BB0(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6350, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD09BE4(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6350, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD09C18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23AD08340(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23AD09C34(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AD0817C(a1, a2, a3, a4);
}

uint64_t sub_23AD09C48(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_23B1C74A8();
  a4(v8, *v4, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  return sub_23B1C74E4();
}

uint64_t sub_23AD09C98()
{
  unsigned __int8 *v0;

  return sub_23AD08808(*v0);
}

uint64_t sub_23AD09CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD08618(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AD09CD0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AD28490();
  *a1 = result;
  return result;
}

uint64_t sub_23AD09CF8(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6300, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD09D2C(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6300, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD09D60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23AD08BB8(a1, *(void (**)(char *, char *, uint64_t))(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t, _QWORD, uint64_t))type metadata accessor for FileTreeError.VersionConflictStruct.CodingKeys, (uint64_t)&unk_23B1D6300, (uint64_t (*)(_QWORD, _QWORD, uint64_t))type metadata accessor for FileTreeError.VersionConflictStruct, a3);
}

uint64_t sub_23AD09D94(_QWORD *a1, uint64_t a2)
{
  return sub_23AD088A4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.VersionConflictStruct.CodingKeys, (uint64_t)&unk_23B1D6300);
}

uint64_t sub_23AD09DB8(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5DB0, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD09DEC(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5DB0, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD09E20(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.CapturedContentMissingStruct.CodingKeys, (uint64_t)&unk_23B1D5DB0);
}

uint64_t sub_23AD09E4C(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5E00, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD09E80(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5E00, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD09EB4(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.ItemNotEvictableStruct.CodingKeys, (uint64_t)&unk_23B1D5E00);
}

uint64_t sub_23AD09EE0(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5EF0, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD09F14(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5EF0, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD09F48(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.ItemIsFlockedStruct.CodingKeys, (uint64_t)&unk_23B1D5EF0);
}

uint64_t sub_23AD09F74(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5F40, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD09FA8(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5F40, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD09FDC(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct.CodingKeys, (uint64_t)&unk_23B1D5F40);
}

uint64_t sub_23AD0A008()
{
  char *v0;

  return sub_23AD092F4(*v0);
}

uint64_t sub_23AD0A018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD091C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AD0A044(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6260, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0A078(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6260, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0A0AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23AD09590(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23AD0A0C8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AD09330(a1, a2, a3, a4);
}

uint64_t sub_23AD0A0DC(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5E50, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0A110(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5E50, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0A144(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.DirectoryChangedStruct.CodingKeys, (uint64_t)&unk_23B1D5E50);
}

uint64_t sub_23AD0A178()
{
  return 0x726573557962;
}

uint64_t sub_23AD0A18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD098AC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23AD0A1BC(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D62B0, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0A1F0(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D62B0, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0A224@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = sub_23AD09A30(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t sub_23AD0A254(_QWORD *a1, uint64_t a2)
{
  unsigned __int8 *v2;

  return sub_23AD09928(a1, *v2, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

void *sub_23AD0A270(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v6;
  uint64_t v7;
  void *v8;

  if (!a1)
    return 0;
  swift_getErrorValue();
  v3 = v6;
  v4 = sub_23AD3DAEC(v7, v8);
  if (!v1)
    v3 = v4;

  return v3;
}

uint64_t sub_23AD0A2FC(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000014 && a2 == 0x800000023B200950)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_23AD0A380(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v14 = a3;
  v7 = type metadata accessor for FileTreeError.UploadCancelled.CodingKeys(255, a4, a5, a4);
  MEMORY[0x23B8613CC](&unk_23B1D61C0, v7);
  v8 = sub_23B1C72EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C7538();
  v15 = a2;
  v16 = v14;
  sub_23AB5EB5C();
  sub_23B1C7238();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

_QWORD *sub_23AD0A4A8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  _QWORD *v13;

  v6 = type metadata accessor for FileTreeError.UploadCancelled.CodingKeys(255, a2, a3, a4);
  MEMORY[0x23B8613CC](&unk_23B1D61C0, v6);
  v7 = sub_23B1C7208();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - v9;
  v11 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C7520();
  if (!v4)
  {
    sub_23AB5EC6C();
    sub_23B1C7160();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v11 = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

uint64_t sub_23AD0A600(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x800000023B2009F0 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023B200A70)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23AD0A6E8()
{
  sub_23B1C74A8();
  sub_23B1C74B4();
  return sub_23B1C74E4();
}

unint64_t sub_23AD0A72C()
{
  return 0xD000000000000016;
}

uint64_t sub_23AD0A760(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v12 = a2;
  v5 = type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x23B8613CC](&unk_23B1D6170, v5);
  v6 = sub_23B1C72EC();
  v13 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C7538();
  v16 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v9 = v14;
  sub_23B1C72A4();
  if (v9)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v6);
  v11 = v13;
  v15 = 1;
  sub_23B1C72A4();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v6);
}

uint64_t sub_23AD0A918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32);
  v14(a5, a1, AssociatedTypeWitness);
  v12 = a5 + *(int *)(type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct(0, a3, a4, v11) + 36);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v12, a2, AssociatedTypeWitness);
}

uint64_t sub_23AD0A9C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t AssociatedTypeWitness;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;

  v30 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (char *)&v29 - v9;
  v11 = type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct.CodingKeys(255, a2, a3, v10);
  MEMORY[0x23B8613CC](&unk_23B1D6170, v11);
  v39 = sub_23B1C7208();
  v35 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v13 = (char *)&v29 - v12;
  v33 = a3;
  v34 = a2;
  v15 = type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct(0, a2, a3, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v29 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v38 = v13;
  v19 = v40;
  sub_23B1C7520();
  if (v19)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v40 = v16;
  v20 = v18;
  v22 = v31;
  v21 = v32;
  v42 = 0;
  v23 = AssociatedTypeWitness;
  swift_getAssociatedConformanceWitness();
  sub_23B1C71C0();
  v24 = *(char **)(v21 + 32);
  v34 = (uint64_t)v20;
  v25 = v37;
  v37 = v24;
  ((void (*)(char *, char *, uint64_t))v24)(v20, v25, v23);
  v41 = 1;
  sub_23B1C71C0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v39);
  v26 = v34;
  ((void (*)(uint64_t, char *, uint64_t))v37)(v34 + *(int *)(v15 + 36), v22, v23);
  v27 = v40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v30, v26, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v26, v15);
}

uint64_t sub_23AD0ACC8(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_23AD0ACEC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x44496D657469 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23AD0AD68(_QWORD *a1, uint64_t a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = a3(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  MEMORY[0x23B8613CC](a4, v6);
  v7 = sub_23B1C72EC();
  v11 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C7538();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C72A4();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v7);
}

uint64_t sub_23AD0AED0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(_QWORD, uint64_t, uint64_t)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t AssociatedTypeWitness;
  uint64_t v42;
  uint64_t v43;

  v34 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v33 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v40 = (char *)&v31 - v13;
  v14 = a4(255, a2, a3);
  v42 = MEMORY[0x23B8613CC](a5, v14);
  v39 = sub_23B1C7208();
  v35 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v16 = (char *)&v31 - v15;
  v37 = a3;
  v38 = a2;
  v17 = a6(0, a2, a3);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v31 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v36 = v16;
  v21 = v43;
  sub_23B1C7520();
  if (v21)
  {
    v30 = (uint64_t)a1;
  }
  else
  {
    v32 = v20;
    v42 = v18;
    v43 = v17;
    v22 = a1;
    v23 = v35;
    v24 = AssociatedTypeWitness;
    swift_getAssociatedConformanceWitness();
    v26 = v39;
    v25 = v40;
    v27 = v36;
    sub_23B1C71C0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v26);
    v29 = v32;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v32, v25, v24);
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v34, v29, v43);
    v30 = (uint64_t)v22;
  }
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t sub_23AD0B130()
{
  return sub_23B1C74B4();
}

unint64_t sub_23AD0B154()
{
  return 0xD000000000000014;
}

uint64_t sub_23AD0B170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD0A2FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23AD0B1A0(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D61C0, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0B1D4(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D61C0, a1);
  return sub_23B1C7550();
}

_QWORD *sub_23AD0B208@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;

  result = sub_23AD0A4A8(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
  }
  return result;
}

uint64_t sub_23AD0B238(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_23AD0A380(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_23AD0B258(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5F90, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0B28C(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5F90, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0B2C0(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.UploadInterrupted.CodingKeys, (uint64_t)&unk_23B1D5F90);
}

uint64_t sub_23AD0B2EC()
{
  return 0x44496D657469;
}

uint64_t sub_23AD0B300(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6210, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0B334(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6210, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0B368@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23AD0AED0(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.LookupNotPermittedStruct.CodingKeys, (uint64_t)&unk_23B1D6210, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FileTreeError.LookupNotPermittedStruct, a3);
}

uint64_t sub_23AD0B39C(_QWORD *a1, uint64_t a2)
{
  return sub_23AD0AD68(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD))type metadata accessor for FileTreeError.LookupNotPermittedStruct.CodingKeys, (uint64_t)&unk_23B1D6210);
}

uint64_t sub_23AD0B3C0(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5EA0, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0B3F4(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5EA0, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0B428(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.ItemKindMismatchStruct.CodingKeys, (uint64_t)&unk_23B1D5EA0);
}

uint64_t sub_23AD0B454(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_23B1C74A8();
  a4(v8, *v4, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  return sub_23B1C74E4();
}

unint64_t sub_23AD0B4A4()
{
  return sub_23AD0A72C();
}

uint64_t sub_23AD0B4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD0A600(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AD0B4E0(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6170, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0B514(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6170, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0B548@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23AD0A9C0(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_23AD0B564(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AD0A760(a1, a2, a3, a4);
}

uint64_t sub_23AD0B578(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5FE0, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0B5AC(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D5FE0, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0B5E0(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.MaxLookupDepthStruct.CodingKeys, (uint64_t)&unk_23B1D5FE0);
}

uint64_t sub_23AD0B60C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AAED140();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23AD0B638(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6030, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0B66C(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6030, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0B6A0(uint64_t a1)
{
  return sub_23AD0ACC8(a1);
}

uint64_t sub_23AD0B6BC(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.CompressedFileReadFailedStruct.CodingKeys, (uint64_t)&unk_23B1D6030);
}

uint64_t sub_23AD0B6E8(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6080, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0B71C(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6080, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0B750(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct.CodingKeys, (uint64_t)&unk_23B1D6080);
}

uint64_t sub_23AD0B77C@<X0>(uint64_t a1@<X2>, uint64_t (*a2)(_QWORD, _QWORD)@<X4>, _BYTE *a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = a2(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  result = swift_bridgeObjectRelease();
  *a3 = v4 & 1;
  return result;
}

uint64_t sub_23AD0B7C0(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D60D0, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0B7F4(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D60D0, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0B828(_QWORD *a1, uint64_t a2)
{
  return sub_23AD28498(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t))type metadata accessor for FileTreeError.ItemNotTracked.CodingKeys, (uint64_t)&unk_23B1D60D0);
}

uint64_t sub_23AD0B854()
{
  sub_23B1C74A8();
  sub_23B1C74B4();
  return sub_23B1C74E4();
}

uint64_t sub_23AD0B894()
{
  sub_23B1C74A8();
  sub_23B1C74B4();
  return sub_23B1C74E4();
}

uint64_t sub_23AD0B8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD0ACEC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23AD0B900(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6120, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD0B934(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6120, a1);
  return sub_23B1C7550();
}

uint64_t sub_23AD0B968@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23AD0AED0(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.ItemIsDetachedRootStruct.CodingKeys, (uint64_t)&unk_23B1D6120, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FileTreeError.ItemIsDetachedRootStruct, a3);
}

uint64_t sub_23AD0B99C(_QWORD *a1, uint64_t a2)
{
  return sub_23AD0AD68(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD))type metadata accessor for FileTreeError.ItemIsDetachedRootStruct.CodingKeys, (uint64_t)&unk_23B1D6120);
}

uint64_t sub_23AD0B9C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t IsDetachedRootStruct;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t found;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v95;
  int *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t AssociatedConformanceWitness;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int *TupleTypeMetadata;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  void (*v120)(char *, char *, uint64_t);
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t);
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  char *v137;
  uint64_t v138;
  uint64_t TupleTypeMetadata2;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t IsFlockedStruct;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t FailedStruct;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  void (*v205)(char *, char *, uint64_t);
  char *v206;
  uint64_t v207;
  char v208[16];
  _QWORD v209[2];
  char *v210;
  _QWORD *v211;
  char *v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t AssociatedTypeWitness;
  uint64_t v277;
  int *v278;
  uint64_t v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  _QWORD *v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  char v297;

  v270 = a5;
  IsDetachedRootStruct = type metadata accessor for FileTreeError.ItemIsDetachedRootStruct(255, a2, a3, a4);
  v234 = sub_23B1C6C98();
  v233 = *(_QWORD *)(v234 - 8);
  v9 = MEMORY[0x24BDAC7A8](v234);
  v235 = (char *)v209 - v10;
  v237 = IsDetachedRootStruct;
  v232 = *(_QWORD *)(IsDetachedRootStruct - 8);
  MEMORY[0x24BDAC7A8](v9);
  v236 = (char *)v209 - v11;
  v13 = type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct(255, a2, a3, v12);
  v228 = sub_23B1C6C98();
  v227 = *(_QWORD *)(v228 - 8);
  v14 = MEMORY[0x24BDAC7A8](v228);
  v229 = (char *)v209 - v15;
  v231 = v13;
  v226 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v230 = (char *)v209 - v16;
  v18 = type metadata accessor for FileTreeError.LookupNotPermittedStruct(255, a2, a3, v17);
  v222 = sub_23B1C6C98();
  v221 = *(_QWORD *)(v222 - 8);
  v19 = MEMORY[0x24BDAC7A8](v222);
  v223 = (char *)v209 - v20;
  v225 = v18;
  v220 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v224 = (char *)v209 - v21;
  v23 = type metadata accessor for FileTreeError.ItemMismatchStruct(255, a2, a3, v22);
  v216 = sub_23B1C6C98();
  v215 = *(_QWORD *)(v216 - 8);
  v24 = MEMORY[0x24BDAC7A8](v216);
  v217 = (char *)v209 - v25;
  v219 = v23;
  v214 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v218 = (char *)v209 - v26;
  v28 = type metadata accessor for FileTreeError.VersionConflictStruct(255, a2, a3, v27);
  v239 = sub_23B1C6C98();
  v238 = *(_QWORD *)(v239 - 8);
  v29 = MEMORY[0x24BDAC7A8](v239);
  v245 = (char *)v209 - v30;
  v244 = v28;
  v241 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v240 = (char *)v209 - v31;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v252 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v254 = (char *)v209 - v32;
  v277 = swift_getAssociatedTypeWitness();
  v255 = *(_QWORD *)(v277 - 8);
  MEMORY[0x24BDAC7A8](v277);
  v253 = (char *)v209 - v33;
  v35 = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct(255, a2, a3, v34);
  v243 = sub_23B1C6C98();
  v242 = *(_QWORD *)(v243 - 8);
  v36 = MEMORY[0x24BDAC7A8](v243);
  v256 = (char *)v209 - v37;
  v257 = v35;
  v248 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v247 = (char *)v209 - v38;
  v40 = type metadata accessor for FileTreeError.ContentUnavailableStruct(255, a2, a3, v39);
  v250 = sub_23B1C6C98();
  v249 = *(_QWORD *)(v250 - 8);
  v41 = MEMORY[0x24BDAC7A8](v250);
  v260 = (char *)v209 - v42;
  v259 = v40;
  v258 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v251 = (char *)v209 - v43;
  v45 = type metadata accessor for FileTreeError.CannotBounceStruct(255, a2, a3, v44);
  v262 = sub_23B1C6C98();
  v261 = *(_QWORD *)(v262 - 8);
  v46 = MEMORY[0x24BDAC7A8](v262);
  v267 = (char *)v209 - v47;
  v268 = v45;
  v264 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v263 = (char *)v209 - v48;
  v50 = type metadata accessor for FileTreeError.ItemCollisionStruct(255, a2, a3, v49);
  v266 = sub_23B1C6C98();
  v265 = *(_QWORD *)(v266 - 8);
  v51 = MEMORY[0x24BDAC7A8](v266);
  v275 = (char *)v209 - v52;
  v278 = (int *)v50;
  v272 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v271 = (char *)v209 - v53;
  found = type metadata accessor for FileTreeError.ItemNotFoundStruct(255, a2, a3, v54);
  v274 = sub_23B1C6C98();
  v273 = *(_QWORD *)(v274 - 8);
  v56 = MEMORY[0x24BDAC7A8](v274);
  v283 = (char *)v209 - v57;
  v284 = found;
  v282 = *(_QWORD *)(found - 8);
  MEMORY[0x24BDAC7A8](v56);
  v280 = (char *)v209 - v58;
  v60 = type metadata accessor for FileTreeError.CodingKeys(255, a2, a3, v59);
  v291 = MEMORY[0x23B8613CC](&unk_23B1D4F30, v60);
  v288 = sub_23B1C7208();
  v286 = *(_QWORD *)(v288 - 8);
  MEMORY[0x24BDAC7A8](v288);
  v62 = (char *)v209 - v61;
  v285 = a2;
  v279 = a3;
  v281 = type metadata accessor for FileTreeError(0, a2, a3, v63);
  v269 = *(_QWORD *)(v281 - 8);
  v64 = MEMORY[0x24BDAC7A8](v281);
  v213 = (_QWORD *)((char *)v209 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = MEMORY[0x24BDAC7A8](v64);
  v212 = (char *)v209 - v67;
  v68 = MEMORY[0x24BDAC7A8](v66);
  v246 = (char *)v209 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v72 = (char *)v209 - v71;
  v73 = MEMORY[0x24BDAC7A8](v70);
  v75 = (char *)v209 - v74;
  v76 = MEMORY[0x24BDAC7A8](v73);
  v78 = (char *)v209 - v77;
  MEMORY[0x24BDAC7A8](v76);
  v80 = (char *)v209 - v79;
  v81 = a1[3];
  v290 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v81);
  v287 = v62;
  v82 = v289;
  sub_23B1C7520();
  if (!v82)
  {
    v289 = (uint64_t)v78;
    v210 = v75;
    v209[1] = v72;
    v211 = v80;
    LOBYTE(v292) = 13;
    v83 = sub_23B1C719C();
    v85 = v84;
    v209[0] = 0;
    v292 = v285;
    swift_getMetatypeMetadata();
    v86 = sub_23B1C6434();
    if (v83 == v86 && v85 == v87)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v88 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v88 & 1) == 0)
      {
        v104 = sub_23B1C6F74();
        swift_allocError();
        v106 = v105;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E33E8);
        *v106 = v281;
        __swift_instantiateConcreteTypeFromMangledName(qword_2569E33F0);
        v107 = swift_allocObject();
        *(_OWORD *)(v107 + 16) = xmmword_23B1CA760;
        v108 = v291;
        *(_QWORD *)(v107 + 56) = v60;
        *(_QWORD *)(v107 + 64) = v108;
        *(_BYTE *)(v107 + 32) = 13;
        sub_23B1C6F68();
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v104 - 8) + 104))(v106, *MEMORY[0x24BEE26D0], v104);
        swift_willThrow();
        goto LABEL_31;
      }
    }
    LOBYTE(v292) = 0;
    v89 = v284;
    MEMORY[0x23B8613CC](&unk_23B1D4F08, v284);
    v90 = v283;
    v92 = v287;
    v91 = v288;
    v93 = v209[0];
    sub_23B1C7160();
    if (v93)
    {
      (*(void (**)(char *, uint64_t))(v286 + 8))(v92, v91);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v290);
    }
    v95 = v282;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48))(v90, 1, v89) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v280, v90, v89);
      swift_getAssociatedTypeWitness();
      v109 = v277;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v111 = AssociatedTypeWitness;
      v112 = swift_getAssociatedConformanceWitness();
      v292 = v109;
      v293 = v111;
      v294 = AssociatedConformanceWitness;
      v295 = v112;
      type metadata accessor for FileItemVersion();
    }
    (*(void (**)(char *, uint64_t))(v273 + 8))(v90, v274);
    LOBYTE(v292) = 1;
    v96 = v278;
    MEMORY[0x23B8613CC](&unk_23B1D4EE0, v278);
    v97 = v275;
    sub_23B1C7160();
    v98 = v272;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v272 + 48))(v97, 1, v96) != 1)
    {
      v209[0] = 0;
      v113 = (*(uint64_t (**)(char *, char *, int *))(v98 + 32))(v271, v97, v96);
      MEMORY[0x24BDAC7A8](v113);
      qmemcpy(&v209[-6], " filename below syncability original", 36);
      strcpy(&v208[2], "alError ");
      v292 = swift_getAssociatedTypeWitness();
      v293 = (unint64_t)&type metadata for Filename;
      v294 = v292;
      v295 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E22A0);
      v296 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E7700);
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      v115 = v210;
      v116 = &v210[TupleTypeMetadata[12]];
      v117 = &v210[TupleTypeMetadata[16]];
      v118 = &v210[TupleTypeMetadata[20]];
      v119 = swift_getAssociatedTypeWitness();
      v291 = *(_QWORD *)(v119 - 8);
      v120 = *(void (**)(char *, char *, uint64_t))(v291 + 16);
      v121 = v115;
      v122 = v117;
      v123 = v116;
      v124 = v271;
      v120(v121, v271, v119);
      v125 = &v124[v96[9]];
      v126 = *((_QWORD *)v125 + 1);
      *(_QWORD *)v123 = *(_QWORD *)v125;
      *((_QWORD *)v123 + 1) = v126;
      v120(v122, &v124[v96[10]], v119);
      *(_OWORD *)v118 = xmmword_23B1D3E80;
      swift_bridgeObjectRetain();
      v127 = (uint64_t *)&v124[v96[11]];
      v128 = v127[1];
      if (v128 >> 60 == 15)
      {
        v129 = 0;
        v130 = v209[0];
      }
      else
      {
        v130 = v209[0];
        v129 = sub_23AD3D744(*v127, v128);
      }
      if (v130)
      {
        (*(void (**)(char *, int *))(v272 + 8))(v271, v278);
        (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
        sub_23AB22AE4(*(_QWORD *)v118, *((_QWORD *)v118 + 1));
        v131 = *(void (**)(char *, uint64_t))(v291 + 8);
        v131(v122, v119);
        swift_bridgeObjectRelease();
        v131(v210, v119);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v290);
      }
      v132 = TupleTypeMetadata[24];
      (*(void (**)(char *, int *))(v272 + 8))(v271, v278);
      (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
      v133 = v210;
      *(_QWORD *)&v210[v132] = v129;
      v134 = v281;
      swift_storeEnumTagMultiPayload();
      v135 = v269;
      v136 = v211;
      (*(void (**)(_QWORD *, char *, uint64_t))(v269 + 32))(v211, v133, v134);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v265 + 8))(v97, v266);
    LOBYTE(v292) = 2;
    v99 = v268;
    MEMORY[0x23B8613CC](&unk_23B1D4EB8, v268);
    v100 = v267;
    sub_23B1C7160();
    v101 = v264;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v264 + 48))(v100, 1, v99) != 1)
    {
      (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
      v137 = v263;
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v263, v100, v99);
      v138 = swift_getAssociatedTypeWitness();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v136 = v211;
      v140 = (char *)v211 + *(int *)(TupleTypeMetadata2 + 48);
      v141 = *((_QWORD *)v137 + 1);
      *v211 = *(_QWORD *)v137;
      v136[1] = v141;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v140, &v137[*(int *)(v99 + 36)], v138);
      v134 = v281;
LABEL_25:
      swift_storeEnumTagMultiPayload();
      v135 = v269;
LABEL_17:
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v135 + 32))(v270, v136, v134);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v290);
    }
    (*(void (**)(char *, uint64_t))(v261 + 8))(v100, v262);
    v103 = type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct(0, v285, v279, v102);
    v297 = 14;
    MEMORY[0x23B8613CC](&unk_23B1D4E90, v103);
    sub_23B1C7160();
    if ((v292 & 1) == 0)
      goto LABEL_59;
    LOBYTE(v292) = 3;
    v142 = v259;
    MEMORY[0x23B8613CC](&unk_23B1D4E68, v259);
    v143 = v260;
    sub_23B1C7160();
    v209[0] = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v258 + 48))(v143, 1, v142) != 1)
    {
      (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
      (*(void (**)(char *, char *, uint64_t))(v258 + 32))(v251, v260, v259);
      swift_getAssociatedTypeWitness();
      v145 = v277;
      v146 = swift_getAssociatedConformanceWitness();
      v291 = v146;
      v147 = AssociatedTypeWitness;
      v289 = swift_getAssociatedConformanceWitness();
      v292 = v145;
      v293 = v147;
      v294 = v146;
      v295 = v289;
      type metadata accessor for FileItemVersion();
    }
    (*(void (**)(char *, uint64_t))(v249 + 8))(v260, v250);
    LOBYTE(v292) = 4;
    MEMORY[0x23B8613CC](&unk_23B1D4E40, v257);
    v144 = v209[0];
    sub_23B1C7160();
    if (!v144)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48))(v256, 1, v257) != 1)
      {
        v148 = v247;
        v149 = v257;
        (*(void (**)(char *, char *, uint64_t))(v248 + 32))(v247, v256, v257);
        v150 = swift_getAssociatedTypeWitness();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v246, v148, v150);
        v151 = (uint64_t *)&v148[*(int *)(v149 + 36)];
        v152 = v151[1];
        if (v152 >> 60 == 15)
          v153 = 0;
        else
          v153 = sub_23AD3D744(*v151, v152);
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E7700);
        v184 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        (*(void (**)(char *, uint64_t))(v248 + 8))(v247, v257);
        (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
        v185 = v246;
        *(_QWORD *)&v246[v184] = v153;
        v134 = v281;
        goto LABEL_57;
      }
      (*(void (**)(char *, uint64_t))(v242 + 8))(v256, v243);
      LOBYTE(v292) = 5;
      MEMORY[0x23B8613CC](&unk_23B1D4E18, v244);
      sub_23B1C7160();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v241 + 48))(v245, 1, v244) != 1)
      {
        (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
        (*(void (**)(char *, char *, uint64_t))(v241 + 32))(v240, v245, v244);
        swift_getAssociatedTypeWitness();
        v186 = v277;
        v187 = swift_getAssociatedConformanceWitness();
        v289 = v187;
        v188 = AssociatedTypeWitness;
        v288 = swift_getAssociatedConformanceWitness();
        v292 = v186;
        v293 = v188;
        v294 = v187;
        v295 = v288;
        type metadata accessor for FileItemVersion();
      }
      (*(void (**)(char *, uint64_t))(v238 + 8))(v245, v239);
      v155 = type metadata accessor for FileTreeError.CapturedContentMissingStruct(0, v285, v279, v154);
      v297 = 6;
      MEMORY[0x23B8613CC](&unk_23B1D4DF0, v155);
      sub_23B1C7160();
      if ((v292 & 1) != 0)
      {
        v157 = type metadata accessor for FileTreeError.ItemNotEvictableStruct(0, v285, v279, v156);
        v297 = 7;
        MEMORY[0x23B8613CC](&unk_23B1D4DC8, v157);
        sub_23B1C7160();
        if ((v292 & 1) != 0)
        {
          v159 = type metadata accessor for FileTreeError.DirectoryChangedStruct(0, v285, v279, v158);
          v297 = 9;
          MEMORY[0x23B8613CC](&unk_23B1D4DA0, v159);
          sub_23B1C7160();
          if ((v292 & 1) != 0)
          {
            v161 = type metadata accessor for FileTreeError.DownloadCancelled(0, v285, v279, v160);
            v297 = 10;
            MEMORY[0x23B8613CC](&unk_23B1D4D78, v161);
            sub_23B1C7160();
            v162 = v292;
            if (v292 == 3)
            {
              LOBYTE(v292) = 8;
              MEMORY[0x23B8613CC](&unk_23B1D4D50, v219);
              sub_23B1C7160();
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48))(v217, 1, v219) != 1)
              {
                (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
                v189 = v218;
                v190 = v219;
                (*(void (**)(char *, char *, uint64_t))(v214 + 32))(v218, v217, v219);
                v191 = swift_getAssociatedTypeWitness();
                v192 = sub_23B1C6C98();
                v193 = swift_getTupleTypeMetadata2();
                v136 = v211;
                v194 = (char *)v211 + *(int *)(v193 + 48);
                (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v211, v189, v192);
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v194, &v189[*(int *)(v190 + 36)], v191);
                v134 = v281;
                goto LABEL_25;
              }
              (*(void (**)(char *, uint64_t))(v215 + 8))(v217, v216);
              LOBYTE(v292) = 11;
              MEMORY[0x23B8613CC](&unk_23B1D4D28, v225);
              sub_23B1C7160();
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v220 + 48))(v223, 1, v225) != 1)
              {
                (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
                v195 = v224;
                (*(void (**)(char *, char *, uint64_t))(v220 + 32))(v224, v223, v225);
                v196 = swift_getAssociatedTypeWitness();
                v136 = v211;
                (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v211, v195, v196);
                v134 = v281;
                goto LABEL_25;
              }
              (*(void (**)(char *, uint64_t))(v221 + 8))(v223, v222);
              v164 = type metadata accessor for FileTreeError.ItemKindMismatchStruct(0, v285, v279, v163);
              v297 = 12;
              MEMORY[0x23B8613CC](&unk_23B1D4D00, v164);
              sub_23B1C7160();
              if ((v292 & 1) != 0)
              {
                IsFlockedStruct = type metadata accessor for FileTreeError.ItemIsFlockedStruct(0, v285, v279, v165);
                v297 = 15;
                MEMORY[0x23B8613CC](&unk_23B1D4CD8, IsFlockedStruct);
                sub_23B1C7160();
                if ((v292 & 1) != 0)
                {
                  v168 = type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct(0, v285, v279, v167);
                  v297 = 16;
                  MEMORY[0x23B8613CC](&unk_23B1D4CB0, v168);
                  sub_23B1C7160();
                  if ((v292 & 1) != 0)
                  {
                    v170 = type metadata accessor for FileTreeError.UploadCancelled(0, v285, v279, v169);
                    v297 = 17;
                    MEMORY[0x23B8613CC](&unk_23B1D4C88, v170);
                    sub_23B1C7160();
                    v172 = v293;
                    if (v293 >> 60 != 11)
                    {
                      v197 = v292;
                      if (v293 >> 60 == 15)
                        v198 = 0;
                      else
                        v198 = sub_23AD3D744(v292, v293);
                      (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
                      sub_23AD1A280(v197, v172);
                      v199 = v213;
                      *v213 = v198;
                      v134 = v281;
                      swift_storeEnumTagMultiPayload();
                      v135 = v269;
                      v136 = v211;
                      (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v269 + 32))(v211, v199, v134);
                      goto LABEL_17;
                    }
                    v173 = type metadata accessor for FileTreeError.UploadInterrupted(0, v285, v279, v171);
                    v297 = 18;
                    MEMORY[0x23B8613CC](&unk_23B1D4C60, v173);
                    sub_23B1C7160();
                    if ((v292 & 1) != 0)
                    {
                      LOBYTE(v292) = 19;
                      MEMORY[0x23B8613CC](&unk_23B1D4C38, v231);
                      sub_23B1C7160();
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v226 + 48))(v229, 1, v231) != 1)
                      {
                        (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
                        v200 = v230;
                        v201 = v231;
                        (*(void (**)(char *, char *, uint64_t))(v226 + 32))(v230, v229, v231);
                        v202 = v277;
                        v203 = swift_getTupleTypeMetadata2();
                        v136 = v211;
                        v204 = (char *)v211 + *(int *)(v203 + 48);
                        v205 = *(void (**)(char *, char *, uint64_t))(v255 + 32);
                        v205((char *)v211, v200, v202);
                        v205(v204, &v200[*(int *)(v201 + 36)], v202);
                        v134 = v281;
                        goto LABEL_25;
                      }
                      (*(void (**)(char *, uint64_t))(v227 + 8))(v229, v228);
                      v175 = type metadata accessor for FileTreeError.MaxLookupDepthStruct(0, v285, v279, v174);
                      v297 = 20;
                      MEMORY[0x23B8613CC](&unk_23B1D4C10, v175);
                      sub_23B1C7160();
                      if ((v292 & 1) != 0)
                      {
                        FailedStruct = type metadata accessor for FileTreeError.CompressedFileReadFailedStruct(0, v285, v279, v176);
                        v297 = 21;
                        MEMORY[0x23B8613CC](&unk_23B1D4BE8, FailedStruct);
                        sub_23B1C7160();
                        if ((v292 & 1) != 0)
                        {
                          v179 = type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct(0, v285, v279, v178);
                          v297 = 22;
                          MEMORY[0x23B8613CC](&unk_23B1D4BC0, v179);
                          sub_23B1C7160();
                          if ((v292 & 1) != 0)
                          {
                            v181 = type metadata accessor for FileTreeError.ItemNotTracked(0, v285, v279, v180);
                            v297 = 23;
                            MEMORY[0x23B8613CC](&unk_23B1D4B98, v181);
                            sub_23B1C7160();
                            if ((v292 & 1) != 0)
                            {
                              LOBYTE(v292) = 24;
                              MEMORY[0x23B8613CC](&unk_23B1D4B70, v237);
                              sub_23B1C7160();
                              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v232 + 48))(v235, 1, v237) == 1)
                              {
                                (*(void (**)(char *, uint64_t))(v233 + 8))(v235, v234);
                                LOBYTE(v292) = 13;
                                sub_23B1C6F74();
                                swift_allocError();
                                v182 = v288;
                                MEMORY[0x23B8613CC](MEMORY[0x24BEE33F8], v288);
                                v183 = v287;
                                sub_23B1C6F5C();
                                swift_willThrow();
                                (*(void (**)(char *, uint64_t))(v286 + 8))(v183, v182);
                                return __swift_destroy_boxed_opaque_existential_1((uint64_t)v290);
                              }
                              (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
                              v206 = v236;
                              (*(void (**)(char *, char *, uint64_t))(v232 + 32))(v236, v235, v237);
                              v207 = swift_getAssociatedTypeWitness();
                              v136 = v211;
                              (*(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 32))(v211, v206, v207);
                              v134 = v281;
                              goto LABEL_25;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              goto LABEL_59;
            }
            (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
            v185 = v212;
            *v212 = v162 & 1;
            v134 = v281;
LABEL_57:
            swift_storeEnumTagMultiPayload();
            v135 = v269;
            v136 = v211;
            (*(void (**)(_QWORD *, char *, uint64_t))(v269 + 32))(v211, v185, v134);
            goto LABEL_17;
          }
        }
      }
LABEL_59:
      (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
      v136 = v211;
      v134 = v281;
      goto LABEL_25;
    }
LABEL_31:
    (*(void (**)(char *, uint64_t))(v286 + 8))(v287, v288);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v290);
}

void sub_23AD0E170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t AssociatedConformanceWitness;
  uint64_t v38;
  _BYTE v39[32];
  uint64_t v40;
  uint64_t found;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  _BYTE *v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t IsDetachedRootStruct;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v5 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  IsDetachedRootStruct = type metadata accessor for FileTreeError.ItemIsDetachedRootStruct(0, v5, v4, a4);
  v67 = *(_QWORD *)(IsDetachedRootStruct - 8);
  MEMORY[0x24BDAC7A8](IsDetachedRootStruct);
  v74 = &v39[-v6];
  v63 = type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct(0, v5, v4, v7);
  v68 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v47 = &v39[-v8];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v73 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v66 = &v39[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v61 = &v39[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v57 = &v39[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v69 = &v39[-v16];
  v65 = type metadata accessor for FileTreeError.LookupNotPermittedStruct(0, v5, v4, v17);
  v62 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v59 = &v39[-v18];
  v64 = type metadata accessor for FileTreeError.ItemMismatchStruct(0, v5, v4, v19);
  v60 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v58 = &v39[-v20];
  swift_getAssociatedTypeWitness();
  v76 = sub_23B1C6C98();
  v46 = *(_QWORD *)(v76 - 8);
  v21 = MEMORY[0x24BDAC7A8](v76);
  v51 = &v39[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v71 = &v39[-v23];
  v40 = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct(0, v5, v4, v24);
  v43 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v52 = &v39[-v25];
  v50 = type metadata accessor for FileTreeError.CannotBounceStruct(0, v5, v4, v26);
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v48 = &v39[-v27];
  v42 = type metadata accessor for FileTreeError.ItemCollisionStruct(0, v5, v4, v28);
  v45 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v56 = &v39[-v29];
  v30 = swift_getAssociatedTypeWitness();
  v31 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v31);
  v53 = &v39[-v32];
  v33 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v33);
  v70 = &v39[-v34];
  found = type metadata accessor for FileTreeError.ItemNotFoundStruct(0, v5, v4, v35);
  v44 = *(_QWORD *)(found - 8);
  MEMORY[0x24BDAC7A8](found);
  v55 = &v39[-v36];
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v38 = swift_getAssociatedConformanceWitness();
  v72 = AssociatedTypeWitness;
  v77 = AssociatedTypeWitness;
  v78 = v30;
  v54 = v30;
  v79 = AssociatedConformanceWitness;
  v80 = v38;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD0FA98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_23AD0B9C0(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

void sub_23AD0FAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23AD0E170(a1, a2, a3, a4);
}

void sub_23AD0FAC8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  v2 = *(unsigned __int8 *)(v0 + 24);
  if ((*(_BYTE *)(v0 + 25) & 1) != 0)
  {
    sub_23B1C74B4();
    sub_23B1C63E0();
    v3 = v1;
    sub_23B1C64A0();
    swift_bridgeObjectRelease();
    sub_23AA862DC(v1, v2, 1);
  }
  else
  {
    sub_23B1C74B4();
    if ((_DWORD)v2)
    {
      sub_23B1C74B4();
      if ((_DWORD)v2 == 1)
        sub_23B1C74D8();
    }
    else
    {
      sub_23B1C74B4();
      sub_23B1C74CC();
    }
  }
}

uint64_t sub_23AD0FBAC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5578);
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_23AAA159C(v24, v35);
      }
      else
      {
        sub_23AAA15AC((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_23B1C74A8();
      sub_23B1C64A0();
      result = sub_23B1C74E4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_23AAA159C(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD0FEA8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  _OWORD v20[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E4098);
  v6 = sub_23B1C70A0();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_27;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v19 = (_QWORD *)(v5 + 64);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v5 + 72);
    v13 = 1;
    if (v12)
      goto LABEL_17;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v5 + 80);
      if (!v12)
      {
        v14 = 3;
        if (v10 > 3)
        {
          v12 = *(_QWORD *)(v5 + 88);
          if (v12)
          {
            v13 = 3;
            goto LABEL_17;
          }
          while (1)
          {
            v13 = v14 + 1;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              JUMPOUT(0x23AD1029CLL);
            }
            if (v13 >= v10)
              break;
            v12 = v19[v13];
            ++v14;
            if (v12)
              goto LABEL_17;
          }
        }
        goto LABEL_22;
      }
LABEL_17:
      v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v11);
      v16 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v11);
      if ((a2 & 1) != 0)
        sub_23AAA159C(v16, v20);
      else
        sub_23AAA15AC((uint64_t)v16, (uint64_t)v20);
      sub_23B1C74A8();
      __asm { BR              X8 }
    }
  }
LABEL_22:
  swift_release();
  v3 = v2;
  if ((a2 & 1) != 0)
  {
    v17 = 1 << *(_BYTE *)(v5 + 32);
    if (v17 >= 64)
      bzero(v19, ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v19 = -1 << v17;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_27:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_23AD102BC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  unsigned __int8 v22;
  _OWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E40B8);
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v32 = v2;
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          v3 = v32;
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((a2 & 1) != 0)
      sub_23AAA159C(v23, v34);
    else
      sub_23AAA15AC((uint64_t)v23, (uint64_t)v34);
    sub_23B1C74A8();
    sub_23AAABA5C(v22);
    sub_23B1C64A0();
    swift_bridgeObjectRelease();
    result = sub_23B1C74E4();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v22;
    result = (uint64_t)sub_23AAA159C(v34, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v32;
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD105C4(uint64_t a1, int a2)
{
  return sub_23AD105EC(a1, a2, (uint64_t *)&unk_2542E6B00, &qword_2542E3650);
}

uint64_t sub_23AD105D8(uint64_t a1, int a2)
{
  return sub_23AD105EC(a1, a2, &qword_2542E6C80, (uint64_t *)&unk_2569E1AD8);
}

uint64_t sub_23AD105EC(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  int v45;
  uint64_t *v46;

  v6 = v4;
  v46 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v44 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v45 = a2;
  result = sub_23B1C70A0();
  v13 = result;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 0;
    v15 = *(_QWORD *)(v11 + 64);
    v43 = (_QWORD *)(v11 + 64);
    v16 = 1 << *(_BYTE *)(v11 + 32);
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v18 = v17 & v15;
    v41 = v4;
    v42 = (unint64_t)(v16 + 63) >> 6;
    v19 = result + 64;
    while (1)
    {
      if (v18)
      {
        v22 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v23 = v22 | (v14 << 6);
      }
      else
      {
        v24 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return result;
        }
        result = (uint64_t)v43;
        if (v24 >= v42)
          goto LABEL_38;
        v25 = v43[v24];
        ++v14;
        if (!v25)
        {
          v14 = v24 + 1;
          if (v24 + 1 >= v42)
            goto LABEL_38;
          v25 = v43[v14];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v42)
            {
LABEL_38:
              if ((v45 & 1) == 0)
              {
                result = swift_release();
                v6 = v41;
                goto LABEL_45;
              }
              v39 = 1 << *(_BYTE *)(v11 + 32);
              if (v39 >= 64)
                bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v43 = -1 << v39;
              v6 = v41;
              *(_QWORD *)(v11 + 16) = 0;
              break;
            }
            v25 = v43[v26];
            if (!v25)
            {
              while (1)
              {
                v14 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_47;
                if (v14 >= v42)
                  goto LABEL_38;
                v25 = v43[v14];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v14 = v26;
          }
        }
LABEL_21:
        v18 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v14 << 6);
      }
      v27 = *(_QWORD *)(v11 + 48) + 16 * v23;
      v28 = *(_QWORD *)v27;
      v29 = *(unsigned __int8 *)(v27 + 8);
      v30 = *(_QWORD *)(v44 + 72);
      v31 = *(_QWORD *)(v11 + 56) + v30 * v23;
      if ((v45 & 1) != 0)
        sub_23AA724E8(v31, (uint64_t)v10, v46);
      else
        sub_23AA8EFC8(v31, (uint64_t)v10, v46);
      sub_23B1C74A8();
      if (v29)
      {
        sub_23B1C74B4();
        if (v29 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      result = sub_23B1C74E4();
      v32 = -1 << *(_BYTE *)(v13 + 32);
      v33 = result & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v19 + 8 * (v33 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v19 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v19 + 8 * v34);
        }
        while (v38 == -1);
        v20 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v19 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = *(_QWORD *)(v13 + 48) + 16 * v20;
      *(_QWORD *)v21 = v28;
      *(_BYTE *)(v21 + 8) = v29;
      result = sub_23AA724E8((uint64_t)v10, *(_QWORD *)(v13 + 56) + v30 * v20, v46);
      ++*(_QWORD *)(v13 + 16);
    }
  }
  result = swift_release();
LABEL_45:
  *v6 = v13;
  return result;
}

uint64_t sub_23AD10978(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1A50);
  v39 = a2;
  result = sub_23B1C70A0();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v3;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v37 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v36 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v20 >= v36)
          goto LABEL_34;
        v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v36)
            goto LABEL_34;
          v21 = v37[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v36)
                  goto LABEL_34;
                v21 = v37[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v38 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v39 & 1) != 0)
        sub_23AA724E8(v25, (uint64_t)v7, &qword_2542E6A10);
      else
        sub_23AA8EFC8(v25, (uint64_t)v7, &qword_2542E6A10);
      result = sub_23B1C749C();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_23AA724E8((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, &qword_2542E6A10);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_23AD10CAC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5558);
  v42 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_23B1C74A8();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD10FD0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  _OWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E4078);
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v32 = v2;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          v3 = v32;
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((a2 & 1) != 0)
      sub_23AAA159C(v23, v34);
    else
      sub_23AAA15AC((uint64_t)v23, (uint64_t)v34);
    sub_23B1C74A8();
    sub_23B1C64A0();
    swift_bridgeObjectRelease();
    result = sub_23B1C74E4();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v15) = v22;
    result = (uint64_t)sub_23AAA159C(v34, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v32;
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD11330(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5588);
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_23AAA159C((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_23ACEBF78(v25, (uint64_t)&v38);
      sub_23AAA15AC(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_23B1C6E6C();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_23AAA159C(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD11644(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C30);
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      swift_bridgeObjectRetain();
    }
    result = sub_23B1C6C44();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD11918(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  _QWORD *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1AC8);
  v37 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v34 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35)
          goto LABEL_33;
        v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_33;
          v23 = v36[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v34;
              if ((v37 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v23 = v36[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = 8 * v21;
      v30 = *(void **)(*(_QWORD *)(v5 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        v32 = v30;
        swift_bridgeObjectRetain();
      }
      sub_23B1C63E0();
      sub_23B1C74A8();
      sub_23B1C64A0();
      v14 = sub_23B1C74E4();
      result = swift_bridgeObjectRelease();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD11C34(uint64_t a1, char a2)
{
  return sub_23AD199D8(a1, a2, &qword_2569E1AC0);
}

uint64_t sub_23AD11C40(uint64_t a1, char a2)
{
  return sub_23AD12270(a1, a2, (uint64_t *)&unk_2569E1D40);
}

uint64_t sub_23AD11C4C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1C48);
  v38 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36)
          goto LABEL_33;
        v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v36)
            goto LABEL_33;
          v23 = v37[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v35;
              if ((v38 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v36)
                  goto LABEL_33;
                v23 = v37[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = 8 * v21;
      v30 = *(void **)(*(_QWORD *)(v5 + 48) + v29);
      v31 = *(void **)(*(_QWORD *)(v5 + 56) + v29);
      if ((v38 & 1) == 0)
      {
        v32 = v30;
        v33 = v31;
      }
      sub_23B1C63E0();
      sub_23B1C74A8();
      sub_23B1C64A0();
      v14 = sub_23B1C74E4();
      result = swift_bridgeObjectRelease();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD11F68(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5568);
  v37 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_23B1C74A8();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD12270(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v40 = a2;
  v7 = sub_23B1C70A0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v39 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v37 = v3;
  v38 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v38)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v39 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_33;
      v25 = *(_QWORD *)(v39 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_33:
          swift_release();
          v4 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v38)
              goto LABEL_33;
            v25 = *(_QWORD *)(v39 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + v31);
    if ((v40 & 1) == 0)
    {
      v34 = v32;
      v35 = v33;
    }
    sub_23B1C63E0();
    sub_23B1C74A8();
    sub_23B1C64A0();
    v15 = sub_23B1C74E4();
    result = swift_bridgeObjectRelease();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v12 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v12 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v12 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v37;
  v24 = (_QWORD *)(v6 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23AD12598(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;

  v3 = v2;
  v5 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E2078);
  v42 = a2;
  v9 = sub_23B1C70A0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v39 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v37 = v2;
  v38 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38)
      break;
    v22 = v39;
    v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v38)
        goto LABEL_34;
      v23 = v39[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v17 >= v38)
              goto LABEL_34;
            v23 = v39[v17];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v17 = v24;
      }
    }
LABEL_21:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(_QWORD *)(v8 + 48) + v25 * v20;
    if ((v42 & 1) != 0)
    {
      sub_23AA94050(v26, (uint64_t)v7, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
      v27 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_23AA907B0(v26, (uint64_t)v7, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
      v27 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
      swift_retain();
    }
    sub_23B1C74A8();
    sub_23B1C5A08();
    sub_23AD2864C();
    sub_23B1C62D8();
    sub_23B1C6C5C();
    result = sub_23B1C74E4();
    v28 = -1 << *(_BYTE *)(v10 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = sub_23AA94050((uint64_t)v7, *(_QWORD *)(v10 + 48) + v25 * v18, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v37;
  v22 = v39;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v8 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_23AD12944(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  void (**v42)(char *, unint64_t, uint64_t);
  uint64_t v43;
  uint64_t i;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t (**v48)(unint64_t, char *, uint64_t);
  char *v49;
  char *v50;

  v3 = v2;
  v5 = sub_23B1C5BDC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v50 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1D58);
  v47 = a2;
  v12 = sub_23B1C70A0();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v39 = v2;
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 64);
    v41 = (_QWORD *)(v11 + 64);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = (unint64_t)(v14 + 63) >> 6;
    v42 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    v48 = (uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32);
    v18 = v12 + 64;
    result = swift_retain();
    v20 = 0;
    v49 = v10;
    v43 = v6;
    for (i = v11; ; v11 = i)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v40)
          goto LABEL_34;
        v25 = v41[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v40)
            goto LABEL_34;
          v25 = v41[v20];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v40)
            {
LABEL_34:
              swift_release();
              v3 = v39;
              if ((v47 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 >= 64)
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v41 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
              }
              break;
            }
            v25 = v41[v26];
            if (!v25)
            {
              while (1)
              {
                v20 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v20 >= v40)
                  goto LABEL_34;
                v25 = v41[v20];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v20 = v26;
          }
        }
LABEL_21:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = *(_QWORD *)(v45 + 72);
      v28 = *(_QWORD *)(v11 + 48) + v27 * v23;
      if ((v47 & 1) != 0)
      {
        sub_23AA94050(v28, (uint64_t)v49, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
        v29 = (void (**)(char *, unint64_t, uint64_t))v48;
      }
      else
      {
        sub_23AA907B0(v28, (uint64_t)v49, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
        v29 = v42;
      }
      v30 = *(_QWORD *)(v6 + 72);
      (*v29)(v50, *(_QWORD *)(v11 + 56) + v30 * v23, v5);
      sub_23B1C74A8();
      sub_23B1C5A08();
      sub_23AD2864C();
      sub_23B1C62D8();
      sub_23B1C64A0();
      result = sub_23B1C74E4();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      sub_23AA94050((uint64_t)v49, *(_QWORD *)(v13 + 48) + v27 * v21, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
      result = (*v48)(*(_QWORD *)(v13 + 56) + v30 * v21, v50, v5);
      ++*(_QWORD *)(v13 + 16);
      v6 = v43;
    }
  }
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_23AD12D64(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1B30);
  result = sub_23B1C70A0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v37 = a2;
    v8 = 0;
    v39 = (_QWORD *)(v5 + 64);
    v40 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v38 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v18 >= v38)
          goto LABEL_35;
        v19 = v39[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v38)
            goto LABEL_35;
          v19 = v39[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v38)
            {
LABEL_35:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_42;
              }
              v36 = 1 << *(_BYTE *)(v5 + 32);
              if (v36 >= 64)
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v36;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v39[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_44;
                if (v8 >= v38)
                  goto LABEL_35;
                v19 = v39[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(v5 + 56);
      v22 = *(_QWORD *)(v5 + 48) + 16 * v17;
      v23 = *(unsigned __int8 *)(v22 + 8);
      v24 = *(_QWORD *)v22;
      v25 = (uint64_t *)(v21 + 24 * v17);
      v26 = v25[2];
      v27 = *((_BYTE *)v25 + 8);
      v28 = *v25;
      sub_23B1C74A8();
      if (v23)
      {
        sub_23B1C74B4();
        if (v23 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      result = sub_23B1C74E4();
      v29 = -1 << *(_BYTE *)(v7 + 32);
      v30 = result & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v12 + 8 * v31);
        }
        while (v35 == -1);
        v13 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v7 + 48) + 16 * v13;
      *(_QWORD *)v14 = v24;
      *(_BYTE *)(v14 + 8) = v23;
      v15 = *(_QWORD *)(v7 + 56) + 24 * v13;
      *(_QWORD *)v15 = v28;
      *(_BYTE *)(v15 + 8) = v27;
      *(_QWORD *)(v15 + 16) = v26;
      ++*(_QWORD *)(v7 + 16);
      v5 = v40;
    }
  }
  result = swift_release();
LABEL_42:
  *v3 = v7;
  return result;
}

uint64_t sub_23AD130AC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t i;
  char v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1B28);
  v39 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v37 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36)
          goto LABEL_33;
        v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v36)
            goto LABEL_33;
          v23 = v37[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              v3 = v35;
              if ((v39 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v36)
                  goto LABEL_33;
                v23 = v37[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
      v30 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v31 = *(_QWORD *)v30;
      v32 = *(_BYTE *)(v30 + 8);
      v40 = *(_QWORD *)(v30 + 16);
      if ((v39 & 1) == 0)
        v33 = v29;
      sub_23B1C63E0();
      sub_23B1C74A8();
      sub_23B1C64A0();
      v14 = sub_23B1C74E4();
      result = swift_bridgeObjectRelease();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v29;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v18;
      *(_QWORD *)v19 = v31;
      *(_BYTE *)(v19 + 8) = v32;
      *(_QWORD *)(v19 + 16) = v40;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD133EC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  _QWORD v23[3];
  int64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int v27;

  v3 = v2;
  v5 = type metadata accessor for SyncState();
  v26 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7D0);
  v27 = a2;
  v9 = sub_23B1C70A0();
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_29;
  v23[0] = v2;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = *(_QWORD *)(v8 + 64);
  v25 = (_QWORD *)(v8 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v24 = (unint64_t)(v10 + 63) >> 6;
  swift_retain();
  v23[1] = "";
  v23[2] = "is_detached_root";
  if (v13)
  {
    v14 = __clz(__rbit64(v13));
    goto LABEL_18;
  }
  if (v24 <= 1)
  {
    swift_release();
    v3 = (uint64_t *)v23[0];
    v15 = v25;
    if ((v27 & 1) == 0)
      goto LABEL_29;
    goto LABEL_25;
  }
  v15 = v25;
  v16 = v25[1];
  v17 = 1;
  if (v16)
    goto LABEL_17;
  v17 = 2;
  if (v24 <= 2)
    goto LABEL_22;
  v16 = v25[2];
  if (v16)
  {
LABEL_17:
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_18:
    v19 = *(unsigned __int8 *)(*(_QWORD *)(v8 + 48) + v14);
    v20 = *(_QWORD *)(v8 + 56) + *(_QWORD *)(v26 + 72) * v14;
    if ((v27 & 1) != 0)
      sub_23AA94050(v20, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    else
      sub_23AA907B0(v20, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    sub_23B1C74A8();
    __asm { BR              X8 }
  }
  v18 = 3;
  if (v24 > 3)
  {
    v16 = v25[3];
    if (v16)
    {
      v17 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v17 = v18 + 1;
      if (__OFADD__(v18, 1))
      {
        __break(1u);
        JUMPOUT(0x23AD1388CLL);
      }
      if (v17 >= v24)
        break;
      v16 = v25[v17];
      ++v18;
      if (v16)
        goto LABEL_17;
    }
  }
LABEL_22:
  swift_release();
  v3 = (uint64_t *)v23[0];
  if ((v27 & 1) == 0)
    goto LABEL_29;
LABEL_25:
  v21 = 1 << *(_BYTE *)(v8 + 32);
  if (v21 >= 64)
    bzero(v15, ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v15 = -1 << v21;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_29:
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_23AD138B0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1A90);
  v40 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v36 = v2;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = v38[v13];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v37)
              goto LABEL_33;
            v24 = v38[v13];
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
    v31 = *(_QWORD *)(v5 + 56) + 16 * v21;
    v32 = *(_QWORD *)v31;
    v33 = *(_BYTE *)(v31 + 8);
    if ((v40 & 1) == 0)
      v34 = v30;
    sub_23B1C63E0();
    sub_23B1C74A8();
    sub_23B1C64A0();
    v14 = sub_23B1C74E4();
    result = swift_bridgeObjectRelease();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v30;
    v19 = *(_QWORD *)(v7 + 56) + 16 * v18;
    *(_QWORD *)v19 = v32;
    *(_BYTE *)(v19 + 8) = v33;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD13BE8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  char v39;
  __int128 v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1A98);
  v39 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v36;
              if ((v39 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v5 + 32);
                if (v35 >= 64)
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v35;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
      v30 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v31 = *(void **)v30;
      v40 = *(_OWORD *)(v30 + 8);
      if ((v39 & 1) == 0)
      {
        swift_retain();
        v32 = v29;
        v33 = v31;
        v34 = (id)v40;
      }
      sub_23B1C63E0();
      sub_23B1C74A8();
      sub_23B1C64A0();
      v14 = sub_23B1C74E4();
      result = swift_bridgeObjectRelease();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v29;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v18;
      *(_QWORD *)v19 = v31;
      *(_OWORD *)(v19 + 8) = v40;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD13F30(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  int64_t v38;
  _QWORD *v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1AA0);
  result = sub_23B1C70A0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v37 = a2;
    v8 = 0;
    v39 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v38 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v38)
          goto LABEL_35;
        v20 = v39[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v38)
            goto LABEL_35;
          v20 = v39[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v38)
            {
LABEL_35:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_42;
              }
              v36 = 1 << *(_BYTE *)(v5 + 32);
              if (v36 >= 64)
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v36;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v39[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_44;
                if (v8 >= v38)
                  goto LABEL_35;
                v20 = v39[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 16 * v18;
      v23 = *(_QWORD *)(v5 + 48) + v22;
      v24 = *(_QWORD *)(v5 + 56) + v22;
      v25 = *(unsigned __int8 *)(v23 + 8);
      v26 = *(_QWORD *)v23;
      v27 = *(_BYTE *)(v24 + 8);
      v28 = *(_QWORD *)v24;
      sub_23B1C74A8();
      if (v25)
      {
        sub_23B1C74B4();
        if (v25 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      result = sub_23B1C74E4();
      v29 = -1 << *(_BYTE *)(v7 + 32);
      v30 = result & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v12 + 8 * v31);
        }
        while (v35 == -1);
        v13 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = 16 * v13;
      v15 = *(_QWORD *)(v7 + 48) + v14;
      *(_QWORD *)v15 = v26;
      *(_BYTE *)(v15 + 8) = v25;
      v16 = *(_QWORD *)(v7 + 56) + v14;
      *(_QWORD *)v16 = v28;
      *(_BYTE *)(v16 + 8) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_42:
  *v3 = v7;
  return result;
}

uint64_t sub_23AD1426C(uint64_t a1, int a2)
{
  return sub_23AD105EC(a1, a2, &qword_2542E1568, (uint64_t *)&unk_2542DE7E0);
}

uint64_t sub_23AD14280(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  _OWORD v20[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E4080);
  v6 = sub_23B1C70A0();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_27;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = (_QWORD *)(v5 + 64);
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v19 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v10)
  {
    v11 = __clz(__rbit64(v10));
    goto LABEL_18;
  }
  if (v19 > 1)
  {
    v12 = *(_QWORD *)(v5 + 72);
    v13 = 1;
    if (v12)
      goto LABEL_17;
    v13 = 2;
    if (v19 > 2)
    {
      v12 = *(_QWORD *)(v5 + 80);
      if (!v12)
      {
        v14 = 3;
        if (v19 > 3)
        {
          v12 = *(_QWORD *)(v5 + 88);
          if (v12)
          {
            v13 = 3;
            goto LABEL_17;
          }
          while (1)
          {
            v13 = v14 + 1;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              JUMPOUT(0x23AD1467CLL);
            }
            if (v13 >= v19)
              break;
            v12 = v8[v13];
            ++v14;
            if (v12)
              goto LABEL_17;
          }
        }
        goto LABEL_22;
      }
LABEL_17:
      v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v11);
      v16 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v11);
      if ((a2 & 1) != 0)
        sub_23AAA159C(v16, v20);
      else
        sub_23AAA15AC((uint64_t)v16, (uint64_t)v20);
      sub_23B1C74A8();
      __asm { BR              X9 }
    }
  }
LABEL_22:
  swift_release();
  v3 = v2;
  if ((a2 & 1) != 0)
  {
    v17 = 1 << *(_BYTE *)(v5 + 32);
    if (v17 >= 64)
      bzero((void *)(v5 + 64), ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v8 = -1 << v17;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_27:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_23AD146A4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  unsigned int v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t *v33;
  uint64_t v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E4088);
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_46;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v2;
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  swift_retain();
  v13 = 0;
LABEL_8:
  if (v10)
  {
    v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v16 = v15 | (v13 << 6);
    goto LABEL_22;
  }
  v17 = v13 + 1;
  if (__OFADD__(v13, 1))
    goto LABEL_47;
  if (v17 >= v11)
  {
    swift_release();
    v3 = v33;
    v18 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) != 0)
    {
LABEL_42:
      v31 = 1 << *(_BYTE *)(v5 + 32);
      if (v31 >= 64)
        bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      else
        *v18 = -1 << v31;
      *(_QWORD *)(v5 + 16) = 0;
    }
  }
  else
  {
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (v19)
      goto LABEL_21;
    v13 = v17 + 1;
    if (v17 + 1 >= v11)
      goto LABEL_39;
    v19 = *(_QWORD *)(v34 + 8 * v13);
    if (v19)
    {
LABEL_21:
      v10 = (v19 - 1) & v19;
      v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
      v21 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v16);
      v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
      if ((a2 & 1) != 0)
        sub_23AAA159C(v22, v35);
      else
        sub_23AAA15AC((uint64_t)v22, (uint64_t)v35);
      sub_23B1C74A8();
      if (v21 >> 2 != 55 && v21 >> 2 != 63)
      {
        sub_23B1C74B4();
        __asm { BR              X9 }
      }
      sub_23B1C74B4();
      v23 = sub_23B1C74E4();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v28 || (v27 & 1) == 0)
      {
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
        if (v30 != -1)
        {
          v14 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
          *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
          *(_BYTE *)(*(_QWORD *)(v7 + 48) + v14) = v21;
          sub_23AAA159C(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
          ++*(_QWORD *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      JUMPOUT(0x23AD14B78);
    }
    v20 = v17 + 2;
    if (v20 < v11)
    {
      v19 = *(_QWORD *)(v34 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          v13 = v20 + 1;
          if (__OFADD__(v20, 1))
            goto LABEL_48;
          if (v13 >= v11)
            goto LABEL_39;
          v19 = *(_QWORD *)(v34 + 8 * v13);
          ++v20;
          if (v19)
            goto LABEL_21;
        }
      }
      v13 = v20;
      goto LABEL_21;
    }
LABEL_39:
    swift_release();
    v3 = v33;
    if ((a2 & 1) != 0)
      goto LABEL_42;
  }
LABEL_46:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD14BAC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  _OWORD v20[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E4090);
  v6 = sub_23B1C70A0();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_27;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v19 = (_QWORD *)(v5 + 64);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v10 > 1)
  {
    v12 = *(_QWORD *)(v5 + 72);
    v13 = 1;
    if (v12)
      goto LABEL_17;
    v13 = 2;
    if (v10 > 2)
    {
      v12 = *(_QWORD *)(v5 + 80);
      if (!v12)
      {
        v14 = 3;
        if (v10 > 3)
        {
          v12 = *(_QWORD *)(v5 + 88);
          if (v12)
          {
            v13 = 3;
            goto LABEL_17;
          }
          while (1)
          {
            v13 = v14 + 1;
            if (__OFADD__(v14, 1))
            {
              __break(1u);
              JUMPOUT(0x23AD15020);
            }
            if (v13 >= v10)
              break;
            v12 = v19[v13];
            ++v14;
            if (v12)
              goto LABEL_17;
          }
        }
        goto LABEL_22;
      }
LABEL_17:
      v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v11);
      v16 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v11);
      if ((a2 & 1) != 0)
        sub_23AAA159C(v16, v20);
      else
        sub_23AAA15AC((uint64_t)v16, (uint64_t)v20);
      sub_23B1C74A8();
      __asm { BR              X9 }
    }
  }
LABEL_22:
  swift_release();
  v3 = v2;
  if ((a2 & 1) != 0)
  {
    v17 = 1 << *(_BYTE *)(v5 + 32);
    if (v17 >= 64)
      bzero(v19, ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v19 = -1 << v17;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_27:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_23AD15054(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1AA8);
  v10 = (_QWORD *)sub_23B1C70A0();
  if (*(_QWORD *)(v9 + 16))
  {
    v27 = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = (_QWORD *)(v9 + 64);
    v13 = -1;
    if (v11 < 64)
      v13 = ~(-1 << v11);
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v15 = (unint64_t)(v11 + 63) >> 6;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15)
          goto LABEL_23;
        v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v15)
            goto LABEL_23;
          v22 = v12[v17];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v27;
                goto LABEL_30;
              }
              v25 = 1 << *(_BYTE *)(v9 + 32);
              if (v25 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v12 = -1 << v25;
              v3 = v27;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                v17 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_32;
                if (v17 >= v15)
                  goto LABEL_23;
                v22 = v12[v17];
                ++v23;
                if (v22)
                  goto LABEL_20;
              }
            }
            v17 = v23;
          }
        }
LABEL_20:
        v14 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(v9 + 48) + *(_QWORD *)(v6 + 72) * v20;
      if ((a2 & 1) != 0)
      {
        sub_23AA724E8(v24, (uint64_t)v8, &qword_2542DDDB0);
        v18 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_23AA8EFC8(v24, (uint64_t)v8, &qword_2542DDDB0);
        v18 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
      }
      result = sub_23AD27660((uint64_t)v8, v18, v10);
    }
  }
  result = swift_release();
LABEL_30:
  *v3 = v10;
  return result;
}

uint64_t sub_23AD152B4(uint64_t a1, char a2)
{
  return sub_23AD199D8(a1, a2, &qword_2569E1AB8);
}

uint64_t sub_23AD152C0(uint64_t a1, char a2)
{
  return sub_23AD152D8(a1, a2, &qword_2569E40A0);
}

uint64_t sub_23AD152CC(uint64_t a1, char a2)
{
  return sub_23AD152D8(a1, a2, &qword_2569E40A8);
}

uint64_t sub_23AD152D8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _OWORD v35[2];

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = sub_23B1C70A0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_41;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v33 = v3;
  v34 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_22;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v19 >= v12)
      break;
    v20 = (_QWORD *)(v6 + 64);
    v21 = *(_QWORD *)(v34 + 8 * v19);
    ++v15;
    if (!v21)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v12)
        goto LABEL_34;
      v21 = *(_QWORD *)(v34 + 8 * v15);
      if (!v21)
      {
        v22 = v19 + 2;
        if (v22 >= v12)
        {
LABEL_34:
          swift_release();
          v4 = v33;
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v21 = *(_QWORD *)(v34 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            v15 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_43;
            if (v15 >= v12)
              goto LABEL_34;
            v21 = *(_QWORD *)(v34 + 8 * v15);
            ++v22;
            if (v21)
              goto LABEL_21;
          }
        }
        v15 = v22;
      }
    }
LABEL_21:
    v11 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v15 << 6);
LABEL_22:
    v23 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v18);
    v24 = (_OWORD *)(*(_QWORD *)(v6 + 56) + 32 * v18);
    if ((a2 & 1) != 0)
      sub_23AAA159C(v24, v35);
    else
      sub_23AAA15AC((uint64_t)v24, (uint64_t)v35);
    sub_23B1C74A8();
    sub_23B1C64A0();
    swift_bridgeObjectRelease();
    result = sub_23B1C74E4();
    v25 = -1 << *(_BYTE *)(v8 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v13 + 8 * v27);
      }
      while (v31 == -1);
      v16 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v16) = v23;
    result = (uint64_t)sub_23AAA159C(v35, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v16));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v33;
  v20 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v6 + 32);
  if (v32 >= 64)
    bzero(v20, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v20 = -1 << v32;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23AD15610(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;
  uint64_t v41;
  char v42[72];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1AF0);
  v40 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = *(_QWORD *)(v5 + 48) + 32 * v21;
      v30 = *(void **)v29;
      v31 = *(void **)(v29 + 8);
      v32 = *(void **)(v29 + 16);
      v33 = *(_BYTE *)(v29 + 24);
      v34 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v21);
      v35 = *v34;
      v41 = v34[1];
      if ((v40 & 1) == 0)
      {
        sub_23AAFA44C(v30, v31, v32, v33);
        swift_bridgeObjectRetain();
      }
      sub_23B1C74A8();
      sub_23AC4BB9C((uint64_t)v42, (uint64_t)v30, (uint64_t)v31, (uint64_t)v32, v33);
      result = sub_23B1C74E4();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = *(_QWORD *)(v7 + 48) + 32 * v17;
      *(_QWORD *)v18 = v30;
      *(_QWORD *)(v18 + 8) = v31;
      *(_QWORD *)(v18 + 16) = v32;
      *(_BYTE *)(v18 + 24) = v33;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17);
      *v19 = v35;
      v19[1] = v41;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD15948(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  __int128 v40;
  __int128 v41;
  char v42;
  _OWORD v43[2];
  uint64_t v44;
  char v45;
  char v46;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1AF8);
  v42 = a2;
  result = sub_23B1C70A0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v37 = v2;
    v8 = 0;
    v39 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v38 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v38)
          goto LABEL_33;
        v21 = v39[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v38)
            goto LABEL_33;
          v21 = v39[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v38)
            {
LABEL_33:
              if ((v42 & 1) == 0)
              {
                result = swift_release();
                v3 = v37;
                goto LABEL_40;
              }
              v36 = 1 << *(_BYTE *)(v5 + 32);
              if (v36 >= 64)
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v36;
              v3 = v37;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v39[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v38)
                  goto LABEL_33;
                v21 = v39[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(v5 + 48) + 48 * v19;
      v29 = *(_OWORD *)v27;
      v28 = *(_OWORD *)(v27 + 16);
      v30 = *(_QWORD *)(v27 + 32);
      v31 = *(_BYTE *)(v27 + 40);
      v32 = *(_BYTE *)(v27 + 41);
      v33 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      v35 = *v33;
      v34 = v33[1];
      if ((v42 & 1) == 0)
      {
        v40 = *(_OWORD *)v27;
        v41 = *(_OWORD *)(v27 + 16);
        swift_bridgeObjectRetain();
        v29 = v40;
        v28 = v41;
      }
      v43[0] = v29;
      v43[1] = v28;
      v44 = v30;
      v45 = v31;
      v46 = v32;
      sub_23B1C74A8();
      sub_23AC4BE5C();
      result = sub_23B1C74E4();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      result = sub_23AA724E8((uint64_t)v43, *(_QWORD *)(v7 + 48) + 48 * v16, (uint64_t *)&unk_2542E05B0);
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v16);
      *v17 = v35;
      v17[1] = v34;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_23AD15C74(uint64_t a1, char a2)
{
  return sub_23AD17DA8(a1, a2, &qword_2569E40B0, (void (*)(uint64_t, _BYTE *))sub_23ABD76F0);
}

uint64_t sub_23AD15C88(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C28);
  v41 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_47;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  v14 = v5;
  v40 = v5;
  while (1)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_22;
    }
    v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      return result;
    }
    if (v19 >= v38)
      break;
    v20 = v39;
    v21 = v39[v19];
    ++v13;
    if (!v21)
    {
      v13 = v19 + 1;
      if (v19 + 1 >= v38)
        goto LABEL_40;
      v21 = v39[v13];
      if (!v21)
      {
        v22 = v19 + 2;
        if (v22 >= v38)
        {
LABEL_40:
          swift_release();
          v3 = v37;
          if ((v41 & 1) == 0)
            goto LABEL_47;
          goto LABEL_41;
        }
        v21 = v39[v22];
        if (!v21)
        {
          while (1)
          {
            v13 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_49;
            if (v13 >= v38)
              goto LABEL_40;
            v21 = v39[v13];
            ++v22;
            if (v21)
              goto LABEL_21;
          }
        }
        v13 = v22;
      }
    }
LABEL_21:
    v10 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_22:
    v23 = 8 * v18;
    v24 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + v23);
    v25 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + v23);
    if ((v41 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_23B1C74A8();
    v26 = *(void **)(v24 + 16);
    v27 = *(unsigned __int8 *)(v24 + 24);
    if ((*(_BYTE *)(v24 + 25) & 1) != 0)
    {
      sub_23B1C74B4();
      sub_23B1C63E0();
      v28 = v26;
      sub_23B1C64A0();
      v14 = v40;
      swift_bridgeObjectRelease();
      sub_23AA862DC(v26, v27, 1);
    }
    else
    {
      sub_23B1C74B4();
      if ((_DWORD)v27)
      {
        sub_23B1C74B4();
        if ((_DWORD)v27 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
    }
    result = sub_23B1C74E4();
    v29 = -1 << *(_BYTE *)(v7 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_48;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v11 + 8 * v31);
      }
      while (v35 == -1);
      v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = 8 * v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v24;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v25;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v37;
  v20 = v39;
  if ((v41 & 1) == 0)
    goto LABEL_47;
LABEL_41:
  v36 = 1 << *(_BYTE *)(v40 + 32);
  if (v36 >= 64)
    bzero(v20, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v20 = -1 << v36;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_47:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD16060(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C20);
  v39 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v36 = v2;
  v37 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v13 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((v39 & 1) == 0)
    {
      v33 = v31;
      v34 = v32;
    }
    sub_23B1C63E0();
    sub_23B1C74A8();
    sub_23B1C64A0();
    v14 = sub_23B1C74E4();
    result = swift_bridgeObjectRelease();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD1638C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _BYTE v32[16];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E20A0);
  result = sub_23B1C70A0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v31 = v3;
    v8 = 0;
    v9 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_34;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_34;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v31;
                goto LABEL_41;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v30;
              v3 = v31;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_43;
                if (v8 >= v13)
                  goto LABEL_34;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_QWORD *)(v5 + 56) + 16 * v17;
      if ((a2 & 1) != 0)
        sub_23AABABF4(v22, (uint64_t)v32);
      else
        sub_23ACF17F0(v22, (uint64_t)v32);
      result = sub_23B1C749C();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      result = sub_23AABABF4((uint64_t)v32, *(_QWORD *)(v7 + 56) + 16 * v15);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

uint64_t sub_23AD1664C(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  int v46;
  char *v47;
  uint64_t v48;

  v6 = v4;
  v48 = a3(0);
  v8 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)&v42 - v9;
  v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v46 = a2;
  v11 = sub_23B1C70A0();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v43 = v4;
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 64);
    v45 = (_QWORD *)(v10 + 64);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v44 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 64;
    result = swift_retain();
    v19 = 0;
    while (1)
    {
      if (v16)
      {
        v22 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v23 = v22 | (v19 << 6);
      }
      else
      {
        v24 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v44)
          goto LABEL_34;
        v25 = v45[v24];
        ++v19;
        if (!v25)
        {
          v19 = v24 + 1;
          if (v24 + 1 >= v44)
            goto LABEL_34;
          v25 = v45[v19];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v44)
            {
LABEL_34:
              swift_release();
              v6 = v43;
              if ((v46 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v10 + 32);
                if (v41 >= 64)
                  bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v41;
                *(_QWORD *)(v10 + 16) = 0;
              }
              break;
            }
            v25 = v45[v26];
            if (!v25)
            {
              while (1)
              {
                v19 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v19 >= v44)
                  goto LABEL_34;
                v25 = v45[v19];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v19 = v26;
          }
        }
LABEL_21:
        v16 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v19 << 6);
      }
      v27 = *(_QWORD *)(v10 + 56);
      v28 = v10;
      v29 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v23);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v8 + 72);
      v33 = v27 + v32 * v23;
      if ((v46 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v47, v33, v48);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v47, v33, v48);
        swift_bridgeObjectRetain();
      }
      sub_23B1C74A8();
      sub_23B1C64A0();
      result = sub_23B1C74E4();
      v34 = -1 << *(_BYTE *)(v12 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v17 + 8 * v36);
        }
        while (v40 == -1);
        v20 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v20);
      *v21 = v31;
      v21[1] = v30;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v12 + 56) + v32 * v20, v47, v48);
      ++*(_QWORD *)(v12 + 16);
      v10 = v28;
    }
  }
  result = swift_release();
  *v6 = v12;
  return result;
}

uint64_t sub_23AD169B0(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1D18);
  v10 = (_QWORD *)sub_23B1C70A0();
  if (*(_QWORD *)(v9 + 16))
  {
    v27 = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = (_QWORD *)(v9 + 64);
    v13 = -1;
    if (v11 < 64)
      v13 = ~(-1 << v11);
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v15 = (unint64_t)(v11 + 63) >> 6;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15)
          goto LABEL_23;
        v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v15)
            goto LABEL_23;
          v22 = v12[v17];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v27;
                goto LABEL_30;
              }
              v25 = 1 << *(_BYTE *)(v9 + 32);
              if (v25 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v12 = -1 << v25;
              v3 = v27;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                v17 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_32;
                if (v17 >= v15)
                  goto LABEL_23;
                v22 = v12[v17];
                ++v23;
                if (v22)
                  goto LABEL_20;
              }
            }
            v17 = v23;
          }
        }
LABEL_20:
        v14 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(v9 + 48) + *(_QWORD *)(v6 + 72) * v20;
      if ((a2 & 1) != 0)
      {
        sub_23AA724E8(v24, (uint64_t)v8, &qword_2542DDDB0);
        v18 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_23AA8EFC8(v24, (uint64_t)v8, &qword_2542DDDB0);
        v18 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v20);
      }
      result = sub_23AD27660((uint64_t)v8, (uint64_t)v18, v10);
    }
  }
  result = swift_release();
LABEL_30:
  *v3 = v10;
  return result;
}

uint64_t sub_23AD16C0C(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1D00);
  v10 = (_QWORD *)sub_23B1C70A0();
  if (*(_QWORD *)(v9 + 16))
  {
    v28 = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = (_QWORD *)(v9 + 64);
    v13 = -1;
    if (v11 < 64)
      v13 = ~(-1 << v11);
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v15 = (unint64_t)(v11 + 63) >> 6;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v21 = v20 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v22 >= v15)
          goto LABEL_23;
        v23 = v12[v22];
        ++v17;
        if (!v23)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v15)
            goto LABEL_23;
          v23 = v12[v17];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v28;
                goto LABEL_30;
              }
              v26 = 1 << *(_BYTE *)(v9 + 32);
              if (v26 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v12 = -1 << v26;
              v3 = v28;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v12[v24];
            if (!v23)
            {
              while (1)
              {
                v17 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_32;
                if (v17 >= v15)
                  goto LABEL_23;
                v23 = v12[v17];
                ++v24;
                if (v23)
                  goto LABEL_20;
              }
            }
            v17 = v24;
          }
        }
LABEL_20:
        v14 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v17 << 6);
      }
      v25 = *(_QWORD *)(v9 + 48) + *(_QWORD *)(v6 + 72) * v21;
      if ((a2 & 1) != 0)
      {
        sub_23AA724E8(v25, (uint64_t)v8, &qword_2542DDDB0);
        v18 = *(void **)(*(_QWORD *)(v9 + 56) + 8 * v21);
      }
      else
      {
        sub_23AA8EFC8(v25, (uint64_t)v8, &qword_2542DDDB0);
        v18 = *(void **)(*(_QWORD *)(v9 + 56) + 8 * v21);
        v19 = v18;
      }
      result = sub_23AD27660((uint64_t)v8, (uint64_t)v18, v10);
    }
  }
  result = swift_release();
LABEL_30:
  *v3 = v10;
  return result;
}

uint64_t sub_23AD16E6C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1D08);
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      v34 = v32;
    }
    result = sub_23B1C6C44();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD17140(uint64_t a1, char a2)
{
  return sub_23AD17460(a1, a2, &qword_2569E1CF0);
}

uint64_t sub_23AD1714C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1CC0);
  v37 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_23B1C74A8();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD17460(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_23B1C70A0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_23B1C74A8();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23AD17768(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  char v38;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = a2;
  v7 = sub_23B1C70A0();
  v8 = v7;
  if (*(_QWORD *)(v6 + 16))
  {
    v35 = v3;
    v9 = 1 << *(_BYTE *)(v6 + 32);
    v37 = (_QWORD *)(v6 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v6 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36)
          goto LABEL_33;
        v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_33;
          v24 = v37[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              v4 = v35;
              if ((v38 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v6 + 32);
                if (v34 >= 64)
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v34;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v36)
                  goto LABEL_33;
                v24 = v37[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 8 * v22;
      v31 = *(void **)(*(_QWORD *)(v6 + 48) + v30);
      v32 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v30);
      if ((v38 & 1) == 0)
      {
        v33 = v31;
        swift_retain();
      }
      sub_23B1C63E0();
      sub_23B1C74A8();
      sub_23B1C64A0();
      v15 = sub_23B1C74E4();
      result = swift_bridgeObjectRelease();
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v12 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v12 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v12 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v31;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v32;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23AD17A80(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E40D0);
  v36 = a2;
  v6 = sub_23B1C70A0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_23B1C74A8();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_23AD17D94(uint64_t a1, char a2)
{
  return sub_23AD17DA8(a1, a2, &qword_2542DF3A0, (void (*)(uint64_t, _BYTE *))sub_23ABD76F0);
}

uint64_t sub_23AD17DA8(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, _BYTE *))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  char v38;
  _BYTE v39[40];

  v6 = v4;
  v8 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = a2;
  v9 = sub_23B1C70A0();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v37 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v8 + 64);
    v36 = (unint64_t)(v11 + 63) >> 6;
    v14 = v9 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v36)
          goto LABEL_34;
        v22 = v37[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v36)
            goto LABEL_34;
          v22 = v37[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              swift_release();
              v6 = v4;
              if ((v38 & 1) != 0)
              {
                v35 = 1 << *(_BYTE *)(v8 + 32);
                if (v35 >= 64)
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v37 = -1 << v35;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v36)
                  goto LABEL_34;
                v22 = v37[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v20);
      v26 = *v24;
      v25 = v24[1];
      v27 = *(_QWORD *)(v8 + 56) + 40 * v20;
      if ((v38 & 1) != 0)
      {
        a4(v27, v39);
      }
      else
      {
        sub_23AA77B28(v27, (uint64_t)v39);
        swift_bridgeObjectRetain();
      }
      sub_23B1C74A8();
      sub_23B1C64A0();
      result = sub_23B1C74E4();
      v28 = -1 << *(_BYTE *)(v10 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v14 + 8 * v30);
        }
        while (v34 == -1);
        v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v17);
      *v18 = v26;
      v18[1] = v25;
      result = ((uint64_t (*)(_BYTE *, unint64_t))a4)(v39, *(_QWORD *)(v10 + 56) + 40 * v17);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
  *v6 = v10;
  return result;
}

uint64_t sub_23AD180BC(uint64_t a1, char a2)
{
  return sub_23AD180D4(a1, a2, &qword_2569E40D8);
}

uint64_t sub_23AD180C8(uint64_t a1, char a2)
{
  return sub_23AD180D4(a1, a2, (uint64_t *)&unk_2542DF3A8);
}

uint64_t sub_23AD180D4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = a2;
  v7 = sub_23B1C70A0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          v4 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v36)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_23B1C74A8();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v35;
  v23 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23AD183D8(uint64_t a1, char a2)
{
  return sub_23AD189C8(a1, a2, &qword_2569E1CE0, (void (*)(uint64_t))MEMORY[0x24BEE4318]);
}

uint64_t sub_23AD183EC(uint64_t a1, char a2)
{
  return sub_23AD189C8(a1, a2, &qword_2542DF3B8, (void (*)(uint64_t))MEMORY[0x24BEE42F8]);
}

uint64_t sub_23AD18400(uint64_t a1, char a2)
{
  return sub_23AD189C8(a1, a2, &qword_2569E1CD0, (void (*)(uint64_t))MEMORY[0x24BEE42F8]);
}

uint64_t sub_23AD18414(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 v19;
  _OWORD *v20;
  uint64_t v21;
  _OWORD v22[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E40C0);
  v6 = (_QWORD *)sub_23B1C70A0();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v16 >= v11)
          goto LABEL_23;
        v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_23;
          v17 = v8[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v21 = 1 << *(_BYTE *)(v5 + 32);
                if (v21 >= 64)
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v21;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_30;
                if (v13 >= v11)
                  goto LABEL_23;
                v17 = v8[v13];
                ++v18;
                if (v17)
                  goto LABEL_20;
              }
            }
            v13 = v18;
          }
        }
LABEL_20:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v15);
      v20 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v15);
      if ((a2 & 1) != 0)
        sub_23AAA159C(v20, v22);
      else
        sub_23AAA15AC((uint64_t)v20, (uint64_t)v22);
      result = (uint64_t)sub_23AD2787C(v19, v22, v6);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_23AD18600(uint64_t a1, char a2)
{
  return sub_23AD189C8(a1, a2, &qword_2569E1CD8, (void (*)(uint64_t))MEMORY[0x24BEE4318]);
}

uint64_t sub_23AD18614(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;

  v3 = v2;
  v5 = type metadata accessor for VFSItem(0);
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E40F0);
  v41 = a2;
  result = sub_23B1C70A0();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v39 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v37 = v2;
    v38 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v20 = v19 | (v11 << 6);
      }
      else
      {
        v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v21 >= v38)
          goto LABEL_38;
        v22 = v39[v21];
        ++v11;
        if (!v22)
        {
          v11 = v21 + 1;
          if (v21 + 1 >= v38)
            goto LABEL_38;
          v22 = v39[v11];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v38)
            {
LABEL_38:
              if ((v41 & 1) == 0)
              {
                result = swift_release();
                v3 = v37;
                goto LABEL_45;
              }
              v36 = 1 << *(_BYTE *)(v8 + 32);
              if (v36 >= 64)
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v36;
              v3 = v37;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v22 = v39[v23];
            if (!v22)
            {
              while (1)
              {
                v11 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_47;
                if (v11 >= v38)
                  goto LABEL_38;
                v22 = v39[v11];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v11 = v23;
          }
        }
LABEL_21:
        v15 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      v24 = *(_QWORD *)(v8 + 48) + 16 * v20;
      v25 = *(_QWORD *)v24;
      v26 = *(unsigned __int8 *)(v24 + 8);
      v27 = *(_QWORD *)(v40 + 72);
      v28 = *(_QWORD *)(v8 + 56) + v27 * v20;
      if ((v41 & 1) != 0)
        sub_23AA94050(v28, (uint64_t)v7, type metadata accessor for VFSItem);
      else
        sub_23AA907B0(v28, (uint64_t)v7, type metadata accessor for VFSItem);
      sub_23B1C74A8();
      if (v26)
      {
        sub_23B1C74B4();
        if (v26 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      result = sub_23B1C74E4();
      v29 = -1 << *(_BYTE *)(v10 + 32);
      v30 = result & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = *(_QWORD *)(v10 + 48) + 16 * v17;
      *(_QWORD *)v18 = v25;
      *(_BYTE *)(v18 + 8) = v26;
      result = sub_23AA94050((uint64_t)v7, *(_QWORD *)(v10 + 56) + v27 * v17, type metadata accessor for VFSItem);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_45:
  *v3 = v10;
  return result;
}

uint64_t sub_23AD189B4(uint64_t a1, char a2)
{
  return sub_23AD189C8(a1, a2, &qword_2569E1CC8, (void (*)(uint64_t))MEMORY[0x24BEE4318]);
}

uint64_t sub_23AD189C8(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;

  v5 = v4;
  v7 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_23B1C70A0();
  v9 = result;
  if (*(_QWORD *)(v7 + 16))
  {
    v34 = a2;
    v10 = 0;
    v35 = (_QWORD *)(v7 + 64);
    v11 = 1 << *(_BYTE *)(v7 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v7 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v19 = v18 | (v10 << 6);
      }
      else
      {
        v20 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v7 + 64;
        if (v20 >= v14)
          goto LABEL_31;
        v21 = v35[v20];
        ++v10;
        if (!v21)
        {
          v10 = v20 + 1;
          if (v20 + 1 >= v14)
            goto LABEL_31;
          v21 = v35[v10];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                result = swift_release();
                v5 = v4;
                goto LABEL_38;
              }
              v33 = 1 << *(_BYTE *)(v7 + 32);
              if (v33 >= 64)
                bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v35 = -1 << v33;
              v5 = v4;
              *(_QWORD *)(v7 + 16) = 0;
              break;
            }
            v21 = v35[v22];
            if (!v21)
            {
              while (1)
              {
                v10 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_40;
                if (v10 >= v14)
                  goto LABEL_31;
                v21 = v35[v10];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v10 = v22;
          }
        }
LABEL_21:
        v13 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v10 << 6);
      }
      v23 = 8 * v19;
      v24 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + v23);
      v25 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + v23);
      sub_23B1C74A8();
      a4(v24);
      result = sub_23B1C74E4();
      v26 = -1 << *(_BYTE *)(v9 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v15 + 8 * (v27 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v15 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v15 + 8 * v28);
        }
        while (v32 == -1);
        v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + v17) = v24;
      *(_QWORD *)(*(_QWORD *)(v9 + 56) + v17) = v25;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v5 = v9;
  return result;
}

uint64_t sub_23AD18C98(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C98);
  v39 = a2;
  result = sub_23B1C70A0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v37 = (_QWORD *)(v5 + 64);
    v38 = v5;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v36 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v18 >= v36)
          goto LABEL_37;
        v19 = v37[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v36)
            goto LABEL_37;
          v19 = v37[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v36)
            {
LABEL_37:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_44;
              }
              v35 = 1 << *(_BYTE *)(v5 + 32);
              if (v35 >= 64)
                bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v35;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v37[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_46;
                if (v8 >= v36)
                  goto LABEL_37;
                v19 = v37[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(v5 + 48) + 16 * v17;
      v22 = *(_QWORD *)v21;
      v23 = *(unsigned __int8 *)(v21 + 8);
      v24 = *(_QWORD *)(v5 + 56) + 32 * v17;
      v25 = *(_QWORD *)v24;
      v40 = *(_BYTE *)(v24 + 8);
      v27 = *(_QWORD *)(v24 + 16);
      v26 = *(_QWORD *)(v24 + 24);
      if ((v39 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_23B1C74A8();
      if (v23)
      {
        sub_23B1C74B4();
        if (v23 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      result = sub_23B1C74E4();
      v28 = -1 << *(_BYTE *)(v7 + 32);
      v29 = result & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v12 + 8 * v30);
        }
        while (v34 == -1);
        v13 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v7 + 48) + 16 * v13;
      *(_QWORD *)v14 = v22;
      *(_BYTE *)(v14 + 8) = v23;
      v15 = *(_QWORD *)(v7 + 56) + 32 * v13;
      *(_QWORD *)v15 = v25;
      *(_BYTE *)(v15 + 8) = v40;
      *(_QWORD *)(v15 + 16) = v27;
      *(_QWORD *)(v15 + 24) = v26;
      ++*(_QWORD *)(v7 + 16);
      v5 = v38;
    }
  }
  result = swift_release();
LABEL_44:
  *v3 = v7;
  return result;
}

uint64_t sub_23AD18FF0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  v3 = v2;
  v5 = sub_23B1C5A08();
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E40C8);
  v9 = sub_23B1C70A0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_40;
  v39 = v2;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = a2;
  v16 = v9 + 64;
  result = swift_retain();
  v18 = 0;
  HIDWORD(v38) = v15;
  v19 = 16;
  if ((v15 & 1) != 0)
    v19 = 32;
  v42 = v19;
  while (1)
  {
    if (v14)
    {
      v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_24;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = v41;
    v25 = v41[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = v41[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v38 & 0x100000000) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = v41[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v18 >= v40)
              goto LABEL_33;
            v25 = v41[v18];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v18 = v26;
      }
    }
LABEL_23:
    v14 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v43 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + v42))(v7, *(_QWORD *)(v8 + 48) + v27 * v22, v5);
    v28 = v8;
    v29 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v22);
    sub_23AD2864C();
    result = sub_23B1C62CC();
    v30 = -1 << *(_BYTE *)(v10 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v16 + 8 * v32);
      }
      while (v36 == -1);
      v20 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v43 + 32))(*(_QWORD *)(v10 + 48) + v27 * v20, v7, v5);
    *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v10 + 16);
    v8 = v28;
  }
  swift_release();
  v3 = v39;
  v24 = v41;
  if ((v38 & 0x100000000) == 0)
    goto LABEL_40;
LABEL_36:
  v37 = 1 << *(_BYTE *)(v8 + 32);
  if (v37 >= 64)
    bzero(v24, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v37;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_23AD19370(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;
  _OWORD v37[2];

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v36 = a2;
  v7 = sub_23B1C70A0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_41;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v35 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v34 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v34)
      break;
    v19 = (_QWORD *)(v6 + 64);
    v20 = *(_QWORD *)(v35 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v34)
        goto LABEL_34;
      v20 = *(_QWORD *)(v35 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_34:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v34)
              goto LABEL_34;
            v20 = *(_QWORD *)(v35 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v6 + 48) + 8 * v17);
    v23 = (_OWORD *)(*(_QWORD *)(v6 + 56) + 32 * v17);
    if ((v36 & 1) != 0)
    {
      sub_23AAA159C(v23, v37);
    }
    else
    {
      sub_23AAA15AC((uint64_t)v23, (uint64_t)v37);
      v24 = v22;
    }
    sub_23B1C63E0();
    sub_23B1C74A8();
    sub_23B1C64A0();
    v25 = sub_23B1C74E4();
    result = swift_bridgeObjectRelease();
    v26 = -1 << *(_BYTE *)(v8 + 32);
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v12 + 8 * v28);
      }
      while (v32 == -1);
      v15 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v15) = v22;
    result = (uint64_t)sub_23AAA159C(v37, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v6 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v6 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_23AD196A4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E1C60);
  v35 = a2;
  result = sub_23B1C70A0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v33)
          goto LABEL_37;
        v18 = v34[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v33)
            goto LABEL_37;
          v18 = v34[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v33)
            {
LABEL_37:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_44;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v32;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_46;
                if (v8 >= v33)
                  goto LABEL_37;
                v18 = v34[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(v5 + 48) + 16 * v16;
      v21 = *(_QWORD *)v20;
      v22 = *(unsigned __int8 *)(v20 + 8);
      v23 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v16);
      if ((v35 & 1) == 0)
        v24 = v23;
      sub_23B1C74A8();
      if (v22)
      {
        sub_23B1C74B4();
        if (v22 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      result = sub_23B1C74E4();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v7 + 48) + 16 * v13;
      *(_QWORD *)v14 = v21;
      *(_BYTE *)(v14 + 8) = v22;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v13) = v23;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_44:
  *v3 = v7;
  return result;
}

uint64_t sub_23AD199CC(uint64_t a1, char a2)
{
  return sub_23AD199D8(a1, a2, &qword_2569E1C78);
}

uint64_t sub_23AD199D8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  char v35;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v35 = a2;
  result = sub_23B1C70A0();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v34 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v9 << 6);
      }
      else
      {
        v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v18 >= v33)
          goto LABEL_37;
        v19 = v34[v18];
        ++v9;
        if (!v19)
        {
          v9 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_37;
          v19 = v34[v9];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_37:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_44;
              }
              v32 = 1 << *(_BYTE *)(v6 + 32);
              if (v32 >= 64)
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v32;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v9 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_46;
                if (v9 >= v33)
                  goto LABEL_37;
                v19 = v34[v9];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v9 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      v21 = *(_QWORD *)(v6 + 48) + 16 * v17;
      v22 = *(_QWORD *)v21;
      v23 = *(unsigned __int8 *)(v21 + 8);
      v24 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v17);
      if ((v35 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_23B1C74A8();
      if (v23)
      {
        sub_23B1C74B4();
        if (v23 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      result = sub_23B1C74E4();
      v25 = -1 << *(_BYTE *)(v8 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v13 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = *(_QWORD *)(v8 + 48) + 16 * v14;
      *(_QWORD *)v15 = v22;
      *(_BYTE *)(v15 + 8) = v23;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v14) = v24;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_44:
  *v4 = v8;
  return result;
}

uint64_t sub_23AD19D04(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  int64_t v33;
  _QWORD *v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1C70);
  result = sub_23B1C70A0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v32 = a2;
    v8 = 0;
    v34 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v33)
          goto LABEL_35;
        v18 = v34[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v33)
            goto LABEL_35;
          v18 = v34[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v33)
            {
LABEL_35:
              if ((v32 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_42;
              }
              v31 = 1 << *(_BYTE *)(v5 + 32);
              if (v31 >= 64)
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v34 = -1 << v31;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_44;
                if (v8 >= v33)
                  goto LABEL_35;
                v18 = v34[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(v5 + 48) + 16 * v16;
      v21 = *(unsigned __int8 *)(v20 + 8);
      v22 = *(_QWORD *)v20;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
      sub_23B1C74A8();
      if (v21)
      {
        sub_23B1C74B4();
        if (v21 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      result = sub_23B1C74E4();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v12 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = *(_QWORD *)(v7 + 48) + 16 * v13;
      *(_QWORD *)v14 = v22;
      *(_BYTE *)(v14 + 8) = v21;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v13) = v23;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_42:
  *v3 = v7;
  return result;
}

_OWORD *sub_23AD1A024(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23AAAF4C4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_23AAA159C(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_23B186634();
      goto LABEL_7;
    }
    sub_23AD0FBAC(v15, a4 & 1);
    v21 = sub_23AAAF4C4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23AD279D8(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FileTreeError.ItemIsDetachedRootStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemIsDetachedRootStruct);
}

uint64_t type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemContentVersionMismatchStruct);
}

uint64_t type metadata accessor for FileTreeError.LookupNotPermittedStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.LookupNotPermittedStruct);
}

uint64_t type metadata accessor for FileTreeError.ItemMismatchStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemMismatchStruct);
}

uint64_t type metadata accessor for FileTreeError.VersionConflictStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.VersionConflictStruct);
}

uint64_t type metadata accessor for FileTreeError.DirectoryNotEmptyStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.DirectoryNotEmptyStruct);
}

uint64_t type metadata accessor for FileTreeError.ContentUnavailableStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ContentUnavailableStruct);
}

uint64_t type metadata accessor for FileTreeError.CannotBounceStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.CannotBounceStruct);
}

uint64_t type metadata accessor for FileTreeError.ItemCollisionStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemCollisionStruct);
}

uint64_t type metadata accessor for FileTreeError.ItemNotFoundStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemNotFoundStruct);
}

uint64_t type metadata accessor for FileTreeError.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.CollidingItemChangedBeforeBounceStruct);
}

uint64_t type metadata accessor for FileTreeError.CapturedContentMissingStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.CapturedContentMissingStruct);
}

uint64_t type metadata accessor for FileTreeError.ItemNotEvictableStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemNotEvictableStruct);
}

uint64_t type metadata accessor for FileTreeError.DirectoryChangedStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.DirectoryChangedStruct);
}

uint64_t type metadata accessor for FileTreeError.DownloadCancelled(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.DownloadCancelled);
}

uint64_t type metadata accessor for FileTreeError.ItemKindMismatchStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemKindMismatchStruct);
}

uint64_t type metadata accessor for FileTreeError.ItemIsFlockedStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemIsFlockedStruct);
}

uint64_t type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemNeedDelayPropagationStruct);
}

uint64_t type metadata accessor for FileTreeError.UploadCancelled(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.UploadCancelled);
}

uint64_t type metadata accessor for FileTreeError.UploadInterrupted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.UploadInterrupted);
}

uint64_t type metadata accessor for FileTreeError.MaxLookupDepthStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.MaxLookupDepthStruct);
}

uint64_t type metadata accessor for FileTreeError.CompressedFileReadFailedStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.CompressedFileReadFailedStruct);
}

uint64_t type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.SpeculativeDownloadRejectedStruct);
}

uint64_t type metadata accessor for FileTreeError.ItemNotTracked(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemNotTracked);
}

uint64_t sub_23AD1A280(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11)
    return sub_23AAA3E18(a1, a2);
  return a1;
}

void sub_23AD1A294()
{
  JUMPOUT(0x23B8613CCLL);
}

uint64_t sub_23AD1A2A4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
  }
  return result;
}

char *sub_23AD1A508(id *a1, id *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  size_t v24;
  unint64_t v25;
  size_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  char *v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(id *, id *, uint64_t);
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  unsigned int v64;
  void (*v65)(id *, id *, uint64_t);
  uint64_t v66;
  void *v67;
  id v68;
  unsigned int v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  void (*v75)(id *, id *, uint64_t);
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  unsigned int v79;
  char *v80;
  uint64_t v81;
  id v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  size_t v86;
  void *v87;
  id v88;
  unsigned int v89;
  unsigned int v90;
  void (*v91)(id *, id *, uint64_t);
  unsigned int v92;
  uint64_t v93;
  _QWORD *v94;
  unint64_t v95;
  unint64_t v96;
  void (*v97)(unint64_t, unint64_t, size_t);
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  void *v102;
  id v103;
  unsigned int v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  size_t __n;
  size_t __na;
  size_t v110;
  size_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v115 = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v115 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 | v6 | 7;
  v12 = *(unsigned int *)(v5 + 84);
  if (v12 <= *(_DWORD *)(v9 + 84))
    v13 = *(_DWORD *)(v9 + 84);
  else
    v13 = *(_DWORD *)(v5 + 84);
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v13;
  v112 = v14;
  v114 = v5;
  v15 = *(_QWORD *)(v5 + 64);
  v16 = v15 + 7;
  v17 = ((((*(_QWORD *)(v9 + 64) + 7 + ((v10 + 8 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v18 = ((v11 + v4) & ~v11) + v17 + 8;
  v19 = v4 + 7;
  v20 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_DWORD *)(v3 + 80);
  v22 = ((((v4 + 7 + ((v21 + 16 + v20) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v23 = v20 + 8;
  if (*(_DWORD *)(v3 + 84))
    v24 = v4;
  else
    v24 = v4 + 1;
  __n = v24;
  v110 = v15 + v6;
  v25 = (v110 & ~(unint64_t)v6) + v15;
  v26 = v24 + v21;
  if (v4 > v18)
    v18 = v4;
  if (v22 <= ((v21 + 16) & ~v21) + v4)
    v27 = ((v21 + 16) & ~v21) + v4;
  else
    v27 = v22;
  if (v23 <= (v26 & ~v21) + v4)
    v23 = (v26 & ~v21) + v4;
  if (v18 <= v27)
    v18 = v27;
  if (v25 <= v23)
    v25 = v23;
  if (v25 <= v18)
    v25 = v18;
  if (v25 <= 8)
    v28 = 8;
  else
    v28 = v25;
  if (v28 > 3)
    goto LABEL_30;
  v29 = ((1 << (8 * v28)) + 11) >> (8 * v28);
  v30 = 2;
  if (v29 > 0xFFF5)
    v30 = 4;
  if (v29 <= 0xF5)
LABEL_30:
    v30 = 1;
  v31 = v10 | v6 | v21;
  if (v31 > 7
    || ((*(_DWORD *)(v9 + 80) | v6 | *(_DWORD *)(v3 + 80)) & 0x100000) != 0
    || (unint64_t)(v30 + v28) > 0x18)
  {
    v34 = (char *)*a2;
    *a1 = *a2;
    v35 = &v34[(v31 + 16) & (v31 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8)];
    swift_retain();
    return v35;
  }
  if (v28 > 3)
    goto LABEL_37;
  v32 = ((1 << (8 * v28)) + 11) >> (8 * v28);
  if (v32 > 0xFFF5)
  {
    v33 = *(_DWORD *)((char *)a2 + v28);
    if (v33 < 0xA)
      goto LABEL_48;
    goto LABEL_44;
  }
  if (v32 <= 0xF5)
  {
LABEL_37:
    v33 = *((unsigned __int8 *)a2 + v28);
    if (v33 < 0xA)
      goto LABEL_48;
LABEL_44:
    if (v28 <= 3)
      v37 = v28;
    else
      v37 = 4;
    __asm { BR              X14 }
  }
  v33 = *(unsigned __int16 *)((char *)a2 + v28);
  if (v33 >= 0xA)
    goto LABEL_44;
LABEL_48:
  v38 = ~v21;
  switch(v33)
  {
    case 0u:
      v105 = *(_DWORD *)(v9 + 84);
      v39 = v16;
      v106 = *(_QWORD *)(v9 + 64) + 7;
      v107 = v10 + 8;
      __na = v8;
      v111 = v17;
      v113 = v28;
      v40 = ~v11;
      v41 = ~v10;
      v42 = v11 + v4;
      (*(void (**)(id *, id *, uint64_t))(v3 + 16))(a1, a2, AssociatedTypeWitness);
      v43 = (char *)(((unint64_t)a1 + v42) & v40);
      v44 = (char *)(((unint64_t)a2 + v42) & v40);
      if ((_DWORD)v12 == v112)
      {
        v45 = v41;
        v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 48))(v44, v12, v115);
      }
      else
      {
        v83 = (uint64_t *)((unint64_t)&v44[v39] & 0xFFFFFFFFFFFFFFF8);
        if (v13 <= 0x7FFFFFFE)
        {
          v84 = v39;
          v45 = v41;
          v85 = *v83;
          if ((unint64_t)*v83 >= 0xFFFFFFFF)
            LODWORD(v85) = -1;
          v35 = (char *)a1;
          v86 = v111;
          if ((v85 + 1) >= 2)
            goto LABEL_113;
          goto LABEL_115;
        }
        v45 = v41;
        v46 = (*(uint64_t (**)(unint64_t, _QWORD, size_t))(v9 + 48))(((unint64_t)v83 + v107) & v41, v105, __na);
      }
      v35 = (char *)a1;
      v86 = v111;
      if (v46)
      {
LABEL_113:
        memcpy(v43, v44, v86);
        goto LABEL_116;
      }
      v84 = v39;
      v83 = (uint64_t *)((unint64_t)&v44[v39] & 0xFFFFFFFFFFFFFFF8);
LABEL_115:
      v93 = v84;
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v43, v44, v115);
      v94 = (_QWORD *)((unint64_t)&v43[v93] & 0xFFFFFFFFFFFFFFF8);
      *v94 = *v83;
      v95 = ((unint64_t)v94 + v107) & v45;
      v96 = ((unint64_t)v83 + v107) & v45;
      v97 = *(void (**)(unint64_t, unint64_t, size_t))(v9 + 16);
      swift_bridgeObjectRetain();
      v97(v95, v96, __na);
      v98 = (_QWORD *)((v106 + v95) & 0xFFFFFFFFFFFFF8);
      v99 = (_QWORD *)((v106 + v96) & 0xFFFFFFFFFFFFF8);
      *v98 = *v99;
      v100 = (_QWORD *)(((unint64_t)v98 + 15) & 0xFFFFFFFFFFFFFFF8);
      v101 = (_QWORD *)(((unint64_t)v99 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v100 = *v101;
      v100[1] = v101[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_116:
      v102 = *(void **)&v44[v86];
      v103 = v102;
      *(_QWORD *)&v43[v86] = v102;
      if (v113 <= 3)
      {
        v104 = ((1 << (8 * v113)) + 11) >> (8 * v113);
        if (v104 > 0xFFF5)
        {
          *(_DWORD *)&v35[v113] = 0;
          return v35;
        }
        if (v104 > 0xF5)
        {
          *(_WORD *)&v35[v113] = 0;
          return v35;
        }
      }
      v35[v113] = 0;
      return v35;
    case 1u:
      v49 = v28;
      v50 = *(void (**)(id *, id *, uint64_t))(v3 + 16);
      v35 = (char *)a1;
      v50(a1, a2, AssociatedTypeWitness);
      v51 = (_QWORD *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      v52 = (_QWORD *)(((unint64_t)a2 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v51 = *v52;
      v51[1] = v52[1];
      v53 = ((unint64_t)v51 + v21 + 16) & v38;
      v54 = ((unint64_t)v52 + v21 + 16) & v38;
      swift_bridgeObjectRetain();
      v50((id *)v53, (id *)v54, AssociatedTypeWitness);
      v55 = (v19 + v53) & 0xFFFFFFFFFFFFFFF8;
      v56 = (uint64_t *)((v19 + v54) & 0xFFFFFFFFFFFFFFF8);
      v57 = *v56;
      if (HIDWORD(*v56) > 0x80000000)
      {
        *(_OWORD *)v55 = *(_OWORD *)v56;
      }
      else
      {
        v58 = v56[1];
        sub_23AA7F2D4(*v56, v58);
        *(_QWORD *)v55 = v57;
        *(_QWORD *)(v55 + 8) = v58;
      }
      v87 = *(void **)(((unint64_t)v56 + 23) & 0xFFFFFFFFFFFFF8);
      v88 = v87;
      *(_QWORD *)((v55 + 23) & 0xFFFFFFFFFFFFF8) = v87;
      if (v49 <= 3)
      {
        v89 = ((1 << (8 * v49)) + 11) >> (8 * v49);
        if (v89 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v49) = 1;
          return v35;
        }
        if (v89 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v49) = 1;
          return v35;
        }
      }
      *((_BYTE *)a1 + v49) = 1;
      return v35;
    case 2u:
      v59 = a2[1];
      v35 = (char *)a1;
      *a1 = *a2;
      a1[1] = v59;
      v60 = ((unint64_t)a1 + v21 + 16) & v38;
      v61 = ((unint64_t)a2 + v21 + 16) & v38;
      v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      v63 = v28;
      swift_bridgeObjectRetain();
      v62(v60, v61, AssociatedTypeWitness);
      if (v63 <= 3)
      {
        v64 = ((1 << (8 * v63)) + 11) >> (8 * v63);
        if (v64 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v63) = 2;
          return v35;
        }
        if (v64 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v63) = 2;
          return v35;
        }
      }
      *((_BYTE *)a1 + v63) = 2;
      return v35;
    case 3u:
      v65 = *(void (**)(id *, id *, uint64_t))(v3 + 16);
      v35 = (char *)a1;
      v66 = v28;
      v65(a1, a2, AssociatedTypeWitness);
      v67 = *(void **)(((unint64_t)a2 + v4 + 7) & 0xFFFFFFFFFFFFF8);
      v68 = v67;
      *(_QWORD *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFF8) = v67;
      if (v66 <= 3)
      {
        v69 = ((1 << (8 * v66)) + 11) >> (8 * v66);
        if (v69 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v66) = 3;
          return v35;
        }
        if (v69 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v66) = 3;
          return v35;
        }
      }
      *((_BYTE *)a1 + v66) = 3;
      return v35;
    case 4u:
      v70 = v28;
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v3 + 48))(a2, 1, AssociatedTypeWitness))
      {
        v35 = (char *)a1;
        memcpy(a1, a2, __n);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v3 + 16))(((unint64_t)a1 + v26) & v38, ((unint64_t)a2 + v26) & v38, AssociatedTypeWitness);
      }
      else
      {
        v91 = *(void (**)(id *, id *, uint64_t))(v3 + 16);
        v35 = (char *)a1;
        v91(a1, a2, AssociatedTypeWitness);
        (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, AssociatedTypeWitness);
        v91((id *)(((unint64_t)a1 + v26) & v38), (id *)(((unint64_t)a2 + v26) & v38), AssociatedTypeWitness);
      }
      if (v70 <= 3)
      {
        v92 = ((1 << (8 * v70)) + 11) >> (8 * v70);
        if (v92 > 0xFFF5)
        {
          *(_DWORD *)&v35[v70] = 4;
          return v35;
        }
        if (v92 > 0xF5)
        {
          *(_WORD *)&v35[v70] = 4;
          return v35;
        }
      }
      v35[v70] = 4;
      return v35;
    case 5u:
      v35 = (char *)a1;
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v28 <= 3)
      {
        v71 = ((1 << (8 * v28)) + 11) >> (8 * v28);
        if (v71 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v28) = 5;
          return v35;
        }
        if (v71 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v28) = 5;
          return v35;
        }
      }
      *((_BYTE *)a1 + v28) = 5;
      return v35;
    case 6u:
      v35 = (char *)a1;
      v72 = v28;
      (*(void (**)(id *, id *, uint64_t))(v3 + 16))(a1, a2, AssociatedTypeWitness);
      if (v72 <= 3)
      {
        v73 = ((1 << (8 * v72)) + 11) >> (8 * v72);
        if (v73 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v72) = 6;
          return v35;
        }
        if (v73 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v72) = 6;
          return v35;
        }
      }
      *((_BYTE *)a1 + v72) = 6;
      return v35;
    case 7u:
      v74 = ~v7;
      v75 = *(void (**)(id *, id *, uint64_t))(v114 + 16);
      v35 = (char *)a1;
      v76 = v28;
      v75(a1, a2, v115);
      v75((id *)(((unint64_t)a1 + v110) & v74), (id *)(((unint64_t)a2 + v110) & v74), v115);
      if (v76 <= 3)
      {
        v77 = ((1 << (8 * v76)) + 11) >> (8 * v76);
        if (v77 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v76) = 7;
          return v35;
        }
        if (v77 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v76) = 7;
          return v35;
        }
      }
      *((_BYTE *)a1 + v76) = 7;
      return v35;
    case 8u:
      v80 = (char *)*a2;
      v81 = v28;
      v82 = *a2;
      v35 = (char *)a1;
      *a1 = v80;
      if (v81 > 3)
        goto LABEL_86;
      v90 = ((1 << (8 * v81)) + 11) >> (8 * v81);
      if (v90 > 0xFFF5)
      {
        *(_DWORD *)((char *)a1 + v81) = 8;
        return v35;
      }
      if (v90 <= 0xF5)
LABEL_86:
        *((_BYTE *)a1 + v81) = 8;
      else
        *(_WORD *)((char *)a1 + v81) = 8;
      return v35;
    case 9u:
      v35 = (char *)a1;
      v78 = v28;
      (*(void (**)(id *, id *, uint64_t))(v3 + 16))(a1, a2, AssociatedTypeWitness);
      if (v78 <= 3)
      {
        v79 = ((1 << (8 * v78)) + 11) >> (8 * v78);
        if (v79 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v78) = 9;
          return v35;
        }
        if (v79 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v78) = 9;
          return v35;
        }
      }
      *((_BYTE *)a1 + v78) = 9;
      return v35;
    default:
      if (v28 > 3)
        goto LABEL_55;
      v47 = ((1 << (8 * v28)) + 11) >> (8 * v28);
      v48 = 2;
      if (v47 > 0xFFF5)
        v48 = 4;
      if (v47 <= 0xF5)
LABEL_55:
        v48 = 1;
      v35 = (char *)a1;
      memcpy(a1, a2, v48 + v28);
      return v35;
  }
}

void sub_23AD1B014(id *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  unsigned int v29;
  id *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(void);
  id *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  id *v43;
  uint64_t v44;
  void (*v45)(void);
  id *v46;
  unint64_t v47;
  unint64_t v48;
  id *v49;
  void (*v50)(void);
  uint64_t v51;
  id *v52;
  int v53;
  id *v54;
  uint64_t *v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(void);
  uint64_t AssociatedTypeWitness;
  void (*v67)(void);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v64 = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(v64 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v5 | v8 | 7;
  v10 = *(unsigned int *)(v4 + 84);
  if (v10 <= *(_DWORD *)(v7 + 84))
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v4 + 84);
  if (v11 <= 0x7FFFFFFE)
    v12 = 2147483646;
  else
    v12 = v11;
  v13 = *(_QWORD *)(v4 + 64);
  v14 = v13 + 7;
  v15 = ((((*(_QWORD *)(v7 + 64) + 7 + ((v8 + 8 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v16 = ((v9 + v3) & ~v9) + v15 + 8;
  v17 = v3 + 7;
  v18 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(unsigned __int8 *)(v2 + 80);
  v20 = ((((v3 + 7 + ((v19 + 16 + v18) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v21 = ((v19 + 16) & ~v19) + v3;
  v22 = v18 + 8;
  if (*(_DWORD *)(v2 + 84))
    v23 = v3;
  else
    v23 = v3 + 1;
  v24 = v23 + v19;
  v25 = ((v23 + v19) & ~v19) + v3;
  v26 = v13 + v5;
  v27 = ((v13 + v5) & ~v5) + v13;
  if (v3 > v16)
    v16 = v3;
  if (v20 > v21)
    v21 = v20;
  if (v22 <= v25)
    v22 = v25;
  if (v16 <= v21)
    v16 = v21;
  if (v27 <= v22)
    v27 = v22;
  if (v27 > v16)
    v16 = v27;
  if (v16 <= 8)
    v16 = 8;
  v62 = v24;
  if (v16 > 3)
    goto LABEL_27;
  v28 = ((1 << (8 * v16)) + 11) >> (8 * v16);
  if (v28 > 0xFFF5)
  {
    v30 = a1;
    v29 = *(_DWORD *)((char *)a1 + v16);
    if (v29 >= 0xA)
    {
LABEL_29:
      if (v16 <= 3)
        v31 = v16;
      else
        v31 = 4;
      __asm { BR              X15 }
    }
    goto LABEL_34;
  }
  if (v28 > 0xF5)
    v29 = *(unsigned __int16 *)((char *)a1 + v16);
  else
LABEL_27:
    v29 = *((unsigned __int8 *)a1 + v16);
  v30 = a1;
  if (v29 >= 0xA)
    goto LABEL_29;
LABEL_34:
  v32 = v26;
  v33 = ~v19;
  switch(v29)
  {
    case 0u:
      v34 = *(unsigned int *)(v7 + 84);
      v35 = v14;
      v60 = v8 + 8;
      v61 = *(_QWORD *)(v6 - 8);
      v36 = v15;
      v63 = v6;
      v37 = ~v9;
      v59 = ~v8;
      v38 = *(void (**)(void))(v2 + 8);
      v39 = v30;
      v40 = v9 + v3;
      v38();
      v41 = ((unint64_t)v39 + v40) & v37;
      if ((_DWORD)v10 == v12)
      {
        v42 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v41, v10, v64);
LABEL_59:
        v58 = v36;
        if (v42)
          goto LABEL_62;
        v55 = (uint64_t *)((v35 + v41) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_61;
      }
      v55 = (uint64_t *)((v35 + v41) & 0xFFFFFFFFFFFFFFF8);
      if (v11 > 0x7FFFFFFE)
      {
        v42 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v61 + 48))(((unint64_t)v55 + v60) & v59, v34, v63);
        goto LABEL_59;
      }
      v56 = *v55;
      if ((unint64_t)*v55 >= 0xFFFFFFFF)
        LODWORD(v56) = -1;
      v57 = (v56 + 1) >= 2;
      v58 = v36;
      if (!v57)
      {
LABEL_61:
        (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v41, v64);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v61 + 8))(((unint64_t)v55 + v60) & v59, v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v58 = v36;
      }
LABEL_62:

      return;
    case 1u:
      v45 = *(void (**)(void))(v2 + 8);
      v46 = v30;
      v45();
      swift_bridgeObjectRelease();
      v47 = ((((unint64_t)v46 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + v19 + 16) & v33;
      ((void (*)(unint64_t, uint64_t))v45)(v47, AssociatedTypeWitness);
      v48 = (v17 + v47) & 0xFFFFFFFFFFFFFFF8;
      if (HIDWORD(*(_QWORD *)v48) <= 0x80000000)
        sub_23AAA12F0(*(_QWORD *)v48, *(_QWORD *)(v48 + 8));
      v44 = v48 + 23;
      goto LABEL_43;
    case 2u:
      v49 = v30;
      swift_bridgeObjectRelease();
      v30 = (id *)(((unint64_t)v49 + v19 + 16) & v33);
      goto LABEL_45;
    case 3u:
      v43 = v30;
      (*(void (**)(void))(v2 + 8))();
      v44 = (uint64_t)v43 + v3 + 7;
LABEL_43:

      return;
    case 4u:
      v52 = v30;
      v53 = (*(uint64_t (**)(void))(v2 + 48))();
      v50 = *(void (**)(void))(v2 + 8);
      if (!v53)
      {
        v65 = *(void (**)(void))(v2 + 8);
        ((void (*)(id *, uint64_t))v50)(v52, AssociatedTypeWitness);
        v50 = v65;
      }
      v30 = (id *)(((unint64_t)v52 + v62) & v33);
      v51 = AssociatedTypeWitness;
      goto LABEL_50;
    case 6u:
    case 9u:
LABEL_45:
      v50 = *(void (**)(void))(v2 + 8);
      v51 = AssociatedTypeWitness;
      goto LABEL_50;
    case 7u:
      v67 = *(void (**)(void))(v4 + 8);
      v54 = v30;
      v67();
      v30 = (id *)(((unint64_t)v54 + v32) & ~v5);
      v51 = v64;
      v50 = v67;
LABEL_50:
      ((void (*)(id *, uint64_t))v50)(v30, v51);
      return;
    case 8u:

      return;
    default:
      return;
  }
}

_QWORD *sub_23AD1B588(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  size_t v24;
  size_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *);
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  int v41;
  char *v42;
  char *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  unsigned int v62;
  _QWORD *v63;
  uint64_t v64;
  void *v65;
  id v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  const void *v70;
  unsigned int v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  void (*v75)(unint64_t, unint64_t, uint64_t);
  _QWORD *v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  unsigned int v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  unsigned int v90;
  void (*v91)(_QWORD *, const void *, uint64_t);
  unsigned int v92;
  size_t v93;
  uint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  unint64_t v97;
  void (*v98)(unint64_t, unint64_t, uint64_t);
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  void *v103;
  id v104;
  unsigned int v105;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  size_t v112;
  size_t __n;
  size_t __na;
  uint64_t v115;
  uint64_t v116;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v116 = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v116 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 | v9 | 7;
  v11 = *(unsigned int *)(v5 + 84);
  if (v11 <= *(_DWORD *)(v8 + 84))
    v12 = *(_DWORD *)(v8 + 84);
  else
    v12 = *(_DWORD *)(v5 + 84);
  if (v12 <= 0x7FFFFFFE)
    v13 = 2147483646;
  else
    v13 = v12;
  v115 = v5;
  v14 = *(_QWORD *)(v5 + 64);
  v15 = v14 + 7;
  v16 = ((((*(_QWORD *)(v8 + 64) + 7 + ((v9 + 8 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v17 = ((v10 + v4) & ~v10) + v16 + 8;
  v18 = v4 + 7;
  v19 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(unsigned __int8 *)(v3 + 80);
  v21 = ((((v4 + 7 + ((v20 + 16 + v19) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v22 = ((v20 + 16) & ~v20) + v4;
  v23 = v19 + 8;
  if (*(_DWORD *)(v3 + 84))
    v24 = v4;
  else
    v24 = v4 + 1;
  __n = v24;
  v25 = v24 + v20;
  v26 = ((v24 + v20) & ~v20) + v4;
  v27 = v14 + v6;
  v28 = ((v14 + v6) & ~v6) + v14;
  if (v4 > v17)
    v17 = v4;
  if (v21 > v22)
    v22 = v21;
  if (v23 <= v26)
    v23 = v26;
  if (v17 <= v22)
    v17 = v22;
  if (v28 <= v23)
    v28 = v23;
  if (v28 > v17)
    v17 = v28;
  if (v17 <= 8)
    v29 = 8;
  else
    v29 = v17;
  if (v29 > 3)
    goto LABEL_28;
  v30 = ((1 << (8 * v29)) + 11) >> (8 * v29);
  if (v30 <= 0xFFF5)
  {
    if (v30 > 0xF5)
    {
      v31 = *(unsigned __int16 *)((char *)a2 + v29);
LABEL_29:
      v32 = a2;
      if (v31 >= 0xA)
      {
LABEL_32:
        if (v29 <= 3)
          v33 = v29;
        else
          v33 = 4;
        __asm { BR              X14 }
      }
      goto LABEL_37;
    }
LABEL_28:
    v31 = *((unsigned __int8 *)a2 + v29);
    goto LABEL_29;
  }
  v32 = a2;
  v31 = *(_DWORD *)((char *)a2 + v29);
  if (v31 >= 0xA)
    goto LABEL_32;
LABEL_37:
  v34 = ~v20;
  switch(v31)
  {
    case 0u:
      v107 = *(_DWORD *)(v8 + 84);
      v35 = v15;
      v110 = v9 + 8;
      v111 = v7;
      v112 = v16;
      __na = v29;
      v36 = ~v10;
      v108 = *(_QWORD *)(v8 + 64) + 7;
      v109 = ~v9;
      v37 = *(void (**)(_QWORD *))(v3 + 16);
      v38 = a1;
      v39 = v32;
      v40 = v10 + v4;
      v41 = v13;
      v37(a1);
      v42 = (char *)(((unint64_t)a1 + v40) & v36);
      v43 = (char *)(((unint64_t)v39 + v40) & v36);
      if ((_DWORD)v11 == v41)
      {
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v43, v11, v116))
          goto LABEL_103;
LABEL_102:
        v93 = v112;
        memcpy(v42, v43, v112);
        goto LABEL_105;
      }
      v85 = (uint64_t *)((unint64_t)&v43[v35] & 0xFFFFFFFFFFFFFFF8);
      if (v12 <= 0x7FFFFFFE)
      {
        v86 = v35;
        v87 = *v85;
        if ((unint64_t)*v85 >= 0xFFFFFFFF)
          LODWORD(v87) = -1;
        if ((v87 + 1) < 2)
          goto LABEL_104;
        goto LABEL_102;
      }
      if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v8 + 48))(((unint64_t)v85 + v110) & v109, v107, v111))
      {
        goto LABEL_102;
      }
LABEL_103:
      v86 = v35;
      v85 = (uint64_t *)((unint64_t)&v43[v35] & 0xFFFFFFFFFFFFFFF8);
LABEL_104:
      v94 = v86;
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v42, v43, v116);
      v95 = (_QWORD *)((unint64_t)&v42[v94] & 0xFFFFFFFFFFFFFFF8);
      *v95 = *v85;
      v96 = ((unint64_t)v95 + v110) & v109;
      v97 = ((unint64_t)v85 + v110) & v109;
      v98 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
      swift_bridgeObjectRetain();
      v98(v96, v97, v111);
      v99 = (_QWORD *)((v108 + v96) & 0xFFFFFFFFFFFFF8);
      v100 = (_QWORD *)((v108 + v97) & 0xFFFFFFFFFFFFF8);
      *v99 = *v100;
      v101 = (_QWORD *)(((unint64_t)v99 + 15) & 0xFFFFFFFFFFFFFFF8);
      v102 = (_QWORD *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v101 = *v102;
      v101[1] = v102[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v93 = v112;
LABEL_105:
      v103 = *(void **)&v43[v93];
      v104 = v103;
      *(_QWORD *)&v42[v93] = v103;
      if (__na <= 3)
      {
        v105 = ((1 << (8 * __na)) + 11) >> (8 * __na);
        if (v105 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + __na) = 0;
          return v38;
        }
        if (v105 > 0xF5)
        {
          *(_WORD *)((char *)a1 + __na) = 0;
          return v38;
        }
      }
      *((_BYTE *)a1 + __na) = 0;
      return v38;
    case 1u:
      v46 = v29;
      v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      v38 = a1;
      v48 = v32;
      ((void (*)(_QWORD *))v47)(a1);
      v49 = (_QWORD *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      v50 = (_QWORD *)(((unint64_t)v48 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v49 = *v50;
      v49[1] = v50[1];
      v51 = ((unint64_t)v49 + v20 + 16) & ~v20;
      v52 = ((unint64_t)v50 + v20 + 16) & ~v20;
      swift_bridgeObjectRetain();
      v47(v51, v52, AssociatedTypeWitness);
      v53 = (v18 + v51) & 0xFFFFFFFFFFFFFFF8;
      v54 = (uint64_t *)((v18 + v52) & 0xFFFFFFFFFFFFFFF8);
      v55 = *v54;
      if (HIDWORD(*v54) > 0x80000000)
      {
        *(_OWORD *)v53 = *(_OWORD *)v54;
      }
      else
      {
        v56 = v54[1];
        sub_23AA7F2D4(*v54, v56);
        *(_QWORD *)v53 = v55;
        *(_QWORD *)(v53 + 8) = v56;
      }
      v88 = *(void **)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFF8);
      v89 = v88;
      *(_QWORD *)((v53 + 23) & 0xFFFFFFFFFFFFF8) = v88;
      if (v46 <= 3)
      {
        v90 = ((1 << (8 * v46)) + 11) >> (8 * v46);
        if (v90 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v46) = 1;
          return v38;
        }
        if (v90 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v46) = 1;
          return v38;
        }
      }
      *((_BYTE *)a1 + v46) = 1;
      return v38;
    case 2u:
      v57 = v32[1];
      v38 = a1;
      *a1 = *v32;
      a1[1] = v57;
      v58 = ((unint64_t)a1 + v20 + 16) & v34;
      v59 = ((unint64_t)v32 + v20 + 16) & v34;
      v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      v61 = v29;
      swift_bridgeObjectRetain();
      v60(v58, v59, AssociatedTypeWitness);
      if (v61 <= 3)
      {
        v62 = ((1 << (8 * v61)) + 11) >> (8 * v61);
        if (v62 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v61) = 2;
          return v38;
        }
        if (v62 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v61) = 2;
          return v38;
        }
      }
      *((_BYTE *)a1 + v61) = 2;
      return v38;
    case 3u:
      v38 = a1;
      v63 = v32;
      v64 = v29;
      (*(void (**)(_QWORD *))(v3 + 16))(a1);
      v65 = *(void **)(((unint64_t)v63 + v4 + 7) & 0xFFFFFFFFFFFFF8);
      v66 = v65;
      *(_QWORD *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFF8) = v65;
      if (v64 <= 3)
      {
        v67 = ((1 << (8 * v64)) + 11) >> (8 * v64);
        if (v67 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v64) = 3;
          return v38;
        }
        if (v67 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v64) = 3;
          return v38;
        }
      }
      *((_BYTE *)a1 + v64) = 3;
      return v38;
    case 4u:
      v68 = ~v20;
      v69 = v29;
      v70 = v32;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v3 + 48))(v32, 1, AssociatedTypeWitness))
      {
        v38 = a1;
        memcpy(a1, v70, __n);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v3 + 16))(((unint64_t)a1 + v25) & v68, ((unint64_t)v70 + v25) & v68, AssociatedTypeWitness);
      }
      else
      {
        v91 = *(void (**)(_QWORD *, const void *, uint64_t))(v3 + 16);
        v38 = a1;
        v91(a1, v70, AssociatedTypeWitness);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, AssociatedTypeWitness);
        v91((_QWORD *)(((unint64_t)a1 + v25) & v68), (const void *)(((unint64_t)v70 + v25) & v68), AssociatedTypeWitness);
      }
      if (v69 <= 3)
      {
        v92 = ((1 << (8 * v69)) + 11) >> (8 * v69);
        if (v92 > 0xFFF5)
        {
          *(_DWORD *)((char *)v38 + v69) = 4;
          return v38;
        }
        if (v92 > 0xF5)
        {
          *(_WORD *)((char *)v38 + v69) = 4;
          return v38;
        }
      }
      *((_BYTE *)v38 + v69) = 4;
      return v38;
    case 5u:
      v38 = a1;
      *(_BYTE *)a1 = *(_BYTE *)v32;
      if (v29 <= 3)
      {
        v71 = ((1 << (8 * v29)) + 11) >> (8 * v29);
        if (v71 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v29) = 5;
          return v38;
        }
        if (v71 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v29) = 5;
          return v38;
        }
      }
      *((_BYTE *)a1 + v29) = 5;
      return v38;
    case 6u:
      v38 = a1;
      v72 = v29;
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v3 + 16))(a1, v32, AssociatedTypeWitness);
      if (v72 <= 3)
      {
        v73 = ((1 << (8 * v72)) + 11) >> (8 * v72);
        if (v73 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v72) = 6;
          return v38;
        }
        if (v73 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v72) = 6;
          return v38;
        }
      }
      *((_BYTE *)a1 + v72) = 6;
      return v38;
    case 7u:
      v74 = ~v6;
      v75 = *(void (**)(unint64_t, unint64_t, uint64_t))(v115 + 16);
      v38 = a1;
      v76 = v32;
      v77 = v29;
      ((void (*)(_QWORD *))v75)(a1);
      v75(((unint64_t)a1 + v27) & v74, ((unint64_t)v76 + v27) & v74, v116);
      if (v77 <= 3)
      {
        v78 = ((1 << (8 * v77)) + 11) >> (8 * v77);
        if (v78 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v77) = 7;
          return v38;
        }
        if (v78 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v77) = 7;
          return v38;
        }
      }
      *((_BYTE *)a1 + v77) = 7;
      return v38;
    case 8u:
      v81 = *v32;
      v82 = v29;
      v83 = (id)*v32;
      v38 = a1;
      *a1 = v81;
      if (v82 <= 3)
      {
        v84 = ((1 << (8 * v82)) + 11) >> (8 * v82);
        if (v84 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v82) = 8;
          return v38;
        }
        if (v84 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v82) = 8;
          return v38;
        }
      }
      *((_BYTE *)a1 + v82) = 8;
      return v38;
    case 9u:
      v38 = a1;
      v79 = v29;
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v3 + 16))(a1, v32, AssociatedTypeWitness);
      if (v79 <= 3)
      {
        v80 = ((1 << (8 * v79)) + 11) >> (8 * v79);
        if (v80 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v79) = 9;
          return v38;
        }
        if (v80 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v79) = 9;
          return v38;
        }
      }
      *((_BYTE *)a1 + v79) = 9;
      return v38;
    default:
      if (v29 > 3)
        goto LABEL_45;
      v44 = ((1 << (8 * v29)) + 11) >> (8 * v29);
      v45 = 2;
      if (v44 > 0xFFF5)
        v45 = 4;
      if (v44 <= 0xF5)
LABEL_45:
        v45 = 1;
      v38 = a1;
      memcpy(a1, v32, v45 + v29);
      return v38;
  }
}

_QWORD *sub_23AD1BFF4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  void (*v31)(_QWORD *, uint64_t);
  unint64_t v32;
  unint64_t v33;
  int v34;
  void (*v35)(_QWORD *, uint64_t);
  void (*v36)(_QWORD *, uint64_t);
  uint64_t *v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  unsigned int v44;
  uint64_t v45;
  void (*v46)(_QWORD *, _QWORD *, uint64_t);
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(unint64_t, unint64_t, uint64_t);
  unsigned int v56;
  void *v57;
  id v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  void (*v62)(_QWORD *, _QWORD *, uint64_t);
  unsigned int v63;
  unsigned int v64;
  void *v65;
  id v66;
  unsigned int v67;
  uint64_t *v68;
  uint64_t v69;
  void *v70;
  id v71;
  __int16 v72;
  unsigned int v73;
  void (*v74)(_QWORD *, _QWORD *, uint64_t);
  unsigned int v75;
  size_t v76;
  _QWORD *v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  void (*v81)(unint64_t, unint64_t, uint64_t);
  unint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  _QWORD *v85;
  void *v86;
  id v87;
  unsigned int v88;
  _QWORD *result;
  char v90;
  unsigned int v91;
  size_t __n;
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  size_t v102;
  int v103;
  unint64_t v104;
  unint64_t v105;
  unsigned int v106;
  size_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t AssociatedTypeWitness;

  if (a1 == a2)
    return a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v108 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v108 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v97 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v97 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v104 = v10 + v5;
  v11 = *(_DWORD *)(v6 + 84);
  v91 = *(_DWORD *)(v8 + 84);
  v106 = v11;
  if (v11 <= v91)
    v11 = *(_DWORD *)(v8 + 84);
  v94 = v11;
  if (v11 <= 0x7FFFFFFE)
    v12 = 2147483646;
  else
    v12 = v11;
  v103 = v12;
  v13 = *(_QWORD *)(v6 + 64);
  v98 = v13 + 7;
  v96 = v9 + 8;
  v93 = *(_QWORD *)(v8 + 64) + 7;
  v107 = ((((v93 + ((v9 + 8 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v14 = ((v10 + v5) & ~v10) + v107 + 8;
  v15 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(unsigned __int8 *)(v4 + 80);
  v105 = v5 + 7;
  v17 = ((((v5 + 7 + ((v16 + 16 + v15) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v18 = ((v16 + 16) & ~v16) + v5;
  v19 = v15 + 8;
  if (*(_DWORD *)(v4 + 84))
    v20 = v5;
  else
    v20 = v5 + 1;
  __n = v20;
  v102 = v20 + v16;
  v21 = ((v20 + v16) & ~v16) + v5;
  v101 = v13 + v7;
  v22 = ((v13 + v7) & ~v7) + v13;
  if (v5 > v14)
    v14 = v5;
  if (v17 > v18)
    v18 = v17;
  if (v19 <= v21)
    v19 = v21;
  if (v14 <= v18)
    v14 = v18;
  if (v22 <= v19)
    v22 = v19;
  if (v22 > v14)
    v14 = v22;
  if (v14 <= 8)
    v23 = 8;
  else
    v23 = v14;
  v24 = 8 * v23;
  if (v23 > 3)
    goto LABEL_28;
  v25 = ((1 << v24) + 11) >> v24;
  if (v25 <= 0xFFF5)
  {
    if (v25 > 0xF5)
    {
      v26 = *(unsigned __int16 *)((char *)a1 + v23);
      if (v26 < 0xA)
        goto LABEL_37;
      goto LABEL_33;
    }
LABEL_28:
    v26 = *((unsigned __int8 *)a1 + v23);
    if (v26 < 0xA)
      goto LABEL_37;
LABEL_33:
    if (v23 <= 3)
      v27 = v23;
    else
      v27 = 4;
    __asm { BR              X14 }
  }
  v26 = *(_DWORD *)((char *)a1 + v23);
  if (v26 >= 0xA)
    goto LABEL_33;
LABEL_37:
  v100 = ~v10;
  v95 = ~v9;
  v109 = ~v16;
  v99 = ~v7;
  v28 = AssociatedTypeWitness;
  switch(v26)
  {
    case 0u:
      (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(a1, AssociatedTypeWitness);
      v29 = ((unint64_t)a1 + v104) & v100;
      if (v106 == v103)
      {
        v30 = (*(uint64_t (**)(unint64_t))(v6 + 48))(((unint64_t)a1 + v104) & v100);
LABEL_64:
        v29 = ((unint64_t)a1 + v104) & v100;
        if (v30)
          goto LABEL_67;
        v37 = (uint64_t *)((v98 + (((unint64_t)a1 + v104) & v100)) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_66;
      }
      v37 = (uint64_t *)((v98 + v29) & 0xFFFFFFFFFFFFFFF8);
      if (v94 > 0x7FFFFFFE)
      {
        v30 = (*(uint64_t (**)(unint64_t))(v8 + 48))(((unint64_t)v37 + v96) & v95);
        goto LABEL_64;
      }
      v38 = *v37;
      if ((unint64_t)*v37 >= 0xFFFFFFFF)
        LODWORD(v38) = -1;
      if ((v38 + 1) < 2)
      {
LABEL_66:
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v29, v108);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v8 + 8))(((unint64_t)v37 + v96) & v95, v97);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 = ((unint64_t)a1 + v104) & v100;
      }
LABEL_67:

LABEL_68:
      v28 = AssociatedTypeWitness;
      if (v23 > 3)
        goto LABEL_71;
LABEL_69:
      v39 = ((1 << v24) + 11) >> v24;
      if (v39 > 0xFFF5)
      {
        v40 = *(_DWORD *)((char *)a2 + v23);
        if (v40 >= 0xA)
          goto LABEL_76;
      }
      else if (v39 > 0xF5)
      {
        v40 = *(unsigned __int16 *)((char *)a2 + v23);
        if (v40 >= 0xA)
          goto LABEL_76;
      }
      else
      {
LABEL_71:
        v40 = *((unsigned __int8 *)a2 + v23);
        if (v40 >= 0xA)
        {
LABEL_76:
          if (v23 <= 3)
            v41 = v23;
          else
            v41 = 4;
          __asm { BR              X12 }
        }
      }
      return result;
    case 1u:
      v90 = 8 * v23;
      v31 = *(void (**)(_QWORD *, uint64_t))(v4 + 8);
      v31(a1, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      v32 = ((((unint64_t)a1 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + v16 + 16) & v109;
      v31((_QWORD *)v32, AssociatedTypeWitness);
      v33 = (v105 + v32) & 0xFFFFFFFFFFFFFFF8;
      if (HIDWORD(*(_QWORD *)v33) <= 0x80000000)
        sub_23AAA12F0(*(_QWORD *)v33, *(_QWORD *)(v33 + 8));

      goto LABEL_54;
    case 2u:
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))(((unint64_t)a1 + v16 + 16) & v109, AssociatedTypeWitness);
      goto LABEL_45;
    case 3u:
      (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(a1, AssociatedTypeWitness);

      if (v23 > 3)
        goto LABEL_71;
      goto LABEL_69;
    case 4u:
      v34 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v4 + 48))(a1, 1, AssociatedTypeWitness);
      v35 = *(void (**)(_QWORD *, uint64_t))(v4 + 8);
      if (!v34)
        v35(a1, AssociatedTypeWitness);
      v35((_QWORD *)(((unint64_t)a1 + v102) & v109), AssociatedTypeWitness);
      v24 = 8 * v23;
      if (v23 > 3)
        goto LABEL_71;
      goto LABEL_69;
    case 6u:
    case 9u:
      (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(a1, AssociatedTypeWitness);
LABEL_45:
      if (v23 > 3)
        goto LABEL_71;
      goto LABEL_69;
    case 7u:
      v90 = 8 * v23;
      v36 = *(void (**)(_QWORD *, uint64_t))(v6 + 8);
      v36(a1, v108);
      v36((_QWORD *)(((unint64_t)a1 + v101) & v99), v108);
LABEL_54:
      v24 = v90;
      goto LABEL_68;
    case 8u:

      goto LABEL_56;
    default:
LABEL_56:
      if (v23 <= 3)
        goto LABEL_69;
      goto LABEL_71;
  }
  switch(v40)
  {
    case 0u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v4 + 16))(a1, a2, v28);
      v42 = (char *)(((unint64_t)a1 + v104) & v100);
      v43 = (char *)(((unint64_t)a2 + v104) & v100);
      if (v106 == v103)
      {
        if (!(*(unsigned int (**)(char *))(v6 + 48))(v43))
          goto LABEL_145;
LABEL_144:
        v76 = v107;
        memcpy(v42, v43, v107);
        goto LABEL_147;
      }
      v68 = (uint64_t *)((unint64_t)&v43[v98] & 0xFFFFFFFFFFFFFFF8);
      if (v94 <= 0x7FFFFFFE)
      {
        v69 = *v68;
        if ((unint64_t)*v68 >= 0xFFFFFFFF)
          LODWORD(v69) = -1;
        if ((v69 + 1) < 2)
          goto LABEL_146;
        goto LABEL_144;
      }
      if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v8 + 48))(((unint64_t)v68 + v96) & v95, v91, v97))
      {
        goto LABEL_144;
      }
LABEL_145:
      v68 = (uint64_t *)((unint64_t)&v43[v98] & 0xFFFFFFFFFFFFFFF8);
LABEL_146:
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v42, v43, v108);
      v77 = (_QWORD *)((unint64_t)&v42[v98] & 0xFFFFFFFFFFFFFFF8);
      *v77 = *v68;
      v78 = v24;
      v79 = ((unint64_t)v77 + v96) & v95;
      v80 = ((unint64_t)v68 + v96) & v95;
      v81 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
      swift_bridgeObjectRetain();
      v81(v79, v80, v97);
      v82 = v93 + v79;
      v24 = v78;
      v82 &= 0xFFFFFFFFFFFFF8uLL;
      v83 = (_QWORD *)((v93 + v80) & 0xFFFFFFFFFFFFF8);
      *(_QWORD *)v82 = *v83;
      v84 = (_QWORD *)((v82 + 15) & 0xFFFFFFFFFFFFFFF8);
      v85 = (_QWORD *)(((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v84 = *v85;
      v84[1] = v85[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v76 = v107;
LABEL_147:
      v86 = *(void **)&v43[v76];
      v87 = v86;
      *(_QWORD *)&v42[v76] = v86;
      if (v23 <= 3)
      {
        v88 = ((1 << v24) + 11) >> v24;
        if (v88 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 0;
          return a1;
        }
        if (v88 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 0;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 0;
      return a1;
    case 1u:
      v46 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v4 + 16);
      v46(a1, a2, v28);
      v47 = (_QWORD *)(((unint64_t)a1 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
      v48 = (_QWORD *)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v47 = *v48;
      v47[1] = v48[1];
      v49 = ((unint64_t)v47 + v16 + 16) & v109;
      v50 = ((unint64_t)v48 + v16 + 16) & v109;
      swift_bridgeObjectRetain();
      v46((_QWORD *)v49, (_QWORD *)v50, v28);
      v51 = (v105 + v49) & 0xFFFFFFFFFFFFFFF8;
      v52 = (uint64_t *)((v105 + v50) & 0xFFFFFFFFFFFFFFF8);
      v53 = *v52;
      if (HIDWORD(*v52) > 0x80000000)
      {
        *(_OWORD *)v51 = *(_OWORD *)v52;
      }
      else
      {
        v54 = v52[1];
        sub_23AA7F2D4(*v52, v54);
        *(_QWORD *)v51 = v53;
        *(_QWORD *)(v51 + 8) = v54;
      }
      v70 = *(void **)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFF8);
      v71 = v70;
      *(_QWORD *)((v51 + 23) & 0xFFFFFFFFFFFFF8) = v70;
      if (v23 <= 3)
      {
        v72 = 1;
        v73 = ((1 << v24) + 11) >> v24;
        if (v73 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 1;
          return a1;
        }
        if (v73 > 0xF5)
          goto LABEL_162;
      }
      *((_BYTE *)a1 + v23) = 1;
      return a1;
    case 2u:
      *a1 = *a2;
      a1[1] = a2[1];
      v55 = *(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 16);
      swift_bridgeObjectRetain();
      v55(((unint64_t)a1 + v16 + 16) & v109, ((unint64_t)a2 + v16 + 16) & v109, v28);
      if (v23 <= 3)
      {
        v56 = ((1 << v24) + 11) >> v24;
        if (v56 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 2;
          return a1;
        }
        if (v56 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 2;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 2;
      return a1;
    case 3u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v4 + 16))(a1, a2, v28);
      v57 = *(void **)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFF8);
      v58 = v57;
      *(_QWORD *)(((unint64_t)a1 + v5 + 7) & 0xFFFFFFFFFFFFF8) = v57;
      if (v23 <= 3)
      {
        v59 = ((1 << v24) + 11) >> v24;
        if (v59 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 3;
          return a1;
        }
        if (v59 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 3;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 3;
      return a1;
    case 4u:
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v28))
      {
        memcpy(a1, a2, __n);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 16))(((unint64_t)a1 + v102) & v109, ((unint64_t)a2 + v102) & v109, v28);
      }
      else
      {
        v74 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v4 + 16);
        v74(a1, a2, v28);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v28);
        v74((_QWORD *)(((unint64_t)a1 + v102) & v109), (_QWORD *)(((unint64_t)a2 + v102) & v109), v28);
      }
      if (v23 <= 3)
      {
        v75 = ((1 << v24) + 11) >> v24;
        if (v75 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 4;
          return a1;
        }
        if (v75 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 4;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 4;
      return a1;
    case 5u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v23 <= 3)
      {
        v60 = ((1 << v24) + 11) >> v24;
        if (v60 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 5;
          return a1;
        }
        if (v60 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 5;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 5;
      return a1;
    case 6u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v4 + 16))(a1, a2, v28);
      if (v23 <= 3)
      {
        v61 = ((1 << v24) + 11) >> v24;
        if (v61 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 6;
          return a1;
        }
        if (v61 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 6;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 6;
      return a1;
    case 7u:
      v62 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16);
      v62(a1, a2, v108);
      v62((_QWORD *)(((unint64_t)a1 + v101) & v99), (_QWORD *)(((unint64_t)a2 + v101) & v99), v108);
      if (v23 <= 3)
      {
        v63 = ((1 << v24) + 11) >> v24;
        if (v63 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 7;
          return a1;
        }
        if (v63 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 7;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 7;
      return a1;
    case 8u:
      v65 = (void *)*a2;
      v66 = v65;
      *a1 = v65;
      if (v23 > 3)
        goto LABEL_121;
      v67 = ((1 << v24) + 11) >> v24;
      if (v67 > 0xFFF5)
      {
        *(_DWORD *)((char *)a1 + v23) = 8;
        return a1;
      }
      if (v67 > 0xF5)
      {
        v72 = 8;
LABEL_162:
        *(_WORD *)((char *)a1 + v23) = v72;
      }
      else
      {
LABEL_121:
        *((_BYTE *)a1 + v23) = 8;
      }
      return a1;
    case 9u:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v4 + 16))(a1, a2, v28);
      if (v23 <= 3)
      {
        v64 = ((1 << v24) + 11) >> v24;
        if (v64 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 9;
          return a1;
        }
        if (v64 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 9;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 9;
      return a1;
    default:
      if (v23 > 3)
        goto LABEL_88;
      v44 = ((1 << v24) + 11) >> v24;
      v45 = 2;
      if (v44 > 0xFFF5)
        v45 = 4;
      if (v44 <= 0xF5)
LABEL_88:
        v45 = 1;
      memcpy(a1, a2, v45 + v23);
      return a1;
  }
}

_OWORD *sub_23AD1CDC8(_OWORD *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  size_t v24;
  size_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  _OWORD *v32;
  uint64_t v33;
  uint64_t v34;
  size_t v35;
  uint64_t v36;
  void (*v37)(_OWORD *);
  _OWORD *v38;
  unint64_t v39;
  int v40;
  char *v41;
  char *v42;
  unsigned int v43;
  uint64_t v44;
  _OWORD *v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  _OWORD *v47;
  uint64_t v48;
  _OWORD *v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int v57;
  _OWORD *v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  const void *v63;
  unsigned int v64;
  uint64_t v65;
  unsigned int v66;
  void (*v67)(unint64_t, unint64_t, uint64_t);
  _OWORD *v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(_OWORD *, const void *, uint64_t);
  unsigned int v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  unsigned int v84;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  size_t __n;
  size_t __na;
  uint64_t v93;
  uint64_t v94;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v94 = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v94 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 | v9 | 7;
  v11 = *(unsigned int *)(v5 + 84);
  if (v11 <= *(_DWORD *)(v8 + 84))
    v12 = *(_DWORD *)(v8 + 84);
  else
    v12 = *(_DWORD *)(v5 + 84);
  if (v12 <= 0x7FFFFFFE)
    v13 = 2147483646;
  else
    v13 = v12;
  v93 = v5;
  v14 = *(_QWORD *)(v5 + 64);
  v15 = v14 + 7;
  v16 = ((((*(_QWORD *)(v8 + 64) + 7 + ((v9 + 8 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v17 = ((v10 + v4) & ~v10) + v16 + 8;
  v18 = v4 + 7;
  v19 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(unsigned __int8 *)(v3 + 80);
  v21 = ((((v4 + 7 + ((v20 + 16 + v19) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v22 = ((v20 + 16) & ~v20) + v4;
  v23 = v19 + 8;
  if (*(_DWORD *)(v3 + 84))
    v24 = v4;
  else
    v24 = v4 + 1;
  __n = v24;
  v25 = v24 + v20;
  v26 = ((v24 + v20) & ~v20) + v4;
  v27 = v14 + v6;
  v28 = ((v14 + v6) & ~v6) + v14;
  if (v4 > v17)
    v17 = v4;
  if (v21 > v22)
    v22 = v21;
  if (v23 <= v26)
    v23 = v26;
  if (v17 <= v22)
    v17 = v22;
  if (v28 <= v23)
    v28 = v23;
  if (v28 > v17)
    v17 = v28;
  if (v17 <= 8)
    v29 = 8;
  else
    v29 = v17;
  if (v29 > 3)
    goto LABEL_28;
  v30 = ((1 << (8 * v29)) + 11) >> (8 * v29);
  if (v30 <= 0xFFF5)
  {
    if (v30 > 0xF5)
    {
      v31 = *(unsigned __int16 *)((char *)a2 + v29);
LABEL_29:
      v32 = a2;
      if (v31 >= 0xA)
      {
LABEL_32:
        if (v29 <= 3)
          v33 = v29;
        else
          v33 = 4;
        __asm { BR              X14 }
      }
      goto LABEL_37;
    }
LABEL_28:
    v31 = *((unsigned __int8 *)a2 + v29);
    goto LABEL_29;
  }
  v32 = a2;
  v31 = *(_DWORD *)((char *)a2 + v29);
  if (v31 >= 0xA)
    goto LABEL_32;
LABEL_37:
  switch(v31)
  {
    case 0u:
      v86 = *(_DWORD *)(v8 + 84);
      v34 = v15;
      v89 = v9 + 8;
      v90 = v7;
      v35 = v16;
      __na = v29;
      v36 = ~v10;
      v87 = *(_QWORD *)(v8 + 64) + 7;
      v88 = ~v9;
      v37 = *(void (**)(_OWORD *))(v3 + 32);
      v38 = v32;
      v39 = v10 + v4;
      v40 = v13;
      v37(a1);
      v41 = (char *)(((unint64_t)a1 + v39) & v36);
      v42 = (char *)(((unint64_t)v38 + v39) & v36);
      if ((_DWORD)v11 == v40)
      {
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v42, v11, v94))
          goto LABEL_101;
LABEL_100:
        memcpy(v41, v42, v35);
        goto LABEL_103;
      }
      v74 = (uint64_t *)((unint64_t)&v42[v34] & 0xFFFFFFFFFFFFFFF8);
      if (v12 <= 0x7FFFFFFE)
      {
        v75 = v34;
        v76 = *v74;
        if ((unint64_t)*v74 >= 0xFFFFFFFF)
          LODWORD(v76) = -1;
        if ((v76 + 1) < 2)
          goto LABEL_102;
        goto LABEL_100;
      }
      if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v8 + 48))(((unint64_t)v74 + v89) & v88, v86, v90))
      {
        goto LABEL_100;
      }
LABEL_101:
      v75 = v34;
      v74 = (uint64_t *)((unint64_t)&v42[v34] & 0xFFFFFFFFFFFFFFF8);
LABEL_102:
      v79 = v75;
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v41, v42, v94);
      v80 = (_QWORD *)((unint64_t)&v41[v79] & 0xFFFFFFFFFFFFFFF8);
      *v80 = *v74;
      v81 = ((unint64_t)v80 + v89) & v88;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v81, ((unint64_t)v74 + v89) & v88, v90);
      v82 = (_QWORD *)((v87 + v81) & 0xFFFFFFFFFFFFF8);
      v83 = (_QWORD *)((v87 + (((unint64_t)v74 + v89) & v88)) & 0xFFFFFFFFFFFFF8);
      *v82 = *v83;
      *(_OWORD *)(((unint64_t)v82 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFF8);
LABEL_103:
      v45 = a1;
      *(_QWORD *)&v41[v35] = *(_QWORD *)&v42[v35];
      if (__na <= 3)
      {
        v84 = ((1 << (8 * __na)) + 11) >> (8 * __na);
        if (v84 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + __na) = 0;
          return v45;
        }
        if (v84 > 0xF5)
        {
          *(_WORD *)((char *)a1 + __na) = 0;
          return v45;
        }
      }
      *((_BYTE *)a1 + __na) = 0;
      return v45;
    case 1u:
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
      v45 = a1;
      v47 = v32;
      v48 = v29;
      ((void (*)(_OWORD *))v46)(a1);
      v49 = (_OWORD *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      v50 = (_OWORD *)(((unint64_t)v47 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v49 = *v50;
      v51 = ((unint64_t)v49 + v20 + 16) & ~v20;
      v52 = ((unint64_t)v50 + v20 + 16) & ~v20;
      v46(v51, v52, AssociatedTypeWitness);
      v53 = (_OWORD *)((v18 + v51) & 0xFFFFFFFFFFFFFFF8);
      v54 = (_OWORD *)((v18 + v52) & 0xFFFFFFFFFFFFFFF8);
      *v53 = *v54;
      *(_QWORD *)(((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFF8);
      if (v48 <= 3)
      {
        v55 = ((1 << (8 * v48)) + 11) >> (8 * v48);
        if (v55 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v48) = 1;
          return v45;
        }
        if (v55 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v48) = 1;
          return v45;
        }
      }
      *((_BYTE *)a1 + v48) = 1;
      return v45;
    case 2u:
      v45 = a1;
      *a1 = *v32;
      v56 = v29;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v3 + 32))(((unint64_t)a1 + v20 + 16) & ~v20, ((unint64_t)v32 + v20 + 16) & ~v20, AssociatedTypeWitness);
      if (v56 <= 3)
      {
        v57 = ((1 << (8 * v56)) + 11) >> (8 * v56);
        if (v57 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v56) = 2;
          return v45;
        }
        if (v57 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v56) = 2;
          return v45;
        }
      }
      *((_BYTE *)a1 + v56) = 2;
      return v45;
    case 3u:
      v45 = a1;
      v58 = v32;
      v59 = v29;
      (*(void (**)(_OWORD *))(v3 + 32))(a1);
      *(_QWORD *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v58 + v4 + 7) & 0xFFFFFFFFFFFFF8);
      if (v59 <= 3)
      {
        v60 = ((1 << (8 * v59)) + 11) >> (8 * v59);
        if (v60 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v59) = 3;
          return v45;
        }
        if (v60 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v59) = 3;
          return v45;
        }
      }
      *((_BYTE *)a1 + v59) = 3;
      return v45;
    case 4u:
      v61 = ~v20;
      v62 = v29;
      v63 = v32;
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v3 + 48))(v32, 1, AssociatedTypeWitness))
      {
        v45 = a1;
        memcpy(a1, v63, __n);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v3 + 32))(((unint64_t)a1 + v25) & v61, ((unint64_t)v63 + v25) & v61, AssociatedTypeWitness);
      }
      else
      {
        v77 = *(void (**)(_OWORD *, const void *, uint64_t))(v3 + 32);
        v45 = a1;
        v77(a1, v63, AssociatedTypeWitness);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, AssociatedTypeWitness);
        v77((_OWORD *)(((unint64_t)a1 + v25) & v61), (const void *)(((unint64_t)v63 + v25) & v61), AssociatedTypeWitness);
      }
      if (v62 <= 3)
      {
        v78 = ((1 << (8 * v62)) + 11) >> (8 * v62);
        if (v78 > 0xFFF5)
        {
          *(_DWORD *)((char *)v45 + v62) = 4;
          return v45;
        }
        if (v78 > 0xF5)
        {
          *(_WORD *)((char *)v45 + v62) = 4;
          return v45;
        }
      }
      *((_BYTE *)v45 + v62) = 4;
      return v45;
    case 5u:
      v45 = a1;
      *(_BYTE *)a1 = *(_BYTE *)v32;
      if (v29 <= 3)
      {
        v64 = ((1 << (8 * v29)) + 11) >> (8 * v29);
        if (v64 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v29) = 5;
          return v45;
        }
        if (v64 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v29) = 5;
          return v45;
        }
      }
      *((_BYTE *)a1 + v29) = 5;
      return v45;
    case 6u:
      v45 = a1;
      v65 = v29;
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v3 + 32))(a1, v32, AssociatedTypeWitness);
      if (v65 <= 3)
      {
        v66 = ((1 << (8 * v65)) + 11) >> (8 * v65);
        if (v66 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v65) = 6;
          return v45;
        }
        if (v66 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v65) = 6;
          return v45;
        }
      }
      *((_BYTE *)a1 + v65) = 6;
      return v45;
    case 7u:
      v67 = *(void (**)(unint64_t, unint64_t, uint64_t))(v93 + 32);
      v45 = a1;
      v68 = v32;
      v69 = v29;
      ((void (*)(_OWORD *))v67)(a1);
      v67(((unint64_t)a1 + v27) & ~v6, ((unint64_t)v68 + v27) & ~v6, v94);
      if (v69 <= 3)
      {
        v70 = ((1 << (8 * v69)) + 11) >> (8 * v69);
        if (v70 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v69) = 7;
          return v45;
        }
        if (v70 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v69) = 7;
          return v45;
        }
      }
      *((_BYTE *)a1 + v69) = 7;
      return v45;
    case 8u:
      v45 = a1;
      *(_QWORD *)a1 = *(_QWORD *)v32;
      if (v29 <= 3)
      {
        v73 = ((1 << (8 * v29)) + 11) >> (8 * v29);
        if (v73 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v29) = 8;
          return v45;
        }
        if (v73 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v29) = 8;
          return v45;
        }
      }
      *((_BYTE *)a1 + v29) = 8;
      return v45;
    case 9u:
      v45 = a1;
      v71 = v29;
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v3 + 32))(a1, v32, AssociatedTypeWitness);
      if (v71 <= 3)
      {
        v72 = ((1 << (8 * v71)) + 11) >> (8 * v71);
        if (v72 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v71) = 9;
          return v45;
        }
        if (v72 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v71) = 9;
          return v45;
        }
      }
      *((_BYTE *)a1 + v71) = 9;
      return v45;
    default:
      if (v29 > 3)
        goto LABEL_45;
      v43 = ((1 << (8 * v29)) + 11) >> (8 * v29);
      v44 = 2;
      if (v43 > 0xFFF5)
        v44 = 4;
      if (v43 <= 0xF5)
LABEL_45:
        v44 = 1;
      v45 = a1;
      memcpy(a1, v32, v44 + v29);
      return v45;
  }
}

id *sub_23AD1D7A8(id *a1, id *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  size_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  void (*v31)(id *, uint64_t);
  unint64_t v32;
  unint64_t v33;
  int v34;
  void (*v35)(id *, uint64_t);
  void (*v36)(id *, uint64_t);
  uint64_t *v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  unsigned int v44;
  uint64_t v45;
  void (*v46)(id *, id *, uint64_t);
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  void (*v58)(id *, id *, uint64_t);
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t *v62;
  uint64_t v63;
  void (*v64)(id *, id *, uint64_t);
  unsigned int v65;
  size_t v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  char v70;
  unint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  unsigned int v74;
  id *result;
  char v76;
  void (*v77)(id *, uint64_t);
  unsigned int v78;
  size_t __n;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  size_t v89;
  unint64_t v90;
  int v91;
  unint64_t v92;
  unsigned int v93;
  size_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t AssociatedTypeWitness;

  if (a1 == a2)
    return a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v95 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v95 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v84 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v84 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 | v9 | 7;
  v92 = v10 + v5;
  v11 = *(_DWORD *)(v6 + 84);
  v78 = *(_DWORD *)(v8 + 84);
  v93 = v11;
  if (v11 <= v78)
    v11 = *(_DWORD *)(v8 + 84);
  v81 = v11;
  if (v11 <= 0x7FFFFFFE)
    v12 = 2147483646;
  else
    v12 = v11;
  v91 = v12;
  v13 = *(_QWORD *)(v6 + 64);
  v85 = v13 + 7;
  v83 = v9 + 8;
  v80 = *(_QWORD *)(v8 + 64) + 7;
  v94 = ((((v80 + ((v9 + 8 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v14 = ((v10 + v5) & ~v10) + v94 + 8;
  v15 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(unsigned __int8 *)(v4 + 80);
  v90 = v5 + 7;
  v17 = ((((v5 + 7 + ((v16 + 16 + v15) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v18 = ((v16 + 16) & ~v16) + v5;
  v19 = v15 + 8;
  if (*(_DWORD *)(v4 + 84))
    v20 = v5;
  else
    v20 = v5 + 1;
  __n = v20;
  v89 = v20 + v16;
  v21 = ((v20 + v16) & ~v16) + v5;
  v88 = v13 + v7;
  v22 = ((v13 + v7) & ~v7) + v13;
  if (v5 > v14)
    v14 = v5;
  if (v17 > v18)
    v18 = v17;
  if (v19 <= v21)
    v19 = v21;
  if (v14 <= v18)
    v14 = v18;
  if (v22 <= v19)
    v22 = v19;
  if (v22 > v14)
    v14 = v22;
  if (v14 <= 8)
    v23 = 8;
  else
    v23 = v14;
  v24 = 8 * v23;
  if (v23 > 3)
    goto LABEL_28;
  v25 = ((1 << v24) + 11) >> v24;
  if (v25 <= 0xFFF5)
  {
    if (v25 > 0xF5)
    {
      v26 = *(unsigned __int16 *)((char *)a1 + v23);
      if (v26 < 0xA)
        goto LABEL_37;
      goto LABEL_33;
    }
LABEL_28:
    v26 = *((unsigned __int8 *)a1 + v23);
    if (v26 < 0xA)
      goto LABEL_37;
LABEL_33:
    if (v23 <= 3)
      v27 = v23;
    else
      v27 = 4;
    __asm { BR              X14 }
  }
  v26 = *(_DWORD *)((char *)a1 + v23);
  if (v26 >= 0xA)
    goto LABEL_33;
LABEL_37:
  v87 = ~v10;
  v82 = ~v9;
  v96 = ~v16;
  v86 = ~v7;
  v28 = AssociatedTypeWitness;
  switch(v26)
  {
    case 0u:
      (*(void (**)(id *, uint64_t))(v4 + 8))(a1, AssociatedTypeWitness);
      v29 = ((unint64_t)a1 + v92) & v87;
      if (v93 == v91)
      {
        v30 = (*(uint64_t (**)(unint64_t))(v6 + 48))(((unint64_t)a1 + v92) & v87);
LABEL_64:
        v29 = ((unint64_t)a1 + v92) & v87;
        if (v30)
          goto LABEL_67;
        v37 = (uint64_t *)((v85 + (((unint64_t)a1 + v92) & v87)) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_66;
      }
      v37 = (uint64_t *)((v85 + v29) & 0xFFFFFFFFFFFFFFF8);
      if (v81 > 0x7FFFFFFE)
      {
        v30 = (*(uint64_t (**)(unint64_t))(v8 + 48))(((unint64_t)v37 + v83) & v82);
        goto LABEL_64;
      }
      v38 = *v37;
      if ((unint64_t)*v37 >= 0xFFFFFFFF)
        LODWORD(v38) = -1;
      if ((v38 + 1) < 2)
      {
LABEL_66:
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v29, v95);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v8 + 8))(((unint64_t)v37 + v83) & v82, v84);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 = ((unint64_t)a1 + v92) & v87;
      }
LABEL_67:

LABEL_68:
      v28 = AssociatedTypeWitness;
      if (v23 > 3)
        goto LABEL_71;
LABEL_69:
      v39 = ((1 << v24) + 11) >> v24;
      if (v39 > 0xFFF5)
      {
        v40 = *(_DWORD *)((char *)a2 + v23);
        if (v40 >= 0xA)
          goto LABEL_76;
      }
      else if (v39 > 0xF5)
      {
        v40 = *(unsigned __int16 *)((char *)a2 + v23);
        if (v40 >= 0xA)
          goto LABEL_76;
      }
      else
      {
LABEL_71:
        v40 = *((unsigned __int8 *)a2 + v23);
        if (v40 >= 0xA)
        {
LABEL_76:
          if (v23 <= 3)
            v41 = v23;
          else
            v41 = 4;
          __asm { BR              X12 }
        }
      }
      return result;
    case 1u:
      v76 = 8 * v23;
      v31 = *(void (**)(id *, uint64_t))(v4 + 8);
      v31(a1, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      v32 = ((((unint64_t)a1 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + v16 + 16) & v96;
      v31((id *)v32, AssociatedTypeWitness);
      v33 = (v90 + v32) & 0xFFFFFFFFFFFFFFF8;
      if (HIDWORD(*(_QWORD *)v33) <= 0x80000000)
        sub_23AAA12F0(*(_QWORD *)v33, *(_QWORD *)(v33 + 8));

      goto LABEL_54;
    case 2u:
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))(((unint64_t)a1 + v16 + 16) & v96, AssociatedTypeWitness);
      goto LABEL_45;
    case 3u:
      (*(void (**)(id *, uint64_t))(v4 + 8))(a1, AssociatedTypeWitness);

      if (v23 > 3)
        goto LABEL_71;
      goto LABEL_69;
    case 4u:
      v34 = (*(uint64_t (**)(id *, uint64_t, uint64_t))(v4 + 48))(a1, 1, AssociatedTypeWitness);
      v35 = *(void (**)(id *, uint64_t))(v4 + 8);
      if (!v34)
      {
        v77 = *(void (**)(id *, uint64_t))(v4 + 8);
        v35(a1, AssociatedTypeWitness);
        v35 = v77;
      }
      v35((id *)(((unint64_t)a1 + v89) & v96), AssociatedTypeWitness);
      if (v23 > 3)
        goto LABEL_71;
      goto LABEL_69;
    case 6u:
    case 9u:
      (*(void (**)(id *, uint64_t))(v4 + 8))(a1, AssociatedTypeWitness);
LABEL_45:
      if (v23 > 3)
        goto LABEL_71;
      goto LABEL_69;
    case 7u:
      v76 = 8 * v23;
      v36 = *(void (**)(id *, uint64_t))(v6 + 8);
      v36(a1, v95);
      v36((id *)(((unint64_t)a1 + v88) & v86), v95);
LABEL_54:
      v24 = v76;
      goto LABEL_68;
    case 8u:

      goto LABEL_56;
    default:
LABEL_56:
      if (v23 <= 3)
        goto LABEL_69;
      goto LABEL_71;
  }
  switch(v40)
  {
    case 0u:
      (*(void (**)(id *, id *, uint64_t))(v4 + 32))(a1, a2, v28);
      v42 = (char *)(((unint64_t)a1 + v92) & v87);
      v43 = (char *)(((unint64_t)a2 + v92) & v87);
      if (v93 == v91)
      {
        if (!(*(unsigned int (**)(char *))(v6 + 48))(v43))
          goto LABEL_143;
LABEL_142:
        v66 = v94;
        memcpy(v42, v43, v94);
        goto LABEL_145;
      }
      v62 = (uint64_t *)((unint64_t)&v43[v85] & 0xFFFFFFFFFFFFFFF8);
      if (v81 <= 0x7FFFFFFE)
      {
        v63 = *v62;
        if ((unint64_t)*v62 >= 0xFFFFFFFF)
          LODWORD(v63) = -1;
        if ((v63 + 1) < 2)
          goto LABEL_144;
        goto LABEL_142;
      }
      if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v8 + 48))(((unint64_t)v62 + v83) & v82, v78, v84))
      {
        goto LABEL_142;
      }
LABEL_143:
      v62 = (uint64_t *)((unint64_t)&v43[v85] & 0xFFFFFFFFFFFFFFF8);
LABEL_144:
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v42, v43, v95);
      v67 = (_QWORD *)((unint64_t)&v42[v85] & 0xFFFFFFFFFFFFFFF8);
      *v67 = *v62;
      v68 = ((unint64_t)v67 + v83) & v82;
      v69 = (unint64_t)v62 + v83;
      v70 = v24;
      v71 = v69 & v82;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v68, v69 & v82, v84);
      v72 = (_QWORD *)((v80 + v68) & 0xFFFFFFFFFFFFF8);
      v73 = v80 + v71;
      v24 = v70;
      v73 &= 0xFFFFFFFFFFFFF8uLL;
      *v72 = *(_QWORD *)v73;
      *(_OWORD *)(((unint64_t)v72 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v73 + 15) & 0xFFFFFFFFFFFFF8);
      v66 = v94;
LABEL_145:
      *(_QWORD *)&v42[v66] = *(_QWORD *)&v43[v66];
      if (v23 <= 3)
      {
        v74 = ((1 << v24) + 11) >> v24;
        if (v74 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 0;
          return a1;
        }
        if (v74 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 0;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 0;
      return a1;
    case 1u:
      v46 = *(void (**)(id *, id *, uint64_t))(v4 + 32);
      v46(a1, a2, v28);
      v47 = (_OWORD *)(((unint64_t)a1 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
      v48 = (_OWORD *)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v47 = *v48;
      v49 = ((unint64_t)v47 + v16 + 16) & v96;
      v50 = ((unint64_t)v48 + v16 + 16) & v96;
      v46((id *)v49, (id *)v50, v28);
      v51 = (_OWORD *)((v90 + v49) & 0xFFFFFFFFFFFFFFF8);
      v52 = (_OWORD *)((v90 + v50) & 0xFFFFFFFFFFFFFFF8);
      *v51 = *v52;
      *(_QWORD *)(((unint64_t)v51 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFF8);
      if (v23 <= 3)
      {
        v53 = ((1 << v24) + 11) >> v24;
        if (v53 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 1;
          return a1;
        }
        if (v53 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 1;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 1;
      return a1;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 32))(((unint64_t)a1 + v16 + 16) & v96, ((unint64_t)a2 + v16 + 16) & v96, v28);
      if (v23 <= 3)
      {
        v54 = ((1 << v24) + 11) >> v24;
        if (v54 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 2;
          return a1;
        }
        if (v54 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 2;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 2;
      return a1;
    case 3u:
      (*(void (**)(id *, id *, uint64_t))(v4 + 32))(a1, a2, v28);
      *(_QWORD *)(((unint64_t)a1 + v5 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFF8);
      if (v23 <= 3)
      {
        v55 = ((1 << v24) + 11) >> v24;
        if (v55 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 3;
          return a1;
        }
        if (v55 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 3;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 3;
      return a1;
    case 4u:
      if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v28))
      {
        memcpy(a1, a2, __n);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 32))(((unint64_t)a1 + v89) & v96, ((unint64_t)a2 + v89) & v96, v28);
      }
      else
      {
        v64 = *(void (**)(id *, id *, uint64_t))(v4 + 32);
        v64(a1, a2, v28);
        (*(void (**)(id *, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v28);
        v64((id *)(((unint64_t)a1 + v89) & v96), (id *)(((unint64_t)a2 + v89) & v96), v28);
      }
      if (v23 <= 3)
      {
        v65 = ((1 << v24) + 11) >> v24;
        if (v65 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 4;
          return a1;
        }
        if (v65 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 4;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 4;
      return a1;
    case 5u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v23 <= 3)
      {
        v56 = ((1 << v24) + 11) >> v24;
        if (v56 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 5;
          return a1;
        }
        if (v56 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 5;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 5;
      return a1;
    case 6u:
      (*(void (**)(id *, id *, uint64_t))(v4 + 32))(a1, a2, v28);
      if (v23 <= 3)
      {
        v57 = ((1 << v24) + 11) >> v24;
        if (v57 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 6;
          return a1;
        }
        if (v57 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 6;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 6;
      return a1;
    case 7u:
      v58 = *(void (**)(id *, id *, uint64_t))(v6 + 32);
      v58(a1, a2, v95);
      v58((id *)(((unint64_t)a1 + v88) & v86), (id *)(((unint64_t)a2 + v88) & v86), v95);
      if (v23 <= 3)
      {
        v59 = ((1 << v24) + 11) >> v24;
        if (v59 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 7;
          return a1;
        }
        if (v59 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 7;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 7;
      return a1;
    case 8u:
      *a1 = *a2;
      if (v23 <= 3)
      {
        v61 = ((1 << v24) + 11) >> v24;
        if (v61 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 8;
          return a1;
        }
        if (v61 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 8;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 8;
      return a1;
    case 9u:
      (*(void (**)(id *, id *, uint64_t))(v4 + 32))(a1, a2, v28);
      if (v23 <= 3)
      {
        v60 = ((1 << v24) + 11) >> v24;
        if (v60 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v23) = 9;
          return a1;
        }
        if (v60 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v23) = 9;
          return a1;
        }
      }
      *((_BYTE *)a1 + v23) = 9;
      return a1;
    default:
      if (v23 > 3)
        goto LABEL_88;
      v44 = ((1 << v24) + 11) >> v24;
      v45 = 2;
      if (v44 > 0xFFF5)
        v45 = 4;
      if (v44 <= 0xF5)
LABEL_88:
        v45 = 1;
      memcpy(a1, a2, v45 + v23);
      return a1;
  }
}

uint64_t sub_23AD1E4F8(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  unsigned int v22;
  char v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  char v35;
  int v36;
  unsigned int v38;
  int v39;
  int v40;
  unsigned int v41;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = (((v7 | v9 | 7) + v5) & ~(v7 | v9 | 7))
      + ((((*(_QWORD *)(v8 + 64) + ((v9 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 24;
  v12 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(unsigned __int8 *)(v4 + 80);
  v14 = ((((v5 + 7 + ((v13 + 16 + v12) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v15 = ((v13 + 16) & ~v13) + v5;
  v16 = v12 + 8;
  v17 = v5 + v13;
  if (!*(_DWORD *)(v4 + 84))
    ++v17;
  v18 = (v17 & ~v13) + v5;
  v19 = ((v10 + v7) & ~v7) + v10;
  if (v5 > v11)
    v11 = v5;
  if (v14 <= v15)
    v14 = v15;
  if (v16 <= v18)
    v16 = v18;
  if (v11 <= v14)
    v11 = v14;
  if (v19 <= v16)
    v20 = v16;
  else
    v20 = v19;
  if (v20 > v11)
    v11 = v20;
  if (v11 <= 8)
    v11 = 8;
  if (v11 > 3)
  {
    v21 = 11;
LABEL_22:
    v23 = 8;
    goto LABEL_23;
  }
  v22 = ((1 << (8 * v11)) + 11) >> (8 * v11);
  if (v22 > 0xFFF5)
    goto LABEL_26;
  v21 = v22 + 10;
  if (v22 <= 0xF5)
    goto LABEL_22;
  v23 = 16;
LABEL_23:
  v24 = (1 << v23) - v21;
  if ((v24 & 0x80000000) == 0)
  {
    if (v11 > 3)
      goto LABEL_30;
LABEL_27:
    v25 = ((1 << (8 * v11)) + 11) >> (8 * v11);
    v26 = 2;
    if (v25 > 0xFFF5)
      v26 = 4;
    if (v25 > 0xF5)
      goto LABEL_31;
    goto LABEL_30;
  }
LABEL_26:
  v24 = 0x7FFFFFFF;
  if (v11 <= 3)
    goto LABEL_27;
LABEL_30:
  v26 = 1;
LABEL_31:
  if (!a2)
    return 0;
  if (a2 <= v24)
    goto LABEL_49;
  v27 = v26 + v11;
  v28 = 8 * v27;
  if (v27 <= 3)
  {
    v30 = ((a2 - v24 + ~(-1 << v28)) >> v28) + 1;
    if (HIWORD(v30))
    {
      v29 = *(_DWORD *)(a1 + v27);
      if (!v29)
        goto LABEL_49;
      goto LABEL_42;
    }
    if (v30 > 0xFF)
    {
      v29 = *(unsigned __int16 *)(a1 + v27);
      if (!*(_WORD *)(a1 + v27))
        goto LABEL_49;
      goto LABEL_42;
    }
    if (v30 < 2)
    {
LABEL_49:
      if (v24)
      {
        if (v11 <= 3)
        {
          v38 = ((1 << (8 * v11)) + 11) >> (8 * v11);
          if (v38 > 0xFFF5)
          {
            v33 = *(_DWORD *)(a1 + v11);
            v34 = ~v33;
LABEL_59:
            v41 = 0x7FFFFFFF;
LABEL_60:
            if (v41 > v34)
              return -v33;
            else
              return 0;
          }
          v36 = v38 + 10;
          if (v38 > 0xF5)
          {
            v40 = *(unsigned __int16 *)(a1 + v11);
            v33 = v40 | 0xFFFF0000;
            v34 = v40 ^ 0xFFFF;
            v35 = 16;
          }
          else
          {
            v39 = *(unsigned __int8 *)(a1 + v11);
            v33 = v39 | 0xFFFFFF00;
            v34 = v39 ^ 0xFF;
            v35 = 8;
          }
        }
        else
        {
          v32 = *(unsigned __int8 *)(a1 + v11);
          v33 = v32 | 0xFFFFFF00;
          v34 = v32 ^ 0xFF;
          v35 = 8;
          v36 = 11;
        }
        v41 = (1 << v35) - v36;
        if ((v41 & 0x80000000) == 0)
          goto LABEL_60;
        goto LABEL_59;
      }
      return 0;
    }
  }
  v29 = *(unsigned __int8 *)(a1 + v27);
  if (!*(_BYTE *)(a1 + v27))
    goto LABEL_49;
LABEL_42:
  v31 = (v29 - 1) << v28;
  if (v27 > 3)
    v31 = 0;
  if ((_DWORD)v27)
  {
    if (v27 > 3)
      LODWORD(v27) = 4;
    __asm { BR              X12 }
  }
  return v24 + v31 + 1;
}

void sub_23AD1E8B4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  char v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  size_t v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  int v34;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = (((v9 | v11 | 7) + v7) & ~(v9 | v11 | 7))
      + ((((*(_QWORD *)(v10 + 64) + ((v11 + ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 24;
  v14 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = ((((v7 + 7 + ((v15 + 16 + v14) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v17 = ((v15 + 16) & ~v15) + v7;
  v18 = v14 + 8;
  v19 = v7 + v15;
  if (!*(_DWORD *)(v6 + 84))
    ++v19;
  v20 = (v19 & ~v15) + v7;
  v21 = ((v12 + v9) & ~v9) + v12;
  if (v7 > v13)
    v13 = v7;
  if (v16 <= v17)
    v16 = v17;
  if (v18 <= v20)
    v18 = v20;
  if (v13 <= v16)
    v13 = v16;
  if (v21 <= v18)
    v22 = v18;
  else
    v22 = v21;
  if (v22 > v13)
    v13 = v22;
  if (v13 <= 8)
    v13 = 8;
  v23 = 8 * v13;
  if (v13 <= 3)
  {
    v27 = ((1 << v23) + 11) >> v23;
    if (v27 > 0xFFF5)
      goto LABEL_27;
    v24 = v27 + 10;
    if (v27 > 0xF5)
    {
      v25 = 16;
LABEL_21:
      v26 = (1 << v25) - v24;
      if ((v26 & 0x80000000) == 0)
      {
        if (v13 > 3)
          goto LABEL_31;
LABEL_28:
        v28 = ((1 << v23) + 11) >> v23;
        v29 = 2;
        if (v28 > 0xFFF5)
          v29 = 4;
        if (v28 > 0xF5)
        {
LABEL_32:
          v30 = v29 + v13;
          if (a3 <= v26)
          {
            v31 = 0;
          }
          else if (v30 <= 3)
          {
            v33 = ((a3 - v26 + ~(-1 << (8 * v30))) >> (8 * v30)) + 1;
            if (HIWORD(v33))
            {
              v31 = 4u;
            }
            else if (v33 >= 0x100)
            {
              v31 = 2;
            }
            else
            {
              v31 = v33 > 1;
            }
          }
          else
          {
            v31 = 1u;
          }
          if (v26 < a2)
          {
            v32 = ~v26 + a2;
            if (v30 < 4)
            {
              if ((_DWORD)v30)
              {
                v34 = v32 & ~(-1 << (8 * v30));
                bzero(a1, v30);
                if ((_DWORD)v30 == 3)
                {
                  *(_WORD *)a1 = v34;
                  a1[2] = BYTE2(v34);
                }
                else if ((_DWORD)v30 == 2)
                {
                  *(_WORD *)a1 = v34;
                }
                else
                {
                  *a1 = v34;
                }
              }
            }
            else
            {
              bzero(a1, v30);
              *(_DWORD *)a1 = v32;
            }
            __asm { BR              X10 }
          }
          __asm { BR              X12 }
        }
LABEL_31:
        v29 = 1;
        goto LABEL_32;
      }
LABEL_27:
      v26 = 0x7FFFFFFF;
      if (v13 > 3)
        goto LABEL_31;
      goto LABEL_28;
    }
  }
  else
  {
    v24 = 11;
  }
  v25 = 8;
  goto LABEL_21;
}

uint64_t sub_23AD1EC8C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  unsigned int v20;
  uint64_t v21;

  v2 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v4 + 64);
  v9 = (((v5 | v7 | 7) + v3) & ~(v5 | v7 | 7))
     + ((((*(_QWORD *)(v6 + 64) + ((v7 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 24;
  v10 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(unsigned __int8 *)(v2 + 80);
  v12 = ((((v3 + 7 + ((v11 + 16 + v10) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v13 = ((v11 + 16) & ~v11) + v3;
  v14 = v10 + 8;
  v15 = v3 + v11;
  if (!*(_DWORD *)(v2 + 84))
    ++v15;
  v16 = (v15 & ~v11) + v3;
  v17 = ((v8 + v5) & ~v5) + v8;
  if (v3 > v9)
    v9 = v3;
  if (v12 <= v13)
    v12 = v13;
  if (v14 <= v16)
    v14 = v16;
  if (v9 <= v12)
    v9 = v12;
  if (v17 <= v14)
    v18 = v14;
  else
    v18 = v17;
  if (v18 > v9)
    v9 = v18;
  if (v9 <= 8)
    v9 = 8;
  if (v9 > 3)
    goto LABEL_19;
  v20 = ((1 << (8 * v9)) + 11) >> (8 * v9);
  if (v20 > 0xFFF5)
  {
    result = *(unsigned int *)(a1 + v9);
  }
  else
  {
    if (v20 <= 0xF5)
    {
LABEL_19:
      result = *(unsigned __int8 *)(a1 + v9);
      goto LABEL_24;
    }
    result = *(unsigned __int16 *)(a1 + v9);
  }
LABEL_24:
  if (result >= 0xA)
  {
    if (v9 <= 3)
      v21 = v9;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_23AD1EEE0(_BYTE *a1, unsigned int a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int *v28;
  unsigned int v29;
  int v30;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  if (a2 > 9)
  {
    v16 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
    v17 = *(unsigned __int8 *)(v16 + 80);
    v18 = *(_QWORD *)(v6 + 64);
    v19 = (((v7 | v17 | 7) + v5) & ~(v7 | v17 | 7))
        + ((((*(_QWORD *)(v16 + 64) + ((v17 + ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 24;
    v20 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
    v21 = *(unsigned __int8 *)(v4 + 80);
    if (((((v5 + 7 + ((v21 + 16 + v20) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v19)
      v19 = ((((v5 + 7 + ((v21 + 16 + v20) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (((v21 + 16) & ~v21) + v5 > v19)
      v19 = ((v21 + 16) & ~v21) + v5;
    if (v20 + 8 > v19)
      v19 = v20 + 8;
    v22 = v5 + v21;
    if (!*(_DWORD *)(v4 + 84))
      ++v22;
    v23 = (v22 & ~v21) + v5;
    if (v23 > v19)
      v19 = v23;
    if (v19 <= v5)
      v19 = v5;
    if (v19 <= ((v18 + v7) & ~v7) + v18)
      v19 = ((v18 + v7) & ~v7) + v18;
    if (v19 <= v5)
      v19 = v5;
    if (v19 <= 8)
      v24 = 8;
    else
      v24 = v19;
    v25 = a2 - 10;
    if (v24 < 4)
    {
      v27 = (v25 >> (8 * v24)) + 10;
      v28 = (int *)&a1[v24];
      v29 = ((1 << (8 * v24)) + 11) >> (8 * v24);
      if (v29 > 0xFFF5)
      {
        *v28 = v27;
      }
      else if (v29 > 0xF5)
      {
        *(_WORD *)v28 = v27;
      }
      else
      {
        *(_BYTE *)v28 = v27;
      }
    }
    else
    {
      a1[v24] = 10;
    }
    if (v24 >= 4)
      v30 = 4;
    else
      v30 = v24;
    bzero(a1, v24);
    __asm { BR              X10 }
  }
  v8 = *(_QWORD *)(v6 + 64);
  result = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(result - 8);
  v11 = (((((*(unsigned __int8 *)(v10 + 80) | v7 | 7) + v5) & ~(*(unsigned __int8 *)(v10 + 80) | v7))
        + ((((*(_QWORD *)(v10 + 64)
            + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
            + 7) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v12 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(unsigned __int8 *)(v4 + 80);
  if (((((v5 + 7 + ((v13 + 16 + v12) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v11)
    v11 = ((((v5 + 7 + ((v13 + 16 + v12) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v13 + 16) & ~v13) + v5 > v11)
    v11 = ((v13 + 16) & ~v13) + v5;
  if (v12 + 8 > v11)
    v11 = v12 + 8;
  v14 = v5 + v13;
  if (!*(_DWORD *)(v4 + 84))
    ++v14;
  v15 = (v14 & ~v13) + v5;
  if (v15 > v11)
    v11 = v15;
  if (v11 <= v5)
    v11 = v5;
  if (v11 <= ((v8 + v7) & ~v7) + v8)
    v11 = ((v8 + v7) & ~v7) + v8;
  if (v11 <= v5)
    v11 = v5;
  if (v11 <= 8)
    v11 = 8;
  if (v11 > 3)
    goto LABEL_21;
  v26 = ((1 << (8 * v11)) + 11) >> (8 * v11);
  if (v26 > 0xFFF5)
  {
    *(_DWORD *)&a1[v11] = a2;
  }
  else
  {
    if (v26 <= 0xF5)
    {
LABEL_21:
      a1[v11] = a2;
      return result;
    }
    *(_WORD *)&a1[v11] = a2;
  }
  return result;
}

uint64_t sub_23AD1F2B0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t *sub_23AD1F2BC(uint64_t *result)
{
  unint64_t v1;

  v1 = result[1];
  if (v1 >> 60 != 15)
    return (uint64_t *)sub_23AAAE53C(*result, v1);
  return result;
}

uint64_t sub_23AD1F2D8(uint64_t a1, uint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *a2;
    sub_23AAAE668(*a2, a2[1]);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *sub_23AD1F330(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      v6 = *(_QWORD *)a2;
      sub_23AAAE668(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      v7 = *a1;
      v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_23AAAE53C(v7, v8);
      return a1;
    }
    sub_23AB2D750((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v5 = *(_QWORD *)a2;
  sub_23AAAE668(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t *sub_23AD1F3D0(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_23AAAE53C(v6, v4);
      return a1;
    }
    sub_23AB2D750((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t sub_23AD1F438(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 12);
  v3 = *(_QWORD *)(a1 + 8) >> 60;
  if (((4 * (_DWORD)v3) & 0xC) != 0)
    v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_23AD1F494(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(_QWORD *)result = a2 - 12;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_23AD1F4E0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  if (v6 >= 2)
    v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  else
    v7 = -2;
  if (v7 < 0)
    v7 = -1;
  return (v7 + 1);
}

uint64_t sub_23AD1F58C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23AD1F5D8 + 4 * byte_23B1D3FD2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23AD1F60C + 4 * byte_23B1D3FCD[v4]))();
}

uint64_t sub_23AD1F60C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD1F614(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD1F61CLL);
  return result;
}

uint64_t sub_23AD1F628(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD1F630);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23AD1F634(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD1F63C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD1F648(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_23AD1F6D8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_23AD1F724 + 4 * byte_23B1D3FDC[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_23AD1F758 + 4 * byte_23B1D3FD7[v4]))();
}

uint64_t sub_23AD1F758(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD1F760(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD1F768);
  return result;
}

uint64_t sub_23AD1F774(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD1F77CLL);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_23AD1F780(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD1F788(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD1F794()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_23B1C6C98();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      result = sub_23B1C6C98();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_23AD1F8A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  void *v20;
  const void *v21;
  void *v22;
  const void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  size_t __n;
  uint64_t AssociatedTypeWitness;
  uint64_t v32;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v32 = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(v32 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = v3 + v5;
  if (*(_DWORD *)(v4 + 84))
    v7 = *(_QWORD *)(v4 + 64);
  else
    v7 = *(_QWORD *)(v4 + 64) + 1;
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  __n = v7;
  v11 = v7 + v10;
  if (*(_DWORD *)(v9 + 84))
    v12 = *(_QWORD *)(v9 + 64);
  else
    v12 = *(_QWORD *)(v9 + 64) + 1;
  v13 = v10 | *(_DWORD *)(v2 + 80) & 0xF8 | v5;
  if (v13 > 7
    || ((*(_DWORD *)(v9 + 80) | v5 | *(_DWORD *)(v2 + 80)) & 0x100000) != 0
    || ((v12 + ((v11 + (v6 & ~(unint64_t)v5)) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    v19 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    v17 = v8;
    v18 = ~(unint64_t)v5;
    v29 = ~v10;
    v19 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 + 16))(a1, a2, AssociatedTypeWitness);
    v20 = (void *)(((unint64_t)a1 + v6) & v18);
    v21 = (const void *)(((unint64_t)a2 + v6) & v18);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v4 + 48))(v21, 1, v32))
    {
      memcpy(v20, v21, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v4 + 16))(v20, v21, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v20, 0, 1, v32);
    }
    v22 = (void *)(((unint64_t)v20 + v11) & v29);
    v23 = (const void *)(((unint64_t)v21 + v11) & v29);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v23, 1, v17))
    {
      memcpy(v22, v23, v12);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v22, v23, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v22, 0, 1, v17);
    }
    v24 = ((unint64_t)v22 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = ((unint64_t)v23 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)(v25 + 8);
    if ((v26 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    else
    {
      v27 = *(_QWORD *)v25;
      sub_23AAAE668(*(_QWORD *)v25, *(_QWORD *)(v25 + 8));
      *(_QWORD *)v24 = v27;
      *(_QWORD *)(v24 + 8) = v26;
    }
  }
  return v19;
}

uint64_t sub_23AD1FB50(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  unint64_t v16;
  uint64_t *v17;
  unint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = swift_getAssociatedTypeWitness();
  v11 = v8 == 0;
  v12 = *(_QWORD *)(v10 - 8);
  v13 = v9 + v7;
  if (v11)
    ++v13;
  v14 = (v13 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v10);
  if (!(_DWORD)result)
    result = (*(uint64_t (**)(unint64_t, uint64_t))(v12 + 8))(v14, v10);
  v16 = v14 + *(_QWORD *)(v12 + 64);
  if (!*(_DWORD *)(v12 + 84))
    ++v16;
  v17 = (uint64_t *)((v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = v17[1];
  if ((v18 & 0x3000000000000000) == 0)
    return sub_23AAAE53C(*v17, v18);
  return result;
}

uint64_t sub_23AD1FCC8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  int v21;
  uint64_t v22;
  size_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  v16 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (void *)(((unint64_t)v10 + v15 + v18) & ~v18);
  v20 = (const void *)(((unint64_t)v11 + v15 + v18) & ~v18);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v20, 1, v16))
  {
    v21 = *(_DWORD *)(v17 + 84);
    v22 = *(_QWORD *)(v17 + 64);
    if (v21)
      v23 = *(_QWORD *)(v17 + 64);
    else
      v23 = v22 + 1;
    memcpy(v19, v20, v23);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v19, v20, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v16);
    v21 = *(_DWORD *)(v17 + 84);
    v22 = *(_QWORD *)(v17 + 64);
  }
  if (v21)
    v24 = v22;
  else
    v24 = v22 + 1;
  v25 = ((unint64_t)v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = ((unint64_t)v20 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_QWORD *)(v26 + 8);
  if ((v27 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
  }
  else
  {
    v28 = *(_QWORD *)v26;
    sub_23AAAE668(*(_QWORD *)v26, *(_QWORD *)(v26 + 8));
    *(_QWORD *)v25 = v28;
    *(_QWORD *)(v25 + 8) = v27;
  }
  return a1;
}

uint64_t sub_23AD1FEF0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  size_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (void *)((v6 + v9 + a2) & ~v9);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, v7);
  v13 = v12(v11, 1, v7);
  if ((_DWORD)v6)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v10, v11, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v10, v11, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v14);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  v16 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (void *)(((unint64_t)v10 + v15 + v18) & ~v18);
  v20 = (void *)(((unint64_t)v11 + v15 + v18) & ~v18);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v22 = v21(v19, 1, v16);
  v23 = v21(v20, 1, v16);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v19, v20, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v16);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v19, v20, v16);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  }
  if (*(_DWORD *)(v17 + 84))
    v24 = *(_QWORD *)(v17 + 64);
  else
    v24 = *(_QWORD *)(v17 + 64) + 1;
  memcpy(v19, v20, v24);
LABEL_22:
  if (*(_DWORD *)(v17 + 84))
    v25 = *(_QWORD *)(v17 + 64);
  else
    v25 = *(_QWORD *)(v17 + 64) + 1;
  v26 = (uint64_t *)(((unint64_t)v19 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  v27 = (uint64_t *)(((unint64_t)v20 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  v28 = v26[1];
  v29 = v27[1];
  v30 = v29 & 0x3000000000000000;
  if ((v28 & 0x3000000000000000) == 0)
  {
    if (!v30)
    {
      v33 = *v27;
      sub_23AAAE668(v33, v29);
      v34 = *v26;
      v35 = v26[1];
      *v26 = v33;
      v26[1] = v29;
      sub_23AAAE53C(v34, v35);
      return a1;
    }
    sub_23AAAE53C(*v26, v28);
    goto LABEL_30;
  }
  if (v30)
  {
LABEL_30:
    *(_OWORD *)v26 = *(_OWORD *)v27;
    return a1;
  }
  v31 = *v27;
  sub_23AAAE668(v31, v29);
  *v26 = v31;
  v26[1] = v29;
  return a1;
}

uint64_t sub_23AD201E0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  int v21;
  uint64_t v22;
  size_t v23;
  uint64_t v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  v16 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (void *)(((unint64_t)v10 + v15 + v18) & ~v18);
  v20 = (const void *)(((unint64_t)v11 + v15 + v18) & ~v18);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v20, 1, v16))
  {
    v21 = *(_DWORD *)(v17 + 84);
    v22 = *(_QWORD *)(v17 + 64);
    if (v21)
      v23 = *(_QWORD *)(v17 + 64);
    else
      v23 = v22 + 1;
    memcpy(v19, v20, v23);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v19, v20, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v16);
    v21 = *(_DWORD *)(v17 + 84);
    v22 = *(_QWORD *)(v17 + 64);
  }
  if (v21)
    v24 = v22;
  else
    v24 = v22 + 1;
  *(_OWORD *)(((unint64_t)v19 + v24 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v20 + v24 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23AD203E4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  int v23;
  size_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)((v6 + v9 + a1) & ~v9);
  v11 = (void *)((v6 + v9 + a2) & ~v9);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, v7);
  v13 = v12(v11, 1, v7);
  if ((_DWORD)v6)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v14);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  v16 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (void *)(((unint64_t)v10 + v15 + v18) & ~v18);
  v20 = (void *)(((unint64_t)v11 + v15 + v18) & ~v18);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v22 = v21(v19, 1, v16);
  v23 = v21(v20, 1, v16);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v19, v20, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v16);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v19, v20, v16);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  }
  if (*(_DWORD *)(v17 + 84))
    v24 = *(_QWORD *)(v17 + 64);
  else
    v24 = *(_QWORD *)(v17 + 64) + 1;
  memcpy(v19, v20, v24);
LABEL_22:
  if (*(_DWORD *)(v17 + 84))
    v25 = *(_QWORD *)(v17 + 64);
  else
    v25 = *(_QWORD *)(v17 + 64) + 1;
  v26 = (uint64_t *)(((unint64_t)v19 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  v27 = (uint64_t *)(((unint64_t)v20 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
  v28 = v26[1];
  if ((v28 & 0x3000000000000000) == 0)
  {
    v29 = v27[1];
    if ((v29 & 0x3000000000000000) == 0)
    {
      v31 = *v26;
      *v26 = *v27;
      v26[1] = v29;
      sub_23AAAE53C(v31, v28);
      return a1;
    }
    sub_23AAAE53C(*v26, v28);
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
  return a1;
}

uint64_t sub_23AD206AC(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  BOOL v30;
  uint64_t v31;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(unsigned int *)(v3 + 84);
  v31 = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v31 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if ((_DWORD)v6)
    v7 = v6 - 1;
  else
    v7 = 0;
  if (v7 <= v4)
    v8 = v4;
  else
    v8 = v7;
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if ((_DWORD)v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = v12;
  if (v13 <= 0xB)
    v13 = 11;
  v14 = *(_QWORD *)(v5 + 64);
  if (!(_DWORD)v6)
    ++v14;
  v15 = *(_QWORD *)(v10 + 64);
  if (!(_DWORD)v11)
    ++v15;
  if (!a2)
    return 0;
  v16 = v9;
  v17 = *(unsigned __int8 *)(v5 + 80);
  v18 = *(_QWORD *)(v3 + 64) + v17;
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = v15 + 7;
  if (v13 < a2)
  {
    if (((((v20 + ((v14 + v19 + (v18 & ~v17)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v21 = 2;
    else
      v21 = a2 - v13 + 1;
    if (v21 >= 0x10000)
      v22 = 4;
    else
      v22 = 2;
    if (v21 < 0x100)
      v22 = 1;
    if (v21 >= 2)
      v23 = v22;
    else
      v23 = 0;
    __asm { BR              X4 }
  }
  if ((_DWORD)v4 == v13)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, v4, AssociatedTypeWitness);
  v25 = (v18 + a1) & ~v17;
  if (v7 != v13)
  {
    v27 = (v25 + v14 + v19) & ~v19;
    if (v12 != v13)
    {
      v28 = *(_QWORD *)(((v20 + v27) & 0xFFFFFFFFFFFFF8) + 8) >> 60;
      v29 = ((v28 >> 2) & 0xFFFFFFF3 | (4 * (v28 & 3))) ^ 0xF;
      if (v29 >= 0xC)
        v29 = -1;
      v30 = v29 + 1 >= 2;
      goto LABEL_46;
    }
    if (v11 >= 2)
    {
      v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v27, v11, v16);
      goto LABEL_45;
    }
    return 0;
  }
  if (v6 < 2)
    return 0;
  v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v25, v6, v31);
LABEL_45:
  v29 = v26 - 1;
  v30 = v26 >= 2;
LABEL_46:
  if (v30)
    return v29;
  else
    return 0;
}

void sub_23AD20958(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  unsigned int v22;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  if (v8 <= v5)
    v9 = v5;
  else
    v9 = v8;
  v10 = 0;
  v11 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v12 = *(_DWORD *)(v11 + 84);
  if (v12)
    v13 = v12 - 1;
  else
    v13 = 0;
  if (v13 <= v9)
    v14 = v9;
  else
    v14 = v13;
  if (v14 <= 0xB)
    v14 = 11;
  v15 = *(_QWORD *)(v6 + 64);
  if (!v7)
    ++v15;
  v16 = *(unsigned __int8 *)(v6 + 80);
  v18 = *(unsigned __int8 *)(v11 + 80);
  v19 = *(_QWORD *)(v11 + 64);
  if (!v12)
    ++v19;
  v17 = *(_QWORD *)(v4 + 64) + v16;
  if (v14 < a3)
  {
    if ((((_DWORD)v19 + 7 + (((_DWORD)v15 + (_DWORD)v18 + (v17 & ~(_DWORD)v16)) & ~(_DWORD)v18)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v20 = a3 - v14 + 1;
    else
      v20 = 2;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v10 = v21;
    else
      v10 = 0;
  }
  if (a2 > v14)
  {
    if ((((_DWORD)v19 + 7 + (((_DWORD)v15 + (_DWORD)v18 + (v17 & ~(_DWORD)v16)) & ~(_DWORD)v18)) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v22 = ~v14 + a2;
      bzero(a1, ((v19 + 7 + ((v15 + v18 + (v17 & ~v16)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v22;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X5 }
}

uint64_t sub_23AD20B34@<X0>(uint64_t result@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  _QWORD *v18;

  *(_BYTE *)(result + v15) = 0;
  if (a2)
  {
    if (v13 == v3)
    {
      v16 = *(uint64_t (**)(void))(v14 + 56);
      return v16();
    }
    v17 = (v8 + result) & v10;
    if (v11 == v3)
    {
      v16 = *(uint64_t (**)(void))(v12 + 56);
      return v16();
    }
    result = (v17 + v5 + v6) & v9;
    if (v4 == v3)
    {
      v16 = *(uint64_t (**)(void))(a3 + 56);
      return v16();
    }
    v18 = (_QWORD *)((v7 + result) & 0xFFFFFFFFFFFFFFF8);
    *v18 = 0;
    if (a2 > 0xB)
    {
      v18[1] = 0;
      *(_DWORD *)v18 = a2 - 12;
    }
    else
    {
      v18[1] = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_23AD20C34()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23AD20CC4(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *, uint64_t *, uint64_t);
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + 7;
  v8 = *(_DWORD *)(v5 + 80);
  if (v8 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 7 + ((v8 + 16 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    v12 = AssociatedTypeWitness;
    v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v13(a1, a2, AssociatedTypeWitness);
    v14 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v15;
    v14[1] = v15[1];
    v16 = ((unint64_t)v14 + v8 + 16) & ~v8;
    v17 = ((unint64_t)v15 + v8 + 16) & ~v8;
    swift_bridgeObjectRetain();
    v13((uint64_t *)v16, (uint64_t *)v17, v12);
    v18 = (v7 + v16) & 0xFFFFFFFFFFFFFFF8;
    v19 = (v7 + v17) & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_QWORD *)(v19 + 8);
    if ((v20 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
    }
    else
    {
      v21 = *(_QWORD *)v19;
      sub_23AAAE668(*(_QWORD *)v19, *(_QWORD *)(v19 + 8));
      *(_QWORD *)v18 = v21;
      *(_QWORD *)(v18 + 8) = v20;
    }
  }
  return a1;
}

uint64_t sub_23AD20E2C(unint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t (*v4)(unint64_t, uint64_t);
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t *v8;
  unint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  v4(a1, AssociatedTypeWitness);
  v5 = *(_QWORD *)(v3 + 64) + 7;
  swift_bridgeObjectRelease();
  v6 = (((v5 + a1) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  result = v4(v6, AssociatedTypeWitness);
  v8 = (uint64_t *)((v5 + v6) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  if ((v9 & 0x3000000000000000) == 0)
    return sub_23AAAE53C(*v8, v9);
  return result;
}

uint64_t sub_23AD20EF0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v6(a1, a2, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = ((unint64_t)v8 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v9 + v10 + 16) & ~v10;
  swift_bridgeObjectRetain();
  v6(v11, v12, AssociatedTypeWitness);
  v13 = (v7 + v11) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v7 + v12) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(v14 + 8);
  if ((v15 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
  }
  else
  {
    v16 = *(_QWORD *)v14;
    sub_23AAAE668(*(_QWORD *)v14, *(_QWORD *)(v14 + 8));
    *(_QWORD *)v13 = v16;
    *(_QWORD *)(v13 + 8) = v15;
  }
  return a1;
}

uint64_t sub_23AD20FEC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  v6(a1, a2, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = ((unint64_t)v8 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v9 + v10 + 16) & ~v10;
  v6(v11, v12, AssociatedTypeWitness);
  v13 = (uint64_t *)((v7 + v11) & 0xFFFFFFFFFFFFFFF8);
  v14 = (uint64_t *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
  v15 = v13[1];
  v16 = v14[1];
  v17 = v16 & 0x3000000000000000;
  if ((v15 & 0x3000000000000000) == 0)
  {
    if (!v17)
    {
      v20 = *v14;
      sub_23AAAE668(v20, v16);
      v21 = *v13;
      v22 = v13[1];
      *v13 = v20;
      v13[1] = v16;
      sub_23AAAE53C(v21, v22);
      return a1;
    }
    sub_23AAAE53C(*v13, v15);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    *(_OWORD *)v13 = *(_OWORD *)v14;
    return a1;
  }
  v18 = *v14;
  sub_23AAAE668(v18, v16);
  *v13 = v18;
  v13[1] = v16;
  return a1;
}

uint64_t sub_23AD21134(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v6(a1, a2, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  v8 = (_OWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_OWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = ((unint64_t)v8 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v9 + v10 + 16) & ~v10;
  v6(v11, v12, AssociatedTypeWitness);
  *(_OWORD *)((v7 + v11) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v7 + v12) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23AD21200(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  v6(a1, a2, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  v8 = (_QWORD *)((v7 + a1) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_QWORD *)((v7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRelease();
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = ((unint64_t)v8 + v10 + 16) & ~v10;
  v12 = ((unint64_t)v9 + v10 + 16) & ~v10;
  v6(v11, v12, AssociatedTypeWitness);
  v13 = (uint64_t *)((v7 + v11) & 0xFFFFFFFFFFFFFFF8);
  v14 = (uint64_t *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
  v15 = v13[1];
  if ((v15 & 0x3000000000000000) == 0)
  {
    v16 = v14[1];
    if ((v16 & 0x3000000000000000) == 0)
    {
      v18 = *v13;
      *v13 = *v14;
      v13[1] = v16;
      sub_23AAAE53C(v18, v15);
      return a1;
    }
    sub_23AAAE53C(*v13, v15);
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
  return a1;
}

uint64_t sub_23AD21318(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    if (((((v7
           + 7
           + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

void sub_23AD21478(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64)
         + 7
         + ((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v6 + 64)
       + 7
       + ((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64)+ 7+ ((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_23AD215A4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x23AD21620);
}

void sub_23AD215AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x23AD215B4);
  JUMPOUT(0x23AD21620);
}

void sub_23AD215FC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x23AD21620);
}

void sub_23AD21604()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x23AD21620);
}

uint64_t sub_23AD2160C@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v4 + v6) = 0;
  if (!(_DWORD)v5)
    goto LABEL_6;
  if (a1 < 0x7FFFFFFF)
  {
    if ((v5 & 0x80000000) != 0)
      JUMPOUT(0x23AD21618);
    *(_QWORD *)(((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (v5 - 1);
LABEL_6:
    JUMPOUT(0x23AD21620);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v4, v5);
}

uint64_t sub_23AD21638()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23AD216C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = AssociatedTypeWitness;
    v11 = ~v6;
    v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    v13 = (char *)a1 + v6;
    v14 = (char *)a2 + v6;
    v15 = (unint64_t)(v13 + 16) & v11;
    v16 = (unint64_t)(v14 + 16) & v11;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v17(v15, v16, v10);
  }
  return a1;
}

uint64_t sub_23AD217A0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
}

_QWORD *sub_23AD21800(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_23AD21894(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_OWORD *sub_23AD21928(_OWORD *a1, _OWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_QWORD *sub_23AD21998(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_23AD21A1C(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v12;
  int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (a2 <= v6)
    goto LABEL_24;
  v8 = ((v7 + 16) & ~v7) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v12 = ((a2 - v6 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_24;
      goto LABEL_15;
    }
    if (v12 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_24;
      goto LABEL_15;
    }
    if (v12 < 2)
    {
LABEL_24:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_24;
LABEL_15:
  v13 = (v10 - 1) << v9;
  if (v8 > 3)
    v13 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v14 = v8;
    else
      v14 = 4;
    __asm { BR              X12 }
  }
  return v6 + v13 + 1;
}

void sub_23AD21BA4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_23AD21DE4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23AD21E68(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)(v11 + 8);
    if ((v12 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)v10 = *(_OWORD *)v11;
    }
    else
    {
      v13 = *(_QWORD *)v11;
      sub_23AAAE668(*(_QWORD *)v11, *(_QWORD *)(v11 + 8));
      *(_QWORD *)v10 = v13;
      *(_QWORD *)(v10 + 8) = v12;
    }
  }
  return a1;
}

uint64_t sub_23AD21F58(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t result;
  uint64_t *v5;
  unint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v5 = (uint64_t *)((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  v6 = v5[1];
  if ((v6 & 0x3000000000000000) == 0)
    return sub_23AAAE53C(*v5, v6);
  return result;
}

uint64_t sub_23AD21FD4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(v8 + 8);
  if ((v9 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)v7 = *(_OWORD *)v8;
  }
  else
  {
    v10 = *(_QWORD *)v8;
    sub_23AAAE668(*(_QWORD *)v8, *(_QWORD *)(v8 + 8));
    *(_QWORD *)v7 = v10;
    *(_QWORD *)(v7 + 8) = v9;
  }
  return a1;
}

uint64_t sub_23AD22078(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v7[1];
  v10 = v8[1];
  v11 = v10 & 0x3000000000000000;
  if ((v9 & 0x3000000000000000) == 0)
  {
    if (!v11)
    {
      v14 = *v8;
      sub_23AAAE668(v14, v10);
      v15 = *v7;
      v16 = v7[1];
      *v7 = v14;
      v7[1] = v10;
      sub_23AAAE53C(v15, v16);
      return a1;
    }
    sub_23AAAE53C(*v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    *(_OWORD *)v7 = *(_OWORD *)v8;
    return a1;
  }
  v12 = *v8;
  sub_23AAAE668(v12, v10);
  *v7 = v12;
  v7[1] = v10;
  return a1;
}

uint64_t sub_23AD22154(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23AD221D4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v7[1];
  if ((v9 & 0x3000000000000000) == 0)
  {
    v10 = v8[1];
    if ((v10 & 0x3000000000000000) == 0)
    {
      v12 = *v7;
      *v7 = *v8;
      v7[1] = v10;
      sub_23AAAE53C(v12, v9);
      return a1;
    }
    sub_23AAAE53C(*v7, v9);
  }
  *(_OWORD *)v7 = *(_OWORD *)v8;
  return a1;
}

uint64_t sub_23AD22288(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v12;
  unsigned int v13;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xB)
    v6 = 11;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0xB)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8) >> 60;
  v13 = ((v12 >> 2) & 0xFFFFFFF3 | (4 * (v12 & 3))) ^ 0xF;
  if (v13 >= 0xC)
    v13 = -1;
  if (v13 + 1 >= 2)
    return v13;
  else
    return 0;
}

void sub_23AD223E0(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0xBu)
    v7 = 11;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_23AD224F4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x23AD22580);
}

void sub_23AD224FC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x23AD22504);
  JUMPOUT(0x23AD22580);
}

void sub_23AD22558()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x23AD22580);
}

void sub_23AD22560()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x23AD22580);
}

uint64_t sub_23AD22568@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v5 + v7) = 0;
  if (!(_DWORD)v6)
    goto LABEL_6;
  if (a1 < 0xB)
  {
    v3 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v6 > 0xB)
      JUMPOUT(0x23AD22574);
    *v3 = 0;
    v3[1] = (unint64_t)((4 * (v6 ^ 0xF)) | ((v6 ^ 0xF) >> 2)) << 60;
LABEL_6:
    JUMPOUT(0x23AD22580);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v5, v6);
}

uint64_t sub_23AD22598()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_23AD2268C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void (*v28)(unint64_t, unint64_t, uint64_t);
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void (*v33)(unint64_t, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v36;
  uint64_t AssociatedTypeWitness;
  uint64_t v38;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v38 = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(v38 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = v5;
  v7 = v3 + v5;
  v8 = (v3 + v6) & ~v6;
  v9 = *(_QWORD *)(v4 + 64);
  v10 = v9 + v5;
  v11 = (v9 + v6 + v8) & ~v6;
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v9 + v14;
  v16 = (v15 + v11) & ~v14;
  v17 = *(_QWORD *)(v13 + 64);
  v18 = v17 + v14;
  v19 = ((v17 + v14 + v16) & ~v14) + v17;
  v20 = (v5 | *(_BYTE *)(v2 + 80) | *(_BYTE *)(v13 + 80));
  if (v20 > 7 || ((v5 | *(_DWORD *)(v2 + 80) | *(_DWORD *)(v13 + 80)) & 0x100000) != 0 || v19 > 0x18)
  {
    v23 = *a2;
    *a1 = *a2;
    v34 = v23 + ((v20 + 16) & ~v20);
    swift_retain();
  }
  else
  {
    v24 = ~(unint64_t)v5;
    v25 = ~v14;
    v36 = v12;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 + 16))(a1, a2, AssociatedTypeWitness);
    v26 = ((unint64_t)a1 + v7) & ~v6;
    v27 = ((unint64_t)a2 + v7) & v24;
    v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 16);
    v28(v26, v27, v38);
    v29 = (v10 + v26) & v24;
    v30 = (v10 + v27) & v24;
    v28(v29, v30, v38);
    v31 = (v29 + v15) & v25;
    v32 = (v30 + v15) & v25;
    v33 = *(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16);
    v33(v31, v32, v36);
    v33((v18 + v31) & v25, (v18 + v32) & v25, v36);
    return a1;
  }
  return (uint64_t *)v34;
}

uint64_t sub_23AD22890(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v16)(uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + v7) & ~v7;
  v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v8, v5);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = (v10 + v7 + v8) & ~v7;
  v9(v11, v5);
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16((v11 + v10 + v14) & ~v14, v12);
  return ((uint64_t (*)(uint64_t, uint64_t))v16)((*(_QWORD *)(v13 + 64) + v14 + ((v11 + v10 + v14) & ~v14)) & ~v14, v12);
}

uint64_t sub_23AD229D0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v13(v11, v12, v7);
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (v14 + v9 + v11) & ~v9;
  v16 = (v14 + v9 + v12) & ~v9;
  v13(v15, v16, v7);
  v17 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v14 + v19 + v16) & ~v19;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v21((v14 + v19 + v15) & ~v19, v20, v17);
  v21((*(_QWORD *)(v18 + 64) + v19 + ((v14 + v19 + v15) & ~v19)) & ~v19, (*(_QWORD *)(v18 + 64) + v19 + v20) & ~v19, v17);
  return a1;
}

uint64_t sub_23AD22B40(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  v13(v11, v12, v7);
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (v14 + v9 + v11) & ~v9;
  v16 = (v14 + v9 + v12) & ~v9;
  v13(v15, v16, v7);
  v17 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v14 + v19 + v16) & ~v19;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 24);
  v21((v14 + v19 + v15) & ~v19, v20, v17);
  v21((*(_QWORD *)(v18 + 64) + v19 + ((v14 + v19 + v15) & ~v19)) & ~v19, (*(_QWORD *)(v18 + 64) + v19 + v20) & ~v19, v17);
  return a1;
}

uint64_t sub_23AD22CB0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v13(v11, v12, v7);
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (v14 + v9 + v11) & ~v9;
  v16 = (v14 + v9 + v12) & ~v9;
  v13(v15, v16, v7);
  v17 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v14 + v19 + v16) & ~v19;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
  v21((v14 + v19 + v15) & ~v19, v20, v17);
  v21((*(_QWORD *)(v18 + 64) + v19 + ((v14 + v19 + v15) & ~v19)) & ~v19, (*(_QWORD *)(v18 + 64) + v19 + v20) & ~v19, v17);
  return a1;
}

uint64_t sub_23AD22E20(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  v13(v11, v12, v7);
  v14 = *(_QWORD *)(v8 + 64);
  v15 = (v14 + v9 + v11) & ~v9;
  v16 = (v14 + v9 + v12) & ~v9;
  v13(v15, v16, v7);
  v17 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v14 + v19 + v16) & ~v19;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
  v21((v14 + v19 + v15) & ~v19, v20, v17);
  v21((*(_QWORD *)(v18 + 64) + v19 + ((v14 + v19 + v15) & ~v19)) & ~v19, (*(_QWORD *)(v18 + 64) + v19 + v20) & ~v19, v17);
  return a1;
}

uint64_t sub_23AD22F90(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(unsigned int *)(v4 + 84);
  v29 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v29 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= v5)
    v8 = v5;
  else
    v8 = *(_DWORD *)(v6 + 84);
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (!a2)
    return 0;
  v13 = v9;
  v14 = *(unsigned __int8 *)(v6 + 80);
  v15 = *(_QWORD *)(v4 + 64) + v14;
  v16 = *(_QWORD *)(v6 + 64);
  v17 = v16 + v14;
  v18 = *(unsigned __int8 *)(v10 + 80);
  v19 = v16 + v18;
  if (a2 <= v12)
    goto LABEL_26;
  v20 = ((*(_QWORD *)(v10 + 64) + v18 + ((v19 + ((v17 + (v15 & ~v14)) & ~v14)) & ~v18)) & ~v18) + *(_QWORD *)(v10 + 64);
  v21 = 8 * v20;
  if (v20 <= 3)
  {
    v23 = ((a2 - v12 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v23))
    {
      v22 = *(_DWORD *)(a1 + v20);
      if (!v22)
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v23 > 0xFF)
    {
      v22 = *(unsigned __int16 *)(a1 + v20);
      if (!*(_WORD *)(a1 + v20))
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v23 < 2)
    {
LABEL_26:
      if (v12)
      {
        if ((_DWORD)v5 == v12)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v5, AssociatedTypeWitness);
        v26 = ~v14;
        v27 = (v15 + a1) & v26;
        if ((_DWORD)v7 == v12)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v27, v7, v29);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))((v19 + ((v17 + v27) & v26)) & ~v18, v11, v13);
      }
      return 0;
    }
  }
  v22 = *(unsigned __int8 *)(a1 + v20);
  if (!*(_BYTE *)(a1 + v20))
    goto LABEL_26;
LABEL_17:
  v24 = (v22 - 1) << v21;
  if (v20 > 3)
    v24 = 0;
  if ((_DWORD)v20)
  {
    if (v20 <= 3)
      v25 = v20;
    else
      v25 = 4;
    __asm { BR              X12 }
  }
  return v12 + v24 + 1;
}

void sub_23AD23210(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  _BYTE *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v5 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v7 + 84) <= v6)
    v8 = v6;
  else
    v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(unsigned __int8 *)(v7 + 80);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = ((*(_QWORD *)(v9 + 64)
        + v12
        + ((*(_QWORD *)(v7 + 64) + v12 + ((*(_QWORD *)(v7 + 64) + v11 + ((*(_QWORD *)(v5 + 64) + v11) & ~v11)) & ~v11)) & ~v12)) & ~v12)
      + *(_QWORD *)(v9 + 64);
  if (a3 <= v10)
  {
    v16 = 0;
    v14 = a1;
    v15 = a2;
  }
  else
  {
    v14 = a1;
    v15 = a2;
    if (v13 <= 3)
    {
      v18 = ((a3 - v10 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
      if (HIWORD(v18))
      {
        v16 = 4u;
      }
      else if (v18 >= 0x100)
      {
        v16 = 2;
      }
      else
      {
        v16 = v18 > 1;
      }
    }
    else
    {
      v16 = 1u;
    }
  }
  if (v10 < v15)
  {
    v17 = ~v10 + v15;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v19 = v17 & ~(-1 << (8 * v13));
        bzero(v14, v13);
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)v14 = v19;
          v14[2] = BYTE2(v19);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)v14 = v19;
        }
        else
        {
          *v14 = v19;
        }
      }
    }
    else
    {
      bzero(v14, v13);
      *(_DWORD *)v14 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

uint64_t sub_23AD23510()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  unint64_t v2;
  uint64_t result;
  unint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = v1;
  result = sub_23B1C6C98();
  if (v4 <= 0x3F)
  {
    if (v2 > 0x3F)
    {
      return AssociatedTypeWitness;
    }
    else
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23AD235C8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  unint64_t v11;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, uint64_t *, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = v6 + 1;
  v8 = *(_DWORD *)(v5 + 80);
  v9 = ~v8;
  v10 = v7 + v8;
  v11 = ((v7 + v8) & v9) + v6;
  if (v8 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    v15 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v7);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v10) & v9, ((unint64_t)a2 + v10) & v9, v15);
    }
    else
    {
      v16 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
      v16(a1, a2, v15);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v15);
      v16((uint64_t *)(((unint64_t)a1 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v15);
    }
  }
  return a1;
}

uint64_t sub_23AD236F0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  int v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness);
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  if (!v4)
  {
    v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v5(a1, AssociatedTypeWitness);
    v5 = v8;
  }
  v6 = *(_QWORD *)(v3 + 64) + a1;
  if (!*(_DWORD *)(v3 + 84))
    ++v6;
  return ((uint64_t (*)(unint64_t, uint64_t))v5)((v6 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80), AssociatedTypeWitness);
}

void *sub_23AD23798(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  void (*v9)(void *, const void *, uint64_t);
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = *(_QWORD *)(v5 + 64);
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
    v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
  }
  else
  {
    v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
    v9(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v10 = v7;
  else
    v10 = v7 + 1;
  v9((void *)(((unint64_t)a1 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (const void *)(((unint64_t)a2 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), AssociatedTypeWitness);
  return a1;
}

void *sub_23AD23890(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_23AD239C4(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  void (*v9)(void *, const void *, uint64_t);
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
    if (v6)
      v8 = *(_QWORD *)(v5 + 64);
    else
      v8 = v7 + 1;
    memcpy(a1, a2, v8);
    v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 32);
  }
  else
  {
    v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 32);
    v9(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    v6 = *(_DWORD *)(v5 + 84);
    v7 = *(_QWORD *)(v5 + 64);
  }
  if (v6)
    v10 = v7;
  else
    v10 = v7 + 1;
  v9((void *)(((unint64_t)a1 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (const void *)(((unint64_t)a2 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), AssociatedTypeWitness);
  return a1;
}

void *sub_23AD23ABC(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, AssociatedTypeWitness);
  v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v10 = *(_QWORD *)(v5 + 64);
  else
    v10 = *(_QWORD *)(v5 + 64) + 1;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40))(((unint64_t)a1 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_23AD23BF0(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  unsigned int v17;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = v7 + v8;
  if (v5)
    v10 = v7 + v8;
  else
    v10 = v9 + 1;
  if (!a2)
    return 0;
  if (a2 <= v5)
    goto LABEL_26;
  v11 = (v10 & ~v8) + v7;
  v12 = 8 * v11;
  if (v11 <= 3)
  {
    v14 = ((a2 - v5 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v14))
    {
      v13 = *(_DWORD *)(a1 + v11);
      if (!v13)
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v14 > 0xFF)
    {
      v13 = *(unsigned __int16 *)(a1 + v11);
      if (!*(_WORD *)(a1 + v11))
        goto LABEL_26;
      goto LABEL_17;
    }
    if (v14 < 2)
    {
LABEL_26:
      if (v5)
      {
        if (v6 != v5)
          return (*(uint64_t (**)(uint64_t))(v4 + 48))((v9 + a1) & ~v8);
        v17 = (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
        if (v17 >= 2)
          return v17 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v13 = *(unsigned __int8 *)(a1 + v11);
  if (!*(_BYTE *)(a1 + v11))
    goto LABEL_26;
LABEL_17:
  v15 = (v13 - 1) << v12;
  if (v11 > 3)
    v15 = 0;
  if ((_DWORD)v11)
  {
    if (v11 <= 3)
      v16 = v11;
    else
      v16 = 4;
    __asm { BR              X11 }
  }
  return v5 + v15 + 1;
}

void sub_23AD23D84(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = 0;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(v7 + 64);
  if (v8)
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = v9 + 1;
  v11 = ((v10 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v9;
  if (a3 > v8)
  {
    if (v11 > 3)
    {
      v6 = 1u;
      if (v8 >= a2)
LABEL_20:
        __asm { BR              X14 }
LABEL_13:
      v13 = ~v8 + a2;
      if (v11 < 4)
      {
        if ((_DWORD)v11)
        {
          v14 = v13 & ~(-1 << (8 * v11));
          bzero(a1, v11);
          if ((_DWORD)v11 == 3)
          {
            *(_WORD *)a1 = v14;
            a1[2] = BYTE2(v14);
          }
          else if ((_DWORD)v11 == 2)
          {
            *(_WORD *)a1 = v14;
          }
          else
          {
            *a1 = v14;
          }
        }
      }
      else
      {
        bzero(a1, v11);
        *(_DWORD *)a1 = v13;
      }
      __asm { BR              X10 }
    }
    v12 = ((a3 - v8 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v12))
    {
      v6 = 4u;
      if (v8 >= a2)
        goto LABEL_20;
      goto LABEL_13;
    }
    if (v12 >= 0x100)
      v6 = 2;
    else
      v6 = v12 > 1;
  }
  if (v8 >= a2)
    goto LABEL_20;
  goto LABEL_13;
}

void sub_23AD23F74()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23AD23F7C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_23AD23FC4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23AD24040(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t *, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  v8 = ~v7;
  v9 = v6 + v7;
  v10 = ((v6 + v7) & ~v7) + v6;
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v10 > 0x18)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    v14 = AssociatedTypeWitness;
    v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v15(a1, a2, AssociatedTypeWitness);
    v15((uint64_t *)(((unint64_t)a1 + v9) & v8), (uint64_t *)(((unint64_t)a2 + v9) & v8), v14);
  }
  return a1;
}

uint64_t sub_23AD24110(unint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t (*v5)(unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  v5(a1, AssociatedTypeWitness);
  return v5((*(_QWORD *)(v3 + 64) + a1 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80), AssociatedTypeWitness);
}

unint64_t sub_23AD24198(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_23AD24228(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_23AD242B8(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_23AD24348(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_23AD243D8(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_23AD24528(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_23AD2470C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23AD24788(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7 && *(_QWORD *)(v5 + 64) <= 0x18uLL && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_23AD2481C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t sub_23AD24868(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_23AD248C0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_23AD24918(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_23AD24970(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_23AD249C8(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_23AD24B08(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_23AD24CDC()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD24CEC()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD24CFC()
{
  JUMPOUT(0x23B8613CCLL);
}

uint64_t sub_23AD24D0C(uint64_t a1, uint64_t a2, char a3, char a4, void (*a5)(void), uint64_t *a6, uint64_t *a7)
{
  _QWORD *v7;
  _QWORD **v11;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v11 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_23AA97254(a2, a3);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v11;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7];
        v25 = __swift_instantiateConcreteTypeFromMangledName(a6);
        return sub_23AA8A660(a1, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a6);
      }
      return sub_23AD27A4C(v17, a2, a3, a1, v23, a6);
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    sub_23AD105EC(v20, a4 & 1, a6, a7);
    v27 = sub_23AA97254(a2, a3);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v11;
      if ((v21 & 1) != 0)
        goto LABEL_8;
      return sub_23AD27A4C(v17, a2, a3, a1, v23, a6);
    }
  }
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD24E58(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23AAB567C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
        return sub_23AA8A660(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, &qword_2542E6A10);
      }
      return sub_23AD27AE8(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23B186DDC();
      goto LABEL_7;
    }
    sub_23AD10978(v13, a3 & 1);
    v20 = sub_23AAB567C(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_23AD27AE8(v10, a2, a1, v16);
    }
  }
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD24F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_23AAAF4C4(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_23B1871D4();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23AD10CAC(v17, a5 & 1);
  v23 = sub_23AAAF4C4(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

_OWORD *sub_23AD250F8(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23ACD5A68(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_23AAA159C(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23B187398();
      goto LABEL_7;
    }
    sub_23AD11330(v13, a3 & 1);
    v19 = sub_23ACD5A68(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23ACEBF78(a2, (uint64_t)v21);
      return sub_23AD27B80(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_23B1C7418();
  __break(1u);
  return result;
}

id sub_23AD25230(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_23AA88CF8(a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_23B187724();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];
      result = (id)swift_bridgeObjectRelease();
      *(_QWORD *)(v16 + 8 * v9) = a1;
      return result;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v20 = 8 * v9;
    *(_QWORD *)(v15[6] + v20) = a2;
    *(_QWORD *)(v15[7] + v20) = a1;
    v21 = v15[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v15[2] = v23;
      return a2;
    }
    goto LABEL_14;
  }
  sub_23AD11918(v12, a3 & 1);
  v18 = sub_23AA88CF8(a2);
  if ((v13 & 1) == (v19 & 1))
  {
    v9 = v18;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for NSFileProviderItemIdentifier(0);
  result = (id)sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD25380(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_23AD25E6C(a1, a2, a3, a4, (uint64_t (*)(void))sub_23B1878CC, &qword_2569E1AC0);
}

void sub_23AD25394(uint64_t a1, void *a2, char a3)
{
  sub_23AD2565C(a1, a2, a3, (void (*)(void))sub_23B1878D8, (uint64_t *)&unk_2569E1D40);
}

void sub_23AD253A8(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_23AA88CF8(a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_23B1878E4();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];

      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_23AD11C4C(v12, a3 & 1);
  v17 = sub_23AA88CF8(a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for NSFileProviderItemIdentifier(0);
  sub_23B1C7418();
  __break(1u);
}

uint64_t sub_23AD254F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23AAAF4C4(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_23B187A8C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23AD11F68(result, a4 & 1);
  result = sub_23AAAF4C4(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23AD25648(uint64_t a1, void *a2, char a3)
{
  sub_23AD2565C(a1, a2, a3, (void (*)(void))sub_23B187C38, &qword_2569E40E8);
}

void sub_23AD2565C(uint64_t a1, void *a2, char a3, void (*a4)(void), uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  id v27;

  v8 = v5;
  v11 = *v5;
  v13 = sub_23AA88CF8(a2);
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v17 = v12;
  v18 = *(_QWORD *)(v11 + 24);
  if (v18 >= v16 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    v19 = (_QWORD *)*v8;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];

      *(_QWORD *)(v20 + 8 * v13) = a1;
      return;
    }
LABEL_11:
    v19[(v13 >> 6) + 8] |= 1 << v13;
    v23 = 8 * v13;
    *(_QWORD *)(v19[6] + v23) = a2;
    *(_QWORD *)(v19[7] + v23) = a1;
    v24 = v19[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v19[2] = v26;
      v27 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_23AD12270(v16, a3 & 1, a5);
  v21 = sub_23AA88CF8(a2);
  if ((v17 & 1) == (v22 & 1))
  {
    v13 = v21;
    v19 = (_QWORD *)*v8;
    if ((v17 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for NSFileProviderItemIdentifier(0);
  sub_23B1C7418();
  __break(1u);
}

uint64_t sub_23AD257C4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_23ACD5B98(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = v11[3];
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v19 = *v4;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v20 = v19[7];
        v21 = sub_23B1C5BDC();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v13, a1, v21);
      }
      goto LABEL_11;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_23B18802C();
      goto LABEL_7;
    }
    sub_23AD12944(v16, a3 & 1);
    v23 = sub_23ACD5B98(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      v19 = *v4;
      if ((v17 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23AA907B0(a2, (uint64_t)v10, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
      return sub_23AD27C40(v13, (uint64_t)v10, a1, v19);
    }
  }
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD2594C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_23ACD5C3C(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      result = swift_release();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_23B187DE0();
    goto LABEL_7;
  }
  sub_23AD12598(v16, a3 & 1);
  v22 = sub_23ACD5C3C(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_23B1C7418();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_23AA907B0(a2, (uint64_t)v10, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
  return sub_23AD27CF8(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_23AD25AA8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_23AA97254(a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= result && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7] + 24 * v16;
        *(_QWORD *)v23 = a1;
        *(_BYTE *)(v23 + 8) = a2 & 1;
        *(_QWORD *)(v23 + 16) = a3;
        return result;
      }
      return sub_23AD27D90(v16, a4, a5, a1, a2 & 1, a3, v22);
    }
    if (v21 >= result && (a6 & 1) == 0)
    {
      result = (uint64_t)sub_23B1882F8();
      goto LABEL_7;
    }
    sub_23AD12D64(result, a6 & 1);
    result = sub_23AA97254(a4, a5);
    if ((v20 & 1) == (v24 & 1))
    {
      v16 = result;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
      return sub_23AD27D90(v16, a4, a5, a1, a2 & 1, a3, v22);
    }
  }
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

id sub_23AD25BFC(uint64_t a1, char a2, uint64_t a3, void *a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  id result;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;

  v6 = (_QWORD **)v5;
  v11 = (_QWORD *)*v5;
  v13 = sub_23AA88CF8(a4);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  result = (id)(v14 + v15);
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = v11[3];
    if (v18 >= (uint64_t)result && (a5 & 1) != 0)
    {
LABEL_7:
      v19 = *v6;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v20 = v19[7] + 24 * v13;
        *(_QWORD *)v20 = a1;
        *(_BYTE *)(v20 + 8) = a2 & 1;
        *(_QWORD *)(v20 + 16) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v18 >= (uint64_t)result && (a5 & 1) == 0)
    {
      result = sub_23B1884B4();
      goto LABEL_7;
    }
    sub_23AD130AC((uint64_t)result, a5 & 1);
    result = (id)sub_23AA88CF8(a4);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = (unint64_t)result;
      v19 = *v6;
      if ((v17 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23AD27DF0(v13, (uint64_t)a4, a1, a2 & 1, a3, v19);
      return a4;
    }
  }
  type metadata accessor for NSFileProviderItemIdentifier(0);
  result = (id)sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD25D3C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_23ACD5CDC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = v17 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for SyncState() - 8) + 72) * v10;
        return sub_23AD28694(a1, v18);
      }
      return sub_23AD27E48(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_23B188674();
      goto LABEL_7;
    }
    sub_23AD133EC(v13, a3 & 1);
    v20 = sub_23ACD5CDC(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_23AD27E48(v10, a2, a1, v16);
    }
  }
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD25E58(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_23AD25E6C(a1, a2, a3, a4, (uint64_t (*)(void))sub_23B1891E8, &qword_2569E1AB8);
}

uint64_t sub_23AD25E6C(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t (*a5)(void), uint64_t *a6)
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v9 = v6;
  v14 = *v6;
  v16 = sub_23AA97254(a2, a3);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v21 >= result && (a4 & 1) == 0)
  {
    result = a5();
LABEL_7:
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v25 = v22[6] + 16 * v16;
    *(_QWORD *)v25 = a2;
    *(_BYTE *)(v25 + 8) = a3;
    *(_QWORD *)(v22[7] + 8 * v16) = a1;
    v26 = v22[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v22[2] = v28;
      return result;
    }
    goto LABEL_14;
  }
  sub_23AD199D8(result, a4 & 1, a6);
  result = sub_23AA97254(a2, a3);
  if ((v20 & 1) == (v24 & 1))
  {
    v16 = result;
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

id sub_23AD25FC8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, char a7)
{
  _QWORD *v7;
  _QWORD **v8;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  id result;
  unint64_t v26;
  char v27;

  v8 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_23ACD5FA0((uint64_t)a3, (uint64_t)a4, (uint64_t)a5, a6);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a7 & 1) != 0)
    {
LABEL_7:
      v23 = *v8;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = (uint64_t *)(v23[7] + 16 * v17);
        result = (id)swift_bridgeObjectRelease();
        *v24 = a1;
        v24[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a7 & 1) == 0)
    {
      sub_23B1893C0();
      goto LABEL_7;
    }
    sub_23AD15610(v20, a7 & 1);
    v26 = sub_23ACD5FA0((uint64_t)a3, (uint64_t)a4, (uint64_t)a5, a6);
    if ((v21 & 1) == (v27 & 1))
    {
      v17 = v26;
      v23 = *v8;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23AD27ED8(v17, (uint64_t)a3, (uint64_t)a4, (uint64_t)a5, a6, a1, a2, v23);
      return sub_23AAFA44C(a3, a4, a5, a6);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6520);
  result = (id)sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD26148(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23ACD6024(a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (uint64_t *)(v18[7] + 16 * v12);
        result = swift_bridgeObjectRelease();
        *v19 = a1;
        v19[1] = a2;
        return result;
      }
      return sub_23AD27F2C(v12, a3, a1, a2, v18);
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_23B18958C();
      goto LABEL_7;
    }
    sub_23AD15948(v15, a4 & 1);
    v21 = sub_23ACD6024(a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      return sub_23AD27F2C(v12, a3, a1, a2, v18);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E05B0);
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23AD26268(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_23AA88CF8(a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_23B189910();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];

      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_23AD16060(v12, a3 & 1);
  v17 = sub_23AA88CF8(a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for NSFileProviderItemIdentifier(0);
  sub_23B1C7418();
  __break(1u);
}

_OWORD *sub_23AD263B8(_OWORD *a1, void *a2, char a3)
{
  return sub_23AAB5748(a1, a2, a3, (uint64_t (*)(void *))sub_23AA88CF8, (void (*)(void))sub_23B189C80, qword_2569E4100, type metadata accessor for FileAttributeKey);
}

uint64_t sub_23AD263DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), uint64_t (*a6)(_QWORD), uint64_t *a7)
{
  _QWORD *v7;
  _QWORD **v11;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v11 = (_QWORD **)v7;
  v15 = (_QWORD *)*v7;
  v17 = sub_23AAAF4C4(a2, a3);
  v18 = v15[2];
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = v15[3];
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v11;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = v23[7];
        v25 = a6(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a1, v25);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    sub_23AD1664C(v20, a4 & 1, a6, a7);
    v27 = sub_23AAAF4C4(a2, a3);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v11;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23AD27FB8(v17, a2, a3, a1, v23, a6);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD26548(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_23ACD5CF0(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_23B188FA8();
    goto LABEL_7;
  }
  sub_23AD15054(v16, a3 & 1);
  v22 = sub_23ACD5CF0(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_23B1C7418();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_23AA8EFC8(a2, (uint64_t)v10, &qword_2542DDDB0);
  return sub_23AD28048(v13, (uint64_t)v10, a1, v19);
}

void sub_23AD266A8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;

  v4 = (_QWORD **)v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_23ACD5CF0(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];

      *(_QWORD *)(v20 + 8 * v13) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_23B18A138();
    goto LABEL_7;
  }
  sub_23AD16C0C(v16, a3 & 1);
  v21 = sub_23ACD5CF0(a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_14:
    sub_23B1C7418();
    __break(1u);
    return;
  }
  v13 = v21;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_23AA8EFC8(a2, (uint64_t)v10, &qword_2542DDDB0);
  sub_23AD28048(v13, (uint64_t)v10, a1, v19);
}

void sub_23AD26808(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_23AD26830(a1, a2, a3, a4, (void (*)(void))sub_23B18A520, &qword_2569E1CF0);
}

void sub_23AD2681C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_23AD26830(a1, a2, a3, a4, (void (*)(void))sub_23B18A6E0, (uint64_t *)&unk_2569E1B50);
}

void sub_23AD26830(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), uint64_t *a6)
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v9 = v6;
  v14 = *v6;
  v16 = sub_23AAAF4C4(a2, a3);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = v22[7];

      *(_QWORD *)(v23 + 8 * v16) = a1;
      return;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v26 = (uint64_t *)(v22[6] + 16 * v16);
    *v26 = a2;
    v26[1] = a3;
    *(_QWORD *)(v22[7] + 8 * v16) = a1;
    v27 = v22[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v22[2] = v29;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_23AD17460(v19, a4 & 1, a6);
  v24 = sub_23AAAF4C4(a2, a3);
  if ((v20 & 1) == (v25 & 1))
  {
    v16 = v24;
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_23B1C7418();
  __break(1u);
}

id sub_23AD269A4(uint64_t a1, void *a2, char a3)
{
  return sub_23AD269B8(a1, a2, a3, (void (*)(void))sub_23B18A894, &qword_2542DF3E8);
}

id sub_23AD269B8(uint64_t a1, void *a2, char a3, void (*a4)(void), uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id result;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v8 = v5;
  v11 = *v5;
  v13 = sub_23AA88CF8(a2);
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v17 = v12;
  v18 = *(_QWORD *)(v11 + 24);
  if (v18 >= v16 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    v19 = (_QWORD *)*v8;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      result = (id)swift_release();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return result;
    }
LABEL_11:
    v19[(v13 >> 6) + 8] |= 1 << v13;
    v24 = 8 * v13;
    *(_QWORD *)(v19[6] + v24) = a2;
    *(_QWORD *)(v19[7] + v24) = a1;
    v25 = v19[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v19[2] = v27;
      return a2;
    }
    goto LABEL_14;
  }
  sub_23AD17768(v16, a3 & 1, a5);
  v22 = sub_23AA88CF8(a2);
  if ((v17 & 1) == (v23 & 1))
  {
    v13 = v22;
    v19 = (_QWORD *)*v8;
    if ((v17 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for FPProviderDomainID(0);
  result = (id)sub_23B1C7418();
  __break(1u);
  return result;
}

id sub_23AD26B20(uint64_t a1, void *a2, char a3)
{
  return sub_23AD269B8(a1, a2, a3, (void (*)(void))sub_23B18A8A0, &qword_2542DF3D0);
}

id sub_23AD26B34(uint64_t a1, void *a2, char a3)
{
  return sub_23AD269B8(a1, a2, a3, (void (*)(void))sub_23B18A8AC, (uint64_t *)&unk_2542DF3D8);
}

id sub_23AD26B48(uint64_t a1, void *a2, char a3)
{
  return sub_23AD269B8(a1, a2, a3, (void (*)(void))sub_23B18A8B8, (uint64_t *)&unk_2542DF3C0);
}

uint64_t sub_23AD26B5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23AAAF4C4(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23B18AA64();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23AD17A80(v15, a4 & 1);
  v21 = sub_23AAAF4C4(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD26CB8(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_23AAAF4C4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_1(v19);
        return sub_23ABD76F0(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_23B18AC18();
      goto LABEL_7;
    }
    sub_23AD17DA8(v15, a4 & 1, &qword_2542DF3A0, (void (*)(uint64_t, _BYTE *))sub_23ABD76F0);
    v21 = sub_23AAAF4C4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_23AD28130(v12, a2, a3, (uint64_t)a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD26DFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_23AD26E10(a1, a2, a3, a4, (uint64_t (*)(void))sub_23B18AE24, (uint64_t *)&unk_2542DF3A8);
}

uint64_t sub_23AD26E10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(void), uint64_t *a6)
{
  _QWORD *v6;
  _QWORD *v9;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v9 = v6;
  v14 = *v6;
  v16 = sub_23AAAF4C4(a2, a3);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v20 = v15;
  v21 = *(_QWORD *)(v14 + 24);
  if (v21 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v21 >= result && (a4 & 1) == 0)
  {
    result = a5();
LABEL_7:
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v22[7] + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    v24 = (uint64_t *)(v22[6] + 16 * v16);
    *v24 = a2;
    v24[1] = a3;
    *(_QWORD *)(v22[7] + 8 * v16) = a1;
    v25 = v22[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v22[2] = v27;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_23AD180D4(result, a4 & 1, a6);
  result = sub_23AAAF4C4(a2, a3);
  if ((v20 & 1) == (v23 & 1))
  {
    v16 = result;
    v22 = (_QWORD *)*v9;
    if ((v20 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23AD26F78(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23AAAF4C4(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23B18A52C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_23AD1714C(v15, a4 & 1);
  v20 = sub_23AAAF4C4(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_23B1C7418();
  __break(1u);
}

uint64_t sub_23AD270D4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t result;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v8 = v7;
  v15 = *v7;
  v17 = sub_23AA97254(a5, a6);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  result = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v21 = v16;
  v22 = *(_QWORD *)(v15 + 24);
  if (v22 >= result && (a7 & 1) != 0)
    goto LABEL_7;
  if (v22 >= result && (a7 & 1) == 0)
  {
    result = (uint64_t)sub_23B18B3E0();
LABEL_7:
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
    {
LABEL_8:
      v24 = v23[7] + 32 * v17;
      result = swift_bridgeObjectRelease();
      *(_QWORD *)v24 = a1;
      *(_BYTE *)(v24 + 8) = a2;
      *(_QWORD *)(v24 + 16) = a3;
      *(_QWORD *)(v24 + 24) = a4;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    v26 = v23[6] + 16 * v17;
    *(_QWORD *)v26 = a5;
    *(_BYTE *)(v26 + 8) = a6;
    v27 = v23[7] + 32 * v17;
    *(_QWORD *)v27 = a1;
    *(_BYTE *)(v27 + 8) = a2;
    *(_QWORD *)(v27 + 16) = a3;
    *(_QWORD *)(v27 + 24) = a4;
    v28 = v23[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v23[2] = v30;
      return result;
    }
    goto LABEL_14;
  }
  sub_23AD18C98(result, a7 & 1);
  result = sub_23AA97254(a5, a6);
  if ((v21 & 1) == (v25 & 1))
  {
    v17 = result;
    v23 = (_QWORD *)*v8;
    if ((v21 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD27254(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_23B1C5A08();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23ACD625C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_23B18B7C4();
    goto LABEL_7;
  }
  sub_23AD18FF0(result, a3 & 1);
  result = sub_23ACD625C(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_23B1C7418();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_23AD281F0(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_23AD273A4(_OWORD *a1, void *a2, char a3)
{
  return sub_23AAB5748(a1, a2, a3, (uint64_t (*)(void *))sub_23AA88CF8, (void (*)(void))sub_23B18B9E8, &qword_2569E40F8, type metadata accessor for FPDiagnosticAttributeKey);
}

void sub_23AD273C8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23AA97254(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_23B18BBB0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = v18[6] + 16 * v12;
    *(_QWORD *)v22 = a2;
    *(_BYTE *)(v22 + 8) = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_23AD196A4(v15, a4 & 1);
  v20 = sub_23AA97254(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_23B1C7418();
  __break(1u);
}

uint64_t sub_23AD27510(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_23AD25E6C(a1, a2, a3, a4, (uint64_t (*)(void))sub_23B18BD64, &qword_2569E1C78);
}

uint64_t sub_23AD27524(uint64_t a1, uint64_t a2, char a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_23AA97254(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_23B18BF1C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = v18[6] + 16 * v12;
    *(_QWORD *)v20 = a2;
    *(_BYTE *)(v20 + 8) = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_23AD19D04(result, a4 & 1);
  result = sub_23AA97254(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23AD27660(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C74A8();
  sub_23AA8EFC8(a1, (uint64_t)v15, &qword_2542DDDB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23AA724E8((uint64_t)v15, (uint64_t)v8, &qword_2542E1608);
    sub_23B1C74B4();
    sub_23B14B2C8();
    v16 = (uint64_t)v8;
    v17 = &qword_2542E1608;
  }
  else
  {
    sub_23AA724E8((uint64_t)v15, (uint64_t)v11, &qword_2542E1600);
    sub_23B1C74B4();
    sub_23B14AE68();
    v16 = (uint64_t)v11;
    v17 = &qword_2542E1600;
  }
  sub_23AA8A05C(v16, v17);
  sub_23B1C74E4();
  v18 = sub_23B1C6E0C();
  *(_QWORD *)((char *)a3 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v18;
  result = sub_23AA724E8(a1, a3[6] + *(_QWORD *)(v13 + 72) * v18, &qword_2542DDDB0);
  *(_QWORD *)(a3[7] + 8 * v18) = a2;
  ++a3[2];
  return result;
}

_OWORD *sub_23AD2787C(unsigned __int8 a1, _OWORD *a2, _QWORD *a3)
{
  unint64_t v6;
  _OWORD *result;

  sub_23B1C74A8();
  switch(a1)
  {
    case 0x1Cu:
    case 0x1Du:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
    case 0x21u:
    case 0x22u:
      sub_23B1C74B4();
      break;
    default:
      sub_23B1C74B4();
      sub_23AAB0660(a1);
      sub_23B1C64A0();
      swift_bridgeObjectRelease();
      break;
  }
  sub_23B1C74E4();
  v6 = sub_23B1C6E0C();
  *(_QWORD *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  *(_BYTE *)(a3[6] + v6) = a1;
  result = sub_23AAA159C(a2, (_OWORD *)(a3[7] + 32 * v6));
  ++a3[2];
  return result;
}

_OWORD *sub_23AD279D8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_23AAA159C(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_23AD27A40(unint64_t a1, uint64_t a2, char a3, uint64_t a4, _QWORD *a5)
{
  return sub_23AD27A4C(a1, a2, a3, a4, a5, &qword_2542E6C80);
}

uint64_t sub_23AD27A4C(unint64_t a1, uint64_t a2, char a3, uint64_t a4, _QWORD *a5, uint64_t *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6] + 16 * a1;
  *(_QWORD *)v10 = a2;
  *(_BYTE *)(v10 + 8) = a3;
  v11 = a5[7];
  v12 = __swift_instantiateConcreteTypeFromMangledName(a6);
  result = sub_23AA724E8(a4, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a6);
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_23AD27AE8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
  result = sub_23AA724E8(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, &qword_2542E6A10);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

_OWORD *sub_23AD27B80(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_23AAA159C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_23AD27BF8(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_23AD27C40(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  sub_23AA94050(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
  v10 = a4[7];
  v11 = sub_23B1C5BDC();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_23AD27CF8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  result = sub_23AA94050(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_23AD27D90(unint64_t result, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = a7[6] + 16 * result;
  *(_QWORD *)v7 = a2;
  *(_BYTE *)(v7 + 8) = a3;
  v8 = a7[7] + 24 * result;
  *(_QWORD *)v8 = a4;
  *(_BYTE *)(v8 + 8) = a5 & 1;
  *(_QWORD *)(v8 + 16) = a6;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

unint64_t sub_23AD27DF0(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a6[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a6[6] + 8 * result) = a2;
  v6 = a6[7] + 24 * result;
  *(_QWORD *)v6 = a3;
  *(_BYTE *)(v6 + 8) = a4 & 1;
  *(_QWORD *)(v6 + 16) = a5;
  v7 = a6[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a6[2] = v9;
  return result;
}

uint64_t sub_23AD27E48(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for SyncState();
  result = sub_23AA94050(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_23AD27ED8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a8[(result >> 6) + 8] |= 1 << result;
  v8 = a8[6] + 32 * result;
  *(_QWORD *)v8 = a2;
  *(_QWORD *)(v8 + 8) = a3;
  *(_QWORD *)(v8 + 16) = a4;
  *(_BYTE *)(v8 + 24) = a5;
  v9 = (_QWORD *)(a8[7] + 16 * result);
  *v9 = a6;
  v9[1] = a7;
  v10 = a8[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a8[2] = v12;
  return result;
}

uint64_t sub_23AD27F2C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t result;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  result = sub_23AA724E8(a2, a5[6] + 48 * a1, (uint64_t *)&unk_2542E05B0);
  v10 = (_QWORD *)(a5[7] + 16 * a1);
  *v10 = a3;
  v10[1] = a4;
  v11 = a5[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a5[2] = v13;
  return result;
}

uint64_t sub_23AD27FB8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v9 = (_QWORD *)(a5[6] + 16 * a1);
  *v9 = a2;
  v9[1] = a3;
  v10 = a5[7];
  v11 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a4, v11);
  v13 = a5[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a5[2] = v15;
  return result;
}

uint64_t sub_23AD28048(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  result = sub_23AA724E8(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, &qword_2542DDDB0);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_23AD280E8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_23AD28130(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v10 = *(_QWORD *)(a4 + 24);
  v11 = *(_QWORD *)(a4 + 32);
  v12 = __swift_mutable_project_boxed_opaque_existential_1(a4, v10);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  sub_23AD28338(a1, a2, a3, (uint64_t)v14, a5, v10, v11);
  return __swift_destroy_boxed_opaque_existential_1(a4);
}

uint64_t sub_23AD281F0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23B1C5A08();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_23AD28288(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_23AAA159C(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_23AD282EC(unint64_t result, uint64_t a2, char a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = a5[6] + 16 * result;
  *(_QWORD *)v5 = a2;
  *(_BYTE *)(v5 + 8) = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_23AD28338(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_0;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a6;
  v21 = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_0, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v14 = (_QWORD *)(a5[6] + 16 * a1);
  *v14 = a2;
  v14[1] = a3;
  result = sub_23ABD76F0(&v19, a5[7] + 40 * a1);
  v16 = a5[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a5[2] = v18;
  return result;
}

uint64_t sub_23AD283F0()
{
  return 25;
}

uint64_t type metadata accessor for FileTreeError.ItemNotFoundStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemNotFoundStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.ItemCollisionStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemCollisionStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.CannotBounceStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.CannotBounceStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.ContentUnavailableStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ContentUnavailableStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.DirectoryNotEmptyStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.DirectoryNotEmptyStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.VersionConflictStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.VersionConflictStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.DownloadCancelled.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.DownloadCancelled.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.ItemMismatchStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemMismatchStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.LookupNotPermittedStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.LookupNotPermittedStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.UploadCancelled.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.UploadCancelled.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemContentVersionMismatchStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.ItemIsDetachedRootStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemIsDetachedRootStruct.CodingKeys);
}

uint64_t sub_23AD28488()
{
  return 4;
}

uint64_t sub_23AD28490()
{
  return 5;
}

uint64_t sub_23AD28498(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = a4(255);
  MEMORY[0x23B8613CC](a5, v7);
  v8 = sub_23B1C72EC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C7538();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t type metadata accessor for FileTreeError.ItemNotTracked.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemNotTracked.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.SpeculativeDownloadRejectedStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.CompressedFileReadFailedStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.CompressedFileReadFailedStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.MaxLookupDepthStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.MaxLookupDepthStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.UploadInterrupted.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.UploadInterrupted.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemNeedDelayPropagationStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.ItemIsFlockedStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemIsFlockedStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.ItemKindMismatchStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemKindMismatchStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.DirectoryChangedStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.DirectoryChangedStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.ItemNotEvictableStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.ItemNotEvictableStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.CapturedContentMissingStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.CapturedContentMissingStruct.CodingKeys);
}

uint64_t type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeError.CollidingItemChangedBeforeBounceStruct.CodingKeys);
}

char *sub_23AD28610(char *__src, char *__dst)
{
  assignWithTake for DecoratedReconciliation(__dst, __src);
  return __dst;
}

unint64_t sub_23AD2864C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542E0230;
  if (!qword_2542E0230)
  {
    v1 = sub_23B1C5A08();
    result = MEMORY[0x23B8613CC](MEMORY[0x24BDCDAF0], v1);
    atomic_store(result, (unint64_t *)&qword_2542E0230);
  }
  return result;
}

uint64_t sub_23AD28694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SyncState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AD286D8(uint64_t a1, uint64_t a2)
{
  assignWithTake for WeakEnumerator(a2, a1);
  return a2;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_23AD2873C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23AD28788(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23AD287C8 + 4 * byte_23B1D4064[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23AD287E8 + 4 * byte_23B1D4069[v4]))();
}

_BYTE *sub_23AD287C8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23AD287E8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23AD287F0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23AD287F8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23AD28800(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23AD28808(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_23AD2881C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23AD28868 + 4 * byte_23B1D4073[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23AD2889C + 4 * byte_23B1D406E[v4]))();
}

uint64_t sub_23AD2889C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD288A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD288ACLL);
  return result;
}

uint64_t sub_23AD288B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD288C0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23AD288C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD288CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD288D8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AD28924 + 4 * byte_23B1D407D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AD28958 + 4 * byte_23B1D4078[v4]))();
}

uint64_t sub_23AD28958(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD28960(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD28968);
  return result;
}

uint64_t sub_23AD28974(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD2897CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AD28980(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD28988(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD2899C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23AD289E8 + 4 * byte_23B1D4087[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23AD28A1C + 4 * byte_23B1D4082[v4]))();
}

uint64_t sub_23AD28A1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD28A24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD28A2CLL);
  return result;
}

uint64_t sub_23AD28A38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD28A40);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23AD28A44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD28A4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23AD28A58()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28A68()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28A78()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28A88()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28A98()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28AA8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28AB8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28AC8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28AD8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28AE8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28AF8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28B08()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28B18()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28B28()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28B38()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28B48()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28B58()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28B68()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28B78()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28B88()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28B98()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28BA8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28BB8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28BC8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28BD8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28BE8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28BF8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28C08()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28C18()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28C28()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28C38()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28C48()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28C58()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28C68()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28C78()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28C88()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28C98()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28CA8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28CB8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28CC8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28CD8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28CE8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28CF8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28D08()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28D18()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28D28()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28D38()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28D48()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28D58()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28D68()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28D78()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28D88()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28D98()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28DA8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28DB8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28DC8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28DD8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28DE8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28DF8()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD28E08()
{
  JUMPOUT(0x23B8613CCLL);
}

uint64_t sub_23AD28E54(uint64_t a1)
{
  return sub_23AD0B6A0(a1);
}

uint64_t sub_23AD28E68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6;
  __int128 v7;

  if (a2)
  {
    *((_QWORD *)&v7 + 1) = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v6 = a1;
    *((_QWORD *)&v6 + 1) = a2;
  }
  else
  {
    v6 = 0u;
    v7 = 0u;
  }
  swift_bridgeObjectRetain();
  v2 = sub_23AA94C90((uint64_t)&v6);
  v4 = v3;
  sub_23AA94C08((uint64_t)&v6);
  if (v4)
    return v2;
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AD28F20(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[3];
  uint64_t v8;

  if ((a2 & 1) != 0)
  {
    v2 = 0;
    v7[1] = 0;
    v7[2] = 0;
    v8 = 0;
  }
  else
  {
    v8 = MEMORY[0x24BEE4568];
    v2 = __ROR8__(a1, 32);
  }
  v7[0] = v2;
  v3 = sub_23AA94C90((uint64_t)v7);
  v5 = v4;
  sub_23AA94C08((uint64_t)v7);
  if (v5)
    return v3;
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AD28FD8(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[3];
  uint64_t v7;

  if ((a2 & 1) != 0)
  {
    a1 = 0;
    v6[1] = 0;
    v6[2] = 0;
    v7 = 0;
  }
  else
  {
    v7 = MEMORY[0x24BEE1E88];
  }
  v6[0] = a1;
  v2 = sub_23AA94C90((uint64_t)v6);
  v4 = v3;
  sub_23AA94C08((uint64_t)v6);
  if (v4)
    return v2;
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AD2908C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1852399981 && a2 == 0xE400000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726568746FLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23AD29164(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726568746FLL;
  else
    return 1852399981;
}

BOOL sub_23AD29190(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23AC37E20(*a1, *a2);
}

uint64_t sub_23AD2919C()
{
  return sub_23AD0A6E8();
}

uint64_t sub_23AD291A4()
{
  return sub_23AD072A4();
}

uint64_t sub_23AD291AC()
{
  sub_23B1C74A8();
  sub_23AD072A4();
  return sub_23B1C74E4();
}

uint64_t sub_23AD291E8()
{
  char *v0;

  return sub_23AD29164(*v0);
}

uint64_t sub_23AD291F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD2908C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AD29214@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AAEC8C8();
  *a1 = result;
  return result;
}

uint64_t sub_23AD29244(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6668, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD29278(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D6668, a1);
  return sub_23B1C7550();
}

void sub_23AD292AC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[22];

  v13[5] = a5;
  v9 = sub_23B1C6C98();
  v13[9] = *(_QWORD *)(v9 - 8);
  v13[10] = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v13[15] = (char *)v13 - v11;
  v13[8] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13[3] = (char *)v13 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[17] = a1;
  v13[18] = a2;
  v13[19] = a3;
  v13[20] = a4;
  _s10CodingKeysOMa();
}

void sub_23AD29368(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x23B8613CC](&unk_23B1D6668, a1);
  v6 = sub_23B1C7208();
  *(_QWORD *)(v5 - 208) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 - 200) = v6;
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 152) = v2;
  *(_QWORD *)(v5 - 144) = v1;
  *(_QWORD *)(v5 - 120) = v1;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 168) = v4;
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 96) = v3;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AD293D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  _BYTE v29[96];

  *(_QWORD *)(v3 - 224) = a1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v29[-v8];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v3 - 128) = v1;
  v10 = *(_QWORD *)(v3 - 72);
  sub_23B1C7520();
  if (v10)
  {
    v16 = (uint64_t)v2;
  }
  else
  {
    *(_QWORD *)(v3 - 256) = v7;
    *(_QWORD *)(v3 - 248) = v4;
    v12 = *(_QWORD *)(v3 - 208);
    v11 = *(_QWORD *)(v3 - 200);
    v13 = *(_QWORD *)(v3 - 192);
    v14 = *(_QWORD *)(v3 - 184);
    *(_QWORD *)(v3 - 240) = v9;
    *(_QWORD *)(v3 - 72) = v2;
    v15 = *(_QWORD *)(v3 - 176);
    *(_BYTE *)(v3 - 120) = 0;
    sub_23B1C7160();
    v18 = v11;
    v19 = *(_QWORD *)(v3 - 128);
    v20 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v13 + 48))(*(_QWORD *)(v3 - 136), 1, *(_QWORD *)(v3 - 144));
    if (v20 == 1)
    {
      (*(void (**)(_QWORD, uint64_t))(v14 + 8))(*(_QWORD *)(v3 - 136), v15);
      *(_BYTE *)(v3 - 120) = 1;
      v21 = *(_QWORD *)(v3 - 256);
      sub_23B1C71C0();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v19, v18);
      v25 = *(_QWORD *)(v3 - 224);
      swift_storeEnumTagMultiPayload();
      v26 = *(_QWORD *)(v3 - 240);
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 32);
      v27(v26, v21, v25);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v19, v18);
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
      v23 = *(_QWORD *)(v3 - 232);
      v24 = *(_QWORD *)(v3 - 144);
      v22(v23, *(_QWORD *)(v3 - 136), v24);
      v26 = *(_QWORD *)(v3 - 240);
      v22(v26, v23, v24);
      v25 = *(_QWORD *)(v3 - 224);
      swift_storeEnumTagMultiPayload();
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 32);
    }
    v28 = *(_QWORD *)(v3 - 72);
    v27(*(_QWORD *)(v3 - 216), v26, v25);
    v16 = v28;
  }
  return __swift_destroy_boxed_opaque_existential_1(v16);
}

void sub_23AD29620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[16];

  v12[7] = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v2 = MEMORY[0x24BDAC7A8](a1);
  v12[6] = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[4] = *(_QWORD *)(*(_QWORD *)(v4 + 16) - 8);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v12[3] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(v7 + 40);
  v12[5] = v10;
  v12[12] = v10;
  v12[13] = v11;
  v12[8] = v11;
  v12[1] = v9;
  v12[2] = v8;
  v12[14] = v8;
  v12[15] = v9;
  _s10CodingKeysOMa();
}

uint64_t sub_23AD29710(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  MEMORY[0x23B8613CC](&unk_23B1D6668, a1);
  v6 = sub_23B1C72EC();
  *(_QWORD *)(v5 - 128) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 - 120) = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_23B1C7538();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v1, *(_QWORD *)(v5 - 136), v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = *(_QWORD *)(v5 - 160);
    v9 = *(_QWORD *)(v5 - 152);
    v11 = *(_QWORD *)(v5 - 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v10, v1, v11);
    *(_BYTE *)(v5 - 112) = 1;
    v12 = *(_QWORD *)(v5 - 120);
    sub_23B1C72A4();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 128) + 8))(v8, v12);
  }
  else
  {
    v15 = *(_QWORD *)(v5 - 184);
    v14 = *(_QWORD *)(v5 - 176);
    v16 = *(_QWORD *)(v5 - 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v15, v1, v16);
    *(_BYTE *)(v5 - 112) = 0;
    v17 = *(_QWORD *)(v5 - 120);
    sub_23B1C72A4();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v16);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 128) + 8))(v8, v17);
  }
}

void sub_23AD298C4(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  sub_23AD292AC(a1[2], a1[3], a1[4], a1[5], a2);
}

void sub_23AD298E4(uint64_t a1, uint64_t a2)
{
  sub_23AD29620(a1, a2);
}

uint64_t *sub_23AD298F8(unsigned __int8 a1, id a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  int v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(id, uint64_t, uint64_t);
  uint64_t v18;
  id v19;
  uint64_t *result;
  __int128 v21;
  __int128 v22;

  v5 = *v2;
  v6 = a1 >> 5;
  if (v6 == 4)
  {
    if (a1 == 129)
    {
      v8 = *(void **)((char *)v2 + *(_QWORD *)(v5 + 568));
      if (v8)
        v9 = objc_msgSend(v8, sel_version);
      else
        v9 = 0;
      v7 = objc_msgSend(a2, sel_bindLongParameter_, v9);
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v6 != 3)
  {
    if (v6 == 2)
    {
      if (a1 == 66)
      {
        swift_getAssociatedTypeWitness();
        v16 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
        v17 = *(uint64_t (**)(id, uint64_t, uint64_t))(v16 + 32);
        v18 = swift_checkMetadataState();
        return (uint64_t *)v17(a2, v18, v16);
      }
      if (a1 == 67)
      {
        v7 = objc_msgSend(a2, sel_bindUnsignedLongParameter_, *(uint64_t *)((char *)v2 + *(_QWORD *)(v5 + 544)));
LABEL_21:
        v19 = v7;
        v2 = (uint64_t *)sub_23B1C63E0();

        return v2;
      }
    }
LABEL_13:
    v10 = sub_23B06BF54(a1, (uint64_t)a2);
    if (v3)
      return v2;
    return (uint64_t *)v10;
  }
  if (a1 != 97)
  {
    if (a1 == 98)
    {
      v21 = *(_OWORD *)(v5 + 504);
      v22 = *(_OWORD *)(v5 + 520);
      type metadata accessor for Bouncing.BouncingContext();
    }
    goto LABEL_13;
  }
  v11 = (uint64_t *)((char *)v2 + *(_QWORD *)(v5 + 552));
  v12 = *v11;
  v13 = v11[1];
  *((_QWORD *)&v22 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v21 = v12;
  *((_QWORD *)&v21 + 1) = v13;
  swift_bridgeObjectRetain_n();
  v2 = (uint64_t *)sub_23AA94C90((uint64_t)&v21);
  v15 = v14;
  sub_23AA94C08((uint64_t)&v21);
  if (v15)
  {
    swift_bridgeObjectRelease();
    return v2;
  }
  result = (uint64_t *)sub_23B1C704C();
  __break(1u);
  return result;
}

void sub_23AD29B98()
{
  type metadata accessor for Bouncing.BouncingContext();
}

void sub_23AD29BE8(ValueMetadata *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  id v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (**Description)(char *, uint64_t, ValueMetadata *);
  int v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  void (*v28)(id, _QWORD, uint64_t, uint64_t);
  uint64_t *v29;
  id v30;
  uint64_t v31;
  uint64_t *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v38;

  v8 = sub_23B1C6C98();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - v10;
  v12 = v4 >> 5;
  switch(v12)
  {
    case 4:
      if (v4 != 129)
        goto LABEL_16;
      v15 = *(id *)(v6 - 120);
      v16 = *(unsigned int *)(v6 - 68);
      if ((objc_msgSend(v15, sel_isNullAtIndex_, v16) & 1) != 0
        || (v17 = objc_msgSend(v15, sel_integerAtIndex_, v16)) == 0)
      {

        v25 = *(_OWORD **)(v6 - 136);
        *v25 = 0u;
        v25[1] = 0u;
      }
      else
      {
        v18 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v17);

        v19 = sub_23AD2AE58();
        v20 = *(_QWORD **)(v6 - 136);
        v20[3] = v19;
        *v20 = v18;
      }
      break;
    case 3:
      if (v4 == 97)
      {
        v32 = *(uint64_t **)(v6 - 136);
        v32[3] = (uint64_t)&type metadata for Filename;
        v33 = objc_msgSend(*(id *)(v6 - 120), sel_stringAtIndex_, *(unsigned int *)(v6 - 68));
        v34 = sub_23B1C63E0();
        v36 = v35;

        *v32 = v34;
        v32[1] = v36;
      }
      else
      {
        if (v4 != 98)
          goto LABEL_16;
        MEMORY[0x23B8613CC](&unk_23B1E6080, a1);
        v21 = *(_QWORD *)(v6 - 128);
        sub_23AD3DFC0(*(unsigned int *)(v6 - 68), a1, (uint64_t)v11);
        if (!v21)
        {
          Description = (uint64_t (**)(char *, uint64_t, ValueMetadata *))a1[-1].Description;
          v23 = Description[6](v11, 1, a1);
          v24 = *(_QWORD *)(v6 - 136);
          if (v23 == 1)
          {
            (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
            *(_OWORD *)v24 = 0u;
            *(_OWORD *)(v24 + 16) = 0u;
          }
          else
          {
            *(_QWORD *)(v24 + 24) = a1;
            boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v24);
            Description[4]((char *)boxed_opaque_existential_0, (uint64_t)v11, a1);
          }
        }
      }
      break;
    case 2:
      if (v4 != 66)
      {
        if (v4 == 67)
        {
          v13 = objc_msgSend(*(id *)(v6 - 120), sel_unsignedLongAtIndex_, *(unsigned int *)(v6 - 68));
          v14 = *(_QWORD **)(v6 - 136);
          v14[3] = MEMORY[0x24BEE1E88];
          *v14 = v13;
          return;
        }
LABEL_16:
        *(_QWORD *)(v6 - 112) = v3;
        *(_QWORD *)(v6 - 104) = v1;
        *(_QWORD *)(v6 - 96) = v5;
        *(_QWORD *)(v6 - 88) = v2;
        type metadata accessor for Job();
      }
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v27 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
      v28 = *(void (**)(id, _QWORD, uint64_t, uint64_t))(v27 + 16);
      v29 = *(uint64_t **)(v6 - 136);
      v29[3] = AssociatedTypeWitness;
      __swift_allocate_boxed_opaque_existential_0(v29);
      v30 = *(id *)(v6 - 120);
      v31 = *(_QWORD *)(v6 - 128);
      v28(v30, *(unsigned int *)(v6 - 68), AssociatedTypeWitness, v27);
      if (v31)
        __swift_deallocate_boxed_opaque_existential_0((uint64_t)v29);
      break;
    default:
      goto LABEL_16;
  }
}

void sub_23AD29F00()
{
  sub_23AAB9B4C();
  type metadata accessor for SQLCodableAccessorWrapper();
}

void sub_23AD29F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  *(_QWORD *)(v10 - 216) = a1;
  *(_QWORD *)(v10 - 240) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v10 - 224) = (char *)&a9 - v11;
  v12 = *v9;
  v13 = v9[1];
  *(_OWORD *)(v10 - 208) = *v9;
  *(_OWORD *)(v10 - 192) = v13;
  *(_OWORD *)(v10 - 128) = v12;
  *(_OWORD *)(v10 - 112) = v13;
  type metadata accessor for Bouncing.BouncingContext();
}

uint64_t sub_23AD29FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[80];

  v3 = sub_23B1C6C98();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v20[-v5];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v10 = &v20[-v9];
  *(_BYTE *)(v2 - 128) = 66;
  *(_QWORD *)(v2 - 208) = v11;
  *(_QWORD *)(v2 - 192) = v1;
  v12 = *(_QWORD *)(v2 - 168);
  v13 = *(_QWORD *)(v2 - 160);
  sub_23AA94830(v2 - 128, v11, v0, v11, v1);
  if (!v13)
  {
    *(_QWORD *)(v2 - 256) = v6;
    *(_QWORD *)(v2 - 264) = v4;
    *(_QWORD *)(v2 - 160) = v3;
    *(_BYTE *)(v2 - 128) = 67;
    v14 = *(_QWORD *)(v2 - 192);
    sub_23AA94830(v2 - 128, MEMORY[0x24BEE1E88], v0, MEMORY[0x24BEE1E88], v14);
    v15 = *(_QWORD *)(v2 - 72);
    *(_BYTE *)(v2 - 136) = 97;
    sub_23AA94830(v2 - 136, (uint64_t)&type metadata for Filename, v0, (uint64_t)&type metadata for Filename, v14);
    *(_QWORD *)(v2 - 280) = v8;
    *(_QWORD *)(v2 - 272) = v10;
    v18 = *(_QWORD *)(v2 - 128);
    v17 = *(_QWORD *)(v2 - 120);
    *(_BYTE *)(v2 - 136) = 98;
    sub_23AA94830(v2 - 136, *(_QWORD *)(v2 - 160), v0, *(_QWORD *)(v2 - 160), v14);
    *(_QWORD *)(v2 - 296) = v18;
    *(_QWORD *)(v2 - 288) = v17;
    *(_BYTE *)(v2 - 144) = -127;
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5510);
    sub_23AA94830(v2 - 144, v19, v0, v19, v14);
    *(_QWORD *)(v2 - 304) = v15;
    sub_23AA84C6C((uint64_t)sub_23AAB9C94, v0, (uint64_t)&_s9SQLFieldsON_1, v14, *(_QWORD *)(v2 - 232), *(_QWORD *)(v2 - 224));
  }
  return v12;
}

void sub_23AD2A37C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  (*(void (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v3 - 256), *(_QWORD *)(v3 - 160));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 280) + 8))(v0, *(_QWORD *)(v3 - 208));
  sub_23B06F49C();
}

void sub_23AD2A3CC()
{
  uint64_t v0;

  if (!v0)
    swift_retain();
  swift_release();
  JUMPOUT(0x23AD2A108);
}

uint64_t *sub_23AD2A3F4(unsigned __int8 *a1, void *a2)
{
  return sub_23AD298F8(*a1, a2);
}

void sub_23AD2A418()
{
  sub_23AD29B98();
}

void sub_23AD2A430()
{
  sub_23AD29F00();
}

uint64_t sub_23AD2A444(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

uint64_t sub_23AD2A458(unsigned __int8 a1, id a2)
{
  void *v3;
  id v4;
  uint64_t v5;

  if (a1 != 99)
    return sub_23B06BF54(a1, (uint64_t)a2);
  v3 = (void *)sub_23B1C7514();
  v4 = objc_msgSend(a2, sel_bindObjectParameter_, v3);

  v5 = sub_23B1C63E0();
  return v5;
}

double sub_23AD2A4EC@<D0>(id a1@<X1>, char a2@<W0>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  id v5;
  uint64_t v6;
  double result;

  if (a2 != 99)
    type metadata accessor for Job();
  v5 = objc_msgSend(a1, sel_unsignedLongLongAtIndex_, a3);
  a4[3] = (uint64_t)&type metadata for CapturedContent;
  v6 = swift_allocObject();
  *a4 = v6;
  *(_QWORD *)(v6 + 16) = v5;
  result = 0.0;
  *(_OWORD *)(v6 + 24) = xmmword_23B1CA780;
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 48) = 0;
  *(_BYTE *)(v6 + 56) = 1;
  *(_QWORD *)(v6 + 64) = 0;
  return result;
}

void sub_23AD2A5D8()
{
  sub_23AAB9B4C();
  type metadata accessor for SQLCodableAccessorWrapper();
}

uint64_t sub_23AD2A630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v11;

  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v11 - v7;
  *(_BYTE *)(v6 - 72) = 99;
  sub_23AA94830(v6 - 72, (uint64_t)&type metadata for CapturedContent, v4, (uint64_t)&type metadata for CapturedContent, v3);
  if (!v1)
  {
    v9 = *(_OWORD *)(v6 - 184);
    *(_OWORD *)(v6 - 144) = *(_OWORD *)(v6 - 200);
    *(_OWORD *)(v6 - 128) = v9;
    *(_OWORD *)(v6 - 112) = *(_OWORD *)(v6 - 168);
    *(_QWORD *)(v6 - 96) = *(_QWORD *)(v6 - 152);
    sub_23AA84C6C((uint64_t)sub_23AD2AFB4, v4, (uint64_t)&_s9SQLFieldsON_1, v3, v5, (uint64_t)v8);
  }
  return v2;
}

void sub_23AD2A7CC()
{
  uint64_t v0;

  if (!v0)
    swift_retain();
  swift_release();
  JUMPOUT(0x23AD2A774);
}

uint64_t sub_23AD2A7F4(unsigned __int8 *a1, void *a2)
{
  return sub_23AD2A458(*a1, a2);
}

double sub_23AD2A818@<D0>(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_23AD2A4EC(a2, *a1, a3, a4);
}

void sub_23AD2A830()
{
  sub_23AD2A5D8();
}

uint64_t sub_23AD2A844(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

uint64_t sub_23AD2A858(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;

  v3 = a1 >> 5;
  if (v3 == 3)
  {
    if (a1 == 96)
    {
LABEL_6:
      swift_getAssociatedTypeWitness();
      v4 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
      v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
      v6 = swift_checkMetadataState();
      return v5(a2, v6, v4);
    }
  }
  else if (v3 == 2 && a1 == 66)
  {
    goto LABEL_6;
  }
  return sub_23B06BF54(a1, a2);
}

uint64_t sub_23AD2A954@<X0>(unsigned __int8 a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  int v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v8 = a1 >> 5;
  if (v8 == 3)
  {
    if (a1 != 96)
      goto LABEL_4;
  }
  else if (v8 != 2 || a1 != 66)
  {
LABEL_4:
    type metadata accessor for Job();
  }
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v10 + 16);
  a4[3] = AssociatedTypeWitness;
  __swift_allocate_boxed_opaque_existential_0(a4);
  result = v11(a2, a3, AssociatedTypeWitness, v10);
  if (v4)
    return __swift_deallocate_boxed_opaque_existential_0((uint64_t)a4);
  return result;
}

void sub_23AD2AAA0()
{
  sub_23AAB9B4C();
  type metadata accessor for SQLCodableAccessorWrapper();
}

uint64_t sub_23AD2AAF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[96];

  *(_QWORD *)(v5 - 144) = a1;
  *(_QWORD *)(v5 - 160) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v16[-v6];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v16[-v11];
  *(_BYTE *)(v5 - 112) = 66;
  *(_QWORD *)(v5 - 136) = v4;
  *(_QWORD *)(v5 - 128) = v2;
  v13 = *(_QWORD *)(v5 - 120);
  sub_23AA94830(v5 - 112, AssociatedTypeWitness, v4, AssociatedTypeWitness, v3);
  if (!v13)
  {
    *(_QWORD *)(v5 - 176) = v1;
    *(_QWORD *)(v5 - 168) = v12;
    *(_QWORD *)(v5 - 120) = v9;
    *(_BYTE *)(v5 - 112) = 96;
    v14 = *(_QWORD *)(v5 - 136);
    sub_23AA94830(v5 - 112, AssociatedTypeWitness, v14, AssociatedTypeWitness, v3);
    sub_23AA84C6C((uint64_t)sub_23AD2AFB4, v14, (uint64_t)&_s9SQLFieldsON_1, v3, *(_QWORD *)(v5 - 152), (uint64_t)v7);
  }
  return v1;
}

void sub_23AD2AD94()
{
  uint64_t v0;

  if (!v0)
    swift_retain();
  swift_release();
  JUMPOUT(0x23AD2AD14);
}

uint64_t sub_23AD2ADBC(unsigned __int8 *a1, uint64_t a2)
{
  return sub_23AD2A858(*a1, a2);
}

uint64_t sub_23AD2ADE0@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_23AD2A954(*a1, a2, a3, a4);
}

void sub_23AD2ADF8()
{
  sub_23AD2AAA0();
}

uint64_t sub_23AD2AE0C(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

uint64_t sub_23AD2AE20(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x23B8613CC](&unk_23B1E3A0C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void _s10CodingKeysOMa()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD2AE58()
{
  unint64_t result;

  result = qword_2569E3140;
  if (!qword_2569E3140)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569E3140);
  }
  return result;
}

uint64_t sub_23AD2AE94()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v0 + 24), v1);
  return swift_deallocObject();
}

uint64_t sub_23AD2AEC8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AD2AF14 + 4 * byte_23B1D64E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AD2AF48 + 4 * byte_23B1D64E0[v4]))();
}

uint64_t sub_23AD2AF48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD2AF50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD2AF58);
  return result;
}

uint64_t sub_23AD2AF64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD2AF6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AD2AF70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD2AF78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23AD2AF84()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD2AF94()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD2AFA4()
{
  JUMPOUT(0x23B8613CCLL);
}

uint64_t sub_23AD2AFBC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(void *, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;

  v34 = a2;
  v33 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23B1C5A38();
  v6 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23B1C5570();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v30 - v14;
  v16 = (void *)swift_slowAlloc();
  v17 = fgetxattr(a1, "com.apple.fileprovider.detached#B", v16, 0x800uLL, 0, 0);
  v18 = v17;
  if ((v17 & 0x8000000000000000) != 0)
  {
    if (MEMORY[0x23B85E7A4]() != 93
      || (v18 = fgetxattr(a1, "com.apple.fileprovider.detached", v16, 0x800uLL, 0, 0), (v18 & 0x8000000000000000) != 0)
      && (v18 = fgetxattr(a1, "com.apple.fileprovider.detached#PN", v16, 0x800uLL, 0, 0),
          (v18 & 0x8000000000000000) != 0))
    {
      if (MEMORY[0x23B85E7A4]() != 93)
      {
        MEMORY[0x23B85E7A4]();
        v27 = sub_23B1C5E64();
        if ((v27 & 0x100000000) != 0)
          v28 = 22;
        else
          v28 = v27;
        v35 = v28;
        sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
        sub_23AC37520();
        sub_23B1C5864();
        goto LABEL_19;
      }
      v18 = 0;
    }
    else
    {
      fsetxattr(a1, "com.apple.fileprovider.detached#B", v16, v18, 0, 0);
      fremovexattr(a1, "com.apple.fileprovider.detached", 0);
      fremovexattr(a1, "com.apple.fileprovider.detached#PN", 0);
      if (v18 >= 0x801)
        goto LABEL_3;
    }
  }
  else if (v17 >= 0x801)
  {
LABEL_3:
    v36 = 34;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AC37520();
    sub_23B1C5864();
    v15 = v13;
LABEL_19:
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    swift_willThrow();
    v26 = v34;
    return sub_23AD2BAF8(v26);
  }
  v19 = v31;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDCDB98], v31);
  sub_23B1C5A2C();
  if (v18)
  {
    sub_23B1C563C();
    swift_allocObject();
    swift_retain();
    v20 = sub_23B1C55F4();
    v18 = sub_23AB5E6A8(v20, v18);
    v22 = v21;
    swift_release();
  }
  else
  {
    v23 = (void (*)(void *, _QWORD))sub_23B1C5A2C();
    v23(v16, 0);
    swift_release();
    swift_release();
    v22 = 0xC000000000000000;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  v24 = v34;
  v25 = v32;
  sub_23AB6C0EC(v34, v32);
  sub_23AD2B5F0(v18, v22, v25, v33);
  v26 = v24;
  return sub_23AD2BAF8(v26);
}

uint64_t sub_23AD2B38C()
{
  return 0x4000;
}

uint64_t sub_23AD2B394(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v14 = a4;
  v15 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E4D90);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AD2C270();
  sub_23B1C7538();
  v16 = a2;
  v17 = a3;
  v18 = 0;
  sub_23AB5EA4C();
  sub_23B1C72A4();
  if (!v5)
  {
    v16 = v14;
    v17 = v15;
    v18 = 1;
    sub_23AB5EB5C();
    sub_23B1C72A4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_23AD2B4E8()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F42746E65726170;
  else
    return 1701667182;
}

uint64_t sub_23AD2B528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD2C2B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_23AD2B54C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_23AD2B558()
{
  sub_23AD2C270();
  return sub_23B1C7544();
}

uint64_t sub_23AD2B580()
{
  sub_23AD2C270();
  return sub_23B1C7550();
}

uint64_t sub_23AD2B5A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_23AD2C3B8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_23AD2B5D4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_23AD2B394(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_23AD2B5F0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t result;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  id v20;
  char *v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  _DWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int *v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t v57;

  v53 = a3;
  v50 = a4;
  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5A08();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5780();
  swift_allocObject();
  v13 = sub_23B1C5774();
  sub_23AD2BB38();
  v14 = v52;
  sub_23B1C5768();
  if (v14)
  {
    swift_release();
    sub_23AAAE53C(a1, a2);
    return sub_23AD2BAF8(v53);
  }
  v48 = v13;
  v49 = v9;
  v45 = v6;
  v46 = v7;
  v43 = v11;
  v44 = v10;
  v17 = v54;
  v16 = v55;
  v18 = v57;
  LOBYTE(v54) = 0;
  v19 = v51;
  v47 = v56;
  sub_23B1C596C();
  v52 = 0;
  v26 = v18;
  v27 = v50;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v50, v19, v44);
  v28 = v27;
  v29 = v54;
  v30 = (int *)type metadata accessor for VFSDetachedRootBookmark();
  *(_BYTE *)(v28 + v30[7]) = v29;
  v31 = (_QWORD *)(v28 + v30[5]);
  *v31 = v17;
  v31[1] = v16;
  swift_bridgeObjectRetain();
  if (v29 != 1)
  {
    swift_release();
    sub_23AAAE53C(a1, a2);
    sub_23AD2BAF8(v53);
    v38 = v47;
    sub_23AAAE668(v47, v26);
    swift_bridgeObjectRelease();
    result = sub_23AAAE53C(v38, v26);
    goto LABEL_11;
  }
  v32 = v52;
  v33 = sub_23B1C58DC();
  v35 = v26;
  if (!v32)
  {
    v36 = v34;
    v37 = v33;
    swift_bridgeObjectRelease();
    swift_release();
    sub_23AAAE53C(v47, v35);
    sub_23AAAE53C(a1, a2);
    result = sub_23AD2BAF8(v53);
    v38 = v37;
    v26 = v36;
    v28 = v50;
LABEL_11:
    v41 = (uint64_t *)(v28 + v30[6]);
    *v41 = v38;
    v41[1] = v26;
    return result;
  }
  v20 = (id)fpfs_current_or_default_log();
  v21 = v49;
  sub_23B1C5E58();
  sub_23AAAE668(a1, a2);
  v22 = v32;
  v23 = sub_23B1C5E40();
  v24 = sub_23B1C6AA0();
  if (os_log_type_enabled(v23, v24))
  {
    v51 = v16;
    v25 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v25 = 134218242;
    v42[2] = v26;
    __asm { BR              X10 }
  }
  sub_23AAAE53C(a1, a2);

  v39 = v45;
  v40 = v46;

  (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v39);
  swift_willThrow();
  swift_release();
  sub_23AAAE53C(a1, a2);
  swift_bridgeObjectRelease();
  sub_23AAAE53C(v47, v35);
  result = sub_23AD2BAF8(v53);
  if (!v52)
  {
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v50, v44);
    type metadata accessor for VFSDetachedRootBookmark();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23AD2BAF8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23AD2BB38()
{
  unint64_t result;

  result = qword_2569E4D88;
  if (!qword_2569E4D88)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D6760, &type metadata for VFSDetachedRootBookmark.ExtendedAttributeValue);
    atomic_store(result, (unint64_t *)&qword_2569E4D88);
  }
  return result;
}

uint64_t type metadata accessor for VFSDetachedRootBookmark()
{
  uint64_t result;

  result = qword_2542E4FA8;
  if (!qword_2542E4FA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t destroy for VFSDetachedRootBookmark.ExtendedAttributeValue(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_23AAAE53C(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for VFSDetachedRootBookmark.ExtendedAttributeValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_23AAAE668(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

_QWORD *assignWithCopy for VFSDetachedRootBookmark.ExtendedAttributeValue(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[2];
  v4 = a2[3];
  sub_23AAAE668(v5, v4);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_23AAAE53C(v6, v7);
  return a1;
}

_QWORD *assignWithTake for VFSDetachedRootBookmark.ExtendedAttributeValue(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_23AAAE53C(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for VFSDetachedRootBookmark.ExtendedAttributeValue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VFSDetachedRootBookmark.ExtendedAttributeValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSDetachedRootBookmark.ExtendedAttributeValue()
{
  return &type metadata for VFSDetachedRootBookmark.ExtendedAttributeValue;
}

_QWORD *sub_23AD2BD6C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23B1C5A08();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = *(_QWORD *)((char *)a2 + v9);
    v15 = *(_QWORD *)((char *)a2 + v9 + 8);
    swift_bridgeObjectRetain();
    sub_23AAAE668(v14, v15);
    *v13 = v14;
    v13[1] = v15;
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_23AD2BE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  return sub_23AAAE53C(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t sub_23AD2BE88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;

  v6 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (uint64_t *)(a1 + v8);
  v13 = *(_QWORD *)(a2 + v8);
  v14 = *(_QWORD *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  sub_23AAAE668(v13, v14);
  *v12 = v13;
  v12[1] = v14;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23AD2BF20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v6 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  v14 = v12[1];
  sub_23AAAE668(*v12, v14);
  v15 = *v11;
  v16 = v11[1];
  *v11 = v13;
  v11[1] = v14;
  sub_23AAAE53C(v15, v16);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23AD2BFD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23AD2C048(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v6 = sub_23B1C5A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = *(_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  sub_23AAAE53C(v13, v14);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_23AD2C0D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AD2C0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23B1C5A08();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23AD2C164()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23AD2C170(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23B1C5A08();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23AD2C1EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B1C5A08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23AD2C270()
{
  unint64_t result;

  result = qword_2569E4D98;
  if (!qword_2569E4D98)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D6874, &type metadata for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E4D98);
  }
  return result;
}

uint64_t sub_23AD2C2B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F42746E65726170 && a2 == 0xEE006B72616D6B6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23AD2C3B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E4DA0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AD2C270();
  sub_23B1C7520();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    sub_23AA7E3CC();
    sub_23B1C71C0();
    v7 = v13;
    v12 = 1;
    sub_23AB5EC6C();
    swift_bridgeObjectRetain();
    sub_23B1C71C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v9 = v13;
    v10 = v14;
    swift_bridgeObjectRetain();
    sub_23AAAE668(v9, v10);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_23AAAE53C(v9, v10);
  }
  return v7;
}

uint64_t storeEnumTagSinglePayload for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AD2C5E0 + 4 * byte_23B1D66C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AD2C614 + 4 * byte_23B1D66C0[v4]))();
}

uint64_t sub_23AD2C614(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD2C61C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD2C624);
  return result;
}

uint64_t sub_23AD2C630(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD2C638);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AD2C63C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD2C644(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys()
{
  return &type metadata for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys;
}

unint64_t sub_23AD2C664()
{
  unint64_t result;

  result = qword_2569E4DA8;
  if (!qword_2569E4DA8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D684C, &type metadata for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E4DA8);
  }
  return result;
}

unint64_t sub_23AD2C6AC()
{
  unint64_t result;

  result = qword_2569E4DB0;
  if (!qword_2569E4DB0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D67BC, &type metadata for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E4DB0);
  }
  return result;
}

unint64_t sub_23AD2C6F4()
{
  unint64_t result;

  result = qword_2569E4DB8;
  if (!qword_2569E4DB8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D67E4, &type metadata for VFSDetachedRootBookmark.ExtendedAttributeValue.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E4DB8);
  }
  return result;
}

void sub_23AD2C738(void (*a1)(void))
{
  void *v2;

  sub_23AD2C7F8();
  v2 = (void *)swift_allocError();
  a1();

}

uint64_t sub_23AD2C788()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TaskTracker()
{
  return objc_opt_self();
}

uint64_t sub_23AD2C7CC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23AD2C7F8()
{
  unint64_t result;

  result = qword_2569E7B00;
  if (!qword_2569E7B00)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D696C, &type metadata for LifetimeError);
    atomic_store(result, (unint64_t *)&qword_2569E7B00);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LifetimeError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23AD2C87C + 4 * byte_23B1D68C8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23AD2C89C + 4 * byte_23B1D68CD[v4]))();
}

_BYTE *sub_23AD2C87C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23AD2C89C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23AD2C8A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23AD2C8AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23AD2C8B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23AD2C8BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LifetimeError()
{
  return &type metadata for LifetimeError;
}

unint64_t sub_23AD2C8DC()
{
  unint64_t result;

  result = qword_2569E4DC0[0];
  if (!qword_2569E4DC0[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D6944, &type metadata for LifetimeError);
    atomic_store(result, qword_2569E4DC0);
  }
  return result;
}

id sub_23AD2C92C()
{
  id result;

  result = sub_23AD2C948();
  qword_256A079A0 = (uint64_t)result;
  return result;
}

id sub_23AD2C948()
{
  xpc_object_t v0;
  id v1;
  void *v2;
  id v3;

  v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5B8], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5D8], *MEMORY[0x24BDAC608]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC6B8], 0);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC598], 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x24BDAC698], (const char *)*MEMORY[0x24BDAC6A8]);
  v1 = objc_allocWithZone(MEMORY[0x24BE313D0]);
  v2 = (void *)sub_23B1C63BC();
  v3 = objc_msgSend(v1, sel_initWithLabel_criteria_, v2, v0);

  swift_unknownObjectRelease();
  return v3;
}

_QWORD *sub_23AD2CA5C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_23AD2CA7C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6573616870;
  else
    return 0x4449776F72;
}

uint64_t sub_23AD2CAA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23AD3C130(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23AD2CACC@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!result)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_23AD2CAE8()
{
  sub_23AD3BEEC();
  return sub_23B1C7544();
}

uint64_t sub_23AD2CB10()
{
  sub_23AD3BEEC();
  return sub_23B1C7550();
}

uint64_t sub_23AD2CB38(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_23AD2CB84(a1);
  return v2;
}

uint64_t sub_23AD2CB84(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  char v10;
  char v12[40];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E4FD8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AD3BEEC();
  swift_retain();
  sub_23B1C7520();
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    type metadata accessor for MaintenanceContinuation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v12[0] = 0;
    *(_QWORD *)(v1 + 16) = sub_23B1C7148();
    *(_BYTE *)(v1 + 24) = v8 & 1;
    v12[0] = 1;
    *(_QWORD *)(v1 + 32) = sub_23B1C7148();
    *(_BYTE *)(v1 + 40) = v10 & 1;
    swift_release();
    sub_23B1C7124();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v1;
}

uint64_t sub_23AD2CD4C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E24F0);
  v6 = *(_QWORD *)(v5 - 8);
  v18 = v5;
  v19 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E4FC8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23AD3BEEC();
  sub_23B1C7538();
  v13 = *(_BYTE *)(v3 + 24);
  v20 = *(_QWORD *)(v3 + 16);
  v21 = v13;
  v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74F0);
  sub_23AD3BF30();
  sub_23B1C72A4();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v17 = v10;
  v15 = v19;
  v16 = *(_BYTE *)(v3 + 40);
  v20 = *(_QWORD *)(v3 + 32);
  v21 = v16;
  v23 = 1;
  sub_23B1C72A4();
  sub_23B1C7214();
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  sub_23AB6E3F4();
  sub_23B1C7538();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v12, v9);
}

uint64_t sub_23AD2CF64()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
  {
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    result = 0;
    if ((*(_BYTE *)(v0 + 40) & 1) != 0)
      return result;
    goto LABEL_5;
  }
  result = 0;
  if ((*(_BYTE *)(v0 + 40) & 1) == 0)
  {
LABEL_5:
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_23AD2D0A4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MaintenanceContinuation()
{
  return objc_opt_self();
}

uint64_t sub_23AD2D0D8()
{
  return sub_23AD2CF64();
}

uint64_t sub_23AD2D0F8(uint64_t *a1, uint64_t *a2)
{
  return sub_23AD3B8A4(*a1, *a2);
}

unint64_t sub_23AD2D104()
{
  return 0xD000000000000014;
}

void sub_23AD2D120()
{
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23AD2D17C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD, unint64_t, unint64_t, _QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t AssociatedConformanceWitness;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[96];

  MEMORY[0x24BDAC7A8](a1);
  v8 = &v33[-v7];
  *(_QWORD *)(v6 - 168) = v2;
  *(_QWORD *)(v6 - 152) = v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 200) = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v6 - 144) = &v33[-v11];
  v12 = *(_QWORD *)(v3 + 32);
  if (*(_BYTE *)(v12 + 33) != 1)
    return v4(0, 0xD00000000000001ALL, 0x800000023B201320, 0);
  v13 = **(_QWORD **)(v12 + 16);
  *(_QWORD *)(v6 - 184) = v10;
  v14 = *(uint64_t (**)(uint64_t))(v13 + 768);
  v15 = swift_retain();
  v16 = v14(v15);
  v17 = *(_QWORD *)(v6 - 184);
  v18 = v16;
  v19 = swift_release();
  if ((v18 & 1) != 0)
    return v4(0, 0xD00000000000001ALL, 0x800000023B201320, 0);
  *(_QWORD *)(v6 - 240) = v4;
  v21 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v3 + 16) + 288))(v19);
  *(_DWORD *)(v6 - 244) = v22;
  *(_QWORD *)(v6 - 120) = v21;
  v23 = sub_23B1C67DC();
  MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v23);
  if ((sub_23B1C69B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if ((*(_DWORD *)(v6 - 244) & 1) == 0)
      return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v6 - 240))(0, 0, 0, 0);
LABEL_18:
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Maintenance.swift", 101, 2, 96);
  }
  *(_QWORD *)(v6 - 208) = v3;
  v24 = swift_bridgeObjectRetain();
  if (MEMORY[0x23B85F0E0](v24, AssociatedTypeWitness))
  {
    *(_QWORD *)(v6 - 224) = *(_QWORD *)(**(_QWORD **)(v6 - 208) + 312);
    *(_QWORD *)(v6 - 216) = v5;
    *(_QWORD *)(v6 - 232) = v8;
    v25 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v25 & 1) != 0)
    {
      (*(void (**)(_QWORD, unint64_t, uint64_t))(v17 + 16))(*(_QWORD *)(v6 - 144), v21 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), AssociatedTypeWitness);
    }
    else
    {
      v29 = sub_23B1C6F38();
      if (*(_QWORD *)(v6 - 200) != 8)
      {
        __break(1u);
        goto LABEL_18;
      }
      *(_QWORD *)(v6 - 120) = v29;
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v17 + 16))(*(_QWORD *)(v6 - 144), v6 - 120, AssociatedTypeWitness);
      swift_unknownObjectRelease();
    }
    *(_QWORD *)(v6 - 192) = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v17 + 32))(v8, *(_QWORD *)(v6 - 144), AssociatedTypeWitness);
    v26 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v28 = swift_getAssociatedConformanceWitness();
    *(_QWORD *)(v6 - 120) = AssociatedTypeWitness;
    *(_QWORD *)(v6 - 112) = v26;
    *(_QWORD *)(v6 - 104) = AssociatedConformanceWitness;
    *(_QWORD *)(v6 - 96) = v28;
    type metadata accessor for ReconciliationID();
  }
  swift_bridgeObjectRelease();
  if ((*(_DWORD *)(v6 - 244) & 1) != 0)
  {
    type metadata accessor for MaintenanceContinuation();
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = 0;
    *(_BYTE *)(v30 + 24) = 1;
    *(_QWORD *)(v30 + 32) = 0;
    *(_BYTE *)(v30 + 40) = 1;
    *(_QWORD *)(v6 - 120) = 0;
    *(_QWORD *)(v6 - 112) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 - 120) = 0x2064657461647075;
    *(_QWORD *)(v6 - 112) = 0xE800000000000000;
    v31 = MEMORY[0x23B85F0B0](v21, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 - 136) = v31;
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v6 - 240))(v30, *(_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 112), 0);
    swift_release();
  }
  else
  {
    *(_QWORD *)(v6 - 120) = 0;
    *(_QWORD *)(v6 - 112) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 - 120) = 0x2064657461647075;
    *(_QWORD *)(v6 - 112) = 0xE800000000000000;
    v32 = MEMORY[0x23B85F0B0](v21, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 - 136) = v32;
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v6 - 240))(0, *(_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 112), 0);
  }
  return swift_bridgeObjectRelease();
}

void type metadata accessor for Maintenance.UnblockEvictability()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD2D714()
{
  return 0xD000000000000015;
}

void sub_23AD2D730()
{
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23AD2D78C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD, unint64_t, unint64_t, _QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[96];

  *(_QWORD *)(v6 - 192) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v6 - 184) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 200) = &v31[-v7];
  *(_QWORD *)(v6 - 168) = v2;
  *(_QWORD *)(v6 - 152) = v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v12 = &v31[-v11];
  v13 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v5 + 32) + 16) + 768);
  v14 = swift_retain();
  v15 = v13(v14);
  v16 = swift_release();
  if ((v15 & 1) != 0)
    return v3(0, 0xD000000000000017, 0x800000023B2012E0, 0);
  *(_QWORD *)(v6 - 240) = v10;
  *(_QWORD *)(v6 - 232) = v4;
  *(_QWORD *)(v6 - 224) = v3;
  v18 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v5 + 24) + 456))(v16);
  *(_DWORD *)(v6 - 244) = v19;
  *(_QWORD *)(v6 - 120) = v18;
  v20 = sub_23B1C67DC();
  MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v20);
  if ((sub_23B1C69B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if ((*(_DWORD *)(v6 - 244) & 1) == 0)
      return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v6 - 224))(0, 0, 0, 0);
LABEL_17:
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Maintenance.swift", 101, 2, 132);
  }
  v21 = swift_bridgeObjectRetain();
  if (MEMORY[0x23B85F0E0](v21, AssociatedTypeWitness))
  {
    *(_QWORD *)(v6 - 216) = *(_QWORD *)(*(_QWORD *)v5 + 312);
    *(_QWORD *)(v6 - 208) = v9;
    v22 = *(_QWORD *)(v6 - 200);
    v23 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v23 & 1) != 0)
    {
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(v9 + 16))(v12, v18 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), AssociatedTypeWitness);
    }
    else
    {
      v27 = sub_23B1C6F38();
      if (*(_QWORD *)(v6 - 240) != 8)
      {
        __break(1u);
        goto LABEL_17;
      }
      *(_QWORD *)(v6 - 120) = v27;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v12, v6 - 120, AssociatedTypeWitness);
      swift_unknownObjectRelease();
    }
    *(_QWORD *)(v6 - 144) = 1;
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v22, v12, AssociatedTypeWitness);
    v24 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v26 = swift_getAssociatedConformanceWitness();
    *(_QWORD *)(v6 - 120) = AssociatedTypeWitness;
    *(_QWORD *)(v6 - 112) = v24;
    *(_QWORD *)(v6 - 104) = AssociatedConformanceWitness;
    *(_QWORD *)(v6 - 96) = v26;
    type metadata accessor for ReconciliationID();
  }
  swift_bridgeObjectRelease();
  if ((*(_DWORD *)(v6 - 244) & 1) != 0)
  {
    type metadata accessor for MaintenanceContinuation();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = 0;
    *(_BYTE *)(v28 + 24) = 1;
    *(_QWORD *)(v28 + 32) = 0;
    *(_BYTE *)(v28 + 40) = 1;
    *(_QWORD *)(v6 - 120) = 0;
    *(_QWORD *)(v6 - 112) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 - 120) = 0x2064657461647075;
    *(_QWORD *)(v6 - 112) = 0xE800000000000000;
    v29 = MEMORY[0x23B85F0B0](v18, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 - 136) = v29;
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v6 - 224))(v28, *(_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 112), 0);
    swift_release();
  }
  else
  {
    *(_QWORD *)(v6 - 120) = 0;
    *(_QWORD *)(v6 - 112) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 - 120) = 0x2064657461647075;
    *(_QWORD *)(v6 - 112) = 0xE800000000000000;
    v30 = MEMORY[0x23B85F0B0](v18, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 - 136) = v30;
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v6 - 224))(0, *(_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 112), 0);
  }
  return swift_bridgeObjectRelease();
}

void type metadata accessor for Maintenance.UnblockIgnoreFolderProcessing()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD2DD08()
{
  return 0x632D65726F6E6769;
}

uint64_t sub_23AD2DD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t (*)(), uint64_t, uint64_t (*)(void *, char), _QWORD *);
  uint64_t v19;

  v6 = v5;
  v11 = *v6;
  v12 = swift_allocObject();
  v13 = *(_QWORD *)(v11 + 560);
  *(_QWORD *)(v12 + 16) = sub_23B1C6758();
  v14 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v19 = (uint64_t)v6 + *(_QWORD *)(*v6 + 536);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  *(_OWORD *)(v15 + 24) = *(_OWORD *)(v11 + 568);
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(v11 + 584);
  *(_QWORD *)(v15 + 48) = v12;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = v12;
  v16[4] = a3;
  v16[5] = v6;
  v16[6] = a4;
  v16[7] = a5;
  v17 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t (*)(), uint64_t, uint64_t (*)(void *, char), _QWORD *))(*(_QWORD *)v14 + 144);
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v17(v19, a2, 0, 0, sub_23AD3BE0C, v15, sub_23AD3BE60, v16);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23AD2DEA4()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = sub_23B1C67DC();
  swift_bridgeObjectRetain();
  MEMORY[0x23B8613CC](MEMORY[0x24BEE12C8], v0);
  sub_23B1C67A0();
  swift_endAccess();
  return 0;
}

uint64_t sub_23AD2DF3C(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  *(_BYTE *)(v16 + 24) = a2 & 1;
  *(_QWORD *)(v16 + 32) = a4;
  *(_QWORD *)(v16 + 40) = a5;
  *(_QWORD *)(v16 + 48) = a6;
  *(_QWORD *)(v16 + 56) = a7;
  *(_QWORD *)(v16 + 64) = a8;
  *(_QWORD *)(v16 + 72) = a3;
  sub_23AAFCDA4(a1, a2 & 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23ACFFA68((uint64_t)"execute(on:continuation:result:completion:)", 43, 2, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23AD3BEC4, v16);
  return swift_release();
}

void sub_23AD2E038(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[11];
  uint64_t v16;
  char *v17;
  uint64_t AssociatedTypeWitness;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v15[5] = a8;
  v15[6] = a7;
  v15[8] = a5;
  v19 = a4;
  v8 = (_QWORD *)*a4;
  v16 = sub_23B1C5BDC();
  v15[10] = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v15[9] = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v8[12];
  v11 = v8[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15[7] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v17 = (char *)v15 - v12;
  v13 = v8[11];
  v14 = v8[13];
  v23 = v11;
  v24 = v13;
  v20 = v14;
  v21 = v13;
  v22 = v10;
  v25 = v10;
  v26 = v14;
  type metadata accessor for ReconciliationMutation();
}

uint64_t sub_23AD2E724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;

  v5 = sub_23AD3B904(a1, a2, a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v5;
}

void type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD2E794()
{
  return 0xD000000000000023;
}

void sub_23AD2E7B0()
{
  type metadata accessor for ReconciliationMutation();
}

void type metadata accessor for Maintenance.RetriggerResolvedVendorExclusion()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD2F24C()
{
  return 0xD000000000000018;
}

uint64_t sub_23AD2F268(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, unint64_t, unint64_t, _QWORD))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;

  v45 = a2;
  v49 = a1;
  v6 = *v4;
  v7 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*v4 + 560), *(_QWORD *)(*v4 + 576), (uint64_t)a4);
  v8 = sub_23B1C6C98();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v43 - v11;
  v13 = *(_QWORD *)(v7 - 8);
  v47 = v7;
  v48 = v13;
  MEMORY[0x24BDAC7A8](v10);
  v46 = (char *)&v43 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v43 - v19;
  v21 = *(_QWORD *)(v6 + 536);
  v23 = v22;
  v24 = (uint64_t)v4 + v21;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v25((char *)&v43 - v19, v24, AssociatedTypeWitness);
  v25(v18, (uint64_t)v20, AssociatedTypeWitness);
  if (!swift_dynamicCast())
  {
    v28 = 0xD00000000000003BLL;
    v29 = 0x800000023B201130;
LABEL_6:
    a4(0, v28, v29, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v20, AssociatedTypeWitness);
  }
  if (v51 != 1)
  {
    v28 = 0xD000000000000039;
    v29 = 0x800000023B2011E0;
    goto LABEL_6;
  }
  v44 = v23;
  v26 = v50;
  v27 = *(_QWORD *)(v49 + 32);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)v27 + 240))(v20, 1);
  v49 = v26;
  v31 = v47;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v12, 1, v47) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    a4(0, 0xD000000000000022, 0x800000023B201170, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v20, AssociatedTypeWitness);
  }
  v32 = v48;
  v33 = v46;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v46, v12, v31);
  v34 = &v33[*(int *)(v31 + 48)];
  v35 = type metadata accessor for ItemMetadata();
  if ((v34[*(int *)(v35 + 60)] & 1) != 0)
  {
    a4(0, 0xD000000000000033, 0x800000023B2011A0, 0);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v20, AssociatedTypeWitness);
  }
  v36 = *(_QWORD *)&v34[*(int *)(v35 + 76)];
  if (v45 && (type metadata accessor for MaintenanceContinuation(), (v37 = swift_dynamicCastClass()) != 0))
  {
    v38 = *(_QWORD *)(v37 + 16);
    v39 = *(_BYTE *)(v37 + 24);
  }
  else
  {
    v38 = 0;
    v39 = 1;
  }
  v40 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v27 + 608))(v49, v36);
  v41 = v44;
  if ((v40 & 1) != 0)
  {
    type metadata accessor for MaintenanceContinuation();
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = v38;
    *(_BYTE *)(v42 + 24) = v39;
    *(_QWORD *)(v42 + 32) = 0;
    *(_BYTE *)(v42 + 40) = 1;
    swift_retain();
  }
  else
  {
    v42 = 0;
  }
  a4(v42, 0, 0, 0);
  swift_release_n();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v20, AssociatedTypeWitness);
}

void type metadata accessor for Maintenance.UpdateClosestSyncRoot()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD2F6B8()
{
  return 0xD000000000000017;
}

uint64_t sub_23AD2F6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char v24;
  __int16 v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[31];
  _QWORD v33[31];
  char v34[8];
  __int16 v35;
  uint64_t v36;

  v30 = a4;
  v7 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)v4 + 560), *(_QWORD *)(*(_QWORD *)v4 + 576), a3);
  v8 = sub_23B1C6C98();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v30 - v11;
  v31 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v30 - v13;
  v15 = *(_QWORD *)(a2 + 32);
  v16 = v36;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v15 + 240))(a1, 1);
  if (!v16)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v12, 1, v7) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v30, 1, 1, v7);
    }
    v18 = v31;
    v19 = a1;
    v20 = v14;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v14, v12, v7);
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v15 + 264))(v33, v19);
    v21 = (uint64_t)&v14[*(int *)(v7 + 52)];
    sub_23AAB7EC8(v21, (uint64_t)v32);
    sub_23AAB7EC8((uint64_t)v33, v21);
    sub_23AAB7E4C(v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
    sub_23AAB7E4C(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    sub_23AAB7EC8((uint64_t)v33, (uint64_t)v34);
    if (sub_23AAFCF2C((uint64_t)v34) == 1)
    {
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
      v23 = v30;
    }
    else
    {
      v24 = v34[0];
      v25 = v35;
      sub_23AAB7E4C(v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      v26 = v30;
      if ((v25 & 0x100) != 0 && (v24 & 0x40) != 0)
      {
        v27 = &v20[*(int *)(v7 + 48)];
        v28 = type metadata accessor for ItemMetadata();
        if (v27[*(int *)(v28 + 48)])
          v29 = 5;
        else
          v29 = 4;
        v27[*(int *)(v28 + 84)] = v29;
        (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v26, v20, v7);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v26, 0, 1, v7);
        return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v7);
      }
      v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
      v23 = v30;
    }
    v22(v23, 1, 1, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v7);
  }
  return result;
}

uint64_t sub_23AD2F968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void (*v7)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(void);
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[3];

  v7 = (void (*)(void))a4;
  v55 = a3;
  v64 = a1;
  v9 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)v5 + 560), *(_QWORD *)(*(_QWORD *)v5 + 576), a4);
  v10 = sub_23B1C6C98();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v58 = (char *)&v48 - v15;
  v16 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  v62 = v16;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v48 - v17;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v21 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v22;
  MEMORY[0x24BDAC7A8](v21);
  v57 = (char *)&v48 - v24;
  v52 = a5;
  v53 = v18;
  v54 = v13;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    v25 = swift_dynamicCastClass();
    if (v25)
    {
      v26 = v25;
      v25 = *(_QWORD *)(v25 + 16);
      v27 = *(unsigned __int8 *)(v26 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    v25 = 0;
  }
  v27 = 1;
LABEL_6:
  v28 = (uint64_t)v58;
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(v64 + 32) + 344))(v25, v27);
  v30 = v57;
  v31 = v29;
  v50 = v32;
  v49 = v33;
  if (MEMORY[0x23B85F0E0](v29, AssociatedTypeWitness))
  {
    v48 = v7;
    v34 = 0;
    v56 = v31;
    while (1)
    {
      v35 = sub_23B1C6770();
      sub_23B1C6734();
      if ((v35 & 1) != 0)
      {
        result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v20 + 16))(v30, v31+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v34, AssociatedTypeWitness);
      }
      else
      {
        result = sub_23B1C6F38();
        if (v51 != 8)
          goto LABEL_22;
        v65[0] = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v20 + 16))(v30, v65, AssociatedTypeWitness);
        result = swift_unknownObjectRelease();
      }
      v37 = v34 + 1;
      v38 = v64;
      if (__OFADD__(v34, 1))
        break;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v30, AssociatedTypeWitness);
      sub_23AD2F6D4((uint64_t)v23, v38, v39, v28);
      v40 = v62;
      v41 = v28;
      v42 = v28;
      v43 = v61;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v41, 1, v61) != 1)
      {
        v44 = (uint64_t)v23;
        v45 = v53;
        (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v53, v42, v43);
        v46 = (uint64_t)v54;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v54, v45, v43);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v46, 0, 1, v43);
        sub_23B0F7398(v46, v44, 0, 0, 0, v64, *(_QWORD *)(v63 + 112), *(_QWORD *)(v63 + 120));
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, AssociatedTypeWitness);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v42, v60);
      v28 = v42;
      v31 = v56;
      ++v34;
      if (v37 == MEMORY[0x23B85F0E0](v56, AssociatedTypeWitness))
      {
        swift_bridgeObjectRelease();
        v7 = v48;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_18:
    if ((v50 & 1) != 0)
    {
      return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v7)(0, 0, 0, 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      v47 = swift_allocObject();
      *(_QWORD *)(v47 + 16) = v49;
      *(_BYTE *)(v47 + 24) = 0;
      *(_QWORD *)(v47 + 32) = 0;
      *(_BYTE *)(v47 + 40) = 1;
      v7();
      return swift_release();
    }
  }
  return result;
}

void type metadata accessor for Maintenance.MarkPackagesAsEvictable()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD2FE60()
{
  return 0xD000000000000016;
}

void sub_23AD2FE7C()
{
  type metadata accessor for ReconciliationMutation();
}

void type metadata accessor for Maintenance.MarkPackagesAsSyncRoot()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD304B8()
{
  return 0xD000000000000017;
}

uint64_t sub_23AD304D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[31];
  _QWORD v30[31];
  _BYTE v31[256];
  uint64_t v32;

  v27 = a4;
  v7 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)v4 + 560), *(_QWORD *)(*(_QWORD *)v4 + 576), a3);
  v8 = sub_23B1C6C98();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v27 - v11;
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v27 - v13;
  v15 = *(_QWORD *)(a2 + 32);
  v16 = v32;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v15 + 240))(a1, 1);
  if (!v16)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v12, 1, v7) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v27, 1, 1, v7);
    }
    v18 = v28;
    v19 = v14;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v14, v12, v7);
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v15 + 264))(v30, a1);
    v20 = (uint64_t)&v14[*(int *)(v7 + 52)];
    sub_23AAB7EC8(v20, (uint64_t)v29);
    sub_23AAB7EC8((uint64_t)v30, v20);
    sub_23AAB7E4C(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
    sub_23AAB7E4C(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    sub_23AAB7EC8((uint64_t)v30, (uint64_t)v31);
    if (sub_23AAFCF2C((uint64_t)v31) == 1)
    {
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
      v22 = v27;
    }
    else
    {
      v23 = v31[0];
      sub_23AAB7E4C(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      v24 = v27;
      if ((v23 & 0xE) == 0)
      {
        v26 = &v19[*(int *)(v7 + 48)];
        v26[*(int *)(type metadata accessor for ItemMetadata() + 36)] = 1;
        (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(v24, v19, v7);
        v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
        v22 = v24;
        v25 = 0;
LABEL_11:
        v21(v22, v25, 1, v7);
        return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v19, v7);
      }
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
      v22 = v27;
    }
    v25 = 1;
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_23AD30750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  void (*v7)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(void);
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[3];

  v7 = (void (*)(void))a4;
  v55 = a3;
  v64 = a1;
  v9 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)v5 + 560), *(_QWORD *)(*(_QWORD *)v5 + 576), a4);
  v10 = sub_23B1C6C98();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v58 = (char *)&v48 - v15;
  v16 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  v62 = v16;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v48 - v17;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v21 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v22;
  MEMORY[0x24BDAC7A8](v21);
  v57 = (char *)&v48 - v24;
  v52 = a5;
  v53 = v18;
  v54 = v13;
  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    v25 = swift_dynamicCastClass();
    if (v25)
    {
      v26 = v25;
      v25 = *(_QWORD *)(v25 + 16);
      v27 = *(unsigned __int8 *)(v26 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    v25 = 0;
  }
  v27 = 1;
LABEL_6:
  v28 = (uint64_t)v58;
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(v64 + 32) + 360))(v25, v27);
  v30 = v57;
  v31 = v29;
  v50 = v32;
  v49 = v33;
  if (MEMORY[0x23B85F0E0](v29, AssociatedTypeWitness))
  {
    v48 = v7;
    v34 = 0;
    v56 = v31;
    while (1)
    {
      v35 = sub_23B1C6770();
      sub_23B1C6734();
      if ((v35 & 1) != 0)
      {
        result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v20 + 16))(v30, v31+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v34, AssociatedTypeWitness);
      }
      else
      {
        result = sub_23B1C6F38();
        if (v51 != 8)
          goto LABEL_22;
        v65[0] = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v20 + 16))(v30, v65, AssociatedTypeWitness);
        result = swift_unknownObjectRelease();
      }
      v37 = v34 + 1;
      v38 = v64;
      if (__OFADD__(v34, 1))
        break;
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v30, AssociatedTypeWitness);
      sub_23AD304D4((uint64_t)v23, v38, v39, v28);
      v40 = v62;
      v41 = v28;
      v42 = v28;
      v43 = v61;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v41, 1, v61) != 1)
      {
        v44 = (uint64_t)v23;
        v45 = v53;
        (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v53, v42, v43);
        v46 = (uint64_t)v54;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v54, v45, v43);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v46, 0, 1, v43);
        sub_23B0F7398(v46, v44, 0, 0, 0, v64, *(_QWORD *)(v63 + 112), *(_QWORD *)(v63 + 120));
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, AssociatedTypeWitness);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v42, v60);
      v28 = v42;
      v31 = v56;
      ++v34;
      if (v37 == MEMORY[0x23B85F0E0](v56, AssociatedTypeWitness))
      {
        swift_bridgeObjectRelease();
        v7 = v48;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_18:
    if ((v50 & 1) != 0)
    {
      return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v7)(0, 0, 0, 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      v47 = swift_allocObject();
      *(_QWORD *)(v47 + 16) = v49;
      *(_BYTE *)(v47 + 24) = 0;
      *(_QWORD *)(v47 + 32) = 0;
      *(_BYTE *)(v47 + 40) = 1;
      v7();
      return swift_release();
    }
  }
  return result;
}

void type metadata accessor for Maintenance.MarkDirectoriesAsLocked()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD30C48()
{
  return 0xD000000000000017;
}

void sub_23AD30C64()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void type metadata accessor for Maintenance.UnpauseReconciliations()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD31134()
{
  return 0xD000000000000019;
}

void sub_23AD31150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[118];

  v10[44] = a3;
  v10[22] = a2;
  v4 = (_QWORD *)*v3;
  v5 = sub_23B1C5BDC();
  v10[16] = *(_QWORD *)(v5 - 8);
  v10[17] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v10[15] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v4[71];
  v8 = v4[72];
  v9 = v4[73];
  v10[51] = v4[70];
  v10[52] = v7;
  v10[53] = v8;
  v10[54] = v9;
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD31DC4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, unint64_t, void *), uint64_t a5)
{
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  id v41;
  void (**v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, unint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  void (**v66)(char *, uint64_t);
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  void (*v73)(char *, unint64_t, uint64_t);
  char *v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  int64_t v80;
  unint64_t v81;
  int64_t v82;
  uint64_t v83;
  char *v84;
  int v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  char *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t TupleTypeMetadata2;
  char *v120;
  void (**v121)(char *, uint64_t);
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(_QWORD, uint64_t, unint64_t, void *);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v125 = a5;
  v126 = (void (*)(_QWORD, uint64_t, unint64_t, void *))a4;
  v109 = a3;
  v96 = a2;
  v7 = *(_QWORD **)v5;
  v106 = sub_23B1C5BDC();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v108 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v7[70];
  v118 = v7[72];
  v104 = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = sub_23B1C6C98();
  v116 = *(_QWORD *)(v11 - 8);
  v117 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v114 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v115 = (char *)&v88 - v15;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v113 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v120 = (char *)&v88 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v95 = (char *)&v88 - v21;
  v22 = v7[71];
  v101 = v7;
  v23 = v7[73];
  v25 = type metadata accessor for SnapshotItem(255, v22, v23, v24);
  v98 = sub_23B1C6C98();
  v97 = *(_QWORD *)(v98 - 8);
  v26 = MEMORY[0x24BDAC7A8](v98);
  v122 = (char *)&v88 - v27;
  v100 = v25;
  v107 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v99 = (char *)&v88 - v28;
  v102 = v23;
  v103 = v22;
  v29 = swift_getAssociatedTypeWitness();
  v110 = sub_23B1C6C98();
  v121 = *(void (***)(char *, uint64_t))(v110 - 8);
  v30 = MEMORY[0x24BDAC7A8](v110);
  v32 = (char *)&v88 - v31;
  v124 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v111 = (char *)&v88 - v33;
  sub_23AFD4CB4(AssociatedTypeWitness, AssociatedTypeWitness);
  v34 = *(_QWORD *)(v16 + 72);
  swift_allocObject();
  v35 = sub_23B1C6728();
  v36 = *(_QWORD *)(*(_QWORD *)v5 + 536);
  v123 = v5;
  v37 = v5 + v36;
  v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v38(v39, v5 + v36, AssociatedTypeWitness);
  v40 = sub_23AD7D55C(v35);
  v131 = v40;
  v112 = a1;
  (*(void (**)(uint64_t))(**(_QWORD **)(a1 + 16) + 160))(v37);
  v93 = v40;
  v42 = v121;
  v88 = v37;
  v89 = 0;
  v43 = v122;
  v91 = v38;
  v90 = v34;
  v92 = v16;
  v94 = AssociatedTypeWitness;
  v44 = v124;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v32, 1, v29) == 1)
  {
    swift_bridgeObjectRelease();
    v42[1](v32, v110);
    v126(0, 0x746F6E206D657469, 0xEE00646E756F6220, 0);
    return;
  }
  v45 = v111;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v111, v32, v29);
  v46 = v29;
  v47 = v112;
  v48 = v43;
  v49 = v89;
  (*(void (**)(char *, uint64_t))(**(_QWORD **)(v112 + 40) + 240))(v45, 1);
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    swift_bridgeObjectRelease();
    v41 = v49;
    v126(0, 0, 0, v49);

    return;
  }
  v110 = v46;
  v50 = v107;
  v51 = v100;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v48, 1, v100) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, int64_t))(v97 + 8))(v48, v98);
    v126(0, 0xD000000000000013, 0x800000023B201010, 0);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v110);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v99, v48, v51);
  v52 = MEMORY[0x23B8613CC](&unk_23B1DD478, v51);
  if (sub_23AF219A4(v51, v52) != 1)
  {
    LODWORD(v96) = 1;
    v62 = v109;
    goto LABEL_43;
  }
  v53 = *(_QWORD *)(v47 + 32);
  v54 = v95;
  v55 = v94;
  v56 = (void (*)(char *, unint64_t, uint64_t))v91;
  v91((uint64_t)v95, v88, v94);
  if (v96)
  {
    type metadata accessor for MaintenanceContinuation();
    v57 = swift_dynamicCastClass();
    v58 = TupleTypeMetadata2;
    v59 = v92;
    if (v57)
    {
      v60 = *(_QWORD *)(v57 + 16);
      v61 = *(unsigned __int8 *)(v57 + 24);
    }
    else
    {
      v60 = 0;
      v61 = 1;
    }
  }
  else
  {
    v60 = 0;
    v61 = 1;
    v58 = TupleTypeMetadata2;
    v59 = v92;
  }
  v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)v53 + 376))(v54, v60, v61);
  v93 = v64;
  LODWORD(v96) = v65 & 1;
  v66 = *(void (***)(char *, uint64_t))(v59 + 8);
  ((void (*)(char *, uint64_t))v66)(v54, v55);
  v67 = 0;
  v122 = (char *)v63;
  v68 = *(_QWORD *)(v63 + 64);
  v97 = v63 + 64;
  v69 = 1 << *(_BYTE *)(v63 + 32);
  v70 = -1;
  if (v69 < 64)
    v70 = ~(-1 << v69);
  v71 = v70 & v68;
  v98 = (unint64_t)(v69 + 63) >> 6;
  v95 = (char *)(v98 - 1);
  v72 = v118;
  v121 = v66;
  while (1)
  {
    if (v71)
    {
      v75 = __clz(__rbit64(v71));
      v71 &= v71 - 1;
      v76 = v75 | (v67 << 6);
      goto LABEL_20;
    }
    v80 = v67 + 1;
    if (__OFADD__(v67, 1))
      break;
    if (v80 >= v98)
      goto LABEL_32;
    v81 = *(_QWORD *)(v97 + 8 * v80);
    if (v81)
      goto LABEL_24;
    v67 += 2;
    if (v80 + 1 >= v98)
    {
      v71 = 0;
      v79 = 1;
      v67 = v80;
    }
    else
    {
      v81 = *(_QWORD *)(v97 + 8 * v67);
      if (v81)
      {
        ++v80;
        goto LABEL_24;
      }
      v82 = v80 + 2;
      if (v80 + 2 >= v98)
      {
LABEL_32:
        v71 = 0;
        v79 = 1;
        goto LABEL_33;
      }
      v81 = *(_QWORD *)(v97 + 8 * v82);
      if (v81)
      {
        v80 += 2;
LABEL_24:
        v71 = (v81 - 1) & v81;
        v76 = __clz(__rbit64(v81)) + (v80 << 6);
        v67 = v80;
LABEL_20:
        v77 = v122;
        v78 = v114;
        v56(v114, *((_QWORD *)v122 + 6) + v76 * v90, v94);
        v79 = 0;
        v78[*(int *)(v58 + 48)] = *(_BYTE *)(*((_QWORD *)v77 + 7) + v76);
        v66 = v121;
        goto LABEL_34;
      }
      while (1)
      {
        v80 = v82 + 1;
        if (__OFADD__(v82, 1))
          goto LABEL_45;
        if (v80 >= v98)
          break;
        v81 = *(_QWORD *)(v97 + 8 * v80);
        ++v82;
        if (v81)
          goto LABEL_24;
      }
      v71 = 0;
      v79 = 1;
      v67 = (int64_t)v95;
    }
LABEL_33:
    v78 = v114;
LABEL_34:
    v83 = *(_QWORD *)(v58 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v78, v79, 1, v58);
    v84 = v115;
    (*(void (**)(void))(v116 + 32))();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v84, 1, v58) == 1)
    {
      swift_release();
      v47 = v112;
      v62 = v109;
LABEL_43:
      sub_23AD31150(v131, v62, v47);
    }
    v85 = v84[*(int *)(v58 + 48)];
    v86 = v120;
    v87 = v94;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v120, v84, v94);
    if (v85 == 1)
    {
      v127 = v104;
      v128 = v103;
      v129 = v72;
      v130 = v102;
      type metadata accessor for JobResult();
    }
    v73 = (void (*)(char *, unint64_t, uint64_t))v91;
    v91((uint64_t)v113, (uint64_t)v86, v87);
    sub_23B1C67DC();
    sub_23B1C67AC();
    v74 = v86;
    v56 = v73;
    ((void (*)(char *, uint64_t))v66)(v74, v87);
    v72 = v118;
    v58 = TupleTypeMetadata2;
  }
  __break(1u);
LABEL_45:
  __break(1u);
}

void type metadata accessor for Maintenance.ResolveItemEvictability()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD329F4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23AD32A28()
{
  return 0x800000;
}

uint64_t sub_23AD32A38(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_23AD32A68(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_23AD32A74(uint64_t a1)
{
  swift_allocObject();
  return sub_23AD32ABC(a1);
}

uint64_t sub_23AD32ABC(uint64_t a1)
{
  uint64_t v2;
  _QWORD v4[5];

  sub_23AA77B28(a1, (uint64_t)v4);
  v2 = sub_23AEC6654(v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t sub_23AD32B18()
{
  return swift_deallocClassInstance();
}

void type metadata accessor for Maintenance.InheritedContentPolicyContinuation()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD32B34()
{
  return 0xD000000000000020;
}

uint64_t sub_23AD32B50(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD), uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  char v40;
  unint64_t v41;
  void (*v42)(_BYTE *, unint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[12];
  _BOOL4 v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(_QWORD *__return_ptr, _BYTE *);
  uint64_t v66;
  uint64_t AssociatedTypeWitness;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  _QWORD v86[4];
  uint64_t v87;
  _QWORD v88[32];

  v80 = a4;
  v81 = a5;
  v83 = a3;
  v8 = (_QWORD *)*v5;
  v9 = sub_23B1C5BDC();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v62 = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = v8[72];
  v12 = v8[70];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v61 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v68 = &v53[-v13];
  v15 = type metadata accessor for SnapshotMutation(0, v12, v11, v14);
  v70 = *(_QWORD *)(v15 - 8);
  v71 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v69 = &v53[-v16];
  v73 = v12;
  v74 = v11;
  v18 = type metadata accessor for SnapshotItem(255, v12, v11, v17);
  v19 = sub_23B1C6C98();
  v78 = *(_QWORD *)(v19 - 8);
  v79 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v77 = &v53[-v21];
  v22 = *(_QWORD *)(v18 - 8);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v85 = &v53[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = MEMORY[0x24BDAC7A8](v23);
  v84 = &v53[-v26];
  v60 = v27;
  MEMORY[0x24BDAC7A8](v25);
  v29 = &v53[-v28];
  v82 = a1;
  v30 = a1[4];
  v72 = v8;
  v31 = (char *)v5 + v8[67];
  v32 = (*(uint64_t (**)(char *))(*(_QWORD *)v30 + 336))(v31);
  v33 = (unint64_t)(v32 - 501) < 2 || v32 == 1003;
  v34 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)v30 + 472))(v31, a2);
  v36 = v35;
  v54 = v33;
  v37 = MEMORY[0x23B85F0E0](v34, v18);
  v58 = v30;
  v38 = v34;
  v55 = v36;
  if (!v37)
  {
    swift_bridgeObjectRelease();
    if (v36)
    {
      v46 = v82;
      v47 = 0;
      if (v54)
        goto LABEL_15;
    }
    else
    {
      v47 = 1;
      v46 = v82;
    }
    (*(void (**)(uint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)v46[3] + 160))(66, 0x800000, 0, 1);
    v48 = MEMORY[0x23B85F0B0]();
    v49 = swift_bridgeObjectRelease();
    if (v48 <= 0)
    {
      (*(void (**)(uint64_t))(*v46 + 560))(v49);
      if ((v47 & 1) != 0)
        return v80(0, 0, 0, 0);
      v52 = swift_retain();
      v80(v52, 0, 0, 0);
      return swift_release_n();
    }
LABEL_15:
    v50 = v72[71];
    v51 = v72[73];
    v86[0] = v73;
    v86[1] = v50;
    v86[2] = v74;
    v86[3] = v51;
    type metadata accessor for JobResult();
  }
  v76 = 0;
  v65 = *(void (**)(_QWORD *__return_ptr, _BYTE *))(*(_QWORD *)v30 + 264);
  v66 = v34;
  v56 = 0x800000023B200FC0;
  v57 = v22;
  v39 = v84;
  v59 = v29;
  v40 = sub_23B1C6770();
  sub_23B1C6734();
  if ((v40 & 1) != 0)
  {
    v41 = v38 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v42 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v22 + 16);
    v42(v29, v41, v18);
    goto LABEL_7;
  }
  result = sub_23B1C6F38();
  if (v60 == 8)
  {
    v86[0] = result;
    v42 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v22 + 16);
    v42(v29, (unint64_t)v86, v18);
    swift_unknownObjectRelease();
LABEL_7:
    v75 = 1;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 32))(v39, v29, v18);
    v65(v88, v39);
    sub_23AD3BD7C((uint64_t)v88, (uint64_t)&v39[*(int *)(v18 + 52)]);
    v43 = (uint64_t)v85;
    v42(v85, (unint64_t)v39, v18);
    v87 = 2;
    v44 = (uint64_t)v77;
    v42(v77, (unint64_t)v39, v18);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v44, 0, 1, v18);
    sub_23B0F7C20(v44, v43, (uint64_t)&v87, v82, v83, 0);
  }
  __break(1u);
  return result;
}

void type metadata accessor for Maintenance.RefreshInheritedContentPolicy()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD3347C()
{
  return 0xD000000000000025;
}

void sub_23AD33498()
{
  type metadata accessor for PersistenceTrigger();
}

void sub_23AD334F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD, _QWORD, _QWORD, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _BYTE v28[96];

  *(_QWORD *)(v6 - 200) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v6 - 192) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 208) = &v28[-v7];
  *(_QWORD *)(v6 - 176) = v3;
  *(_QWORD *)(v6 - 160) = v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 136) = AssociatedTypeWitness;
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v6 - 224) = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = &v28[-v10];
  *(_QWORD *)(v6 - 152) = v2;
  v12 = *(_QWORD *)(v2 + 24);
  v13 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  v14 = (char *)objc_msgSend(v13, sel_speculativeRefreshInheritedContentPolicyMaximumJobs);

  v15 = (*(uint64_t (**)(uint64_t, uint64_t, char *, _QWORD))(*(_QWORD *)v12 + 152))(1, 66, v14, 0);
  if (v15 >= (uint64_t)v14)
    goto LABEL_14;
  *(_QWORD *)(v6 - 232) = v15;
  if (!__OFSUB__(v14, v15))
  {
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, char *))(*(_QWORD *)v12 + 160))(66, 0x800000, 0, &v14[-v15]);
    *(_QWORD *)(v6 - 256) = 0;
    *(_QWORD *)(v6 - 248) = v5;
    *(_QWORD *)(v6 - 240) = v4;
    v18 = swift_bridgeObjectRetain();
    v19 = *(_QWORD *)(v6 - 136);
    if (MEMORY[0x23B85F0E0](v18, v19))
    {
      *(_QWORD *)(v6 - 216) = *(_QWORD *)(**(_QWORD **)(v6 - 152) + 312);
      v20 = sub_23B1C6770();
      sub_23B1C6734();
      if ((v20 & 1) != 0)
      {
        (*(void (**)(_BYTE *, unint64_t, uint64_t))(v9 + 16))(v11, v17 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v19);
        goto LABEL_8;
      }
      v24 = sub_23B1C6F38();
      if (*(_QWORD *)(v6 - 224) == 8)
      {
        *(_QWORD *)(v6 - 120) = v24;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v6 - 120, v19);
        swift_unknownObjectRelease();
LABEL_8:
        *(_QWORD *)(v6 - 144) = 1;
        v21 = swift_getAssociatedTypeWitness();
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        v23 = swift_getAssociatedConformanceWitness();
        *(_QWORD *)(v6 - 120) = *(_QWORD *)(v6 - 136);
        *(_QWORD *)(v6 - 112) = v21;
        *(_QWORD *)(v6 - 104) = AssociatedConformanceWitness;
        *(_QWORD *)(v6 - 96) = v23;
        type metadata accessor for ReconciliationID();
      }
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v6 - 232))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v6 - 240))(0, 0, 0, 0);
      return;
    }
    v25 = MEMORY[0x23B85F0B0](v17, v19);
    v26 = swift_bridgeObjectRelease();
    v4 = *(void (**)(_QWORD, _QWORD, _QWORD, void *))(v6 - 240);
    v27 = *(void **)(v6 - 256);
    if (!v25)
    {
      (*(void (**)(uint64_t))(**(_QWORD **)(v6 - 152) + 560))(v26);
      if (v27)
      {
        v16 = v27;
        v4(0, 0, 0, v27);

        return;
      }
    }
LABEL_14:
    v4(0, 0, 0, 0);
    return;
  }
  __break(1u);
LABEL_18:
  __break(1u);
}

void type metadata accessor for Maintenance.PaceRefreshInheritedContentPolicy()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD33914()
{
  return 0xD000000000000012;
}

uint64_t sub_23AD33930(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  if (a2
    && (type metadata accessor for MaintenanceContinuation(), (v7 = swift_dynamicCastClass()) != 0)
    && *(_BYTE *)(v7 + 24) != 1)
  {
    v8 = *(_QWORD *)(v7 + 16);
  }
  else
  {
    v8 = 0;
  }
  (*(void (**)(uint64_t))(**(_QWORD **)(a1 + 32) + 600))(v8);
  v10 = v9;
  v14 = v11;
  if (MEMORY[0x23B85F0E0]())
    type metadata accessor for JobResult();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))a4)(0, 0, 0, 0);
  type metadata accessor for MaintenanceContinuation();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  *(_BYTE *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  *(_BYTE *)(v12 + 40) = 1;
  a4();
  return swift_release();
}

void type metadata accessor for Maintenance.FixContentPolicyInNonMaterializedFolders()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD33C7C()
{
  return 0xD00000000000001ELL;
}

void sub_23AD33C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  _QWORD v18[30];

  v18[4] = a5;
  v18[5] = a4;
  v18[17] = a3;
  v6 = *(_QWORD **)v5;
  v7 = *(_QWORD *)(*(_QWORD *)v5 + 576);
  v8 = v6[70];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18[13] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v18[12] = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v18[23] = (char *)v18 - v12;
  v13 = v6[73];
  v14 = v6[71];
  v15 = swift_getAssociatedTypeWitness();
  v18[15] = v8;
  v18[16] = v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18[10] = v14;
  v18[11] = v13;
  v17 = swift_getAssociatedConformanceWitness();
  v18[14] = AssociatedTypeWitness;
  v18[25] = AssociatedTypeWitness;
  v18[26] = v15;
  v18[27] = AssociatedConformanceWitness;
  v18[28] = v17;
  type metadata accessor for ReconciliationID();
}

void type metadata accessor for Maintenance.RescanParentDeletedChildren()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD341AC()
{
  return 0xD000000000000022;
}

void sub_23AD341C8()
{
  type metadata accessor for ReconciliationMutation();
}

uint64_t sub_23AD34224(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[96];

  *(_QWORD *)(v6 - 192) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v6 - 184) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 208) = &v30[-v7];
  *(_QWORD *)(v6 - 152) = v3;
  *(_QWORD *)(v6 - 144) = v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v6 - 136) = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v6 - 264) = v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v30[-v12];
  v14 = sub_23B1C6C98();
  *(_QWORD *)(v6 - 256) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v6 - 248) = v14;
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v6 - 216) = &v30[-v15];
  if (v4 && (type metadata accessor for MaintenanceContinuation(), (v16 = swift_dynamicCastClass()) != 0))
  {
    v17 = *(_QWORD *)(v16 + 16);
    v18 = *(unsigned __int8 *)(v16 + 24);
  }
  else
  {
    v17 = 0;
    v18 = 1;
  }
  v19 = v2 + *(_QWORD *)(v5 + 536);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(AssociatedTypeWitness, AssociatedConformanceWitness);
  *(_QWORD *)(v6 - 200) = AssociatedConformanceWitness;
  v21 = sub_23B1C63A4();
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v13, AssociatedTypeWitness);
  if ((v21 & 1) != 0)
  {
    v22 = 1;
    v23 = *(_QWORD *)(v6 - 216);
  }
  else
  {
    v23 = *(_QWORD *)(v6 - 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v23, v19, AssociatedTypeWitness);
    v22 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v23, v22, 1, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v6 - 224) + 16) + 328))(v23, v17, v18);
  *(_DWORD *)(v6 - 224) = v24;
  *(_QWORD *)(v6 - 272) = v25;
  if (MEMORY[0x23B85F0E0]())
  {
    v26 = *(_QWORD *)(v6 - 160);
    *(_QWORD *)(v6 - 120) = *(_QWORD *)(v6 - 144);
    *(_QWORD *)(v6 - 112) = v26;
    v27 = *(_QWORD *)(v6 - 168);
    *(_QWORD *)(v6 - 104) = *(_QWORD *)(v6 - 152);
    *(_QWORD *)(v6 - 96) = v27;
    type metadata accessor for JobResult();
  }
  swift_bridgeObjectRelease();
  if ((*(_DWORD *)(v6 - 224) & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v6 - 232))(0, 0, 0, 0);
  }
  else
  {
    type metadata accessor for MaintenanceContinuation();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = *(_QWORD *)(v6 - 272);
    *(_BYTE *)(v28 + 24) = 0;
    *(_QWORD *)(v28 + 32) = 0;
    *(_BYTE *)(v28 + 40) = 1;
    (*(void (**)(void))(v6 - 232))();
    swift_release();
  }
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 256) + 8))(*(_QWORD *)(v6 - 216), *(_QWORD *)(v6 - 248));
}

void type metadata accessor for Maintenance.UnmarkParentDeletedMergeSource()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD34724()
{
  return 0xD000000000000016;
}

void sub_23AD34740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  _QWORD v16[24];

  v16[4] = a5;
  v16[5] = a4;
  v16[13] = a3;
  v16[15] = a1;
  v6 = *(_QWORD **)v5;
  v7 = *(_QWORD *)(*(_QWORD *)v5 + 576);
  v8 = v6[70];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16[16] = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v16[10] = (char *)v16 - v10;
  v11 = v6[73];
  v12 = v6[71];
  v13 = swift_getAssociatedTypeWitness();
  v16[11] = v8;
  v16[12] = v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16[8] = v12;
  v16[9] = v11;
  v15 = swift_getAssociatedConformanceWitness();
  v16[17] = AssociatedTypeWitness;
  v16[19] = AssociatedTypeWitness;
  v16[20] = v13;
  v16[21] = AssociatedConformanceWitness;
  v16[22] = v15;
  type metadata accessor for ReconciliationID();
}

void type metadata accessor for Maintenance.UnblockItemRejection()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD34B98()
{
  return 0xD000000000000019;
}

void sub_23AD34BB4()
{
  type metadata accessor for ReconciliationMutation();
}

void type metadata accessor for Maintenance.UnblockDiskImportItems()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD35358()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_23AD35374(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    v6 = swift_dynamicCastClass();
    if (v6)
    {
      v7 = v6;
      v6 = *(_QWORD *)(v6 + 16);
      v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    v6 = 0;
  }
  v8 = 1;
LABEL_6:
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(a1 + 16) + 360))(v6, v8);
  if ((v10 & 1) != 0)
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))a4)(0, 0, 0, 0);
  v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_BYTE *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  *(_BYTE *)(v12 + 40) = 1;
  a4();
  return swift_release();
}

void type metadata accessor for Maintenance.RescanPendingSetFSSide()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD354B4()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_23AD354D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    v6 = swift_dynamicCastClass();
    if (v6)
    {
      v7 = v6;
      v6 = *(_QWORD *)(v6 + 16);
      v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    v6 = 0;
  }
  v8 = 1;
LABEL_6:
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(a1 + 16) + 352))(v6, v8);
  if ((v10 & 1) != 0)
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))a4)(0, 0, 0, 0);
  v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_BYTE *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  *(_BYTE *)(v12 + 40) = 1;
  a4();
  return swift_release();
}

void type metadata accessor for Maintenance.RescanPendingSetFPSide()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD35610()
{
  return 0xD000000000000035;
}

uint64_t sub_23AD3562C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    v6 = swift_dynamicCastClass();
    if (v6)
    {
      v7 = v6;
      v6 = *(_QWORD *)(v6 + 16);
      v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    v6 = 0;
  }
  v8 = 1;
LABEL_6:
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(a1 + 16) + 368))(v6, v8);
  if ((v10 & 1) != 0)
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))a4)(0, 0, 0, 0);
  v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_BYTE *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  *(_BYTE *)(v12 + 40) = 1;
  a4();
  return swift_release();
}

void type metadata accessor for Maintenance.RescanRecTableForConflictsInGS()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD3576C()
{
  return 0xD000000000000017;
}

void sub_23AD35788()
{
  type metadata accessor for ReconciliationMutation();
}

void type metadata accessor for Maintenance.UnblockRemoteDeletions()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD35B94()
{
  return 0xD00000000000001CLL;
}

void sub_23AD35BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t TupleTypeMetadata2;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v20 = a5;
  v21 = a4;
  v29 = a3;
  v27 = a1;
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 584);
  v8 = *(_QWORD *)(*v5 + 568);
  swift_getAssociatedTypeWitness();
  sub_23B1C6C98();
  v9 = *(_QWORD *)(v6 + 576);
  v10 = *(_QWORD *)(v6 + 560);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v25 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v11 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v22 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v24 = (char *)v18 - v14;
  v18[2] = v15;
  MEMORY[0x24BDAC7A8](v13);
  v26 = (char *)v18 - v16;
  v19 = sub_23B1C5BDC();
  v18[5] = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v18[4] = (char *)v18 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v10;
  v34 = v10;
  v35 = v8;
  v32 = v8;
  v31 = v9;
  v36 = v9;
  v37 = v7;
  v33 = v7;
  type metadata accessor for ReconciliationMutation();
}

void type metadata accessor for Maintenance.UnblockPathMatchingCycles()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD36DB4()
{
  return 0xD00000000000001CLL;
}

void sub_23AD36DD0()
{
  type metadata accessor for ReconciliationMutation();
}

void type metadata accessor for Maintenance.UnblockPathMatchingDuringImport()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD371DC()
{
  return 0xD000000000000019;
}

void sub_23AD371F8()
{
  type metadata accessor for ReconciliationMutation();
}

void type metadata accessor for Maintenance.UnblockChildrenDeletion()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD37FC8()
{
  return 0xD000000000000015;
}

void sub_23AD37FE4()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23AD3803C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 152) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 160) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v9;
  *(_QWORD *)(v13 - 96) = v12;
  *(_QWORD *)(v13 - 88) = v11;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AD38084(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[96];

  *(_QWORD *)(v5 - 136) = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v5 - 200) = v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v26[-v10];
  *(_QWORD *)(v5 - 192) = v3;
  *(_QWORD *)(v5 - 184) = v2;
  *(_QWORD *)(v5 - 168) = v4;
  if (v1)
  {
    type metadata accessor for MaintenanceContinuation();
    v12 = swift_dynamicCastClass();
    if (v12)
    {
      v13 = v12;
      v12 = *(_QWORD *)(v12 + 16);
      v14 = *(unsigned __int8 *)(v13 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    v12 = 0;
  }
  v14 = 1;
LABEL_6:
  v15 = *(_QWORD *)(v5 - 144);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(v15 + 16) + 416))(v12, v14);
  *(_DWORD *)(v5 - 204) = v17;
  *(_QWORD *)(v5 - 216) = v18;
  v19 = swift_bridgeObjectRetain();
  if (MEMORY[0x23B85F0E0](v19, a1))
  {
    *(_QWORD *)(v5 - 176) = v11;
    v20 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v20 & 1) != 0)
    {
      (*(void (**)(_BYTE *, unint64_t, uint64_t))(*(_QWORD *)(v5 - 136) + 16))(v11, v16+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 136) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 136) + 80)), a1);
      goto LABEL_9;
    }
    result = sub_23B1C6F38();
    if (*(_QWORD *)(v5 - 200) == 8)
    {
      *(_QWORD *)(v5 - 112) = result;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 136) + 16))(v11, v5 - 112, a1);
      swift_unknownObjectRelease();
LABEL_9:
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v5 - 136) + 32))(v9, v11, a1);
      sub_23B0C9B5C(v15, a1);
      sub_23B0C62A4(a1, v21, *(_QWORD *)(v5 - 160));
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((*(_DWORD *)(v5 - 204) & 1) != 0)
    {
      *(_QWORD *)(v5 - 112) = 0x73656972746E653CLL;
      *(_QWORD *)(v5 - 104) = 0xE90000000000003ALL;
      v25 = MEMORY[0x23B85F0B0](v16, a1);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v5 - 128) = v25;
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v5 - 184))(0, *(_QWORD *)(v5 - 112), *(_QWORD *)(v5 - 104), 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = *(_QWORD *)(v5 - 216);
      *(_BYTE *)(v23 + 24) = 0;
      *(_QWORD *)(v23 + 32) = 0;
      *(_BYTE *)(v23 + 40) = 1;
      *(_QWORD *)(v5 - 112) = 0x73656972746E653CLL;
      *(_QWORD *)(v5 - 104) = 0xE90000000000003ALL;
      v24 = MEMORY[0x23B85F0B0](v16, a1);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v5 - 128) = v24;
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v5 - 184))(v23, *(_QWORD *)(v5 - 112), *(_QWORD *)(v5 - 104), 0);
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void type metadata accessor for Maintenance.ReimportMissingJobs()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD384D0()
{
  return 0xD000000000000021;
}

void sub_23AD384EC()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23AD38544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 208) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 200) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 96) = v1;
  *(_QWORD *)(v5 - 152) = v1;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AD38588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[96];

  *(_QWORD *)(v5 - 176) = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 184) = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v5 - 224) = v8;
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v5 - 144) = &v25[-v9];
  *(_QWORD *)(v5 - 192) = v2;
  if (v1)
  {
    type metadata accessor for MaintenanceContinuation();
    v10 = swift_dynamicCastClass();
    if (v10)
    {
      v11 = v10;
      v10 = *(_QWORD *)(v10 + 16);
      v12 = *(unsigned __int8 *)(v11 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    v10 = 0;
  }
  v12 = 1;
LABEL_6:
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v5 - 168) + 16) + 424))(v10, v12);
  *(_DWORD *)(v5 - 244) = v14;
  *(_QWORD *)(v5 - 256) = v15;
  *(_QWORD *)(v5 - 240) = v4;
  *(_QWORD *)(v5 - 232) = v3;
  v16 = swift_bridgeObjectRetain();
  v17 = MEMORY[0x23B85F0E0](v16, a1);
  v18 = *(_QWORD *)(v5 - 176);
  if (v17)
  {
    *(_QWORD *)(v5 - 216) = v13;
    v19 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v19 & 1) != 0)
    {
      (*(void (**)(_QWORD, unint64_t, uint64_t))(v18 + 16))(*(_QWORD *)(v5 - 144), v13 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)), a1);
      goto LABEL_9;
    }
    result = sub_23B1C6F38();
    if (*(_QWORD *)(v5 - 224) == 8)
    {
      *(_QWORD *)(v5 - 120) = result;
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v18 + 16))(*(_QWORD *)(v5 - 144), v5 - 120, a1);
      swift_unknownObjectRelease();
LABEL_9:
      *(_QWORD *)(v5 - 160) = 1;
      (*(void (**)(_QWORD, _QWORD, uint64_t))(v18 + 32))(*(_QWORD *)(v5 - 184), *(_QWORD *)(v5 - 144), a1);
      sub_23AD3BA08();
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((*(_DWORD *)(v5 - 244) & 1) != 0)
    {
      *(_QWORD *)(v5 - 120) = 0x73656972746E653CLL;
      *(_QWORD *)(v5 - 112) = 0xE90000000000003ALL;
      v24 = MEMORY[0x23B85F0B0](v13, a1);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v5 - 136) = v24;
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      (*(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v5 - 232))(0, *(_QWORD *)(v5 - 120), *(_QWORD *)(v5 - 112), 0);
    }
    else
    {
      type metadata accessor for MaintenanceContinuation();
      v21 = v13;
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = *(_QWORD *)(v5 - 256);
      *(_BYTE *)(v22 + 24) = 0;
      *(_QWORD *)(v22 + 32) = 0;
      *(_BYTE *)(v22 + 40) = 1;
      *(_QWORD *)(v5 - 120) = 0x73656972746E653CLL;
      *(_QWORD *)(v5 - 112) = 0xE90000000000003ALL;
      v23 = MEMORY[0x23B85F0B0](v21, a1);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v5 - 136) = v23;
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      (*(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v5 - 232))(v22, *(_QWORD *)(v5 - 120), *(_QWORD *)(v5 - 112), 0);
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void type metadata accessor for Maintenance.UnblockThrottledReconciliations()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD389F8()
{
  return 0xD00000000000001BLL;
}

void sub_23AD38A14()
{
  type metadata accessor for PersistenceTrigger();
}

void type metadata accessor for Maintenance.UnblockThrottledItemJobs()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD38F30()
{
  return 0xD000000000000016;
}

void sub_23AD38F4C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void type metadata accessor for Maintenance.UnblockThrottledJobs()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD39854()
{
  return 0xD000000000000025;
}

uint64_t sub_23AD39870(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    v6 = swift_dynamicCastClass();
    if (v6)
    {
      v7 = v6;
      v6 = *(_QWORD *)(v6 + 16);
      v8 = *(unsigned __int8 *)(v7 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    v6 = 0;
  }
  v8 = 1;
LABEL_6:
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(a1 + 16) + 440))(v6, v8);
  if ((v10 & 1) != 0)
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))a4)(0, 0, 0, 0);
  v11 = v9;
  type metadata accessor for MaintenanceContinuation();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_BYTE *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  *(_BYTE *)(v12 + 40) = 1;
  a4();
  return swift_release();
}

void type metadata accessor for Maintenance.RescanMaterializedSpeculativeItems()
{
  JUMPOUT(0x23B861318);
}

void sub_23AD399B0()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23AD39A08(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    v7 = swift_dynamicCastClass();
    if (v7)
    {
      v8 = v7;
      v7 = *(_QWORD *)(v7 + 16);
      v9 = *(unsigned __int8 *)(v8 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    v7 = 0;
  }
  v9 = 1;
LABEL_6:
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v4 + 592))(v7, v9, a1);
  if ((v11 & 1) != 0)
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))a4)(0, 0, 0, 0);
  v12 = v10;
  type metadata accessor for MaintenanceContinuation();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_BYTE *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 32) = 0;
  *(_BYTE *)(v13 + 40) = 1;
  a4();
  return swift_release();
}

void type metadata accessor for Maintenance.FullScanRowIDJob()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD39B5C()
{
  return 0xD000000000000021;
}

void sub_23AD39B78(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t TupleTypeMetadata2;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  BOOL v38;
  char v39;
  char v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  int v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void *v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void);
  void *v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(void);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84[2];

  v11 = *v5;
  v12 = sub_23B1C5E4C();
  v75 = *(_QWORD *)(v12 - 8);
  v76 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v78 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v11 + 576);
  v73 = *(_QWORD *)(v11 + 560);
  v74 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v81 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v72 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v77 = (char *)&v68 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v82 = (char *)&v68 - v20;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v22 = sub_23B1C6C98();
  v79 = *(_QWORD *)(v22 - 8);
  v80 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v68 - v26;
  v28 = *(_QWORD **)(a1 + 32);
  if (*(_DWORD *)(*(_QWORD *)(v28[2] + 136) + OBJC_IVAR____TtC9libfssync13DocumentWharf_ioContext + 8) != 1)
  {
    ((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))a4)(0, 0, 0, 0);
    return;
  }
  v71 = a5;
  if (a2
    && (type metadata accessor for MaintenanceContinuation(), (v29 = swift_dynamicCastClass()) != 0)
    && *(_BYTE *)(v29 + 24) != 1)
  {
    v30 = *(_QWORD *)(v29 + 16);
  }
  else
  {
    v30 = -1;
  }
  v31 = v81;
  v32 = (*(uint64_t (**)(uint64_t))(*v28 + 584))(v30);
  LODWORD(v69) = v33;
  v68 = v34;
  v70 = a4;
  v35 = 0;
  while (1)
  {
    if (v35 == MEMORY[0x23B85F0E0](v32, TupleTypeMetadata2))
    {
      v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v25, 1, 1, TupleTypeMetadata2);
      goto LABEL_13;
    }
    v37 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v37 & 1) != 0)
    {
      v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v25, v32+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v35, TupleTypeMetadata2);
      v38 = __OFADD__(v35++, 1);
      if (v38)
        break;
      goto LABEL_12;
    }
    v41 = sub_23B1C6F38();
    v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    if (*(_QWORD *)(v36 + 64) != 8)
    {
      __break(1u);
      return;
    }
    v84[0] = v41;
    (*(void (**)(char *, uint64_t *, uint64_t))(v36 + 16))(v25, v84, TupleTypeMetadata2);
    swift_unknownObjectRelease();
    v38 = __OFADD__(v35++, 1);
    if (v38)
      break;
LABEL_12:
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v25, 0, 1, TupleTypeMetadata2);
LABEL_13:
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v27, v25, v80);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v27, 1, TupleTypeMetadata2) == 1)
    {
      swift_bridgeObjectRelease();
      if ((v69 & 1) != 0)
      {
        ((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v70)(0, 0, 0, 0);
      }
      else
      {
        type metadata accessor for MaintenanceContinuation();
        v63 = swift_allocObject();
        *(_QWORD *)(v63 + 16) = v68;
        *(_BYTE *)(v63 + 24) = 0;
        *(_QWORD *)(v63 + 32) = 0;
        *(_BYTE *)(v63 + 40) = 1;
        v70();
        swift_release();
      }
      return;
    }
    v6 = AssociatedTypeWitness;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v82, &v27[*(int *)(TupleTypeMetadata2 + 48)], AssociatedTypeWitness);
    sub_23B1C6440();
    v39 = sub_23B1C6578();
    swift_bridgeObjectRelease();
    if ((v39 & 1) != 0)
      goto LABEL_21;
    sub_23B1C6440();
    v40 = sub_23B1C6578();
    swift_bridgeObjectRelease();
    if ((v40 & 1) != 0)
      goto LABEL_21;
    v31 = v81;
    AssociatedTypeWitness = v6;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v6);
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_21:
  swift_bridgeObjectRelease();
  v42 = (id)fpfs_current_or_default_log();
  v43 = v78;
  sub_23B1C5E58();
  v44 = v81;
  v45 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
  v46 = v77;
  v47 = v6;
  v45(v77, v82, v6);
  swift_bridgeObjectRetain();
  v48 = sub_23B1C5E40();
  v49 = sub_23B1C6AA0();
  v50 = v49;
  if (os_log_type_enabled(v48, v49))
  {
    v51 = swift_slowAlloc();
    v80 = swift_slowAlloc();
    v84[0] = v80;
    *(_DWORD *)v51 = 136315394;
    v69 = v51 + 4;
    v52 = v72;
    v45(v72, v46, v47);
    LODWORD(v79) = v50;
    v53 = *(void (**)(char *, uint64_t))(v44 + 8);
    v53(v46, v47);
    swift_getAssociatedConformanceWitness();
    v54 = sub_23B1C7304();
    v56 = v55;
    v53(v52, v47);
    v83 = sub_23AABEC68(v54, v56, v84);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2080;
    swift_bridgeObjectRetain();
    v57 = (void *)sub_23B1C63BC();
    v58 = objc_msgSend(v57, sel_fp_obfuscatedFilename);

    v59 = sub_23B1C63E0();
    v61 = v60;
    swift_bridgeObjectRelease();

    v83 = sub_23AABEC68(v59, v61, v84);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v48, (os_log_type_t)v79, "found package with .folder or .git extension, %s: %s", (uint8_t *)v51, 0x16u);
    v62 = v80;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v62, -1, -1);
    MEMORY[0x23B8614BC](v51, -1, -1);

    (*(void (**)(char *, uint64_t))(v75 + 8))(v78, v76);
  }
  else
  {
    v53 = *(void (**)(char *, uint64_t))(v44 + 8);
    v53(v46, v47);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v43, v76);
  }
  v64 = v70;
  sub_23AB23A94();
  v65 = (void *)swift_allocError();
  *(_QWORD *)v66 = 3;
  *(_OWORD *)(v66 + 8) = 0u;
  *(_OWORD *)(v66 + 24) = 0u;
  *(_QWORD *)(v66 + 40) = 0;
  *(_BYTE *)(v66 + 48) = 8;
  swift_willThrow();
  v53(v82, v47);
  v67 = v65;
  ((void (*)(_QWORD, _QWORD, _QWORD, void *))v64)(0, 0, 0, v65);

}

void type metadata accessor for Maintenance.ReimportOnGitOrFolderPackage()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD3A328()
{
  return swift_initClassMetadata2();
}

unint64_t sub_23AD3A35C()
{
  return 0xD000000000000021;
}

uint64_t sub_23AD3A378(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = (*(uint64_t (**)(uint64_t, _QWORD))(**(_QWORD **)(a3 + 16) + 448))(a1, a2 & 1);
  if (v3)
    return v5;
  return result;
}

uint64_t sub_23AD3A3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;

  swift_allocObject();
  v8 = sub_23AF1AD34(a1, a2, a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v8;
}

uint64_t sub_23AD3A454()
{
  sub_23AF19DA4();
  return swift_deallocClassInstance();
}

void type metadata accessor for Maintenance.FixupOutOfSyncFSBaseVersion()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD3A480()
{
  return 0xD000000000000022;
}

uint64_t sub_23AD3A49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(uint64_t (*)(char), _QWORD *);

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a4;
  v9[4] = a5;
  v10 = *(void (**)(uint64_t (*)(char), _QWORD *))(*(_QWORD *)v8 + 864);
  swift_retain();
  swift_retain();
  swift_retain();
  v10(sub_23AD3B990, v9);
  swift_release();
  return swift_release();
}

uint64_t sub_23AD3A538(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a3;
  *(_QWORD *)(v8 + 32) = a4;
  v9 = type metadata accessor for Continuation();
  swift_retain_n();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD3B9C0, v7, (uint64_t)sub_23AD3B9EC, v8, v9, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

uint64_t sub_23AD3A61C(char a1, void (*a2)(void))
{
  uint64_t v3;

  if ((a1 & 1) == 0)
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))a2)(0, 0, 0, 0);
  type metadata accessor for MaintenanceContinuation();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 100;
  *(_BYTE *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = 0;
  *(_BYTE *)(v3 + 40) = 1;
  a2();
  return swift_release();
}

void type metadata accessor for Maintenance.RemoveConflictStuckInTheWharf()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD3A6B8()
{
  return 0xD000000000000028;
}

uint64_t sub_23AD3A6D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;

  v6 = sub_23B1C5BDC();
  MEMORY[0x24BDAC7A8](v6);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v8);
  if (a2
    && (type metadata accessor for MaintenanceContinuation(), (v9 = swift_dynamicCastClass()) != 0)
    && *(_BYTE *)(v9 + 24) != 1)
  {
    v10 = *(_QWORD *)(v9 + 16);
  }
  else
  {
    v10 = -1;
  }
  (*(void (**)(uint64_t))(**(_QWORD **)(a1 + 16) + 464))(v10);
  v16 = v11;
  v15 = v12;
  if (MEMORY[0x23B85F0E0]())
    type metadata accessor for JobResult();
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))a4)(0, 0, 0, 0);
  type metadata accessor for MaintenanceContinuation();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v15;
  *(_BYTE *)(v13 + 24) = 0;
  *(_QWORD *)(v13 + 32) = 0;
  *(_BYTE *)(v13 + 40) = 1;
  a4();
  return swift_release();
}

void type metadata accessor for Maintenance.FixupConflictInGSForDatalessItems()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD3AADC()
{
  return swift_initClassMetadata2();
}

unint64_t sub_23AD3AB10()
{
  return 0xD000000000000022;
}

void sub_23AD3AB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[14];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v12 = a3;
  v11 = a2;
  v4 = (_QWORD *)*v3;
  v10 = sub_23B1C5BDC();
  MEMORY[0x24BDAC7A8](v10);
  v9[13] = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v4[71];
  v7 = v4[72];
  v8 = v4[73];
  v13 = v4[70];
  v14 = v6;
  v15 = v7;
  v16 = v8;
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD3B658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2)
  {
    type metadata accessor for MaintenanceContinuation();
    v5 = swift_dynamicCastClass();
    if (v5)
    {
      v6 = v5;
      v5 = *(_QWORD *)(v5 + 16);
      v7 = *(unsigned __int8 *)(v6 + 24);
      goto LABEL_6;
    }
  }
  else
  {
    v5 = 0;
  }
  v7 = 1;
LABEL_6:
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(a1 + 32) + 592))(v5, v7);
  sub_23AD3AB2C(v8, a3, a1);
}

uint64_t sub_23AD3B7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;

  swift_allocObject();
  v8 = sub_23AF1AD34(a1, a2, a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v8;
}

void type metadata accessor for Maintenance.MarkAllUploadedItemAsPurgable()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for Maintenance()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD3B8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(unsigned __int8 *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return v2;
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      LOBYTE(v2) = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  v2 = *(unsigned __int8 *)(a2 + 40);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    return v2;
  return (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)) & ~(_DWORD)v2;
}

uint64_t sub_23AD3B904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  return sub_23AF1AD34(a1, a2, a3, a4);
}

uint64_t sub_23AD3B964()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD3B990(char a1)
{
  uint64_t *v1;

  return sub_23AD3A538(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23AD3B99C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD3B9C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23B141A08(a1, a2, a3, *(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(v3 + 16));
}

uint64_t sub_23AD3B9C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD3B9EC()
{
  uint64_t v0;

  return sub_23AD3A61C(*(_BYTE *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_23AD3BA08()
{
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23AD3BA58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[96];

  *(_QWORD *)(v4 - 168) = a1;
  *(_QWORD *)(v4 - 152) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 160) = &v21[-v5];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v21[-v10];
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v9);
  v14 = &v21[-v13];
  v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16);
  *(_QWORD *)(v4 - 120) = v2;
  v15(v11, v2, v7);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
  v17 = *(_QWORD *)(v4 - 136);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v11, AssociatedTypeWitness);
  v19 = *(_QWORD *)(v4 - 120) + *(int *)(type metadata accessor for ItemReconciliationHalf(0, v1, v3, v18) + 64);
  if (!*(_BYTE *)(v19 + 16) && (*(_BYTE *)(v19 + 1) & 1) != 0)
  {
    *(_QWORD *)(v4 - 184) = v3;
    *(_QWORD *)(v4 - 176) = v1;
    *(_QWORD *)(v4 - 112) = v1;
    *(_QWORD *)(v4 - 104) = v17;
    v20 = *(_QWORD *)(v4 - 144);
    *(_QWORD *)(v4 - 96) = v3;
    *(_QWORD *)(v4 - 88) = v20;
    type metadata accessor for ItemReconciliation();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
}

void sub_23AD3BBF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;

  v8 = *(_QWORD *)(v6 - 72);
  v9 = sub_23B0C744C(v4, a1);
  if (!v8)
  {
    v10 = v9;
    if (v9 != 70
      && ((*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(v4 + 24) + 328))(v9, v5, *(_QWORD *)(v1 + *(int *)(a1 + 64)), 0) & 1) == 0)
    {
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      *(_QWORD *)(v6 - 72) = v10;
      v12 = AssociatedTypeWitness;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v14 = swift_getAssociatedConformanceWitness();
      *(_QWORD *)(v6 - 112) = v3;
      *(_QWORD *)(v6 - 104) = v12;
      *(_QWORD *)(v6 - 96) = AssociatedConformanceWitness;
      *(_QWORD *)(v6 - 88) = v14;
      type metadata accessor for ReconciliationID();
    }
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v3);
  JUMPOUT(0x23AD3BBACLL);
}

uint64_t sub_23AD3BD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AD3BDC4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23AD3BDE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD3BE0C()
{
  return sub_23AD2DEA4();
}

uint64_t sub_23AD3BE1C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD3BE60(void *a1, char a2)
{
  uint64_t *v2;

  return sub_23AD2DF3C(a1, a2 & 1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_23AD3BE74()
{
  uint64_t v0;

  sub_23AAFCD98(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AD3BEC4()
{
  uint64_t v0;

  sub_23AD2E038(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

unint64_t sub_23AD3BEEC()
{
  unint64_t result;

  result = qword_2569E4FD0;
  if (!qword_2569E4FD0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D75C4, &type metadata for MaintenanceContinuation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E4FD0);
  }
  return result;
}

unint64_t sub_23AD3BF30()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2569E2E60;
  if (!qword_2569E2E60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E74F0);
    v2 = MEMORY[0x24BEE1770];
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE4AA8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2569E2E60);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MaintenanceContinuation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AD3BFD8 + 4 * byte_23B1D69C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AD3C00C + 4 * byte_23B1D69C0[v4]))();
}

uint64_t sub_23AD3C00C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD3C014(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD3C01CLL);
  return result;
}

uint64_t sub_23AD3C028(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD3C030);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AD3C034(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD3C03C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MaintenanceContinuation.CodingKeys()
{
  return &type metadata for MaintenanceContinuation.CodingKeys;
}

unint64_t sub_23AD3C05C()
{
  unint64_t result;

  result = qword_2569E4FE0;
  if (!qword_2569E4FE0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D759C, &type metadata for MaintenanceContinuation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E4FE0);
  }
  return result;
}

unint64_t sub_23AD3C0A4()
{
  unint64_t result;

  result = qword_2569E4FE8;
  if (!qword_2569E4FE8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D74D4, &type metadata for MaintenanceContinuation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E4FE8);
  }
  return result;
}

unint64_t sub_23AD3C0EC()
{
  unint64_t result;

  result = qword_2569E4FF0;
  if (!qword_2569E4FF0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D74FC, &type metadata for MaintenanceContinuation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E4FF0);
  }
  return result;
}

uint64_t sub_23AD3C130(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449776F72 && a2 == 0xE500000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6573616870 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23AD3C214(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  __int128 v14;

  v4 = sub_23B1C6C98();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - v6, a1, v4);
  v8 = *(_QWORD *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v13 = 0u;
    v14 = 0u;
  }
  else
  {
    *((_QWORD *)&v14 + 1) = swift_getAssociatedTypeWitness();
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v13);
    sub_23B1C6650();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, a2);
  }
  v9 = sub_23AA94C90((uint64_t)&v13);
  v11 = v10;
  sub_23AA94C08((uint64_t)&v13);
  if (v11)
    return v9;
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AD3C3A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  _BYTE *v20;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;

  v28 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v6 = sub_23B1C6C98();
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v26 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v26 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v26 - v16;
  if (swift_dynamicCastMetatype())
  {
    v29 = objc_msgSend(v31, sel_longAtIndex_, a1);
    goto LABEL_3;
  }
  v17 = v9;
  v19 = v31;
  if (swift_dynamicCastMetatype())
  {
    v29 = objc_msgSend(v19, sel_unsignedLongAtIndex_, a1);
    swift_dynamicCast();
    sub_23B1C665C();
    v18 = *(_QWORD *)(a2 - 8);
    v17 = v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, a2) == 1)
      goto LABEL_7;
  }
  else
  {
    if (!swift_dynamicCastMetatype())
    {
      if (!swift_dynamicCastMetatype())
        sub_23AFF005C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 363);
      v22 = objc_msgSend(v19, sel_stringAtIndex_, a1);
      v23 = sub_23B1C63E0();
      v25 = v24;

      v29 = (id)v23;
      v30 = v25;
LABEL_3:
      swift_dynamicCast();
      sub_23B1C665C();
      v18 = *(_QWORD *)(a2 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, a2) != 1)
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v28, v17, a2);
LABEL_7:
      (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v27);
      sub_23AB7B620();
      swift_allocError();
      *v20 = 0;
      return swift_willThrow();
    }
    v29 = objc_msgSend(v19, sel_unsignedLongLongAtIndex_, a1);
    swift_dynamicCast();
    sub_23B1C665C();
    v18 = *(_QWORD *)(a2 - 8);
    v17 = v12;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, a2) == 1)
      goto LABEL_7;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v28, v17, a2);
}

uint64_t sub_23AD3C72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23AA7C074(a2, *(_QWORD *)(a3 + 8));
  v7 = sub_23AD3E0A8(v6, a1, a2, a3);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_23AD3C7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  __int128 v20;
  __int128 v21;

  v6 = sub_23B1C6C98();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v19 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v19 - v8, a1, v6);
  v10 = *(_QWORD *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v20 = 0u;
    v21 = 0u;
  }
  else
  {
    *((_QWORD *)&v21 + 1) = a2;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v20);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(boxed_opaque_existential_0, v9, a2);
  }
  v12 = sub_23AA94C90((uint64_t)&v20);
  v14 = v13;
  sub_23AA94C08((uint64_t)&v20);
  if (!v14)
  {
    sub_23B1C57B0();
    swift_allocObject();
    sub_23B1C57A4();
    sub_23B1C578C();
    v19[0] = a3;
    MEMORY[0x23B8613CC](MEMORY[0x24BEE4AA8], v6, v19);
    v15 = sub_23B1C5798();
    v17 = v16;
    v12 = sub_23AC38554(v15, v16);
    swift_release();
    sub_23AAAE53C(v15, v17);
  }
  return v12;
}

uint64_t sub_23AD3C9A0(ValueMetadata *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  ValueMetadata *v7;
  ValueMetadata *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v5 = sub_23B1C6428();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_23B1C5BDC();
  MEMORY[0x24BDAC7A8](v6);
  if ((objc_msgSend(v2, sel_isNullAtIndex_, a2) & 1) != 0)
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
  if (swift_dynamicCastMetatype())
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
  type metadata accessor for NSFileProviderItemIdentifier(0);
  v8 = v7;
  if (swift_dynamicCastMetatype())
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 262);
  if (a1 == (ValueMetadata *)MEMORY[0x24BEE13C8])
  {
    objc_msgSend(v2, sel_doubleAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x24BEE1328])
  {
    objc_msgSend(v2, sel_BOOLAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x24BEE4260])
  {
    objc_msgSend(v2, sel_unsignedCharAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x24BEE3E50])
  {
    objc_msgSend(v2, sel_charAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x24BEE4478])
  {
    objc_msgSend(v2, sel_unsignedShortAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x24BEE3F30])
  {
    objc_msgSend(v2, sel_shortAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x24BEE44F0])
  {
    objc_msgSend(v2, sel_unsignedIntAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x24BEE3F88])
  {
    objc_msgSend(v2, sel_intAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x24BEE1E88])
  {
    objc_msgSend(v2, sel_unsignedLongAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x24BEE1768])
  {
    objc_msgSend(v2, sel_longAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x24BEE4568])
  {
    objc_msgSend(v2, sel_unsignedLongLongAtIndex_, a2);
  }
  else if (a1 == (ValueMetadata *)MEMORY[0x24BEE4008])
  {
    objc_msgSend(v2, sel_longLongAtIndex_, a2);
  }
  else
  {
    if (a1 == (ValueMetadata *)MEMORY[0x24BDCDDE8])
      goto LABEL_34;
    if (a1 == (ValueMetadata *)MEMORY[0x24BEE0D00])
    {
      v15 = objc_msgSend(v2, sel_stringAtIndex_, a2);
      sub_23B1C63E0();

      return swift_dynamicCast();
    }
    if ((ValueMetadata *)v6 == a1)
    {
      objc_msgSend(v2, sel_doubleAtIndex_, a2);
      sub_23B1C5B88();
      return swift_dynamicCast();
    }
    if (a1 == &type metadata for FPItemVersionData)
    {
LABEL_34:
      v14 = objc_msgSend(v2, sel_dataAtIndex_, a2);
      sub_23B1C5AD4();

    }
    else
    {
      if (v8 != a1)
      {
        sub_23B1C5780();
        swift_allocObject();
        sub_23B1C5774();
        v9 = objc_msgSend(v2, sel_dataAtIndex_, a2);
        v10 = sub_23B1C5AD4();
        v12 = v11;

        sub_23B1C5768();
        sub_23AAAE53C(v10, v12);
        return swift_release();
      }
      v16 = objc_msgSend(v2, sel_dataAtIndex_, a2);
      v17 = sub_23B1C5AD4();
      v19 = v18;

      sub_23B1C641C();
      v20 = sub_23B1C63F8();
      if (v21)
      {
        v22 = HIBYTE(v21) & 0xF;
        if ((v21 & 0x2000000000000000) == 0)
          v22 = v20 & 0xFFFFFFFFFFFFLL;
        if (v22)
          sub_23B1C63BC();
        sub_23AAAE53C(v17, v19);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23AAAE53C(v17, v19);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7550);
    }
  }
  return swift_dynamicCast();
}

uint64_t sub_23AD3D00C()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  _QWORD v11[2];

  v1 = sub_23B1C6F20();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v11 - v3;
  v5 = sub_23B1C7010();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - v7;
  v11[0] = 40;
  v11[1] = 0xE100000000000000;
  sub_23B1C6614();
  *(_QWORD *)(swift_allocObject() + 16) = v0;
  v9 = v0;
  MEMORY[0x23B8613CC](MEMORY[0x24BEE25B0], v1);
  sub_23B1C70E8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  MEMORY[0x23B8613CC](MEMORY[0x24BEE2B40], v5);
  sub_23AAA420C();
  sub_23B1C6644();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return v11[0];
}

void *sub_23AD3D1D8()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v4;

  v2 = (void *)sub_23B1C6758();
  v4 = v2;
  if (objc_msgSend(v0, sel_next))
  {
    while (1)
    {
      v2 = (void *)MEMORY[0x23B8601A8]();
      sub_23AD3E4E0((uint64_t)&v4);
      if (v1)
        break;
      objc_autoreleasePoolPop(v2);
      if ((objc_msgSend(v0, sel_next) & 1) == 0)
        return v4;
    }
    objc_autoreleasePoolPop(v2);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_23AD3D29C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  char v30;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  void *v41;
  char *v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v2 = v1;
  v4 = sub_23B1C545C();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 - 8);
  v9 = MEMORY[0x24BDAC7A8](v5);
  v55 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v53 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v53 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v53 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v53 - v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v54 = v2;
  v22((char *)&v53 - v20, v2, a1);
  v60 = 13;
  v22(v19, (uint64_t)v21, a1);
  v23 = sub_23B1C731C();
  if (v23)
  {
    v24 = (void *)v23;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v19, a1);
  }
  else
  {
    v24 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v25, v19, a1);
  }
  type metadata accessor for Code(0);
  sub_23AA7E38C(&qword_2569E2060, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_23B1CE0CC);
  v26 = sub_23B1C575C();

  if ((v26 & 1) != 0)
    goto LABEL_9;
  LODWORD(v60) = sub_23B1C5510();
  v22(v16, (uint64_t)v21, a1);
  v27 = sub_23B1C731C();
  if (v27)
  {
    v28 = (void *)v27;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, a1);
  }
  else
  {
    v28 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v29, v16, a1);
  }
  sub_23AB6CD48();
  v30 = sub_23B1C575C();

  if ((v30 & 1) != 0)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v21, a1);
  }
  else
  {
    sub_23B1C539C();
    v32 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v32(v13, v21, a1);
    v33 = sub_23B1C731C();
    if (v33)
    {
      v34 = (void *)v33;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, a1);
    }
    else
    {
      v34 = (void *)swift_allocError();
      v32(v35, v13, a1);
    }
    v37 = v56;
    v36 = v57;
    sub_23AA7E38C((unint64_t *)&qword_2569E29D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEA8]);
    v38 = sub_23B1C575C();

    (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v36);
    if ((v38 & 1) == 0)
    {
      v39 = v55;
      v22(v55, v54, a1);
      v40 = sub_23B1C731C();
      if (v40)
      {
        v41 = (void *)v40;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v39, a1);
      }
      else
      {
        v41 = (void *)swift_allocError();
        v32(v42, v39, a1);
      }
      v43 = (void *)sub_23B1C5870();

      v44 = objc_msgSend(v43, sel_underlyingErrors);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      v45 = sub_23B1C6704();

      v46 = *(_QWORD *)(v45 + 16);
      if (!v46)
      {
LABEL_23:

        swift_bridgeObjectRelease();
        return 0;
      }
      v47 = 0;
      while (1)
      {
        v48 = *(void **)(v45 + 8 * v47 + 32);
        swift_getErrorValue();
        v49 = v58;
        v50 = v59;
        v51 = v48;
        v52 = sub_23AD3D29C(v49, v50);

        if ((v52 & 1) != 0)
          break;
        if (v46 == ++v47)
          goto LABEL_23;
      }

      swift_bridgeObjectRelease();
    }
  }
  return 1;
}

uint64_t sub_23AD3D744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v4 = sub_23B1C6F74();
  v15 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v14 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - v7;
  sub_23B1C55A0();
  swift_allocObject();
  sub_23B1C5594();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
  sub_23AAB5A28((unint64_t *)&qword_2542E0940, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D40CC);
  v10 = swift_allocError();
  sub_23AAB5A28(&qword_2542DD8B8, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D410C);
  v16 = a1;
  v17 = a2;
  v11 = v18;
  sub_23B1C5588();
  if (v11)
  {
    MEMORY[0x23B861204](v10, v9);
    v19 = v11;
    v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    if (swift_dynamicCast())
    {
      v18 = v8;

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0960);
      sub_23AAB5A28(qword_2542DD8D0, (uint64_t *)&unk_2542E0960, (uint64_t)&unk_23B1D40CC);
      v10 = swift_allocError();
      sub_23AAB5A28((unint64_t *)&unk_2542DD8C0, (uint64_t *)&unk_2542E0960, (uint64_t)&unk_23B1D410C);
      sub_23B1C5588();
      swift_release();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v4);
    }
    else
    {
      swift_release();
    }

  }
  else
  {
    swift_release();
  }
  return v10;
}

void *sub_23AD3DAEC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  char *v46;
  uint64_t v47;
  _BYTE v48[128];
  id v49;
  void *v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  unsigned __int8 v59;
  uint64_t v60;

  v3 = v2;
  v45 = a2;
  v60 = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v46 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v36 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v36 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14((char *)&v36 - v15, v3, a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
  if (swift_dynamicCast())
  {
    sub_23AD3E060((uint64_t)&v49, (uint64_t)v48);
    sub_23B1C55C4();
    swift_allocObject();
    sub_23B1C55B8();
    sub_23AD3E060((uint64_t)v48, (uint64_t)&v47);
    sub_23AAB5A28((unint64_t *)&unk_2569E5000, (uint64_t *)&unk_2542E0950, (uint64_t)&unk_23B1D4134);
    v16 = (void *)sub_23B1C55AC();
    swift_release();
    sub_23AC04F64((uint64_t)v48);
  }
  else
  {
    v14(v13, v3, a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0960);
    if (swift_dynamicCast())
    {
      v17 = v49;
      v18 = v50;
      v43 = v50;
      v44 = v49;
      v19 = v52;
      v20 = v53;
      v21 = v54;
      v41 = v53;
      v42 = v52;
      v40 = v54;
      v45 = v55;
      v46 = (char *)v56;
      v37 = v57;
      v38 = v51;
      v36 = v58;
      v39 = v59;
      sub_23B1C55C4();
      swift_allocObject();
      sub_23B1C55B8();
      v49 = v17;
      v50 = v18;
      v22 = v38;
      v51 = v38;
      v52 = v19;
      v53 = v20;
      v54 = v21;
      v55 = v45;
      v56 = (uint64_t)v46;
      v23 = v36;
      v24 = v37;
      v57 = v37;
      v58 = v36;
      LOBYTE(v19) = v39;
      v59 = v39;
      sub_23AAB5A28(&qword_2569E4FF8, (uint64_t *)&unk_2542E0960, (uint64_t)&unk_23B1D4134);
      v16 = (void *)sub_23B1C55AC();
      swift_release();
      sub_23AC04E04(v44, v43, v22, v42, v41, v40, v45, (uint64_t)v46, v24, v23, (char)v19);
    }
    else
    {
      swift_getDynamicType();
      sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
      if (swift_dynamicCastMetatype())
      {
        v25 = (void *)objc_opt_self();
        v14(v10, v3, a1);
        v26 = sub_23B1C7370();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, a1);
        v49 = 0;
        v27 = objc_msgSend(v25, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v26, 1, &v49);
        swift_unknownObjectRelease();
      }
      else
      {
        v28 = (uint64_t)v46;
        v14(v46, v3, a1);
        v29 = sub_23B1C731C();
        if (v29)
        {
          v30 = (void *)v29;
          (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v28, a1);
        }
        else
        {
          v30 = (void *)swift_allocError();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v31, v28, a1);
        }
        v32 = (void *)objc_opt_self();
        v33 = (void *)sub_23B1C5870();

        v49 = 0;
        v27 = objc_msgSend(v32, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v33, 1, &v49);

      }
      v34 = v49;
      if (v27)
      {
        v16 = (void *)sub_23B1C5AD4();

      }
      else
      {
        v16 = v34;
        sub_23B1C587C();

        swift_willThrow();
      }
    }
  }
  return v16;
}

uint64_t sub_23AD3DFC0@<X0>(uint64_t a1@<X0>, ValueMetadata *a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  if ((objc_msgSend(v3, sel_isNullAtIndex_, a1) & 1) != 0)
  {
    v8 = 1;
  }
  else
  {
    result = sub_23AD3C9A0(a2, a1);
    if (v4)
      return result;
    v8 = 0;
  }
  return (*((uint64_t (**)(uint64_t, uint64_t, uint64_t, ValueMetadata *))a2[-1].Description + 7))(a3, v8, 1, a2);
}

uint64_t sub_23AD3E060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AD3E0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  char *v50;
  _QWORD v51[2];

  v47 = a2;
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v40 - v10;
  v12 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v49 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = *(_QWORD *)(v49 + 64);
  v17 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v18 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v50 = (char *)&v40 - v19;
  v20 = swift_bridgeObjectRetain();
  if (MEMORY[0x23B85F0E0](v20, AssociatedTypeWitness))
  {
    v40 = v16;
    v41 = v14;
    v45 = v12;
    v46 = v7;
    v21 = 0;
    v43 = v8;
    v44 = a1;
    v22 = v11;
    v23 = v18;
    v24 = v49;
    do
    {
      v26 = sub_23B1C6770();
      sub_23B1C6734();
      if ((v26 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))(v50, a1+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v21, AssociatedTypeWitness);
        v27 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_12;
      }
      else
      {
        result = sub_23B1C6F38();
        if (v40 != 8)
        {
          __break(1u);
          return result;
        }
        v51[0] = result;
        (*(void (**)(char *, _QWORD *, uint64_t))(v24 + 16))(v50, v51, AssociatedTypeWitness);
        swift_unknownObjectRelease();
        v27 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
LABEL_12:
          __break(1u);
          break;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v50, AssociatedTypeWitness);
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v29 = v23;
      v30 = v8;
      v31 = v46;
      v28(v22, v47, v46);
      v32 = v45;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v22, 1, a3) == 1)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v31);

        v23 = v29;
      }
      else
      {
        v33 = v41;
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v41, v22, a3);
        (*(void (**)(char *, id, uint64_t))(v42 + 16))(v29, v48, a3);
        v23 = v29;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, a3);
      }
      v24 = v49;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v23, AssociatedTypeWitness);
      a1 = v44;
      v25 = MEMORY[0x23B85F0E0](v44, AssociatedTypeWitness);
      ++v21;
      v8 = v43;
    }
    while (v27 != v25);
  }
  swift_bridgeObjectRelease();
  v35 = MEMORY[0x23B85F0B0](a1, AssociatedTypeWitness);
  v36 = MEMORY[0x23B85EEAC](2108479, 0xE300000000000000, v35);
  v51[0] = v36;
  v51[1] = v37;
  v38 = HIBYTE(v37) & 0xF;
  if ((v37 & 0x2000000000000000) == 0)
    v38 = v36 & 0xFFFFFFFFFFFFLL;
  if (!v38)
    return v36;
  sub_23AE1B6B0(2uLL);
  return v51[0];
}

uint64_t sub_23AD3E4BC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23AD3E4E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t result;

  v2 = MEMORY[0x24BDAC7A8](a1);
  result = v3(v2);
  if (!v1)
  {
    sub_23B1C67DC();
    return sub_23B1C67AC();
  }
  return result;
}

uint64_t *sub_23AD3E574(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t *v5;
  void *v6;
  uint64_t v8;
  uint64_t v9;

  v5 = (uint64_t *)MEMORY[0x24BEE4AF8];
  v9 = MEMORY[0x24BEE4AF8];
  if (objc_msgSend(a1, sel_next))
  {
    while (1)
    {
      v6 = (void *)MEMORY[0x23B8601A8]();
      sub_23AC9AA68(a2, &v8);
      if (v2)
        break;
      MEMORY[0x23B85F008]();
      if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23B1C6740();
      sub_23B1C6788();
      v5 = &v9;
      sub_23B1C671C();
      objc_autoreleasePoolPop(v6);
      if ((objc_msgSend(a1, sel_next) & 1) == 0)
        return (uint64_t *)v9;
    }
    objc_autoreleasePoolPop(v6);
    swift_bridgeObjectRelease();
  }
  return v5;
}

id sub_23AD3E684(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  return sub_23AD3E6F4(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AF8EA1C);
}

id sub_23AD3E6A0(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_23AD3E8E4(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, id, id))sub_23AF8FF5C);
}

id sub_23AD3E6BC(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_23AD3E8E4(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, id, id))sub_23AF91F74);
}

id sub_23AD3E6D8(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  return sub_23AD3E6F4(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AF8F4BC);
}

id sub_23AD3E6F4(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void (*a7)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v7;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v18;
  void (*v19)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  id v20;
  id v23;
  unint64_t v24;

  v12 = (id)MEMORY[0x24BEE4AF8];
  v24 = MEMORY[0x24BEE4AF8];
  v13 = a5;
  v20 = a6;
  if (objc_msgSend(a1, sel_next))
  {
    v18 = v13;
    v19 = a7;
    do
    {
      v14 = (void *)MEMORY[0x23B8601A8]();
      v12 = v13;
      v15 = v20;
      a7(&v23, a2, a3, a4, v12, v15);
      if (v7)
      {
        objc_autoreleasePoolPop(v14);

        swift_release();
        swift_bridgeObjectRelease();
        return v12;
      }
      if (v23)
      {
        v16 = v23;
        MEMORY[0x23B85F008]();
        if (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23B1C6740();
        sub_23B1C6788();
        sub_23B1C671C();

        v13 = v18;
        a7 = v19;
      }
      objc_autoreleasePoolPop(v14);
    }
    while ((objc_msgSend(a1, sel_next) & 1) != 0);
    v12 = (id)v24;
  }

  swift_release();
  return v12;
}

id sub_23AD3E8AC(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_23AD3E8E4(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, id, id))sub_23AF90CC4);
}

id sub_23AD3E8C8(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_23AD3E8E4(a1, a2, a3, a4, a5, (void (*)(id *__return_ptr, void *, uint64_t, id, id))sub_23AF92D08);
}

id sub_23AD3E8E4(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void (*a6)(id *__return_ptr, void *, uint64_t, id, id))
{
  uint64_t v6;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v17;
  id v20;
  unint64_t v21;

  v10 = (id)MEMORY[0x24BEE4AF8];
  v21 = MEMORY[0x24BEE4AF8];
  v11 = a4;
  v12 = a5;
  if (objc_msgSend(a1, sel_next))
  {
    v17 = a1;
    do
    {
      v13 = (void *)MEMORY[0x23B8601A8]();
      v10 = v11;
      v14 = v12;
      a6(&v20, a2, a3, v10, v14);
      if (v6)
      {
        objc_autoreleasePoolPop(v13);

        swift_release();
        swift_bridgeObjectRelease();
        return v10;
      }
      if (v20)
      {
        v15 = v20;
        MEMORY[0x23B85F008]();
        if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23B1C6740();
        sub_23B1C6788();
        sub_23B1C671C();

        a1 = v17;
      }
      objc_autoreleasePoolPop(v13);
    }
    while ((objc_msgSend(a1, sel_next) & 1) != 0);
    v10 = (id)v21;
  }

  swift_release();
  return v10;
}

id sub_23AD3EA9C()
{
  if (qword_2569E12B0 != -1)
    swift_once();
  return (id)qword_2569E5010;
}

uint64_t sub_23AD3EAE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_23B1C5A08();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_23B1C59CC();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_23AD3EB78()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConcreteFPDPurger();
  return objc_msgSendSuper2(&v2, sel_init);
}

id sub_23AD3EBE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConcreteFPDPurger();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_23AD3EC14()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConcreteFPDPurger()), sel_init);
  qword_2569E5010 = (uint64_t)result;
  return result;
}

uint64_t sub_23AD3EC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[2];
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v0 = sub_23B1C6B3C();
  v20 = *(_QWORD *)(v0 - 8);
  v21 = v0;
  MEMORY[0x24BDAC7A8](v0);
  v19 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_23B1C6AE8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v18 - v7;
  v9 = sub_23B1C60A4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v18 - v14;
  v18[1] = sub_23AD40D68();
  sub_23B1C605C();
  v22 = MEMORY[0x24BEE4AF8];
  sub_23AD40DA4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74C0);
  sub_23AD40DEC();
  sub_23B1C6DE8();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v19, *MEMORY[0x24BEE5758], v21);
  v16 = sub_23B1C6B60();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  qword_2542DDDC8 = v16;
  return result;
}

void sub_23AD3EE64(uint64_t a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  _QWORD v5[6];

  if (qword_2542DDDD8 != -1)
    swift_once();
  v3 = (id)fpfs_current_log();
  v4 = (void *)MEMORY[0x24BDAC7A8](v3);
  v5[2] = v1;
  v5[3] = a1;
  sub_23AC494B4(v4, 0, (uint64_t)"purgeAndWait(at:)", 17, 2, (uint64_t)sub_23AD40474, (uint64_t)v5);

}

void sub_23AD3F04C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  v3 = sub_23B1C5A08();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  if (qword_2542DDDD8 != -1)
    swift_once();
  v6 = (id)fpfs_current_log();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v9 = v1;
  sub_23AA814FC(v6, (uint64_t)"purgeAsync(at:)", 15, 2, (uint64_t)sub_23AD404A0, v8);
  swift_release();

}

uint64_t sub_23AD3F314(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  NSObject *v16;
  uint64_t v17;
  uint8_t *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v32[2];
  uint8_t *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = sub_23B1C5A08();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v32 - v5;
  v41 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v41 - 8);
  v8 = MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v32 - v10;
  v12 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v39 = v3;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  v13 = sub_23B1C5E40();
  v14 = sub_23B1C6A88();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = v13;
    v17 = swift_slowAlloc();
    v35 = v15;
    v18 = (uint8_t *)v17;
    v36 = swift_slowAlloc();
    v43 = v36;
    v37 = a1;
    *(_DWORD *)v18 = 136446210;
    v32[1] = v18 + 4;
    v33 = v18;
    v19 = (void *)sub_23B1C5954();
    v20 = objc_msgSend(v19, sel_fp_shortDescription);
    v34 = v7;
    v21 = v20;

    v22 = sub_23B1C63E0();
    v38 = v2;
    v24 = v23;

    v25 = v41;
    v42 = sub_23AABEC68(v22, v24, &v43);
    a1 = v37;
    sub_23B1C6CBC();
    v26 = v38;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v26);
    v27 = v16;
    v28 = v33;
    _os_log_impl(&dword_23AA66000, v16, (os_log_type_t)v35, "Purging: %{public}s", v33, 0xCu);
    v29 = v36;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v29, -1, -1);
    MEMORY[0x23B8614BC](v28, -1, -1);

    v30 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v11, v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v2);

    v30 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v41);
  }
  MEMORY[0x24BDAC7A8](v30);
  v32[-2] = a1;
  return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AD40D50);
}

uint64_t sub_23AD3F880@<X0>(int *a1@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t result;

  sub_23B1C59E4();
  v2 = sub_23B1C6458();
  swift_bridgeObjectRelease();
  v3 = removefile((const char *)(v2 + 32), 0, 0x101u);
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23AD3F8E8@<X0>(const char *a1@<X1>, _DWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  sub_23B1C59E4();
  v4 = sub_23B1C6458();
  swift_bridgeObjectRelease();
  LODWORD(a1) = removexattr((const char *)(v4 + 32), a1, 0);
  result = swift_release();
  *a2 = (_DWORD)a1;
  return result;
}

uint64_t sub_23AD3F95C@<X0>(_DWORD *a1@<X8>)
{
  int v2;
  uint64_t result;

  sub_23B1C59E4();
  sub_23B1C6458();
  swift_bridgeObjectRelease();
  v2 = fpfs_clear_file_acl();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_23AD3F9BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[18];

  v2 = sub_23B1C5A08();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v18[11] = (char *)v18 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v9 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v18[13] = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v18[10] = (char *)v18 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v18[16] = a1;
  v15 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AD40E38);
  v18[9] = v9;
  v18[8] = v10;
  v18[12] = v3;
  v18[7] = v6;
  MEMORY[0x24BDAC7A8](v15);
  v18[-2] = a1;
  v16 = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AD40E58);
  MEMORY[0x24BDAC7A8](v16);
  v18[-2] = a1;
  return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AD40E78);
}

uint64_t type metadata accessor for ConcreteFPDPurger()
{
  return objc_opt_self();
}

uint64_t sub_23AD40474()
{
  uint64_t v0;

  return sub_23AD40548(*(uint8_t **)(v0 + 24));
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23AD4051C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23B1C5A08() - 8) + 80);
  return sub_23AD40548((uint8_t *)(v0 + ((v1 + 24) & ~v1)));
}

uint64_t sub_23AD40548(uint8_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  uint8_t *v23;
  char *v24;
  id v25;
  uint8_t *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  _QWORD *v46;
  id v47;
  _QWORD *v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  void *v53;
  id v54;
  void *v55;
  id v56;
  NSObject *v57;
  uint64_t v58;
  os_log_type_t v59;
  uint8_t *v60;
  void *v61;
  id v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v70;
  char *v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint8_t *v75;
  id v76;
  char *v77;
  uint64_t (*v78)(char *, id);
  uint64_t v79;
  id aBlock[8];

  v75 = a1;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v77 = (char *)&v70 - v6;
  v7 = (_QWORD *)sub_23B1C5E4C();
  v8 = *(v7 - 1);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v71 = (char *)&v70 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v78 = (uint64_t (*)(char *, id))((char *)&v70 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v70 - v16;
  v18 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v19 = sub_23B1C5E40();
  v20 = sub_23B1C6A88();
  v21 = os_log_type_enabled(v19, v20);
  v74 = v2;
  if (v21)
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_23AA66000, v19, v20, "Started purging...", v22, 2u);
    v23 = v22;
    v2 = v74;
    MEMORY[0x23B8614BC](v23, -1, -1);
  }

  v24 = *(char **)(v8 + 8);
  ((void (*)(char *, _QWORD *))v24)(v17, v7);
  v25 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v26 = v75;
  sub_23B1C59E4();
  v27 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  v28 = objc_msgSend(v25, sel_contentsOfDirectoryAtPath_error_, v27, aBlock);

  v29 = aBlock[0];
  if (v28)
  {
    v30 = sub_23B1C6704();
    v31 = v29;

    v76 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1570]), sel_init);
    v32 = *(_QWORD *)(v30 + 16);
    if (v32)
    {
      swift_bridgeObjectRetain();
      v70 = v30;
      v33 = v30 + 40;
      *(_QWORD *)&v34 = 138412290;
      v72 = v34;
      v73 = v1;
      do
      {
        swift_bridgeObjectRetain();
        sub_23B1C5984();
        swift_bridgeObjectRelease();
        v35 = (void *)sub_23B1C5954();
        aBlock[4] = sub_23AD3EADC;
        aBlock[5] = 0;
        aBlock[0] = (id)MEMORY[0x24BDAC760];
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_23AD3EAE0;
        aBlock[3] = &block_descriptor_10;
        v36 = _Block_copy(aBlock);
        swift_release();
        aBlock[0] = 0;
        objc_msgSend(v76, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v35, 1, aBlock, v36);
        _Block_release(v36);

        v37 = aBlock[0];
        if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
          __break(1u);
        if (v37)
        {
          v38 = v37;
          v39 = (id)fpfs_current_or_default_log();
          sub_23B1C5E58();
          v40 = v38;
          v41 = sub_23B1C5E40();
          v42 = sub_23B1C6AA0();
          if (os_log_type_enabled(v41, v42))
          {
            v43 = swift_slowAlloc();
            v44 = v24;
            v45 = v7;
            v46 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v43 = v72;
            v47 = objc_msgSend(v40, sel_fp_prettyDescription);
            *(_QWORD *)(v43 + 4) = v47;
            *v46 = v47;

            _os_log_impl(&dword_23AA66000, v41, v42, "Error coordinating on purgatory item for deleting: %@", (uint8_t *)v43, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
            swift_arrayDestroy();
            v48 = v46;
            v7 = v45;
            v24 = v44;
            v1 = v73;
            MEMORY[0x23B8614BC](v48, -1, -1);
            MEMORY[0x23B8614BC](v43, -1, -1);
          }
          else
          {

          }
          ((void (*)(uint64_t (*)(char *, id), _QWORD *))v24)(v78, v7);
          v2 = v74;
        }
        v33 += 16;
        (*(void (**)(char *, uint64_t))(v2 + 8))(v77, v1);

        --v32;
      }
      while (v32);
      v30 = v70;
      swift_bridgeObjectRelease();
    }
    v49 = (id)fpfs_current_or_default_log();
    v11 = v71;
    sub_23B1C5E58();
    swift_bridgeObjectRetain();
    v50 = sub_23B1C5E40();
    v51 = sub_23B1C6A88();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v52 = 134217984;
      v53 = *(void **)(v30 + 16);
      swift_bridgeObjectRelease();
      aBlock[0] = v53;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v50, v51, "Finished purging %ld files.", v52, 0xCu);
      MEMORY[0x23B8614BC](v52, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    v54 = aBlock[0];
    v55 = (void *)sub_23B1C587C();

    swift_willThrow();
    v56 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    (*(void (**)(char *, uint8_t *, uint64_t))(v2 + 16))(v5, v26, v1);
    v57 = sub_23B1C5E40();
    v58 = v1;
    v59 = sub_23B1C6AA0();
    if (os_log_type_enabled(v57, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v77 = (char *)swift_slowAlloc();
      v78 = (uint64_t (*)(char *, id))v24;
      aBlock[0] = v77;
      v73 = v58;
      *(_DWORD *)v60 = 136446210;
      v75 = v60 + 4;
      v61 = (void *)sub_23B1C5954();
      v62 = objc_msgSend(v61, sel_fp_shortDescription);
      v76 = v7;
      v63 = v62;

      v64 = sub_23B1C63E0();
      v65 = v2;
      v67 = v66;

      v79 = sub_23AABEC68(v64, v67, (uint64_t *)aBlock);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v5, v73);
      _os_log_impl(&dword_23AA66000, v57, v59, "Failed to get contents for URL %{public}s", v60, 0xCu);
      v68 = v77;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v68, -1, -1);
      MEMORY[0x23B8614BC](v60, -1, -1);

      return v78(v11, v76);
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v58);

  }
  return ((uint64_t (*)(char *, _QWORD *))v24)(v11, v7);
}

uint64_t sub_23AD40D50@<X0>(int *a1@<X8>)
{
  return sub_23AD3F880(a1);
}

unint64_t sub_23AD40D68()
{
  unint64_t result;

  result = qword_2542E5500;
  if (!qword_2542E5500)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2542E5500);
  }
  return result;
}

unint64_t sub_23AD40DA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542E7500;
  if (!qword_2542E7500)
  {
    v1 = sub_23B1C6AE8();
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_2542E7500);
  }
  return result;
}

unint64_t sub_23AD40DEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542E74D0;
  if (!qword_2542E74D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E74C0);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2542E74D0);
  }
  return result;
}

uint64_t sub_23AD40E38@<X0>(_DWORD *a1@<X8>)
{
  return sub_23AD3F8E8("com.apple.file-provider-domain-id", a1);
}

uint64_t sub_23AD40E58@<X0>(_DWORD *a1@<X8>)
{
  return sub_23AD3F8E8("com.apple.file-provider-domain-id#PN", a1);
}

uint64_t sub_23AD40E78@<X0>(_DWORD *a1@<X8>)
{
  return sub_23AD3F95C(a1);
}

uint64_t sub_23AD40E90()
{
  return sub_23AD40474();
}

uint64_t sub_23AD40EA4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *a2;
  v7 = a2[4];
  result = sub_23AE4F6B4();
  if ((result & 1) != 0)
  {
    v10 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 96), v9);
    result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v7 + 304))(a1 + *(int *)(v10 + 36), 0);
    if (!v3)
    {
      if ((result & 1) != 0)
        sub_23AD41590(a1, a3);
      v11 = a1 + *(int *)(v10 + 48);
      result = type metadata accessor for ItemMetadata();
      *(_BYTE *)(v11 + *(int *)(result + 48)) = *(_BYTE *)(v11 + *(int *)(result + 44));
    }
  }
  return result;
}

uint64_t sub_23AD40F5C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, _QWORD);
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t *v27;
  char v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v52 = a2;
  v50 = a1;
  v9 = *(_QWORD **)a4;
  v10 = sub_23B1C5BDC();
  v46 = *(_QWORD *)(v10 - 8);
  v47 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v9[10];
  v51 = v9[12];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v49 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v48 = (char *)&v41 - v14;
  v15 = *(_QWORD *)(a4 + 32);
  result = sub_23AE4F6B4();
  if ((result & 1) == 0)
    return result;
  v44 = AssociatedTypeWitness;
  v18 = *a3;
  if ((*a3 & 0x20002) == 0)
    return result;
  v42 = a3;
  v43 = a5;
  v19 = type metadata accessor for SnapshotItem(0, v12, v51, v17);
  v20 = *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v15 + 304);
  result = v20(v52 + *(int *)(v19 + 36), 0);
  if (v5)
    return result;
  v21 = result;
  if (result == 2)
  {
    if ((v18 & 2) == 0)
    {
      v22 = v52;
      v23 = v19;
      goto LABEL_24;
    }
    v28 = 0;
    goto LABEL_12;
  }
  if ((v18 & 2) != 0)
  {
    v28 = result & 1;
LABEL_12:
    if (((*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a4 + 24) + 296))(0, 68) & 1) != 0)
    {
      v29 = v20(v50, 0);
      v30 = v28;
      v26 = v29 & 1;
      v23 = v19;
    }
    else
    {
      v30 = v28;
      v23 = v19;
      v31 = v50 + *(int *)(v19 + 48);
      v26 = *(unsigned __int8 *)(v31 + *(int *)(type metadata accessor for ItemMetadata() + 48));
    }
    v22 = v52;
    if ((v30 & 1) == 0)
    {
      if (v26)
      {
        v35 = v9[11];
        v36 = v9[13];
        v53 = v12;
        v54 = v35;
        v55 = v51;
        v56 = v36;
        type metadata accessor for JobResult();
      }
      goto LABEL_24;
    }
    v27 = v43;
    goto LABEL_18;
  }
  v23 = v19;
  v24 = *(int *)(v19 + 48);
  v25 = type metadata accessor for ItemMetadata();
  if ((v21 & 1) == 0)
  {
    v22 = v52;
LABEL_24:
    v37 = v22 + *(int *)(v23 + 48);
    result = type metadata accessor for ItemMetadata();
    v38 = *(unsigned __int8 *)(v37 + *(int *)(result + 44));
    *(_BYTE *)(v37 + *(int *)(result + 48)) = v38;
    if (v38 != *(unsigned __int8 *)(v50 + *(int *)(v23 + 48) + *(int *)(result + 48)))
    {
      if ((*v42 & 0x800000000000000) == 0)
        *v42 |= 0x800000000000000uLL;
      v39 = v9[11];
      v40 = v9[13];
      v53 = v12;
      v54 = v39;
      v55 = v51;
      v56 = v40;
      type metadata accessor for JobResult();
    }
    return result;
  }
  LOBYTE(v26) = *(_BYTE *)(v50 + v24 + *(int *)(v25 + 48));
  v27 = v43;
  v22 = v52;
LABEL_18:
  if ((v26 & 1) == 0)
    sub_23AD41590(v22, v27);
  v32 = v22 + *(int *)(v23 + 48);
  result = type metadata accessor for ItemMetadata();
  if (*(_BYTE *)(v32 + *(int *)(result + 44)) == 1)
  {
    v33 = v9[11];
    v34 = v9[13];
    v53 = v12;
    v54 = v33;
    v55 = v51;
    v56 = v34;
    type metadata accessor for JobResult();
  }
  return result;
}

void sub_23AD41590(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a2;
  v10 = sub_23B1C5BDC();
  MEMORY[0x24BDAC7A8](v10);
  v4 = *(_QWORD *)(v3 + 96);
  v5 = *(_QWORD *)(v3 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = a1 + *(int *)(type metadata accessor for SnapshotItem(0, v5, v4, v7) + 48);
  v9 = type metadata accessor for ItemMetadata();
  *(_BYTE *)(v8 + *(int *)(v9 + 48)) = 1;
  if (*(_BYTE *)(v8 + *(int *)(v9 + 44)) == 1)
    type metadata accessor for JobResult();
  type metadata accessor for JobResult();
}

void sub_23AD417B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v0;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v3;
  *(_QWORD *)(v4 - 88) = v1;
  type metadata accessor for PinningJob.RefreshChildPinStatus();
}

uint64_t sub_23AD417CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 16))(v2, *(_QWORD *)(v4 - 128), v1);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v6 = v5;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 136) + 8))(v3, *(_QWORD *)(v4 - 120));
  v7 = v6 * 1000000000.0;
  if ((~COERCE__INT64(v6 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x23AD418C8);
  }
  v8 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23AD3B900)(v2, 0x2000000000000000, (uint64_t)v7, 1);
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  sub_23AE181A4(*(_QWORD *)(v4 - 144), v8);
  return swift_release();
}

uint64_t sub_23AD418D4()
{
  return 0x6D6574692D6E6970;
}

uint64_t sub_23AD418EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23AD41BA0(a1, a2, a3, a4, a5, (uint64_t)&unk_250BF9E10, 1, (uint64_t)sub_23AD43424);
}

uint64_t sub_23AD41904(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a6;
  v30 = a5;
  v31 = a4;
  v32 = a3;
  v33 = a2;
  v10 = *a2;
  v34 = *(_QWORD *)(*a2 + 80);
  v35 = v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v12 = sub_23B1C74F0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  v17 = swift_allocObject();
  v36 = v17;
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a2;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a4;
  *(_QWORD *)(v18 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  v19 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v34;
  v24 = v35;
  *(_OWORD *)(v23 + 24) = *(_OWORD *)(v35 + 88);
  *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 104);
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v23 + v19, v16, v12);
  v25 = v33;
  *(_QWORD *)(v23 + v20) = v32;
  *(_QWORD *)(v23 + v21) = v25;
  *(_QWORD *)(v23 + v22) = v37;
  v26 = (_QWORD *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  v27 = v30;
  *v26 = v31;
  v26[1] = v27;
  v28 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AD433C8, v36, (uint64_t)sub_23AD43544, v18, (uint64_t)sub_23AD433D0, v23, v28, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  return swift_release();
}

char *sub_23AD41B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23AD421C0(a1, a2, a3, a4);
}

void type metadata accessor for PinningJob.PinItem()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD41B6C()
{
  return 0x74692D6E69706E75;
}

uint64_t sub_23AD41B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23AD41BA0(a1, a2, a3, a4, a5, (uint64_t)&unk_250BF9D70, 0, (uint64_t)sub_23AD433B8);
}

uint64_t sub_23AD41BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, _QWORD *);

  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v16 = v8 + *(_QWORD *)(*(_QWORD *)v8 + 536);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a1;
  v17[3] = v8;
  v17[4] = a4;
  v17[5] = a5;
  v17[6] = a3;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(*(_QWORD *)v15 + 728);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v18(v16, a7, a8, v17);
  swift_release();
  return swift_release();
}

uint64_t sub_23AD41C78(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a6;
  v30 = a5;
  v31 = a4;
  v32 = a3;
  v33 = a2;
  v10 = *a2;
  v34 = *(_QWORD *)(*a2 + 80);
  v35 = v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v12 = sub_23B1C74F0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - v15;
  v17 = swift_allocObject();
  v36 = v17;
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a2;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a4;
  *(_QWORD *)(v18 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  v19 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v34;
  v24 = v35;
  *(_OWORD *)(v23 + 24) = *(_OWORD *)(v35 + 88);
  *(_QWORD *)(v23 + 40) = *(_QWORD *)(v24 + 104);
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v23 + v19, v16, v12);
  v25 = v33;
  *(_QWORD *)(v23 + v20) = v32;
  *(_QWORD *)(v23 + v21) = v25;
  *(_QWORD *)(v23 + v22) = v37;
  v26 = (_QWORD *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  v27 = v30;
  *v26 = v31;
  v26[1] = v27;
  v28 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AD433C8, v36, (uint64_t)sub_23AD3B9C0, v18, (uint64_t)sub_23AD433D0, v23, v28, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23AD41EC0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD, _QWORD, _QWORD, id), uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD, _QWORD, _QWORD, id);
  uint64_t v34;
  uint64_t v35;

  v32 = a6;
  v33 = a5;
  v28[2] = a4;
  v30 = a3;
  v34 = a1;
  v7 = *(_QWORD *)(*a2 + 560);
  v28[0] = *(_QWORD *)(*a2 + 576);
  v8 = type metadata accessor for SnapshotItem(255, v7, v28[0], a4);
  v29 = sub_23B1C6C98();
  v28[1] = *(_QWORD *)(v29 - 8);
  v9 = MEMORY[0x24BDAC7A8](v29);
  v11 = (char *)v28 - v10;
  v31 = *(_QWORD *)(v8 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)v28 - v13;
  v35 = *(_QWORD *)(v7 - 8);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v28 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v20 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (id *)((char *)v28 - v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)v28 - v21, v34, v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v26 = v35;
    (*(void (**)(char *, id *, uint64_t))(v35 + 32))(v19, v22, v7);
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v17, v19, v7);
    sub_23AF15480((uint64_t)v17, v7, v28[0], (uint64_t)v14);
    v27 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v11, v14, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v11, 0, 1, v8);
    sub_23B0F7398((uint64_t)v11, (uint64_t)a2 + *(_QWORD *)(*a2 + 536), 0, 0, 0, v30, a2[14], a2[15]);
  }
  v24 = *v22;
  v25 = *v22;
  v33(0, 0, 0, v24);

}

char *sub_23AD421C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t TupleTypeMetadata3;
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[40];
  uint64_t v39;

  v5 = v4;
  v36 = a1;
  v7 = *v5;
  v8 = type metadata accessor for JobLockRule(0, *(_QWORD *)(*v5 + 560), *(_QWORD *)(*v5 + 576), a4);
  v9 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  v35 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v32 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = sub_23B1C6C98();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v32 - v18;
  v20 = (char *)v5 + *(_QWORD *)(v7 + 536);
  v21 = v39;
  (*(void (**)(char *))(**(_QWORD **)(a2 + 32) + 280))(v20);
  if (!v21)
  {
    v39 = 0;
    v33 = v11;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v17, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      return 0;
    }
    else
    {
      v22 = v37;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v19, v17, AssociatedTypeWitness);
      swift_beginAccess();
      sub_23AD4332C((uint64_t)(v5 + 6), (uint64_t)v38);
      v23 = v5[14];
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      v25 = (uint64_t)v33;
      v26 = &v33[*(int *)(TupleTypeMetadata3 + 48)];
      v27 = &v33[*(int *)(TupleTypeMetadata3 + 64)];
      v28 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
      v28(v33, v20, AssociatedTypeWitness);
      v28(v26, v19, AssociatedTypeWitness);
      v28(v27, v19, AssociatedTypeWitness);
      v29 = v34;
      swift_storeEnumTagMultiPayload();
      v17 = (char *)sub_23ABD2E40((uint64_t)v38, v23, v25, v30);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v25, v29);
      sub_23AD43374((uint64_t)v38);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v19, AssociatedTypeWitness);
    }
  }
  return v17;
}

void type metadata accessor for PinningJob.UnpinItem()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD4246C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_23AD42488(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t AssociatedConformanceWitness;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  double v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  void (*v62)(char *, unint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char *v68;
  char v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  double v73;
  double v74;
  double v75;
  char *v76;
  int v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[8];
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  void (*v111)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v6 = v5;
  v103 = a5;
  v111 = (void (*)(uint64_t, _QWORD, _QWORD, _QWORD))a4;
  v109 = a3;
  v90 = a2;
  v8 = *(_QWORD *)(*(_QWORD *)v5 + 560);
  v98 = *(_QWORD **)v5;
  v9 = v98[72];
  v94 = type metadata accessor for SnapshotMutation(0, v8, v9, a4);
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v92 = (char *)v83 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v107 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v100 = (char *)v83 - v12;
  v97 = sub_23B1C5BDC();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v95 = (char *)v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = v9;
  v106 = v8;
  v15 = type metadata accessor for SnapshotItem(255, v8, v9, v14);
  v16 = sub_23B1C6C98();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v83 - v19;
  v104 = *(_QWORD *)(v15 - 8);
  v21 = *(_QWORD *)(v104 + 64);
  v22 = MEMORY[0x24BDAC7A8](v18);
  v99 = (char *)v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v101 = (char *)v83 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)v83 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v110 = (char *)v83 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v108 = (char *)v83 - v30;
  v91 = a1;
  v31 = a1[4];
  result = sub_23AE4F6B4();
  if ((result & 1) == 0)
    return result;
  v86 = v27;
  v89 = AssociatedTypeWitness;
  v33 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 536);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v31 + 240))(v33, 1);
  v84 = v33;
  v83[1] = v6;
  v34 = v104;
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48))(v20, 1, v15);
  if (v35 == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    v37 = type metadata accessor for FileTreeError(0, v106, v105, v36);
    MEMORY[0x23B8613CC](&unk_23B1D40CC, v37);
    swift_allocError();
    v38 = swift_getAssociatedTypeWitness();
    v39 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v41 = swift_getAssociatedConformanceWitness();
    v112 = v38;
    v113 = v39;
    v114 = AssociatedConformanceWitness;
    v115 = v41;
    type metadata accessor for FileItemVersion();
  }
  v42 = (uint64_t)v108;
  v85 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v85(v108, v20, v15);
  v43 = v42 + *(int *)(v15 + 48);
  v102 = type metadata accessor for ItemMetadata();
  v44 = *(int *)(v102 + 48);
  v88 = v43;
  v87 = v44;
  v45 = v34;
  v46 = v111;
  if (*(_BYTE *)(v43 + v44) == 1)
  {
    v47 = MEMORY[0x23B8613CC](&unk_23B1DD478, v15);
    v48 = sub_23AF21910(v15, v47);
    v49 = (uint64_t)v86;
    if ((v48 & 1) != 0)
    {
      v50 = v95;
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v52 = v51;
      (*(void (**)(char *, uint64_t))(v96 + 8))(v50, v97);
      v53 = v52 * 1000000000.0;
      if ((~COERCE__INT64(v52 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v53 > -9.22337204e18)
        {
          if (v53 < 9.22337204e18)
            sub_23B12B6D8(v42, 0, (uint64_t)v53, 0x10000000000, v91, 0, v109);
          goto LABEL_41;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    v54 = v84;
  }
  else
  {
    v54 = v84;
    v49 = (uint64_t)v86;
  }
  v55 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v31 + 472))(v54, v90);
  v83[0] = v56;
  v83[3] = 0;
  v57 = MEMORY[0x23B85F0E0](v55, v15);
  v58 = v108;
  if (!v57)
    goto LABEL_35;
  v59 = 0;
  v83[2] = 0x800000023B201450;
  v84 = v55;
  while (1)
  {
    v61 = sub_23B1C6770();
    sub_23B1C6734();
    if ((v61 & 1) != 0)
    {
      v62 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v62(v110, v55+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v59, v15);
      v63 = v59 + 1;
      if (__OFADD__(v59, 1))
        break;
      goto LABEL_19;
    }
    v81 = sub_23B1C6F38();
    if (v21 != 8)
      goto LABEL_42;
    v112 = v81;
    v62 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
    v62(v110, (unint64_t)&v112, v15);
    swift_unknownObjectRelease();
    v63 = v59 + 1;
    if (__OFADD__(v59, 1))
      break;
LABEL_19:
    v90 = v63;
    v85((char *)v49, v110, v15);
    v64 = v49 + *(int *)(v15 + 48);
    if (*(_BYTE *)(v64 + *(int *)(v102 + 44)) == 1 && *(_BYTE *)(v88 + v87) == 1)
    {
      v65 = v98[71];
      v66 = v98[73];
      v112 = v106;
      v113 = v65;
      v114 = v105;
      v115 = v66;
      type metadata accessor for JobResult();
    }
    v86 = (char *)MEMORY[0x23B8613CC](&unk_23B1DD478, v15);
    v67 = sub_23AF21910(v15, (uint64_t)v86);
    v68 = v101;
    v62(v101, (unint64_t)v58, v15);
    if ((v67 & 1) != 0)
    {
      v69 = v68[*(int *)(v15 + 48) + *(int *)(v102 + 48)];
      v70 = v68;
      v71 = *(void (**)(char *, uint64_t))(v45 + 8);
      v71(v70, v15);
      if ((v69 & 1) != 0)
      {
        v72 = v95;
        sub_23B1C5BD0();
        sub_23B1C5B94();
        v74 = v73;
        (*(void (**)(char *, uint64_t))(v96 + 8))(v72, v97);
        v75 = v74 * 1000000000.0;
        if ((~COERCE__INT64(v74 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v75 <= -9.22337204e18)
          {
            __break(1u);
          }
          else if (v75 < 9.22337204e18)
          {
            sub_23B12B6D8(v49, 0, (uint64_t)v75, 0x10000000000, v91, 0, v109);
          }
          __break(1u);
          JUMPOUT(0x23AD43304);
        }
LABEL_42:
        __break(1u);
        JUMPOUT(0x23AD432F8);
      }
    }
    else
    {
      v76 = v68;
      v71 = *(void (**)(char *, uint64_t))(v45 + 8);
      v71(v76, v15);
    }
    v77 = *(unsigned __int8 *)(v88 + v87);
    if (*(unsigned __int8 *)(v64 + *(int *)(v102 + 48)) != v77)
    {
      v83[6] = v59;
      v83[7] = v71;
      v78 = v99;
      v62(v99, v49, v15);
      v78[*(int *)(v15 + 48) + *(int *)(v102 + 48)] = v77;
      v79 = v98[71];
      v80 = v98[73];
      v112 = v106;
      v113 = v79;
      v83[4] = v79;
      v114 = v105;
      v115 = v80;
      v83[5] = v80;
      type metadata accessor for JobResult();
    }
    v71((char *)v49, v15);
    v55 = v84;
    v60 = MEMORY[0x23B85F0E0](v84, v15);
    ++v59;
    v46 = v111;
    if (v90 == v60)
      goto LABEL_35;
  }
  __break(1u);
LABEL_35:
  swift_bridgeObjectRelease();
  v82 = swift_retain();
  v46(v82, 0, 0, 0);
  swift_release_n();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v58, v15);
}

void type metadata accessor for PinningJob.RefreshChildPinStatus()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD4332C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E16F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23AD43374(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E16F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23AD433B8(uint64_t a1)
{
  return sub_23AC048C0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AD41C78);
}

void sub_23AD433D0()
{
  sub_23AD43498();
}

uint64_t objectdestroyTm_1()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD43424(uint64_t a1)
{
  return sub_23AC048C0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AD41904);
}

uint64_t sub_23AD43434()
{
  uint64_t v0;
  char v1;

  v1 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v0 + 24) + 384))(0);
  return sub_23AF1A800(v1 & 1) & 1;
}

uint64_t sub_23AD43470()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23AD43498()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v1 = *(_QWORD *)(sub_23B1C74F0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AD41EC0(v0 + v2, *(uint64_t **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(_QWORD, _QWORD, _QWORD, id))(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0+ ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8));
}

void type metadata accessor for PinningJob()
{
  JUMPOUT(0x23B861318);
}

void sub_23AD43548()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23AD4359C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)(v13 - 200) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 192) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 208) = (char *)&a9 - v14;
  v16 = type metadata accessor for SnapshotMutation(0, v9, v10, v15);
  *(_QWORD *)(v13 - 328) = v16;
  *(_QWORD *)(v13 - 336) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - v17;
  v19 = type metadata accessor for SnapshotMutation(0, v12, v11, v18);
  *(_QWORD *)(v13 - 352) = v19;
  *(_QWORD *)(v13 - 360) = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v13 - 368) = (char *)&a9 - v20;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v22 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 288) = v22;
  *(_QWORD *)(v13 - 312) = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v13 - 392) = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v13 - 384) = (char *)&a9 - v26;
  *(_QWORD *)(v13 - 272) = AssociatedTypeWitness;
  *(_QWORD *)(v13 - 248) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v13 - 376) = (char *)&a9 - v29;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD43784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)(v13 - 280) = a1;
  *(_QWORD *)(v13 - 304) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 320) = (char *)&a9 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 216) = v16;
  *(_QWORD *)(v13 - 184) = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 224) = (char *)&a9 - v18;
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v13 - 240) = AssociatedTypeWitness;
  *(_QWORD *)(v13 - 232) = v19;
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v13 - 264) = (char *)&a9 - v20;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AD43868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[96];

  v8 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = &v33[-v9];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(&v33[-v9], v3, a1);
  v11 = *(_QWORD *)(v6 - 128);
  if (v11 >> 7 == 0xFFFFFFFF)
  {
    *(_QWORD *)(v6 - 400) = v4;
    sub_23B0C8CA0();
  }
  *(_QWORD *)(v6 - 256) = v1;
  v12 = *(void **)(v6 - 144);
  v13 = *(_QWORD *)(v6 - 136);
  v14 = v11;
  v15 = *(_QWORD *)(v6 - 152);
  *(_QWORD *)(v6 - 176) = v15;
  *(_QWORD *)(v6 - 168) = v12;
  sub_23AD44150(v11, v15, v12);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, a1);
  if (!(v14 >> 62))
    sub_23AD8428C(v14, *(_QWORD *)(v6 - 176), *(_QWORD *)(v6 - 168), v3, v13, *(_QWORD *)(v6 - 160));
  v18 = v3;
  if (v14 >> 62 == 1)
    sub_23B0C62A4(a1, v17, *(_QWORD *)(v6 - 208));
  v19 = *(_QWORD *)(v6 - 224);
  v20 = *(_QWORD *)(v6 - 216);
  v21 = *(_QWORD *)(v6 - 184);
  if ((uint64_t)v14 >= (uint64_t)0x8000000000000002 || *(_OWORD *)(v6 - 176) != 0)
  {
    *(_QWORD *)(v6 - 256) = *(_QWORD *)(v6 - 256);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v18, v20);
    v22 = *(_QWORD *)(v6 - 240);
    v23 = *(_QWORD *)(v6 - 232);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v19, 1, v22) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 184) + 8))(v19, v20);
      v24 = *(_QWORD *)(v6 - 312);
      v25 = *(_QWORD *)(v6 - 392);
      v26 = *(_QWORD *)(v6 - 288);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v25, v18 + *(int *)(a1 + 52), v26);
      v27 = *(_QWORD *)(v6 - 248);
      v28 = *(_QWORD *)(v6 - 272);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v28) != 1)
      {
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v27 + 32))(*(_QWORD *)(v6 - 296), v25, v28);
        v29 = *(_QWORD *)(v6 - 256);
        *(_QWORD *)(v6 - 120) = v5;
        *(_QWORD *)(v6 - 112) = v29;
        *(_QWORD *)(v6 - 104) = v4;
        *(_QWORD *)(v6 - 96) = v2;
        type metadata accessor for JobResult();
      }
      v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
      MEMORY[0x24BDAC7A8](v31);
      v32 = *(_QWORD *)(v6 - 256);
      *(_QWORD *)&v33[-48] = v5;
      *(_QWORD *)&v33[-40] = v32;
      *(_QWORD *)&v33[-32] = v4;
      *(_QWORD *)&v33[-24] = v2;
      *(_QWORD *)&v33[-16] = v18;
      sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23AD44234, (uint64_t)&v33[-64], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Reconciliation.swift", 104, 2, 59);
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v23 + 32))(*(_QWORD *)(v6 - 264), v19, v22);
    v30 = *(_QWORD *)(v6 - 256);
    *(_QWORD *)(v6 - 120) = v5;
    *(_QWORD *)(v6 - 112) = v30;
    *(_QWORD *)(v6 - 104) = v4;
    *(_QWORD *)(v6 - 96) = v2;
    type metadata accessor for JobResult();
  }
  return result;
}

unint64_t sub_23AD44150(unint64_t result, uint64_t a2, void *a3)
{
  if (result >> 7 != 0xFFFFFFFF)
    return sub_23AB2277C(result, a2, a3);
  return result;
}

void sub_23AD44164()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AD441E0(uint64_t a1)
{
  uint64_t v2;

  MEMORY[0x23B8613CC](&unk_23B1E5280, a1);
  sub_23B1C7340();
  sub_23B1C64F4();
  return v2;
}

void sub_23AD44234()
{
  sub_23AD44164();
}

uint64_t sub_23AD44244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  v3 = *(_QWORD *)v1 + *(_QWORD *)(**(_QWORD **)v1 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v3, AssociatedTypeWitness);
}

void sub_23AD442A4()
{
  type metadata accessor for Propagation.UpdateItem();
}

uint64_t sub_23AD442D4()
{
  uint64_t v0;
  uint64_t *v1;

  v0 = swift_dynamicCastClass();
  if (v0)
  {
    v1 = (uint64_t *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 600));
  }
  else
  {
    if (qword_2542E7190 != -1)
      swift_once();
    v1 = &qword_2542EDE38;
  }
  return *v1;
}

void sub_23AD44338(int8x16_t *a1)
{
  sub_23AD44350(a1, (void (*)(_QWORD, _OWORD *))type metadata accessor for Propagation.CreateItem);
}

void sub_23AD44344(int8x16_t *a1)
{
  sub_23AD44350(a1, (void (*)(_QWORD, _OWORD *))type metadata accessor for Propagation.DeleteItem);
}

void sub_23AD44350(int8x16_t *a1, void (*a2)(_QWORD, _OWORD *))
{
  int8x16_t v2;
  _OWORD v3[2];

  v2 = vextq_s8(a1[2], a1[2], 8uLL);
  v3[0] = vextq_s8(a1[1], a1[1], 8uLL);
  v3[1] = v2;
  a2(0, v3);
  JUMPOUT(0x23AD44384);
}

void sub_23AD443A8()
{
  type metadata accessor for Propagation.DeleteItem();
}

uint64_t sub_23AD443D8()
{
  uint64_t result;

  result = swift_dynamicCastClass();
  if (result)
    return *(_BYTE *)(result + *(_QWORD *)(*(_QWORD *)result + 624)) & 1;
  return result;
}

uint64_t sub_23AD44408()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 112);
}

uint64_t sub_23AD44414()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 128);
}

void sub_23AD44420(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD v22[2];
  uint64_t *v23;
  uint64_t v24;
  int v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v22[1] = a8;
  v34 = a6;
  v35 = a5;
  v25 = a4;
  v24 = a3;
  v36 = a2;
  v30 = a11;
  v31 = a12;
  v28 = a7;
  v29 = a10;
  v14 = *a1;
  v15 = *(_QWORD *)(*a1 + 512);
  v16 = *(_QWORD *)(*a1 + 528);
  v27 = type metadata accessor for SnapshotItem(255, v15, v16, a4);
  v17 = sub_23B1C6C98();
  v18 = *(_QWORD *)(v17 - 8);
  v32 = v17;
  v33 = v18;
  MEMORY[0x24BDAC7A8](v17);
  v26 = (char *)v22 - v19;
  v23 = a1;
  *a9 = a1;
  v20 = *(_QWORD *)(v14 + 504);
  v21 = *(_QWORD *)(v14 + 520);
  v37 = v15;
  v38 = v20;
  v39 = v16;
  v40 = v21;
  type metadata accessor for Reconciliation.ReconcileAfterPropagation();
}

void sub_23AD444F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;

  *(_QWORD *)(v2 - 200) = v1 + *(int *)(a1 + 52);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v2 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v2 - 112) = v4;
  *(_QWORD *)(v2 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v2 - 96) = v6;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD44598()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  int v23;
  unint64_t v24;
  uint64_t result;
  _QWORD *v26;
  uint64_t v27;

  v3 = sub_23B1C6C98();
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 - 216) = v4;
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 16);
  v6 = *(_QWORD *)(v2 - 200);
  v7 = *(_QWORD *)(v2 - 128);
  *(_QWORD *)(v2 - 200) = v3;
  v5(v6, v7);
  v8 = v0 + v1[14];
  *(_QWORD *)v8 = *(_QWORD *)(v2 - 240);
  *(_BYTE *)(v8 + 8) = *(_DWORD *)(v2 - 228) & 1;
  v9 = v0 + v1[15];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v2 - 160);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  v14 = sub_23B1C6C98();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 16))(v9, *(_QWORD *)(v2 - 136), v14);
  v16 = *(_QWORD *)(v2 - 144);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 16);
  v17(v0 + v1[16], v16, v11);
  v18 = *(_QWORD *)(v2 - 224);
  v17(v18, v16, v11);
  v19 = *(_QWORD *)(*(_QWORD *)(v2 - 208) - 8);
  v20 = *(_QWORD *)(v2 - 208);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v19 + 48))(v18, 1) == 1)
  {
    v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8);
    v21(v18, v11);
  }
  else
  {
    swift_retain();
    v22 = MEMORY[0x23B8613CC](&unk_23B1DD478, v20);
    v23 = sub_23AF219A4(v20, v22);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_release();
    v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 152) + 8);
    if (v23 != 1)
    {
      v21(*(_QWORD *)(v2 - 144), *(_QWORD *)(v2 - 160));
      (*(void (**)(_QWORD, uint64_t))(v15 + 8))(*(_QWORD *)(v2 - 136), v14);
      result = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 216) + 8))(*(_QWORD *)(v2 - 128), *(_QWORD *)(v2 - 200));
      *(_QWORD *)(v0 + v1[17]) = *(_QWORD *)(v2 - 192);
      *(_BYTE *)(v0 + v1[18]) = *(_DWORD *)(v2 - 252) & 1;
      goto LABEL_7;
    }
    v11 = *(_QWORD *)(v2 - 160);
  }
  v24 = *(_QWORD *)(v2 - 192) & 0xFFFFFFFFFFFFFFF7;
  v21(*(_QWORD *)(v2 - 144), v11);
  (*(void (**)(_QWORD, uint64_t))(v15 + 8))(*(_QWORD *)(v2 - 136), v14);
  result = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 216) + 8))(*(_QWORD *)(v2 - 128), *(_QWORD *)(v2 - 200));
  *(_QWORD *)(v0 + v1[17]) = v24;
  *(_BYTE *)(v0 + v1[18]) = 0;
LABEL_7:
  *(_QWORD *)(v0 + v1[19]) = *(_QWORD *)(v2 - 184);
  v26 = (_QWORD *)(v0 + v1[20]);
  v27 = *(_QWORD *)(v2 - 168);
  *v26 = *(_QWORD *)(v2 - 176);
  v26[1] = v27;
  return result;
}

void sub_23AD44804()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD4485C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;

  *(_QWORD *)(v9 - 256) = a1;
  *(_QWORD *)(v9 - 272) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 - 216) = (char *)&a9 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v9 - 360) = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v9 - 528) = (char *)&a9 - v12;
  sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v9 - 448) = TupleTypeMetadata2;
  *(_QWORD *)(v9 - 488) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  *(_QWORD *)(v9 - 424) = (char *)&a9 - v14;
  v15 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 352) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 112) = v15;
  *(_QWORD *)(v9 - 536) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 96) = v17;
  type metadata accessor for FileItemVersion();
}

void sub_23AD449DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t AssociatedTypeWitness;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  *(_QWORD *)(v13 - 440) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 504) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 480) = type metadata accessor for SnapshotItem(255, v9, v11, v16);
  v17 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 512) = v17;
  *(_QWORD *)(v13 - 520) = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v13 - 376) = (char *)&a9 - v18;
  *(_QWORD *)(v13 - 432) = a1;
  v19 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 408) = v19;
  *(_QWORD *)(v13 - 416) = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v13 - 464) = (char *)&a9 - v21;
  *(_QWORD *)(v13 - 400) = v12;
  *(_QWORD *)(v13 - 368) = *(_QWORD *)(v12 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 496) = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v13 - 456) = (char *)&a9 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - v27;
  *(_QWORD *)(v13 - 200) = v10;
  *(_QWORD *)(v13 - 304) = *(_QWORD *)(v10 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v13 - 328) = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  *(_QWORD *)(v13 - 312) = (char *)&a9 - v31;
  MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v13 - 296) = (char *)&a9 - v32;
  v34 = type metadata accessor for ItemReconciliationHalf(0, v9, v11, v33);
  *(_QWORD *)(v13 - 240) = *(_QWORD *)(v34 - 8);
  *(_QWORD *)(v13 - 232) = v34;
  v35 = MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v13 - 472) = (char *)&a9 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  *(_QWORD *)(v13 - 248) = (char *)&a9 - v37;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v39 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v13 - 384) = (char *)&a9 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  *(_QWORD *)(v13 - 280) = v9;
  v41 = *(_QWORD *)(v13 - 136);
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v41;
  *(_QWORD *)(v13 - 288) = v11;
  v42 = *(_QWORD *)(v13 - 144);
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v42;
  type metadata accessor for ItemReconciliation();
}

void sub_23AD44CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v12 - 192) = a1;
  v13 = sub_23B1C6C98();
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v12 - 184) = v13;
  *(_QWORD *)(v12 - 176) = v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v12 - 208) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v12 - 392) = (char *)&a9 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v12 - 336) = (char *)&a9 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v12 - 320) = (char *)&a9 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v25);
  v26 = **(_QWORD **)(v12 - 72) + *(_QWORD *)(***(_QWORD ***)(v12 - 72) + 536);
  *(_QWORD *)(v12 - 168) = v11;
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  *(_QWORD *)(v12 - 128) = v9;
  v27(v10, v26, v9);
  sub_23AB003A0();
}

uint64_t sub_23AD44E4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!v0)
  {
    *(_QWORD *)(v7 - 544) = v6;
    *(_QWORD *)(v7 - 568) = v4;
    *(_QWORD *)(v7 - 552) = v1;
    *(_QWORD *)(v7 - 560) = v5;
    *(_QWORD *)(v7 - 224) = v2;
    *(_QWORD *)(v7 - 160) = 0;
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 168) + 8))(v3, *(_QWORD *)(v7 - 128));
    sub_23AD44350(*(int8x16_t **)(v7 - 200), (void (*)(_QWORD, _OWORD *))type metadata accessor for Propagation.DeleteItem);
  }
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 168) + 8))(v3, *(_QWORD *)(v7 - 128));
}

void sub_23AD45424(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v2;
  v5 = v1;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  if ((a1 & 1) != 0)
    JUMPOUT(0x23AD45444);
  JUMPOUT(0x23AD4518CLL);
}

void sub_23AD45450(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  void (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(_QWORD, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  void (*v68)(uint64_t, uint64_t);
  void (*v69)(_QWORD, uint64_t);
  uint64_t v70;
  uint64_t v71;

  if ((a1 & 0x10) == 0)
  {
    v10 = *(_QWORD *)(v9 - 144);
    v11 = *(_QWORD *)(v9 - 280);
    *(_QWORD *)(v9 - 120) = *(_QWORD *)(v9 - 136);
    *(_QWORD *)(v9 - 112) = v11;
    v12 = *(_QWORD *)(v9 - 288);
    *(_QWORD *)(v9 - 104) = v10;
    *(_QWORD *)(v9 - 96) = v12;
    type metadata accessor for JobResult();
  }
  *(_QWORD *)(v9 - 248) = v7;
  v13 = *(_QWORD *)(v9 - 336);
  v4(v13, *(_QWORD *)(v9 - 224), *(_QWORD *)(v9 - 184));
  v14 = *(_QWORD *)(v9 - 328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 176))(v14, v1, v2);
  if (v5 == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 - 248))(v14, v2);
    JUMPOUT(0x23AD452B8);
  }
  v15 = *(_QWORD *)(v9 - 392);
  v16 = *(_QWORD *)(v9 - 184);
  v4(v15, v13, v16);
  if (v8(v15, 1, v6) == 1)
  {
    v3(v15, v16);
    v17 = *(_QWORD *)(v9 - 352);
    v18 = *(_QWORD *)(v9 - 360);
    v19 = *(_QWORD *)(v9 - 344);
    v20 = *(_QWORD *)(v9 - 376);
  }
  else
  {
    v22 = *(_QWORD *)(v9 - 240);
    v21 = *(_QWORD *)(v9 - 232);
    v23 = *(_QWORD *)(v9 - 472);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v23, v15, v21);
    (*(void (**)(uint64_t, uint64_t))(v9 - 544))(v15, v6);
    v24 = *(_QWORD *)(v9 - 464);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 - 416) + 16))(v24, v23 + *(int *)(v21 + 48), *(_QWORD *)(v9 - 408));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
    v25 = *(_QWORD *)(v9 - 440);
    v26 = *(_QWORD *)(v9 - 432);
    v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v24, 1, v26);
    v17 = *(_QWORD *)(v9 - 352);
    v18 = *(_QWORD *)(v9 - 360);
    v19 = *(_QWORD *)(v9 - 344);
    v20 = *(_QWORD *)(v9 - 376);
    if (v27 != 1)
    {
      (*(void (**)(_QWORD, uint64_t, _QWORD))(v18 + 16))(*(_QWORD *)(v9 - 344), v24, *(_QWORD *)(v9 - 352));
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
      v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
      v28(v19, 0, 1, v17);
LABEL_11:
      v29 = *(_QWORD *)(*(_QWORD *)(v9 - 152) + 40);
      v30 = *(_QWORD *)(v9 - 384);
      v31 = *(_QWORD *)(v9 - 200);
      v32 = *(_QWORD *)(v9 - 328);
      sub_23AD44244(v30);
      v33 = *(_QWORD *)(v9 - 160);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v29 + 240))(v30, 1);
      if (v33)
      {
        (*(void (**)(uint64_t, _QWORD))(v9 - 168))(v30, *(_QWORD *)(v9 - 128));
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 368) + 8))(*(_QWORD *)(v9 - 344), *(_QWORD *)(v9 - 400));
        (*(void (**)(uint64_t, uint64_t))(v9 - 248))(v32, v31);
        v3(*(_QWORD *)(v9 - 336), *(_QWORD *)(v9 - 184));
        JUMPOUT(0x23AD452D0);
      }
      (*(void (**)(uint64_t, _QWORD))(v9 - 168))(v30, *(_QWORD *)(v9 - 128));
      v34 = *(_QWORD *)(v9 - 480);
      v35 = *(_QWORD *)(v34 - 8);
      v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v20, 1, v34);
      *(_QWORD *)(v9 - 160) = 0;
      if (v36 == 1)
      {
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 520) + 8))(v20, *(_QWORD *)(v9 - 512));
        v37 = 1;
        v38 = *(_QWORD *)(v9 - 456);
      }
      else
      {
        v39 = v20 + *(int *)(v34 + 40);
        v40 = *(_QWORD *)(v9 - 440);
        v41 = *(_QWORD *)(v9 - 504);
        v42 = v34;
        v43 = *(_QWORD *)(v9 - 432);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v41, v39, v43);
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v20, v42);
        v38 = *(_QWORD *)(v9 - 456);
        (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 - 360) + 16))(v38, v41, *(_QWORD *)(v9 - 352));
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v43);
        v37 = 0;
      }
      v44 = *(_QWORD *)(v9 - 368);
      v45 = *(_QWORD *)(v9 - 352);
      v28(v38, v37, 1, v45);
      v46 = *(_QWORD *)(v9 - 424);
      v47 = v46 + *(int *)(*(_QWORD *)(v9 - 448) + 48);
      v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
      v49 = *(_QWORD *)(v9 - 344);
      v50 = *(_QWORD *)(v9 - 400);
      v48(v46, v49, v50);
      *(_QWORD *)(v9 - 152) = v47;
      v51 = v47;
      v52 = v38;
      v48(v51, v38, v50);
      v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 360) + 48);
      v54 = v53(v46, 1, v45);
      v55 = *(_QWORD *)(v9 - 328);
      if (v54 == 1)
      {
        v56 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 368) + 8);
        v56(v52, v50);
        v56(v49, v50);
        (*(void (**)(uint64_t, _QWORD))(v9 - 248))(v55, *(_QWORD *)(v9 - 200));
        v3(*(_QWORD *)(v9 - 336), *(_QWORD *)(v9 - 184));
        if (v53(*(_QWORD *)(v9 - 152), 1, *(_QWORD *)(v9 - 352)) == 1)
        {
          v56(*(_QWORD *)(v9 - 424), v50);
          goto LABEL_27;
        }
      }
      else
      {
        v57 = *(_QWORD *)(v9 - 496);
        v48(v57, v46, v50);
        v58 = *(_QWORD *)(v9 - 152);
        v59 = v50;
        if (v53(v58, 1, *(_QWORD *)(v9 - 352)) != 1)
        {
          v63 = *(_QWORD *)(v9 - 360);
          v64 = *(_QWORD *)(v9 - 528);
          v65 = v57;
          v66 = *(_QWORD *)(v9 - 352);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 32))(v64, v58, v66);
          v67 = sub_23B1C63A4();
          v68 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
          v68(v64, v66);
          v69 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v9 - 368) + 8);
          v69(*(_QWORD *)(v9 - 456), v59);
          v69(*(_QWORD *)(v9 - 344), v59);
          (*(void (**)(_QWORD, _QWORD))(v9 - 248))(*(_QWORD *)(v9 - 328), *(_QWORD *)(v9 - 200));
          v3(*(_QWORD *)(v9 - 336), *(_QWORD *)(v9 - 184));
          v68(v65, v66);
          v69(*(_QWORD *)(v9 - 424), v59);
          v61 = *(_QWORD *)(v9 - 144);
          v62 = *(_QWORD *)(v9 - 136);
          if ((v67 & 1) != 0)
LABEL_27:
            JUMPOUT(0x23AD452C8);
LABEL_23:
          v70 = *(_QWORD *)(v9 - 280);
          *(_QWORD *)(v9 - 120) = v62;
          *(_QWORD *)(v9 - 112) = v70;
          v71 = *(_QWORD *)(v9 - 288);
          *(_QWORD *)(v9 - 104) = v61;
          *(_QWORD *)(v9 - 96) = v71;
          type metadata accessor for JobResult();
        }
        v60 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v9 - 368) + 8);
        v60(*(_QWORD *)(v9 - 456), v50);
        v60(*(_QWORD *)(v9 - 344), v50);
        (*(void (**)(_QWORD, _QWORD))(v9 - 248))(*(_QWORD *)(v9 - 328), *(_QWORD *)(v9 - 200));
        v3(*(_QWORD *)(v9 - 336), *(_QWORD *)(v9 - 184));
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 360) + 8))(v57, *(_QWORD *)(v9 - 352));
      }
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 488) + 8))(*(_QWORD *)(v9 - 424), *(_QWORD *)(v9 - 448));
      v61 = *(_QWORD *)(v9 - 144);
      v62 = *(_QWORD *)(v9 - 136);
      goto LABEL_23;
    }
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 416) + 8))(v24, *(_QWORD *)(v9 - 408));
  }
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v28(v19, 1, 1, v17);
  goto LABEL_11;
}

void sub_23AD45D88()
{
  type metadata accessor for Bouncing.BouncingContext();
}

void sub_23AD45DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v13 - 560) = a1;
  v14 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 544) = v14;
  *(_QWORD *)(v13 - 552) = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 576) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 816) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD45E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 336) = a1;
  *(_QWORD *)(v13 - 352) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for Bouncing.BouncingContext();
}

void sub_23AD45ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t AssociatedTypeWitness;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t TupleTypeMetadata2;
  uint64_t v62;

  *(_QWORD *)(v13 - 976) = a1;
  v14 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 952) = v14;
  *(_QWORD *)(v13 - 960) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 968) = (char *)&a9 - v15;
  v17 = type metadata accessor for SnapshotItem(255, v12, v11, v16);
  v18 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 272) = v18;
  *(_QWORD *)(v13 - 280) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 288) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v13 - 680) = (char *)&a9 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v13 - 624) = (char *)&a9 - v24;
  *(_QWORD *)(v13 - 264) = v17;
  *(_QWORD *)(v13 - 256) = *(_QWORD *)(v17 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v13 - 368) = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v13 - 704) = (char *)&a9 - v28;
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v13 - 784) = (char *)&a9 - v29;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v31 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 832) = v31;
  *(_QWORD *)(v13 - 840) = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v13 - 640) = (char *)&a9 - v33;
  *(_QWORD *)(v13 - 360) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v34 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v13 - 896) = (char *)&a9 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v13 - 848) = (char *)&a9 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)(v13 - 936) = (char *)&a9 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  *(_QWORD *)(v13 - 912) = (char *)&a9 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)(v13 - 792) = (char *)&a9 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  *(_QWORD *)(v13 - 768) = (char *)&a9 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  *(_QWORD *)(v13 - 864) = (char *)&a9 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  *(_QWORD *)(v13 - 752) = (char *)&a9 - v49;
  MEMORY[0x24BDAC7A8](v48);
  *(_QWORD *)(v13 - 664) = (char *)&a9 - v50;
  v51 = sub_23B1C5E4C();
  *(_QWORD *)(v13 - 688) = v51;
  *(_QWORD *)(v13 - 696) = *(_QWORD *)(v51 - 8);
  v52 = MEMORY[0x24BDAC7A8](v51);
  *(_QWORD *)(v13 - 928) = (char *)&a9 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x24BDAC7A8](v52);
  *(_QWORD *)(v13 - 904) = (char *)&a9 - v55;
  v56 = MEMORY[0x24BDAC7A8](v54);
  *(_QWORD *)(v13 - 760) = (char *)&a9 - v57;
  v58 = MEMORY[0x24BDAC7A8](v56);
  *(_QWORD *)(v13 - 856) = (char *)&a9 - v59;
  MEMORY[0x24BDAC7A8](v58);
  *(_QWORD *)(v13 - 656) = (char *)&a9 - v60;
  swift_getAssociatedTypeWitness();
  sub_23B1C6C98();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v13 - 464) = TupleTypeMetadata2;
  *(_QWORD *)(v13 - 504) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  *(_QWORD *)(v13 - 432) = (char *)&a9 - v62;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AD463A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t AssociatedConformanceWitness;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v102;
  uint64_t AssociatedTypeWitness;
  uint64_t v104;
  void (*v105)(_BYTE *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unsigned int (*v165)(uint64_t, uint64_t, uint64_t);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t, uint64_t);
  char v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(uint64_t, uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  void (*v190)(uint64_t);
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _BYTE v201[80];

  v10 = sub_23B1C6C98();
  *(_QWORD *)(v8 - 480) = v10;
  *(_QWORD *)(v8 - 488) = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v8 - 408) = &v201[-v12];
  *(_QWORD *)(v8 - 416) = a1;
  *(_QWORD *)(v8 - 424) = *(_QWORD *)(a1 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v8 - 528) = &v201[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v8 - 520) = &v201[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v8 - 456) = &v201[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v8 - 440) = &v201[-v20];
  *(_QWORD *)(v8 - 392) = v7;
  *(_QWORD *)(v8 - 384) = *(_QWORD *)(v7 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v8 - 496) = &v201[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v8 - 728) = &v201[-v24];
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v8 - 824) = &v201[-v26];
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v8 - 880) = &v201[-v28];
  v29 = MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v8 - 568) = &v201[-v30];
  v31 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v8 - 648) = &v201[-v32];
  v33 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v8 - 512) = &v201[-v34];
  v35 = MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v8 - 448) = &v201[-v36];
  MEMORY[0x24BDAC7A8](v35);
  *(_QWORD *)(v8 - 312) = &v201[-v37];
  *(_QWORD *)(v8 - 328) = v5;
  *(_QWORD *)(v8 - 320) = v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v40 = type metadata accessor for ItemState(255, v1, AssociatedConformanceWitness, v39);
  v41 = sub_23B1C6C98();
  *(_QWORD *)(v8 - 296) = v41;
  *(_QWORD *)(v8 - 304) = *(_QWORD *)(v41 - 8);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v44 = &v201[-v43];
  *(_QWORD *)(v8 - 224) = v40;
  *(_QWORD *)(v8 - 240) = *(_QWORD *)(v40 - 8);
  v45 = MEMORY[0x24BDAC7A8](v42);
  *(_QWORD *)(v8 - 248) = &v201[-v46];
  *(_QWORD *)(v8 - 168) = v2;
  *(_QWORD *)(v8 - 192) = *(_QWORD *)(v2 - 8);
  v47 = MEMORY[0x24BDAC7A8](v45);
  *(_QWORD *)(v8 - 584) = &v201[-((v48 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v49 = MEMORY[0x24BDAC7A8](v47);
  *(_QWORD *)(v8 - 632) = &v201[-v50];
  v51 = MEMORY[0x24BDAC7A8](v49);
  *(_QWORD *)(v8 - 888) = &v201[-v52];
  v53 = MEMORY[0x24BDAC7A8](v51);
  *(_QWORD *)(v8 - 984) = &v201[-v54];
  v55 = MEMORY[0x24BDAC7A8](v53);
  *(_QWORD *)(v8 - 1000) = &v201[-v56];
  v57 = MEMORY[0x24BDAC7A8](v55);
  *(_QWORD *)(v8 - 992) = &v201[-v58];
  v59 = MEMORY[0x24BDAC7A8](v57);
  *(_QWORD *)(v8 - 800) = &v201[-v60];
  v61 = MEMORY[0x24BDAC7A8](v59);
  *(_QWORD *)(v8 - 616) = &v201[-v62];
  v63 = MEMORY[0x24BDAC7A8](v61);
  *(_QWORD *)(v8 - 600) = &v201[-v64];
  v65 = MEMORY[0x24BDAC7A8](v63);
  *(_QWORD *)(v8 - 608) = &v201[-v66];
  v67 = MEMORY[0x24BDAC7A8](v65);
  *(_QWORD *)(v8 - 736) = &v201[-v68];
  v69 = MEMORY[0x24BDAC7A8](v67);
  *(_QWORD *)(v8 - 744) = &v201[-v70];
  v71 = MEMORY[0x24BDAC7A8](v69);
  *(_QWORD *)(v8 - 400) = &v201[-v72];
  v73 = MEMORY[0x24BDAC7A8](v71);
  *(_QWORD *)(v8 - 376) = &v201[-v74];
  MEMORY[0x24BDAC7A8](v73);
  v76 = &v201[-v75];
  *(_QWORD *)(v8 - 184) = v4;
  *(_QWORD *)(v8 - 176) = v3;
  v78 = type metadata accessor for SnapshotItem(255, v3, v4, v77);
  v79 = sub_23B1C6C98();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = MEMORY[0x24BDAC7A8](v79);
  v83 = &v201[-v82];
  *(_QWORD *)(v8 - 208) = *(_QWORD *)(v78 - 8);
  *(_QWORD *)(v8 - 200) = v78;
  v84 = MEMORY[0x24BDAC7A8](v81);
  *(_QWORD *)(v8 - 808) = &v201[-((v85 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v86 = MEMORY[0x24BDAC7A8](v84);
  *(_QWORD *)(v8 - 944) = &v201[-v87];
  v88 = MEMORY[0x24BDAC7A8](v86);
  *(_QWORD *)(v8 - 920) = &v201[-v89];
  v90 = MEMORY[0x24BDAC7A8](v88);
  *(_QWORD *)(v8 - 776) = &v201[-v91];
  v92 = MEMORY[0x24BDAC7A8](v90);
  *(_QWORD *)(v8 - 872) = &v201[-v93];
  v94 = MEMORY[0x24BDAC7A8](v92);
  *(_QWORD *)(v8 - 536) = &v201[-v95];
  v96 = MEMORY[0x24BDAC7A8](v94);
  *(_QWORD *)(v8 - 672) = &v201[-v97];
  MEMORY[0x24BDAC7A8](v96);
  *(_QWORD *)(v8 - 232) = &v201[-v98];
  v99 = *(_QWORD *)(v8 - 136);
  v100 = *(_QWORD *)(v99 + 40);
  *(_QWORD *)(v8 - 592) = *(_QWORD *)(v99 + 32);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v1, AssociatedConformanceWitness) & 1) != 0)return (*(uint64_t (**)(unint64_t, unint64_t))(**(_QWORD **)(v8 - 152) + 168))(0xD00000000000002BLL, 0x800000023B201620);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v1, AssociatedConformanceWitness) & 1) != 0)return (*(uint64_t (**)(unint64_t, unint64_t))(**(_QWORD **)(v8 - 152) + 168))(0xD00000000000002CLL, 0x800000023B2015F0);
  *(_QWORD *)(v8 - 1008) = AssociatedConformanceWitness;
  v102 = **(_QWORD **)(v8 - 160) + *(_QWORD *)(***(_QWORD ***)(v8 - 160) + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v76, v102, AssociatedTypeWitness);
  v104 = *(_QWORD *)(v8 - 128);
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)v100 + 240))(v76, 1);
  if (v104)
    return (*(uint64_t (**)(_BYTE *, _QWORD))(*(_QWORD *)(v8 - 192) + 8))(v76, *(_QWORD *)(v8 - 168));
  *(_QWORD *)(v8 - 1032) = v100;
  *(_QWORD *)(v8 - 1016) = v1;
  v105 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v8 - 192) + 8);
  v106 = *(_QWORD *)(v8 - 168);
  *(_QWORD *)(v8 - 1024) = v105;
  v105(v76, v106);
  v107 = *(_QWORD *)(v8 - 208);
  v108 = *(_QWORD *)(v8 - 200);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v107 + 48))(v83, 1, v108) != 1)
  {
    *(_QWORD *)(v8 - 128) = 0;
    v114 = *(_QWORD *)(v8 - 232);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v107 + 32))(v114, v83, v108);
    v115 = *(_QWORD *)(v8 - 304);
    v116 = *(_QWORD *)(v8 - 296);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v115 + 16))(v44, *(_QWORD *)(v8 - 160) + *(int *)(*(_QWORD *)(v8 - 216) + 60), v116);
    v117 = *(_QWORD *)(v8 - 240);
    v118 = *(_QWORD *)(v8 - 224);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v117 + 48))(v44, 1, v118) == 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v44, v116);
      sub_23AFF1C24((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Reconciliation.swift", 104, 2, 208);
    }
    v119 = *(_QWORD *)(v8 - 248);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v117 + 32))(v119, v44, v118);
    v120 = (uint64_t *)(v114 + *(int *)(v108 + 44));
    v122 = *v120;
    v121 = v120[1];
    v123 = (uint64_t *)(v119 + *(int *)(v118 + 36));
    v125 = *v123;
    v124 = v123[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v126 = sub_23AAAE580(v122, v121);
    v128 = v127;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 - 288) = v123;
    if (v128)
    {
      if (v126 == 12565487 && v128 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_17:
        swift_bridgeObjectRetain();
        v132 = sub_23B1C64B8();
        v133 = sub_23AA8A1BC(v132, v122, v121);
        v135 = v134;
        v137 = v136;
        v139 = v138;
        swift_bridgeObjectRelease();
        v122 = MEMORY[0x23B85ED8C](v133, v135, v137, v139);
        v141 = v140;
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      v131 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v131 & 1) != 0)
        goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    v141 = v121;
LABEL_19:
    swift_bridgeObjectRetain();
    v142 = sub_23AAAE580(v125, v124);
    v144 = v143;
    swift_bridgeObjectRelease();
    if (v144)
    {
      if (v142 == 12565487 && v144 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_24:
        swift_bridgeObjectRetain();
        v146 = sub_23B1C64B8();
        v147 = sub_23AA8A1BC(v146, v125, v124);
        v149 = v148;
        v151 = v150;
        v153 = v152;
        swift_bridgeObjectRelease();
        v125 = MEMORY[0x23B85ED8C](v147, v149, v151, v153);
        v155 = v154;
        v119 = *(_QWORD *)(v8 - 248);
        swift_bridgeObjectRelease();
LABEL_26:
        v156 = *(_QWORD *)(v8 - 200);
        if (v122 == v125 && v141 == v155)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v157 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v157 & 1) == 0)
            goto LABEL_31;
        }
        v158 = *(_QWORD *)(v8 - 136);
        v159 = *(_QWORD *)(v8 - 128);
        v160 = *(_QWORD *)(v158 + 16);
        v161 = *(void (**)(uint64_t))(*(_QWORD *)v160 + 160);
        v162 = *(_QWORD *)(v8 - 312);
        v161(v119);
        if (v159)
        {
LABEL_31:
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 240) + 8))(v119, *(_QWORD *)(v8 - 224));
          return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v8 - 208) + 8))(*(_QWORD *)(v8 - 232), v156);
        }
        v163 = v162;
        v164 = *(_QWORD *)(v8 - 192);
        v165 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48);
        v166 = *(_QWORD *)(v8 - 168);
        if (v165(v163, 1, v166) == 1)
        {
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 384) + 8))(v163, *(_QWORD *)(v8 - 392));
          v168 = *(_QWORD *)(v8 - 184);
          v167 = *(_QWORD *)(v8 - 176);
          *(_QWORD *)(v8 - 120) = *(_QWORD *)(v8 - 320);
          *(_QWORD *)(v8 - 112) = v167;
          *(_QWORD *)(v8 - 104) = *(_QWORD *)(v8 - 328);
          *(_QWORD *)(v8 - 96) = v168;
          type metadata accessor for JobResult();
        }
        *(_QWORD *)(v8 - 296) = v160;
        v169 = *(void (**)(uint64_t, uint64_t, uint64_t))(v164 + 32);
        v169(*(_QWORD *)(v8 - 376), v163, v166);
        v170 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(**(_QWORD **)(v158 + 24) + 328))(10, *(_QWORD *)(v8 - 144), 0x2000000000000000, 1);
        v171 = *(_QWORD *)(v8 - 200);
        if ((v170 & 1) == 0)
          sub_23AB00114();
        (*(void (**)(_QWORD))(**(_QWORD **)(v8 - 1032) + 296))(*(_QWORD *)(v8 - 232));
        v173 = *(_QWORD *)(v8 - 168);
        if ((v172 & 1) != 0)
        {
          (*(void (**)(_QWORD, _QWORD))(v8 - 1024))(*(_QWORD *)(v8 - 376), *(_QWORD *)(v8 - 168));
          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v8 - 240) + 8))(*(_QWORD *)(v8 - 248), *(_QWORD *)(v8 - 224));
          return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v8 - 208) + 8))(*(_QWORD *)(v8 - 232), v171);
        }
        *(_QWORD *)(v8 - 128) = 0;
        sub_23AFD4CB4(v173, v173);
        v174 = *(_QWORD *)(v8 - 192);
        swift_allocObject();
        v175 = sub_23B1C6728();
        v176 = *(void (**)(uint64_t, uint64_t, uint64_t))(v174 + 16);
        v176(v177, *(_QWORD *)(v8 - 376), v173);
        *(_QWORD *)(v8 - 72) = sub_23AD7D55C(v175);
        v178 = *(_QWORD *)(v8 - 472);
        if ((sub_23B1C63A4() & 1) == 0)
        {
          *(_QWORD *)(v8 - 144) = v176;
          v187 = *(_QWORD *)(v8 - 496);
          v188 = *(_QWORD *)(v8 - 128);
          v161(v178);
          if (v188)
          {
            swift_bridgeObjectRelease();
            v199 = *(_QWORD *)(v8 - 376);
            v200 = v173;
LABEL_36:
            (*(void (**)(uint64_t, uint64_t))(v8 - 1024))(v199, v200);
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v8 - 240) + 8))(*(_QWORD *)(v8 - 248), *(_QWORD *)(v8 - 224));
            return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v8 - 208) + 8))(*(_QWORD *)(v8 - 232), *(_QWORD *)(v8 - 200));
          }
          *(_QWORD *)(v8 - 128) = 0;
          if (v165(v187, 1, v173) == 1)
          {
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v8 - 384) + 8))(*(_QWORD *)(v8 - 496), *(_QWORD *)(v8 - 392));
            v179 = *(uint64_t **)(v8 - 288);
            v176 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 144);
            goto LABEL_43;
          }
          v197 = *(_QWORD *)(v8 - 632);
          v198 = *(_QWORD *)(v8 - 168);
          v169(v197, *(_QWORD *)(v8 - 496), v198);
          v176 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 144);
          v176(*(_QWORD *)(v8 - 400), v197, v198);
          sub_23B1C67DC();
          sub_23B1C67AC();
          (*(void (**)(uint64_t, uint64_t))(v8 - 1024))(v197, v198);
        }
        v179 = *(uint64_t **)(v8 - 288);
LABEL_43:
        v180 = *v179;
        v181 = v179[1];
        v182 = *(_QWORD *)(v8 - 72);
        swift_bridgeObjectRetain();
        v183 = v180;
        v184 = *(_QWORD *)(v8 - 128);
        sub_23B0EC750(v183, v181, v182);
        *(_QWORD *)(v8 - 192) = v185;
        *(_QWORD *)(v8 - 256) = v186;
        if (!v184)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v176(*(_QWORD *)(v8 - 584), *(_QWORD *)(v8 - 232), *(_QWORD *)(v8 - 168));
          v189 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 - 560) - 8) + 56))(*(_QWORD *)(v8 - 576), 1, 1);
          v190 = *(void (**)(uint64_t))(**(_QWORD **)(v8 - 136) + 272);
          *(_QWORD *)(v8 - 128) = 0;
          v190(v189);
          v191 = **(_QWORD ***)(v8 - 160);
          *(_QWORD *)(v8 - 264) = v191[14];
          v193 = v191[15];
          v192 = v191[16];
          *(_QWORD *)(v8 - 272) = v193;
          *(_QWORD *)(v8 - 280) = v192 | 0x100000000;
          v194 = *(_QWORD *)(v8 - 320);
          *(_QWORD *)(v8 - 144) = v176;
          v195 = *(_QWORD *)(v8 - 184);
          v196 = *(_QWORD *)(v8 - 176);
          *(_QWORD *)(v8 - 120) = v194;
          *(_QWORD *)(v8 - 112) = v196;
          *(_QWORD *)(v8 - 104) = *(_QWORD *)(v8 - 328);
          *(_QWORD *)(v8 - 96) = v195;
          type metadata accessor for JobResult();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v199 = *(_QWORD *)(v8 - 376);
        v200 = *(_QWORD *)(v8 - 168);
        goto LABEL_36;
      }
      v145 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v145 & 1) != 0)
        goto LABEL_24;
    }
    swift_bridgeObjectRetain();
    v155 = v124;
    goto LABEL_26;
  }
  (*(void (**)(_BYTE *, uint64_t))(v80 + 8))(v83, v79);
  v109 = *(_QWORD *)(v8 - 280);
  v110 = *(_QWORD *)(v8 - 288);
  v111 = *(_QWORD *)(v8 - 272);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v109 + 16))(v110, *(_QWORD *)(v8 - 160) + *(int *)(*(_QWORD *)(v8 - 216) + 64), v111);
  v112 = *(_QWORD *)(v8 - 256);
  v113 = *(_QWORD *)(v8 - 264);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v110, 1, v113) != 1)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v112 + 32))(*(_QWORD *)(v8 - 368), v110, v113);
    v130 = *(_QWORD *)(v8 - 184);
    v129 = *(_QWORD *)(v8 - 176);
    *(_QWORD *)(v8 - 120) = *(_QWORD *)(v8 - 320);
    *(_QWORD *)(v8 - 112) = v129;
    *(_QWORD *)(v8 - 104) = *(_QWORD *)(v8 - 328);
    *(_QWORD *)(v8 - 96) = v130;
    type metadata accessor for JobResult();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 8))(v110, v111);
}

void sub_23AD4AB0C()
{
  type metadata accessor for ReconciliationMutation();
}

uint64_t sub_23AD4AB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedTypeWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int EnumCaseMultiPayload;

  *(_QWORD *)(v12 - 256) = a1;
  *(_QWORD *)(v12 - 264) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v12 - 272) = (char *)&a9 - v13;
  v14 = sub_23B1C5BDC();
  *(_QWORD *)(v12 - 280) = v14;
  *(_QWORD *)(v12 - 288) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v12 - 296) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SnapshotItem(255, v9, v10, v16);
  v18 = sub_23B1C6C98();
  *(_QWORD *)(v12 - 232) = v18;
  *(_QWORD *)(v12 - 192) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v12 - 304) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v12 - 248) = (char *)&a9 - v22;
  *(_QWORD *)(v12 - 240) = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v12 - 312) = (char *)&a9 - v23;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v12 - 152) = AssociatedTypeWitness;
  *(_QWORD *)(v12 - 144) = v25;
  v26 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v12 - 320) = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v12 - 184) = (char *)&a9 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  *(_QWORD *)(v12 - 216) = (char *)&a9 - v31;
  MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v12 - 176) = (char *)&a9 - v32;
  v34 = type metadata accessor for FileTreeError(0, v9, v10, v33);
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))((char *)&a9 - v36, v11, v34);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)&loc_23AD4ADBC + *((int *)qword_23AD4B7E8 + EnumCaseMultiPayload)))();
}

uint64_t sub_23AD4ADCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

void sub_23AD4B4E4()
{
  void (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x23B8613CC](&unk_23B1D40CC, v1);
  swift_allocError();
  v0(v3, v2, v1);
  swift_willThrow();
  JUMPOUT(0x23AD4B4BCLL);
}

void sub_23AD4B550()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t);

  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_23AB22AE4(*(_QWORD *)(v5 - 184), v0);
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 144) + 8);
    v6(v2, v4);
    v6(v3, v4);
    JUMPOUT(0x23AD4B4BCLL);
  }
  *(_QWORD *)(v5 - 136) = 0;
  swift_bridgeObjectRelease();
  sub_23AB22AE4(*(_QWORD *)(v5 - 184), v0);
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 144) + 8);
  v7(v2, v4);
  v7(v3, v4);
  JUMPOUT(0x23AD4B4B8);
}

void sub_23AD4B61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 192) + 8))(v4, v2);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v0);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 144) + 8))(v3, *(_QWORD *)(v7 - 152));
    (*(void (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(v7 - 176) - 8) + 8))(*(_QWORD *)(v7 - 216));
    JUMPOUT(0x23AD4B4BCLL);
  }
  *(_QWORD *)(v7 - 136) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 192) + 8))(v4, v2);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v0);
  JUMPOUT(0x23AD4B6E0);
}

void sub_23AD4B724()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;

  v6 = **(_QWORD **)(v5 - 160);
  v7 = *(_QWORD *)(v6 + 112);
  v8 = *(_QWORD *)(v6 + 120);
  sub_23ACFC26C(*(_QWORD *)(v5 - 184), v0);
  v9 = sub_23AD3B900(*(_QWORD *)(v5 - 176), v7, v8, 0x800000040);
  v10 = *(void **)(v9 + 88);
  v11 = *(void **)(v9 + 96);
  *(_QWORD *)(v9 + 88) = 256;
  *(_QWORD *)(v9 + 96) = *(_QWORD *)(v5 - 192);
  v12 = *(_BYTE *)(v9 + 104);
  *(_BYTE *)(v9 + 104) = 0;
  sub_23AAAEE10(v10, v11, v12);
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v1;
  type metadata accessor for JobResult();
}

void sub_23AD4B794()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23AE181A4(*(_QWORD *)(v3 - 168), v1);
  swift_release();
  sub_23AB22AE4(*(_QWORD *)(v3 - 184), v0);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 144) + 8))(*(_QWORD *)(v3 - 216), v2);
  JUMPOUT(0x23AD4B7D0);
}

void sub_23AD4B840()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23AD4B8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;

  v9[9] = a1;
  v10 = sub_23B1C6C98();
  v9[7] = *(_QWORD *)(v10 - 8);
  v9[8] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v9[10] = (char *)&a9 - v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedConformanceWitness();
  v9[91] = AssociatedTypeWitness;
  v9[92] = v13;
  v9[35] = v15;
  v9[36] = AssociatedConformanceWitness;
  v9[93] = AssociatedConformanceWitness;
  v9[94] = v15;
  type metadata accessor for ThrottlingKey();
}

void sub_23AD4B98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v14 = sub_23B1C6C98();
  v9[47] = *(_QWORD *)(v14 - 8);
  v9[48] = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v9[61] = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v9[54] = (char *)&a9 - v17;
  v18 = type metadata accessor for ItemMetadata();
  v9[5] = v18;
  MEMORY[0x24BDAC7A8](v18);
  v9[4] = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v9[72];
  v9[6] = type metadata accessor for SnapshotItem(255, v13, v20, v21);
  v22 = sub_23B1C6C98();
  v9[2] = *(_QWORD *)(v22 - 8);
  v9[3] = v22;
  MEMORY[0x24BDAC7A8](v22);
  v9[11] = (char *)&a9 - v23;
  v24 = sub_23B1C6C98();
  v9[60] = v24;
  v9[53] = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v9[14] = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v9[15] = (char *)&a9 - v28;
  v9[40] = v10;
  v9[19] = *(_QWORD *)(v10 - 8);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v9[13] = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v9[12] = (char *)&a9 - v31;
  v9[91] = v11;
  v9[92] = v13;
  v9[93] = v12;
  v9[94] = v20;
  type metadata accessor for ItemReconciliation();
}

void sub_23AD4BB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v9[62] = *(_QWORD *)(a1 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  v9[16] = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v9[29] = (char *)&a9 - v16;
  v17 = sub_23B1C5570();
  v9[45] = *(_QWORD *)(v17 - 8);
  v9[46] = v17;
  MEMORY[0x24BDAC7A8](v17);
  v9[44] = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23B1C545C();
  v9[57] = *(_QWORD *)(v19 - 8);
  v9[58] = v19;
  MEMORY[0x24BDAC7A8](v19);
  v9[56] = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[91] = v13;
  v9[92] = v11;
  v9[93] = v10;
  v9[94] = v12;
  type metadata accessor for ReconciliationMutation();
}

void *sub_23AD4BC44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  _BYTE *v58;
  void *v59;
  id v60;
  uint64_t v62;
  uint64_t AssociatedTypeWitness;
  uint64_t v64;
  uint64_t v65;
  char v66;
  void *v67;
  id v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t inited;
  uint64_t v75;
  uint64_t v76;
  id v77;
  _BYTE v79[96];

  *(_QWORD *)(v1 + 304) = a1;
  *(_QWORD *)(v1 + 272) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v1 + 296) = &v79[-v9];
  v10 = sub_23B1C6C98();
  *(_QWORD *)(v1 + 216) = v10;
  *(_QWORD *)(v1 + 200) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v1 + 208) = &v79[-v11];
  v13 = type metadata accessor for ItemReconciliationHalf(0, v7, v4, v12);
  *(_QWORD *)(v1 + 248) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v1 + 256) = v13;
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v1 + 240) = &v79[-v14];
  *(_QWORD *)(v1 + 528) = v5;
  *(_QWORD *)(v1 + 520) = v6;
  v16 = type metadata accessor for ItemReconciliationHalf(0, v5, v6, v15);
  *(_QWORD *)(v1 + 400) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v1 + 408) = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v1 + 392) = &v79[-v18];
  *(_QWORD *)(v1 + 536) = v3;
  *(_QWORD *)(v1 + 504) = *(_QWORD *)(v3 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v1 + 168) = &v79[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v1 + 184) = &v79[-v22];
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v1 + 224) = &v79[-v24];
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v1 + 136) = &v79[-v26];
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v1 + 336) = &v79[-v28];
  v29 = MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v1 + 144) = &v79[-v30];
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v1 + 440) = &v79[-v31];
  *(_QWORD *)(v1 + 544) = v2;
  v32 = sub_23B1C6C98();
  *(_QWORD *)(v1 + 472) = v32;
  *(_QWORD *)(v1 + 512) = *(_QWORD *)(v32 - 8);
  v33 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v1 + 160) = &v79[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v1 + 176) = &v79[-v36];
  v37 = MEMORY[0x24BDAC7A8](v35);
  *(_QWORD *)(v1 + 328) = &v79[-v38];
  v39 = MEMORY[0x24BDAC7A8](v37);
  *(_QWORD *)(v1 + 192) = &v79[-v40];
  v41 = MEMORY[0x24BDAC7A8](v39);
  *(_QWORD *)(v1 + 264) = &v79[-v42];
  v43 = MEMORY[0x24BDAC7A8](v41);
  *(_QWORD *)(v1 + 344) = &v79[-v44];
  v45 = MEMORY[0x24BDAC7A8](v43);
  *(_QWORD *)(v1 + 416) = &v79[-v46];
  v47 = MEMORY[0x24BDAC7A8](v45);
  v49 = &v79[-v48];
  MEMORY[0x24BDAC7A8](v47);
  *(_QWORD *)(v1 + 552) = &v79[-v50];
  *(_QWORD *)(v1 + 312) = v7;
  v52 = type metadata accessor for FileTreeError(0, v7, v4, v51);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = MEMORY[0x24BDAC7A8](v52);
  v56 = &v79[-((v55 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v54);
  v58 = &v79[-v57];
  _s3__C4CodeOMa_1(0);
  *(_QWORD *)(v1 + 728) = -2010;
  sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
  if ((sub_23B1C575C() & 1) == 0)
    sub_23AD44804();
  *(_QWORD *)(v1 + 8) = v49;
  v59 = *(void **)(v8 - 72);
  *(_QWORD *)(v1 + 728) = v59;
  v60 = v59;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  if (swift_dynamicCast())
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v53 + 32))(v56, v58, v52);
    sub_23AD4AB0C();
  }

  *(_QWORD *)(v1 + 728) = -2010;
  if ((sub_23B1C575C() & 1) != 0)
  {
    v62 = **(_QWORD **)(v1 + 584) + *(_QWORD *)(***(_QWORD ***)(v1 + 584) + 536);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(*(_QWORD *)(v1 + 440), v62, AssociatedTypeWitness);
    sub_23AB003A0();
  }
  v64 = *(_QWORD *)(v1 + 448);
  sub_23B1C53A8();
  sub_23AA7E38C((unint64_t *)&qword_2569E29D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEA8]);
  v65 = *(_QWORD *)(v1 + 464);
  v66 = sub_23B1C575C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 456) + 8))(v64, v65);
  if ((v66 & 1) != 0)
  {
    v67 = (void *)sub_23B1C5870();
    v68 = objc_msgSend(v67, sel_userInfo);
    v69 = sub_23B1C620C();

    if (*(_QWORD *)(v69 + 16))
    {
      v70 = sub_23AAAF4C4(0xD000000000000013, 0x800000023B1FC400);
      if ((v71 & 1) != 0)
      {
        sub_23AAA15AC(*(_QWORD *)(v69 + 56) + 32 * v70, v1 + 688);
      }
      else
      {
        *(_OWORD *)(v1 + 688) = 0u;
        *(_OWORD *)(v1 + 704) = 0u;
      }
    }
    else
    {
      *(_OWORD *)(v1 + 688) = 0u;
      *(_OWORD *)(v1 + 704) = 0u;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v1 + 712))
    {
      sub_23AAA159C((_OWORD *)(v1 + 688), (_OWORD *)(v1 + 728));
      *(_DWORD *)(v1 + 688) = 1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
      *(_QWORD *)(inited + 32) = 0xD000000000000013;
      *(_QWORD *)(inited + 40) = 0x800000023B1FC400;
      sub_23AAA15AC(v1 + 728, inited + 48);
      sub_23AAE9EB4(inited);
      sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
      v75 = *(_QWORD *)(v1 + 352);
      v76 = *(_QWORD *)(v1 + 368);
      sub_23B1C5864();
      v59 = (void *)sub_23B1C5558();

      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 360) + 8))(v75, v76);
      __swift_destroy_boxed_opaque_existential_1(v1 + 728);
      return v59;
    }

    sub_23AA94C08(v1 + 688);
  }
  else
  {
    *(_DWORD *)(v1 + 728) = sub_23B1C5498();
    sub_23AB6CD48();
    if ((sub_23B1C575C() & 1) != 0)
    {
      v72 = **(_QWORD **)(v1 + 584) + *(_QWORD *)(***(_QWORD ***)(v1 + 584) + 536);
      v73 = swift_getAssociatedTypeWitness();
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(*(_QWORD *)(v1 + 336), v72, v73);
      sub_23AB003A0();
    }
  }
  if (sub_23AE4F6B4() && (*(_BYTE *)(**(_QWORD **)(v1 + 584) + 130) & 1) != 0)
    sub_23AD89714();
  if (sub_23AE4F6B4() && (*(_BYTE *)(**(_QWORD **)(v1 + 584) + 130) & 2) != 0)
    sub_23AD89714();
  v77 = v59;
  return v59;
}

void sub_23AD4CED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  if (v1)
  {
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 504) + 8);
    v7 = *(_QWORD *)(v0 + 536);
    v6(v5, v7);
    v6(v3, v7);
    JUMPOUT(0x23AD4CE44);
  }
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 504) + 8);
  v9 = *(_QWORD *)(v0 + 536);
  *(_QWORD *)(v0 + 576) = v8;
  v10 = v8(v5, v9);
  *(_QWORD *)(v0 + 600) = *(_QWORD *)(*(_QWORD *)v2 + 128);
  (*(void (**)(uint64_t))(**(_QWORD **)(v0 + 592) + 176))(v10);
  (*(void (**)(void))(*(_QWORD *)v4 + 184))();
  sub_23AD683E4();
}

void sub_23AD4CF50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v0[63] + 8))(v2, v0[67]);
    v5 = v4;
    v6 = v0[62];
    v7 = v0[68];
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 1, v7) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v0[64] + 8))(v5, v0[59]);
    }
    else
    {
      v8 = v0[16];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v8, v5, v7);
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      v10 = v0[14];
      v11 = v0[60];
      v9(v10, v8 + *(int *)(v7 + 52), v11);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[19] + 48))(v10, 1, v0[40]) != 1)
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[19] + 32))(v0[13], v10, v0[40]);
        v0[75] = 0;
        sub_23B0C62A4(v7, v12, v0[10]);
      }
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v7);
      (*(void (**)(uint64_t, uint64_t))(v0[53] + 8))(v10, v11);
    }
    JUMPOUT(0x23AD4CDC4);
  }
  JUMPOUT(0x23AD4C39CLL);
}

void sub_23AD4CFE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 600) = v1;
  if (v1)
  {
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 512) + 8))(v2, *(_QWORD *)(v0 + 472));
    JUMPOUT(0x23AD4CE00);
  }
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 512) + 8))(v2, *(_QWORD *)(v0 + 472));
  (*(void (**)(_QWORD, _QWORD))(v0 + 576))(*(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 536));
  JUMPOUT(0x23AD4CDA4);
}

void sub_23AD4D21C()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 72) - 8) + 56))(v1, 0, 1);
  sub_23AD683E4();
}

void sub_23AD4D260()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v1)
  {
    (*(void (**)(uint64_t, _QWORD))(v0[7] + 8))(v3, v0[8]);
    (*(void (**)(_QWORD, uint64_t))(v0[19] + 8))(v0[13], v2);
    JUMPOUT(0x23AD4C3A0);
  }
  (*(void (**)(uint64_t, _QWORD))(v0[7] + 8))(v3, v0[8]);
  (*(void (**)(_QWORD, uint64_t))(v0[19] + 8))(v0[13], v2);
  JUMPOUT(0x23AD4D5D0);
}

void sub_23AD4D334(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 72) = a1;
  v1[91] = v1[40];
  v1[92] = v1[67];
  v1[93] = v1[36];
  v1[94] = v1[35];
  type metadata accessor for ReconciliationID();
}

void sub_23AD4D364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for ReconciliationSideMutation(255, v6, v5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = v4[37];
  v9 = v8 + *(int *)(TupleTypeMetadata2 + 48);
  v10 = v4[73];
  sub_23AD44244(v8);
  swift_storeEnumTagMultiPayload();
  v11 = *(_OWORD *)(*(_QWORD *)v10 + 112);
  *(_WORD *)v9 = 769;
  *(_OWORD *)(v9 + 8) = v11;
  swift_storeEnumTagMultiPayload();
  v12 = v4[38];
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[71], v8);
  v13 = *(void (**)(uint64_t, uint64_t))(v4[34] + 8);
  v4[74] = v13;
  v13(v8, v12);
  type metadata accessor for ReconciliationSideMutation(255, v4[66], v4[65], v14);
  v15 = v8 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  sub_23AD44244(v8);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v15 = 0;
  *(_QWORD *)(v15 + 8) = 0;
  *(_QWORD *)(v15 + 16) = 0xB000000000000000;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  *(_BYTE *)(v15 + 56) = 0;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4[71], v8);
  ((void (*)(uint64_t, uint64_t))v4[74])(v8, v12);
  type metadata accessor for NSFileProviderError(0);
  v4[86] = -2008;
  sub_23AAE9EB4(MEMORY[0x24BEE4AF8]);
  sub_23AA7E38C((unint64_t *)&unk_2542E1E60, (uint64_t (*)(uint64_t))type metadata accessor for NSFileProviderError, (uint64_t)&unk_23B1CC9C0);
  sub_23B1C5864();
  (*(void (**)(_QWORD, _QWORD))(v4[62] + 8))(v4[29], v4[68]);
  JUMPOUT(0x23AD4CE44);
}

void sub_23AD4D654(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD59BC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v0[349] = v1;
  v0[350] = *(_QWORD *)(v2 - 72);
  v0[351] = v0[229];
  v0[352] = v0[227];
  type metadata accessor for ReconciliationID();
}

void sub_23AD59BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  int v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);

  v13 = type metadata accessor for ReconciliationSideMutation(255, v6, v5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v4 + 1880) = TupleTypeMetadata2;
  v15 = *(_QWORD *)(v4 + 1872);
  v16 = (_QWORD *)(v15 + *(int *)(TupleTypeMetadata2 + 48));
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 1760))(v15, *(_QWORD *)(v4 + 1888), v7);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v4 + 1856) = v9;
  *v16 = v9;
  *(_QWORD *)(v4 + 1928) = v13;
  swift_storeEnumTagMultiPayload();
  v17 = *(_QWORD *)(v4 + 1848);
  swift_storeEnumTagMultiPayload();
  v18 = *(_QWORD *)(v4 + 1944);
  *(_QWORD *)(v11 - 72) = v8;
  sub_23AEB700C(v18, v15);
  v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1808) + 8);
  *(_QWORD *)(v4 + 1960) = v19;
  v19(v15, v17);
  v20 = *(_QWORD *)(v4 + 1736);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v4 + 1744))(v20, 1, *(_QWORD *)(v4 + 1840));
  *(_QWORD *)(v4 + 1864) = a1;
  if (v21 != 1)
    sub_23AD442A4();
  v22 = sub_23AFA7B90(*(_QWORD *)(v4 + 3072));
  v23 = sub_23AA9F490(v22);
  v24 = *(_QWORD *)(v4 + 888);
  v25 = *(_QWORD *)(v4 + 1904);
  v10(v24, v20, v25);
  if (v23)
  {
    v26 = *(_QWORD *)(v4 + 664);
    v10(v26, v24, v25);
    v27 = *(_QWORD *)(v4 + 1840);
    v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 1744))(v26, 1, v27);
    v29 = *(_QWORD *)(v4 + 1896);
    if (v28 == 1)
    {
      v30 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v30(v24, v25);
      v30(v26, v25);
      v31 = *(_QWORD *)(v4 + 1888);
LABEL_8:
      (*(void (**)(uint64_t, _QWORD))(v4 + 1936))(v31, *(_QWORD *)(v4 + 1952));
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 + 1912) + 8))(*(_QWORD *)(v4 + 1696), *(_QWORD *)(v4 + 1968));
      v30(*(_QWORD *)(v4 + 1736), v25);
      JUMPOUT(0x23AD5A380);
    }
    v36 = *(_QWORD *)(v4 + 1624);
    v37 = *(_QWORD *)(v4 + 1712);
    v38 = *(_QWORD *)(v4 + 1640);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v37, v26 + *(int *)(v27 + 52), v38);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1784) + 8))(v26, v27);
    v39 = *(_QWORD *)(v37 + *(int *)(v38 + 36));
    v40 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v7 = *(_QWORD *)(v4 + 1976);
    v40(v37, v38);
    LOBYTE(v39) = sub_23AA9F490(v39);
    v30 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v30(*(_QWORD *)(v4 + 888), v25);
    v31 = *(_QWORD *)(v4 + 1888);
    if ((v39 & 1) != 0)
      goto LABEL_8;
  }
  else
  {
    v30 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 1896) + 8);
    v30(v24, v25);
    v31 = *(_QWORD *)(v4 + 1888);
  }
  v32 = *(_QWORD *)(v4 + 1872);
  v33 = v32 + *(int *)(*(_QWORD *)(v4 + 1880) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 1760))(v32, v31, v7);
  swift_storeEnumTagMultiPayload();
  v34 = *(_OWORD *)(**(_QWORD **)(v4 + 2008) + 112);
  *(_QWORD *)v33 = v22;
  *(_OWORD *)(v33 + 8) = v34;
  v25 = *(_QWORD *)(v4 + 1904);
  swift_storeEnumTagMultiPayload();
  v35 = *(_QWORD *)(v4 + 1848);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v4 + 1944), v32);
  (*(void (**)(uint64_t, uint64_t))(v4 + 1960))(v32, v35);
  goto LABEL_8;
}

void sub_23AD5A5EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[242] = a1;
  v1[349] = v1[247];
  v1[350] = *(_QWORD *)(v2 - 72);
  v1[351] = v1[229];
  v1[352] = v1[227];
  type metadata accessor for ReconciliationID();
}

void sub_23AD5A61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t TupleTypeMetadata3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v4 = *(int *)(TupleTypeMetadata3 + 48);
  v5 = *(int *)(TupleTypeMetadata3 + 64);
  v6 = *(_QWORD *)(v0 + 1872);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v0 + 1760))(v6, v2, *(_QWORD *)(v0 + 1976));
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v6 + v4) = 1;
  v7 = sub_23ACD8490(0);
  v8 = sub_23AFD7BC8(v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + v5) = v8;
  v9 = *(_QWORD *)(v0 + 1848);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v1, v6);
  sub_23AAA5B2C(v0 + 3088);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 1808) + 8))(v6, v9);
  JUMPOUT(0x23AD5A6DCLL);
}

void sub_23AD5ABAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);

  *(_QWORD *)(v1 + 1936) = a1;
  v4 = *(_QWORD *)(v1 + 1320);
  v5 = *(_QWORD *)(v3 - 72);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v1 + 784), v5);
  v6 = *(_QWORD *)(v1 + 240);
  v7 = *(uint64_t **)(v1 + 2008);
  sub_23AD44244(v6);
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 120);
  *(_QWORD *)(v1 + 1824) = *(_QWORD *)(*v7 + 112);
  v10 = *(_QWORD *)(v8 + 128);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2140);
  v11 = swift_allocObject();
  v12 = sub_23B1A1F64(v11, 2);
  *v13 = xmmword_23B1D7750;
  v14 = nullsub_1(v12);
  v15 = sub_23AFD7BC8(v14);
  swift_bridgeObjectRelease();
  v16 = sub_23AFA7CE0(v15, v10);
  v17 = sub_23B126D40(v4, v6, *(_QWORD *)(v1 + 1824), v9, v16);
  v18 = v6;
  v19 = *(void (**)(uint64_t, uint64_t))(v1 + 40);
  v19(v18, v5);
  v19(v4, v5);
  sub_23AE1ACCC(*(_QWORD *)(v1 + 1944), v17);
  swift_release();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 480) + 8))(*(_QWORD *)(v1 + 512), *(_QWORD *)(v1 + 472));
  v19(*(_QWORD *)(v1 + 784), v5);
  *(_DWORD *)(v1 + 1568) = 1;
  JUMPOUT(0x23AD51858);
}

void sub_23AD5ACEC()
{
  _QWORD *v0;
  uint64_t v1;

  v0[284] = v0[247];
  v0[285] = v1;
  v0[286] = v0[229];
  v0[287] = v0[227];
  type metadata accessor for ReconciliationID();
}

void sub_23AD5AD18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t TupleTypeMetadata3;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v3 = *(int *)(TupleTypeMetadata3 + 48);
  v4 = *(int *)(TupleTypeMetadata3 + 64);
  v5 = *(_QWORD *)(v0 + 1872);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 1760))(v5, *(_QWORD *)(v0 + 1888), v1);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v5 + v3) = 1;
  v6 = sub_23ACD8490(0);
  v7 = sub_23AFD7BC8(v6);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 + v4) = v7;
  v8 = *(_QWORD *)(v0 + 1848);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v0 + 1944), v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 1808) + 8))(v5, v8);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 552) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 520));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1432) + 8))(*(_QWORD *)(v0 + 1032), *(_QWORD *)(v0 + 1496));
  JUMPOUT(0x23AD50ADCLL);
}

void sub_23AD5AEC8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0[284] = v4;
  v0[285] = v2;
  v0[286] = v3;
  v0[287] = v1;
  type metadata accessor for Conflict.PopulateConflicts();
}

void sub_23AD5AEE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_23ADA8168(a1);
  v4 = sub_23B126FF0(*(_QWORD *)(v1 + 1888), v2, v3, 0x10000);
  sub_23AE181A4(*(_QWORD *)(v1 + 1944), v4);
  swift_release();
  JUMPOUT(0x23AD5AF28);
}

void sub_23AD5AF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;

  v7 = type metadata accessor for FileTreeError(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 32), a4);
  MEMORY[0x24BDAC7A8](v7);
  v8 = v4 + *(int *)(a3 + 80);
  if (*(_QWORD *)v8)
  {
    v9 = *(void **)(v8 + 8);
    v10 = *(id *)v8;
    v11 = v9;
    sub_23AD4B840();
  }
  sub_23AD4D654(a1);
}

void sub_23AD5B170()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD5B1C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 136) = a1;
  *(_QWORD *)(v5 - 176) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v1;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 88) = v4;
  type metadata accessor for JobResult();
}

void sub_23AD5B204(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(v3 + *(int *)(v2 + 76));
  *(_QWORD *)(v5 - 128) = v1;
  *(_QWORD *)(v5 - 144) = a1;
  sub_23AEB7090(v1, v6);
  *(_QWORD *)(v5 - 168) = v2;
  v7 = *(int *)(v2 + 80);
  *(_QWORD *)(v5 - 120) = v3;
  v8 = (uint64_t *)(v3 + v7);
  v9 = *v8;
  *(_QWORD *)(v5 - 152) = *v8;
  *(_QWORD *)(v5 - 72) = v4;
  if (v9)
  {
    *(_QWORD *)(v5 - 184) = v8[1];
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v11 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v13 = swift_getAssociatedConformanceWitness();
    *(_QWORD *)(v5 - 112) = AssociatedTypeWitness;
    *(_QWORD *)(v5 - 104) = v11;
    *(_QWORD *)(v5 - 96) = AssociatedConformanceWitness;
    *(_QWORD *)(v5 - 88) = v13;
    type metadata accessor for ReconciliationID();
  }
  v14 = swift_getAssociatedTypeWitness();
  v15 = swift_getAssociatedTypeWitness();
  v16 = swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v5 - 112) = v14;
  *(_QWORD *)(v5 - 104) = v15;
  *(_QWORD *)(v5 - 96) = v16;
  *(_QWORD *)(v5 - 88) = v17;
  type metadata accessor for ReconciliationID();
}

void sub_23AD5B4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;

  type metadata accessor for ReconciliationSideMutation(255, v4, v6, a4);
  v8 = v5 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  v9 = **(_QWORD **)(v7 - 120) + *(_QWORD *)(***(_QWORD ***)(v7 - 120) + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v5, v9, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(_OWORD *)v8 = xmmword_23B1CFCA0;
  *(_BYTE *)(v8 + 16) = 4;
  swift_storeEnumTagMultiPayload();
  v11 = *(_QWORD *)(v7 - 136);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v7 - 128), v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 176) + 8))(v5, v11);
  JUMPOUT(0x23AD5B650);
}

void sub_23AD5B680(void *a1, void *a2)
{
  if (a1)
  {

  }
}

void type metadata accessor for Reconciliation.ReconcileAfterPropagation()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD5B6B8()
{
  return swift_allocateGenericValueMetadata();
}

void sub_23AD5B6C0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD5B790()
{
  uint64_t v0;
  uint64_t result;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  result = sub_23B1C6C98();
  if (v2 <= 0x3F)
  {
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 16);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
    result = sub_23B1C6C98();
    if (v9 <= 0x3F)
    {
      type metadata accessor for SnapshotItem(255, v4, v3, v8);
      result = sub_23B1C6C98();
      if (v10 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_23AD5B8CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  BOOL v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  size_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  unint64_t v48;
  void (*v49)(unint64_t, unint64_t, uint64_t);
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  const void *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  size_t v62;
  uint64_t v63;
  _QWORD *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  const void *v73;
  unint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  uint64_t v77;
  int v78;
  unint64_t v79;
  void (*v80)(unint64_t, unint64_t, uint64_t);
  _BYTE *v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  unint64_t v88;
  unint64_t v89;
  void *v90;
  const void *v91;
  unsigned int (*v92)(const void *, uint64_t, uint64_t);
  _QWORD *v93;
  _QWORD *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  unint64_t v100;
  uint64_t *v101;
  unint64_t v102;
  uint64_t v103;
  void *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  int v110;
  _QWORD *v111;
  _QWORD *v112;
  size_t v113;
  unsigned int v114;
  int v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  int v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t *v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  void (*v136)(char *, char *, uint64_t);
  unint64_t v137;
  unint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  unint64_t v141;
  unint64_t v142;
  void (*v143)(unint64_t, unint64_t, uint64_t);
  _QWORD *v144;
  _QWORD *v145;
  _QWORD *v146;
  _QWORD *v147;
  _QWORD *v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  int v152;
  unint64_t v153;
  unint64_t v154;
  void (*v155)(unint64_t, unint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  _BYTE *v158;
  unint64_t v159;
  unint64_t v160;
  unint64_t v161;
  unint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  unint64_t v165;
  unint64_t v166;
  void *v167;
  const void *v168;
  unsigned int (*v169)(const void *, uint64_t, uint64_t);
  _QWORD *v170;
  _QWORD *v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  unint64_t v177;
  uint64_t *v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  int v186;
  _QWORD *v187;
  _QWORD *v188;
  unint64_t v189;
  __int128 *v190;
  unint64_t v191;
  int v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  char *v205;
  void *v206;
  id v207;
  void *v208;
  id v209;
  uint64_t v210;
  id v211;
  _OWORD *v212;
  __int128 *v213;
  __int128 v214;
  unint64_t v215;
  unint64_t v216;
  __int128 v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  _QWORD *v221;
  uint64_t v222;
  unint64_t v223;
  size_t v224;
  unint64_t v225;
  unint64_t v226;
  unint64_t v227;
  unint64_t v228;
  void **v229;
  void *v230;
  _QWORD *v231;
  unint64_t v232;
  unint64_t v233;
  void *v234;
  id v235;
  id v236;
  void *v237;
  id v238;
  unsigned int v240;
  size_t v241;
  unsigned int v242;
  unsigned int v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  unint64_t v252;
  uint64_t v253;
  size_t __n;
  uint64_t v255;
  uint64_t v256;
  int v257;
  unsigned int v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  size_t v262;
  uint64_t v263;
  unint64_t v264;
  unint64_t v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t AssociatedTypeWitness;
  uint64_t v275;
  uint64_t v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  unsigned int v285;
  uint64_t v286;
  int v287;
  uint64_t v288;
  unint64_t v289;
  int v290;
  uint64_t v291;
  const void *v292;
  int v293;
  uint64_t v294;
  int v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  void *v305;
  uint64_t v306;
  uint64_t v307;
  unint64_t v308;
  size_t v309;
  void *v311;
  char *v312;
  size_t v313;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v295 = *(_DWORD *)(v2 + 80);
  v272 = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(v272 - 8);
  v293 = *(_DWORD *)(v3 + 80);
  v299 = v293;
  v297 = v295 & 0xF8 | v293 | 7u;
  v4 = *(_DWORD *)(v2 + 84);
  v266 = *(_DWORD *)(v3 + 84);
  v278 = v4;
  if (v4 <= v266)
    v4 = *(_DWORD *)(v3 + 84);
  v267 = v4;
  if (v4 <= 0x7FFFFFFE)
    v4 = 2147483646;
  v277 = v4;
  v273 = v2;
  v281 = *(_QWORD *)(v2 + 64);
  v271 = *(_QWORD *)(v272 - 8);
  v283 = *(_QWORD *)(v3 + 64);
  v286 = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(v286 - 8);
  v290 = *(_DWORD *)(v5 + 80);
  v276 = sub_23B1C5BDC();
  v6 = *(_QWORD *)(v276 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v287 = *(_DWORD *)(v6 + 80);
  v307 = v290;
  v302 = v287;
  v8 = v287 | (unint64_t)v290;
  v9 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = *(_DWORD *)(v6 + 84);
  if (v9 <= v10)
    v11 = v10;
  else
    v11 = *(_DWORD *)(v5 + 84);
  v268 = v11;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  v279 = v11;
  v280 = *(_DWORD *)(v6 + 84);
  v12 = v7 == 0;
  v296 = v5;
  v13 = *(_QWORD *)(v5 + 64);
  v275 = *(_QWORD *)(v276 - 8);
  v14 = *(_QWORD *)(v6 + 64);
  v309 = v14;
  if (v12)
    ++v14;
  v313 = v14;
  v270 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v270 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 80);
  v306 = v19;
  v304 = v16 & 0xF8 | v19 | 7u;
  v20 = v8 | v304;
  v21 = *(_DWORD *)(v15 + 84);
  if (v21 <= *(_DWORD *)(v18 + 84))
    v22 = *(_DWORD *)(v18 + 84);
  else
    v22 = *(_DWORD *)(v15 + 84);
  if (v22 <= 0x7FFFFFFE)
    v23 = 2147483646;
  else
    v23 = v22;
  v285 = v9;
  if (v23 <= v9)
    v24 = v9;
  else
    v24 = v23;
  if (v24 <= v10)
    v25 = v10;
  else
    v25 = v24;
  if (v25 <= 0x7FFFFFFF)
    v26 = 0x7FFFFFFF;
  else
    v26 = v25;
  v269 = v15;
  v27 = *(_QWORD *)(v15 + 64);
  v28 = *(_QWORD *)(v18 + 64);
  v29 = *a2;
  *a1 = *a2;
  if ((v20 | v297) != 7)
    goto LABEL_36;
  if (((v293 | v295 | v290 | v287 | v16 | v19) & 0x100000) != 0)
    goto LABEL_36;
  v282 = v281 + 7;
  v255 = v293 + 8;
  v253 = v283 + 7;
  v30 = v287;
  v31 = v287 | 7;
  v32 = v8 | 7;
  v284 = ((((v283 + 7 + ((v255 + (v282 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v293)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v291 = v13 + 7;
  v288 = v287 + 16;
  v261 = v302 + 10;
  v262 = v313 + 7;
  v264 = (v30
        + 10
        + ((((((v309 + 12 + ((v309 + v30 + ((v30 + 12) & ~v30)) & ~v30)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v30;
  v265 = (v30 + 16 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(v30 | 7);
  v33 = ((((((((((v313 + 7 + v264) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  __n = v33 + v265;
  v294 = v13 + v307;
  v34 = v27 + 7;
  v35 = v28 + 7;
  v36 = ((((v28
          + 7
          + ((v19 + 8 + ((v27 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v19)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v37 = (v31 + 16 + ((v13 + v304 + ((v13 + v307) & ~v307)) & ~v304) + v36) & ~v31;
  if (((((((v20 + (((v8 | 7) + ((v297 + 8) & ~v297) + v284 + 9) & ~(v8 | 7)) + v33 + v265) & ~v20)
         + ((((v37 + v33 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
LABEL_36:
    a1 = (uint64_t *)(v29 + (((v20 | v297) + 16) & ~(v20 | v297)));
    swift_retain();
    return a1;
  }
  v241 = v309 + 12;
  v257 = v26;
  v258 = v23;
  v242 = v25;
  v243 = v21;
  v240 = v22;
  v250 = v34;
  v251 = ((((v37 + v33 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  v259 = v13 + v304;
  v260 = (v31 + 16 + ((v13 + v304 + ((v13 + v307) & ~v307)) & ~v304) + v36) & ~v31;
  v246 = v19 + 8;
  v247 = v18;
  v252 = v36;
  v248 = v17;
  v249 = v31 + 16;
  v263 = v302 + 12;
  v256 = v309 + v302;
  v244 = ((((((((((v313 + 7 + v264) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v38 = ~v299;
  v300 = ~v32;
  v39 = (char *)(((unint64_t)a1 + v297 + 8) & ~v297);
  v40 = (char *)(((unint64_t)a2 + v297 + 8) & ~v297);
  swift_retain();
  v245 = v35;
  if (v278 == v277)
  {
    v41 = v285;
    v43 = v282;
    v42 = v284;
    if (!(*(unsigned int (**)(char *))(v273 + 48))(v40))
      goto LABEL_44;
LABEL_43:
    memcpy(v39, v40, v42);
    goto LABEL_46;
  }
  v43 = v282;
  v42 = v284;
  v44 = (uint64_t *)((unint64_t)&v40[v282] & 0xFFFFFFFFFFFFFFF8);
  v41 = v285;
  if (v267 <= 0x7FFFFFFE)
  {
    v45 = *v44;
    if ((unint64_t)*v44 >= 0xFFFFFFFF)
      LODWORD(v45) = -1;
    if ((v45 + 1) < 2)
      goto LABEL_45;
    goto LABEL_43;
  }
  if ((*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(v271 + 48))(((unint64_t)v44 + v255) & v38, v266, v272))
  {
    goto LABEL_43;
  }
LABEL_44:
  v44 = (uint64_t *)((unint64_t)&v40[v43] & 0xFFFFFFFFFFFFFFF8);
LABEL_45:
  (*(void (**)(char *, char *, uint64_t))(v273 + 16))(v39, v40, AssociatedTypeWitness);
  v46 = (_QWORD *)((unint64_t)&v39[v43] & 0xFFFFFFFFFFFFFFF8);
  *v46 = *v44;
  v47 = ((unint64_t)v46 + v255) & v38;
  v48 = ((unint64_t)v44 + v255) & v38;
  v49 = *(void (**)(unint64_t, unint64_t, uint64_t))(v271 + 16);
  swift_bridgeObjectRetain();
  v49(v47, v48, v272);
  v50 = (_QWORD *)((v253 + v47) & 0xFFFFFFFFFFFFF8);
  v51 = (_QWORD *)((v253 + v48) & 0xFFFFFFFFFFFFF8);
  *v50 = *v51;
  v52 = (_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
  v53 = (_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_46:
  v54 = ~v31;
  v303 = ~v302;
  v55 = ~v20;
  v56 = &v39[v42];
  v57 = *(_QWORD *)&v40[v42];
  v56[8] = v40[v42 + 8];
  *(_QWORD *)v56 = v57;
  v311 = (void *)((unint64_t)&v39[v42 + 9 + v32] & v300);
  v58 = (const void *)((unint64_t)&v40[v42 + 9 + v32] & v300);
  v301 = ~v31;
  if ((_DWORD)v41 == v279)
  {
    v59 = v286;
    v60 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v296 + 48))((unint64_t)&v40[v42 + 9 + v32] & ~v32, v41, v286);
    v61 = v288;
    v62 = v313;
    goto LABEL_48;
  }
  v61 = v288;
  v63 = v291;
  v64 = (_QWORD *)(((unint64_t)v58 + v291) & 0xFFFFFFFFFFFFFFF8);
  v59 = v286;
  if ((v268 & 0x80000000) == 0)
  {
    v65 = v64[1];
    if (v65 >= 0xFFFFFFFF)
      LODWORD(v65) = -1;
    v62 = v313;
    if ((_DWORD)v65 == -1)
      goto LABEL_54;
    goto LABEL_69;
  }
  v68 = ((unint64_t)v64 + v288) & v54;
  v70 = (v263 + v68) & v303;
  v62 = v313;
  if (v280 > 0x7FFFFFFD)
  {
    v60 = (*(uint64_t (**)(unint64_t))(v275 + 48))(v70);
LABEL_48:
    v63 = v291;
    if (!v60)
    {
LABEL_54:
      v298 = ~v20;
      v64 = (_QWORD *)(((unint64_t)v58 + v63) & 0xFFFFFFFFFFFFFFF8);
      v66 = v301;
      v67 = v303;
      v68 = ((unint64_t)v64 + v61) & v301;
      v69 = v263;
      v70 = (v263 + v68) & v303;
      v71 = v256;
      v72 = (v256 + v70) & v303;
      goto LABEL_55;
    }
LABEL_69:
    v104 = v311;
    memcpy(v311, v58, __n);
    v115 = v257;
    v114 = v258;
    v116 = v264;
    v117 = v265;
LABEL_70:
    v113 = v62;
    goto LABEL_71;
  }
  v72 = (v256 + v70) & v303;
  v118 = *(_QWORD *)(((v241 + v72) & 0xFFFFFFFFFFFFF8) + 8);
  if (v118 >= 0xFFFFFFFF)
    LODWORD(v118) = -1;
  if ((v118 + 1) >= 2)
    goto LABEL_69;
  v298 = ~v20;
  v71 = v256;
  v69 = v263;
  v66 = v301;
  v67 = v303;
LABEL_55:
  v289 = v70;
  v292 = v58;
  v73 = v58;
  v74 = v72;
  (*(void (**)(void *, const void *, uint64_t))(v296 + 16))(v311, v73, v59);
  v75 = (_QWORD *)(((unint64_t)v311 + v63) & 0xFFFFFFFFFFFFFFF8);
  *v75 = *v64;
  v75[1] = v64[1];
  v76 = ((unint64_t)v75 + v61) & v66;
  *(_BYTE *)v76 = *(_BYTE *)v68;
  v77 = v76 | 4;
  v78 = *(_DWORD *)(v68 | 4);
  *(_BYTE *)(v77 + 4) = *(_BYTE *)((v68 | 4) + 4);
  *(_DWORD *)v77 = v78;
  *(_WORD *)(v76 + 10) = *(_WORD *)(v68 + 10);
  v79 = (v69 + v76) & v67;
  v80 = *(void (**)(unint64_t, unint64_t, uint64_t))(v275 + 16);
  swift_bridgeObjectRetain();
  v80(v79, v289, v276);
  v80((v71 + v79) & v67, v74, v276);
  v81 = (_BYTE *)(((v71 + v79) & v67) + v309);
  *v81 = *(_BYTE *)(v74 + v309);
  v81[1] = *(_BYTE *)(v74 + v309 + 1);
  v81[2] = *(_BYTE *)(v74 + v309 + 2);
  v81[3] = *(_BYTE *)(v74 + v309 + 3);
  v81[4] = *(_BYTE *)(v74 + v309 + 4);
  v82 = (unint64_t)(v81 + 12) & 0xFFFFFFFFFFFFFFF8;
  v83 = (v74 + v309 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v82 = *(_QWORD *)v83;
  *(_QWORD *)(v82 + 8) = *(_QWORD *)(v83 + 8);
  *(_BYTE *)(v82 + 16) = *(_BYTE *)(v83 + 16);
  *(_BYTE *)(v82 + 17) = *(_BYTE *)(v83 + 17);
  *(_BYTE *)(v82 + 18) = *(_BYTE *)(v83 + 18);
  *(_BYTE *)(v82 + 19) = *(_BYTE *)(v83 + 19);
  v84 = (v82 + 27) & 0xFFFFFFFFFFFFFFF8;
  v85 = (v83 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v84 = *(_QWORD *)v85;
  *(_BYTE *)(v84 + 8) = *(_BYTE *)(v85 + 8);
  *(_BYTE *)(v84 + 9) = *(_BYTE *)(v85 + 9);
  *(_BYTE *)(v84 + 10) = *(_BYTE *)(v85 + 10);
  *(_BYTE *)(v84 + 11) = *(_BYTE *)(v85 + 11);
  *(_BYTE *)(v84 + 12) = *(_BYTE *)(v85 + 12);
  v86 = (_QWORD *)((v82 + 47) & 0xFFFFFFFFFFFFF8);
  v87 = (_QWORD *)((v83 + 47) & 0xFFFFFFFFFFFFF8);
  *v86 = *v87;
  v88 = ((unint64_t)v86 + 15) & 0xFFFFFFFFFFFFFFF8;
  v89 = ((unint64_t)v87 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v88 = *(_QWORD *)v89;
  *(_BYTE *)(v88 + 8) = *(_BYTE *)(v89 + 8);
  *(_BYTE *)(v88 + 9) = *(_BYTE *)(v89 + 9);
  v90 = (void *)((v261 + v88) & v67);
  v91 = (const void *)((v261 + v89) & v67);
  v92 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v275 + 48);
  swift_bridgeObjectRetain();
  if (v92(v91, 1, v276))
  {
    v62 = v313;
    memcpy(v90, v91, v313);
  }
  else
  {
    v80((unint64_t)v90, (unint64_t)v91, v276);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v275 + 56))(v90, 0, 1, v276);
    v62 = v313;
  }
  LODWORD(v41) = v285;
  v55 = v298;
  v93 = (_QWORD *)(((unint64_t)v90 + v262) & 0xFFFFFFFFFFFFFFF8);
  v94 = (_QWORD *)(((unint64_t)v91 + v262) & 0xFFFFFFFFFFFFFFF8);
  *v93 = *v94;
  v95 = ((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFFFF8;
  v96 = ((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFFFF8;
  v97 = *(_QWORD *)v96;
  *(_BYTE *)(v95 + 8) = *(_BYTE *)(v96 + 8);
  *(_QWORD *)v95 = v97;
  v98 = (_QWORD *)(((unint64_t)v93 + 31) & 0xFFFFFFFFFFFFF8);
  v99 = (_QWORD *)(((unint64_t)v94 + 31) & 0xFFFFFFFFFFFFF8);
  *v98 = *v99;
  v100 = ((unint64_t)v98 + 15) & 0xFFFFFFFFFFFFFFF8;
  v101 = (uint64_t *)(((unint64_t)v99 + 15) & 0xFFFFFFFFFFFFFFF8);
  v102 = v101[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v59 = v286;
  v58 = v292;
  if ((v102 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)v100 = *(_OWORD *)v101;
  }
  else
  {
    v103 = *v101;
    sub_23AAAE668(*v101, v102);
    *(_QWORD *)v100 = v103;
    *(_QWORD *)(v100 + 8) = v102;
  }
  v104 = v311;
  v105 = (v100 + 19) & 0xFFFFFFFFFFFFFFF8;
  v106 = ((unint64_t)v101 + 19) & 0xFFFFFFFFFFFFFFF8;
  v107 = *(_QWORD *)v106;
  *(_BYTE *)(v105 + 8) = *(_BYTE *)(v106 + 8);
  *(_QWORD *)v105 = v107;
  *(_BYTE *)(v105 + 9) = *(_BYTE *)(v106 + 9);
  v108 = (v105 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v109 = (v106 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v110 = *(_DWORD *)v109;
  *(_BYTE *)(v108 + 4) = *(_BYTE *)(v109 + 4);
  *(_DWORD *)v108 = v110;
  v111 = (_QWORD *)((v105 + 25) & 0xFFFFFFFFFFFFFFF8);
  v112 = (_QWORD *)((v106 + 25) & 0xFFFFFFFFFFFFFFF8);
  *v111 = *v112;
  v111[1] = v112[1];
  swift_bridgeObjectRetain();
  v113 = v309;
  v115 = v257;
  v114 = v258;
  v116 = v264;
  v117 = v265;
  if (!v280)
    goto LABEL_70;
LABEL_71:
  v119 = ~v307;
  v120 = ~v304;
  v121 = ~v306;
  v122 = v116 + 7;
  v123 = v117
       + ((((((((((v122 + v113) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v124 = v55;
  v125 = (char *)(((unint64_t)v104 + v20 + v123) & v55);
  v308 = v122;
  v312 = (char *)(((unint64_t)v58 + v20 + v123) & v124);
  if ((_DWORD)v41 == v115)
  {
    v126 = v259;
    if (!(*(unsigned int (**)(void))(v296 + 48))())
      goto LABEL_88;
    goto LABEL_109;
  }
  v127 = (v294 + (((unint64_t)v58 + v20 + v123) & v124)) & v119;
  v126 = v259;
  v128 = (v259 + v127) & v120;
  if (v114 == v115)
  {
    if (v243 == v114)
    {
      v129 = (*(uint64_t (**)(unint64_t))(v269 + 48))((v259 + v127) & v120);
      goto LABEL_87;
    }
    v132 = (unint64_t *)((v250 + v128) & 0xFFFFFFFFFFFFFFF8);
    if (v240 <= 0x7FFFFFFE)
    {
      v133 = *v132;
      goto LABEL_106;
    }
    v129 = (*(uint64_t (**)(unint64_t))(v247 + 48))(((unint64_t)v132 + v246) & v121);
  }
  else
  {
    v130 = v128 + v252;
    if ((v242 & 0x80000000) == 0)
    {
      v131 = *(_QWORD *)(v130 + 8);
      if (v131 >= 0xFFFFFFFF)
        LODWORD(v131) = -1;
      if ((_DWORD)v131 == -1)
        goto LABEL_88;
      goto LABEL_109;
    }
    v134 = (v263 + ((v249 + v130) & v301)) & v303;
    if (v280 <= 0x7FFFFFFD)
    {
      v133 = *(_QWORD *)(((v241 + ((v256 + v134) & v303)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_106:
      if (v133 >= 0xFFFFFFFF)
        LODWORD(v133) = -1;
      if ((v133 + 1) < 2)
      {
LABEL_89:
        v135 = v125;
        v136 = *(void (**)(char *, char *, uint64_t))(v296 + 16);
        v136(v135, v312, v59);
        v137 = (unint64_t)&v135[v294] & v119;
        v136((char *)v137, (char *)v127, v59);
        v138 = (v126 + v137) & v120;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v269 + 16))(v138, v128, v270);
        v139 = (_QWORD *)((v250 + v138) & 0xFFFFFFFFFFFFFFF8);
        v140 = (_QWORD *)((v250 + v128) & 0xFFFFFFFFFFFFFFF8);
        *v139 = *v140;
        v141 = ((unint64_t)v139 + v246) & v121;
        v142 = ((unint64_t)v140 + v246) & v121;
        v143 = *(void (**)(unint64_t, unint64_t, uint64_t))(v247 + 16);
        swift_bridgeObjectRetain();
        v143(v141, v142, v248);
        v144 = (_QWORD *)((v245 + v141) & 0xFFFFFFFFFFFFF8);
        v145 = (_QWORD *)((v245 + v142) & 0xFFFFFFFFFFFFF8);
        *v144 = *v145;
        v146 = (_QWORD *)(((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFFFF8);
        v147 = (_QWORD *)(((unint64_t)v145 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v146 = *v147;
        v146[1] = v147[1];
        v148 = (_QWORD *)(v138 + v252);
        *v148 = *(_QWORD *)(v128 + v252);
        v148[1] = *(_QWORD *)(v128 + v252 + 8);
        v149 = (v249 + v138 + v252) & v301;
        v150 = (v249 + v128 + v252) & v301;
        *(_BYTE *)v149 = *(_BYTE *)v150;
        v151 = v149 | 4;
        v152 = *(_DWORD *)(v150 | 4);
        *(_BYTE *)(v151 + 4) = *(_BYTE *)((v150 | 4) + 4);
        *(_DWORD *)v151 = v152;
        *(_WORD *)(v149 + 10) = *(_WORD *)(v150 + 0xA);
        v153 = (v263 + v149) & v303;
        v154 = (v263 + v150) & v303;
        v155 = *(void (**)(unint64_t, unint64_t, uint64_t))(v275 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v155(v153, v154, v276);
        v156 = (v256 + v153) & v303;
        v157 = (v256 + v154) & v303;
        v155(v156, v157, v276);
        v158 = (_BYTE *)(v156 + v309);
        *v158 = *(_BYTE *)(v157 + v309);
        v158[1] = *(_BYTE *)(v157 + v309 + 1);
        v158[2] = *(_BYTE *)(v157 + v309 + 2);
        v158[3] = *(_BYTE *)(v157 + v309 + 3);
        v158[4] = *(_BYTE *)(v157 + v309 + 4);
        v159 = (v156 + v309 + 12) & 0xFFFFFFFFFFFFFFF8;
        v160 = (v157 + v309 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v159 = *(_QWORD *)v160;
        *(_QWORD *)(v159 + 8) = *(_QWORD *)(v160 + 8);
        *(_BYTE *)(v159 + 16) = *(_BYTE *)(v160 + 16);
        *(_BYTE *)(v159 + 17) = *(_BYTE *)(v160 + 17);
        *(_BYTE *)(v159 + 18) = *(_BYTE *)(v160 + 18);
        *(_BYTE *)(v159 + 19) = *(_BYTE *)(v160 + 19);
        v161 = (v159 + 27) & 0xFFFFFFFFFFFFFFF8;
        v162 = (v160 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v161 = *(_QWORD *)v162;
        *(_BYTE *)(v161 + 8) = *(_BYTE *)(v162 + 8);
        *(_BYTE *)(v161 + 9) = *(_BYTE *)(v162 + 9);
        *(_BYTE *)(v161 + 10) = *(_BYTE *)(v162 + 10);
        *(_BYTE *)(v161 + 11) = *(_BYTE *)(v162 + 11);
        *(_BYTE *)(v161 + 12) = *(_BYTE *)(v162 + 12);
        v163 = (_QWORD *)((v159 + 47) & 0xFFFFFFFFFFFFF8);
        v164 = (_QWORD *)((v160 + 47) & 0xFFFFFFFFFFFFF8);
        *v163 = *v164;
        v165 = ((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8;
        v166 = ((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v165 = *(_QWORD *)v166;
        *(_BYTE *)(v165 + 8) = *(_BYTE *)(v166 + 8);
        *(_BYTE *)(v165 + 9) = *(_BYTE *)(v166 + 9);
        v167 = (void *)((v261 + v165) & v303);
        v168 = (const void *)((v261 + v166) & v303);
        v169 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v275 + 48);
        swift_bridgeObjectRetain();
        if (v169(v168, 1, v276))
        {
          memcpy(v167, v168, v62);
        }
        else
        {
          v155((unint64_t)v167, (unint64_t)v168, v276);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v275 + 56))(v167, 0, 1, v276);
        }
        v170 = (_QWORD *)(((unint64_t)v167 + v262) & 0xFFFFFFFFFFFFFFF8);
        v171 = (_QWORD *)(((unint64_t)v168 + v262) & 0xFFFFFFFFFFFFFFF8);
        *v170 = *v171;
        v172 = ((unint64_t)v170 + 15) & 0xFFFFFFFFFFFFFFF8;
        v173 = ((unint64_t)v171 + 15) & 0xFFFFFFFFFFFFFFF8;
        v174 = *(_QWORD *)v173;
        *(_BYTE *)(v172 + 8) = *(_BYTE *)(v173 + 8);
        *(_QWORD *)v172 = v174;
        v175 = (_QWORD *)(((unint64_t)v170 + 31) & 0xFFFFFFFFFFFFF8);
        v176 = (_QWORD *)(((unint64_t)v171 + 31) & 0xFFFFFFFFFFFFF8);
        *v175 = *v176;
        v177 = ((unint64_t)v175 + 15) & 0xFFFFFFFFFFFFFFF8;
        v178 = (uint64_t *)(((unint64_t)v176 + 15) & 0xFFFFFFFFFFFFFFF8);
        v179 = v178[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v179 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)v177 = *(_OWORD *)v178;
        }
        else
        {
          v180 = *v178;
          sub_23AAAE668(*v178, v179);
          *(_QWORD *)v177 = v180;
          *(_QWORD *)(v177 + 8) = v179;
        }
        v181 = (v177 + 19) & 0xFFFFFFFFFFFFFFF8;
        v182 = ((unint64_t)v178 + 19) & 0xFFFFFFFFFFFFFFF8;
        v183 = *(_QWORD *)v182;
        *(_BYTE *)(v181 + 8) = *(_BYTE *)(v182 + 8);
        *(_QWORD *)v181 = v183;
        *(_BYTE *)(v181 + 9) = *(_BYTE *)(v182 + 9);
        v184 = (v181 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v185 = (v182 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v186 = *(_DWORD *)v185;
        *(_BYTE *)(v184 + 4) = *(_BYTE *)(v185 + 4);
        *(_DWORD *)v184 = v186;
        v187 = (_QWORD *)((v181 + 25) & 0xFFFFFFFFFFFFFFF8);
        v188 = (_QWORD *)((v182 + 25) & 0xFFFFFFFFFFFFFFF8);
        *v187 = *v188;
        v187[1] = v188[1];
        v189 = v149 + v244;
        v190 = (__int128 *)(v150 + v244);
        v191 = *(_QWORD *)(v150 + v244 + 16);
        if (v191 >= 0xFFFFFFFF)
          LODWORD(v191) = -1;
        v192 = v191 - 1;
        swift_bridgeObjectRetain();
        if (v192 < 0)
        {
          *(_QWORD *)v189 = *(_QWORD *)v190;
          *(_BYTE *)(v189 + 8) = *((_BYTE *)v190 + 8);
          *(_BYTE *)(v189 + 9) = *((_BYTE *)v190 + 9);
          v206 = (void *)*((_QWORD *)v190 + 2);
          v207 = v206;
          *(_QWORD *)(v189 + 16) = v206;
          v208 = (void *)*((_QWORD *)v190 + 3);
          v209 = v208;
          *(_QWORD *)(v189 + 24) = v208;
          *(_BYTE *)(v189 + 32) = *((_BYTE *)v190 + 32);
          *(_BYTE *)(v189 + 33) = *((_BYTE *)v190 + 33);
          *(_BYTE *)(v189 + 34) = *((_BYTE *)v190 + 34);
          *(_QWORD *)(v189 + 40) = *((_QWORD *)v190 + 5);
          *(_QWORD *)(v189 + 48) = *((_QWORD *)v190 + 6);
          *(_QWORD *)(v189 + 56) = *((_QWORD *)v190 + 7);
          *(_QWORD *)(v189 + 64) = *((_QWORD *)v190 + 8);
          *(_BYTE *)(v189 + 72) = *((_BYTE *)v190 + 72);
          *(_QWORD *)(v189 + 80) = *((_QWORD *)v190 + 10);
          *(_QWORD *)(v189 + 88) = *((_QWORD *)v190 + 11);
          v305 = (void *)*((_QWORD *)v190 + 12);
          *(_QWORD *)(v189 + 96) = v305;
          *(_BYTE *)(v189 + 104) = *((_BYTE *)v190 + 104);
          *(_BYTE *)(v189 + 105) = *((_BYTE *)v190 + 105);
          *(_QWORD *)(v189 + 112) = *((_QWORD *)v190 + 14);
          *(_QWORD *)(v189 + 120) = *((_QWORD *)v190 + 15);
          *(_QWORD *)(v189 + 128) = *((_QWORD *)v190 + 16);
          *(_QWORD *)(v189 + 136) = *((_QWORD *)v190 + 17);
          *(_QWORD *)(v189 + 144) = *((_QWORD *)v190 + 18);
          *(_QWORD *)(v189 + 152) = *((_QWORD *)v190 + 19);
          *(_QWORD *)(v189 + 160) = *((_QWORD *)v190 + 20);
          *(_QWORD *)(v189 + 168) = *((_QWORD *)v190 + 21);
          *(_BYTE *)(v189 + 176) = *((_BYTE *)v190 + 176);
          *(_QWORD *)(v189 + 184) = *((_QWORD *)v190 + 23);
          v210 = *((_QWORD *)v190 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v211 = v305;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v210)
          {
            *(_QWORD *)(v189 + 192) = v210;
            *(_QWORD *)(v189 + 200) = *((_QWORD *)v190 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v189 + 192) = v190[12];
          }
          v125 = v135;
          v205 = v312;
          *(_QWORD *)(v189 + 208) = *((_QWORD *)v190 + 26);
          *(_QWORD *)(v189 + 216) = *((_QWORD *)v190 + 27);
          *(_QWORD *)(v189 + 224) = *((_QWORD *)v190 + 28);
          *(_QWORD *)(v189 + 232) = *((_QWORD *)v190 + 29);
          *(_QWORD *)(v189 + 240) = *((_QWORD *)v190 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v193 = *v190;
          v194 = v190[1];
          v195 = v190[3];
          *(_OWORD *)(v189 + 32) = v190[2];
          *(_OWORD *)(v189 + 48) = v195;
          *(_OWORD *)v189 = v193;
          *(_OWORD *)(v189 + 16) = v194;
          v196 = v190[4];
          v197 = v190[5];
          v198 = v190[7];
          *(_OWORD *)(v189 + 96) = v190[6];
          *(_OWORD *)(v189 + 112) = v198;
          *(_OWORD *)(v189 + 64) = v196;
          *(_OWORD *)(v189 + 80) = v197;
          v199 = v190[8];
          v200 = v190[9];
          v201 = v190[11];
          *(_OWORD *)(v189 + 160) = v190[10];
          *(_OWORD *)(v189 + 176) = v201;
          *(_OWORD *)(v189 + 128) = v199;
          *(_OWORD *)(v189 + 144) = v200;
          v202 = v190[12];
          v203 = v190[13];
          v204 = v190[14];
          *(_QWORD *)(v189 + 240) = *((_QWORD *)v190 + 30);
          *(_OWORD *)(v189 + 208) = v203;
          *(_OWORD *)(v189 + 224) = v204;
          *(_OWORD *)(v189 + 192) = v202;
          v125 = v135;
          v205 = v312;
        }
        v212 = (_OWORD *)((v189 + 255) & 0xFFFFFFFFFFFFFFF8);
        v213 = (__int128 *)(((unint64_t)v190 + 255) & 0xFFFFFFFFFFFFFFF8);
        v214 = *v213;
        *(_OWORD *)((char *)v212 + 9) = *(__int128 *)((char *)v213 + 9);
        *v212 = v214;
        v215 = (v189 + 287) & 0xFFFFFFFFFFFFFFF8;
        v216 = ((unint64_t)v190 + 287) & 0xFFFFFFFFFFFFFFF8;
        v217 = *(_OWORD *)v216;
        *(_BYTE *)(v215 + 16) = *(_BYTE *)(v216 + 16);
        *(_OWORD *)v215 = v217;
        v218 = (_QWORD *)((v189 + 311) & 0xFFFFFFFFFFFFF8);
        v219 = ((unint64_t)v190 + 311) & 0xFFFFFFFFFFFFF8;
        v220 = *(_QWORD *)v219;
        v219 += 15;
        *v218 = v220;
        v221 = (_QWORD *)(((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFFFF8);
        v222 = *(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF8);
        v223 = *(_QWORD *)((v219 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_23AA7F2D4(v222, v223);
        *v221 = v222;
        v221[1] = v223;
        v62 = v313;
        v224 = v309;
        if (v280)
          goto LABEL_111;
        goto LABEL_110;
      }
      goto LABEL_109;
    }
    v129 = (*(uint64_t (**)(uint64_t))(v275 + 48))(v134);
  }
LABEL_87:
  if (!v129)
  {
LABEL_88:
    v127 = (unint64_t)&v312[v294] & v119;
    v128 = (v126 + v127) & v120;
    goto LABEL_89;
  }
LABEL_109:
  v205 = v312;
  memcpy(v125, v312, v251);
LABEL_110:
  v224 = v62;
LABEL_111:
  v225 = ((((v260
           + ((((((((((v308 + v224) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v226 = (unint64_t)&v125[v225];
  v227 = (unint64_t)&v205[v225];
  v228 = v226 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v228 = *(_QWORD *)(v227 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v228 + 8) = *(_BYTE *)((v227 & 0xFFFFFFFFFFFFFFF8) + 8);
  v229 = (void **)((v227 + 23) & 0xFFFFFFFFFFFFF8);
  v230 = *v229;
  v231 = (_QWORD *)((v226 + 23) & 0xFFFFFFFFFFFFF8);
  *v231 = *v229;
  v232 = ((unint64_t)v231 + 15) & 0xFFFFFFFFFFFFFFF8;
  v233 = ((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8;
  v234 = *(void **)v233;
  v235 = v230;
  if ((unint64_t)v234 < 0xFFFFFFFF)
  {
    *(_OWORD *)v232 = *(_OWORD *)v233;
  }
  else
  {
    v236 = v234;
    *(_QWORD *)v232 = v234;
    v237 = *(void **)(v233 + 8);
    *(_QWORD *)(v232 + 8) = v237;
    v238 = v237;
  }
  return a1;
}

void sub_23AD5CD24(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t (*v34)(void);
  unint64_t v35;
  int v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(unint64_t, uint64_t);
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  unint64_t v77;
  unint64_t v78;
  void (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t);
  uint64_t v83;
  unint64_t v84;
  uint64_t *v85;
  unint64_t v86;
  unint64_t v87;
  void *v88;
  uint64_t v89;
  id *v90;
  id *v91;
  unint64_t *v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int v119;
  unint64_t v120;
  uint64_t v121;

  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (a1 + (v4 | v7 | 7) + 8) & ~(unint64_t)(v4 | v7 | 7);
  v9 = *(unsigned int *)(v3 + 84);
  if (v9 <= *(_DWORD *)(v6 + 84))
    v10 = *(_DWORD *)(v6 + 84);
  else
    v10 = *(_DWORD *)(v3 + 84);
  if (v10 <= 0x7FFFFFFE)
    v11 = 2147483646;
  else
    v11 = v10;
  v12 = *(_QWORD *)(v3 + 64) + 7;
  v13 = v7 + 8;
  v118 = ~v7;
  v120 = (((*(_QWORD *)(v6 + 64) + 7 + ((v7 + 8 + (v12 & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if ((_DWORD)v9 == v11)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v3 + 48))(v8, v9, AssociatedTypeWitness))
      goto LABEL_18;
LABEL_16:
    v14 = (uint64_t *)((v12 + v8) & 0xFFFFFFFFFFFFFFF8);
LABEL_17:
    (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v14 + v13) & v118, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v14 = (uint64_t *)((v12 + v8) & 0xFFFFFFFFFFFFFFF8);
  if (v10 > 0x7FFFFFFE)
  {
    if ((*(unsigned int (**)(unint64_t))(v6 + 48))(((unint64_t)v14 + v13) & ~v7))
      goto LABEL_18;
    goto LABEL_16;
  }
  v15 = *v14;
  if ((unint64_t)*v14 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  if ((v15 + 1) < 2)
    goto LABEL_17;
LABEL_18:
  v16 = (v8 + v120 + 16) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_getAssociatedTypeWitness();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v114 = sub_23B1C5BDC();
  v20 = *(_QWORD *)(v114 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v111 = v19;
  v107 = v21 | v19;
  v22 = v21 | 7;
  v23 = (v16 + (v21 | v19 | 7) + 9) & ~(v21 | v19 | 7);
  v24 = *(unsigned int *)(v18 + 84);
  v25 = *(_DWORD *)(v20 + 84);
  if (v25 <= 0x7FFFFFFE)
    v26 = 2147483646;
  else
    v26 = *(_DWORD *)(v20 + 84);
  if (v24 <= v26)
    v27 = v26;
  else
    v27 = *(_DWORD *)(v18 + 84);
  if (v27 <= 0x7FFFFFFF)
    v28 = 0x7FFFFFFF;
  else
    v28 = v27;
  v106 = *(_QWORD *)(v18 + 64);
  v29 = v106 + 7;
  v121 = ~v22;
  v30 = v21 + 16;
  v110 = v21 | 7;
  v103 = *(_QWORD *)(v114 - 8);
  v104 = (v21 + 16 + ((v106 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v22;
  v31 = ~v21;
  v113 = v21 + 12;
  v32 = *(_QWORD *)(v20 + 64);
  v100 = v32 + v21;
  v101 = v32 + 12;
  v102 = v17;
  v99 = v21 + 10;
  v33 = (v21
       + 10
       + ((((((v32 + 12 + ((v32 + v21 + ((v21 + 12) & ~v21)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21;
  v115 = v18;
  v116 = v23;
  v119 = *(_DWORD *)(v20 + 84);
  if ((_DWORD)v24 == v28)
  {
    v34 = *(uint64_t (**)(void))(v18 + 48);
    goto LABEL_29;
  }
  v37 = (v29 + v23) & 0xFFFFFFFFFFFFFFF8;
  if ((v27 & 0x80000000) != 0)
  {
    v39 = (v113 + ((v30 + v37) & v121)) & v31;
    if (v25 > 0x7FFFFFFD)
    {
      v34 = *(uint64_t (**)(void))(v20 + 48);
LABEL_29:
      v35 = (v21
           + 10
           + ((((((v32 + 12 + ((v32 + v21 + ((v21 + 12) & ~v21)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21;
      v36 = v34();
      v33 = v35;
      if (v36)
        goto LABEL_43;
      goto LABEL_35;
    }
    v40 = (v100 + v39) & v31;
    v41 = (v101 + v40) & 0xFFFFFFFFFFFFFFF8;
    v94 = *(_QWORD *)(v41 + 8);
    if (v94 >= 0xFFFFFFFF)
      LODWORD(v94) = -1;
    if ((v94 + 1) < 2)
    {
      v97 = (v21
           + 10
           + ((((((v32 + 12 + ((v32 + v21 + ((v21 + 12) & ~v21)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v21;
      v42 = ~v21;
      goto LABEL_36;
    }
  }
  else
  {
    v38 = *(_QWORD *)(v37 + 8);
    if (v38 >= 0xFFFFFFFF)
      LODWORD(v38) = -1;
    if ((_DWORD)v38 == -1)
    {
LABEL_35:
      v97 = v33;
      v39 = (v113 + ((v30 + ((v29 + v116) & 0xFFFFFFFFFFFFFFF8)) & v121)) & v31;
      v40 = (v100 + v39) & v31;
      v41 = (v101 + v40) & 0xFFFFFFFFFFFFFFF8;
      v42 = v31;
LABEL_36:
      (*(void (**)(void))(v115 + 8))();
      swift_bridgeObjectRelease();
      v43 = *(void (**)(unint64_t, uint64_t))(v103 + 8);
      v43(v39, v114);
      v43(v40, v114);
      swift_bridgeObjectRelease();
      v44 = (v99 + ((((v41 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v42;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v103 + 48))(v44, 1, v114))
        v43(v44, v114);
      v45 = 7;
      if (!v119)
        v45 = 8;
      v46 = ((v45 + v32 + v44) & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v47 = (uint64_t *)(((v46 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      v48 = v47[1];
      if ((v48 & 0x3000000000000000) == 0)
        sub_23AAAE53C(*v47, v48);
      swift_bridgeObjectRelease();
      v31 = v42;
      v33 = v97;
    }
  }
LABEL_43:
  if (v119)
    v49 = v32;
  else
    v49 = v32 + 1;
  v96 = v49 + 7;
  v112 = (((((((((v49 + 7 + v33) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  v98 = swift_getAssociatedTypeWitness();
  v50 = *(_QWORD *)(v98 - 8);
  v51 = *(_DWORD *)(v50 + 80) & 0xF8;
  v52 = swift_getAssociatedTypeWitness();
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(unsigned __int8 *)(v53 + 80);
  v55 = v51 | v54 | 7;
  v56 = (v104 + v116 + (v107 | v55) + v112 + 16) & ~(v107 | v55);
  v57 = *(unsigned int *)(v50 + 84);
  v58 = *(unsigned int *)(v53 + 84);
  if (v57 <= v58)
    v59 = *(_DWORD *)(v53 + 84);
  else
    v59 = *(_DWORD *)(v50 + 84);
  if (v59 <= 0x7FFFFFFE)
    v60 = 2147483646;
  else
    v60 = v59;
  if (v60 <= v24)
    v61 = v24;
  else
    v61 = v60;
  if (v61 <= v26)
    v61 = v26;
  if (v61 <= 0x7FFFFFFF)
    v62 = 0x7FFFFFFF;
  else
    v62 = v61;
  v63 = ~v111;
  v64 = v106 + v111;
  v65 = ~v55;
  v66 = v106 + v55;
  v67 = *(_QWORD *)(v50 + 64) + 7;
  v68 = ((((*(_QWORD *)(v53 + 64) + 7 + ((v54 + 8 + (v67 & 0xFFFFFFFFFFFFFFF8)) & ~v54)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v117 = (v110 + 16 + ((v106 + v55 + ((v106 + v111) & ~v111)) & ~v55) + v68) & v121;
  v108 = v68;
  v109 = v52;
  v105 = ~v54;
  v95 = v54 + 8;
  if ((_DWORD)v24 == v62)
  {
    v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
    v70 = v56;
    v58 = v24;
    v52 = v102;
    goto LABEL_62;
  }
  v73 = (v64 + v56) & v63;
  v74 = (v66 + v73) & v65;
  if (v60 == v62)
  {
    if ((_DWORD)v57 == v60)
    {
      v75 = v56;
      v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))((v66 + v73) & v65, v57, v98);
      v56 = v75;
      if (v76)
        goto LABEL_84;
      goto LABEL_72;
    }
    v92 = (unint64_t *)((v67 + v74) & 0xFFFFFFFFFFFFFFF8);
    if (v59 <= 0x7FFFFFFE)
    {
      v93 = *v92;
      goto LABEL_99;
    }
    v70 = ((unint64_t)v92 + v54 + 8) & ~v54;
    v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
    goto LABEL_62;
  }
  v77 = v74 + v68;
  if ((v61 & 0x80000000) != 0)
  {
    v70 = (v113 + ((v110 + 16 + v77) & v121)) & v31;
    v58 = v119;
    if (v119 <= 0x7FFFFFFD)
    {
      v93 = *(_QWORD *)(((v101 + ((v100 + v70) & v31)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_99:
      if (v93 >= 0xFFFFFFFF)
        LODWORD(v93) = -1;
      if ((v93 + 1) < 2)
        goto LABEL_73;
      goto LABEL_84;
    }
    v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 48);
    v52 = v114;
LABEL_62:
    v71 = v56;
    v72 = v69(v70, v58, v52);
    v56 = v71;
    if (v72)
      goto LABEL_84;
    goto LABEL_72;
  }
  v78 = *(_QWORD *)(v77 + 8);
  if (v78 >= 0xFFFFFFFF)
    LODWORD(v78) = -1;
  if ((_DWORD)v78 == -1)
  {
LABEL_72:
    v73 = (v64 + v56) & v63;
    v74 = (v66 + v73) & v65;
LABEL_73:
    v79 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
    v80 = v56;
    v79(v56, v102);
    v79(v73, v102);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v74, v98);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v53 + 8))((v95 + ((v67 + v74) & 0xFFFFFFFFFFFFFFF8)) & v105, v109);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v81 = (v110 + 16 + v74 + v108) & v121;
    v82 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v82((v113 + v81) & v31, v114);
    v83 = (v100 + ((v113 + v81) & v31)) & v31;
    v82(v83, v114);
    swift_bridgeObjectRelease();
    v84 = (v99 + ((((((v101 + v83) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v31;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v103 + 48))(v84, 1, v114))
      v82(v84, v114);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v85 = (uint64_t *)((((((v96 + v84) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    v86 = v85[1];
    if ((v86 & 0x3000000000000000) == 0)
      sub_23AAAE53C(*v85, v86);
    swift_bridgeObjectRelease();
    v87 = v81 + v112 + 16;
    v88 = *(void **)(v87 + 16);
    LODWORD(v89) = -1;
    if ((unint64_t)v88 < 0xFFFFFFFF)
      v89 = *(_QWORD *)(v87 + 16);
    if ((int)v89 - 1 < 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v87 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_23AAA12F0(*(_QWORD *)((((v87 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v87 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
    v56 = v80;
  }
LABEL_84:
  v90 = (id *)((v56 + ((((v112 + v117 + 327) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);

  v91 = (id *)(((unint64_t)v90 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((unint64_t)*v91 >= 0xFFFFFFFF)
  {

  }
}

_QWORD *sub_23AD5D7A4(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  int v16;
  char *v17;
  size_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  int v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(unint64_t, unint64_t, uint64_t);
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  size_t v51;
  int v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  size_t v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v60;
  int v61;
  unint64_t v62;
  void (*v63)(unint64_t, unint64_t, uint64_t);
  _BYTE *v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  unint64_t v71;
  unint64_t v72;
  void *v73;
  const void *v74;
  unsigned int (*v75)(const void *, uint64_t, uint64_t);
  size_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  unint64_t v87;
  uint64_t *v88;
  unint64_t v89;
  uint64_t v90;
  size_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  int v97;
  _QWORD *v98;
  _QWORD *v99;
  size_t v100;
  unint64_t v101;
  uint64_t v102;
  size_t v103;
  unint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  void (*v134)(char *);
  unint64_t v135;
  unint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  unint64_t v139;
  unint64_t v140;
  void (*v141)(unint64_t, unint64_t, uint64_t);
  _QWORD *v142;
  _QWORD *v143;
  _QWORD *v144;
  _QWORD *v145;
  _QWORD *v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  int v150;
  unint64_t v151;
  unint64_t v152;
  void (*v153)(unint64_t, unint64_t, uint64_t);
  size_t v154;
  _BYTE *v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  unint64_t v162;
  unint64_t v163;
  void *v164;
  const void *v165;
  unsigned int (*v166)(const void *, uint64_t, uint64_t);
  size_t v167;
  size_t v168;
  size_t v169;
  _QWORD *v170;
  _QWORD *v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  unint64_t v177;
  uint64_t *v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  int v186;
  _QWORD *v187;
  _QWORD *v188;
  unint64_t v189;
  unint64_t v190;
  __int128 *v191;
  unint64_t v192;
  int v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  _QWORD *v206;
  unint64_t v207;
  char *v208;
  uint64_t v209;
  void *v210;
  id v211;
  void *v212;
  id v213;
  uint64_t v214;
  id v215;
  unint64_t *v216;
  unint64_t v217;
  uint64_t v218;
  _OWORD *v219;
  __int128 *v220;
  __int128 v221;
  unint64_t v222;
  unint64_t v223;
  __int128 v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t v229;
  unint64_t v230;
  size_t v231;
  uint64_t v232;
  unint64_t v233;
  unint64_t v234;
  unint64_t v235;
  unint64_t v236;
  void **v237;
  void *v238;
  _QWORD *v239;
  unint64_t v240;
  unint64_t v241;
  void *v242;
  id v243;
  id v244;
  void *v245;
  id v246;
  unsigned int v248;
  uint64_t v249;
  size_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  size_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  _QWORD *v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  unint64_t v267;
  unsigned int v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  size_t v279;
  uint64_t v280;
  const void *v281;
  uint64_t v282;
  unint64_t v283;
  size_t v284;
  uint64_t v285;
  void *v286;
  char *v287;
  unint64_t v288;
  void *v289;
  uint64_t v290;
  unsigned int v291;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  v280 = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(v280 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 | v8 | 7;
  v263 = a1;
  v285 = ((unint64_t)a1 + v9 + 8) & ~v9;
  v10 = (char *)(((unint64_t)a2 + v9 + 8) & ~v9);
  v11 = *(unsigned int *)(v5 + 84);
  v12 = *(unsigned int *)(v7 + 84);
  if (v11 <= v12)
    v13 = *(_DWORD *)(v7 + 84);
  else
    v13 = *(_DWORD *)(v5 + 84);
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v13;
  v15 = *(_QWORD *)(v5 + 64) + 7;
  v277 = ~v8;
  v275 = v8 + 8;
  v273 = *(_QWORD *)(v7 + 64) + 7;
  v283 = ((((v273 + ((v8 + 8 + (v15 & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  swift_retain();
  if ((_DWORD)v11 == v14)
  {
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, v11, AssociatedTypeWitness);
    v17 = (char *)v285;
    v18 = v283;
    v19 = AssociatedTypeWitness;
    if (!v16)
      goto LABEL_17;
LABEL_16:
    memcpy(v17, v10, v18);
    goto LABEL_19;
  }
  v290 = AssociatedTypeWitness;
  v20 = (uint64_t *)((unint64_t)&v10[v15] & 0xFFFFFFFFFFFFFFF8);
  if (v13 <= 0x7FFFFFFE)
  {
    v21 = *v20;
    if ((unint64_t)*v20 >= 0xFFFFFFFF)
      LODWORD(v21) = -1;
    v17 = (char *)v285;
    v18 = v283;
    v19 = v290;
    if ((v21 + 1) < 2)
      goto LABEL_18;
    goto LABEL_16;
  }
  v22 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)v20 + v275) & v277, v12, v280);
  v17 = (char *)v285;
  v18 = v283;
  v19 = v290;
  if (v22)
    goto LABEL_16;
LABEL_17:
  v20 = (uint64_t *)((unint64_t)&v10[v15] & 0xFFFFFFFFFFFFFFF8);
LABEL_18:
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v17, v10, v19);
  v23 = (_QWORD *)((unint64_t)&v17[v15] & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v20;
  v24 = ((unint64_t)v23 + v275) & v277;
  v25 = ((unint64_t)v20 + v275) & v277;
  v26 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  v26(v24, v25, v280);
  v27 = (_QWORD *)((v273 + v24) & 0xFFFFFFFFFFFFF8);
  v28 = (_QWORD *)((v273 + v25) & 0xFFFFFFFFFFFFF8);
  *v27 = *v28;
  v29 = (_QWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_19:
  v31 = &v17[v18];
  v32 = *(_QWORD *)&v10[v18];
  v31[8] = v10[v18 + 8];
  *(_QWORD *)v31 = v32;
  v33 = swift_getAssociatedTypeWitness();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(unsigned __int8 *)(v34 + 80);
  v257 = sub_23B1C5BDC();
  v36 = *(_QWORD *)(v257 - 8);
  v37 = *(unsigned __int8 *)(v36 + 80);
  v38 = v37 | 7;
  v259 = v35;
  v266 = v37 | v35;
  v39 = v37 | v35 | 7;
  v286 = (void *)((unint64_t)&v17[v18 + 9 + v39] & ~v39);
  v40 = (const void *)((unint64_t)&v10[v18 + 9 + v39] & ~v39);
  v41 = *(unsigned int *)(v34 + 84);
  v42 = *(unsigned int *)(v36 + 84);
  if (v42 <= 0x7FFFFFFE)
    v43 = 2147483646;
  else
    v43 = *(_DWORD *)(v36 + 84);
  v268 = v43;
  if (v41 > v43)
    v43 = *(_DWORD *)(v34 + 84);
  if (v43 <= 0x7FFFFFFF)
    v44 = 0x7FFFFFFF;
  else
    v44 = v43;
  v270 = *(_QWORD *)(v34 + 64);
  v45 = v270 + 7;
  v46 = ~v38;
  v47 = v37 + 16;
  v261 = v37 | 7;
  v48 = (v37 + 16 + ((v270 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v38;
  v49 = ~v37;
  v50 = v37 + 12;
  v284 = *(_QWORD *)(v36 + 64);
  v51 = v284 + v37;
  v254 = v37 + 10;
  v288 = (v37
        + 10
        + ((((((v284 + 12 + ((v284 + v37 + ((v37 + 12) & ~v37)) & ~v37)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v37;
  v291 = *(_DWORD *)(v36 + 84);
  v255 = v284 + v37;
  v256 = *(_QWORD *)(v257 - 8);
  v252 = v37 + 12;
  v281 = v40;
  v253 = ~v37;
  v278 = ~v38;
  v274 = v33;
  v276 = v34;
  v264 = v48;
  if ((_DWORD)v41 == v44)
  {
    v52 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v34 + 48))(v40, v41, v33);
    goto LABEL_29;
  }
  v53 = (_QWORD *)(((unint64_t)v40 + v45) & 0xFFFFFFFFFFFFFFF8);
  if ((v43 & 0x80000000) == 0)
  {
    v54 = v53[1];
    if (v54 >= 0xFFFFFFFF)
      LODWORD(v54) = -1;
    if ((_DWORD)v54 == -1)
      goto LABEL_35;
    goto LABEL_55;
  }
  v55 = ((unint64_t)v53 + v47) & v46;
  v77 = (v50 + v55) & v49;
  if (v42 > 0x7FFFFFFD)
  {
    v52 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v36 + 48))(v77, v42, v257);
LABEL_29:
    v40 = v281;
    if (!v52)
    {
LABEL_35:
      v248 = v41;
      v53 = (_QWORD *)(((unint64_t)v40 + v45) & 0xFFFFFFFFFFFFFFF8);
      v55 = ((unint64_t)v53 + v47) & v46;
      v56 = (v50 + v55) & v49;
      v57 = v255;
      v250 = (v255 + v56) & v49;
      goto LABEL_36;
    }
LABEL_55:
    v102 = 7;
    if (!v291)
      v102 = 8;
    v91 = v284;
    v103 = v48
         + ((((((((((v102 + v284 + v288) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    if (v291)
      v76 = v284;
    else
      v76 = v284 + 1;
    memcpy(v286, v40, v103);
    v78 = v259;
    v79 = v261;
    goto LABEL_61;
  }
  v101 = *(_QWORD *)(((v284 + 12 + ((v51 + v77) & v49)) & 0xFFFFFFFFFFFFF8) + 8);
  if (v101 >= 0xFFFFFFFF)
    LODWORD(v101) = -1;
  if ((v101 + 1) >= 2)
    goto LABEL_55;
  v248 = v41;
  v57 = v284 + v37;
  v56 = (v50 + v55) & v49;
  v250 = (v51 + v77) & v49;
LABEL_36:
  (*(void (**)(void *))(v276 + 16))(v286);
  v58 = (_QWORD *)(((unint64_t)v286 + v45) & 0xFFFFFFFFFFFFFFF8);
  *v58 = *v53;
  v58[1] = v53[1];
  v59 = ((unint64_t)v58 + v47) & v46;
  *(_BYTE *)v59 = *(_BYTE *)v55;
  v60 = v59 | 4;
  v61 = *(_DWORD *)(v55 | 4);
  *(_BYTE *)(v60 + 4) = *(_BYTE *)((v55 | 4) + 4);
  *(_DWORD *)v60 = v61;
  *(_WORD *)(v59 + 10) = *(_WORD *)(v55 + 10);
  v62 = (v50 + v59) & v49;
  v63 = *(void (**)(unint64_t, unint64_t, uint64_t))(v256 + 16);
  swift_bridgeObjectRetain();
  v63(v62, v56, v257);
  v63((v57 + v62) & v49, v250, v257);
  v64 = (_BYTE *)(((v57 + v62) & v49) + v284);
  *v64 = *(_BYTE *)(v250 + v284);
  v64[1] = *(_BYTE *)(v250 + v284 + 1);
  v64[2] = *(_BYTE *)(v250 + v284 + 2);
  v64[3] = *(_BYTE *)(v250 + v284 + 3);
  v64[4] = *(_BYTE *)(v250 + v284 + 4);
  v65 = (unint64_t)(v64 + 12) & 0xFFFFFFFFFFFFFFF8;
  v66 = (v250 + v284 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v65 = *(_QWORD *)v66;
  *(_QWORD *)(v65 + 8) = *(_QWORD *)(v66 + 8);
  *(_BYTE *)(v65 + 16) = *(_BYTE *)(v66 + 16);
  *(_BYTE *)(v65 + 17) = *(_BYTE *)(v66 + 17);
  *(_BYTE *)(v65 + 18) = *(_BYTE *)(v66 + 18);
  *(_BYTE *)(v65 + 19) = *(_BYTE *)(v66 + 19);
  v67 = (v65 + 27) & 0xFFFFFFFFFFFFFFF8;
  v68 = (v66 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *(_BYTE *)(v67 + 8) = *(_BYTE *)(v68 + 8);
  *(_BYTE *)(v67 + 9) = *(_BYTE *)(v68 + 9);
  *(_BYTE *)(v67 + 10) = *(_BYTE *)(v68 + 10);
  *(_BYTE *)(v67 + 11) = *(_BYTE *)(v68 + 11);
  *(_BYTE *)(v67 + 12) = *(_BYTE *)(v68 + 12);
  v69 = (_QWORD *)((v65 + 47) & 0xFFFFFFFFFFFFF8);
  v70 = (_QWORD *)((v66 + 47) & 0xFFFFFFFFFFFFF8);
  *v69 = *v70;
  v71 = ((unint64_t)v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  v72 = ((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v71 = *(_QWORD *)v72;
  *(_BYTE *)(v71 + 8) = *(_BYTE *)(v72 + 8);
  *(_BYTE *)(v71 + 9) = *(_BYTE *)(v72 + 9);
  v73 = (void *)((v254 + v71) & v49);
  v74 = (const void *)((v254 + v72) & v49);
  v75 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v256 + 48);
  swift_bridgeObjectRetain();
  if (v75(v74, 1, v257))
  {
    if (v291)
      v76 = v284;
    else
      v76 = v284 + 1;
    memcpy(v73, v74, v76);
  }
  else
  {
    v63((unint64_t)v73, (unint64_t)v74, v257);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v256 + 56))(v73, 0, 1, v257);
    if (v291)
      v76 = v284;
    else
      v76 = v284 + 1;
  }
  v78 = v259;
  v79 = v261;
  v41 = v248;
  v80 = (_QWORD *)(((unint64_t)v73 + v76 + 7) & 0xFFFFFFFFFFFFFFF8);
  v81 = (_QWORD *)(((unint64_t)v74 + v76 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v80 = *v81;
  v82 = ((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8;
  v83 = ((unint64_t)v81 + 15) & 0xFFFFFFFFFFFFFFF8;
  v84 = *(_QWORD *)v83;
  *(_BYTE *)(v82 + 8) = *(_BYTE *)(v83 + 8);
  *(_QWORD *)v82 = v84;
  v85 = (_QWORD *)(((unint64_t)v80 + 31) & 0xFFFFFFFFFFFFF8);
  v86 = (_QWORD *)(((unint64_t)v81 + 31) & 0xFFFFFFFFFFFFF8);
  *v85 = *v86;
  v87 = ((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8;
  v88 = (uint64_t *)(((unint64_t)v86 + 15) & 0xFFFFFFFFFFFFFFF8);
  v89 = v88[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v89 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)v87 = *(_OWORD *)v88;
  }
  else
  {
    v90 = *v88;
    sub_23AAAE668(*v88, v89);
    *(_QWORD *)v87 = v90;
    *(_QWORD *)(v87 + 8) = v89;
  }
  v91 = v284;
  v92 = (v87 + 19) & 0xFFFFFFFFFFFFFFF8;
  v93 = ((unint64_t)v88 + 19) & 0xFFFFFFFFFFFFFFF8;
  v94 = *(_QWORD *)v93;
  *(_BYTE *)(v92 + 8) = *(_BYTE *)(v93 + 8);
  *(_QWORD *)v92 = v94;
  *(_BYTE *)(v92 + 9) = *(_BYTE *)(v93 + 9);
  v95 = (v92 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v96 = (v93 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v97 = *(_DWORD *)v96;
  *(_BYTE *)(v95 + 4) = *(_BYTE *)(v96 + 4);
  *(_DWORD *)v95 = v97;
  v98 = (_QWORD *)((v92 + 25) & 0xFFFFFFFFFFFFFFF8);
  v99 = (_QWORD *)((v93 + 25) & 0xFFFFFFFFFFFFFFF8);
  *v98 = *v99;
  v98[1] = v99[1];
  swift_bridgeObjectRetain();
  v100 = v284;
  if (!v291)
LABEL_61:
    v100 = v76;
  v262 = v288 + 7;
  v104 = (((((((((v288 + 7 + v100) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  v260 = swift_getAssociatedTypeWitness();
  v105 = *(_QWORD *)(v260 - 8);
  v106 = *(_DWORD *)(v105 + 80) & 0xF8;
  v107 = swift_getAssociatedTypeWitness();
  v108 = *(_QWORD *)(v107 - 8);
  v109 = *(unsigned __int8 *)(v108 + 80);
  v110 = v106 | v109 | 7;
  v111 = v264 + (v266 | v110) + v104 + 16;
  v287 = (char *)(((unint64_t)v286 + v111) & ~(v266 | v110));
  v112 = (char *)(((unint64_t)v281 + v111) & ~(v266 | v110));
  v113 = *(unsigned int *)(v105 + 84);
  v114 = *(unsigned int *)(v108 + 84);
  if (v113 <= v114)
    v115 = *(_DWORD *)(v108 + 84);
  else
    v115 = *(_DWORD *)(v105 + 84);
  if (v115 <= 0x7FFFFFFE)
    v116 = 2147483646;
  else
    v116 = v115;
  if (v116 <= v41)
    v117 = v41;
  else
    v117 = v116;
  if (v117 <= v268)
    v117 = v268;
  if (v117 <= 0x7FFFFFFF)
    v118 = 0x7FFFFFFF;
  else
    v118 = v117;
  v119 = ~v78;
  v120 = v270 + v78;
  v121 = (v270 + v78) & ~v78;
  v122 = ~v110;
  v123 = v270 + v110;
  v124 = (v270 + v110 + v121) & ~v110;
  v125 = *(_QWORD *)(v105 + 64) + 7;
  v126 = ((((*(_QWORD *)(v108 + 64) + 7 + ((v109 + 8 + (v125 & 0xFFFFFFFFFFFFFFF8)) & ~v109)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v127 = v79 + 16;
  v282 = (v79 + 16 + v124 + v126) & v278;
  v258 = v107;
  v271 = v79 + 16;
  v272 = v122;
  v265 = *(_QWORD *)(v108 + 64) + 7;
  v267 = v126;
  v249 = v109 + 8;
  v251 = ~v109;
  v269 = v119;
  if ((_DWORD)v41 == v118)
  {
    v128 = v276;
    v129 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v276 + 48))(v112, v41, v274);
    goto LABEL_78;
  }
  v130 = (unint64_t)&v112[v120] & v119;
  v131 = (v123 + v130) & v122;
  v128 = v276;
  if (v116 == v118)
  {
    if ((_DWORD)v113 == v116)
    {
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v105 + 48))((v123 + v130) & v122, v113, v260))goto LABEL_88;
      goto LABEL_119;
    }
    v216 = (unint64_t *)((v125 + v131) & 0xFFFFFFFFFFFFFFF8);
    if (v115 <= 0x7FFFFFFE)
    {
      v217 = *v216;
      goto LABEL_116;
    }
    v129 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v108 + 48))(((unint64_t)v216 + v109 + 8) & ~v109, v114, v107);
LABEL_78:
    if (!v129)
    {
LABEL_88:
      v130 = (unint64_t)&v112[v120] & v269;
      v131 = (v123 + v130) & v272;
      goto LABEL_89;
    }
LABEL_119:
    v232 = 7;
    if (!v291)
      v232 = 8;
    v208 = v287;
    v209 = v282;
    if (v291)
      v231 = v91;
    else
      v231 = v91 + 1;
    memcpy(v287, v112, ((((((((((((((v232 + v91 + v288) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ v282+ 327) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
    v207 = v288 + 7;
    v206 = v263;
    goto LABEL_125;
  }
  v132 = v131 + v126;
  if ((v117 & 0x80000000) == 0)
  {
    v133 = *(_QWORD *)(v132 + 8);
    if (v133 >= 0xFFFFFFFF)
      LODWORD(v133) = -1;
    if ((_DWORD)v133 == -1)
      goto LABEL_88;
    goto LABEL_119;
  }
  v218 = (v252 + ((v127 + v132) & v278)) & v253;
  if (v291 > 0x7FFFFFFD)
  {
    v129 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v256 + 48))(v218, v291, v257);
    goto LABEL_78;
  }
  v217 = *(_QWORD *)(((v284 + 12 + ((v255 + v218) & v253)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_116:
  if (v217 >= 0xFFFFFFFF)
    LODWORD(v217) = -1;
  if ((v217 + 1) >= 2)
    goto LABEL_119;
LABEL_89:
  v134 = *(void (**)(char *))(v128 + 16);
  v134(v287);
  v135 = (unint64_t)&v287[v120] & v269;
  ((void (*)(unint64_t, unint64_t, uint64_t))v134)(v135, v130, v274);
  v136 = (v123 + v135) & v272;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v105 + 16))(v136, v131, v260);
  v137 = (_QWORD *)((v125 + v136) & 0xFFFFFFFFFFFFFFF8);
  v138 = (_QWORD *)((v125 + v131) & 0xFFFFFFFFFFFFFFF8);
  *v137 = *v138;
  v139 = ((unint64_t)v137 + v249) & v251;
  v140 = ((unint64_t)v138 + v249) & v251;
  v141 = *(void (**)(unint64_t, unint64_t, uint64_t))(v108 + 16);
  swift_bridgeObjectRetain();
  v141(v139, v140, v258);
  v142 = (_QWORD *)((v265 + v139) & 0xFFFFFFFFFFFFF8);
  v143 = (_QWORD *)((v265 + v140) & 0xFFFFFFFFFFFFF8);
  *v142 = *v143;
  v144 = (_QWORD *)(((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8);
  v145 = (_QWORD *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v144 = *v145;
  v144[1] = v145[1];
  v146 = (_QWORD *)(v136 + v267);
  *v146 = *(_QWORD *)(v131 + v267);
  v146[1] = *(_QWORD *)(v131 + v267 + 8);
  v147 = (v271 + v136 + v267) & v278;
  v148 = (v271 + v131 + v267) & v278;
  *(_BYTE *)v147 = *(_BYTE *)v148;
  v149 = v147 | 4;
  v150 = *(_DWORD *)(v148 | 4);
  *(_BYTE *)(v149 + 4) = *(_BYTE *)((v148 | 4) + 4);
  *(_DWORD *)v149 = v150;
  *(_WORD *)(v147 + 10) = *(_WORD *)(v148 + 0xA);
  v151 = (v252 + v147) & v253;
  v152 = (v252 + v148) & v253;
  v153 = *(void (**)(unint64_t, unint64_t, uint64_t))(v256 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v153(v151, v152, v257);
  v154 = (v255 + v152) & v253;
  v153((v255 + v151) & v253, v154, v257);
  v155 = (_BYTE *)(((v255 + v151) & v253) + v284);
  *v155 = *(_BYTE *)(v154 + v284);
  v155[1] = *(_BYTE *)(v154 + v284 + 1);
  v155[2] = *(_BYTE *)(v154 + v284 + 2);
  v155[3] = *(_BYTE *)(v154 + v284 + 3);
  v155[4] = *(_BYTE *)(v154 + v284 + 4);
  v156 = (unint64_t)(v155 + 12) & 0xFFFFFFFFFFFFFFF8;
  v157 = (v154 + v284 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v156 = *(_QWORD *)v157;
  *(_QWORD *)(v156 + 8) = *(_QWORD *)(v157 + 8);
  *(_BYTE *)(v156 + 16) = *(_BYTE *)(v157 + 16);
  *(_BYTE *)(v156 + 17) = *(_BYTE *)(v157 + 17);
  *(_BYTE *)(v156 + 18) = *(_BYTE *)(v157 + 18);
  *(_BYTE *)(v156 + 19) = *(_BYTE *)(v157 + 19);
  v158 = (v156 + 27) & 0xFFFFFFFFFFFFFFF8;
  v159 = (v157 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v158 = *(_QWORD *)v159;
  *(_BYTE *)(v158 + 8) = *(_BYTE *)(v159 + 8);
  *(_BYTE *)(v158 + 9) = *(_BYTE *)(v159 + 9);
  *(_BYTE *)(v158 + 10) = *(_BYTE *)(v159 + 10);
  *(_BYTE *)(v158 + 11) = *(_BYTE *)(v159 + 11);
  *(_BYTE *)(v158 + 12) = *(_BYTE *)(v159 + 12);
  v160 = (_QWORD *)((v156 + 47) & 0xFFFFFFFFFFFFF8);
  v161 = (_QWORD *)((v157 + 47) & 0xFFFFFFFFFFFFF8);
  *v160 = *v161;
  v162 = ((unint64_t)v160 + 15) & 0xFFFFFFFFFFFFFFF8;
  v163 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v162 = *(_QWORD *)v163;
  *(_BYTE *)(v162 + 8) = *(_BYTE *)(v163 + 8);
  *(_BYTE *)(v162 + 9) = *(_BYTE *)(v163 + 9);
  v164 = (void *)((v254 + v162) & v253);
  v165 = (const void *)((v254 + v163) & v253);
  v166 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v256 + 48);
  swift_bridgeObjectRetain();
  if (v166(v165, 1, v257))
  {
    if (v291)
      v167 = v284;
    else
      v167 = v284 + 1;
    memcpy(v164, v165, v167);
  }
  else
  {
    v153((unint64_t)v164, (unint64_t)v165, v257);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v256 + 56))(v164, 0, 1, v257);
    if (v291)
      v167 = v284;
    else
      v167 = v284 + 1;
  }
  v168 = v284;
  v279 = v167;
  v169 = v167 + 7;
  v170 = (_QWORD *)(((unint64_t)v164 + v169) & 0xFFFFFFFFFFFFFFF8);
  v171 = (_QWORD *)(((unint64_t)v165 + v169) & 0xFFFFFFFFFFFFFFF8);
  *v170 = *v171;
  v172 = ((unint64_t)v170 + 15) & 0xFFFFFFFFFFFFFFF8;
  v173 = ((unint64_t)v171 + 15) & 0xFFFFFFFFFFFFFFF8;
  v174 = *(_QWORD *)v173;
  *(_BYTE *)(v172 + 8) = *(_BYTE *)(v173 + 8);
  *(_QWORD *)v172 = v174;
  v175 = (_QWORD *)(((unint64_t)v170 + 31) & 0xFFFFFFFFFFFFF8);
  v176 = (_QWORD *)(((unint64_t)v171 + 31) & 0xFFFFFFFFFFFFF8);
  *v175 = *v176;
  v177 = ((unint64_t)v175 + 15) & 0xFFFFFFFFFFFFFFF8;
  v178 = (uint64_t *)(((unint64_t)v176 + 15) & 0xFFFFFFFFFFFFFFF8);
  v179 = v178[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v179 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)v177 = *(_OWORD *)v178;
  }
  else
  {
    v180 = *v178;
    sub_23AAAE668(*v178, v179);
    *(_QWORD *)v177 = v180;
    *(_QWORD *)(v177 + 8) = v179;
  }
  v181 = (v177 + 19) & 0xFFFFFFFFFFFFFFF8;
  v182 = ((unint64_t)v178 + 19) & 0xFFFFFFFFFFFFFFF8;
  v183 = *(_QWORD *)v182;
  *(_BYTE *)(v181 + 8) = *(_BYTE *)(v182 + 8);
  *(_QWORD *)v181 = v183;
  *(_BYTE *)(v181 + 9) = *(_BYTE *)(v182 + 9);
  v184 = (v181 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v185 = (v182 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v186 = *(_DWORD *)v185;
  *(_BYTE *)(v184 + 4) = *(_BYTE *)(v185 + 4);
  *(_DWORD *)v184 = v186;
  v187 = (_QWORD *)((v181 + 25) & 0xFFFFFFFFFFFFFFF8);
  v188 = (_QWORD *)((v182 + 25) & 0xFFFFFFFFFFFFFFF8);
  *v187 = *v188;
  v187[1] = v188[1];
  v189 = ((((((((((v169 + v288) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v190 = v147 + v189;
  v191 = (__int128 *)(v148 + v189);
  v192 = *(_QWORD *)(v148 + v189 + 16);
  if (v192 >= 0xFFFFFFFF)
    LODWORD(v192) = -1;
  v193 = v192 - 1;
  swift_bridgeObjectRetain();
  if (v193 < 0)
  {
    *(_QWORD *)v190 = *(_QWORD *)v191;
    *(_BYTE *)(v190 + 8) = *((_BYTE *)v191 + 8);
    *(_BYTE *)(v190 + 9) = *((_BYTE *)v191 + 9);
    v210 = (void *)*((_QWORD *)v191 + 2);
    v211 = v210;
    *(_QWORD *)(v190 + 16) = v210;
    v212 = (void *)*((_QWORD *)v191 + 3);
    v213 = v212;
    *(_QWORD *)(v190 + 24) = v212;
    *(_BYTE *)(v190 + 32) = *((_BYTE *)v191 + 32);
    *(_BYTE *)(v190 + 33) = *((_BYTE *)v191 + 33);
    *(_BYTE *)(v190 + 34) = *((_BYTE *)v191 + 34);
    *(_QWORD *)(v190 + 40) = *((_QWORD *)v191 + 5);
    *(_QWORD *)(v190 + 48) = *((_QWORD *)v191 + 6);
    *(_QWORD *)(v190 + 56) = *((_QWORD *)v191 + 7);
    *(_QWORD *)(v190 + 64) = *((_QWORD *)v191 + 8);
    *(_BYTE *)(v190 + 72) = *((_BYTE *)v191 + 72);
    *(_QWORD *)(v190 + 80) = *((_QWORD *)v191 + 10);
    *(_QWORD *)(v190 + 88) = *((_QWORD *)v191 + 11);
    v289 = (void *)*((_QWORD *)v191 + 12);
    *(_QWORD *)(v190 + 96) = v289;
    *(_BYTE *)(v190 + 104) = *((_BYTE *)v191 + 104);
    *(_BYTE *)(v190 + 105) = *((_BYTE *)v191 + 105);
    *(_QWORD *)(v190 + 112) = *((_QWORD *)v191 + 14);
    *(_QWORD *)(v190 + 120) = *((_QWORD *)v191 + 15);
    *(_QWORD *)(v190 + 128) = *((_QWORD *)v191 + 16);
    *(_QWORD *)(v190 + 136) = *((_QWORD *)v191 + 17);
    *(_QWORD *)(v190 + 144) = *((_QWORD *)v191 + 18);
    *(_QWORD *)(v190 + 152) = *((_QWORD *)v191 + 19);
    *(_QWORD *)(v190 + 160) = *((_QWORD *)v191 + 20);
    *(_QWORD *)(v190 + 168) = *((_QWORD *)v191 + 21);
    *(_BYTE *)(v190 + 176) = *((_BYTE *)v191 + 176);
    *(_QWORD *)(v190 + 184) = *((_QWORD *)v191 + 23);
    v214 = *((_QWORD *)v191 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v215 = v289;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v214)
    {
      *(_QWORD *)(v190 + 192) = v214;
      *(_QWORD *)(v190 + 200) = *((_QWORD *)v191 + 25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v190 + 192) = v191[12];
    }
    v207 = v262;
    v206 = v263;
    v168 = v284;
    v208 = v287;
    v209 = v282;
    *(_QWORD *)(v190 + 208) = *((_QWORD *)v191 + 26);
    *(_QWORD *)(v190 + 216) = *((_QWORD *)v191 + 27);
    *(_QWORD *)(v190 + 224) = *((_QWORD *)v191 + 28);
    *(_QWORD *)(v190 + 232) = *((_QWORD *)v191 + 29);
    *(_QWORD *)(v190 + 240) = *((_QWORD *)v191 + 30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v194 = *v191;
    v195 = v191[1];
    v196 = v191[3];
    *(_OWORD *)(v190 + 32) = v191[2];
    *(_OWORD *)(v190 + 48) = v196;
    *(_OWORD *)v190 = v194;
    *(_OWORD *)(v190 + 16) = v195;
    v197 = v191[4];
    v198 = v191[5];
    v199 = v191[7];
    *(_OWORD *)(v190 + 96) = v191[6];
    *(_OWORD *)(v190 + 112) = v199;
    *(_OWORD *)(v190 + 64) = v197;
    *(_OWORD *)(v190 + 80) = v198;
    v200 = v191[8];
    v201 = v191[9];
    v202 = v191[11];
    *(_OWORD *)(v190 + 160) = v191[10];
    *(_OWORD *)(v190 + 176) = v202;
    *(_OWORD *)(v190 + 128) = v200;
    *(_OWORD *)(v190 + 144) = v201;
    v203 = v191[12];
    v204 = v191[13];
    v205 = v191[14];
    *(_QWORD *)(v190 + 240) = *((_QWORD *)v191 + 30);
    *(_OWORD *)(v190 + 208) = v204;
    *(_OWORD *)(v190 + 224) = v205;
    *(_OWORD *)(v190 + 192) = v203;
    v207 = v288 + 7;
    v206 = v263;
    v208 = v287;
    v209 = v282;
  }
  v219 = (_OWORD *)((v190 + 255) & 0xFFFFFFFFFFFFFFF8);
  v220 = (__int128 *)(((unint64_t)v191 + 255) & 0xFFFFFFFFFFFFFFF8);
  v221 = *v220;
  *(_OWORD *)((char *)v219 + 9) = *(__int128 *)((char *)v220 + 9);
  *v219 = v221;
  v222 = (v190 + 287) & 0xFFFFFFFFFFFFFFF8;
  v223 = ((unint64_t)v191 + 287) & 0xFFFFFFFFFFFFFFF8;
  v224 = *(_OWORD *)v223;
  *(_BYTE *)(v222 + 16) = *(_BYTE *)(v223 + 16);
  *(_OWORD *)v222 = v224;
  v225 = (_QWORD *)((v190 + 311) & 0xFFFFFFFFFFFFF8);
  v226 = ((unint64_t)v191 + 311) & 0xFFFFFFFFFFFFF8;
  v227 = *(_QWORD *)v226;
  v226 += 15;
  *v225 = v227;
  v228 = (_QWORD *)(((unint64_t)v225 + 15) & 0xFFFFFFFFFFFFFFF8);
  v229 = *(_QWORD *)(v226 & 0xFFFFFFFFFFFFFFF8);
  v230 = *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_23AA7F2D4(v229, v230);
  *v228 = v229;
  v228[1] = v230;
  v231 = v279;
  if (!v291)
LABEL_125:
    v168 = v231;
  v233 = ((((v209
           + ((((((((((v207 + v168) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v234 = (unint64_t)&v208[v233];
  v235 = (unint64_t)&v112[v233];
  v236 = v234 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v236 = *(_QWORD *)(v235 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v236 + 8) = *(_BYTE *)((v235 & 0xFFFFFFFFFFFFFFF8) + 8);
  v237 = (void **)((v235 + 23) & 0xFFFFFFFFFFFFF8);
  v238 = *v237;
  v239 = (_QWORD *)((v234 + 23) & 0xFFFFFFFFFFFFF8);
  *v239 = *v237;
  v240 = ((unint64_t)v239 + 15) & 0xFFFFFFFFFFFFFFF8;
  v241 = ((unint64_t)v237 + 15) & 0xFFFFFFFFFFFFFFF8;
  v242 = *(void **)v241;
  v243 = v238;
  if ((unint64_t)v242 < 0xFFFFFFFF)
  {
    *(_OWORD *)v240 = *(_OWORD *)v241;
  }
  else
  {
    v244 = v242;
    *(_QWORD *)v240 = v242;
    v245 = *(void **)(v241 + 8);
    *(_QWORD *)(v240 + 8) = v245;
    v246 = v245;
  }
  return v206;
}

_QWORD *sub_23AD5EAF0(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(unint64_t, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(unint64_t, unint64_t, uint64_t);
  _QWORD *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  size_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  size_t v75;
  uint64_t v76;
  uint64_t (*v77)(void *, uint64_t, uint64_t);
  uint64_t v78;
  int v79;
  int v80;
  const void *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  int v85;
  unint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  size_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  int v98;
  size_t v99;
  const void *v100;
  uint64_t v101;
  void *v102;
  _QWORD *v103;
  unint64_t v104;
  uint64_t v105;
  int v106;
  unint64_t v107;
  void (*v108)(unint64_t, unint64_t, uint64_t);
  size_t v109;
  _BYTE *v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  unint64_t v117;
  unint64_t v118;
  void *v119;
  const void *v120;
  unsigned int (*v121)(const void *, uint64_t, uint64_t);
  size_t v122;
  unint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  unint64_t v131;
  uint64_t *v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  int v140;
  _QWORD *v141;
  _QWORD *v142;
  size_t v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  unint64_t v147;
  void (*v148)(unint64_t, uint64_t);
  unint64_t v149;
  unint64_t v150;
  uint64_t *v151;
  unint64_t v152;
  size_t v153;
  unint64_t v154;
  unint64_t v155;
  const void *v156;
  uint64_t v157;
  void *v158;
  _QWORD *v159;
  unint64_t v160;
  uint64_t v161;
  int v162;
  unint64_t v163;
  void (*v164)(unint64_t, unint64_t, uint64_t);
  _BYTE *v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  _QWORD *v170;
  _QWORD *v171;
  unint64_t v172;
  unint64_t v173;
  char *v174;
  char *v175;
  uint64_t (*v176)(char *, uint64_t, uint64_t);
  int v177;
  int v178;
  unsigned int v179;
  size_t v180;
  unint64_t v181;
  _QWORD *v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t *v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  int v200;
  _QWORD *v201;
  _QWORD *v202;
  unint64_t v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  unsigned int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t (*v231)(char *, _QWORD, uint64_t);
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int v236;
  int v237;
  size_t v238;
  unsigned int v239;
  uint64_t v240;
  unint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  int v246;
  unint64_t v247;
  unint64_t v248;
  unint64_t v249;
  unint64_t v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  int v256;
  unint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  size_t v261;
  _QWORD *v262;
  unint64_t v263;
  void (*v264)(char *, char *, uint64_t);
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  unint64_t v271;
  unint64_t v272;
  _QWORD *v273;
  _QWORD *v274;
  unint64_t v275;
  unint64_t v276;
  void (*v277)(unint64_t, unint64_t, uint64_t);
  _QWORD *v278;
  _QWORD *v279;
  _QWORD *v280;
  _QWORD *v281;
  _QWORD *v282;
  unint64_t v283;
  unint64_t v284;
  uint64_t v285;
  int v286;
  unint64_t v287;
  unint64_t v288;
  size_t v289;
  void (*v290)(unint64_t, unint64_t, uint64_t);
  size_t v291;
  _BYTE *v292;
  unint64_t v293;
  unint64_t v294;
  unint64_t v295;
  unint64_t v296;
  _QWORD *v297;
  _QWORD *v298;
  unint64_t v299;
  unint64_t v300;
  void *v301;
  const void *v302;
  unsigned int (*v303)(const void *, uint64_t, uint64_t);
  char *v304;
  size_t v305;
  unint64_t *v306;
  unint64_t v307;
  unint64_t v308;
  uint64_t (*v309)(unint64_t);
  size_t v310;
  _QWORD *v311;
  _QWORD *v312;
  unint64_t v313;
  unint64_t v314;
  uint64_t v315;
  _QWORD *v316;
  _QWORD *v317;
  unint64_t v318;
  uint64_t *v319;
  unint64_t v320;
  uint64_t v321;
  unint64_t v322;
  unint64_t v323;
  uint64_t v324;
  unint64_t v325;
  unint64_t v326;
  int v327;
  _QWORD *v328;
  _QWORD *v329;
  unint64_t v330;
  unint64_t v331;
  __int128 *v332;
  unint64_t v333;
  int v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  void *v347;
  id v348;
  void *v349;
  id v350;
  uint64_t v351;
  id v352;
  unint64_t *v353;
  unint64_t v354;
  BOOL v355;
  unint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  int v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  unint64_t v366;
  unint64_t v367;
  uint64_t v368;
  uint64_t (*v369)(unint64_t, uint64_t, uint64_t);
  unint64_t v370;
  uint64_t v371;
  uint64_t v372;
  unint64_t v373;
  unint64_t v374;
  unint64_t *v375;
  unint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  _OWORD *v387;
  __int128 *v388;
  __int128 v389;
  unint64_t v390;
  unint64_t v391;
  __int128 v392;
  _QWORD *v393;
  uint64_t v394;
  uint64_t v395;
  _QWORD *v396;
  uint64_t v397;
  unint64_t v398;
  unint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  void (*v404)(char *, uint64_t);
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  unint64_t v409;
  unint64_t v410;
  unint64_t v411;
  void (*v412)(unint64_t, uint64_t);
  size_t v413;
  unint64_t v414;
  uint64_t *v415;
  unint64_t v416;
  unint64_t v417;
  unint64_t v418;
  uint64_t v419;
  void *v420;
  int v421;
  void (*v422)(char *, char *, uint64_t);
  char *v423;
  unint64_t v424;
  char *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  size_t v429;
  char *v430;
  uint64_t v431;
  char *v432;
  size_t v433;
  unint64_t v434;
  uint64_t v435;
  _QWORD *v436;
  _QWORD *v437;
  unint64_t v438;
  _QWORD *v439;
  uint64_t v440;
  uint64_t v441;
  _QWORD *v442;
  _QWORD *v443;
  unint64_t v444;
  unint64_t v445;
  uint64_t v446;
  int v447;
  void (*v448)(unint64_t, unint64_t, uint64_t);
  unint64_t v449;
  size_t v450;
  _BYTE *v451;
  size_t v452;
  unint64_t v453;
  unint64_t v454;
  unint64_t v455;
  unint64_t v456;
  _QWORD *v457;
  _QWORD *v458;
  unint64_t v459;
  unint64_t v460;
  char *v461;
  char *v462;
  uint64_t (*v463)(char *, uint64_t, uint64_t);
  int v464;
  unsigned int v465;
  size_t v466;
  size_t v467;
  size_t v468;
  unint64_t v469;
  _QWORD *v470;
  unint64_t v471;
  unint64_t v472;
  unint64_t v473;
  unint64_t v474;
  unint64_t v475;
  uint64_t v476;
  _QWORD *v477;
  uint64_t v478;
  uint64_t *v479;
  unint64_t v480;
  unint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  unint64_t v485;
  unint64_t v486;
  uint64_t v487;
  unint64_t v488;
  unint64_t v489;
  int v490;
  _QWORD *v491;
  _QWORD *v492;
  unint64_t v493;
  __int128 *v494;
  void *v495;
  unint64_t v496;
  uint64_t v497;
  int v498;
  int v499;
  void *v500;
  id v501;
  void *v502;
  id v503;
  uint64_t v504;
  id v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  uint64_t v518;
  uint64_t v519;
  unint64_t v520;
  uint64_t v521;
  uint64_t v522;
  unint64_t v523;
  void *v524;
  id v525;
  void *v526;
  void *v527;
  id v528;
  void *v529;
  void *v530;
  id v531;
  uint64_t v532;
  unint64_t v533;
  _OWORD *v534;
  __int128 *v535;
  __int128 v536;
  unint64_t v537;
  unint64_t v538;
  __int128 v539;
  _QWORD *v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t *v543;
  uint64_t v544;
  unint64_t v545;
  uint64_t v546;
  unint64_t v547;
  unint64_t v548;
  unint64_t v549;
  unint64_t v550;
  unint64_t v551;
  void **v552;
  void **v553;
  void *v554;
  void *v555;
  id v556;
  id *v557;
  unint64_t v558;
  void *v559;
  id v560;
  id v561;
  id v562;
  void *v563;
  id v564;
  id v565;
  void *v566;
  id v567;
  uint64_t v569;
  unint64_t v570;
  uint64_t v571;
  uint64_t v572;
  size_t v573;
  _QWORD *v574;
  unint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  char *v579;
  char *v580;
  char *v581;
  unint64_t v582;
  unsigned int v583;
  uint64_t v584;
  uint64_t v585;
  unsigned int v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  size_t v595;
  const void *v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  int v602;
  void *v603;
  char *v604;
  char *v605;
  char *v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  size_t v612;
  uint64_t v613;
  unint64_t v614;
  void *v615;
  size_t v616;
  uint64_t v617;
  size_t v618;
  size_t v619;
  unsigned int v620;
  void *v621;

  *a1 = *a2;
  swift_retain();
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 | v9 | 7;
  v574 = a1;
  v11 = (char *)(((unint64_t)a1 + v10 + 8) & ~v10);
  v12 = (char *)(((unint64_t)a2 + v10 + 8) & ~v10);
  v13 = *(unsigned int *)(v5 + 84);
  v14 = *(unsigned int *)(v8 + 84);
  if (v13 <= v14)
    v15 = *(_DWORD *)(v8 + 84);
  else
    v15 = *(_DWORD *)(v5 + 84);
  if (v15 <= 0x7FFFFFFE)
    v16 = 2147483646;
  else
    v16 = v15;
  v17 = *(_QWORD *)(v5 + 64) + 7;
  v18 = v9 + 8;
  v19 = *(_QWORD *)(v8 + 64) + 7;
  v613 = v7;
  v616 = ((((v19 + ((v9 + 8 + (v17 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v611 = ~v9;
  if ((_DWORD)v13 == v16)
  {
    v609 = *(_QWORD *)(v8 + 64) + 7;
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
    v21 = v20(v11, v13, AssociatedTypeWitness);
    v22 = v20(v12, v13, AssociatedTypeWitness);
    if (v21)
      goto LABEL_9;
    goto LABEL_20;
  }
  v23 = (uint64_t *)((unint64_t)&v11[v17] & 0xFFFFFFFFFFFFFFF8);
  if (v15 <= 0x7FFFFFFE)
  {
    v25 = *v23;
    if ((unint64_t)*v23 >= 0xFFFFFFFF)
      LODWORD(v25) = -1;
    v26 = v25 + 1;
    v24 = (uint64_t *)((unint64_t)&v12[v17] & 0xFFFFFFFFFFFFFFF8);
    v27 = *v24;
    if ((unint64_t)*v24 >= 0xFFFFFFFF)
      LODWORD(v27) = -1;
    v28 = v27 + 1;
    if (v26 >= 2)
    {
      v609 = *(_QWORD *)(v8 + 64) + 7;
      if (v28 < 2)
        goto LABEL_23;
LABEL_24:
      v45 = v616;
      memcpy(v11, v12, v616);
      goto LABEL_28;
    }
    if (v28 >= 2)
    {
LABEL_21:
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))(((unint64_t)v23 + v18) & v611, v613);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
LABEL_26:
    (*(void (**)(char *, char *, uint64_t))(v5 + 24))(v11, v12, AssociatedTypeWitness);
    *v23 = *v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))(((unint64_t)v23 + v18) & v611, ((unint64_t)v24 + v18) & v611, v613);
    v46 = v19;
    v47 = (_QWORD *)((v19 + (((unint64_t)v23 + v18) & v611)) & 0xFFFFFFFFFFFFFFF8);
    v48 = (v46 + (((unint64_t)v24 + v18) & v611)) & 0xFFFFFFFFFFFFF8;
    v49 = *(_QWORD *)v48;
    v48 += 15;
    *v47 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v50 = (_QWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v50 = *(_QWORD *)(v48 & 0xFFFFFFFFFFFFFFF8);
    v50[1] = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v29 = v7;
  v607 = AssociatedTypeWitness;
  v609 = *(_QWORD *)(v8 + 64) + 7;
  v30 = ((unint64_t)v23 + v18) & ~v9;
  v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
  v32 = v12;
  v33 = v29;
  v34 = v11;
  v35 = ~v9;
  v602 = v31(v30, v14, v29);
  v36 = (v18 + ((unint64_t)&v32[v17] & 0xFFFFFFFFFFFFFFF8)) & v35;
  v11 = v34;
  AssociatedTypeWitness = v607;
  v37 = v33;
  v12 = v32;
  v22 = v31(v36, v14, v37);
  if (!v602)
  {
LABEL_20:
    v23 = (uint64_t *)((unint64_t)&v11[v17] & 0xFFFFFFFFFFFFFFF8);
    if (v22)
      goto LABEL_21;
    v24 = (uint64_t *)((unint64_t)&v12[v17] & 0xFFFFFFFFFFFFFFF8);
    v19 = v609;
    goto LABEL_26;
  }
LABEL_9:
  if (v22)
    goto LABEL_24;
  v23 = (uint64_t *)((unint64_t)&v11[v17] & 0xFFFFFFFFFFFFFFF8);
  v24 = (uint64_t *)((unint64_t)&v12[v17] & 0xFFFFFFFFFFFFFFF8);
LABEL_23:
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v12, AssociatedTypeWitness);
  *v23 = *v24;
  v38 = ((unint64_t)v23 + v18) & v611;
  v39 = ((unint64_t)v24 + v18) & v611;
  v40 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  v40(v38, v39, v613);
  v41 = (_QWORD *)((v609 + v38) & 0xFFFFFFFFFFFFF8);
  v42 = (_QWORD *)((v609 + v39) & 0xFFFFFFFFFFFFF8);
  *v41 = *v42;
  v43 = (_QWORD *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
  v44 = (_QWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_27:
  v45 = v616;
LABEL_28:
  v51 = &v11[v45];
  v52 = &v12[v45];
  v53 = *(_QWORD *)&v12[v45];
  v51[8] = v12[v45 + 8];
  *(_QWORD *)v51 = v53;
  v54 = swift_getAssociatedTypeWitness();
  v55 = *(_QWORD *)(v54 - 8);
  v56 = *(unsigned __int8 *)(v55 + 80);
  v57 = sub_23B1C5BDC();
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(unsigned __int8 *)(v58 + 80);
  v60 = v59 | 7;
  v590 = v56;
  v577 = v59 | v56;
  v61 = v59 | v56 | 7;
  v62 = (void *)((unint64_t)&v51[v61 + 9] & ~v61);
  v63 = (unint64_t)&v52[v61 + 9] & ~v61;
  v64 = *(unsigned int *)(v55 + 84);
  v65 = *(_DWORD *)(v58 + 84);
  if (v65 <= 0x7FFFFFFE)
    v66 = 2147483646;
  else
    v66 = *(_DWORD *)(v58 + 84);
  if (v64 <= v66)
    v67 = v66;
  else
    v67 = *(_DWORD *)(v55 + 84);
  if (v67 <= 0x7FFFFFFF)
    v68 = 0x7FFFFFFF;
  else
    v68 = v67;
  v69 = *(_QWORD *)(v55 + 64);
  v70 = v69 + 7;
  v71 = ~v60;
  v72 = v59 + 16;
  v575 = (v59 + 16 + ((v69 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v60;
  v73 = ~v59;
  v74 = v59 + 12;
  v612 = *(_QWORD *)(v58 + 64);
  v75 = v612 + v59;
  v573 = v612 + 12;
  v594 = v59 + 10;
  v614 = (v59
        + 10
        + ((((((v612 + 12 + ((v612 + v59 + ((v59 + 12) & ~v59)) & ~v59)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v59;
  v620 = *(_DWORD *)(v58 + 84);
  v76 = v57;
  v599 = *(_QWORD *)(v57 - 8);
  v600 = v57;
  v598 = ~v59;
  v595 = v612 + v59;
  v603 = v62;
  v608 = v59 + 12;
  v617 = ~v60;
  v601 = v54;
  v596 = (const void *)v63;
  v610 = v55;
  v592 = v59 | 7;
  v588 = v69;
  v586 = v66;
  v583 = *(_DWORD *)(v55 + 84);
  if ((_DWORD)v64 == v68)
  {
    v77 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v55 + 48);
    v78 = v69 + 7;
    v79 = v77(v62, v64, v54);
    v80 = v77((void *)v63, v64, v54);
    v70 = v78;
    v62 = v603;
    v81 = (const void *)v63;
    v82 = v76;
    if (!v79)
      goto LABEL_84;
LABEL_51:
    if (v80)
    {
LABEL_52:
      v90 = 7;
      if (!v620)
        v90 = 8;
      v91 = v575;
      if (v620)
        v92 = v612;
      else
        v92 = v612 + 1;
      memcpy(v62, v81, v575+ ((((((((((v90 + v612 + v614) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
      v93 = v577;
      goto LABEL_122;
    }
    goto LABEL_64;
  }
  v83 = ((unint64_t)v62 + v70) & 0xFFFFFFFFFFFFFFF8;
  if ((v67 & 0x80000000) != 0)
  {
    v86 = (v74 + ((v72 + v83) & v71)) & v73;
    if (v65 <= 0x7FFFFFFD)
    {
      v122 = v612 + 12;
      v123 = *(_QWORD *)(((v573 + ((v75 + v86) & v73)) & 0xFFFFFFFFFFFFF8) + 8);
      if (v123 >= 0xFFFFFFFF)
        LODWORD(v123) = -1;
      v81 = (const void *)v63;
      v88 = (_QWORD *)((v70 + v63) & 0xFFFFFFFFFFFFFFF8);
      v95 = ((unint64_t)v88 + v72) & v71;
      v96 = (v74 + v95) & v73;
      v82 = v76;
      if ((v123 + 1) >= 2)
        goto LABEL_95;
LABEL_100:
      v153 = (v75 + v96) & v73;
      v155 = *(_QWORD *)(((v122 + v153) & 0xFFFFFFFFFFFFF8) + 8);
      if (v155 >= 0xFFFFFFFF)
        LODWORD(v155) = -1;
      if ((v155 + 1) >= 2)
        goto LABEL_85;
      goto LABEL_103;
    }
    v82 = v76;
    v87 = v69 + 7;
    v85 = (*(uint64_t (**)(unint64_t))(v58 + 48))(v86);
    v70 = v87;
    v62 = v603;
    v81 = v596;
  }
  else
  {
    v84 = *(_QWORD *)(v83 + 8);
    if (v84 >= 0xFFFFFFFF)
      LODWORD(v84) = -1;
    v85 = v84 + 1;
    v81 = (const void *)v63;
    v82 = v76;
  }
  v88 = (_QWORD *)(((unint64_t)v81 + v70) & 0xFFFFFFFFFFFFFFF8);
  if (!v85)
  {
    if ((v67 & 0x80000000) == 0)
    {
      v94 = v88[1];
      if (v94 >= 0xFFFFFFFF)
        LODWORD(v94) = -1;
      v80 = v94 + 1;
      goto LABEL_84;
    }
    v95 = ((unint64_t)v88 + v72) & v71;
    v96 = (v608 + v95) & v73;
    if (v620 > 0x7FFFFFFD)
    {
      v144 = v70;
      v80 = (*(uint64_t (**)(unint64_t))(v599 + 48))((v608 + v95) & v73);
      v70 = v144;
      v62 = v603;
LABEL_84:
      v73 = v598;
      v75 = v595;
      if (v80)
      {
LABEL_85:
        v145 = v62;
        v146 = v70;
        (*(void (**)(void *, uint64_t))(v610 + 8))(v62, v601);
        swift_bridgeObjectRelease();
        v147 = (v608 + ((v72 + (((unint64_t)v145 + v146) & 0xFFFFFFFFFFFFFFF8)) & v617)) & v73;
        v148 = *(void (**)(unint64_t, uint64_t))(v599 + 8);
        v148(v147, v82);
        v149 = (v75 + v147) & v73;
        v148(v149, v82);
        swift_bridgeObjectRelease();
        v150 = (v594
              + ((((((v573 + v149) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v73;
        v91 = v575;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v599 + 48))(v150, 1, v82))
          v148(v150, v82);
        if (v620)
          v92 = v612;
        else
          v92 = v612 + 1;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v151 = (uint64_t *)((((((v92 + 7 + v150) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        v152 = v151[1];
        v93 = v577;
        if ((v152 & 0x3000000000000000) == 0)
          sub_23AAAE53C(*v151, v152);
        swift_bridgeObjectRelease();
        memcpy(v603, v81, v575+ ((((((((((v92 + 7 + v614) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
        goto LABEL_122;
      }
      v88 = (_QWORD *)(((unint64_t)v81 + v70) & 0xFFFFFFFFFFFFFFF8);
      v95 = ((unint64_t)v88 + v72) & v617;
      v96 = (v608 + v95) & v598;
      v153 = (v595 + v96) & v598;
LABEL_103:
      v156 = v81;
      v157 = v70;
      v158 = v62;
      (*(void (**)(void *, const void *, uint64_t))(v610 + 24))(v62, v156, v601);
      v159 = (_QWORD *)(((unint64_t)v158 + v157) & 0xFFFFFFFFFFFFFFF8);
      *v159 = *v88;
      v159[1] = v88[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v160 = ((unint64_t)v159 + v72) & v617;
      *(_BYTE *)v160 = *(_BYTE *)v95;
      v161 = v160 | 4;
      v162 = *(_DWORD *)(v95 | 4);
      *(_BYTE *)(v161 + 4) = *(_BYTE *)((v95 | 4) + 4);
      *(_DWORD *)v161 = v162;
      *(_WORD *)(v160 + 10) = *(_WORD *)(v95 + 10);
      v163 = (v608 + v160) & v73;
      v164 = *(void (**)(unint64_t, unint64_t, uint64_t))(v599 + 24);
      v164(v163, v96, v82);
      v164((v75 + v163) & v73, v153, v82);
      v165 = (_BYTE *)(((v75 + v163) & v73) + v612);
      *v165 = *(_BYTE *)(v153 + v612);
      v165[1] = *(_BYTE *)(v153 + v612 + 1);
      v165[2] = *(_BYTE *)(v153 + v612 + 2);
      v165[3] = *(_BYTE *)(v153 + v612 + 3);
      v165[4] = *(_BYTE *)(v153 + v612 + 4);
      v166 = (unint64_t)(v165 + 12) & 0xFFFFFFFFFFFFFFF8;
      v167 = (v153 + v612 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v166 = *(_QWORD *)v167;
      *(_QWORD *)(v166 + 8) = *(_QWORD *)(v167 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v166 + 16) = *(_BYTE *)(v167 + 16);
      *(_BYTE *)(v166 + 17) = *(_BYTE *)(v167 + 17);
      *(_BYTE *)(v166 + 18) = *(_BYTE *)(v167 + 18);
      *(_BYTE *)(v166 + 19) = *(_BYTE *)(v167 + 19);
      v168 = (v166 + 27) & 0xFFFFFFFFFFFFFFF8;
      v169 = (v167 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v168 = *(_QWORD *)v169;
      *(_BYTE *)(v168 + 8) = *(_BYTE *)(v169 + 8);
      *(_BYTE *)(v168 + 9) = *(_BYTE *)(v169 + 9);
      *(_BYTE *)(v168 + 10) = *(_BYTE *)(v169 + 10);
      *(_BYTE *)(v168 + 11) = *(_BYTE *)(v169 + 11);
      *(_BYTE *)(v168 + 12) = *(_BYTE *)(v169 + 12);
      v170 = (_QWORD *)((v166 + 47) & 0xFFFFFFFFFFFFF8);
      v171 = (_QWORD *)((v167 + 47) & 0xFFFFFFFFFFFFF8);
      *v170 = *v171;
      v172 = ((unint64_t)v170 + 15) & 0xFFFFFFFFFFFFFFF8;
      v173 = ((unint64_t)v171 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v172 = *(_QWORD *)v173;
      *(_BYTE *)(v172 + 8) = *(_BYTE *)(v173 + 8);
      *(_BYTE *)(v172 + 9) = *(_BYTE *)(v173 + 9);
      v174 = (char *)((v594 + v172) & v73);
      v175 = (char *)((v594 + v173) & v73);
      v176 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v599 + 48);
      v177 = v176(v174, 1, v82);
      v178 = v176(v175, 1, v82);
      if (v177)
      {
        if (!v178)
        {
          (*(void (**)(char *, char *, uint64_t))(v599 + 16))(v174, v175, v82);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v599 + 56))(v174, 0, 1, v82);
          v179 = v620;
          goto LABEL_112;
        }
      }
      else
      {
        if (!v178)
        {
          v164((unint64_t)v174, (unint64_t)v175, v82);
          v179 = v620;
          goto LABEL_112;
        }
        (*(void (**)(char *, uint64_t))(v599 + 8))(v174, v82);
      }
      v179 = v620;
      if (v620)
        v180 = v612;
      else
        v180 = v612 + 1;
      memcpy(v174, v175, v180);
LABEL_112:
      v93 = v577;
      if (v179)
        v92 = v612;
      else
        v92 = v612 + 1;
      v181 = (unint64_t)&v174[v92 + 7];
      v182 = (_QWORD *)((unint64_t)&v175[v92 + 7] & 0xFFFFFFFFFFFFFFF8);
      v183 = (v181 & 0xFFFFFFFFFFFFFFF8) + 15;
      *(_QWORD *)(v181 & 0xFFFFFFFFFFFFFFF8) = *v182;
      v184 = (v181 & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v185 = v183 & 0xFFFFFFFFFFFFFFF8;
      v186 = ((unint64_t)v182 + 15) & 0xFFFFFFFFFFFFFFF8;
      v187 = *(_QWORD *)v186;
      *(_BYTE *)(v185 + 8) = *(_BYTE *)(v186 + 8);
      *(_QWORD *)v185 = v187;
      v188 = (_QWORD *)(((unint64_t)v182 + 31) & 0xFFFFFFFFFFFFF8);
      *(_QWORD *)(v184 & 0xFFFFFFFFFFFFFFF8) = *v188;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v189 = (uint64_t *)(((v184 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      v190 = ((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFFFF8;
      v191 = v189[1];
      v192 = *(_QWORD *)(v190 + 8);
      v193 = v192 & 0x3000000000000000;
      if ((v191 & 0x3000000000000000) != 0)
      {
        if (!v193)
        {
          v194 = *(_QWORD *)v190;
          sub_23AAAE668(*(_QWORD *)v190, *(_QWORD *)(v190 + 8));
          *v189 = v194;
          v189[1] = v192;
LABEL_121:
          v91 = v575;
          v195 = ((unint64_t)v189 + 19) & 0xFFFFFFFFFFFFFFF8;
          v196 = (v190 + 19) & 0xFFFFFFFFFFFFFFF8;
          v197 = *(_QWORD *)v196;
          *(_BYTE *)(v195 + 8) = *(_BYTE *)(v196 + 8);
          *(_QWORD *)v195 = v197;
          *(_BYTE *)(v195 + 9) = *(_BYTE *)(v196 + 9);
          v198 = (v195 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v199 = (v196 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v200 = *(_DWORD *)v199;
          *(_BYTE *)(v198 + 4) = *(_BYTE *)(v199 + 4);
          *(_DWORD *)v198 = v200;
          v201 = (_QWORD *)((v195 + 25) & 0xFFFFFFFFFFFFFFF8);
          v202 = (_QWORD *)((v196 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v201 = *v202;
          v201[1] = v202[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_122:
          v143 = v92;
          goto LABEL_123;
        }
      }
      else
      {
        if (!v193)
        {
          v518 = *(_QWORD *)v190;
          sub_23AAAE668(*(_QWORD *)v190, *(_QWORD *)(v190 + 8));
          v519 = *v189;
          v520 = v189[1];
          *v189 = v518;
          v189[1] = v192;
          sub_23AAAE53C(v519, v520);
          goto LABEL_121;
        }
        sub_23AAAE53C(*v189, v191);
      }
      *(_OWORD *)v189 = *(_OWORD *)v190;
      goto LABEL_121;
    }
    v122 = v612 + 12;
    goto LABEL_100;
  }
  if ((v67 & 0x80000000) == 0)
  {
    v89 = v88[1];
    if (v89 >= 0xFFFFFFFF)
      LODWORD(v89) = -1;
    v80 = v89 + 1;
    goto LABEL_51;
  }
  v95 = ((unint64_t)v88 + v72) & v71;
  v96 = (v608 + v95) & v73;
  if (v620 > 0x7FFFFFFD)
  {
    v97 = v70;
    v98 = (*(uint64_t (**)(unint64_t))(v599 + 48))((v608 + v95) & v73);
    v70 = v97;
    v62 = v603;
    if (v98)
      goto LABEL_52;
LABEL_64:
    v88 = (_QWORD *)(((unint64_t)v81 + v70) & 0xFFFFFFFFFFFFFFF8);
    v95 = ((unint64_t)v88 + v72) & v617;
    v96 = (v608 + v95) & v598;
    v99 = (v595 + v96) & v598;
    goto LABEL_65;
  }
  v122 = v612 + 12;
LABEL_95:
  v99 = (v75 + v96) & v73;
  v154 = *(_QWORD *)(((v122 + v99) & 0xFFFFFFFFFFFFF8) + 8);
  if (v154 >= 0xFFFFFFFF)
    LODWORD(v154) = -1;
  if ((v154 + 1) >= 2)
    goto LABEL_52;
LABEL_65:
  v100 = v81;
  v101 = v70;
  v102 = v62;
  (*(void (**)(void *, const void *, uint64_t))(v610 + 16))(v62, v100, v601);
  v103 = (_QWORD *)(((unint64_t)v102 + v101) & 0xFFFFFFFFFFFFFFF8);
  *v103 = *v88;
  v103[1] = v88[1];
  v104 = ((unint64_t)v103 + v72) & v617;
  *(_BYTE *)v104 = *(_BYTE *)v95;
  v105 = v104 | 4;
  v106 = *(_DWORD *)(v95 | 4);
  *(_BYTE *)(v105 + 4) = *(_BYTE *)((v95 | 4) + 4);
  *(_DWORD *)v105 = v106;
  *(_WORD *)(v104 + 10) = *(_WORD *)(v95 + 10);
  v107 = (v608 + v104) & v598;
  v108 = *(void (**)(unint64_t, unint64_t, uint64_t))(v599 + 16);
  swift_bridgeObjectRetain();
  v108(v107, v96, v82);
  v109 = (v595 + v107) & v598;
  v108(v109, v99, v82);
  v110 = (_BYTE *)(v109 + v612);
  *v110 = *(_BYTE *)(v99 + v612);
  v110[1] = *(_BYTE *)(v99 + v612 + 1);
  v110[2] = *(_BYTE *)(v99 + v612 + 2);
  v110[3] = *(_BYTE *)(v99 + v612 + 3);
  v110[4] = *(_BYTE *)(v99 + v612 + 4);
  v111 = (v109 + v612 + 12) & 0xFFFFFFFFFFFFFFF8;
  v112 = (v99 + v612 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v111 = *(_QWORD *)v112;
  *(_QWORD *)(v111 + 8) = *(_QWORD *)(v112 + 8);
  *(_BYTE *)(v111 + 16) = *(_BYTE *)(v112 + 16);
  *(_BYTE *)(v111 + 17) = *(_BYTE *)(v112 + 17);
  *(_BYTE *)(v111 + 18) = *(_BYTE *)(v112 + 18);
  *(_BYTE *)(v111 + 19) = *(_BYTE *)(v112 + 19);
  v113 = (v111 + 27) & 0xFFFFFFFFFFFFFFF8;
  v114 = (v112 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v113 = *(_QWORD *)v114;
  *(_BYTE *)(v113 + 8) = *(_BYTE *)(v114 + 8);
  *(_BYTE *)(v113 + 9) = *(_BYTE *)(v114 + 9);
  *(_BYTE *)(v113 + 10) = *(_BYTE *)(v114 + 10);
  *(_BYTE *)(v113 + 11) = *(_BYTE *)(v114 + 11);
  *(_BYTE *)(v113 + 12) = *(_BYTE *)(v114 + 12);
  v115 = (_QWORD *)((v111 + 47) & 0xFFFFFFFFFFFFF8);
  v116 = (_QWORD *)((v112 + 47) & 0xFFFFFFFFFFFFF8);
  *v115 = *v116;
  v117 = ((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFFFF8;
  v118 = ((unint64_t)v116 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v117 = *(_QWORD *)v118;
  *(_BYTE *)(v117 + 8) = *(_BYTE *)(v118 + 8);
  *(_BYTE *)(v117 + 9) = *(_BYTE *)(v118 + 9);
  v119 = (void *)((v594 + v117) & v598);
  v120 = (const void *)((v594 + v118) & v598);
  v121 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v599 + 48);
  swift_bridgeObjectRetain();
  if (v121(v120, 1, v82))
  {
    if (v620)
      v92 = v612;
    else
      v92 = v612 + 1;
    memcpy(v119, v120, v92);
  }
  else
  {
    v108((unint64_t)v119, (unint64_t)v120, v82);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v599 + 56))(v119, 0, 1, v82);
    if (v620)
      v92 = v612;
    else
      v92 = v612 + 1;
  }
  v124 = (_QWORD *)(((unint64_t)v119 + v92 + 7) & 0xFFFFFFFFFFFFFFF8);
  v125 = (_QWORD *)(((unint64_t)v120 + v92 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v124 = *v125;
  v126 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
  v127 = ((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8;
  v128 = *(_QWORD *)v127;
  *(_BYTE *)(v126 + 8) = *(_BYTE *)(v127 + 8);
  *(_QWORD *)v126 = v128;
  v129 = (_QWORD *)(((unint64_t)v124 + 31) & 0xFFFFFFFFFFFFF8);
  v130 = (_QWORD *)(((unint64_t)v125 + 31) & 0xFFFFFFFFFFFFF8);
  *v129 = *v130;
  v131 = ((unint64_t)v129 + 15) & 0xFFFFFFFFFFFFFFF8;
  v132 = (uint64_t *)(((unint64_t)v130 + 15) & 0xFFFFFFFFFFFFFFF8);
  v133 = v132[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v93 = v577;
  if ((v133 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)v131 = *(_OWORD *)v132;
  }
  else
  {
    v134 = *v132;
    sub_23AAAE668(*v132, v133);
    *(_QWORD *)v131 = v134;
    *(_QWORD *)(v131 + 8) = v133;
  }
  v135 = (v131 + 19) & 0xFFFFFFFFFFFFFFF8;
  v136 = ((unint64_t)v132 + 19) & 0xFFFFFFFFFFFFFFF8;
  v137 = *(_QWORD *)v136;
  *(_BYTE *)(v135 + 8) = *(_BYTE *)(v136 + 8);
  *(_QWORD *)v135 = v137;
  *(_BYTE *)(v135 + 9) = *(_BYTE *)(v136 + 9);
  v138 = (v135 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v139 = (v136 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v140 = *(_DWORD *)v139;
  *(_BYTE *)(v138 + 4) = *(_BYTE *)(v139 + 4);
  *(_DWORD *)v138 = v140;
  v141 = (_QWORD *)((v135 + 25) & 0xFFFFFFFFFFFFFFF8);
  v142 = (_QWORD *)((v136 + 25) & 0xFFFFFFFFFFFFFFF8);
  *v141 = *v142;
  v141[1] = v142[1];
  swift_bridgeObjectRetain();
  v143 = v612;
  v91 = v575;
  if (!v620)
    goto LABEL_122;
LABEL_123:
  v582 = v614 + 7;
  v203 = (((((((((v614 + 7 + v143) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  v578 = swift_getAssociatedTypeWitness();
  v204 = *(_QWORD *)(v578 - 8);
  v205 = *(_DWORD *)(v204 + 80) & 0xF8;
  v206 = swift_getAssociatedTypeWitness();
  v207 = *(_QWORD *)(v206 - 8);
  v208 = *(unsigned __int8 *)(v207 + 80);
  v209 = v205 | v208 | 7;
  v210 = v93 | v209;
  v211 = v91 + (v93 | v209) + v203 + 16;
  v212 = (char *)(((unint64_t)v603 + v211) & ~(v93 | v209));
  v213 = (char *)(((unint64_t)v596 + v211) & ~v210);
  v214 = *(unsigned int *)(v204 + 84);
  v215 = *(unsigned int *)(v207 + 84);
  if (v214 <= v215)
    v216 = *(_DWORD *)(v207 + 84);
  else
    v216 = *(_DWORD *)(v204 + 84);
  if (v216 <= 0x7FFFFFFE)
    v217 = 2147483646;
  else
    v217 = v216;
  if (v217 <= v583)
    v218 = v583;
  else
    v218 = v217;
  if (v218 <= v586)
    v219 = v586;
  else
    v219 = v218;
  if (v219 <= 0x7FFFFFFF)
    v220 = 0x7FFFFFFF;
  else
    v220 = v219;
  v221 = ~v590;
  v222 = v588 + v590;
  v223 = ~v209;
  v224 = v588 + v209;
  v225 = (v588 + v209 + ((v588 + v590) & ~v590)) & ~v209;
  v591 = v204;
  v226 = *(_QWORD *)(v204 + 64) + 7;
  v227 = ~v208;
  v228 = v208 + 8;
  v229 = ((((*(_QWORD *)(v207 + 64) + 7 + ((v208 + 8 + (v226 & 0xFFFFFFFFFFFFFFF8)) & ~v208)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v230 = v592 + 16;
  v597 = (v592 + 16 + v225 + v229) & v617;
  v593 = v592 + 16;
  v569 = *(_QWORD *)(v207 + 64) + 7;
  v570 = v229;
  v576 = v206;
  v571 = v208 + 8;
  v572 = *(_QWORD *)(v206 - 8);
  v587 = ~v208;
  v589 = v226;
  if (v583 == v220)
  {
    v231 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v610 + 48);
    v232 = v223;
    v233 = v224;
    v234 = v221;
    v235 = v222;
    v236 = v231(v212, v583, v601);
    v237 = v231(v213, v583, v601);
    v222 = v235;
    v221 = v234;
    v224 = v233;
    v223 = v232;
    v238 = v612;
    v239 = v620;
    v240 = v600;
    if (v236)
    {
      if (!v237)
        goto LABEL_166;
      goto LABEL_160;
    }
    goto LABEL_228;
  }
  v604 = v213;
  v579 = v212;
  v241 = (v224 + ((unint64_t)&v212[v222] & v221)) & v223;
  if (v217 != v220)
  {
    v247 = v241 + v229;
    if ((v219 & 0x80000000) == 0)
    {
      v248 = *(_QWORD *)(v247 + 8);
      if (v248 >= 0xFFFFFFFF)
        LODWORD(v248) = -1;
      if ((_DWORD)v248 != -1)
        goto LABEL_150;
LABEL_201:
      v366 = (unint64_t)&v604[v222] & v221;
      v367 = (v224 + v366) & v223;
      if (v217 == v220)
      {
        v368 = v610;
        if ((_DWORD)v214 == v217)
        {
          v369 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v591 + 48);
          v370 = (v224 + v366) & v223;
          v371 = v214;
          v372 = v578;
        }
        else
        {
          v375 = (unint64_t *)((v589 + v367) & 0xFFFFFFFFFFFFFFF8);
          if (v216 <= 0x7FFFFFFE)
          {
            v376 = *v375;
            if (v376 >= 0xFFFFFFFF)
              LODWORD(v376) = -1;
            v238 = v612;
            v212 = v579;
            v213 = v604;
            v240 = v600;
            v377 = v601;
            if ((v376 + 1) >= 2)
              goto LABEL_229;
            goto LABEL_244;
          }
          v370 = ((unint64_t)v375 + v571) & v587;
          v369 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v572 + 48);
          v371 = v215;
          v372 = v576;
        }
        v400 = v223;
        v401 = v224;
        v402 = v221;
        v403 = v222;
        v237 = v369(v370, v371, v372);
        v222 = v403;
        v221 = v402;
        v224 = v401;
        v223 = v400;
        v238 = v612;
        v212 = v579;
        v213 = v604;
        v240 = v600;
      }
      else
      {
        v373 = v367 + v229;
        v240 = v600;
        v368 = v610;
        if ((v219 & 0x80000000) != 0)
        {
          v382 = (v608 + ((v593 + v373) & v617)) & v598;
          if (v620 <= 0x7FFFFFFD)
          {
            v533 = *(_QWORD *)(((v573 + ((v595 + v382) & v598)) & 0xFFFFFFFFFFFFF8) + 8);
            if (v533 >= 0xFFFFFFFF)
              LODWORD(v533) = -1;
            v238 = v612;
            v212 = v579;
            v213 = v604;
            v377 = v601;
            if ((v533 + 1) >= 2)
              goto LABEL_229;
            goto LABEL_244;
          }
          v383 = v223;
          v384 = v224;
          v385 = v221;
          v386 = v222;
          v237 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v599 + 48))(v382, v620, v600);
          v222 = v386;
          v221 = v385;
          v224 = v384;
          v223 = v383;
        }
        else
        {
          v374 = *(_QWORD *)(v373 + 8);
          if (v374 >= 0xFFFFFFFF)
            LODWORD(v374) = -1;
          v237 = v374 + 1;
        }
        v238 = v612;
        v212 = v579;
        v213 = v604;
      }
LABEL_228:
      v377 = v601;
      v368 = v610;
      if (v237)
      {
LABEL_229:
        v404 = *(void (**)(char *, uint64_t))(v368 + 8);
        v405 = v223;
        v406 = v224;
        v407 = v221;
        v408 = v222;
        v404(v212, v377);
        v409 = (unint64_t)&v212[v408] & v407;
        v404((char *)v409, v377);
        v410 = (v406 + v409) & v405;
        (*(void (**)(unint64_t, uint64_t))(v591 + 8))(v410, v578);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v572 + 8))((v571 + ((v589 + v410) & 0xFFFFFFFFFFFFFFF8)) & v587, v576);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v411 = (v593 + v410 + v570) & v617;
        v412 = *(void (**)(unint64_t, uint64_t))(v599 + 8);
        v412((v608 + v411) & v598, v240);
        v413 = (v595 + ((v608 + v411) & v598)) & v598;
        v412(v413, v240);
        swift_bridgeObjectRelease();
        v414 = (v594
              + ((((((v573 + v413) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v598;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v599 + 48))(v414, 1, v240))
          v412(v414, v240);
        if (v620)
          v261 = v238;
        else
          v261 = v238 + 1;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v415 = (uint64_t *)((((((v261 + 7 + v414) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        v416 = v415[1];
        v262 = v574;
        v263 = v614 + 7;
        v260 = v597;
        if ((v416 & 0x3000000000000000) == 0)
          sub_23AAAE53C(*v415, v416);
        swift_bridgeObjectRelease();
        v417 = (((((((((v261 + 7 + v614) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 19) & 0xFFFFFFFFFFFFFFF8)
              + 25) & 0xFFFFFFFFFFFFFFF8;
        v418 = v417 + v411;
        v419 = v417 + v411 + 16;
        v420 = *(void **)(v418 + 32);
        v421 = -1;
        if ((unint64_t)v420 < 0xFFFFFFFF)
          v421 = (int)v420;
        if (v421 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v419 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_23AAA12F0(*(_QWORD *)((((v419 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v419 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        memcpy(v212, v213, ((((v417 + v597 + 327) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
        goto LABEL_295;
      }
      v366 = (unint64_t)&v213[v222] & v221;
      v367 = (v224 + v366) & v223;
LABEL_244:
      v422 = *(void (**)(char *, char *, uint64_t))(v368 + 24);
      v423 = v212;
      v606 = v213;
      v424 = v367;
      v425 = v213;
      v426 = v223;
      v427 = v224;
      v428 = v221;
      v581 = v212;
      v429 = v238;
      v430 = v212;
      v431 = v222;
      v422(v423, v425, v377);
      v432 = &v430[v431];
      v433 = v429;
      v434 = (unint64_t)v432 & v428;
      v422((char *)v434, (char *)v366, v377);
      v435 = (v427 + v434) & v426;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v591 + 24))(v435, v424, v578);
      v436 = (_QWORD *)((v589 + v435) & 0xFFFFFFFFFFFFFFF8);
      v437 = (_QWORD *)((v589 + v424) & 0xFFFFFFFFFFFFFFF8);
      *v436 = *v437;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v438 = ((unint64_t)v437 + v571) & v587;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v572 + 24))(((unint64_t)v436 + v571) & v587, v438, v576);
      v439 = (_QWORD *)((v569 + (((unint64_t)v436 + v571) & v587)) & 0xFFFFFFFFFFFFFFF8);
      v440 = (v569 + v438) & 0xFFFFFFFFFFFFF8;
      v441 = *(_QWORD *)v440;
      v440 += 15;
      *v439 = v441;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v442 = (_QWORD *)(((unint64_t)v439 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v442 = *(_QWORD *)(v440 & 0xFFFFFFFFFFFFFFF8);
      v442[1] = *(_QWORD *)((v440 & 0xFFFFFFFFFFFFFFF8) + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v443 = (_QWORD *)(v435 + v570);
      *v443 = *(_QWORD *)(v424 + v570);
      v443[1] = *(_QWORD *)(v424 + v570 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v444 = ((unint64_t)v443 + v593) & v617;
      v445 = (v593 + v424 + v570) & v617;
      *(_BYTE *)v444 = *(_BYTE *)v445;
      v446 = v444 | 4;
      v447 = *(_DWORD *)(v445 | 4);
      *(_BYTE *)(v446 + 4) = *(_BYTE *)((v445 | 4) + 4);
      *(_DWORD *)v446 = v447;
      *(_WORD *)(v444 + 10) = *(_WORD *)(v445 + 0xA);
      v448 = *(void (**)(unint64_t, unint64_t, uint64_t))(v599 + 24);
      v448((v608 + v444) & v598, (v608 + v445) & v598, v600);
      v449 = (v595 + ((v608 + v444) & v598)) & v598;
      v450 = (v595 + ((v608 + v445) & v598)) & v598;
      v448(v449, v450, v600);
      v451 = (_BYTE *)(v449 + v429);
      v452 = v450 + v429;
      *v451 = *(_BYTE *)(v450 + v429);
      v451[1] = *(_BYTE *)(v450 + v429 + 1);
      v451[2] = *(_BYTE *)(v450 + v429 + 2);
      v451[3] = *(_BYTE *)(v450 + v429 + 3);
      v451[4] = *(_BYTE *)(v450 + v429 + 4);
      v453 = (v449 + v429 + 12) & 0xFFFFFFFFFFFFFFF8;
      v454 = (v452 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v453 = *(_QWORD *)v454;
      *(_QWORD *)(v453 + 8) = *(_QWORD *)(v454 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v453 + 16) = *(_BYTE *)(v454 + 16);
      *(_BYTE *)(v453 + 17) = *(_BYTE *)(v454 + 17);
      *(_BYTE *)(v453 + 18) = *(_BYTE *)(v454 + 18);
      *(_BYTE *)(v453 + 19) = *(_BYTE *)(v454 + 19);
      v455 = (v453 + 27) & 0xFFFFFFFFFFFFFFF8;
      v456 = (v454 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v455 = *(_QWORD *)v456;
      *(_BYTE *)(v455 + 8) = *(_BYTE *)(v456 + 8);
      *(_BYTE *)(v455 + 9) = *(_BYTE *)(v456 + 9);
      *(_BYTE *)(v455 + 10) = *(_BYTE *)(v456 + 10);
      *(_BYTE *)(v455 + 11) = *(_BYTE *)(v456 + 11);
      *(_BYTE *)(v455 + 12) = *(_BYTE *)(v456 + 12);
      v457 = (_QWORD *)((v453 + 47) & 0xFFFFFFFFFFFFF8);
      v458 = (_QWORD *)((v454 + 47) & 0xFFFFFFFFFFFFF8);
      *v457 = *v458;
      v459 = ((unint64_t)v457 + 15) & 0xFFFFFFFFFFFFFFF8;
      v460 = ((unint64_t)v458 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v459 = *(_QWORD *)v460;
      *(_BYTE *)(v459 + 8) = *(_BYTE *)(v460 + 8);
      *(_BYTE *)(v459 + 9) = *(_BYTE *)(v460 + 9);
      v461 = (char *)((v594 + v459) & v598);
      v462 = (char *)((v594 + v460) & v598);
      v463 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v599 + 48);
      LODWORD(v454) = v463(v461, 1, v600);
      v464 = v463(v462, 1, v600);
      if ((_DWORD)v454)
      {
        if (!v464)
        {
          (*(void (**)(char *, char *, uint64_t))(v599 + 16))(v461, v462, v600);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v599 + 56))(v461, 0, 1, v600);
          v465 = v620;
          goto LABEL_253;
        }
      }
      else
      {
        if (!v464)
        {
          v448((unint64_t)v461, (unint64_t)v462, v600);
          v465 = v620;
          goto LABEL_253;
        }
        (*(void (**)(char *, uint64_t))(v599 + 8))(v461, v600);
      }
      v465 = v620;
      if (v620)
        v466 = v433;
      else
        v466 = v433 + 1;
      memcpy(v461, v462, v466);
LABEL_253:
      if (v465)
        v467 = v433;
      else
        v467 = v433 + 1;
      v619 = v467;
      v468 = v467 + 7;
      v469 = (unint64_t)&v461[v467 + 7];
      v470 = (_QWORD *)((unint64_t)&v462[v468] & 0xFFFFFFFFFFFFFFF8);
      v471 = (unint64_t)v470 + 31;
      v472 = (v469 & 0xFFFFFFFFFFFFFFF8) + 15;
      *(_QWORD *)(v469 & 0xFFFFFFFFFFFFFFF8) = *v470;
      v473 = (v469 & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v474 = v472 & 0xFFFFFFFFFFFFFFF8;
      v475 = ((unint64_t)v470 + 15) & 0xFFFFFFFFFFFFFFF8;
      v476 = *(_QWORD *)v475;
      *(_BYTE *)(v474 + 8) = *(_BYTE *)(v475 + 8);
      *(_QWORD *)v474 = v476;
      v477 = (_QWORD *)(v473 & 0xFFFFFFFFFFFFFFF8);
      v478 = (v471 & 0xFFFFFFFFFFFFF8) + 15;
      *v477 = *(_QWORD *)(v471 & 0xFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v479 = (uint64_t *)(((unint64_t)v477 + 15) & 0xFFFFFFFFFFFFFFF8);
      v480 = v478 & 0xFFFFFFFFFFFFFFF8;
      v481 = v479[1];
      v482 = *(_QWORD *)(v480 + 8);
      v483 = v482 & 0x3000000000000000;
      if ((v481 & 0x3000000000000000) != 0)
      {
        if (!v483)
        {
          v484 = *(_QWORD *)v480;
          sub_23AAAE668(*(_QWORD *)v480, *(_QWORD *)(v480 + 8));
          *v479 = v484;
          v479[1] = v482;
          goto LABEL_262;
        }
      }
      else
      {
        if (!v483)
        {
          v521 = *(_QWORD *)v480;
          sub_23AAAE668(*(_QWORD *)v480, *(_QWORD *)(v480 + 8));
          v522 = *v479;
          v523 = v479[1];
          *v479 = v521;
          v479[1] = v482;
          sub_23AAAE53C(v522, v523);
LABEL_262:
          v212 = v581;
          v485 = ((unint64_t)v479 + 19) & 0xFFFFFFFFFFFFFFF8;
          v486 = (v480 + 19) & 0xFFFFFFFFFFFFFFF8;
          v487 = *(_QWORD *)v486;
          *(_BYTE *)(v485 + 8) = *(_BYTE *)(v486 + 8);
          *(_QWORD *)v485 = v487;
          *(_BYTE *)(v485 + 9) = *(_BYTE *)(v486 + 9);
          v488 = (v485 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v489 = (v486 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          v490 = *(_DWORD *)v489;
          *(_BYTE *)(v488 + 4) = *(_BYTE *)(v489 + 4);
          *(_DWORD *)v488 = v490;
          v491 = (_QWORD *)((v485 + 25) & 0xFFFFFFFFFFFFFFF8);
          v492 = (_QWORD *)((v486 + 25) & 0xFFFFFFFFFFFFFFF8);
          *v491 = *v492;
          v491[1] = v492[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v496 = ((((((((((v468 + v614) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          v493 = v444 + v496;
          v494 = (__int128 *)(v445 + v496);
          v495 = *(void **)(v493 + 16);
          LODWORD(v496) = -1;
          if ((unint64_t)v495 >= 0xFFFFFFFF)
            LODWORD(v497) = -1;
          else
            v497 = *(_QWORD *)(v493 + 16);
          v498 = v497 - 1;
          if (*((_QWORD *)v494 + 2) < 0xFFFFFFFFuLL)
            v496 = *((_QWORD *)v494 + 2);
          v499 = v496 - 1;
          if ((v498 & 0x80000000) == 0)
          {
            if (v499 < 0)
            {
              *(_QWORD *)v493 = *(_QWORD *)v494;
              *(_BYTE *)(v493 + 8) = *((_BYTE *)v494 + 8);
              *(_BYTE *)(v493 + 9) = *((_BYTE *)v494 + 9);
              v500 = (void *)*((_QWORD *)v494 + 2);
              v501 = v500;
              *(_QWORD *)(v493 + 16) = v500;
              v502 = (void *)*((_QWORD *)v494 + 3);
              v503 = v502;
              *(_QWORD *)(v493 + 24) = v502;
              *(_BYTE *)(v493 + 32) = *((_BYTE *)v494 + 32);
              *(_BYTE *)(v493 + 33) = *((_BYTE *)v494 + 33);
              *(_BYTE *)(v493 + 34) = *((_BYTE *)v494 + 34);
              *(_QWORD *)(v493 + 40) = *((_QWORD *)v494 + 5);
              *(_QWORD *)(v493 + 48) = *((_QWORD *)v494 + 6);
              *(_QWORD *)(v493 + 56) = *((_QWORD *)v494 + 7);
              *(_QWORD *)(v493 + 64) = *((_QWORD *)v494 + 8);
              *(_BYTE *)(v493 + 72) = *((_BYTE *)v494 + 72);
              *(_QWORD *)(v493 + 80) = *((_QWORD *)v494 + 10);
              *(_QWORD *)(v493 + 88) = *((_QWORD *)v494 + 11);
              v621 = (void *)*((_QWORD *)v494 + 12);
              *(_QWORD *)(v493 + 96) = v621;
              *(_BYTE *)(v493 + 104) = *((_BYTE *)v494 + 104);
              *(_BYTE *)(v493 + 105) = *((_BYTE *)v494 + 105);
              *(_QWORD *)(v493 + 112) = *((_QWORD *)v494 + 14);
              *(_QWORD *)(v493 + 120) = *((_QWORD *)v494 + 15);
              *(_QWORD *)(v493 + 128) = *((_QWORD *)v494 + 16);
              *(_QWORD *)(v493 + 136) = *((_QWORD *)v494 + 17);
              *(_QWORD *)(v493 + 144) = *((_QWORD *)v494 + 18);
              *(_QWORD *)(v493 + 152) = *((_QWORD *)v494 + 19);
              *(_QWORD *)(v493 + 160) = *((_QWORD *)v494 + 20);
              *(_QWORD *)(v493 + 168) = *((_QWORD *)v494 + 21);
              *(_BYTE *)(v493 + 176) = *((_BYTE *)v494 + 176);
              *(_QWORD *)(v493 + 184) = *((_QWORD *)v494 + 23);
              v504 = *((_QWORD *)v494 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v505 = v621;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v504)
              {
                *(_QWORD *)(v493 + 192) = v504;
                *(_QWORD *)(v493 + 200) = *((_QWORD *)v494 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v493 + 192) = v494[12];
              }
              v262 = v574;
              v212 = v581;
              v263 = v614 + 7;
              v213 = v606;
              *(_QWORD *)(v493 + 208) = *((_QWORD *)v494 + 26);
              *(_QWORD *)(v493 + 216) = *((_QWORD *)v494 + 27);
              *(_QWORD *)(v493 + 224) = *((_QWORD *)v494 + 28);
              *(_QWORD *)(v493 + 232) = *((_QWORD *)v494 + 29);
              *(_QWORD *)(v493 + 240) = *((_QWORD *)v494 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_294;
            }
            goto LABEL_275;
          }
          if ((v499 & 0x80000000) == 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v493 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_275:
            v506 = *v494;
            v507 = v494[1];
            v508 = v494[3];
            *(_OWORD *)(v493 + 32) = v494[2];
            *(_OWORD *)(v493 + 48) = v508;
            *(_OWORD *)v493 = v506;
            *(_OWORD *)(v493 + 16) = v507;
            v509 = v494[4];
            v510 = v494[5];
            v511 = v494[7];
            *(_OWORD *)(v493 + 96) = v494[6];
            *(_OWORD *)(v493 + 112) = v511;
            *(_OWORD *)(v493 + 64) = v509;
            *(_OWORD *)(v493 + 80) = v510;
            v512 = v494[8];
            v513 = v494[9];
            v514 = v494[11];
            *(_OWORD *)(v493 + 160) = v494[10];
            *(_OWORD *)(v493 + 176) = v514;
            *(_OWORD *)(v493 + 128) = v512;
            *(_OWORD *)(v493 + 144) = v513;
            v515 = v494[12];
            v516 = v494[13];
            v517 = v494[14];
            *(_QWORD *)(v493 + 240) = *((_QWORD *)v494 + 30);
            *(_OWORD *)(v493 + 208) = v516;
            *(_OWORD *)(v493 + 224) = v517;
            *(_OWORD *)(v493 + 192) = v515;
            v262 = v574;
            v263 = v614 + 7;
            v213 = v606;
LABEL_294:
            v534 = (_OWORD *)((v493 + 255) & 0xFFFFFFFFFFFFFFF8);
            v535 = (__int128 *)(((unint64_t)v494 + 255) & 0xFFFFFFFFFFFFFFF8);
            v536 = *v535;
            *(_OWORD *)((char *)v534 + 9) = *(__int128 *)((char *)v535 + 9);
            *v534 = v536;
            v537 = (v493 + 287) & 0xFFFFFFFFFFFFFFF8;
            v538 = ((unint64_t)v494 + 287) & 0xFFFFFFFFFFFFFFF8;
            v539 = *(_OWORD *)v538;
            *(_BYTE *)(v537 + 16) = *(_BYTE *)(v538 + 16);
            *(_OWORD *)v537 = v539;
            v540 = (_QWORD *)((v493 + 311) & 0xFFFFFFFFFFFFF8);
            v541 = ((unint64_t)v494 + 311) & 0xFFFFFFFFFFFFF8;
            v542 = *(_QWORD *)v541;
            v541 += 15;
            *v540 = v542;
            v543 = (uint64_t *)(((unint64_t)v540 + 15) & 0xFFFFFFFFFFFFFFF8);
            v544 = *(_QWORD *)(v541 & 0xFFFFFFFFFFFFFFF8);
            v545 = *(_QWORD *)((v541 & 0xFFFFFFFFFFFFFFF8) + 8);
            sub_23AA7F2D4(v544, v545);
            v546 = *v543;
            v547 = v543[1];
            *v543 = v544;
            v543[1] = v545;
            sub_23AAA12F0(v546, v547);
            v260 = v597;
            v261 = v619;
LABEL_295:
            v289 = v261;
            goto LABEL_296;
          }
          *(_QWORD *)v493 = *(_QWORD *)v494;
          *(_BYTE *)(v493 + 8) = *((_BYTE *)v494 + 8);
          *(_BYTE *)(v493 + 9) = *((_BYTE *)v494 + 9);
          v524 = (void *)*((_QWORD *)v494 + 2);
          v525 = v524;
          *(_QWORD *)(v493 + 16) = v524;

          v526 = *(void **)(v493 + 24);
          v527 = (void *)*((_QWORD *)v494 + 3);
          v528 = v527;
          *(_QWORD *)(v493 + 24) = v527;

          *(_BYTE *)(v493 + 32) = *((_BYTE *)v494 + 32);
          *(_BYTE *)(v493 + 33) = *((_BYTE *)v494 + 33);
          *(_BYTE *)(v493 + 34) = *((_BYTE *)v494 + 34);
          *(_QWORD *)(v493 + 40) = *((_QWORD *)v494 + 5);
          *(_QWORD *)(v493 + 48) = *((_QWORD *)v494 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v493 + 56) = *((_QWORD *)v494 + 7);
          *(_QWORD *)(v493 + 64) = *((_QWORD *)v494 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(v493 + 72) = *((_BYTE *)v494 + 72);
          *(_QWORD *)(v493 + 80) = *((_QWORD *)v494 + 10);
          *(_QWORD *)(v493 + 88) = *((_QWORD *)v494 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v529 = *(void **)(v493 + 96);
          v530 = (void *)*((_QWORD *)v494 + 12);
          *(_QWORD *)(v493 + 96) = v530;
          v531 = v530;

          *(_BYTE *)(v493 + 104) = *((_BYTE *)v494 + 104);
          *(_BYTE *)(v493 + 105) = *((_BYTE *)v494 + 105);
          *(_QWORD *)(v493 + 112) = *((_QWORD *)v494 + 14);
          *(_QWORD *)(v493 + 120) = *((_QWORD *)v494 + 15);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v493 + 128) = *((_QWORD *)v494 + 16);
          *(_QWORD *)(v493 + 136) = *((_QWORD *)v494 + 17);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v493 + 144) = *((_QWORD *)v494 + 18);
          *(_QWORD *)(v493 + 152) = *((_QWORD *)v494 + 19);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v493 + 160) = *((_QWORD *)v494 + 20);
          *(_QWORD *)(v493 + 168) = *((_QWORD *)v494 + 21);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_BYTE *)(v493 + 176) = *((_BYTE *)v494 + 176);
          *(_QWORD *)(v493 + 184) = *((_QWORD *)v494 + 23);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v532 = *((_QWORD *)v494 + 24);
          if (*(_QWORD *)(v493 + 192))
          {
            v262 = v574;
            v263 = v614 + 7;
            if (v532)
            {
              *(_QWORD *)(v493 + 192) = v532;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(_QWORD *)(v493 + 200) = *((_QWORD *)v494 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
LABEL_293:
              v213 = v606;
              *(_QWORD *)(v493 + 208) = *((_QWORD *)v494 + 26);
              *(_QWORD *)(v493 + 216) = *((_QWORD *)v494 + 27);
              *(_QWORD *)(v493 + 224) = *((_QWORD *)v494 + 28);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              *(_QWORD *)(v493 + 232) = *((_QWORD *)v494 + 29);
              *(_QWORD *)(v493 + 240) = *((_QWORD *)v494 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_294;
            }
            sub_23AC40C1C(v493 + 192);
          }
          else
          {
            v262 = v574;
            v263 = v614 + 7;
            if (v532)
            {
              *(_QWORD *)(v493 + 192) = v532;
              *(_QWORD *)(v493 + 200) = *((_QWORD *)v494 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_293;
            }
          }
          *(_OWORD *)(v493 + 192) = v494[12];
          goto LABEL_293;
        }
        sub_23AAAE53C(*v479, v481);
      }
      *(_OWORD *)v479 = *(_OWORD *)v480;
      goto LABEL_262;
    }
    v308 = (v608 + ((v230 + v247) & v617)) & v598;
    if (v620 <= 0x7FFFFFFD)
    {
      v307 = *(_QWORD *)(((v573 + ((v595 + v308) & v598)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_198:
      if (v307 >= 0xFFFFFFFF)
        LODWORD(v307) = -1;
      if ((v307 + 1) >= 2)
        goto LABEL_150;
      goto LABEL_201;
    }
    v309 = *(uint64_t (**)(unint64_t))(v599 + 48);
LABEL_193:
    v356 = v229;
    v357 = v223;
    v358 = v224;
    v359 = v221;
    v585 = v222;
    v360 = v309(v308);
    v222 = v585;
    v221 = v359;
    v224 = v358;
    v223 = v357;
    v229 = v356;
    if (v360)
      goto LABEL_150;
    goto LABEL_201;
  }
  if ((_DWORD)v214 != v217)
  {
    v306 = (unint64_t *)((v226 + v241) & 0xFFFFFFFFFFFFFFF8);
    if (v216 <= 0x7FFFFFFE)
    {
      v307 = *v306;
      goto LABEL_198;
    }
    v308 = ((unint64_t)v306 + v228) & v227;
    v309 = *(uint64_t (**)(unint64_t))(v207 + 48);
    goto LABEL_193;
  }
  v242 = ((((*(_QWORD *)(v207 + 64) + 7 + ((v208 + 8 + (v226 & 0xFFFFFFFFFFFFFFF8)) & ~v208)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v243 = v223;
  v244 = v224;
  v245 = v221;
  v584 = v222;
  v246 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v591 + 48))(v241, v214, v578);
  v222 = v584;
  v221 = v245;
  v224 = v244;
  v223 = v243;
  v229 = v242;
  if (!v246)
    goto LABEL_201;
LABEL_150:
  v249 = (unint64_t)&v604[v222] & v221;
  v250 = (v224 + v249) & v223;
  if (v217 == v220)
  {
    if ((_DWORD)v214 == v217)
    {
      v251 = (v224 + v249) & v223;
      v252 = v223;
      v253 = v224;
      v254 = v221;
      v255 = v222;
      v256 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v591 + 48))(v251, v214, v578);
      v222 = v255;
      v221 = v254;
      v224 = v253;
      v223 = v252;
LABEL_157:
      v238 = v612;
LABEL_158:
      v239 = v620;
      goto LABEL_159;
    }
    v353 = (unint64_t *)((v589 + v250) & 0xFFFFFFFFFFFFFFF8);
    v238 = v612;
    if (v216 > 0x7FFFFFFE)
    {
      v378 = v223;
      v379 = v224;
      v380 = v221;
      v381 = v222;
      v256 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v572 + 48))(((unint64_t)v353 + v571) & v587, v215, v576);
      v222 = v381;
      v221 = v380;
      v224 = v379;
      v223 = v378;
      goto LABEL_158;
    }
    v354 = *v353;
    if (v354 >= 0xFFFFFFFF)
      LODWORD(v354) = -1;
    v355 = (v354 + 1) >= 2;
    v239 = v620;
  }
  else
  {
    v257 = v250 + v229;
    if ((v219 & 0x80000000) == 0)
    {
      v258 = *(_QWORD *)(v257 + 8);
      if (v258 >= 0xFFFFFFFF)
        LODWORD(v258) = -1;
      v256 = v258 + 1;
      goto LABEL_157;
    }
    v361 = (v608 + ((v593 + v257) & v617)) & v598;
    v239 = v620;
    if (v620 > 0x7FFFFFFD)
    {
      v362 = v223;
      v363 = v224;
      v364 = v221;
      v365 = v222;
      v256 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v599 + 48))(v361, v620, v600);
      v222 = v365;
      v221 = v364;
      v224 = v363;
      v223 = v362;
      v238 = v612;
LABEL_159:
      v212 = v579;
      v213 = v604;
      if (!v256)
      {
LABEL_166:
        v249 = (unint64_t)&v213[v222] & v221;
        v250 = (v224 + v249) & v223;
        goto LABEL_167;
      }
LABEL_160:
      v259 = 7;
      if (!v239)
        v259 = 8;
      v260 = v597;
      if (v239)
        v261 = v238;
      else
        v261 = v238 + 1;
      memcpy(v212, v213, ((((((((((((((v259 + v238 + v614) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ v597+ 327) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
      v262 = v574;
      v263 = v614 + 7;
      goto LABEL_295;
    }
    v399 = *(_QWORD *)(((v573 + ((v595 + v361) & v598)) & 0xFFFFFFFFFFFFF8) + 8);
    if (v399 >= 0xFFFFFFFF)
      LODWORD(v399) = -1;
    v355 = (v399 + 1) >= 2;
    v238 = v612;
  }
  v212 = v579;
  v213 = v604;
  if (v355)
    goto LABEL_160;
LABEL_167:
  v605 = v213;
  v264 = *(void (**)(char *, char *, uint64_t))(v610 + 16);
  v265 = v212;
  v266 = v223;
  v267 = v224;
  v268 = v221;
  v269 = v212;
  v580 = v212;
  v270 = v222;
  v264(v265, v213, v601);
  v271 = (unint64_t)&v269[v270] & v268;
  v264((char *)v271, (char *)v249, v601);
  v272 = (v267 + v271) & v266;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v591 + 16))(v272, v250, v578);
  v273 = (_QWORD *)((v589 + v272) & 0xFFFFFFFFFFFFFFF8);
  v274 = (_QWORD *)((v589 + v250) & 0xFFFFFFFFFFFFFFF8);
  *v273 = *v274;
  v275 = ((unint64_t)v273 + v571) & v587;
  v276 = ((unint64_t)v274 + v571) & v587;
  v277 = *(void (**)(unint64_t, unint64_t, uint64_t))(v572 + 16);
  swift_bridgeObjectRetain();
  v277(v275, v276, v576);
  v278 = (_QWORD *)((v569 + v275) & 0xFFFFFFFFFFFFF8);
  v279 = (_QWORD *)((v569 + v276) & 0xFFFFFFFFFFFFF8);
  *v278 = *v279;
  v280 = (_QWORD *)(((unint64_t)v278 + 15) & 0xFFFFFFFFFFFFFFF8);
  v281 = (_QWORD *)(((unint64_t)v279 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v280 = *v281;
  v280[1] = v281[1];
  v282 = (_QWORD *)(v272 + v570);
  *v282 = *(_QWORD *)(v250 + v570);
  v282[1] = *(_QWORD *)(v250 + v570 + 8);
  v283 = (v593 + v272 + v570) & v617;
  v284 = (v593 + v250 + v570) & v617;
  *(_BYTE *)v283 = *(_BYTE *)v284;
  v285 = v283 | 4;
  v286 = *(_DWORD *)(v284 | 4);
  *(_BYTE *)(v285 + 4) = *(_BYTE *)((v284 | 4) + 4);
  *(_DWORD *)v285 = v286;
  *(_WORD *)(v283 + 10) = *(_WORD *)(v284 + 10);
  v287 = (v608 + v283) & v598;
  v288 = (v608 + v284) & v598;
  v289 = v612;
  v290 = *(void (**)(unint64_t, unint64_t, uint64_t))(v599 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v290(v287, v288, v600);
  v291 = (v595 + v288) & v598;
  v290((v595 + v287) & v598, v291, v600);
  v292 = (_BYTE *)(((v595 + v287) & v598) + v612);
  *v292 = *(_BYTE *)(v291 + v612);
  v292[1] = *(_BYTE *)(v291 + v612 + 1);
  v292[2] = *(_BYTE *)(v291 + v612 + 2);
  v292[3] = *(_BYTE *)(v291 + v612 + 3);
  v292[4] = *(_BYTE *)(v291 + v612 + 4);
  v293 = (unint64_t)(v292 + 12) & 0xFFFFFFFFFFFFFFF8;
  v294 = (v291 + v612 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v293 = *(_QWORD *)v294;
  *(_QWORD *)(v293 + 8) = *(_QWORD *)(v294 + 8);
  *(_BYTE *)(v293 + 16) = *(_BYTE *)(v294 + 16);
  *(_BYTE *)(v293 + 17) = *(_BYTE *)(v294 + 17);
  *(_BYTE *)(v293 + 18) = *(_BYTE *)(v294 + 18);
  *(_BYTE *)(v293 + 19) = *(_BYTE *)(v294 + 19);
  v295 = (v293 + 27) & 0xFFFFFFFFFFFFFFF8;
  v296 = (v294 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v295 = *(_QWORD *)v296;
  *(_BYTE *)(v295 + 8) = *(_BYTE *)(v296 + 8);
  *(_BYTE *)(v295 + 9) = *(_BYTE *)(v296 + 9);
  *(_BYTE *)(v295 + 10) = *(_BYTE *)(v296 + 10);
  *(_BYTE *)(v295 + 11) = *(_BYTE *)(v296 + 11);
  *(_BYTE *)(v295 + 12) = *(_BYTE *)(v296 + 12);
  v297 = (_QWORD *)((v293 + 47) & 0xFFFFFFFFFFFFF8);
  v298 = (_QWORD *)((v294 + 47) & 0xFFFFFFFFFFFFF8);
  *v297 = *v298;
  v299 = ((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8;
  v300 = ((unint64_t)v298 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v299 = *(_QWORD *)v300;
  *(_BYTE *)(v299 + 8) = *(_BYTE *)(v300 + 8);
  *(_BYTE *)(v299 + 9) = *(_BYTE *)(v300 + 9);
  v301 = (void *)((v594 + v299) & v598);
  v302 = (const void *)((v594 + v300) & v598);
  v303 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v599 + 48);
  swift_bridgeObjectRetain();
  if (v303(v302, 1, v600))
  {
    v304 = v580;
    if (v620)
      v305 = v612;
    else
      v305 = v612 + 1;
    memcpy(v301, v302, v305);
  }
  else
  {
    v304 = v580;
    v290((unint64_t)v301, (unint64_t)v302, v600);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v599 + 56))(v301, 0, 1, v600);
    if (v620)
      v305 = v612;
    else
      v305 = v612 + 1;
  }
  v618 = v305;
  v310 = v305 + 7;
  v311 = (_QWORD *)(((unint64_t)v301 + v310) & 0xFFFFFFFFFFFFFFF8);
  v312 = (_QWORD *)(((unint64_t)v302 + v310) & 0xFFFFFFFFFFFFFFF8);
  *v311 = *v312;
  v313 = ((unint64_t)v311 + 15) & 0xFFFFFFFFFFFFFFF8;
  v314 = ((unint64_t)v312 + 15) & 0xFFFFFFFFFFFFFFF8;
  v315 = *(_QWORD *)v314;
  *(_BYTE *)(v313 + 8) = *(_BYTE *)(v314 + 8);
  *(_QWORD *)v313 = v315;
  v316 = (_QWORD *)(((unint64_t)v311 + 31) & 0xFFFFFFFFFFFFF8);
  v317 = (_QWORD *)(((unint64_t)v312 + 31) & 0xFFFFFFFFFFFFF8);
  *v316 = *v317;
  v318 = ((unint64_t)v316 + 15) & 0xFFFFFFFFFFFFFFF8;
  v319 = (uint64_t *)(((unint64_t)v317 + 15) & 0xFFFFFFFFFFFFFFF8);
  v320 = v319[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v320 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)v318 = *(_OWORD *)v319;
  }
  else
  {
    v321 = *v319;
    sub_23AAAE668(*v319, v320);
    *(_QWORD *)v318 = v321;
    *(_QWORD *)(v318 + 8) = v320;
  }
  v212 = v304;
  v213 = v605;
  v322 = (v318 + 19) & 0xFFFFFFFFFFFFFFF8;
  v323 = ((unint64_t)v319 + 19) & 0xFFFFFFFFFFFFFFF8;
  v324 = *(_QWORD *)v323;
  *(_BYTE *)(v322 + 8) = *(_BYTE *)(v323 + 8);
  *(_QWORD *)v322 = v324;
  *(_BYTE *)(v322 + 9) = *(_BYTE *)(v323 + 9);
  v325 = (v322 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v326 = (v323 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v327 = *(_DWORD *)v326;
  *(_BYTE *)(v325 + 4) = *(_BYTE *)(v326 + 4);
  *(_DWORD *)v325 = v327;
  v328 = (_QWORD *)((v322 + 25) & 0xFFFFFFFFFFFFFFF8);
  v329 = (_QWORD *)((v323 + 25) & 0xFFFFFFFFFFFFFFF8);
  *v328 = *v329;
  v328[1] = v329[1];
  v330 = ((((((((((v310 + v614) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v331 = v283 + v330;
  v332 = (__int128 *)(v284 + v330);
  v333 = *(_QWORD *)(v284 + v330 + 16);
  if (v333 >= 0xFFFFFFFF)
    LODWORD(v333) = -1;
  v334 = v333 - 1;
  swift_bridgeObjectRetain();
  if (v334 < 0)
  {
    *(_QWORD *)v331 = *(_QWORD *)v332;
    *(_BYTE *)(v331 + 8) = *((_BYTE *)v332 + 8);
    *(_BYTE *)(v331 + 9) = *((_BYTE *)v332 + 9);
    v347 = (void *)*((_QWORD *)v332 + 2);
    v348 = v347;
    *(_QWORD *)(v331 + 16) = v347;
    v349 = (void *)*((_QWORD *)v332 + 3);
    v350 = v349;
    *(_QWORD *)(v331 + 24) = v349;
    *(_BYTE *)(v331 + 32) = *((_BYTE *)v332 + 32);
    *(_BYTE *)(v331 + 33) = *((_BYTE *)v332 + 33);
    *(_BYTE *)(v331 + 34) = *((_BYTE *)v332 + 34);
    *(_QWORD *)(v331 + 40) = *((_QWORD *)v332 + 5);
    *(_QWORD *)(v331 + 48) = *((_QWORD *)v332 + 6);
    *(_QWORD *)(v331 + 56) = *((_QWORD *)v332 + 7);
    *(_QWORD *)(v331 + 64) = *((_QWORD *)v332 + 8);
    *(_BYTE *)(v331 + 72) = *((_BYTE *)v332 + 72);
    *(_QWORD *)(v331 + 80) = *((_QWORD *)v332 + 10);
    *(_QWORD *)(v331 + 88) = *((_QWORD *)v332 + 11);
    v615 = (void *)*((_QWORD *)v332 + 12);
    *(_QWORD *)(v331 + 96) = v615;
    *(_BYTE *)(v331 + 104) = *((_BYTE *)v332 + 104);
    *(_BYTE *)(v331 + 105) = *((_BYTE *)v332 + 105);
    *(_QWORD *)(v331 + 112) = *((_QWORD *)v332 + 14);
    *(_QWORD *)(v331 + 120) = *((_QWORD *)v332 + 15);
    *(_QWORD *)(v331 + 128) = *((_QWORD *)v332 + 16);
    *(_QWORD *)(v331 + 136) = *((_QWORD *)v332 + 17);
    *(_QWORD *)(v331 + 144) = *((_QWORD *)v332 + 18);
    *(_QWORD *)(v331 + 152) = *((_QWORD *)v332 + 19);
    *(_QWORD *)(v331 + 160) = *((_QWORD *)v332 + 20);
    *(_QWORD *)(v331 + 168) = *((_QWORD *)v332 + 21);
    *(_BYTE *)(v331 + 176) = *((_BYTE *)v332 + 176);
    *(_QWORD *)(v331 + 184) = *((_QWORD *)v332 + 23);
    v351 = *((_QWORD *)v332 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v352 = v615;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v351)
    {
      *(_QWORD *)(v331 + 192) = v351;
      *(_QWORD *)(v331 + 200) = *((_QWORD *)v332 + 25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v331 + 192) = v332[12];
    }
    v262 = v574;
    v289 = v612;
    v212 = v580;
    v263 = v582;
    v213 = v605;
    v260 = v597;
    *(_QWORD *)(v331 + 208) = *((_QWORD *)v332 + 26);
    *(_QWORD *)(v331 + 216) = *((_QWORD *)v332 + 27);
    *(_QWORD *)(v331 + 224) = *((_QWORD *)v332 + 28);
    *(_QWORD *)(v331 + 232) = *((_QWORD *)v332 + 29);
    *(_QWORD *)(v331 + 240) = *((_QWORD *)v332 + 30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v335 = *v332;
    v336 = v332[1];
    v337 = v332[3];
    *(_OWORD *)(v331 + 32) = v332[2];
    *(_OWORD *)(v331 + 48) = v337;
    *(_OWORD *)v331 = v335;
    *(_OWORD *)(v331 + 16) = v336;
    v338 = v332[4];
    v339 = v332[5];
    v340 = v332[7];
    *(_OWORD *)(v331 + 96) = v332[6];
    *(_OWORD *)(v331 + 112) = v340;
    *(_OWORD *)(v331 + 64) = v338;
    *(_OWORD *)(v331 + 80) = v339;
    v341 = v332[8];
    v342 = v332[9];
    v343 = v332[11];
    *(_OWORD *)(v331 + 160) = v332[10];
    *(_OWORD *)(v331 + 176) = v343;
    *(_OWORD *)(v331 + 128) = v341;
    *(_OWORD *)(v331 + 144) = v342;
    v344 = v332[12];
    v345 = v332[13];
    v346 = v332[14];
    *(_QWORD *)(v331 + 240) = *((_QWORD *)v332 + 30);
    *(_OWORD *)(v331 + 208) = v345;
    *(_OWORD *)(v331 + 224) = v346;
    *(_OWORD *)(v331 + 192) = v344;
    v262 = v574;
    v263 = v614 + 7;
    v260 = v597;
  }
  v387 = (_OWORD *)((v331 + 255) & 0xFFFFFFFFFFFFFFF8);
  v388 = (__int128 *)(((unint64_t)v332 + 255) & 0xFFFFFFFFFFFFFFF8);
  v389 = *v388;
  *(_OWORD *)((char *)v387 + 9) = *(__int128 *)((char *)v388 + 9);
  *v387 = v389;
  v390 = (v331 + 287) & 0xFFFFFFFFFFFFFFF8;
  v391 = ((unint64_t)v332 + 287) & 0xFFFFFFFFFFFFFFF8;
  v392 = *(_OWORD *)v391;
  *(_BYTE *)(v390 + 16) = *(_BYTE *)(v391 + 16);
  *(_OWORD *)v390 = v392;
  v393 = (_QWORD *)((v331 + 311) & 0xFFFFFFFFFFFFF8);
  v394 = ((unint64_t)v332 + 311) & 0xFFFFFFFFFFFFF8;
  v395 = *(_QWORD *)v394;
  v394 += 15;
  *v393 = v395;
  v396 = (_QWORD *)(((unint64_t)v393 + 15) & 0xFFFFFFFFFFFFFFF8);
  v397 = *(_QWORD *)(v394 & 0xFFFFFFFFFFFFFFF8);
  v398 = *(_QWORD *)((v394 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_23AA7F2D4(v397, v398);
  *v396 = v397;
  v396[1] = v398;
  v261 = v618;
  if (!v620)
    goto LABEL_295;
LABEL_296:
  v548 = ((((v260
           + ((((((((((v263 + v289) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v549 = (unint64_t)&v212[v548];
  v550 = (unint64_t)&v213[v548];
  v551 = v549 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v551 = *(_QWORD *)(v550 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v551 + 8) = *(_BYTE *)((v550 & 0xFFFFFFFFFFFFFFF8) + 8);
  v552 = (void **)((v549 + 23) & 0xFFFFFFFFFFFFFFF8);
  v553 = (void **)((v550 + 23) & 0xFFFFFFFFFFFFF8);
  v554 = *v553;
  v555 = *v552;
  *v552 = *v553;
  v556 = v554;

  v557 = (id *)(((unint64_t)v552 + 15) & 0xFFFFFFFFFFFFFFF8);
  v558 = ((unint64_t)v553 + 15) & 0xFFFFFFFFFFFFFFF8;
  v559 = *(void **)v558;
  if ((unint64_t)*v557 < 0xFFFFFFFF)
  {
    if ((unint64_t)v559 >= 0xFFFFFFFF)
    {
      v565 = v559;
      *v557 = v559;
      v566 = *(void **)(v558 + 8);
      v557[1] = v566;
      v567 = v566;
      return v262;
    }
LABEL_302:
    *(_OWORD *)v557 = *(_OWORD *)v558;
    return v262;
  }
  if ((unint64_t)v559 < 0xFFFFFFFF)
  {

    goto LABEL_302;
  }
  v560 = v559;
  v561 = *v557;
  *v557 = v559;

  v562 = v557[1];
  v563 = *(void **)(v558 + 8);
  v557[1] = v563;
  v564 = v563;

  return v262;
}

__n128 sub_23AD61950(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const void *v37;
  uint64_t v38;
  unsigned int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  size_t v46;
  int v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  size_t v53;
  _OWORD *v54;
  unint64_t v55;
  uint64_t v56;
  int v57;
  unint64_t v58;
  void (*v59)(unint64_t, unint64_t, uint64_t);
  _BYTE *v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  unint64_t v67;
  unint64_t v68;
  void *v69;
  const void *v70;
  unsigned int v71;
  size_t v72;
  uint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  _OWORD *v82;
  _OWORD *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  size_t v89;
  size_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  size_t v126;
  unint64_t v127;
  size_t v128;
  unint64_t v129;
  unint64_t v130;
  unint64_t v131;
  unint64_t v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  unint64_t v141;
  unint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  _OWORD *v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  int v149;
  void (*v150)(unint64_t, unint64_t, uint64_t);
  size_t v151;
  unint64_t v152;
  _BYTE *v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  unint64_t v160;
  unint64_t v161;
  void *v162;
  const void *v163;
  unsigned int v164;
  _QWORD *v165;
  _QWORD *v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  _QWORD *v171;
  _OWORD *v172;
  _OWORD *v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  unint64_t v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  _OWORD *v194;
  __int128 *v195;
  __int128 v196;
  unint64_t v197;
  unint64_t v198;
  __int128 v199;
  _QWORD *v200;
  _QWORD *v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  unint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  __n128 *v208;
  __n128 result;
  unint64_t *v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  size_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  size_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unsigned int v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  size_t v235;
  const void *v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  void *v241;
  char *v242;
  uint64_t v243;
  unsigned int v244;
  char *v245;
  unint64_t v246;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 | v9 | 7;
  v245 = (char *)(((unint64_t)a1 + v10 + 8) & ~v10);
  v11 = (char *)(((unint64_t)a2 + v10 + 8) & ~v10);
  v12 = *(unsigned int *)(v5 + 84);
  if (v12 <= *(_DWORD *)(v8 + 84))
    v13 = *(_DWORD *)(v8 + 84);
  else
    v13 = *(_DWORD *)(v5 + 84);
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v13;
  v15 = *(_QWORD *)(v5 + 64) + 7;
  v16 = v9 + 8;
  v17 = *(_QWORD *)(v8 + 64) + 7;
  v18 = ((((v17 + ((v9 + 8 + (v15 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v240 = ~v9;
  v243 = v7;
  if ((_DWORD)v12 == v14)
  {
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, v12, AssociatedTypeWitness))
      goto LABEL_17;
LABEL_16:
    v21 = v245;
    memcpy(v245, v11, v18);
    goto LABEL_19;
  }
  v19 = (uint64_t *)((unint64_t)&v11[v15] & 0xFFFFFFFFFFFFFFF8);
  if (v13 <= 0x7FFFFFFE)
  {
    v20 = *v19;
    if ((unint64_t)*v19 >= 0xFFFFFFFF)
      LODWORD(v20) = -1;
    if ((v20 + 1) < 2)
      goto LABEL_18;
    goto LABEL_16;
  }
  if ((*(unsigned int (**)(unint64_t))(v8 + 48))(((unint64_t)v19 + v16) & ~v9))
    goto LABEL_16;
LABEL_17:
  v19 = (uint64_t *)((unint64_t)&v11[v15] & 0xFFFFFFFFFFFFFFF8);
LABEL_18:
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v245, v11, AssociatedTypeWitness);
  v22 = (unint64_t)&v245[v15];
  v21 = v245;
  v22 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v22 = *v19;
  v23 = (v16 + v22) & v240;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v23, ((unint64_t)v19 + v16) & v240, v243);
  v24 = (_QWORD *)((v17 + v23) & 0xFFFFFFFFFFFFF8);
  v25 = (_QWORD *)((v17 + (((unint64_t)v19 + v16) & v240)) & 0xFFFFFFFFFFFFF8);
  *v24 = *v25;
  *(_OWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8);
LABEL_19:
  v26 = &v21[v18];
  v27 = &v11[v18];
  v28 = *(_QWORD *)v27;
  v26[8] = v27[8];
  *(_QWORD *)v26 = v28;
  v29 = swift_getAssociatedTypeWitness();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = sub_23B1C5BDC();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned __int8 *)(v33 + 80);
  v35 = v34 | 7;
  v223 = v34 | v31;
  v36 = v34 | v31 | 7;
  v241 = (void *)((unint64_t)&v26[v36 + 9] & ~v36);
  v37 = (const void *)((unint64_t)&v27[v36 + 9] & ~v36);
  v38 = *(unsigned int *)(v30 + 84);
  v244 = *(_DWORD *)(v33 + 84);
  if (v244 <= 0x7FFFFFFE)
    v39 = 2147483646;
  else
    v39 = *(_DWORD *)(v33 + 84);
  v225 = v39;
  if (v38 > v39)
    v39 = *(_DWORD *)(v30 + 84);
  if (v39 <= 0x7FFFFFFF)
    v40 = 0x7FFFFFFF;
  else
    v40 = v39;
  v227 = *(_QWORD *)(v30 + 64);
  v229 = v34 | 7;
  v41 = v227 + 7;
  v42 = ~v35;
  v43 = v34 + 16;
  v238 = (v34 + 16 + ((v227 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v35;
  v44 = ~v34;
  v45 = v34 + 12;
  v235 = *(_QWORD *)(v33 + 64);
  v46 = v235 + v34;
  v217 = v34 + 10;
  v246 = (v34
        + 10
        + ((((((v235 + 12 + ((v235 + v34 + ((v34 + 12) & ~v34)) & ~v34)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v34;
  v219 = *(_QWORD *)(v32 - 8);
  v220 = v32;
  v218 = v235 + v34;
  v221 = v34 + 12;
  v231 = ~v35;
  v236 = v37;
  v216 = ~v34;
  v232 = v30;
  v234 = v29;
  if ((_DWORD)v38 == v40)
  {
    v47 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v37, v38, v29);
    goto LABEL_29;
  }
  v48 = ((unint64_t)v37 + v41) & 0xFFFFFFFFFFFFFFF8;
  if ((v39 & 0x80000000) == 0)
  {
    v49 = *(_QWORD *)(v48 + 8);
    if (v49 >= 0xFFFFFFFF)
      LODWORD(v49) = -1;
    if ((_DWORD)v49 == -1)
      goto LABEL_35;
    goto LABEL_52;
  }
  v73 = v32;
  v50 = (v43 + v48) & v42;
  v74 = (v45 + v50) & v44;
  if (v244 > 0x7FFFFFFD)
  {
    v47 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v33 + 48))(v74, v244, v73);
LABEL_29:
    v37 = v236;
    if (!v47)
    {
LABEL_35:
      v212 = v31;
      v48 = ((unint64_t)v37 + v41) & 0xFFFFFFFFFFFFFFF8;
      v50 = (v43 + v48) & v42;
      v51 = v221;
      v52 = (v221 + v50) & v44;
      v53 = v218;
      v214 = (v218 + v52) & v44;
      goto LABEL_36;
    }
LABEL_52:
    v92 = 7;
    if (!v244)
      v92 = 8;
    v90 = v235;
    if (v244)
      v72 = v235;
    else
      v72 = v235 + 1;
    memcpy(v241, v37, v238+ ((((((((((v92 + v235 + v246) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
    goto LABEL_58;
  }
  v91 = *(_QWORD *)(((v235 + 12 + ((v46 + v74) & v44)) & 0xFFFFFFFFFFFFF8) + 8);
  if (v91 >= 0xFFFFFFFF)
    LODWORD(v91) = -1;
  if ((v91 + 1) >= 2)
    goto LABEL_52;
  v212 = v31;
  v214 = (v46 + v74) & v44;
  v53 = v235 + v34;
  v51 = v34 + 12;
  v52 = (v45 + v50) & v44;
LABEL_36:
  (*(void (**)(void *, const void *, uint64_t))(v232 + 32))(v241, v37, v29);
  v54 = (_OWORD *)(((unint64_t)v241 + v41) & 0xFFFFFFFFFFFFFFF8);
  *v54 = *(_OWORD *)v48;
  v55 = ((unint64_t)v54 + v43) & v231;
  *(_BYTE *)v55 = *(_BYTE *)v50;
  v56 = v55 | 4;
  v57 = *(_DWORD *)(v50 | 4);
  *(_BYTE *)(v56 + 4) = *(_BYTE *)((v50 | 4) + 4);
  *(_DWORD *)v56 = v57;
  *(_WORD *)(v55 + 10) = *(_WORD *)(v50 + 10);
  v58 = (v51 + v55) & v44;
  v59 = *(void (**)(unint64_t, unint64_t, uint64_t))(v219 + 32);
  v59(v58, v52, v220);
  v59((v53 + v58) & v44, v214, v220);
  v60 = (_BYTE *)(((v53 + v58) & v44) + v235);
  *v60 = *(_BYTE *)(v214 + v235);
  v60[1] = *(_BYTE *)(v214 + v235 + 1);
  v60[2] = *(_BYTE *)(v214 + v235 + 2);
  v60[3] = *(_BYTE *)(v214 + v235 + 3);
  v60[4] = *(_BYTE *)(v214 + v235 + 4);
  v61 = (unint64_t)(v60 + 12) & 0xFFFFFFFFFFFFFFF8;
  v62 = (v214 + v235 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *(_BYTE *)(v61 + 16) = *(_BYTE *)(v62 + 16);
  *(_BYTE *)(v61 + 17) = *(_BYTE *)(v62 + 17);
  *(_BYTE *)(v61 + 18) = *(_BYTE *)(v62 + 18);
  *(_BYTE *)(v61 + 19) = *(_BYTE *)(v62 + 19);
  v63 = (v61 + 27) & 0xFFFFFFFFFFFFFFF8;
  v64 = (v62 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v63 = *(_QWORD *)v64;
  *(_BYTE *)(v63 + 8) = *(_BYTE *)(v64 + 8);
  *(_BYTE *)(v63 + 9) = *(_BYTE *)(v64 + 9);
  *(_BYTE *)(v63 + 10) = *(_BYTE *)(v64 + 10);
  *(_BYTE *)(v63 + 11) = *(_BYTE *)(v64 + 11);
  *(_BYTE *)(v63 + 12) = *(_BYTE *)(v64 + 12);
  v65 = (_QWORD *)((v61 + 47) & 0xFFFFFFFFFFFFF8);
  v66 = (_QWORD *)((v62 + 47) & 0xFFFFFFFFFFFFF8);
  *v65 = *v66;
  v67 = ((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  v68 = ((unint64_t)v66 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v67 = *(_QWORD *)v68;
  *(_BYTE *)(v67 + 8) = *(_BYTE *)(v68 + 8);
  *(_BYTE *)(v67 + 9) = *(_BYTE *)(v68 + 9);
  v69 = (void *)((v217 + v67) & v44);
  v70 = (const void *)((v217 + v68) & v44);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v219 + 48))(v70, 1, v220))
  {
    v71 = v244;
    if (v244)
      v72 = v235;
    else
      v72 = v235 + 1;
    memcpy(v69, v70, v72);
  }
  else
  {
    v59((unint64_t)v69, (unint64_t)v70, v220);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v219 + 56))(v69, 0, 1, v220);
    v71 = v244;
    if (v244)
      v72 = v235;
    else
      v72 = v235 + 1;
  }
  v42 = v231;
  v31 = v212;
  v75 = (_QWORD *)(((unint64_t)v69 + v72 + 7) & 0xFFFFFFFFFFFFFFF8);
  v76 = (_QWORD *)(((unint64_t)v70 + v72 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v75 = *v76;
  v77 = ((unint64_t)v75 + 15) & 0xFFFFFFFFFFFFFFF8;
  v78 = ((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFFFF8;
  v79 = *(_QWORD *)v78;
  *(_BYTE *)(v77 + 8) = *(_BYTE *)(v78 + 8);
  *(_QWORD *)v77 = v79;
  v80 = (_QWORD *)(((unint64_t)v75 + 31) & 0xFFFFFFFFFFFFF8);
  v81 = (_QWORD *)(((unint64_t)v76 + 31) & 0xFFFFFFFFFFFFF8);
  *v80 = *v81;
  v82 = (_OWORD *)(((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8);
  v83 = (_OWORD *)(((unint64_t)v81 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v82 = *v83;
  v84 = ((unint64_t)v82 + 19) & 0xFFFFFFFFFFFFFFF8;
  v85 = ((unint64_t)v83 + 19) & 0xFFFFFFFFFFFFFFF8;
  v86 = *(_QWORD *)v85;
  *(_BYTE *)(v84 + 8) = *(_BYTE *)(v85 + 8);
  *(_QWORD *)v84 = v86;
  *(_BYTE *)(v84 + 9) = *(_BYTE *)(v85 + 9);
  v87 = (v84 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v88 = (v85 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v79) = *(_DWORD *)v88;
  *(_BYTE *)(v87 + 4) = *(_BYTE *)(v88 + 4);
  *(_DWORD *)v87 = v79;
  *(_OWORD *)((v84 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v85 + 25) & 0xFFFFFFFFFFFFF8);
  v89 = v235;
  v90 = v235;
  if (!v71)
LABEL_58:
    v89 = v72;
  v93 = (((((((((v246 + 7 + v89) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
       + 25) & 0xFFFFFFFFFFFFFFF8;
  v222 = swift_getAssociatedTypeWitness();
  v94 = *(_QWORD *)(v222 - 8);
  v95 = *(_DWORD *)(v94 + 80) & 0xF8;
  v96 = swift_getAssociatedTypeWitness();
  v97 = *(_QWORD *)(v96 - 8);
  v98 = *(unsigned __int8 *)(v97 + 80);
  v99 = v95 | v98 | 7;
  v100 = v238 + (v223 | v99) + v93 + 16;
  v101 = (char *)(((unint64_t)v241 + v100) & ~(v223 | v99));
  v102 = (char *)(((unint64_t)v236 + v100) & ~(v223 | v99));
  v103 = *(unsigned int *)(v94 + 84);
  v104 = *(unsigned int *)(v97 + 84);
  if (v103 <= v104)
    v105 = *(_DWORD *)(v97 + 84);
  else
    v105 = *(_DWORD *)(v94 + 84);
  if (v105 <= 0x7FFFFFFE)
    v106 = 2147483646;
  else
    v106 = v105;
  if (v106 <= v38)
    v107 = v38;
  else
    v107 = v106;
  if (v107 <= v225)
    v107 = v225;
  if (v107 <= 0x7FFFFFFF)
    v108 = 0x7FFFFFFF;
  else
    v108 = v107;
  v109 = ~v31;
  v110 = v227 + v31;
  v111 = (v227 + v31) & ~v31;
  v112 = ~v99;
  v113 = v227 + v99;
  v114 = (v227 + v99 + v111) & ~v99;
  v237 = v94;
  v115 = *(_QWORD *)(v94 + 64) + 7;
  v116 = ((((*(_QWORD *)(v97 + 64) + 7 + ((v98 + 8 + (v115 & 0xFFFFFFFFFFFFFFF8)) & ~v98)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v117 = v229 + 16;
  v239 = (v229 + 16 + v114 + v116) & v42;
  v242 = v101;
  v213 = v98 + 8;
  v215 = v96;
  v228 = v116;
  v230 = v229 + 16;
  v224 = ~v98;
  v226 = *(_QWORD *)(v97 + 64) + 7;
  if ((_DWORD)v38 == v108)
  {
    v118 = v234;
    v119 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v232 + 48);
    v120 = (uint64_t)v102;
    v104 = v38;
LABEL_75:
    v121 = v112;
    v122 = v109;
    v123 = v119(v120, v104, v118);
    goto LABEL_76;
  }
  v129 = (unint64_t)&v102[v110] & v109;
  v130 = (v113 + v129) & v112;
  if (v106 == v108)
  {
    if ((_DWORD)v103 == v106)
    {
      v121 = v112;
      v122 = v109;
      v123 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v237 + 48))((v113 + v129) & v112, v103, v222);
LABEL_76:
      v109 = v122;
      v112 = v121;
      if (v123)
      {
LABEL_77:
        v124 = 7;
        if (!v244)
          v124 = 8;
        v125 = v239;
        if (v244)
          v126 = v90;
        else
          v126 = v90 + 1;
        memcpy(v101, v102, ((((((((((((((v124 + v90 + v246) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ v239+ 327) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
        v127 = v246 + 7;
        goto LABEL_83;
      }
      goto LABEL_91;
    }
    v210 = (unint64_t *)((v115 + v130) & 0xFFFFFFFFFFFFFFF8);
    if (v105 > 0x7FFFFFFE)
    {
      v120 = ((unint64_t)v210 + v98 + 8) & ~v98;
      v119 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
      v118 = v96;
      goto LABEL_75;
    }
    v211 = *v210;
  }
  else
  {
    v131 = v130 + v116;
    if ((v107 & 0x80000000) == 0)
    {
      v132 = *(_QWORD *)(v131 + 8);
      if (v132 >= 0xFFFFFFFF)
        LODWORD(v132) = -1;
      if ((_DWORD)v132 != -1)
        goto LABEL_77;
LABEL_91:
      v129 = (unint64_t)&v102[v110] & v109;
      v130 = (v113 + v129) & v112;
      goto LABEL_92;
    }
    v120 = (v221 + ((v117 + v131) & v231)) & v216;
    v104 = v244;
    if (v244 > 0x7FFFFFFD)
    {
      v118 = v220;
      v119 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v219 + 48);
      goto LABEL_75;
    }
    v211 = *(_QWORD *)(((v235 + 12 + ((v218 + v120) & v216)) & 0xFFFFFFFFFFFFF8) + 8);
  }
  if (v211 >= 0xFFFFFFFF)
    LODWORD(v211) = -1;
  if ((v211 + 1) >= 2)
    goto LABEL_77;
LABEL_92:
  v133 = *(void (**)(char *, char *, uint64_t))(v232 + 32);
  v134 = v112;
  v233 = v97;
  v135 = v110;
  v136 = v109;
  v133(v101, v102, v234);
  v137 = (unint64_t)&v101[v135] & v136;
  v133((char *)v137, (char *)v129, v234);
  v138 = (v113 + v137) & v134;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v237 + 32))(v138, v130, v222);
  v139 = (_QWORD *)((v115 + v138) & 0xFFFFFFFFFFFFFFF8);
  v140 = (_QWORD *)((v115 + v130) & 0xFFFFFFFFFFFFFFF8);
  *v139 = *v140;
  v141 = ((unint64_t)v139 + v213) & v224;
  v142 = ((unint64_t)v140 + v213) & v224;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v233 + 32))(v141, v142, v215);
  v143 = (_QWORD *)((v226 + v142) & 0xFFFFFFFFFFFFF8);
  v144 = (_QWORD *)((v226 + v141) & 0xFFFFFFFFFFFFF8);
  *v144 = *v143;
  *(_OWORD *)(((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFF8);
  v145 = (_OWORD *)(v130 + v228);
  v128 = v235;
  *(_OWORD *)(v138 + v228) = *v145;
  v146 = (v230 + v138 + v228) & v231;
  v147 = ((unint64_t)v145 + v230) & v231;
  *(_BYTE *)v146 = *(_BYTE *)v147;
  v148 = v146 | 4;
  v149 = *(_DWORD *)(v147 | 4);
  *(_BYTE *)(v148 + 4) = *(_BYTE *)((v147 | 4) + 4);
  *(_DWORD *)v148 = v149;
  *(_WORD *)(v146 + 10) = *(_WORD *)(v147 + 0xA);
  v150 = *(void (**)(unint64_t, unint64_t, uint64_t))(v219 + 32);
  v150((v221 + v146) & v216, (v221 + v147) & v216, v220);
  v151 = (v218 + ((v221 + v146) & v216)) & v216;
  v152 = (v218 + ((v221 + v147) & v216)) & v216;
  v150(v151, v152, v220);
  v153 = (_BYTE *)(v151 + v235);
  *v153 = *(_BYTE *)(v152 + v235);
  v153[1] = *(_BYTE *)(v152 + v235 + 1);
  v153[2] = *(_BYTE *)(v152 + v235 + 2);
  v153[3] = *(_BYTE *)(v152 + v235 + 3);
  v153[4] = *(_BYTE *)(v152 + v235 + 4);
  v154 = (v151 + v235 + 12) & 0xFFFFFFFFFFFFFFF8;
  v155 = (v152 + v235 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v154 = *(_OWORD *)v155;
  *(_BYTE *)(v154 + 16) = *(_BYTE *)(v155 + 16);
  *(_BYTE *)(v154 + 17) = *(_BYTE *)(v155 + 17);
  *(_BYTE *)(v154 + 18) = *(_BYTE *)(v155 + 18);
  *(_BYTE *)(v154 + 19) = *(_BYTE *)(v155 + 19);
  v156 = (v154 + 27) & 0xFFFFFFFFFFFFFFF8;
  v157 = (v155 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v156 = *(_QWORD *)v157;
  *(_BYTE *)(v156 + 8) = *(_BYTE *)(v157 + 8);
  *(_BYTE *)(v156 + 9) = *(_BYTE *)(v157 + 9);
  *(_BYTE *)(v156 + 10) = *(_BYTE *)(v157 + 10);
  *(_BYTE *)(v156 + 11) = *(_BYTE *)(v157 + 11);
  *(_BYTE *)(v156 + 12) = *(_BYTE *)(v157 + 12);
  v158 = (_QWORD *)((v154 + 47) & 0xFFFFFFFFFFFFF8);
  v159 = (_QWORD *)((v155 + 47) & 0xFFFFFFFFFFFFF8);
  *v158 = *v159;
  v160 = ((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8;
  v161 = ((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v160 = *(_QWORD *)v161;
  *(_BYTE *)(v160 + 8) = *(_BYTE *)(v161 + 8);
  *(_BYTE *)(v160 + 9) = *(_BYTE *)(v161 + 9);
  v162 = (void *)((v217 + v160) & v216);
  v163 = (const void *)((v217 + v161) & v216);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v219 + 48))(v163, 1, v220))
  {
    v164 = v244;
    if (v244)
      v126 = v235;
    else
      v126 = v235 + 1;
    memcpy(v162, v163, v126);
  }
  else
  {
    v150((unint64_t)v162, (unint64_t)v163, v220);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v219 + 56))(v162, 0, 1, v220);
    v164 = v244;
    if (v244)
      v126 = v235;
    else
      v126 = v235 + 1;
  }
  v127 = v246 + 7;
  v125 = v239;
  v165 = (_QWORD *)(((unint64_t)v162 + v126 + 7) & 0xFFFFFFFFFFFFFFF8);
  v166 = (_QWORD *)(((unint64_t)v163 + v126 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v165 = *v166;
  v167 = ((unint64_t)v165 + 15) & 0xFFFFFFFFFFFFFFF8;
  v168 = ((unint64_t)v166 + 15) & 0xFFFFFFFFFFFFFFF8;
  v169 = *(_QWORD *)v168;
  *(_BYTE *)(v167 + 8) = *(_BYTE *)(v168 + 8);
  *(_QWORD *)v167 = v169;
  v170 = (_QWORD *)(((unint64_t)v165 + 31) & 0xFFFFFFFFFFFFF8);
  v171 = (_QWORD *)(((unint64_t)v166 + 31) & 0xFFFFFFFFFFFFF8);
  *v170 = *v171;
  v172 = (_OWORD *)(((unint64_t)v170 + 15) & 0xFFFFFFFFFFFFFFF8);
  v173 = (_OWORD *)(((unint64_t)v171 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v172 = *v173;
  v174 = ((unint64_t)v172 + 19) & 0xFFFFFFFFFFFFFFF8;
  v175 = ((unint64_t)v173 + 19) & 0xFFFFFFFFFFFFFFF8;
  v176 = *(_QWORD *)v175;
  *(_BYTE *)(v174 + 8) = *(_BYTE *)(v175 + 8);
  *(_QWORD *)v174 = v176;
  *(_BYTE *)(v174 + 9) = *(_BYTE *)(v175 + 9);
  v177 = (v174 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v178 = (v175 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v169) = *(_DWORD *)v178;
  *(_BYTE *)(v177 + 4) = *(_BYTE *)(v178 + 4);
  *(_DWORD *)v177 = v169;
  *(_OWORD *)((v174 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v175 + 25) & 0xFFFFFFFFFFFFF8);
  v179 = ((((((((((v126 + 7 + v246) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v180 = v146 + v179;
  v181 = v147 + v179;
  v182 = *(_OWORD *)(v181 + 112);
  v184 = *(_OWORD *)(v181 + 64);
  v183 = *(_OWORD *)(v181 + 80);
  *(_OWORD *)(v180 + 96) = *(_OWORD *)(v181 + 96);
  *(_OWORD *)(v180 + 112) = v182;
  *(_OWORD *)(v180 + 64) = v184;
  *(_OWORD *)(v180 + 80) = v183;
  v185 = *(_OWORD *)(v181 + 176);
  v187 = *(_OWORD *)(v181 + 128);
  v186 = *(_OWORD *)(v181 + 144);
  *(_OWORD *)(v180 + 160) = *(_OWORD *)(v181 + 160);
  *(_OWORD *)(v180 + 176) = v185;
  *(_OWORD *)(v180 + 128) = v187;
  *(_OWORD *)(v180 + 144) = v186;
  v189 = *(_OWORD *)(v181 + 208);
  v188 = *(_OWORD *)(v181 + 224);
  v190 = *(_OWORD *)(v181 + 192);
  *(_QWORD *)(v180 + 240) = *(_QWORD *)(v181 + 240);
  *(_OWORD *)(v180 + 208) = v189;
  *(_OWORD *)(v180 + 224) = v188;
  *(_OWORD *)(v180 + 192) = v190;
  v191 = *(_OWORD *)v181;
  v192 = *(_OWORD *)(v181 + 16);
  v193 = *(_OWORD *)(v181 + 48);
  *(_OWORD *)(v180 + 32) = *(_OWORD *)(v181 + 32);
  *(_OWORD *)(v180 + 48) = v193;
  *(_OWORD *)v180 = v191;
  *(_OWORD *)(v180 + 16) = v192;
  v194 = (_OWORD *)((v180 + 255) & 0xFFFFFFFFFFFFFFF8);
  v195 = (__int128 *)((v181 + 255) & 0xFFFFFFFFFFFFFFF8);
  v196 = *v195;
  *(_OWORD *)((char *)v194 + 9) = *(__int128 *)((char *)v195 + 9);
  *v194 = v196;
  v197 = (v180 + 287) & 0xFFFFFFFFFFFFFFF8;
  v198 = (v181 + 287) & 0xFFFFFFFFFFFFFFF8;
  v199 = *(_OWORD *)v198;
  *(_BYTE *)(v197 + 16) = *(_BYTE *)(v198 + 16);
  *(_OWORD *)v197 = v199;
  v200 = (_QWORD *)((v180 + 311) & 0xFFFFFFFFFFFFF8);
  v201 = (_QWORD *)((v181 + 311) & 0xFFFFFFFFFFFFF8);
  *v200 = *v201;
  *(_OWORD *)(((unint64_t)v200 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v201 + 15) & 0xFFFFFFFFFFFFF8);
  if (!v164)
LABEL_83:
    v128 = v126;
  v202 = ((((v125
           + ((((((((((v127 + v128) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v203 = (unint64_t)&v242[v202];
  v204 = (unint64_t)&v102[v202];
  v205 = v203 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v205 = *(_QWORD *)(v204 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v205 + 8) = *(_BYTE *)((v204 & 0xFFFFFFFFFFFFFFF8) + 8);
  v206 = (_QWORD *)((v203 + 23) & 0xFFFFFFFFFFFFF8);
  v207 = (_QWORD *)((v204 + 23) & 0xFFFFFFFFFFFFF8);
  *v206 = *v207;
  v208 = (__n128 *)(((unint64_t)v207 + 15) & 0xFFFFFFFFFFFFF8);
  result = *v208;
  *(__n128 *)(((unint64_t)v206 + 15) & 0xFFFFFFFFFFFFF8) = *v208;
  return result;
}

_QWORD *sub_23AD62940(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t (*v31)(unint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  size_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  size_t v68;
  uint64_t v69;
  uint64_t (*v70)(uint64_t, uint64_t, uint64_t);
  void *v71;
  int v72;
  int v73;
  void *v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  uint64_t v79;
  unint64_t v80;
  void *v81;
  _QWORD *v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  size_t v86;
  void *v87;
  unsigned int v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  void (*v94)(unint64_t, uint64_t);
  unint64_t v95;
  unint64_t v96;
  uint64_t *v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  void *v102;
  int v103;
  unint64_t v104;
  _OWORD *v105;
  unint64_t v106;
  uint64_t v107;
  int v108;
  unint64_t v109;
  void (*v110)(unint64_t, unint64_t, uint64_t);
  unint64_t v111;
  _BYTE *v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  unint64_t v119;
  unint64_t v120;
  void *v121;
  const void *v122;
  unsigned int v123;
  size_t v124;
  unint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  _OWORD *v134;
  _OWORD *v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  size_t v141;
  uint64_t v142;
  void *v143;
  int v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  _QWORD *v148;
  unint64_t v149;
  uint64_t v150;
  int v151;
  unint64_t v152;
  uint64_t v153;
  void (*v154)(unint64_t, unint64_t, uint64_t);
  _BYTE *v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  unint64_t v162;
  unint64_t v163;
  char *v164;
  char *v165;
  uint64_t (*v166)(char *, uint64_t, uint64_t);
  int v167;
  unsigned int v168;
  size_t v169;
  unint64_t v170;
  _QWORD *v171;
  unint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t *v178;
  uint64_t *v179;
  unint64_t v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  int v187;
  _QWORD *v188;
  _QWORD *v189;
  unint64_t v190;
  uint64_t v191;
  int v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t (*v218)(char *, _QWORD, uint64_t);
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  int v223;
  int v224;
  _QWORD *v225;
  unsigned int v226;
  uint64_t v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  unint64_t v234;
  unint64_t v235;
  unint64_t v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t (*v239)(unint64_t, uint64_t, uint64_t);
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t *v244;
  unint64_t v245;
  unint64_t v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t (*v249)(unint64_t);
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  unint64_t v253;
  uint64_t (*v254)(unint64_t, uint64_t, uint64_t);
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  int v261;
  unint64_t *v262;
  unint64_t v263;
  BOOL v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t *v270;
  unint64_t v271;
  BOOL v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  size_t v283;
  unint64_t v284;
  void (*v285)(char *, char *, uint64_t);
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  unint64_t v291;
  _QWORD *v292;
  _QWORD *v293;
  unint64_t v294;
  unint64_t v295;
  _QWORD *v296;
  _QWORD *v297;
  unint64_t v298;
  unint64_t v299;
  uint64_t v300;
  int v301;
  void (*v302)(unint64_t, unint64_t, uint64_t);
  unint64_t v303;
  unint64_t v304;
  size_t v305;
  _BYTE *v306;
  unint64_t v307;
  unint64_t v308;
  unint64_t v309;
  unint64_t v310;
  _QWORD *v311;
  _QWORD *v312;
  unint64_t v313;
  unint64_t v314;
  void *v315;
  const void *v316;
  unsigned int v317;
  _QWORD *v318;
  _QWORD *v319;
  unint64_t v320;
  unint64_t v321;
  uint64_t v322;
  _QWORD *v323;
  _QWORD *v324;
  _OWORD *v325;
  _OWORD *v326;
  unint64_t v327;
  unint64_t v328;
  uint64_t v329;
  unint64_t v330;
  unint64_t v331;
  unint64_t v332;
  unint64_t v333;
  __int128 *v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  _OWORD *v347;
  __int128 *v348;
  __int128 v349;
  unint64_t v350;
  unint64_t v351;
  __int128 v352;
  _QWORD *v353;
  _QWORD *v354;
  unint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  void (*v360)(char *, uint64_t);
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  unint64_t v365;
  unint64_t v366;
  unint64_t v367;
  void (*v368)(unint64_t, uint64_t);
  unint64_t v369;
  unint64_t v370;
  uint64_t *v371;
  unint64_t v372;
  unint64_t v373;
  unint64_t v374;
  uint64_t v375;
  void *v376;
  int v377;
  void (*v378)(char *, char *, uint64_t);
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  unint64_t v383;
  unint64_t v384;
  _QWORD *v385;
  _QWORD *v386;
  unint64_t v387;
  _QWORD *v388;
  uint64_t v389;
  uint64_t v390;
  _QWORD *v391;
  _QWORD *v392;
  unint64_t v393;
  unint64_t v394;
  uint64_t v395;
  int v396;
  void (*v397)(unint64_t, unint64_t, uint64_t);
  unint64_t v398;
  unint64_t v399;
  _BYTE *v400;
  unint64_t v401;
  unint64_t v402;
  unint64_t v403;
  unint64_t v404;
  _QWORD *v405;
  _QWORD *v406;
  unint64_t v407;
  unint64_t v408;
  char *v409;
  char *v410;
  uint64_t (*v411)(char *, uint64_t, uint64_t);
  int v412;
  int v413;
  unsigned int v414;
  size_t v415;
  unint64_t v416;
  _QWORD *v417;
  unint64_t v418;
  unint64_t v419;
  unint64_t v420;
  unint64_t v421;
  uint64_t v422;
  _QWORD *v423;
  uint64_t *v424;
  unint64_t v425;
  unint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  unint64_t v430;
  unint64_t v431;
  uint64_t v432;
  unint64_t v433;
  unint64_t v434;
  int v435;
  _QWORD *v436;
  _QWORD *v437;
  unint64_t v438;
  __int128 *v439;
  void *v440;
  unint64_t v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  unint64_t v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  void *v467;
  void *v468;
  uint64_t v469;
  unint64_t v470;
  _OWORD *v471;
  __int128 *v472;
  __int128 v473;
  unint64_t v474;
  unint64_t v475;
  __int128 v476;
  _QWORD *v477;
  _QWORD *v478;
  uint64_t *v479;
  uint64_t v480;
  unint64_t v481;
  unint64_t v482;
  unint64_t v483;
  unint64_t v484;
  unint64_t v485;
  void **v486;
  void **v487;
  void *v488;
  unint64_t v489;
  unint64_t v490;
  void *v491;
  void *v492;
  uint64_t v494;
  uint64_t v495;
  unint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  size_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  unint64_t v505;
  uint64_t v506;
  unsigned int v507;
  unsigned int v508;
  char *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  void *__src;
  char *__srca;
  char *__srcb;
  char *__srcc;
  _QWORD *v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  int v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  size_t v532;
  uint64_t v533;
  unsigned int v534;
  size_t v535;
  unint64_t v536;
  uint64_t v537;

  *a1 = *a2;
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 | v9 | 7;
  v521 = a1;
  v11 = (char *)(((unint64_t)a1 + v10 + 8) & ~v10);
  v12 = (char *)(((unint64_t)a2 + v10 + 8) & ~v10);
  v13 = *(unsigned int *)(v5 + 84);
  v14 = *(unsigned int *)(v8 + 84);
  if (v13 <= v14)
    v15 = *(_DWORD *)(v8 + 84);
  else
    v15 = *(_DWORD *)(v5 + 84);
  if (v15 <= 0x7FFFFFFE)
    v16 = 2147483646;
  else
    v16 = v15;
  v17 = *(_QWORD *)(v5 + 64) + 7;
  v18 = v9 + 8;
  v19 = *(_QWORD *)(v8 + 64) + 7;
  v533 = v7;
  v535 = ((((v19 + ((v9 + 8 + (v17 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v531 = ~v9;
  if ((_DWORD)v13 == v16)
  {
    v529 = *(_QWORD *)(v8 + 64) + 7;
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
    v21 = v20(v11, v13, AssociatedTypeWitness);
    v22 = v20(v12, v13, AssociatedTypeWitness);
    if (v21)
      goto LABEL_9;
    goto LABEL_20;
  }
  v23 = (uint64_t *)((unint64_t)&v11[v17] & 0xFFFFFFFFFFFFFFF8);
  if (v15 <= 0x7FFFFFFE)
  {
    v25 = *v23;
    if ((unint64_t)*v23 >= 0xFFFFFFFF)
      LODWORD(v25) = -1;
    v26 = v25 + 1;
    v24 = (uint64_t *)((unint64_t)&v12[v17] & 0xFFFFFFFFFFFFFFF8);
    v27 = *v24;
    if ((unint64_t)*v24 >= 0xFFFFFFFF)
      LODWORD(v27) = -1;
    v28 = v27 + 1;
    if (v26 >= 2)
    {
      v529 = *(_QWORD *)(v8 + 64) + 7;
      if (v28 < 2)
        goto LABEL_23;
LABEL_24:
      v39 = v535;
      memcpy(v11, v12, v535);
      goto LABEL_28;
    }
    if (v28 >= 2)
    {
LABEL_21:
      (*(void (**)(char *, uint64_t))(v5 + 8))(v11, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))(((unint64_t)v23 + v18) & v531, v533);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
LABEL_26:
    (*(void (**)(char *, char *, uint64_t))(v5 + 40))(v11, v12, AssociatedTypeWitness);
    *v23 = *v24;
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))(((unint64_t)v23 + v18) & v531, ((unint64_t)v24 + v18) & v531, v533);
    v40 = v19;
    v41 = (_QWORD *)((v19 + (((unint64_t)v23 + v18) & v531)) & 0xFFFFFFFFFFFFFFF8);
    v42 = (v40 + (((unint64_t)v24 + v18) & v531)) & 0xFFFFFFFFFFFFF8;
    v43 = *(_QWORD *)v42;
    v42 += 15;
    *v41 = v43;
    swift_bridgeObjectRelease();
    v44 = (_QWORD *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v44 = *(_QWORD *)(v42 & 0xFFFFFFFFFFFFFFF8);
    v44[1] = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v29 = v7;
  v527 = AssociatedTypeWitness;
  v529 = *(_QWORD *)(v8 + 64) + 7;
  v30 = ((unint64_t)v23 + v18) & ~v9;
  v31 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
  v32 = v29;
  v33 = v11;
  v34 = v12;
  v35 = ~v9;
  v525 = v31(v30, v14, v29);
  v36 = (v18 + ((unint64_t)&v34[v17] & 0xFFFFFFFFFFFFFFF8)) & v35;
  v12 = v34;
  v11 = v33;
  AssociatedTypeWitness = v527;
  v22 = v31(v36, v14, v32);
  if (!v525)
  {
LABEL_20:
    v23 = (uint64_t *)((unint64_t)&v11[v17] & 0xFFFFFFFFFFFFFFF8);
    if (v22)
      goto LABEL_21;
    v24 = (uint64_t *)((unint64_t)&v12[v17] & 0xFFFFFFFFFFFFFFF8);
    v19 = v529;
    goto LABEL_26;
  }
LABEL_9:
  if (v22)
    goto LABEL_24;
  v23 = (uint64_t *)((unint64_t)&v11[v17] & 0xFFFFFFFFFFFFFFF8);
  v24 = (uint64_t *)((unint64_t)&v12[v17] & 0xFFFFFFFFFFFFFFF8);
LABEL_23:
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v11, v12, AssociatedTypeWitness);
  *v23 = *v24;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(((unint64_t)v23 + v18) & v531, ((unint64_t)v24 + v18) & v531, v533);
  v37 = (_QWORD *)((v529 + (((unint64_t)v23 + v18) & v531)) & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)((v529 + (((unint64_t)v24 + v18) & v531)) & 0xFFFFFFFFFFFFF8);
  *v37 = *v38;
  *(_OWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFF8);
LABEL_27:
  v39 = v535;
LABEL_28:
  v45 = &v11[v39];
  v46 = &v12[v39];
  v47 = *(_QWORD *)&v12[v39];
  v45[8] = v12[v39 + 8];
  *(_QWORD *)v45 = v47;
  v48 = swift_getAssociatedTypeWitness();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(unsigned __int8 *)(v49 + 80);
  v51 = sub_23B1C5BDC();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(unsigned __int8 *)(v52 + 80);
  v54 = v53 | 7;
  v512 = v50;
  v501 = v53 | v50;
  v55 = v53 | v50 | 7;
  v56 = (unint64_t)&v45[v55 + 9] & ~v55;
  v57 = (void *)((unint64_t)&v46[v55 + 9] & ~v55);
  v58 = *(unsigned int *)(v49 + 84);
  v59 = *(unsigned int *)(v52 + 84);
  if (v59 <= 0x7FFFFFFE)
    v60 = 2147483646;
  else
    v60 = *(_DWORD *)(v52 + 84);
  v507 = v60;
  if (v58 <= v60)
    v61 = v60;
  else
    v61 = *(_DWORD *)(v49 + 84);
  if (v61 <= 0x7FFFFFFF)
    v62 = 0x7FFFFFFF;
  else
    v62 = v61;
  v63 = *(_QWORD *)(v49 + 64) + 7;
  v64 = ~v54;
  v65 = v53 + 16;
  v505 = (v53 + 16 + (v63 & 0xFFFFFFFFFFFFFFF8)) & ~v54;
  v66 = ~v53;
  v67 = v53 + 12;
  v522 = *(_QWORD *)(v51 - 8);
  v68 = *(_QWORD *)(v52 + 64);
  v69 = v68 + v53;
  v532 = v68;
  v500 = v68 + 12;
  v516 = v53 + 10;
  v536 = (v53
        + 10
        + ((((((v68 + 12 + ((v68 + v53 + ((v53 + 12) & ~v53)) & ~v53)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v53;
  v534 = *(_DWORD *)(v52 + 84);
  v528 = v51;
  v523 = ~v53;
  v524 = v53 + 12;
  v526 = v48;
  v499 = v68 + v53;
  v537 = ~v54;
  v530 = v49;
  v514 = v53 | 7;
  v510 = *(_QWORD *)(v49 + 64);
  __src = v57;
  v508 = *(_DWORD *)(v49 + 84);
  if ((_DWORD)v58 == v62)
  {
    v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
    v71 = v57;
    v72 = v70(v56, v58, v48);
    v73 = v70((uint64_t)v71, v58, v48);
    v57 = v71;
    v74 = (void *)v56;
    v75 = v69;
    if (!v72)
      goto LABEL_62;
LABEL_51:
    if (v73)
    {
LABEL_52:
      v84 = 7;
      if (!v534)
        v84 = 8;
      v85 = v505;
      if (v534)
        v86 = v532;
      else
        v86 = v532 + 1;
      v87 = v74;
      memcpy(v74, v57, v505+ ((((((((((v84 + v532 + v536) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
      v88 = v507;
      v89 = v501;
      goto LABEL_118;
    }
    goto LABEL_73;
  }
  v76 = (v63 + v56) & 0xFFFFFFFFFFFFFFF8;
  v74 = (void *)v56;
  if ((v61 & 0x80000000) != 0)
  {
    v79 = v51;
    v80 = (v67 + ((v65 + v76) & v64)) & v66;
    if (v59 <= 0x7FFFFFFD)
    {
      v75 = v69;
      v124 = v68 + 12;
      v125 = *(_QWORD *)(((v500 + ((v69 + v80) & v66)) & 0xFFFFFFFFFFFFF8) + 8);
      if (v125 >= 0xFFFFFFFF)
        LODWORD(v125) = -1;
      v82 = (_QWORD *)(((unint64_t)v57 + v63) & 0xFFFFFFFFFFFFFFF8);
      v126 = v67;
      v100 = ((unint64_t)v82 + v65) & v64;
      v101 = (v126 + v100) & v66;
      v91 = v66;
      if ((v125 + 1) >= 2)
        goto LABEL_92;
LABEL_97:
      v145 = (v75 + v101) & v91;
      v147 = *(_QWORD *)(((v124 + v145) & 0xFFFFFFFFFFFFF8) + 8);
      if (v147 >= 0xFFFFFFFF)
        LODWORD(v147) = -1;
      if ((v147 + 1) >= 2)
        goto LABEL_63;
LABEL_100:
      (*(void (**)(void *, void *, uint64_t))(v530 + 40))(v74, v57, v526);
      v148 = (_QWORD *)(((unint64_t)v74 + v63) & 0xFFFFFFFFFFFFFFF8);
      *v148 = *v82;
      v148[1] = v82[1];
      swift_bridgeObjectRelease();
      v149 = ((unint64_t)v148 + v65) & v537;
      *(_BYTE *)v149 = *(_BYTE *)v100;
      v150 = v149 | 4;
      v151 = *(_DWORD *)(v100 | 4);
      *(_BYTE *)(v150 + 4) = *(_BYTE *)((v100 | 4) + 4);
      *(_DWORD *)v150 = v151;
      *(_WORD *)(v149 + 10) = *(_WORD *)(v100 + 10);
      v152 = (v524 + v149) & v91;
      v153 = v91;
      v154 = *(void (**)(unint64_t, unint64_t, uint64_t))(v522 + 40);
      v154(v152, v101, v528);
      v154((v75 + v152) & v153, v145, v528);
      v155 = (_BYTE *)(((v75 + v152) & v153) + v532);
      *v155 = *(_BYTE *)(v145 + v532);
      v155[1] = *(_BYTE *)(v145 + v532 + 1);
      v155[2] = *(_BYTE *)(v145 + v532 + 2);
      v155[3] = *(_BYTE *)(v145 + v532 + 3);
      v155[4] = *(_BYTE *)(v145 + v532 + 4);
      v156 = (unint64_t)(v155 + 12) & 0xFFFFFFFFFFFFFFF8;
      v157 = (v145 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v156 = *(_QWORD *)v157;
      *(_QWORD *)(v156 + 8) = *(_QWORD *)(v157 + 8);
      swift_bridgeObjectRelease();
      *(_BYTE *)(v156 + 16) = *(_BYTE *)(v157 + 16);
      *(_BYTE *)(v156 + 17) = *(_BYTE *)(v157 + 17);
      *(_BYTE *)(v156 + 18) = *(_BYTE *)(v157 + 18);
      *(_BYTE *)(v156 + 19) = *(_BYTE *)(v157 + 19);
      v158 = (v156 + 27) & 0xFFFFFFFFFFFFFFF8;
      v159 = (v157 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v158 = *(_QWORD *)v159;
      *(_BYTE *)(v158 + 8) = *(_BYTE *)(v159 + 8);
      *(_BYTE *)(v158 + 9) = *(_BYTE *)(v159 + 9);
      *(_BYTE *)(v158 + 10) = *(_BYTE *)(v159 + 10);
      *(_BYTE *)(v158 + 11) = *(_BYTE *)(v159 + 11);
      *(_BYTE *)(v158 + 12) = *(_BYTE *)(v159 + 12);
      v160 = (_QWORD *)((v156 + 47) & 0xFFFFFFFFFFFFF8);
      v161 = (_QWORD *)((v157 + 47) & 0xFFFFFFFFFFFFF8);
      *v160 = *v161;
      v162 = ((unint64_t)v160 + 15) & 0xFFFFFFFFFFFFFFF8;
      v163 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v162 = *(_QWORD *)v163;
      *(_BYTE *)(v162 + 8) = *(_BYTE *)(v163 + 8);
      *(_BYTE *)(v162 + 9) = *(_BYTE *)(v163 + 9);
      v164 = (char *)((v516 + v162) & v153);
      v165 = (char *)((v516 + v163) & v153);
      v166 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v522 + 48);
      LODWORD(v156) = v166(v164, 1, v528);
      v167 = v166(v165, 1, v528);
      if ((_DWORD)v156)
      {
        if (!v167)
        {
          (*(void (**)(char *, char *, uint64_t))(v522 + 32))(v164, v165, v528);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v522 + 56))(v164, 0, 1, v528);
LABEL_110:
          v86 = v532;
          v168 = v534;
          goto LABEL_111;
        }
      }
      else
      {
        if (!v167)
        {
          v154((unint64_t)v164, (unint64_t)v165, v528);
          goto LABEL_110;
        }
        (*(void (**)(char *, uint64_t))(v522 + 8))(v164, v528);
      }
      v168 = v534;
      v86 = v532;
      if (v534)
        v169 = v532;
      else
        v169 = v532 + 1;
      memcpy(v164, v165, v169);
LABEL_111:
      if (!v168)
        ++v86;
      v170 = (unint64_t)&v164[v86 + 7];
      v171 = (_QWORD *)((unint64_t)&v165[v86 + 7] & 0xFFFFFFFFFFFFFFF8);
      v172 = (v170 & 0xFFFFFFFFFFFFFFF8) + 15;
      *(_QWORD *)(v170 & 0xFFFFFFFFFFFFFFF8) = *v171;
      v173 = (v170 & 0xFFFFFFFFFFFFFFF8) + 31;
      swift_bridgeObjectRelease();
      v174 = v172 & 0xFFFFFFFFFFFFFFF8;
      v175 = ((unint64_t)v171 + 15) & 0xFFFFFFFFFFFFFFF8;
      v176 = *(_QWORD *)v175;
      *(_BYTE *)(v174 + 8) = *(_BYTE *)(v175 + 8);
      *(_QWORD *)v174 = v176;
      v177 = (_QWORD *)(((unint64_t)v171 + 31) & 0xFFFFFFFFFFFFF8);
      *(_QWORD *)(v173 & 0xFFFFFFFFFFFFFFF8) = *v177;
      swift_bridgeObjectRelease();
      v178 = (uint64_t *)(((v173 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      v179 = (uint64_t *)(((unint64_t)v177 + 15) & 0xFFFFFFFFFFFFFFF8);
      v180 = v178[1];
      v87 = v74;
      if ((v180 & 0x3000000000000000) == 0)
      {
        v181 = v179[1];
        if ((v181 & 0x3000000000000000) == 0)
        {
          v428 = *v178;
          *v178 = *v179;
          v178[1] = v181;
          sub_23AAAE53C(v428, v180);
          goto LABEL_117;
        }
        sub_23AAAE53C(*v178, v180);
      }
      *(_OWORD *)v178 = *(_OWORD *)v179;
LABEL_117:
      v88 = v507;
      v89 = v501;
      v85 = v505;
      v182 = ((unint64_t)v178 + 19) & 0xFFFFFFFFFFFFFFF8;
      v183 = ((unint64_t)v179 + 19) & 0xFFFFFFFFFFFFFFF8;
      v184 = *(_QWORD *)v183;
      *(_BYTE *)(v182 + 8) = *(_BYTE *)(v183 + 8);
      *(_QWORD *)v182 = v184;
      *(_BYTE *)(v182 + 9) = *(_BYTE *)(v183 + 9);
      v185 = (v182 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      v186 = (v183 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      v187 = *(_DWORD *)v186;
      *(_BYTE *)(v185 + 4) = *(_BYTE *)(v186 + 4);
      *(_DWORD *)v185 = v187;
      v188 = (_QWORD *)((v182 + 25) & 0xFFFFFFFFFFFFFFF8);
      v189 = (_QWORD *)((v183 + 25) & 0xFFFFFFFFFFFFFFF8);
      *v188 = *v189;
      v188[1] = v189[1];
      swift_bridgeObjectRelease();
LABEL_118:
      v141 = v86;
      goto LABEL_119;
    }
    v81 = v57;
    v78 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v52 + 48))(v80, v59, v79);
    v57 = v81;
  }
  else
  {
    v77 = *(_QWORD *)(v76 + 8);
    if (v77 >= 0xFFFFFFFF)
      LODWORD(v77) = -1;
    v78 = v77 + 1;
  }
  v75 = v69;
  v82 = (_QWORD *)(((unint64_t)v57 + v63) & 0xFFFFFFFFFFFFFFF8);
  if (!v78)
  {
    if ((v61 & 0x80000000) == 0)
    {
      v90 = v82[1];
      if (v90 >= 0xFFFFFFFF)
        LODWORD(v90) = -1;
      v73 = v90 + 1;
LABEL_62:
      v91 = v523;
      if (v73)
      {
LABEL_63:
        (*(void (**)(void *, uint64_t))(v530 + 8))(v74, v526);
        swift_bridgeObjectRelease();
        v92 = (v524 + ((v65 + (((unint64_t)v74 + v63) & 0xFFFFFFFFFFFFFFF8)) & v537)) & v91;
        v93 = v91;
        v94 = *(void (**)(unint64_t, uint64_t))(v522 + 8);
        v94(v92, v528);
        v95 = (v75 + v92) & v93;
        v94(v95, v528);
        swift_bridgeObjectRelease();
        v96 = (v516
             + ((((((v500 + v95) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v93;
        v89 = v501;
        v85 = v505;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v522 + 48))(v96, 1, v528))
          v94(v96, v528);
        if (v534)
          v86 = v532;
        else
          v86 = v532 + 1;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v97 = (uint64_t *)((((((v86 + 7 + v96) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        v98 = v97[1];
        if ((v98 & 0x3000000000000000) == 0)
          sub_23AAAE53C(*v97, v98);
        swift_bridgeObjectRelease();
        v87 = v74;
        memcpy(v74, __src, v505+ ((((((((((v86 + 7 + v536) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ 16);
        v88 = v507;
        goto LABEL_118;
      }
      goto LABEL_90;
    }
    v142 = v67;
    v100 = ((unint64_t)v82 + v65) & v537;
    v91 = v523;
    v101 = (v142 + v100) & v523;
    if (v59 > 0x7FFFFFFD)
    {
      v143 = v57;
      v144 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v522 + 48))((v142 + v100) & v523, v59, v528);
      v57 = v143;
      v91 = v523;
      if (v144)
        goto LABEL_63;
LABEL_90:
      v82 = (_QWORD *)(((unint64_t)v57 + v63) & 0xFFFFFFFFFFFFFFF8);
      v100 = ((unint64_t)v82 + v65) & v537;
      v101 = (v524 + v100) & v91;
      v145 = (v75 + v101) & v91;
      goto LABEL_100;
    }
    v124 = v500;
    goto LABEL_97;
  }
  if ((v61 & 0x80000000) == 0)
  {
    v83 = v82[1];
    if (v83 >= 0xFFFFFFFF)
      LODWORD(v83) = -1;
    v73 = v83 + 1;
    goto LABEL_51;
  }
  v99 = v67;
  v100 = ((unint64_t)v82 + v65) & v537;
  v91 = v523;
  v101 = (v99 + v100) & v523;
  if (v59 > 0x7FFFFFFD)
  {
    v102 = v57;
    v103 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v522 + 48))((v99 + v100) & v523, v59, v528);
    v57 = v102;
    if (v103)
      goto LABEL_52;
LABEL_73:
    v82 = (_QWORD *)(((unint64_t)v57 + v63) & 0xFFFFFFFFFFFFFFF8);
    v100 = ((unint64_t)v82 + v65) & v537;
    v101 = (v524 + v100) & v523;
    v104 = (v75 + v101) & v523;
    goto LABEL_74;
  }
  v124 = v500;
LABEL_92:
  v104 = (v75 + v101) & v91;
  v146 = *(_QWORD *)(((v124 + v104) & 0xFFFFFFFFFFFFF8) + 8);
  if (v146 >= 0xFFFFFFFF)
    LODWORD(v146) = -1;
  if ((v146 + 1) >= 2)
    goto LABEL_52;
LABEL_74:
  (*(void (**)(void *, void *, uint64_t))(v530 + 32))(v74, v57, v526);
  v105 = (_OWORD *)(((unint64_t)v74 + v63) & 0xFFFFFFFFFFFFFFF8);
  *v105 = *(_OWORD *)v82;
  v106 = ((unint64_t)v105 + v65) & v537;
  *(_BYTE *)v106 = *(_BYTE *)v100;
  v107 = v106 | 4;
  v108 = *(_DWORD *)(v100 | 4);
  *(_BYTE *)(v107 + 4) = *(_BYTE *)((v100 | 4) + 4);
  *(_DWORD *)v107 = v108;
  *(_WORD *)(v106 + 10) = *(_WORD *)(v100 + 10);
  v109 = (v524 + v106) & v523;
  v110 = *(void (**)(unint64_t, unint64_t, uint64_t))(v522 + 32);
  v110(v109, v101, v528);
  v111 = (v75 + v109) & v523;
  v110(v111, v104, v528);
  v112 = (_BYTE *)(v111 + v532);
  *v112 = *(_BYTE *)(v104 + v532);
  v112[1] = *(_BYTE *)(v104 + v532 + 1);
  v112[2] = *(_BYTE *)(v104 + v532 + 2);
  v112[3] = *(_BYTE *)(v104 + v532 + 3);
  v112[4] = *(_BYTE *)(v104 + v532 + 4);
  v113 = (v111 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
  v114 = (v104 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v113 = *(_OWORD *)v114;
  *(_BYTE *)(v113 + 16) = *(_BYTE *)(v114 + 16);
  *(_BYTE *)(v113 + 17) = *(_BYTE *)(v114 + 17);
  *(_BYTE *)(v113 + 18) = *(_BYTE *)(v114 + 18);
  *(_BYTE *)(v113 + 19) = *(_BYTE *)(v114 + 19);
  v115 = (v113 + 27) & 0xFFFFFFFFFFFFFFF8;
  v116 = (v114 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v115 = *(_QWORD *)v116;
  *(_BYTE *)(v115 + 8) = *(_BYTE *)(v116 + 8);
  *(_BYTE *)(v115 + 9) = *(_BYTE *)(v116 + 9);
  *(_BYTE *)(v115 + 10) = *(_BYTE *)(v116 + 10);
  *(_BYTE *)(v115 + 11) = *(_BYTE *)(v116 + 11);
  *(_BYTE *)(v115 + 12) = *(_BYTE *)(v116 + 12);
  v117 = (_QWORD *)((v113 + 47) & 0xFFFFFFFFFFFFF8);
  v118 = (_QWORD *)((v114 + 47) & 0xFFFFFFFFFFFFF8);
  *v117 = *v118;
  v119 = ((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFFFF8;
  v120 = ((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v119 = *(_QWORD *)v120;
  *(_BYTE *)(v119 + 8) = *(_BYTE *)(v120 + 8);
  *(_BYTE *)(v119 + 9) = *(_BYTE *)(v120 + 9);
  v121 = (void *)((v516 + v119) & v523);
  v122 = (const void *)((v516 + v120) & v523);
  v87 = v74;
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v522 + 48))(v122, 1, v528))
  {
    v123 = v534;
    if (v534)
      v86 = v532;
    else
      v86 = v532 + 1;
    memcpy(v121, v122, v86);
  }
  else
  {
    v110((unint64_t)v121, (unint64_t)v122, v528);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v522 + 56))(v121, 0, 1, v528);
    v123 = v534;
    if (v534)
      v86 = v532;
    else
      v86 = v532 + 1;
  }
  v89 = v501;
  v127 = (_QWORD *)(((unint64_t)v121 + v86 + 7) & 0xFFFFFFFFFFFFFFF8);
  v128 = (_QWORD *)(((unint64_t)v122 + v86 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v127 = *v128;
  v129 = ((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8;
  v130 = ((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8;
  v131 = *(_QWORD *)v130;
  *(_BYTE *)(v129 + 8) = *(_BYTE *)(v130 + 8);
  *(_QWORD *)v129 = v131;
  v132 = (_QWORD *)(((unint64_t)v127 + 31) & 0xFFFFFFFFFFFFF8);
  v133 = (_QWORD *)(((unint64_t)v128 + 31) & 0xFFFFFFFFFFFFF8);
  *v132 = *v133;
  v134 = (_OWORD *)(((unint64_t)v132 + 15) & 0xFFFFFFFFFFFFFFF8);
  v135 = (_OWORD *)(((unint64_t)v133 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v134 = *v135;
  v136 = ((unint64_t)v134 + 19) & 0xFFFFFFFFFFFFFFF8;
  v137 = ((unint64_t)v135 + 19) & 0xFFFFFFFFFFFFFFF8;
  v138 = *(_QWORD *)v137;
  *(_BYTE *)(v136 + 8) = *(_BYTE *)(v137 + 8);
  *(_QWORD *)v136 = v138;
  *(_BYTE *)(v136 + 9) = *(_BYTE *)(v137 + 9);
  v139 = (v136 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v140 = (v137 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v131) = *(_DWORD *)v140;
  *(_BYTE *)(v139 + 4) = *(_BYTE *)(v140 + 4);
  *(_DWORD *)v139 = v131;
  *(_OWORD *)((v136 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v137 + 25) & 0xFFFFFFFFFFFFF8);
  v141 = v532;
  v88 = v507;
  v85 = v505;
  if (!v123)
    goto LABEL_118;
LABEL_119:
  v190 = (((((((((v536 + 7 + v141) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  v506 = swift_getAssociatedTypeWitness();
  v191 = *(_QWORD *)(v506 - 8);
  v192 = *(_DWORD *)(v191 + 80) & 0xF8;
  v193 = swift_getAssociatedTypeWitness();
  v194 = *(_QWORD *)(v193 - 8);
  v195 = *(unsigned __int8 *)(v194 + 80);
  v196 = v192 | v195 | 7;
  v197 = v89 | v196;
  v198 = v85 + (v89 | v196) + v190 + 16;
  v199 = (char *)(((unint64_t)v87 + v198) & ~(v89 | v196));
  v200 = (char *)(((unint64_t)__src + v198) & ~v197);
  v201 = *(unsigned int *)(v191 + 84);
  v202 = *(unsigned int *)(v194 + 84);
  if (v201 <= v202)
    v203 = *(_DWORD *)(v194 + 84);
  else
    v203 = *(_DWORD *)(v191 + 84);
  if (v203 <= 0x7FFFFFFE)
    v204 = 2147483646;
  else
    v204 = v203;
  if (v204 <= v508)
    v205 = v508;
  else
    v205 = v204;
  if (v205 <= v88)
    v206 = v88;
  else
    v206 = v205;
  if (v206 <= 0x7FFFFFFF)
    v207 = 0x7FFFFFFF;
  else
    v207 = v206;
  v208 = ~v512;
  v209 = v510 + v512;
  v210 = ~v196;
  v211 = v510 + v196;
  v212 = (v510 + v196 + ((v510 + v512) & ~v512)) & ~v196;
  v513 = v191;
  v213 = *(_QWORD *)(v191 + 64) + 7;
  v214 = ~v195;
  v215 = v195 + 8;
  v216 = ((((*(_QWORD *)(v194 + 64) + 7 + ((v195 + 8 + (v213 & 0xFFFFFFFFFFFFFFF8)) & ~v195)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v217 = v514 + 16;
  v515 = (v514 + 16 + v212 + v216) & v537;
  v503 = v193;
  v504 = v217;
  v495 = *(_QWORD *)(v194 + 64) + 7;
  v496 = v216;
  v502 = *(_QWORD *)(v193 - 8);
  v497 = v195 + 8;
  v498 = ~v195;
  v511 = v213;
  if (v508 == v207)
  {
    v218 = *(uint64_t (**)(char *, _QWORD, uint64_t))(v530 + 48);
    v219 = v210;
    v220 = v211;
    v221 = v208;
    v222 = v209;
    v223 = v218(v199, v508, v526);
    v224 = v218(v200, v508, v526);
    v209 = v222;
    v208 = v221;
    v211 = v220;
    v210 = v219;
    v225 = v521;
    v226 = v534;
    v227 = v528;
    if (v223)
    {
      if (!v224)
        goto LABEL_193;
      goto LABEL_187;
    }
    goto LABEL_213;
  }
  __srca = v200;
  v509 = v199;
  v228 = (v211 + ((unint64_t)&v199[v209] & v208)) & v210;
  if (v204 == v207)
  {
    if ((_DWORD)v201 == v204)
    {
      v494 = v210;
      v229 = ((((*(_QWORD *)(v194 + 64) + 7 + ((v195 + 8 + (v213 & 0xFFFFFFFFFFFFFFF8)) & ~v195)) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v230 = v211;
      v231 = v208;
      v232 = v209;
      v233 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v513 + 48))(v228, v201, v506);
      v209 = v232;
      v208 = v231;
      goto LABEL_158;
    }
    v244 = (unint64_t *)((v213 + v228) & 0xFFFFFFFFFFFFFFF8);
    if (v203 <= 0x7FFFFFFE)
    {
      v245 = *v244;
      goto LABEL_177;
    }
    v248 = ((unint64_t)v244 + v215) & v214;
    v249 = *(uint64_t (**)(unint64_t))(v194 + 48);
    v494 = v210;
    goto LABEL_157;
  }
  v234 = v228 + v216;
  if ((v206 & 0x80000000) != 0)
  {
    v248 = (v524 + ((v217 + v234) & v537)) & v523;
    if (v534 <= 0x7FFFFFFD)
    {
      v245 = *(_QWORD *)(((v500 + ((v499 + v248) & v523)) & 0xFFFFFFFFFFFFF8) + 8);
LABEL_177:
      if (v245 >= 0xFFFFFFFF)
        LODWORD(v245) = -1;
      if ((v245 + 1) < 2)
        goto LABEL_145;
      goto LABEL_159;
    }
    v249 = *(uint64_t (**)(unint64_t))(v522 + 48);
    v494 = v210;
LABEL_157:
    v229 = v216;
    v230 = v211;
    v250 = v208;
    v251 = v209;
    v233 = v249(v248);
    v209 = v251;
    v208 = v250;
LABEL_158:
    v211 = v230;
    v210 = v494;
    v216 = v229;
    if (v233)
      goto LABEL_159;
LABEL_145:
    v236 = (unint64_t)&__srca[v209] & v208;
    v237 = (v211 + v236) & v210;
    if (v204 == v207)
    {
      v238 = v530;
      if ((_DWORD)v201 == v204)
      {
        v239 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v513 + 48);
        v240 = (v211 + v236) & v210;
        v241 = v201;
        v242 = v210;
        v243 = v506;
LABEL_210:
        v356 = v211;
        v357 = v208;
        v358 = v209;
        v224 = v239(v240, v241, v243);
        v209 = v358;
        v208 = v357;
        v211 = v356;
        v210 = v242;
LABEL_211:
        v226 = v534;
        v227 = v528;
        goto LABEL_212;
      }
      v270 = (unint64_t *)((v511 + v237) & 0xFFFFFFFFFFFFFFF8);
      if (v203 > 0x7FFFFFFE)
      {
        v240 = ((unint64_t)v270 + v497) & v498;
        v239 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v502 + 48);
        v241 = v202;
        v242 = v210;
        v243 = v503;
        goto LABEL_210;
      }
      v271 = *v270;
      if (v271 >= 0xFFFFFFFF)
        LODWORD(v271) = -1;
      v272 = (v271 + 1) >= 2;
      v226 = v534;
    }
    else
    {
      v246 = v237 + v216;
      v238 = v530;
      if ((v206 & 0x80000000) == 0)
      {
        v247 = *(_QWORD *)(v246 + 8);
        if (v247 >= 0xFFFFFFFF)
          LODWORD(v247) = -1;
        v224 = v247 + 1;
        goto LABEL_211;
      }
      v273 = (v524 + ((v504 + v246) & v537)) & v523;
      v226 = v534;
      if (v534 > 0x7FFFFFFD)
      {
        v227 = v528;
        v274 = v210;
        v275 = v211;
        v276 = v208;
        v277 = v209;
        v224 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v522 + 48))(v273, v534, v528);
        v209 = v277;
        v208 = v276;
        v211 = v275;
        v210 = v274;
LABEL_212:
        v199 = v509;
        v200 = __srca;
LABEL_213:
        v238 = v530;
        if (v224)
        {
LABEL_214:
          v359 = v200;
          v360 = *(void (**)(char *, uint64_t))(v238 + 8);
          v361 = v210;
          v362 = v211;
          v363 = v208;
          v364 = v209;
          v360(v199, v526);
          v365 = (unint64_t)&v199[v364] & v363;
          v360((char *)v365, v526);
          v366 = (v362 + v365) & v361;
          (*(void (**)(unint64_t, uint64_t))(v513 + 8))(v366, v506);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v502 + 8))((v497 + ((v511 + v366) & 0xFFFFFFFFFFFFFFF8)) & v498, v503);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v367 = (v504 + v366 + v496) & v537;
          v368 = *(void (**)(unint64_t, uint64_t))(v522 + 8);
          v368((v524 + v367) & v523, v227);
          v369 = (v499 + ((v524 + v367) & v523)) & v523;
          v368(v369, v227);
          swift_bridgeObjectRelease();
          v370 = (v516
                + ((((((v500 + v369) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v523;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v522 + 48))(v370, 1, v227))
            v368(v370, v227);
          if (v226)
            v283 = v532;
          else
            v283 = v532 + 1;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v371 = (uint64_t *)((((((v283 + 7 + v370) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          v372 = v371[1];
          if ((v372 & 0x3000000000000000) == 0)
            sub_23AAAE53C(*v371, v372);
          swift_bridgeObjectRelease();
          v373 = (((((((((v283 + 7 + v536) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 19) & 0xFFFFFFFFFFFFFFF8)
                + 25) & 0xFFFFFFFFFFFFFFF8;
          v374 = v373 + v367;
          v375 = v373 + v367 + 16;
          v376 = *(void **)(v374 + 32);
          v377 = -1;
          if ((unint64_t)v376 < 0xFFFFFFFF)
            v377 = (int)v376;
          v284 = v536 + 7;
          v200 = v359;
          v282 = v515;
          v225 = v521;
          if (v377 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v375 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_23AAA12F0(*(_QWORD *)((((v375 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((((v375 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          memcpy(v199, v200, ((((v373 + v515 + 327) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
          goto LABEL_269;
        }
        v236 = (unint64_t)&v200[v209] & v208;
        v237 = (v211 + v236) & v210;
LABEL_229:
        v378 = *(void (**)(char *, char *, uint64_t))(v238 + 40);
        __srcc = v200;
        v379 = v210;
        v380 = v211;
        v381 = v208;
        v382 = v209;
        v378(v199, v200, v526);
        v383 = (unint64_t)&v199[v382] & v381;
        v378((char *)v383, (char *)v236, v526);
        v384 = (v380 + v383) & v379;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v513 + 40))(v384, v237, v506);
        v385 = (_QWORD *)((v511 + v384) & 0xFFFFFFFFFFFFFFF8);
        v386 = (_QWORD *)((v511 + v237) & 0xFFFFFFFFFFFFFFF8);
        *v385 = *v386;
        swift_bridgeObjectRelease();
        v387 = ((unint64_t)v385 + v497) & v498;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v502 + 40))(v387, ((unint64_t)v386 + v497) & v498, v503);
        v388 = (_QWORD *)((v495 + v387) & 0xFFFFFFFFFFFFFFF8);
        v389 = (v495 + (((unint64_t)v386 + v497) & v498)) & 0xFFFFFFFFFFFFF8;
        v390 = *(_QWORD *)v389;
        v389 += 15;
        *v388 = v390;
        swift_bridgeObjectRelease();
        v391 = (_QWORD *)(((unint64_t)v388 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v391 = *(_QWORD *)(v389 & 0xFFFFFFFFFFFFFFF8);
        v391[1] = *(_QWORD *)((v389 & 0xFFFFFFFFFFFFFFF8) + 8);
        swift_bridgeObjectRelease();
        v392 = (_QWORD *)(v384 + v496);
        *v392 = *(_QWORD *)(v237 + v496);
        v392[1] = *(_QWORD *)(v237 + v496 + 8);
        swift_bridgeObjectRelease();
        v393 = (v504 + v384 + v496) & v537;
        v394 = (v504 + v237 + v496) & v537;
        *(_BYTE *)v393 = *(_BYTE *)v394;
        v395 = v393 | 4;
        v396 = *(_DWORD *)(v394 | 4);
        *(_BYTE *)(v395 + 4) = *(_BYTE *)((v394 | 4) + 4);
        *(_DWORD *)v395 = v396;
        *(_WORD *)(v393 + 10) = *(_WORD *)(v394 + 0xA);
        v397 = *(void (**)(unint64_t, unint64_t, uint64_t))(v522 + 40);
        v397((v524 + v393) & v523, (v524 + v394) & v523, v227);
        v398 = (v499 + ((v524 + v393) & v523)) & v523;
        v399 = (v499 + ((v524 + v394) & v523)) & v523;
        v397(v398, v399, v227);
        v400 = (_BYTE *)(v398 + v532);
        *v400 = *(_BYTE *)(v399 + v532);
        v400[1] = *(_BYTE *)(v399 + v532 + 1);
        v400[2] = *(_BYTE *)(v399 + v532 + 2);
        v400[3] = *(_BYTE *)(v399 + v532 + 3);
        v400[4] = *(_BYTE *)(v399 + v532 + 4);
        v401 = (v398 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
        v402 = (v399 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v401 = *(_QWORD *)v402;
        *(_QWORD *)(v401 + 8) = *(_QWORD *)(v402 + 8);
        swift_bridgeObjectRelease();
        *(_BYTE *)(v401 + 16) = *(_BYTE *)(v402 + 16);
        *(_BYTE *)(v401 + 17) = *(_BYTE *)(v402 + 17);
        *(_BYTE *)(v401 + 18) = *(_BYTE *)(v402 + 18);
        *(_BYTE *)(v401 + 19) = *(_BYTE *)(v402 + 19);
        v403 = (v401 + 27) & 0xFFFFFFFFFFFFFFF8;
        v404 = (v402 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v403 = *(_QWORD *)v404;
        *(_BYTE *)(v403 + 8) = *(_BYTE *)(v404 + 8);
        *(_BYTE *)(v403 + 9) = *(_BYTE *)(v404 + 9);
        *(_BYTE *)(v403 + 10) = *(_BYTE *)(v404 + 10);
        *(_BYTE *)(v403 + 11) = *(_BYTE *)(v404 + 11);
        *(_BYTE *)(v403 + 12) = *(_BYTE *)(v404 + 12);
        v405 = (_QWORD *)((v401 + 47) & 0xFFFFFFFFFFFFF8);
        v406 = (_QWORD *)((v402 + 47) & 0xFFFFFFFFFFFFF8);
        *v405 = *v406;
        v407 = ((unint64_t)v405 + 15) & 0xFFFFFFFFFFFFFFF8;
        v408 = ((unint64_t)v406 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v407 = *(_QWORD *)v408;
        *(_BYTE *)(v407 + 8) = *(_BYTE *)(v408 + 8);
        *(_BYTE *)(v407 + 9) = *(_BYTE *)(v408 + 9);
        v409 = (char *)((v516 + v407) & v523);
        v410 = (char *)((v516 + v408) & v523);
        v411 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v522 + 48);
        v412 = v411(v409, 1, v227);
        v413 = v411(v410, 1, v227);
        if (v412)
        {
          v414 = v534;
          if (!v413)
          {
            (*(void (**)(char *, char *, uint64_t))(v522 + 32))(v409, v410, v227);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v522 + 56))(v409, 0, 1, v227);
            v283 = v532;
            goto LABEL_238;
          }
        }
        else
        {
          v414 = v534;
          if (!v413)
          {
            v397((unint64_t)v409, (unint64_t)v410, v227);
            v283 = v532;
            goto LABEL_238;
          }
          (*(void (**)(char *, uint64_t))(v522 + 8))(v409, v227);
        }
        v283 = v532;
        if (v414)
          v415 = v532;
        else
          v415 = v532 + 1;
        memcpy(v409, v410, v415);
LABEL_238:
        v284 = v536 + 7;
        if (!v414)
          ++v283;
        v416 = (unint64_t)&v409[v283 + 7];
        v417 = (_QWORD *)((unint64_t)&v410[v283 + 7] & 0xFFFFFFFFFFFFFFF8);
        v418 = (v416 & 0xFFFFFFFFFFFFFFF8) + 15;
        *(_QWORD *)(v416 & 0xFFFFFFFFFFFFFFF8) = *v417;
        v419 = (v416 & 0xFFFFFFFFFFFFFFF8) + 31;
        swift_bridgeObjectRelease();
        v420 = v418 & 0xFFFFFFFFFFFFFFF8;
        v421 = ((unint64_t)v417 + 15) & 0xFFFFFFFFFFFFFFF8;
        v422 = *(_QWORD *)v421;
        *(_BYTE *)(v420 + 8) = *(_BYTE *)(v421 + 8);
        *(_QWORD *)v420 = v422;
        v423 = (_QWORD *)(((unint64_t)v417 + 31) & 0xFFFFFFFFFFFFF8);
        *(_QWORD *)(v419 & 0xFFFFFFFFFFFFFFF8) = *v423;
        swift_bridgeObjectRelease();
        v424 = (uint64_t *)(((v419 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        v425 = ((unint64_t)v423 + 15) & 0xFFFFFFFFFFFFFFF8;
        v426 = v424[1];
        if ((v426 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)v424 = *(_OWORD *)v425;
          v282 = v515;
        }
        else
        {
          v427 = *(_QWORD *)(v425 + 8);
          v282 = v515;
          if ((v427 & 0x3000000000000000) != 0)
          {
            sub_23AAAE53C(*v424, v426);
            *(_OWORD *)v424 = *(_OWORD *)v425;
          }
          else
          {
            v429 = *v424;
            *v424 = *(_QWORD *)v425;
            v424[1] = v427;
            sub_23AAAE53C(v429, v426);
          }
        }
        v430 = ((unint64_t)v424 + 19) & 0xFFFFFFFFFFFFFFF8;
        v431 = (v425 + 19) & 0xFFFFFFFFFFFFFFF8;
        v432 = *(_QWORD *)v431;
        *(_BYTE *)(v430 + 8) = *(_BYTE *)(v431 + 8);
        *(_QWORD *)v430 = v432;
        *(_BYTE *)(v430 + 9) = *(_BYTE *)(v431 + 9);
        v433 = (v430 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v434 = (v431 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        v435 = *(_DWORD *)v434;
        *(_BYTE *)(v433 + 4) = *(_BYTE *)(v434 + 4);
        *(_DWORD *)v433 = v435;
        v436 = (_QWORD *)((v430 + 25) & 0xFFFFFFFFFFFFFFF8);
        v437 = (_QWORD *)((v431 + 25) & 0xFFFFFFFFFFFFFFF8);
        *v436 = *v437;
        v436[1] = v437[1];
        swift_bridgeObjectRelease();
        v441 = ((((((((((v283 + 7 + v536) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 19) & 0xFFFFFFFFFFFFFFF8)
               + 25) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        v438 = v393 + v441;
        v439 = (__int128 *)(v394 + v441);
        v440 = *(void **)(v438 + 16);
        LODWORD(v441) = -1;
        if ((unint64_t)v440 < 0xFFFFFFFF)
          v441 = *(_QWORD *)(v438 + 16);
        if ((int)v441 - 1 >= 0)
        {
          v442 = *v439;
          v443 = v439[1];
          v444 = v439[3];
          *(_OWORD *)(v438 + 32) = v439[2];
          *(_OWORD *)(v438 + 48) = v444;
          *(_OWORD *)v438 = v442;
          *(_OWORD *)(v438 + 16) = v443;
          v445 = v439[4];
          v446 = v439[5];
          v447 = v439[7];
          *(_OWORD *)(v438 + 96) = v439[6];
          *(_OWORD *)(v438 + 112) = v447;
          *(_OWORD *)(v438 + 64) = v445;
          *(_OWORD *)(v438 + 80) = v446;
          v448 = v439[8];
          v449 = v439[9];
          v450 = v439[11];
          *(_OWORD *)(v438 + 160) = v439[10];
          *(_OWORD *)(v438 + 176) = v450;
          *(_OWORD *)(v438 + 128) = v448;
          *(_OWORD *)(v438 + 144) = v449;
          v451 = v439[12];
          v452 = v439[13];
          v453 = v439[14];
          *(_QWORD *)(v438 + 240) = *((_QWORD *)v439 + 30);
          *(_OWORD *)(v438 + 208) = v452;
          *(_OWORD *)(v438 + 224) = v453;
          *(_OWORD *)(v438 + 192) = v451;
          v225 = v521;
LABEL_268:
          v471 = (_OWORD *)((v438 + 255) & 0xFFFFFFFFFFFFFFF8);
          v472 = (__int128 *)(((unint64_t)v439 + 255) & 0xFFFFFFFFFFFFFFF8);
          v473 = *v472;
          *(_OWORD *)((char *)v471 + 9) = *(__int128 *)((char *)v472 + 9);
          *v471 = v473;
          v474 = (v438 + 287) & 0xFFFFFFFFFFFFFFF8;
          v475 = ((unint64_t)v439 + 287) & 0xFFFFFFFFFFFFFFF8;
          v476 = *(_OWORD *)v475;
          *(_BYTE *)(v474 + 16) = *(_BYTE *)(v475 + 16);
          *(_OWORD *)v474 = v476;
          v477 = (_QWORD *)((v438 + 311) & 0xFFFFFFFFFFFFF8);
          v478 = (_QWORD *)(((unint64_t)v439 + 311) & 0xFFFFFFFFFFFFF8);
          *v477 = *v478;
          v479 = (uint64_t *)(((unint64_t)v477 + 15) & 0xFFFFFFFFFFFFFFF8);
          v480 = *v479;
          v481 = v479[1];
          *(_OWORD *)v479 = *(_OWORD *)(((unint64_t)v478 + 15) & 0xFFFFFFFFFFFFF8);
          sub_23AAA12F0(v480, v481);
          v200 = __srcc;
LABEL_269:
          v305 = v283;
          goto LABEL_270;
        }
        v454 = *((_QWORD *)v439 + 2);
        if (v454 >= 0xFFFFFFFF)
          LODWORD(v454) = -1;
        v225 = v521;
        if ((int)v454 - 1 >= 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v438 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v455 = *v439;
          v456 = v439[1];
          v457 = v439[3];
          *(_OWORD *)(v438 + 32) = v439[2];
          *(_OWORD *)(v438 + 48) = v457;
          *(_OWORD *)v438 = v455;
          *(_OWORD *)(v438 + 16) = v456;
          v458 = v439[4];
          v459 = v439[5];
          v460 = v439[7];
          *(_OWORD *)(v438 + 96) = v439[6];
          *(_OWORD *)(v438 + 112) = v460;
          *(_OWORD *)(v438 + 64) = v458;
          *(_OWORD *)(v438 + 80) = v459;
          v461 = v439[8];
          v462 = v439[9];
          v463 = v439[11];
          *(_OWORD *)(v438 + 160) = v439[10];
          *(_OWORD *)(v438 + 176) = v463;
          *(_OWORD *)(v438 + 128) = v461;
          *(_OWORD *)(v438 + 144) = v462;
          v464 = v439[12];
          v465 = v439[13];
          v466 = v439[14];
          *(_QWORD *)(v438 + 240) = *((_QWORD *)v439 + 30);
          *(_OWORD *)(v438 + 208) = v465;
          *(_OWORD *)(v438 + 224) = v466;
          *(_OWORD *)(v438 + 192) = v464;
          goto LABEL_268;
        }
        *(_QWORD *)v438 = *(_QWORD *)v439;
        *(_BYTE *)(v438 + 8) = *((_BYTE *)v439 + 8);
        *(_BYTE *)(v438 + 9) = *((_BYTE *)v439 + 9);
        *(_QWORD *)(v438 + 16) = *((_QWORD *)v439 + 2);

        v467 = *(void **)(v438 + 24);
        *(_QWORD *)(v438 + 24) = *((_QWORD *)v439 + 3);

        *(_BYTE *)(v438 + 32) = *((_BYTE *)v439 + 32);
        *(_BYTE *)(v438 + 33) = *((_BYTE *)v439 + 33);
        *(_BYTE *)(v438 + 34) = *((_BYTE *)v439 + 34);
        *(_QWORD *)(v438 + 40) = *((_QWORD *)v439 + 5);
        *(_QWORD *)(v438 + 48) = *((_QWORD *)v439 + 6);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v438 + 56) = *((_QWORD *)v439 + 7);
        *(_QWORD *)(v438 + 64) = *((_QWORD *)v439 + 8);
        swift_bridgeObjectRelease();
        *(_BYTE *)(v438 + 72) = *((_BYTE *)v439 + 72);
        *(_QWORD *)(v438 + 80) = *((_QWORD *)v439 + 10);
        *(_QWORD *)(v438 + 88) = *((_QWORD *)v439 + 11);
        swift_bridgeObjectRelease();
        v468 = *(void **)(v438 + 96);
        *(_QWORD *)(v438 + 96) = *((_QWORD *)v439 + 12);

        *(_BYTE *)(v438 + 104) = *((_BYTE *)v439 + 104);
        *(_BYTE *)(v438 + 105) = *((_BYTE *)v439 + 105);
        *(_QWORD *)(v438 + 112) = *((_QWORD *)v439 + 14);
        *(_QWORD *)(v438 + 120) = *((_QWORD *)v439 + 15);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v438 + 128) = *((_QWORD *)v439 + 16);
        *(_QWORD *)(v438 + 136) = *((_QWORD *)v439 + 17);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v438 + 144) = *((_QWORD *)v439 + 18);
        *(_QWORD *)(v438 + 152) = *((_QWORD *)v439 + 19);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v438 + 160) = *((_QWORD *)v439 + 20);
        *(_QWORD *)(v438 + 168) = *((_QWORD *)v439 + 21);
        swift_bridgeObjectRelease();
        *(_BYTE *)(v438 + 176) = *((_BYTE *)v439 + 176);
        *(_QWORD *)(v438 + 184) = *((_QWORD *)v439 + 23);
        swift_bridgeObjectRelease();
        v469 = *((_QWORD *)v439 + 24);
        if (*(_QWORD *)(v438 + 192))
        {
          if (v469)
          {
            *(_QWORD *)(v438 + 192) = v469;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v438 + 200) = *((_QWORD *)v439 + 25);
            swift_bridgeObjectRelease();
LABEL_267:
            v225 = v521;
            *(_QWORD *)(v438 + 208) = *((_QWORD *)v439 + 26);
            *(_QWORD *)(v438 + 216) = *((_QWORD *)v439 + 27);
            *(_QWORD *)(v438 + 224) = *((_QWORD *)v439 + 28);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v438 + 232) = *((_QWORD *)v439 + 29);
            *(_QWORD *)(v438 + 240) = *((_QWORD *)v439 + 30);
            swift_bridgeObjectRelease();
            goto LABEL_268;
          }
          sub_23AC40C1C(v438 + 192);
        }
        *(_OWORD *)(v438 + 192) = v439[12];
        goto LABEL_267;
      }
      v470 = *(_QWORD *)(((v500 + ((v499 + v273) & v523)) & 0xFFFFFFFFFFFFF8) + 8);
      if (v470 >= 0xFFFFFFFF)
        LODWORD(v470) = -1;
      v272 = (v470 + 1) >= 2;
    }
    v227 = v528;
    v199 = v509;
    v200 = __srca;
    if (v272)
      goto LABEL_214;
    goto LABEL_229;
  }
  v235 = *(_QWORD *)(v234 + 8);
  if (v235 >= 0xFFFFFFFF)
    LODWORD(v235) = -1;
  if ((_DWORD)v235 == -1)
    goto LABEL_145;
LABEL_159:
  v252 = (unint64_t)&__srca[v209] & v208;
  v253 = (v211 + v252) & v210;
  if (v204 == v207)
  {
    if ((_DWORD)v201 == v204)
    {
      v254 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v513 + 48);
      v255 = (v211 + v252) & v210;
      v256 = v201;
      v257 = v210;
      v258 = v506;
LABEL_184:
      v278 = v211;
      v279 = v208;
      v280 = v209;
      v261 = v254(v255, v256, v258);
      v209 = v280;
      v208 = v279;
      v211 = v278;
      v210 = v257;
LABEL_185:
      v225 = v521;
      v226 = v534;
      v227 = v528;
LABEL_186:
      v199 = v509;
      v200 = __srca;
      if (!v261)
      {
LABEL_193:
        v252 = (unint64_t)&v200[v209] & v208;
        v253 = (v211 + v252) & v210;
        goto LABEL_194;
      }
LABEL_187:
      v281 = 7;
      if (!v226)
        v281 = 8;
      v282 = v515;
      if (v226)
        v283 = v532;
      else
        v283 = v532 + 1;
      memcpy(v199, v200, ((((((((((((((v281 + v532 + v536) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 19) & 0xFFFFFFFFFFFFFFF8)+ 25) & 0xFFFFFFFFFFFFFFF8)+ v515+ 327) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
      v284 = v536 + 7;
      goto LABEL_269;
    }
    v262 = (unint64_t *)((v511 + v253) & 0xFFFFFFFFFFFFFFF8);
    if (v203 > 0x7FFFFFFE)
    {
      v255 = ((unint64_t)v262 + v497) & v498;
      v254 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v502 + 48);
      v256 = v202;
      v257 = v210;
      v258 = v503;
      goto LABEL_184;
    }
    v263 = *v262;
    if (v263 >= 0xFFFFFFFF)
      LODWORD(v263) = -1;
    v264 = (v263 + 1) >= 2;
    v225 = v521;
    v226 = v534;
  }
  else
  {
    v259 = v253 + v216;
    if ((v206 & 0x80000000) == 0)
    {
      v260 = *(_QWORD *)(v259 + 8);
      if (v260 >= 0xFFFFFFFF)
        LODWORD(v260) = -1;
      v261 = v260 + 1;
      goto LABEL_185;
    }
    v265 = (v524 + ((v504 + v259) & v537)) & v523;
    v226 = v534;
    if (v534 > 0x7FFFFFFD)
    {
      v227 = v528;
      v266 = v210;
      v267 = v211;
      v268 = v208;
      v269 = v209;
      v261 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v522 + 48))(v265, v534, v528);
      v209 = v269;
      v208 = v268;
      v211 = v267;
      v210 = v266;
      v225 = v521;
      goto LABEL_186;
    }
    v355 = *(_QWORD *)(((v500 + ((v499 + v265) & v523)) & 0xFFFFFFFFFFFFF8) + 8);
    if (v355 >= 0xFFFFFFFF)
      LODWORD(v355) = -1;
    v264 = (v355 + 1) >= 2;
    v225 = v521;
  }
  v227 = v528;
  v199 = v509;
  v200 = __srca;
  if (v264)
    goto LABEL_187;
LABEL_194:
  v285 = *(void (**)(char *, char *, uint64_t))(v530 + 32);
  __srcb = v200;
  v286 = v210;
  v287 = v211;
  v288 = v208;
  v289 = v209;
  v285(v199, v200, v526);
  v290 = (unint64_t)&v199[v289] & v288;
  v285((char *)v290, (char *)v252, v526);
  v291 = (v287 + v290) & v286;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v513 + 32))(v291, v253, v506);
  v292 = (_QWORD *)((v511 + v291) & 0xFFFFFFFFFFFFFFF8);
  v293 = (_QWORD *)((v511 + v253) & 0xFFFFFFFFFFFFFFF8);
  *v292 = *v293;
  v294 = ((unint64_t)v292 + v497) & v498;
  v295 = ((unint64_t)v293 + v497) & v498;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v502 + 32))(v294, v295, v503);
  v296 = (_QWORD *)((v495 + v295) & 0xFFFFFFFFFFFFF8);
  v297 = (_QWORD *)((v495 + v294) & 0xFFFFFFFFFFFFF8);
  *v297 = *v296;
  *(_OWORD *)(((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFF8);
  *(_OWORD *)(v291 + v496) = *(_OWORD *)(v253 + v496);
  v298 = (v504 + v291 + v496) & v537;
  v299 = (v504 + v253 + v496) & v537;
  *(_BYTE *)v298 = *(_BYTE *)v299;
  v300 = v298 | 4;
  v301 = *(_DWORD *)(v299 | 4);
  *(_BYTE *)(v300 + 4) = *(_BYTE *)((v299 | 4) + 4);
  *(_DWORD *)v300 = v301;
  *(_WORD *)(v298 + 10) = *(_WORD *)(v299 + 0xA);
  v302 = *(void (**)(unint64_t, unint64_t, uint64_t))(v522 + 32);
  v302((v524 + v298) & v523, (v524 + v299) & v523, v227);
  v303 = (v499 + ((v524 + v298) & v523)) & v523;
  v304 = (v499 + ((v524 + v299) & v523)) & v523;
  v302(v303, v304, v227);
  v305 = v532;
  v306 = (_BYTE *)(v303 + v532);
  *v306 = *(_BYTE *)(v304 + v532);
  v306[1] = *(_BYTE *)(v304 + v532 + 1);
  v306[2] = *(_BYTE *)(v304 + v532 + 2);
  v306[3] = *(_BYTE *)(v304 + v532 + 3);
  v306[4] = *(_BYTE *)(v304 + v532 + 4);
  v307 = (v303 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
  v308 = (v304 + v532 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v307 = *(_OWORD *)v308;
  *(_BYTE *)(v307 + 16) = *(_BYTE *)(v308 + 16);
  *(_BYTE *)(v307 + 17) = *(_BYTE *)(v308 + 17);
  *(_BYTE *)(v307 + 18) = *(_BYTE *)(v308 + 18);
  *(_BYTE *)(v307 + 19) = *(_BYTE *)(v308 + 19);
  v309 = (v307 + 27) & 0xFFFFFFFFFFFFFFF8;
  v310 = (v308 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v309 = *(_QWORD *)v310;
  *(_BYTE *)(v309 + 8) = *(_BYTE *)(v310 + 8);
  *(_BYTE *)(v309 + 9) = *(_BYTE *)(v310 + 9);
  *(_BYTE *)(v309 + 10) = *(_BYTE *)(v310 + 10);
  *(_BYTE *)(v309 + 11) = *(_BYTE *)(v310 + 11);
  *(_BYTE *)(v309 + 12) = *(_BYTE *)(v310 + 12);
  v311 = (_QWORD *)((v307 + 47) & 0xFFFFFFFFFFFFF8);
  v312 = (_QWORD *)((v308 + 47) & 0xFFFFFFFFFFFFF8);
  *v311 = *v312;
  v313 = ((unint64_t)v311 + 15) & 0xFFFFFFFFFFFFFFF8;
  v314 = ((unint64_t)v312 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v313 = *(_QWORD *)v314;
  *(_BYTE *)(v313 + 8) = *(_BYTE *)(v314 + 8);
  *(_BYTE *)(v313 + 9) = *(_BYTE *)(v314 + 9);
  v315 = (void *)((v516 + v313) & v523);
  v316 = (const void *)((v516 + v314) & v523);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v522 + 48))(v316, 1, v227))
  {
    v317 = v534;
    if (v534)
      v283 = v532;
    else
      v283 = v532 + 1;
    memcpy(v315, v316, v283);
  }
  else
  {
    v302((unint64_t)v315, (unint64_t)v316, v227);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v522 + 56))(v315, 0, 1, v227);
    v317 = v534;
    if (v534)
      v283 = v532;
    else
      v283 = v532 + 1;
  }
  v284 = v536 + 7;
  v282 = v515;
  v318 = (_QWORD *)(((unint64_t)v315 + v283 + 7) & 0xFFFFFFFFFFFFFFF8);
  v319 = (_QWORD *)(((unint64_t)v316 + v283 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v318 = *v319;
  v320 = ((unint64_t)v318 + 15) & 0xFFFFFFFFFFFFFFF8;
  v321 = ((unint64_t)v319 + 15) & 0xFFFFFFFFFFFFFFF8;
  v322 = *(_QWORD *)v321;
  *(_BYTE *)(v320 + 8) = *(_BYTE *)(v321 + 8);
  *(_QWORD *)v320 = v322;
  v323 = (_QWORD *)(((unint64_t)v318 + 31) & 0xFFFFFFFFFFFFF8);
  v324 = (_QWORD *)(((unint64_t)v319 + 31) & 0xFFFFFFFFFFFFF8);
  *v323 = *v324;
  v325 = (_OWORD *)(((unint64_t)v323 + 15) & 0xFFFFFFFFFFFFFFF8);
  v326 = (_OWORD *)(((unint64_t)v324 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v325 = *v326;
  v327 = ((unint64_t)v325 + 19) & 0xFFFFFFFFFFFFFFF8;
  v328 = ((unint64_t)v326 + 19) & 0xFFFFFFFFFFFFFFF8;
  v329 = *(_QWORD *)v328;
  *(_BYTE *)(v327 + 8) = *(_BYTE *)(v328 + 8);
  *(_QWORD *)v327 = v329;
  *(_BYTE *)(v327 + 9) = *(_BYTE *)(v328 + 9);
  v330 = (v327 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  v331 = (v328 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v322) = *(_DWORD *)v331;
  *(_BYTE *)(v330 + 4) = *(_BYTE *)(v331 + 4);
  *(_DWORD *)v330 = v322;
  *(_OWORD *)((v327 + 25) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v328 + 25) & 0xFFFFFFFFFFFFF8);
  v332 = ((((((((((v283 + 7 + v536) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v333 = v298 + v332;
  v334 = (__int128 *)(v299 + v332);
  v335 = v334[7];
  v337 = v334[4];
  v336 = v334[5];
  *(_OWORD *)(v333 + 96) = v334[6];
  *(_OWORD *)(v333 + 112) = v335;
  *(_OWORD *)(v333 + 64) = v337;
  *(_OWORD *)(v333 + 80) = v336;
  v338 = v334[11];
  v340 = v334[8];
  v339 = v334[9];
  *(_OWORD *)(v333 + 160) = v334[10];
  *(_OWORD *)(v333 + 176) = v338;
  *(_OWORD *)(v333 + 128) = v340;
  *(_OWORD *)(v333 + 144) = v339;
  v342 = v334[13];
  v341 = v334[14];
  v343 = v334[12];
  *(_QWORD *)(v333 + 240) = *((_QWORD *)v334 + 30);
  *(_OWORD *)(v333 + 208) = v342;
  *(_OWORD *)(v333 + 224) = v341;
  *(_OWORD *)(v333 + 192) = v343;
  v344 = *v334;
  v345 = v334[1];
  v346 = v334[3];
  *(_OWORD *)(v333 + 32) = v334[2];
  *(_OWORD *)(v333 + 48) = v346;
  *(_OWORD *)v333 = v344;
  *(_OWORD *)(v333 + 16) = v345;
  v347 = (_OWORD *)((v333 + 255) & 0xFFFFFFFFFFFFFFF8);
  v348 = (__int128 *)(((unint64_t)v334 + 255) & 0xFFFFFFFFFFFFFFF8);
  v349 = *v348;
  *(_OWORD *)((char *)v347 + 9) = *(__int128 *)((char *)v348 + 9);
  *v347 = v349;
  v350 = (v333 + 287) & 0xFFFFFFFFFFFFFFF8;
  v351 = ((unint64_t)v334 + 287) & 0xFFFFFFFFFFFFFFF8;
  v352 = *(_OWORD *)v351;
  *(_BYTE *)(v350 + 16) = *(_BYTE *)(v351 + 16);
  *(_OWORD *)v350 = v352;
  v353 = (_QWORD *)((v333 + 311) & 0xFFFFFFFFFFFFF8);
  v354 = (_QWORD *)(((unint64_t)v334 + 311) & 0xFFFFFFFFFFFFF8);
  *v353 = *v354;
  *(_OWORD *)(((unint64_t)v353 + 15) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v354 + 15) & 0xFFFFFFFFFFFFF8);
  v200 = __srcb;
  v225 = v521;
  if (!v317)
    goto LABEL_269;
LABEL_270:
  v482 = ((((v282
           + ((((((((((v284 + v305) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 327) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v483 = (unint64_t)&v199[v482];
  v484 = (unint64_t)&v200[v482];
  v485 = v483 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v485 = *(_QWORD *)(v484 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v485 + 8) = *(_BYTE *)((v484 & 0xFFFFFFFFFFFFFFF8) + 8);
  v486 = (void **)((v483 + 23) & 0xFFFFFFFFFFFFFFF8);
  v487 = (void **)((v484 + 23) & 0xFFFFFFFFFFFFF8);
  v488 = *v486;
  *v486 = *v487;

  v489 = ((unint64_t)v486 + 15) & 0xFFFFFFFFFFFFFFF8;
  v490 = ((unint64_t)v487 + 15) & 0xFFFFFFFFFFFFFFF8;
  v491 = *(void **)v489;
  if (*(_QWORD *)v489 < 0xFFFFFFFFuLL)
  {
LABEL_274:
    *(_OWORD *)v489 = *(_OWORD *)v490;
    return v225;
  }
  if (*(_QWORD *)v490 < 0xFFFFFFFFuLL)
  {

    goto LABEL_274;
  }
  *(_QWORD *)v489 = *(_QWORD *)v490;

  v492 = *(void **)(v489 + 8);
  *(_QWORD *)(v489 + 8) = *(_QWORD *)(v490 + 8);

  return v225;
}

uint64_t sub_23AD65154(uint64_t *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t AssociatedTypeWitness;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v72 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v2 = *(_DWORD *)(v72 + 84);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v71 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = *(_DWORD *)(v71 + 84);
  v66 = v2;
  v57 = v3;
  if (v2 > v3)
    v3 = v2;
  v63 = v3;
  if (v3 <= 0x7FFFFFFE)
    v3 = 2147483646;
  v65 = v3;
  v4 = v3 - 1;
  v70 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v70 + 84);
  v73 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v6 = *(_DWORD *)(v73 + 84);
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = *(_DWORD *)(v73 + 84);
  if (v5 <= v7)
    v8 = v7;
  else
    v8 = v5;
  v56 = v8;
  if (v8 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  v62 = v8;
  v9 = v8 - 1;
  v68 = v4;
  v64 = v9;
  if (v4 <= v9)
    v10 = v9;
  else
    v10 = v4;
  v55 = swift_getAssociatedTypeWitness();
  v69 = *(_QWORD *)(v55 - 8);
  v11 = *(_DWORD *)(v69 + 84);
  v12 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (v11 <= *(_DWORD *)(v12 + 84))
    v13 = *(_DWORD *)(v12 + 84);
  else
    v13 = v11;
  if (v13 <= 0x7FFFFFFE)
    v14 = 2147483646;
  else
    v14 = v13;
  if (v14 <= v5)
    v15 = v5;
  else
    v15 = v14;
  if (v15 <= v7)
    v15 = v7;
  if (v15 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  else
    v16 = v15;
  if (v10 <= v16 - 1)
    v17 = v16 - 1;
  else
    v17 = v10;
  if (v17 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  else
    v18 = v17;
  v19 = 7;
  if (!v6)
    v19 = 8;
  if (!a2)
    return 0;
  v20 = *(unsigned __int8 *)(v71 + 80);
  v67 = *(_DWORD *)(v72 + 80) & 0xF8 | v20 | 7;
  v49 = *(_QWORD *)(v72 + 64) + 7;
  v61 = ((((*(_QWORD *)(v71 + 64) + ((v20 + 8 + (v49 & 0xFFFFFFFFFFFFFFF8)) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v21 = *(unsigned __int8 *)(v70 + 80);
  v22 = *(unsigned __int8 *)(v73 + 80);
  v23 = v22 | 7;
  v59 = v22 | v21 | 7;
  v60 = v59 + 9;
  v24 = *(_QWORD *)(v70 + 64);
  v25 = *(_QWORD *)(v73 + 64);
  v26 = v25 + v22;
  v27 = v25 + 12;
  v28 = ((((((((((v19
                + v25
                + ((v22
                  + ((((((v25 + 12 + ((v25 + v22 + ((v22 + 12) & ~v22)) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v22)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v54 = v28 + ((v22 + 16 + ((v24 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(v22 | 7));
  v29 = *(unsigned __int8 *)(v12 + 80);
  v30 = *(_DWORD *)(v69 + 80) & 0xF8 | v29 | 7;
  v53 = v22 | v21 | v30;
  v51 = v24 + v21;
  v52 = v24 + v30;
  v48 = *(_QWORD *)(v69 + 64) + 7;
  v50 = ((((*(_QWORD *)(v12 + 64) + ((v29 + 8 + (v48 & 0xFFFFFFFFFFFFFFF8)) & ~v29) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v18 < a2)
  {
    if ((((((((((((((v22 | 7) + 16 + ((v52 + (v51 & ~v21)) & ~v30) + v50) & ~v23) + v28 + 311) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + ((v54 + v53 + ((v60 + ((v67 + 8) & ~v67) + v61) & ~v59)) & ~v53)
             + 39) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v31 = 2;
    else
      v31 = a2 - v18 + 1;
    if (v31 >= 0x10000)
      v32 = 4;
    else
      v32 = 2;
    if (v31 < 0x100)
      v32 = 1;
    if (v31 >= 2)
      v33 = v32;
    else
      v33 = 0;
    __asm { BR              X20 }
  }
  if ((v17 & 0x80000000) != 0)
  {
    v36 = ((unint64_t)a1 + v67 + 8) & ~v67;
    if (v68 == v18)
    {
      if (v66 == v65)
      {
        v37 = (*(uint64_t (**)(uint64_t))(v72 + 48))(v36);
        goto LABEL_88;
      }
      v40 = (unint64_t *)((v49 + v36) & 0xFFFFFFFFFFFFFFF8);
      if (v63 <= 0x7FFFFFFE)
      {
        v41 = *v40;
LABEL_83:
        if (v41 >= 0xFFFFFFFF)
          LODWORD(v41) = -1;
        if ((v41 + 1) >= 2)
          v37 = v41;
        else
          v37 = 0;
        goto LABEL_88;
      }
      v37 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v71 + 48))(((unint64_t)v40 + v20 + 8) & ~v20, v57, AssociatedTypeWitness);
      goto LABEL_88;
    }
    v38 = ~v22;
    v39 = (v60 + v61 + v36) & ~v59;
    if (v64 == v18)
    {
      if (v5 == v62)
        goto LABEL_66;
      v42 = (v24 + 7 + v39) & 0xFFFFFFFFFFFFFFF8;
      if ((v56 & 0x80000000) != 0)
      {
        v43 = v22 + 16;
LABEL_80:
        v47 = (v22 + 12 + ((v43 + v42) & ~v23)) & v38;
        if (v6 <= 0x7FFFFFFD)
        {
          v41 = *(_QWORD *)(((v27 + ((v26 + v47) & v38)) & 0xFFFFFFFFFFFFF8) + 8);
          goto LABEL_83;
        }
        v37 = (*(uint64_t (**)(uint64_t))(v73 + 48))(v47);
        goto LABEL_88;
      }
    }
    else
    {
      v39 = (v39 + v53 + v54) & ~v53;
      if (v5 == v16)
      {
LABEL_66:
        v37 = (*(uint64_t (**)(unint64_t))(v70 + 48))(v39);
        goto LABEL_88;
      }
      v44 = (v52 + ((v51 + v39) & ~v21)) & ~v30;
      if (v14 == v16)
      {
        if (v11 == v14)
        {
          v37 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v69 + 48))(v44, v11, v55);
        }
        else
        {
          v46 = (unint64_t *)((v48 + v44) & 0xFFFFFFFFFFFFFFF8);
          if (v13 <= 0x7FFFFFFE)
          {
            v41 = *v46;
            goto LABEL_83;
          }
          v37 = (*(uint64_t (**)(unint64_t))(v12 + 48))(((unint64_t)v46 + v29 + 8) & ~v29);
        }
LABEL_88:
        if (v37 >= 2)
          return v37 - 1;
        else
          return 0;
      }
      v42 = v44 + v50;
      if ((v15 & 0x80000000) != 0)
      {
        v43 = (v22 | 7) + 16;
        goto LABEL_80;
      }
    }
    v45 = *(_QWORD *)(v42 + 8);
    if (v45 >= 0xFFFFFFFF)
      LODWORD(v45) = -1;
    v37 = v45 + 1;
    goto LABEL_88;
  }
  v35 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v35) = -1;
  return (v35 + 1);
}

void sub_23AD658D0(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  size_t v30;
  unsigned int v31;
  int v32;
  int v33;
  unsigned int v34;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v3 = *(_DWORD *)(v40 + 84);
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v3 > v5)
    v5 = v3;
  if (v5 <= 0x7FFFFFFE)
    v5 = 2147483646;
  v6 = v5 - 1;
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v39 = *(_QWORD *)(sub_23B1C5BDC() - 8);
  v9 = *(_DWORD *)(v39 + 84);
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = *(_DWORD *)(v39 + 84);
  if (v8 <= v10)
    v11 = v10;
  else
    v11 = v8;
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  v12 = v11 - 1;
  if (v6 <= v12)
    v13 = v12;
  else
    v13 = v6;
  v38 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v14 = *(_DWORD *)(v38 + 84);
  v15 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v16 = *(_DWORD *)(v15 + 84);
  if (v14 > v16)
    v16 = v14;
  if (v16 <= 0x7FFFFFFE)
    v16 = 2147483646;
  if (v16 <= v8)
    v16 = v8;
  if (v16 <= v10)
    v16 = v10;
  if (v16 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  v17 = v16 - 1;
  if (v13 <= v17)
    v18 = v17;
  else
    v18 = v13;
  if (v18 <= 0x7FFFFFFF)
    v19 = 0x7FFFFFFF;
  else
    v19 = v18;
  v20 = *(unsigned __int8 *)(v4 + 80);
  v23 = *(unsigned __int8 *)(v39 + 80);
  v25 = *(_QWORD *)(v39 + 64);
  v26 = (v23
       + ((((((v25 + 12 + ((v25 + v23 + ((v23 + 12) & ~v23)) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v23;
  if (!v9)
    ++v25;
  v27 = *(unsigned __int8 *)(v15 + 80);
  v28 = ((((((((((v25 + v26 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v29 = *(_DWORD *)(v38 + 80) & 0xF8 | v27 | 7;
  v24 = *(_QWORD *)(v7 + 64);
  v21 = *(_DWORD *)(v40 + 80) & 0xF8 | v20 | 7;
  v22 = *(unsigned __int8 *)(v7 + 80);
  v30 = (((((((((((v23 | 7)
                + 16
                + ((v24 + v29 + ((v24 + v22) & ~v22)) & ~v29)
                + ((((*(_QWORD *)(v15 + 64)
                    + ((v27 + 8 + ((*(_QWORD *)(v38 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v27)
                    + 7) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 16) & ~(v23 | 7))
              + v28
              + 311) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + ((v28
            + ((v23 + 16 + ((v24 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(v23 | 7))
            + (v23 | v22 | v29)
            + (((v23 | v22 | 7)
              + 9
              + ((v21 + 8) & ~v21)
              + ((((*(_QWORD *)(v4 + 64)
                  + ((v20 + 8 + ((*(_QWORD *)(v40 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v20)
                  + 7) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 16) & ~(v23 | v22 | 7))) & ~(v23 | v22 | v29))
          + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v19 >= a3)
  {
    v33 = 0;
  }
  else
  {
    if ((((((((((((v23 | 7)
                 + 16
                 + (((_DWORD)v24 + (_DWORD)v29 + (((_DWORD)v24 + (_DWORD)v22) & ~(_DWORD)v22)) & ~(_DWORD)v29)
                 + ((((*(_DWORD *)(v15 + 64)
                     + (((_DWORD)v27 + 8 + ((*(_DWORD *)(v38 + 64) + 7) & 0xFFFFFFF8)) & ~(_DWORD)v27)
                     + 7) & 0xFFFFFFF8)
                   + 15) & 0xFFFFFFF8)
                 + 16) & ~(v23 | 7))
               + (_DWORD)v28
               + 311) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + (((_DWORD)v28
             + (((_DWORD)v23 + 16 + (((_DWORD)v24 + 7) & 0xFFFFFFF8)) & ~(v23 | 7))
             + (v23 | v22 | v29)
             + (((v23 | v22 | 7)
               + 9
               + (((_DWORD)v21 + 8) & ~(_DWORD)v21)
               + ((((*(_DWORD *)(v4 + 64)
                   + (((_DWORD)v20 + 8 + ((*(_DWORD *)(v40 + 64) + 7) & 0xFFFFFFF8)) & ~(_DWORD)v20)
                   + 7) & 0xFFFFFFF8)
                 + 15) & 0xFFFFFFF8)
               + 16) & ~(v23 | v22 | 7))) & ~(v23 | v22 | v29))
           + 39) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v31 = a3 - v19 + 1;
    else
      v31 = 2;
    if (v31 >= 0x10000)
      v32 = 4;
    else
      v32 = 2;
    if (v31 < 0x100)
      v32 = 1;
    if (v31 >= 2)
      v33 = v32;
    else
      v33 = 0;
  }
  if (a2 > v19)
  {
    if ((_DWORD)v30)
    {
      v34 = ~v19 + a2;
      bzero(a1, v30);
      *a1 = v34;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X23 }
}

void sub_23AD65DA0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  unsigned int v29;
  _DWORD *v30;
  uint64_t v31;
  int v32;
  size_t v33;
  int v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  int v41;
  int v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  unsigned int v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;

  *((_BYTE *)v23 + v20) = 0;
  if (!v18)
    return;
  if ((a5 & 0x80000000) == 0)
  {
    if ((v18 & 0x80000000) != 0)
      v26 = v18 ^ 0x80000000;
    else
      v26 = v18 - 1;
    *v23 = v26;
    return;
  }
  v27 = (_DWORD *)(((unint64_t)v23 + a6 + 8) & v22);
  if (*(_DWORD *)(v24 - 140) != v15)
  {
    v30 = (_DWORD *)(((unint64_t)v27 + *(_QWORD *)(v24 - 152) + *(_QWORD *)(v24 - 168)) & v12);
    if (*(_DWORD *)(v24 - 160) == v15)
    {
      v31 = v18 + 1;
      if (v31 > *(_DWORD *)(v24 - 172))
      {
        v32 = v14
            + (((((((((v13 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8) + 25) & 0xFFFFFFF8);
        v33 = (v32 + 16);
        if (v32 == -16)
          return;
        v34 = *(_DWORD *)(v24 - 172);
        goto LABEL_22;
      }
      if (v18 == -1)
        return;
      v35 = v76;
      if (v76 == *(_DWORD *)(v24 - 172))
      {
        v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
        v37 = ((unint64_t)v27 + *(_QWORD *)(v24 - 152) + *(_QWORD *)(v24 - 168)) & v12;
LABEL_29:
        v38 = v74;
        goto LABEL_40;
      }
      v44 = (_QWORD *)(((unint64_t)v30 + v17) & 0xFFFFFFFFFFFFFFF8);
      if ((v67 & 0x80000000) == 0)
      {
        if ((v31 & 0x80000000) == 0)
        {
LABEL_35:
          v44[1] = v18;
          return;
        }
LABEL_44:
        *v44 = v18 - 0x7FFFFFFF;
        v44[1] = 0;
        return;
      }
      v45 = v63 + (((unint64_t)v44 + v9) & v51);
      v46 = *(_QWORD *)(v24 - 136);
      v37 = v45 & v46;
      v35 = v64;
      if (v64 <= 0x7FFFFFFD)
      {
        v49 = (_QWORD *)((v59 + ((v58 + v37) & v46)) & 0xFFFFFFFFFFFFFFF8);
        if (v31 > 0x7FFFFFFE)
        {
          *v49 = 0;
          v49[1] = 0;
          *(_DWORD *)v49 = v18 - 2147483646;
        }
        else
        {
          v49[1] = v31;
        }
        return;
      }
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 104) + 56);
      v38 = v60;
    }
    else
    {
      v30 = (_DWORD *)(((unint64_t)v30 + a3 + a2) & a4);
      v39 = v18 + 1;
      if (v39 > *(_DWORD *)(v24 - 176))
      {
        v40 = (((v10
               + (((((((((v13 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8) + 25) & 0xFFFFFFF8)
               + 327) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8;
        v33 = v40 + 16;
        if (v40 == -16)
          return;
        v34 = *(_DWORD *)(v24 - 176);
LABEL_22:
        v41 = v18 - v34;
        bzero(v30, v33);
        *v30 = v41;
        return;
      }
      if (v18 == -1)
        return;
      v35 = v76;
      v42 = *(_DWORD *)(v24 - 176);
      if (v76 == v42)
      {
        v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56);
        v37 = (uint64_t)v30;
        v31 = v18 + 1;
        goto LABEL_29;
      }
      v37 = (a1 + (((unint64_t)v30 + a8) & v25)) & v11;
      if (v66 == v42)
      {
        v35 = v62;
        if (v62 == v66)
        {
          v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 112) + 56);
          v31 = v18 + 1;
          v38 = v57;
        }
        else
        {
          v47 = (_QWORD *)((v55 + v37) & 0xFFFFFFFFFFFFFFF8);
          if (v56 <= 0x7FFFFFFE)
          {
            if (v39 > 0x7FFFFFFE)
            {
              *v47 = 0;
              *(_DWORD *)v47 = v18 - 2147483646;
            }
            else
            {
              *v47 = v39;
            }
            return;
          }
          v37 = ((unint64_t)v47 + v52) & v19;
          v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a9 + 56);
          v31 = v18 + 1;
          v35 = v53;
          v38 = v54;
        }
      }
      else
      {
        v44 = (_QWORD *)(v37 + a7);
        if ((v61 & 0x80000000) == 0)
        {
          if ((v39 & 0x80000000) == 0)
            goto LABEL_35;
          goto LABEL_44;
        }
        v48 = *(_QWORD *)(v24 - 136);
        v37 = (v63 + (((unint64_t)v44 + v16) & v51)) & v48;
        v35 = v64;
        if (v64 <= 0x7FFFFFFD)
        {
          v50 = (_QWORD *)((v59 + ((v58 + v37) & v48)) & 0xFFFFFFFFFFFFFFF8);
          if (v39 > 0x7FFFFFFE)
          {
            *v50 = 0;
            v50[1] = 0;
            *(_DWORD *)v50 = v18 - 2147483646;
          }
          else
          {
            v50[1] = v39;
          }
          return;
        }
        v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 104) + 56);
        v31 = v18 + 1;
        v38 = v60;
      }
    }
LABEL_40:
    v36(v37, v31, v35, v38);
    return;
  }
  v28 = v18 + 1;
  if (v28 <= *(_DWORD *)(v24 - 156))
  {
    if (v18 == -1)
      return;
    v35 = *(unsigned int *)(v24 - 180);
    if ((_DWORD)v35 == *(_DWORD *)(v24 - 156))
    {
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 96) + 56);
      v37 = ((unint64_t)v23 + a6 + 8) & v22;
      v31 = v18 + 1;
      v38 = v75;
    }
    else
    {
      v43 = (_QWORD *)(((unint64_t)v27 + v71) & 0xFFFFFFFFFFFFFFF8);
      if (v72 <= 0x7FFFFFFE)
      {
        if (v28 > 0x7FFFFFFE)
        {
          *v43 = 0;
          *(_DWORD *)v43 = v18 - 2147483646;
        }
        else
        {
          *v43 = v28;
        }
        return;
      }
      v37 = ((unint64_t)v43 + v65) & v21;
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56);
      v31 = v18 + 1;
      v35 = v69;
      v38 = v70;
    }
    goto LABEL_40;
  }
  if (*(_QWORD *)(v24 - 152))
  {
    v29 = v18 - *(_DWORD *)(v24 - 156);
    bzero((void *)(((unint64_t)v23 + a6 + 8) & v22), *(_QWORD *)(v24 - 152));
    *v27 = v29;
  }
}

void sub_23AD66218(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  __int16 v25;
  char v26;
  __int16 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  int v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[26];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;

  v7 = v6;
  v21 = a6;
  v22 = a4;
  v19 = a1;
  v20 = a3;
  v17 = a2;
  v43 = *MEMORY[0x24BDAC8D0];
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_23B1C5BDC();
  v18 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v16 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = type metadata accessor for ItemMetadata();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v24 = 0;
  v26 = 0;
  v25 = 0;
  v27 = 0;
  v33 = 0;
  v32 = 0u;
  v31 = 0u;
  v30 = 0u;
  v29 = 0u;
  v28 = 0u;
  v34 = 0;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  memset(v38, 0, sizeof(v38));
  v40 = 0;
  v41 = 0;
  v39 = 0;
  v42 = 0;
  sub_23AD66764(v7[*(int *)(v14 + 40)], (uint64_t)&v24);
  sub_23AD66784(v7[*(int *)(v13 + 52)], (uint64_t)&v24);
  v15 = (char *)sub_23AD663C0 + 4 * byte_23B1D7860[*v7];
  v23 = a5;
  __asm { BR              X10 }
}

uint64_t sub_23AD663C0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[20];

  if (*(_BYTE *)(v2 + v6[27]))
    v7 = 3;
  else
    v7 = 1;
  *((_DWORD *)v0 + 18) = v7;
  sub_23AD667C4(*(unsigned __int8 *)(v2 + v6[20]), (uint64_t)(v0 + 9));
  sub_23AD667D8(*(unsigned __int8 *)(v2 + v6[9]), (uint64_t)(v0 + 9));
  v8 = v6[21];
  v9 = *(unsigned __int8 *)(v2 + v8);
  sub_23AA9BA80(v2, v5);
  if (v9)
    LOBYTE(v9) = *(_BYTE *)(v5 + v6[12]) ^ 1;
  sub_23AA9F854(v5);
  sub_23AD67488(v9 & 1, (uint64_t)(v0 + 9));
  v0[34] = qword_23B1D7868[*(char *)(v2 + v8)];
  v0[24] = *(_QWORD *)(v2 + v6[19]);
  sub_23AD674A8(*(unsigned __int8 *)(v2 + v6[11]), (uint64_t)(v0 + 9));
  sub_23AD674C8(*(unsigned __int8 *)(v2 + v6[15]), (uint64_t)(v0 + 9));
  sub_23AD674E8(*(unsigned __int8 *)(v2 + v6[16]), (uint64_t)(v0 + 9));
  sub_23AD67508(*(unsigned __int8 *)(v2 + v6[28]), (uint64_t)(v0 + 9));
  sub_23AD67528(*(unsigned __int8 *)(v2 + v6[35]), (uint64_t)(v0 + 9));
  sub_23AD67548(*(unsigned __int8 *)(v2 + v6[18]), (uint64_t)(v0 + 9));
  sub_23AD67568(*(unsigned __int8 *)(v2 + v6[23]), (uint64_t)(v0 + 9));
  sub_23AD67588(*(unsigned __int8 *)(v2 + v6[24]), (uint64_t)(v0 + 9));
  v10 = v0[3];
  sub_23AA724E8(v10, (uint64_t)(v0 + 37), &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)(v0 + 37)) != 1)
  {
    v11 = *((_BYTE *)v0 + 330);
    *((_BYTE *)v0 + 256) = *((_BYTE *)v0 + 328);
    *((_BYTE *)v0 + 257) = v11;
  }
  v12 = *((_DWORD *)v0 + 3);
  v13 = v0[2];
  if (v12 != 6)
    *((_DWORD *)v0 + 70) = v12;
  if (*(_BYTE *)v2 != 1)
  {
    v14 = *(_QWORD *)(v2 + v6[26]);
    v0[11] = *(_QWORD *)(v2 + v6[25]);
    v0[25] = v14;
  }
  *((_WORD *)v0 + 40) = *(_WORD *)(v2 + 10);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v15(v4, v2 + v6[7], v1);
  v0[12] = sub_23AD675A8(v4);
  v0[13] = v16;
  v15(v4, v2 + v6[8], v1);
  v0[14] = sub_23AD675A8(v4);
  v0[15] = v17;
  sub_23AB6E30C(v2 + v6[29], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v3, 1, v1) == 1)
  {
    v18 = sub_23AB6E2CC(v3);
  }
  else
  {
    v19 = v3;
    v20 = v10;
    v21 = *v0;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v13 + 32))(*v0, v19, v1);
    v15(v4, v21, v1);
    v0[16] = sub_23AD675A8(v4);
    v0[17] = v22;
    sub_23AD676B4((uint64_t)(v0 + 9));
    v23 = v21;
    v10 = v20;
    v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v23, v1);
  }
  v24 = v2 + v6[31];
  if (*(_BYTE *)(v24 + 8))
    v25 = 0;
  else
    v25 = *(_QWORD *)v24;
  v0[18] = v25;
  if ((*(_BYTE *)(v2 + 8) & 1) != 0)
  {
    v26 = v2 + v6[36];
    if ((*(_BYTE *)(v26 + 4) & 1) != 0)
    {
      v27 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    v26 = v2 + 4;
  }
  v27 = *(_DWORD *)v26;
LABEL_23:
  *((_DWORD *)v0 + 44) = v27;
  v28 = v2 + v6[34];
  if ((*(_BYTE *)(v28 + 8) & 1) != 0)
    v29 = 0;
  else
    v29 = __ROR8__(*(_QWORD *)v28, 32);
  v0[23] = v29;
  MEMORY[0x24BDAC7A8](v18);
  v34[2] = v0[7];
  v34[3] = v0 + 9;
  v34[4] = v10;
  v34[5] = v2;
  v30 = v0[6];
  v34[6] = v0[4];
  v34[7] = v30;
  sub_23AD667F8(sub_23AD67694, (uint64_t)v34, v31, v32);
  return fpfs_free_metadata_tag_data();
}

uint64_t sub_23AD66764(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 4;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFFB | v2;
  return result;
}

uint64_t sub_23AD66784(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 8;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFF7 | v2;
  return result;
}

uint64_t sub_23AD667A4(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 2;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFFD | v2;
  return result;
}

uint64_t sub_23AD667C4(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFFE | result;
  return result;
}

uint64_t sub_23AD667D8(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 16;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFEF | v2;
  return result;
}

uint64_t sub_23AD667F8(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a4)
    return a1(0);
  MEMORY[0x24BDAC7A8](a1);
  return sub_23B1C6464();
}

uint64_t sub_23AD66868@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  char *v31;
  int64_t v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  v30 = a1;
  v29 = a4;
  v6 = sub_23B1C6428();
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v31 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a3 + 64);
  v33 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v32 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  v12 = 0;
  v34 = "collaborationIdentifier";
  v37 = 0x800000023B1F8040;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_19;
    }
    v18 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v32)
      goto LABEL_23;
    v19 = *(_QWORD *)(v33 + 8 * v18);
    ++v12;
    if (!v19)
    {
      v12 = v18 + 1;
      if (v18 + 1 >= v32)
        goto LABEL_23;
      v19 = *(_QWORD *)(v33 + 8 * v12);
      if (!v19)
        break;
    }
LABEL_18:
    v11 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v12 << 6);
LABEL_19:
    v21 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v17);
    v23 = *v21;
    v22 = v21[1];
    if (*v21 != 0xD000000000000015 || v22 != v37)
    {
      v13 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 16 * v17);
      v15 = *v13;
      v14 = v13[1];
      if ((sub_23B1C7388() & 1) == 0)
      {
        v35 = v23;
        v36 = v22;
        v25[2] = a2;
        v26 = v14 >> 62;
        swift_bridgeObjectRetain();
        sub_23AAAE668(v15, v14);
        sub_23B1C641C();
        sub_23AAA420C();
        sub_23B1C6CE0();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v28);
        __asm { BR              X9 }
      }
    }
  }
  v20 = v18 + 2;
  if (v20 < v32)
  {
    v19 = *(_QWORD *)(v33 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        v12 = v20 + 1;
        if (__OFADD__(v20, 1))
          break;
        if (v12 >= v32)
          goto LABEL_23;
        v19 = *(_QWORD *)(v33 + 8 * v12);
        ++v20;
        if (v19)
          goto LABEL_18;
      }
LABEL_25:
      __break(1u);
      JUMPOUT(0x23AD66CA0);
    }
    v12 = v20;
    goto LABEL_18;
  }
LABEL_23:
  swift_release();
  return v30(0);
}

uint64_t sub_23AD66CE8(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v7;

  v3 = type metadata accessor for ItemMetadata();
  v4 = (uint64_t *)(v1 + *(int *)(v3 + 132));
  v5 = v4[1];
  if (v5 >> 60 == 15)
    return a1(0, 0, 1);
  v7 = *v4;
  MEMORY[0x24BDAC7A8](v3);
  sub_23AAAE668(v7, v5);
  sub_23B1C5A8C();
  return sub_23AAA3E18(v7, v5);
}

uint64_t sub_23AD66DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[7];
  _BYTE v17[40];
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(a2 + 176) = a1;
  sub_23AA724E8(a3, (uint64_t)v17, &qword_2542E5050);
  v12 = sub_23AAFCF2C((uint64_t)v17);
  if (v12 == 1)
    v13 = 0;
  else
    v13 = v18;
  if (v12 == 1)
    v14 = 0;
  else
    v14 = v19;
  v16[2] = a7;
  v16[3] = a2;
  v16[4] = a4;
  v16[5] = a5;
  v16[6] = a6;
  return sub_23AD667F8(sub_23AD67710, (uint64_t)v16, v13, v14);
}

uint64_t sub_23AD66EB0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(a2 + 192) = a1;
  v11 = type metadata accessor for ItemMetadata();
  v12 = (uint64_t *)(a3 + *(int *)(v11 + 56));
  v13 = v12[1];
  if (v13)
  {
    v27 = *v12;
    v28 = v13;
    v25 = 47;
    v26 = 0xE100000000000000;
    v23 = 58;
    v24 = 0xE100000000000000;
    v22 = sub_23AAA420C();
    v19 = MEMORY[0x24BEE0D00];
    v20 = v22;
    v11 = sub_23B1C6CF8();
    v15 = v14;
  }
  else
  {
    v15 = 0;
  }
  MEMORY[0x24BDAC7A8](v11);
  v18[2] = a6;
  v18[3] = a2;
  v19 = a3;
  v20 = a4;
  v21 = a5;
  sub_23AD667F8(sub_23AD6772C, (uint64_t)v18, v16, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AD66FE4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v10;
  _QWORD v12[8];

  v12[2] = a5;
  v12[3] = a2;
  v12[4] = a1;
  v12[5] = a3;
  v12[6] = a4;
  v10 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ItemMetadata() + 128));
  if (v10)
    return sub_23AD66868(sub_23AD677C4, (uint64_t)v12, v10, a6);
  else
    return sub_23AD67098(0, a2, a1, a3);
}

uint64_t sub_23AD67098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[6];

  *(_QWORD *)(a2 + 160) = a1;
  v6 = *(_QWORD *)(a3 + *(int *)(type metadata accessor for ItemMetadata() + 120));
  if (!v6)
    return a4(a2);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[4] = sub_23AD67840;
  v11[5] = v8;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_23B135DF8;
  v11[3] = &block_descriptor_9;
  v9 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  fpfs_serialize_tags();
  _Block_release(v9);
  a4(a2);
  return swift_release();
}

uint64_t sub_23AD671E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t result;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v6 = (uint64_t *)(a2 + 16);
  result = swift_beginAccess();
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a3 + 16);
  if (v8 >= v9)
    return v8 < v9;
  if (v8 < 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v10 = a3 + 32;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  if (!a1)
  {
LABEL_6:

    result = swift_beginAccess();
    v12 = *v6 + 1;
    if (!__OFADD__(*v6, 1))
    {
      swift_beginAccess();
      *v6 = v12;
      return v8 < v9;
    }
    goto LABEL_10;
  }
  *(_QWORD *)a1 = objc_msgSend(objc_retainAutorelease(v11), sel_UTF8String);
  result = swift_beginAccess();
  if (*v6 < (unint64_t)v9)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(v10 + 24 * *v6 + 16);
    goto LABEL_6;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23AD6731C(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;

  if (!a1)
    return 1;
  v2 = (_QWORD *)(a2 + 16);
  v3 = *a1;
  v4 = *((unsigned __int8 *)a1 + 8);
  result = swift_beginAccess();
  if (!*v2)
  {
LABEL_12:
    swift_endAccess();
    return 1;
  }
  if (v3)
  {
    sub_23B1C650C();
    sub_23AAA420C();
    v6 = sub_23B1C6CF8();
    v8 = v7;
    swift_bridgeObjectRelease();
    if (v4 <= 1)
      v9 = 1;
    else
      v9 = v4;
    v10 = (_QWORD *)*v2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v2 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v10 = sub_23AF99E14(0, v10[2] + 1, 1, v10);
      *v2 = v10;
    }
    v13 = v10[2];
    v12 = v10[3];
    if (v13 >= v12 >> 1)
    {
      v10 = sub_23AF99E14((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
      *v2 = v10;
    }
    v10[2] = v13 + 1;
    v14 = &v10[3 * v13];
    v14[4] = v6;
    v14[5] = v8;
    *((_BYTE *)v14 + 48) = v9;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_23AD67488(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 32;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFFDF | v2;
  return result;
}

uint64_t sub_23AD674A8(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 128;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFF7F | v2;
  return result;
}

uint64_t sub_23AD674C8(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 256;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFEFF | v2;
  return result;
}

uint64_t sub_23AD674E8(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 512;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFDFF | v2;
  return result;
}

uint64_t sub_23AD67508(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 2048;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFF7FF | v2;
  return result;
}

uint64_t sub_23AD67528(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 1024;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFFBFF | v2;
  return result;
}

uint64_t sub_23AD67548(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 0x4000;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFFBFFF | v2;
  return result;
}

uint64_t sub_23AD67568(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 0x8000;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFF7FFF | v2;
  return result;
}

uint64_t sub_23AD67588(uint64_t result, uint64_t a2)
{
  int v2;

  if ((_DWORD)result)
    v2 = 0x10000;
  else
    v2 = 0;
  *(_DWORD *)(a2 + 4) = *(_DWORD *)(a2 + 4) & 0xFFFEFFFF | v2;
  return result;
}

uint64_t sub_23AD675A8(uint64_t a1)
{
  uint64_t result;
  double v3;
  double v4;
  uint64_t v5;
  double v6;

  result = sub_23B1C5B94();
  v4 = v3;
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = sub_23B1C5BDC();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  v6 = (v4 - (double)(uint64_t)v4) * 1000000000.0;
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v6 < 9.22337204e18)
    return (uint64_t)v4;
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_23AD67694(uint64_t a1)
{
  uint64_t *v1;

  return sub_23AD66DF0(a1, v1[3], v1[4], v1[5], v1[6], v1[7], v1[2]);
}

uint64_t sub_23AD676B4(uint64_t result)
{
  *(_DWORD *)(result + 4) |= 0x1000u;
  return result;
}

uint64_t sub_23AD676C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23AD676E8(uint64_t *a1)
{
  uint64_t v1;

  return sub_23AD6731C(a1, v1);
}

uint64_t sub_23AD676F0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_23AD67710(uint64_t a1)
{
  return sub_23AD677E0(a1, sub_23AD66EB0);
}

uint64_t sub_23AD6772C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)(v1 + 24) + 136) = a1;
  return sub_23AD66CE8((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23AD6777C);
}

uint64_t sub_23AD6777C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AD66FE4(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t (**)(uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23AD677A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v2 + 24))(a1, a2, 0);
}

uint64_t sub_23AD677C4(uint64_t a1)
{
  return sub_23AD677E0(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AD67098);
}

uint64_t sub_23AD677E0(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[3], v2[4], v2[5], v2[6], v2[2]);
}

uint64_t sub_23AD67804()
{
  return swift_deallocObject();
}

uint64_t sub_23AD67814()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23AD67840(uint64_t a1)
{
  uint64_t v1;

  return sub_23AD671E0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23AD67848(unint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v11;
  void *v12;

  if ((a1 >> 62) > 1)
    __asm { BR              X10 }
  sub_23ACF2110(a1);
  v2 = (void *)sub_23B1C5870();
  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v3 = objc_msgSend(v2, sel_domain);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  objc_msgSend(v2, sel_code);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_underlyingErrors);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  v5 = sub_23B1C6704();

  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_6;
  v6 = *(id *)(v5 + 32);
  swift_bridgeObjectRelease();
  sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v12, sel_domain);
    sub_23B1C63E0();

    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    objc_msgSend(v12, sel_code);
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();

LABEL_6:
    swift_bridgeObjectRelease();
  }
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  v8 = sub_23B0D9CF0(v11);
  v9 = objc_msgSend(v8, sel_description);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();

  sub_23ACF212C(a1);
  swift_bridgeObjectRelease();
  return 0;
}

void sub_23AD67CA0()
{
  JUMPOUT(0x23AD67C80);
}

void sub_23AD67CBC()
{
  JUMPOUT(0x23AD67C80);
}

void sub_23AD67CE0()
{
  JUMPOUT(0x23AD67C80);
}

void sub_23AD67D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  _QWORD v9[64];

  v9[12] = a1;
  v9[8] = a3;
  v9[9] = a2;
  v3 = sub_23B1C545C();
  v9[1] = *(_QWORD *)(v3 - 8);
  v9[2] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v9[0] = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = swift_getAssociatedConformanceWitness();
  v9[4] = AssociatedConformanceWitness;
  v9[5] = AssociatedTypeWitness;
  v9[46] = AssociatedTypeWitness;
  v9[47] = v6;
  v9[48] = AssociatedConformanceWitness;
  v9[49] = v8;
  v9[3] = v8;
  type metadata accessor for ThrottlingKey();
}

BOOL sub_23AD67E34(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  _BYTE v24[96];

  v5 = sub_23B1C6C98();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = &v24[-v8];
  v1[10] = a1;
  v1[13] = *(_QWORD *)(a1 - 8);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v1[6] = (uint64_t)&v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v1[7] = (uint64_t)&v24[-v12];
  _s3__C4CodeOMa_1(0);
  *(_QWORD *)(v3 - 224) = -2010;
  sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
  v13 = (void *)v1[12];
  if ((sub_23B1C575C() & 1) != 0 || (*(_QWORD *)(v3 - 224) = -2005, (sub_23B1C575C() & 1) != 0))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v9, v1[9], v5);
    v14 = v1[13];
    v15 = v1[10];
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v15) != 1)
    {
      v16 = v1[7];
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v14 + 32))(v16, v9, v15);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v1[6], v16, v15);
      *(_QWORD *)(v3 - 224) = v1[5];
      *(_QWORD *)(v3 - 216) = v2;
      v17 = v1[3];
      *(_QWORD *)(v3 - 208) = v1[4];
      *(_QWORD *)(v3 - 200) = v17;
      type metadata accessor for ReconciliationID();
    }
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
    return 0;
  }
  *(_DWORD *)(v3 - 224) = sub_23B1C54BC();
  sub_23AB6CD48();
  if ((sub_23B1C575C() & 1) == 0)
  {
    *(_DWORD *)(v3 - 224) = sub_23B1C548C();
    if ((sub_23B1C575C() & 1) == 0)
    {
      *(_QWORD *)(v3 - 224) = -1004;
      if ((sub_23B1C575C() & 1) == 0)
      {
        *(_QWORD *)(v3 - 224) = -1000;
        if ((sub_23B1C575C() & 1) == 0)
        {
          *(_QWORD *)(v3 - 224) = -1003;
          if ((sub_23B1C575C() & 1) == 0)
          {
            *(_DWORD *)(v3 - 224) = sub_23B1C5510();
            if ((sub_23B1C575C() & 1) == 0)
            {
              v19 = *v1;
              sub_23B1C539C();
              sub_23AA7E38C((unint64_t *)&qword_2569E29D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEA8]);
              v20 = v1[2];
              v21 = sub_23B1C575C();
              (*(void (**)(uint64_t, uint64_t))(v1[1] + 8))(v19, v20);
              if ((v21 & 1) == 0)
              {
                *(_QWORD *)(v3 - 72) = v13;
                v22 = v13;
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
                if (swift_dynamicCast())
                {
                  sub_23AD3E060(v3 - 224, (uint64_t)(v1 + 14));
                  sub_23AD3E060((uint64_t)(v1 + 14), (uint64_t)(v1 + 30));
                  if (sub_23AC050A4((uint64_t)(v1 + 30)) == 19)
                  {

                    return 1;
                  }
                  sub_23AC04F64((uint64_t)(v1 + 14));
                }

              }
            }
          }
        }
      }
      return 0;
    }
  }
  return sub_23AE4F6B4();
}

void sub_23AD683E4()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD6843C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 168) = a1;
  *(_QWORD *)(v13 - 184) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 176) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 152) = v9;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 104) = v12;
  *(_QWORD *)(v13 - 96) = v10;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AD68488(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[96];

  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v20[-v10];
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v5 - 128) = &v20[-v15];
  v16 = v1;
  v18 = v17;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, v16, v7);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48))(v11, 1, a1) != 1)
  {
    *(_QWORD *)(v5 - 288) = v14;
    (*(void (**)(_QWORD, _BYTE *, uint64_t))(v18 + 32))(*(_QWORD *)(v5 - 128), v11, a1);
    *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 152);
    *(_QWORD *)(v5 - 112) = v3;
    *(_QWORD *)(v5 - 104) = v4;
    *(_QWORD *)(v5 - 96) = v2;
    type metadata accessor for JobResult();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_23AD68A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_allocObject();
  v4 = sub_23AF1AD34(*(_QWORD *)(v3 - 144), v1, v0, v2);
  sub_23AE181A4(*(_QWORD *)(v3 - 160), v4);
  JUMPOUT(0x23AD68A90);
}

void sub_23AD68AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23B126EE8(v0, *(_QWORD *)(v2 - 216), v1, 2048);
}

void sub_23AD68AC4(uint64_t a1)
{
  uint64_t v1;

  sub_23AE181A4(v1, a1);
  swift_release();
  JUMPOUT(0x23AD68798);
}

void sub_23AD68AE4()
{
  uint64_t v0;

  sub_23AD68B00();
  qword_2542EDE10 = v0;
}

void sub_23AD68B00()
{
  xpc_object_t v0;
  id v1;
  void *v2;

  v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5B8], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5D8], *MEMORY[0x24BDAC610]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC6B8], 0);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC598], 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x24BDAC698], (const char *)*MEMORY[0x24BDAC6A8]);
  if (*MEMORY[0x24BDAC5B0])
  {
    xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC5B0], 1);
    if (*MEMORY[0x24BDAC5C0])
    {
      xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC5C0], 1);
      v1 = objc_allocWithZone(MEMORY[0x24BE313D0]);
      v2 = (void *)sub_23B1C63BC();
      objc_msgSend(v1, sel_initWithLabel_options_criteria_, v2, 1, v0);

      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_23AD68C58()
{
  id result;

  result = sub_23AD68C74();
  qword_2542EDC40 = (uint64_t)result;
  return result;
}

id sub_23AD68C74()
{
  xpc_object_t v0;
  id v1;
  void *v2;
  id v3;

  v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5B8], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x24BDAC5D8], *MEMORY[0x24BDAC610]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC6B8], 0);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x24BDAC598], 0);
  xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x24BDAC698], (const char *)*MEMORY[0x24BDAC6A8]);
  v1 = objc_allocWithZone(MEMORY[0x24BE313D0]);
  v2 = (void *)sub_23B1C63BC();
  v3 = objc_msgSend(v1, sel_initWithLabel_criteria_, v2, v0);

  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_23AD68D88()
{
  return 128;
}

uint64_t sub_23AD68D98(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t type metadata accessor for DiskImportContinuation()
{
  return objc_opt_self();
}

unint64_t sub_23AD68E04@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_23AD7CBAC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_23AD68E2C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AD68E5C + 4 * byte_23B1D78A0[*v0]))(0x676E69646E6570, 0xE700000000000000);
}

uint64_t sub_23AD68E5C()
{
  return 0x746E65726170;
}

uint64_t sub_23AD68E70()
{
  return 0x7463656C6573;
}

uint64_t sub_23AD68E84()
{
  return 1802725732;
}

uint64_t sub_23AD68E94()
{
  return 0x72656469766F7270;
}

uint64_t sub_23AD68EAC()
{
  return 0x70756E61656C63;
}

void sub_23AD68EC0(_QWORD *a1@<X8>)
{
  *a1 = &unk_250BDC778;
}

void sub_23AD68ED0()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD68F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;

  *(_QWORD *)(v13 - 248) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v13 - 240) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 200) = (char *)&a9 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v13 - 176) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v13 - 184) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 168) = (char *)&a9 - v18;
  v19 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v13 - 216) = v10;
  *(_QWORD *)(v13 - 208) = v9;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v13 - 232) = v12;
  *(_QWORD *)(v13 - 224) = v11;
  v21 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v13 - 136) = AssociatedTypeWitness;
  *(_QWORD *)(v13 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v13 - 112) = v19;
  *(_QWORD *)(v13 - 192) = AssociatedConformanceWitness;
  *(_QWORD *)(v13 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v13 - 96) = v21;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AD69048(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v31;
  int v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  void (*v36)(uint64_t, _BYTE *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  void (*v51)(uint64_t, uint64_t);
  int v52;
  void *v53;
  char v54;
  _BYTE v55[96];

  *(_QWORD *)(v1 - 144) = swift_getTupleTypeMetadata2();
  v3 = sub_23B1C6C98();
  *(_QWORD *)(v1 - 152) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v55[-v5];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v10 = &v55[-v9];
  v11 = *(_QWORD *)(a1 - 8);
  v12 = MEMORY[0x24BDAC7A8](v8);
  v14 = &v55[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = &v55[-v16];
  v18 = *(_QWORD *)(*(_QWORD *)(v1 - 72) + 16);
  v19 = *(_QWORD *)(v1 - 128);
  (*(void (**)(uint64_t))(*(_QWORD *)v18 + 224))(v15);
  if (v19)
    return a1 & 1;
  *(_QWORD *)(v1 - 288) = TupleTypeMetadata2;
  v21 = *(_QWORD *)(v1 - 152);
  *(_QWORD *)(v1 - 280) = v14;
  *(_QWORD *)(v1 - 264) = v17;
  *(_QWORD *)(v1 - 272) = v11;
  *(_QWORD *)(v1 - 128) = 0;
  *(_QWORD *)(v1 - 256) = a1;
  a1 = *(_QWORD *)(v1 - 144);
  v22 = *(_QWORD *)(v1 - 136);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v6, 1, a1) != 1)
  {
    v26 = v6[*(int *)(a1 + 48)];
    v27 = *(_QWORD *)(v1 - 288);
    v28 = *(int *)(v27 + 48);
    v29 = *(_QWORD *)(v1 - 272);
    v30 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v29 + 32);
    v31 = *(_QWORD *)(v1 - 256);
    v30(v10, v6, v31);
    v10[v28] = v26;
    v32 = v10[*(int *)(v27 + 48)];
    v33 = *(_BYTE **)(v1 - 264);
    v34 = v10;
    v35 = v29;
    v30(v33, v34, v31);
    v36 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v29 + 16);
    v37 = *(_QWORD *)(v1 - 280);
    v36(v37, v33, v31);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v37, v31);
LABEL_16:
      v53 = (void *)(*(uint64_t (**)(uint64_t))(**(_QWORD **)(v1 - 72) + 264))(v38);
      MEMORY[0x24BDAC7A8](v53);
      *(_QWORD *)&v55[-16] = *(_QWORD *)(v1 - 160);
      *(_QWORD *)&v55[-8] = v33;
      v54 = sub_23AFE9F34((uint64_t)sub_23AD7CF20, (uint64_t)&v55[-32]);

      LOBYTE(a1) = v54 & 1;
      (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v33, v31);
      return a1 & 1;
    }
    *(_DWORD *)(v1 - 144) = v32;
    v40 = *(_QWORD *)(v1 - 176);
    v39 = *(_QWORD *)(v1 - 168);
    v41 = v22;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v39, v37, v22);
    v42 = *(_QWORD *)(v1 - 192);
    v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 64))(v22, v42);
    v44 = *(_QWORD *)(v1 - 184);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v44, v39, v22);
    if ((v43 & 1) != 0)
    {
      v45 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      *(_QWORD *)(v1 - 72) = v45;
      v45(v44, v22);
      v46 = *(_QWORD *)(v1 - 208);
      v47 = *(_QWORD *)(v1 - 224);
      v48 = *(_QWORD *)(v1 - 216);
      v49 = *(_QWORD *)(v1 - 232);
    }
    else
    {
      v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 72))(v22, v42);
      v51 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v51(v44, v22);
      v52 = v50 | *(_DWORD *)(v1 - 144);
      v46 = *(_QWORD *)(v1 - 208);
      v47 = *(_QWORD *)(v1 - 224);
      v48 = *(_QWORD *)(v1 - 216);
      v49 = *(_QWORD *)(v1 - 232);
      if ((v52 & 1) == 0)
      {
        v38 = ((uint64_t (*)(uint64_t, uint64_t))v51)(v39, v41);
        v31 = *(_QWORD *)(v1 - 256);
        v35 = *(_QWORD *)(v1 - 272);
        goto LABEL_16;
      }
      *(_QWORD *)(v1 - 72) = v51;
    }
    *(_QWORD *)(v1 - 120) = v46;
    *(_QWORD *)(v1 - 112) = v47;
    *(_QWORD *)(v1 - 104) = v48;
    *(_QWORD *)(v1 - 96) = v49;
    type metadata accessor for JobResult();
  }
  v23 = (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v21);
  v24 = *(_QWORD *)(v1 - 128);
  v25 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 232))(v23);
  if (!v24)
  {
    if ((v25 & 1) == 0)
      sub_23AD697A4(*(_QWORD *)(v1 - 72), *(_QWORD *)(v1 - 160));
    LOBYTE(a1) = 1;
  }
  return a1 & 1;
}

void sub_23AD69550()
{
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD69598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 152) = a1;
  *(_QWORD *)(v5 - 136) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v2;
  *(_QWORD *)(v5 - 88) = v4;
  type metadata accessor for JobResult();
}

void sub_23AD695DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;

  *(_QWORD *)(v1 - 160) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v1 - 104) = v3;
  *(_QWORD *)(v1 - 96) = AssociatedConformanceWitness;
  *(_QWORD *)(v1 - 88) = v5;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AD69678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  _WORD *v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  _BYTE *v16;
  uint64_t result;

  type metadata accessor for ReconciliationSideMutation(255, v5, v6, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = (_WORD *)(v4 + *(int *)(TupleTypeMetadata2 + 48));
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16);
  v12 = *(_QWORD *)(v7 - 144);
  v11(v4, v12, a1);
  *v10 = 3;
  swift_storeEnumTagMultiPayload();
  v13 = *(_QWORD *)(v7 - 152);
  swift_storeEnumTagMultiPayload();
  v14 = *(_QWORD *)(v7 - 128);
  sub_23AEB700C(v14, v4);
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 136) + 8);
  v15(v4, v13);
  v16 = (_BYTE *)(v4 + *(int *)(TupleTypeMetadata2 + 48));
  v11(v4, v12, a1);
  *v16 = 0;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v14, v4);
  result = ((uint64_t (*)(uint64_t, uint64_t))v15)(v4, v13);
  **(_BYTE **)(v7 - 120) = 1;
  return result;
}

void sub_23AD697A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_23B1C5BDC();
  MEMORY[0x24BDAC7A8](v3);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v5 = objc_msgSend((id)objc_opt_self(), sel_queue, v6, v7, a2);
  sub_23AC494B4(0, 0, (uint64_t)"scheduleDiskImportFinished(db:result:)", 38, 2, (uint64_t)sub_23AD7CEF4, a1);

  type metadata accessor for JobResult();
}

void sub_23AD698D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v1;
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v0;
  type metadata accessor for DiskImport.DiskImportFinished();
}

uint64_t sub_23AD698E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t result;
  double v8;
  uint64_t v9;
  uint64_t v10;

  sub_23B0EB9DC();
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v6 = v5;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v3, v2);
  v8 = v6 * 1000000000.0;
  if ((~COERCE__INT64(v6 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v8 < 9.22337204e18)
  {
    v9 = (uint64_t)v8;
    swift_allocObject();
    v10 = sub_23AF1AD34(v1, 0x2000000000000000, v9, 0x20000);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 160) + 8))(v1, *(_QWORD *)(v4 - 152));
    sub_23AE1ACCC(*(_QWORD *)(v4 - 144), v10);
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_23AD699EC()
{
  return 0xD000000000000014;
}

void sub_23AD69A08()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AD69AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t TupleTypeMetadata2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v4 = sub_23B1C6C98();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - v7;
  if ((*(_BYTE *)(v0 + 132) & 2) == 0)
    sub_23AD68ED0();
  v9 = *(_QWORD *)(v2 - 128);
  v10 = *(_QWORD *)(v1 + 16);
  (*(void (**)(uint64_t))(*(_QWORD *)v10 + 224))(v6);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v8, 1, TupleTypeMetadata2);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if (v11 == 1 && ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 232))(v12) & 1) == 0)
    sub_23AD697A4(v1, v9);
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v2 - 136))(0, 0, 0, 0);
}

void type metadata accessor for DiskImport.ContinueDiskImport()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD69C7C()
{
  return 0xD00000000000001ELL;
}

void sub_23AD69C98()
{
  type metadata accessor for ItemReconciliation();
}

void type metadata accessor for DiskImport.UnfaultDirectoryAndChildren()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD6A550()
{
  return 0xD000000000000015;
}

void sub_23AD6A56C()
{
  type metadata accessor for PersistenceTrigger();
}

void sub_23AD6A5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;

  *(_QWORD *)(v13 - 320) = a1;
  *(_QWORD *)(v13 - 328) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 336) = (char *)&a9 - v14;
  v15 = sub_23B1C5BDC();
  *(_QWORD *)(v13 - 352) = v15;
  *(_QWORD *)(v13 - 360) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 368) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v13 - 216) = AssociatedTypeWitness;
  *(_QWORD *)(v13 - 200) = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - v18;
  *(_QWORD *)(v13 - 136) = v12;
  *(_QWORD *)(v13 - 128) = v9;
  *(_QWORD *)(v13 - 288) = v9;
  *(_QWORD *)(v13 - 120) = v10;
  *(_QWORD *)(v13 - 112) = v11;
  *(_QWORD *)(v13 - 296) = v11;
  type metadata accessor for ReconciliationMutation();
}

uint64_t sub_23AD6A6D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v32[112];

  *(_QWORD *)(v8 - 232) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v8 - 224) = a1;
  v9 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v8 - 312) = &v32[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v8 - 240) = &v32[-v11];
  *(_QWORD *)(v8 - 160) = v6;
  *(_QWORD *)(v8 - 192) = v4;
  v13 = type metadata accessor for SnapshotItem(0, v6, v4, v12);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v32[-v17];
  *(_QWORD *)(v8 - 304) = v7;
  v19 = *(_QWORD *)(v7 + 32);
  v20 = *(_QWORD *)(v2 + 536);
  *(_QWORD *)(v8 - 384) = v1;
  v21 = v1 + v20;
  v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v19 + 472);
  v23 = *(_QWORD *)(v8 - 152);
  *(_QWORD *)(v8 - 376) = v19;
  v24 = v22(v21, v23);
  *(_QWORD *)(v8 - 176) = &v32[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v8 - 168) = v18;
  *(_QWORD *)(v8 - 416) = v15;
  *(_QWORD *)(v8 - 152) = v14;
  *(_QWORD *)(v8 - 408) = 0;
  *(_QWORD *)(v8 - 400) = v21;
  *(_QWORD *)(v8 - 392) = v25;
  v26 = MEMORY[0x23B85F0E0](v24, v13);
  *(_QWORD *)(v8 - 248) = v3;
  v27 = *(_QWORD *)(v8 - 288);
  v28 = *(_QWORD *)(v8 - 192);
  v29 = *(_QWORD *)(v8 - 296);
  if (v26)
  {
    *(_QWORD *)(v8 - 136) = *(_QWORD *)(v8 - 160);
    *(_QWORD *)(v8 - 128) = v27;
    *(_QWORD *)(v8 - 120) = v28;
    *(_QWORD *)(v8 - 112) = v29;
    type metadata accessor for JobResult();
  }
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v8 - 392))
  {
    *(_QWORD *)(v8 - 136) = *(_QWORD *)(v8 - 160);
    *(_QWORD *)(v8 - 128) = v27;
    *(_QWORD *)(v8 - 120) = v28;
    *(_QWORD *)(v8 - 112) = v29;
    type metadata accessor for JobResult();
  }
  v30 = swift_retain();
  v5(v30, 0, 0, 0);
  return swift_release_n();
}

void sub_23AD6ABA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;

  *(_QWORD *)(v1 - 152) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(v1 - 216);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 - 136) = v3;
  *(_QWORD *)(v1 - 128) = AssociatedTypeWitness;
  *(_QWORD *)(v1 - 120) = AssociatedConformanceWitness;
  *(_QWORD *)(v1 - 112) = v5;
  type metadata accessor for ReconciliationID();
}

void sub_23AD6AC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  _WORD *v11;
  void (*v12)(uint64_t, _QWORD, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD **v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  type metadata accessor for ReconciliationSideMutation(255, v5, v4, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = *(_QWORD *)(v8 - 312);
  v11 = (_WORD *)(v10 + *(int *)(TupleTypeMetadata2 + 48));
  v12 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 200) + 16);
  v12(v10, *(_QWORD *)(v8 - 400), v6);
  swift_storeEnumTagMultiPayload();
  *v11 = 6;
  swift_storeEnumTagMultiPayload();
  v13 = *(_QWORD *)(v8 - 224);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v8 - 208), v10);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 232) + 8))(v10, v13);
  v15 = *(_QWORD ***)(v8 - 304);
  v16 = *(_QWORD *)(v8 - 408);
  v17 = (*(uint64_t (**)(uint64_t))(*v15[2] + 240))(v14);
  if (!v16)
  {
    *(_QWORD *)(v8 - 168) = v12;
    v18 = *(_QWORD *)(v8 - 296);
    v19 = *(_QWORD *)(v8 - 288);
    if ((v17 & 1) == 0)
    {
      *(_QWORD *)(v8 - 136) = *(_QWORD *)(v8 - 160);
      *(_QWORD *)(v8 - 128) = v19;
      *(_QWORD *)(v8 - 120) = v7;
      *(_QWORD *)(v8 - 112) = v18;
      type metadata accessor for DiskImport.ContinueDiskImport();
    }
    v20 = *(_QWORD *)(v8 - 336);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 - 168))(v20, *(_QWORD *)(v8 - 400), v6);
    swift_storeEnumTagMultiPayload();
    v21 = *(_QWORD *)(v8 - 320);
    swift_storeEnumTagMultiPayload();
    ((void (*)(uint64_t))(*v15)[39])(v20);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 328) + 8))(v20, v21);
    JUMPOUT(0x23AD6AB40);
  }
  JUMPOUT(0x23AD6A7D4);
}

void type metadata accessor for DiskImport.MarkDirectorDiskImportAsDone()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD6AF00()
{
  return 0xD000000000000014;
}

uint64_t sub_23AD6AF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t (*)(void *), _QWORD *);

  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a4;
  v11[4] = a5;
  v11[5] = a3;
  v11[6] = v5;
  v12 = *(void (**)(uint64_t (*)(void *), _QWORD *))(*(_QWORD *)v10 + 736);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v12(sub_23AD7CE64, v11);
  swift_release();
  return swift_release();
}

uint64_t sub_23AD6AFD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a3;
  *(_QWORD *)(v11 + 24) = a4;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a3;
  v12[6] = a4;
  swift_retain_n();
  v13 = a1;
  v14 = type metadata accessor for Continuation();
  swift_retain();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD3B9C0, v11, (uint64_t)sub_23AD7CED4, (uint64_t)v12, v14, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

uint64_t sub_23AD6B0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  if (a1)
    type metadata accessor for JobResult();
  return a4(0, 0, 0, 0);
}

void type metadata accessor for DiskImport.DiskImportFinished()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD6B20C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23AD6B278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  double v7;
  uint64_t result;
  double v9;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v7 = v6;
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = v7 * 1000000000.0;
  if ((~COERCE__INT64(v7 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v9 < 9.22337204e18)
  {
    *(_QWORD *)(v1 + 16) = (uint64_t)v9;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_23AD6B358(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  double v11;
  uint64_t (*v12)(char *, uint64_t);
  uint64_t result;
  double v14;
  unint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  unint64_t v21;

  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = 0x746976697463613CLL;
  v21 = 0xEA00000000003A79;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v11 = v10;
  v12 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  result = v12(v9, v6);
  v14 = v11 * 1000000000.0;
  if ((~COERCE__INT64(v11 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_23AF3E2AC((uint64_t)v14, a3);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v16 = v20;
  v15 = v21;
  v20 = 0x6974617269707865;
  v21 = 0xEB000000003A6E6FLL;
  if ((a2 & 1) != 0)
  {
LABEL_9:
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v20 = v16;
    v21 = v15;
    swift_bridgeObjectRetain();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v20;
  }
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v18 = v17;
  result = v12(v9, v6);
  v19 = v18 * 1000000000.0;
  if ((~COERCE__INT64(v18 * 1000000000.0) & 0x7FF0000000000000) == 0)
    goto LABEL_13;
  if (v19 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v19 < 9.22337204e18)
  {
    sub_23AF3E2AC((uint64_t)v19, a1);
    goto LABEL_9;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_23AD6B5A4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x800000023B201EC0 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023B201EE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_23AD6B68C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0xD000000000000014;
}

void sub_23AD6B6C8()
{
  type metadata accessor for DiskImport.ImportingFolder.CodingKeys();
}

uint64_t sub_23AD6B70C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  MEMORY[0x23B8613CC](&unk_23B1D7F28, a1);
  v4 = sub_23B1C72EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_23B1C7538();
  *(_QWORD *)(v3 - 112) = v2;
  *(_BYTE *)(v3 - 104) = *(_DWORD *)(v3 - 72) & 1;
  *(_BYTE *)(v3 - 65) = 0;
  sub_23AD7D418();
  v8 = *(_QWORD *)(v3 - 120);
  sub_23B1C7238();
  if (!v8)
  {
    *(_QWORD *)(v3 - 112) = *(_QWORD *)(v3 - 128);
    *(_BYTE *)(v3 - 65) = 1;
    sub_23B1C72A4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_23AD6B844()
{
  type metadata accessor for DiskImport.ImportingFolder.CodingKeys();
}

uint64_t sub_23AD6B880(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v4 = MEMORY[0x23B8613CC](&unk_23B1D7F28, a1);
  v5 = sub_23B1C7208();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_23B1C7520();
  if (!v2)
  {
    *(_BYTE *)(v3 - 65) = 0;
    sub_23AD7D3D4();
    sub_23B1C7160();
    v4 = *(_QWORD *)(v3 - 112);
    *(_BYTE *)(v3 - 65) = 1;
    sub_23B1C71C0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  return v4;
}

BOOL sub_23AD6BA08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23AC37E20(*a1, *a2);
}

uint64_t sub_23AD6BA20()
{
  return sub_23AD0A6E8();
}

uint64_t sub_23AD6BA34()
{
  return sub_23AD072A4();
}

uint64_t sub_23AD6BA48()
{
  sub_23B1C74A8();
  sub_23AD072A4();
  return sub_23B1C74E4();
}

unint64_t sub_23AD6BA90()
{
  char *v0;

  return sub_23AD6B68C(*v0);
}

uint64_t sub_23AD6BAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_23AD6E5A0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AD6B5A4, a4);
}

uint64_t sub_23AD6BAB0@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_23AD6E5E0(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_23AAEC8C8, a2);
}

uint64_t sub_23AD6BABC(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D7F28, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD6BAF0(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D7F28, a1);
  return sub_23B1C7550();
}

void sub_23AD6BB24()
{
  sub_23AD6B844();
}

uint64_t sub_23AD6BB44(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (!v4)
  {
    *(_QWORD *)v3 = result;
    *(_BYTE *)(v3 + 8) = a2 & 1;
    *(_QWORD *)(v3 + 16) = a3;
  }
  return result;
}

void sub_23AD6BB64()
{
  sub_23AD6B6C8();
}

uint64_t sub_23AD6BB98()
{
  uint64_t v0;

  return sub_23AD6B358(*(_QWORD *)v0, *(_BYTE *)(v0 + 8), *(_QWORD *)(v0 + 16));
}

void sub_23AD6BBB0()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for DiskImport.ImportingFolder();
}

uint64_t sub_23AD6BC24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  char v9;

  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if ((MEMORY[0x23B85EB94](v3, v1, a1, *(_QWORD *)(AssociatedConformanceWitness + 32)) & 1) != 0
    && (v6 = *(_QWORD *)(v2 + 8),
        AssociatedTypeWitness = swift_getAssociatedTypeWitness(),
        v8 = swift_getAssociatedConformanceWitness(),
        (MEMORY[0x23B85EB94](v6, AssociatedTypeWitness, a1, *(_QWORD *)(v8 + 32)) & 1) != 0)
    && (sub_23B1C68F0() & 1) != 0)
  {
    v9 = sub_23B1C68F0();
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

void sub_23AD6BD14()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AD6D360(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023B201E40 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023B201E60 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023B201E80 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023B201EA0 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6F466465727474 && a2 == 0xEC00000073726564 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C667265764F7369 && a2 == 0xED0000676E69776FLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v5 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_23AD6D5EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23AD6D624 + 4 * byte_23B1D78A6[a1]))(0xD000000000000013, 0x800000023B201E40);
}

uint64_t sub_23AD6D624(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_23AD6D658()
{
  return 0x6C6F466465727474;
}

uint64_t sub_23AD6D678()
{
  return 0x6C667265764F7369;
}

void sub_23AD6D69C()
{
  type metadata accessor for DiskImport.MonitoredFolders.CodingKeys();
}

void sub_23AD6D6E4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  MEMORY[0x23B8613CC](&unk_23B1D7E10, a1);
  v6 = sub_23B1C72EC();
  *(_QWORD *)(v5 - 192) = v6;
  *(_QWORD *)(v5 - 224) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_23B1C7538();
  *(_QWORD *)(v5 - 72) = **(_QWORD **)(v5 - 200);
  *(_BYTE *)(v5 - 121) = 0;
  swift_getAssociatedTypeWitness();
  *(_QWORD *)(v5 - 120) = v1;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 232) = v4;
  v7 = *(_QWORD *)(v5 - 208);
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 96) = v7;
  type metadata accessor for DiskImport.ImportingFolder();
}

uint64_t sub_23AD6D7C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(AssociatedConformanceWitness + 32);
  v7 = sub_23B1C629C();
  v8 = *(_QWORD *)(AssociatedConformanceWitness + 24);
  v9 = MEMORY[0x23B8613CC](&unk_23B1D7DC0, a1);
  *(_QWORD *)(v3 - 144) = v8;
  *(_QWORD *)(v3 - 136) = v9;
  MEMORY[0x23B8613CC](MEMORY[0x24BEE04C0], v7, v3 - 144);
  v10 = *(_QWORD *)(v3 - 216);
  sub_23B1C72A4();
  if (!v10)
  {
    *(_QWORD *)(v3 - 248) = v8;
    *(_QWORD *)(v3 - 240) = v6;
    *(_QWORD *)(v3 - 256) = AssociatedConformanceWitness;
    *(_QWORD *)(v3 - 216) = v1;
    *(_QWORD *)(v3 - 120) = *(_QWORD *)(*(_QWORD *)(v3 - 200) + 8);
    *(_BYTE *)(v3 - 72) = 1;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v13 = swift_getAssociatedConformanceWitness();
    v14 = sub_23B1C629C();
    v15 = *(_QWORD *)(v13 + 24);
    *(_QWORD *)(v3 - 160) = v15;
    *(_QWORD *)(v3 - 152) = v9;
    MEMORY[0x23B8613CC](MEMORY[0x24BEE04C0], v14, v3 - 160);
    sub_23B1C72A4();
    *(_QWORD *)(v3 - 120) = *(_QWORD *)(*(_QWORD *)(v3 - 200) + 16);
    *(_BYTE *)(v3 - 72) = 2;
    v16 = *(_QWORD *)(v3 - 216);
    v17 = sub_23B1C6920();
    *(_QWORD *)(v3 - 168) = *(_QWORD *)(v3 - 248);
    MEMORY[0x23B8613CC](MEMORY[0x24BEE1700], v17, v3 - 168);
    sub_23B1C72A4();
    *(_QWORD *)(v3 - 120) = *(_QWORD *)(*(_QWORD *)(v3 - 200) + 24);
    *(_BYTE *)(v3 - 72) = 3;
    v18 = sub_23B1C6920();
    *(_QWORD *)(v3 - 176) = v15;
    MEMORY[0x23B8613CC](MEMORY[0x24BEE1700], v18, v3 - 176);
    sub_23B1C72A4();
    *(_QWORD *)(v3 - 72) = *(_QWORD *)(*(_QWORD *)(v3 - 200) + 32);
    *(_BYTE *)(v3 - 121) = 4;
    *(_QWORD *)(v3 - 120) = v16;
    *(_QWORD *)(v3 - 112) = AssociatedTypeWitness;
    *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 256);
    *(_QWORD *)(v3 - 96) = v13;
    type metadata accessor for ReconciliationID();
  }
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 224) + 8))(v2, *(_QWORD *)(v3 - 192));
}

void sub_23AD6DB30()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for DiskImport.ImportingFolder();
}

void sub_23AD6DBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_getTupleTypeMetadata2();
  sub_23B1C6758();
  v1 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 32);
  sub_23B1C623C();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_23B1C6758();
  v3 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 32);
  sub_23B1C623C();
  v4 = sub_23B1C6758();
  if (MEMORY[0x23B85F0EC](v4, v0))
    sub_23AF518D4(v4, v0, v1);
  swift_bridgeObjectRelease();
  v5 = sub_23B1C6758();
  if (MEMORY[0x23B85F0EC](v5, AssociatedTypeWitness))
    sub_23AF518D4(v5, AssociatedTypeWitness, v3);
  swift_bridgeObjectRelease();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AD6DD2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v6 = sub_23B1C6758();
  if (MEMORY[0x23B85F0EC](v6, a1))
  {
    v7 = MEMORY[0x23B8613CC](&unk_23B1DCF98, a1);
    v8 = sub_23AF518D4(v6, a1, v7);
  }
  else
  {
    v8 = MEMORY[0x24BEE4B08];
  }
  result = swift_bridgeObjectRelease();
  *(_QWORD *)v1 = v10;
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 24) = v4;
  *(_QWORD *)(v1 + 32) = v8;
  *(_BYTE *)(v1 + 40) = 0;
  return result;
}

void sub_23AD6DDB8()
{
  type metadata accessor for DiskImport.MonitoredFolders.CodingKeys();
}

void sub_23AD6DE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v13 - 232) = MEMORY[0x23B8613CC](&unk_23B1D7E10, a1);
  *(_QWORD *)(v13 - 224) = a1;
  v15 = sub_23B1C7208();
  *(_QWORD *)(v13 - 272) = v15;
  *(_QWORD *)(v13 - 280) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 208) = (char *)&a9 - v16;
  swift_getAssociatedTypeWitness();
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for DiskImport.ImportingFolder();
}

void sub_23AD6DEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_getTupleTypeMetadata2();
  sub_23B1C6758();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 - 192) = AssociatedConformanceWitness;
  v3 = *(_QWORD *)(AssociatedConformanceWitness + 32);
  *(_QWORD *)(v1 - 200) = sub_23B1C623C();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_23B1C6758();
  v5 = swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(v5 + 32);
  *(_QWORD *)(v1 - 240) = sub_23B1C623C();
  v7 = sub_23B1C6758();
  if (MEMORY[0x23B85F0EC](v7, v0))
    *(_QWORD *)(v1 - 248) = sub_23AF518D4(v7, v0, v3);
  else
    *(_QWORD *)(v1 - 248) = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();
  v8 = sub_23B1C6758();
  if (MEMORY[0x23B85F0EC](v8, AssociatedTypeWitness))
    *(_QWORD *)(v1 - 256) = sub_23AF518D4(v8, AssociatedTypeWitness, v6);
  else
    *(_QWORD *)(v1 - 256) = MEMORY[0x24BEE4B08];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 120) = v0;
  *(_QWORD *)(v1 - 112) = AssociatedTypeWitness;
  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v1 - 192);
  *(_QWORD *)(v1 - 96) = v5;
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AD6E040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;

  v7 = sub_23B1C6758();
  v8 = MEMORY[0x23B85F0EC](v7, a1);
  *(_QWORD *)(v5 - 288) = v1;
  *(_QWORD *)(v5 - 296) = v3;
  if (v8)
  {
    v9 = MEMORY[0x23B8613CC](&unk_23B1DCF98, a1);
    *(_QWORD *)(v5 - 264) = sub_23AF518D4(v7, a1, v9);
  }
  else
  {
    *(_QWORD *)(v5 - 264) = MEMORY[0x24BEE4B08];
  }
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v5 - 184), *(_QWORD *)(*(_QWORD *)(v5 - 184) + 24));
  v11 = *(_QWORD *)(v5 - 216);
  v10 = *(_QWORD *)(v5 - 208);
  sub_23B1C7520();
  if (!v11)
  {
    v12 = v4;
    v13 = sub_23B1C629C();
    *(_QWORD *)(v5 - 216) = 0;
    v14 = v13;
    *(_BYTE *)(v5 - 65) = 0;
    v15 = *(_QWORD *)(*(_QWORD *)(v5 - 192) + 16);
    v16 = MEMORY[0x23B8613CC](&unk_23B1D7DE8, v2);
    *(_QWORD *)(v5 - 136) = v15;
    *(_QWORD *)(v5 - 128) = v16;
    *(_QWORD *)(v5 - 192) = v16;
    MEMORY[0x23B8613CC](MEMORY[0x24BEE04E0], v14, v5 - 136);
    v17 = *(_QWORD *)(v5 - 272);
    v18 = *(_QWORD *)(v5 - 216);
    sub_23B1C71C0();
    if (!v18)
    {
      *(_QWORD *)(v5 - 224) = v15;
      *(_QWORD *)(v5 - 216) = v12;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v5 - 200) = *(_QWORD *)(v5 - 120);
      v19 = sub_23B1C629C();
      *(_BYTE *)(v5 - 65) = 1;
      v20 = *(_QWORD *)(*(_QWORD *)(v5 - 296) + 16);
      v21 = *(_QWORD *)(v5 - 192);
      *(_QWORD *)(v5 - 152) = v20;
      *(_QWORD *)(v5 - 144) = v21;
      MEMORY[0x23B8613CC](MEMORY[0x24BEE04E0], v19, v5 - 152);
      sub_23B1C71C0();
      swift_bridgeObjectRelease();
      v22 = *(_QWORD *)(v5 - 120);
      v23 = sub_23B1C6920();
      *(_BYTE *)(v5 - 65) = 2;
      *(_QWORD *)(v5 - 160) = *(_QWORD *)(v5 - 224);
      MEMORY[0x23B8613CC](MEMORY[0x24BEE1720], v23, v5 - 160);
      sub_23B1C71C0();
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v5 - 120);
      v25 = sub_23B1C6920();
      *(_BYTE *)(v5 - 65) = 3;
      *(_QWORD *)(v5 - 168) = v20;
      MEMORY[0x23B8613CC](MEMORY[0x24BEE1720], v25, v5 - 168);
      sub_23B1C71C0();
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v5 - 120);
      MEMORY[0x23B8613CC](&unk_23B1DCF98, a1);
      v27 = sub_23B1C6920();
      *(_BYTE *)(v5 - 65) = 4;
      *(_QWORD *)(v5 - 176) = MEMORY[0x23B8613CC](&unk_23B1D6568, a1);
      MEMORY[0x23B8613CC](MEMORY[0x24BEE1720], v27, v5 - 176);
      v28 = *(_QWORD *)(v5 - 208);
      sub_23B1C71C0();
      swift_bridgeObjectRelease();
      v29 = *(_QWORD *)(v5 - 120);
      *(_BYTE *)(v5 - 120) = 5;
      LOBYTE(v27) = sub_23B1C71A8();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 280) + 8))(v28, v17);
      result = __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v5 - 184));
      v31 = *(_QWORD *)(v5 - 304);
      *(_QWORD *)v31 = *(_QWORD *)(v5 - 200);
      *(_QWORD *)(v31 + 8) = v22;
      *(_QWORD *)(v31 + 16) = v24;
      *(_QWORD *)(v31 + 24) = v26;
      *(_QWORD *)(v31 + 32) = v29;
      *(_BYTE *)(v31 + 40) = v27 & 1;
      return result;
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 280) + 8))(v10, v17);
  }
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v5 - 184));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

BOOL sub_23AD6E504(char *a1, char *a2)
{
  return sub_23AA9F51C(*a1, *a2);
}

uint64_t sub_23AD6E51C()
{
  return sub_23ABDD228();
}

uint64_t sub_23AD6E52C()
{
  return sub_23ABDD204();
}

uint64_t sub_23AD6E53C()
{
  sub_23B1C74A8();
  sub_23ABDD204();
  return sub_23B1C74E4();
}

uint64_t sub_23AD6E584()
{
  unsigned __int8 *v0;

  return sub_23AD6D5EC(*v0);
}

uint64_t sub_23AD6E594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_23AD6E5A0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AD6D360, a4);
}

uint64_t sub_23AD6E5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD)@<X4>, _BYTE *a5@<X8>)
{
  uint64_t result;

  result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5]);
  *a5 = result;
  return result;
}

uint64_t sub_23AD6E5D4@<X0>(_QWORD *a1@<X1>, _BYTE *a2@<X8>)
{
  return sub_23AD6E5E0(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_23AD7D3C0, a2);
}

uint64_t sub_23AD6E5E0@<X0>(_QWORD *a1@<X1>, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = a2(a1[2], a1[3], a1[4], a1[5]);
  *a3 = result;
  return result;
}

uint64_t sub_23AD6E614(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D7E10, a1);
  return sub_23B1C7544();
}

uint64_t sub_23AD6E648(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D7E10, a1);
  return sub_23B1C7550();
}

void sub_23AD6E67C()
{
  sub_23AD6DDB8();
}

void sub_23AD6E6A4()
{
  _OWORD *v0;
  uint64_t v1;
  __int128 v2;
  _BYTE v3[25];

  if (!v1)
  {
    *v0 = v2;
    v0[1] = *(_OWORD *)v3;
    *(_OWORD *)((char *)v0 + 25) = *(_OWORD *)&v3[9];
  }
}

void sub_23AD6E6C8()
{
  sub_23AD6D69C();
}

void sub_23AD6E6DC()
{
  sub_23AD6DB30();
}

__n128 sub_23AD6E704()
{
  _OWORD *v0;
  __n128 result;
  __int128 v2;
  _BYTE v3[25];

  *v0 = v2;
  v0[1] = *(_OWORD *)v3;
  result = *(__n128 *)&v3[9];
  *(_OWORD *)((char *)v0 + 25) = *(_OWORD *)&v3[9];
  return result;
}

void sub_23AD6E724()
{
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AD6F5D8(char a1)
{
  uint64_t result;

  result = sub_23AD718F0();
  if ((a1 & 1) != 0)
    return sub_23ADB0C04();
  return result;
}

void sub_23AD6F608()
{
  __int128 v0;
  _OWORD v1[3];
  _OWORD v2[4];

  sub_23ADB0190((uint64_t)&v0);
  v1[2] = v0;
  v2[0] = v1[0];
  *(_OWORD *)((char *)v2 + 9) = *(_OWORD *)((char *)v1 + 9);
  type metadata accessor for DiskImport.MonitoredFolders();
}

void sub_23AD6F650()
{
  sub_23AD6BD14();
}

void sub_23AD6F6C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v3 = sub_23B1C5E4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = 0;
  v31 = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v30 = 0xD000000000000017;
  v31 = 0x800000023B201BF0;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v29 = *(_QWORD *)(a1 + 16);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v29 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
  sub_23AAB5A28((unint64_t *)&qword_2542E74B0, &qword_2542E54E8, MEMORY[0x24BEE12B0]);
  v25 = v7;
  sub_23B1C6338();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v26 = v30;
  v27 = v31;
  v8 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain_n();
  v28 = v6;
  v9 = sub_23B1C5E40();
  v10 = sub_23B1C6AA0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v24 = v3;
    v13 = v12;
    v29 = a1;
    v30 = v12;
    *(_DWORD *)v11 = 136315138;
    v23 = v4;
    v14 = sub_23B1C6338();
    v29 = sub_23AABEC68(v14, v15, &v30);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v9, v10, "💂🏼‍♀️  TTR-ing stuck items:\n%s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v13, -1, -1);
    MEMORY[0x23B8614BC](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v24);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v28, v3);
  }
  v16 = *(void **)(v1 + 104);
  v17 = (void *)sub_23B1C63BC();
  v18 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  sub_23AA9F52C(0, (unint64_t *)&qword_2542E7568);
  v19 = (void *)sub_23B1C66F8();
  sub_23B1C5A08();
  v20 = (void *)sub_23B1C66F8();
  v21 = (void *)sub_23B1C63BC();
  objc_msgSend(v16, sel_requestTapToRadarWithTitle_description_keywords_attachments_displayReason_, v17, v18, v19, v20, v21);

}

void sub_23AD6FAC0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[51];

  v18[21] = a1;
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 248);
  v4 = *(_QWORD *)(*v1 + 232);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v6);
  v18[25] = (char *)v18 - v7;
  v8 = *(_QWORD *)(v2 + 240);
  v9 = *(_QWORD *)(v2 + 224);
  swift_getAssociatedTypeWitness();
  v10 = sub_23B1C6C98();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v18[26] = (char *)v18 - v12;
  v18[42] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v18[30] = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v18[6] = (char *)v18 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v18[24] = (char *)v18 - v17;
  v18[47] = v9;
  v18[48] = v4;
  v18[49] = v8;
  v18[50] = v3;
  type metadata accessor for DiskImport.ImportingFolder();
}

uint64_t sub_23AD718F0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 136))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B1C6BCC();
    swift_unknownObjectRelease();
    if (*(_QWORD *)(v0 + 136))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_23B1C6BA8();
      swift_unknownObjectRelease();
    }
  }
  *(_QWORD *)(v0 + 136) = 0;
  return swift_unknownObjectRelease();
}

uint64_t sub_23AD7197C()
{
  swift_bridgeObjectRetain();
  sub_23B1C656C();
  swift_bridgeObjectRelease();
  return 1;
}

void sub_23AD719D4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[9];
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  _OWORD v28[3];
  _OWORD v29[5];

  v1 = (_QWORD *)*v0;
  v2 = sub_23B1C6020();
  v15[8] = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v18 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v17 = (char *)v15 - v5;
  v16 = sub_23B1C60E0();
  v15[7] = *(_QWORD *)(v16 - 8);
  v6 = MEMORY[0x24BDAC7A8](v16);
  v15[6] = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v22 = (char *)v15 - v8;
  v21 = sub_23B1C60A4();
  v20 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v19 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C6B78();
  MEMORY[0x24BDAC7A8](v10);
  sub_23ADB0190((uint64_t)&v27);
  v28[2] = v27;
  v29[0] = v28[0];
  *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)((char *)v28 + 9);
  v11 = v1[28];
  v12 = v1[29];
  v14 = v1[30];
  v13 = v1[31];
  v23 = v11;
  v24 = v12;
  v25 = v14;
  v26 = v13;
  type metadata accessor for DiskImport.MonitoredFolders();
}

void sub_23AD71B90()
{
  sub_23AD6BBB0();
}

uint64_t sub_23AD71B98(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(_QWORD *, uint64_t);
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(v10 - 120) = *(_QWORD *)(v10 - 176);
  sub_23AAB7500(v10 - 120);
  *(_QWORD *)(v10 - 112) = *(_QWORD *)(v10 - 168);
  sub_23AAB7500(v10 - 112);
  *(_QWORD *)(v10 - 104) = *(_QWORD *)(v10 - 160);
  sub_23AAB7500(v10 - 104);
  *(_QWORD *)(v10 - 96) = *(_QWORD *)(v10 - 152);
  sub_23AAB7500(v10 - 96);
  *(_QWORD *)(v10 - 256) = *(_QWORD *)(v10 - 144);
  result = sub_23AAB7500(v10 - 256);
  if ((a1 & 1) != 0)
    return sub_23AD718F0();
  *(_QWORD *)(v10 - 344) = v4;
  if (!*(_QWORD *)(v1 + 136))
  {
    sub_23AD7197C();
    *(_QWORD *)(v10 - 352) = sub_23AA9F52C(0, (unint64_t *)&qword_2542E7520);
    v13 = (void *)sub_23AFD7BC0();
    *(_QWORD *)(v10 - 368) = v13;
    *(_QWORD *)(v10 - 224) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v10 - 376) = sub_23AA7E38C((unint64_t *)&qword_2542E1F80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0], MEMORY[0x24BEE57D0]);
    *(_QWORD *)(v10 - 360) = v13;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1EF0);
    sub_23AAB5A28((unint64_t *)&qword_2542E1F00, (uint64_t *)&unk_2542E1EF0, MEMORY[0x24BEE12C8]);
    sub_23B1C6DE8();
    v14 = sub_23B1C6B84();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v5);
    *(_QWORD *)(v1 + 136) = v14;
    result = swift_unknownObjectRelease();
    if (*(_QWORD *)(v1 + 136))
    {
      swift_getObjectType();
      v15 = swift_allocObject();
      swift_weakInit();
      v16 = (_QWORD *)swift_allocObject();
      v16[2] = v6;
      v16[3] = v8;
      v16[4] = v7;
      v16[5] = v2;
      v16[6] = v15;
      swift_unknownObjectRetain();
      swift_retain();
      v17 = *(_QWORD *)(v10 - 288);
      sub_23ADFA2F4();
      sub_23AA78928(0, v17, (uint64_t)sub_23AD7CE18, (uint64_t)v16);
      swift_unknownObjectRelease();
      swift_release();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 280) + 8))(v17, *(_QWORD *)(v10 - 272));
      result = swift_release();
      if (*(_QWORD *)(v1 + 136))
      {
        *(_QWORD *)(v10 - 272) = swift_getObjectType();
        swift_unknownObjectRetain();
        v18 = *(_QWORD *)(v10 - 336);
        sub_23B1C60C8();
        v19 = *(_QWORD *)(v1 + 112);
        v20 = *(_QWORD **)(v10 - 304);
        *v20 = v19;
        v21 = *MEMORY[0x24BEE5420];
        v22 = *(_QWORD *)(v10 - 320);
        v23 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v22 + 104);
        v24 = *(_QWORD *)(v10 - 344);
        v23(v20, v21, v24);
        MEMORY[0x23B85EA14](v18, v20);
        v25 = *(void (**)(_QWORD *, uint64_t))(v22 + 8);
        v25(v20, v24);
        v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 328) + 8);
        v27 = v18;
        v28 = *(_QWORD *)(v10 - 312);
        v26(v27, v28);
        *v20 = v19;
        v23(v20, v21, v24);
        v29 = *(_QWORD **)(v10 - 296);
        v30 = *(_QWORD *)(v10 - 272);
        sub_23AAB602C(v29);
        v31 = *(_QWORD *)(v10 - 264);
        MEMORY[0x23B85F530](v31, v20, v29, v30);
        swift_unknownObjectRelease();
        v25(v29, v24);
        v25(v20, v24);
        result = ((uint64_t (*)(uint64_t, uint64_t))v26)(v31, v28);
        if (*(_QWORD *)(v1 + 136))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          sub_23B1C6BB4();
          return swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_23AD71F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;

  v0 = sub_23B1C5BDC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23B1C5E4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v10 = sub_23B1C5E40();
    v11 = sub_23B1C6A94();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23AA66000, v10, v11, "💂🏼‍♀️  evaluating stuck imports", v12, 2u);
      MEMORY[0x23B8614BC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v14 = v13;
    result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    v15 = v14 * 1000000000.0;
    if ((~COERCE__INT64(v14 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18)
          sub_23AD6FAC0((uint64_t)v15);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
  }
  return result;
}

void sub_23AD72164()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[14];
  uint64_t v11;

  v1 = (_QWORD *)*v0;
  v2 = sub_23B1C5E4C();
  v10[3] = *(_QWORD *)(v2 - 8);
  v10[4] = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v10[1] = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v10[2] = (char *)v10 - v5;
  sub_23ADB0190((uint64_t)&v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v1[30];
  v7 = v1[28];
  swift_getAssociatedTypeWitness();
  v8 = v1[29];
  v9 = v1[31];
  v10[8] = v7;
  v10[9] = v8;
  v10[10] = v6;
  v10[11] = v9;
  type metadata accessor for DiskImport.ImportingFolder();
}

void sub_23AD7225C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v2 - 184) = swift_getAssociatedConformanceWitness();
  v3 = sub_23B1C6254();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 - 72) = v0;
  sub_23ADB0190(v2 - 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v2 - 192) = swift_getAssociatedConformanceWitness();
  v5 = sub_23B1C6254();
  swift_bridgeObjectRelease();
  v6 = v3 + v5;
  if (__OFADD__(v3, v5))
  {
    __break(1u);
  }
  else
  {
    sub_23ADB0190(v2 - 128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = sub_23B1C68C0();
    swift_bridgeObjectRelease();
    v8 = __OFADD__(v6, v7);
    v9 = v6 + v7;
    if (!v8)
    {
      sub_23ADB0190(v2 - 128);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = sub_23B1C68C0();
      swift_bridgeObjectRelease();
      if (!__OFADD__(v9, v10))
      {
        sub_23ADB0190(v2 - 128);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v2 - 176) = v1;
        *(_QWORD *)(v2 - 168) = AssociatedTypeWitness;
        v11 = *(_QWORD *)(v2 - 192);
        *(_QWORD *)(v2 - 160) = *(_QWORD *)(v2 - 184);
        *(_QWORD *)(v2 - 152) = v11;
        type metadata accessor for ReconciliationID();
      }
LABEL_7:
      __break(1u);
      JUMPOUT(0x23AD726DCLL);
    }
  }
  __break(1u);
  goto LABEL_7;
}

uint64_t sub_23AD726E0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 128);
  v3 = (result / 0x3E8 + 1) * v2;
  if (((unsigned __int128)(result / 0x3E8 + 1) * v2) >> 64 != v3 >> 63)
  {
    __break(1u);
    goto LABEL_5;
  }
  result = 1000000000 * v3;
  if ((unsigned __int128)(v3 * (__int128)1000000000) >> 64 != (1000000000 * v3) >> 63)
LABEL_5:
    __break(1u);
  return result;
}

void sub_23AD7272C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v37 = a1;
  v33 = a2;
  v3 = (_QWORD *)*v2;
  v38 = v2 + 10;
  v4 = v3[30];
  v5 = v3[28];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v30 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v31 = (char *)v21 - v9;
  v25 = sub_23B1C5E4C();
  v24 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v35 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v11);
  v23 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for SnapshotItem(255, v5, v4, v13);
  v22 = sub_23B1C6C98();
  v21[1] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v36 = (char *)v21 - v14;
  v15 = v3[31];
  v16 = v3[29];
  v17 = swift_getAssociatedTypeWitness();
  v29 = v4;
  v28 = v5;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v27 = v15;
  v26 = v16;
  v19 = AssociatedConformanceWitness;
  v20 = swift_getAssociatedConformanceWitness();
  v39 = AssociatedTypeWitness;
  v40 = v17;
  v34 = v19;
  v41 = v19;
  v42 = v20;
  type metadata accessor for ReconciliationID();
}

void sub_23AD72970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *);
  uint64_t v21;

  v13 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&a9 - v14;
  v16 = sub_23B1C6C98();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&a9 - v18;
  *(_QWORD *)(v11 - 352) = v10;
  v20 = *(void (**)(char *))(v10 + 16);
  *(_QWORD *)(v11 - 272) = v9;
  v21 = *(_QWORD *)(v11 - 208);
  *(_QWORD *)(v11 - 232) = v20;
  v20(v15);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v11 - 328) = v21 + 48;
  swift_beginAccess();
  MEMORY[0x23B8613CC](&unk_23B1DCF98, a1);
  sub_23B1C6920();
  sub_23B1C68D8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a1);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_endAccess();
  sub_23ADB0EF0();
  sub_23AD72164();
}

void sub_23AD72A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  NSObject *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  if (!v1)
  {
    v4 = *(_QWORD *)(v3 - 224);
    v5 = v2;
    sub_23ADB0190(v3 - 136);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(_BYTE *)(v3 - 96) & 1) == 0)
    {
      v6 = *(void (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + 96) + 32) + 240);
      swift_retain();
      v6(v2, 1);
      swift_release();
      v7 = *(_QWORD *)(v3 - 264);
      v8 = *(_QWORD *)(v7 - 8);
      v9 = v4;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
      {
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 376) + 8))(v4, *(_QWORD *)(v3 - 368));
        *(_QWORD *)(v3 - 72) = 0;
        *(_DWORD *)(v3 - 200) = 1;
        v10 = *(_QWORD *)(v3 - 272);
        v11 = v5;
LABEL_7:
        v16 = *(_QWORD *)(v3 - 240);
        v17 = *(_QWORD *)(v3 - 280);
        goto LABEL_12;
      }
      v12 = v4 + *(int *)(v7 + 48);
      v13 = *(_QWORD *)(v3 - 360);
      sub_23AA9BA80(v12, v13);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
      v14 = *(_DWORD *)(v13 + 4);
      v15 = *(_BYTE *)(v13 + 8);
      sub_23AA9F854(v13);
      v11 = v2;
      if ((v15 & 1) != 0)
      {
        *(_QWORD *)(v3 - 72) = 0;
        *(_DWORD *)(v3 - 200) = 1;
        v10 = *(_QWORD *)(v3 - 272);
        goto LABEL_7;
      }
      v18 = *(_QWORD *)(v0 + 128);
      v19 = (v14 / 0x3E8 + 1) * v18;
      if (((unsigned __int128)(v14 / 0x3E8 + 1) * v18) >> 64 == v19 >> 63)
      {
        v20 = 1000000000 * v19;
        if ((unsigned __int128)(v19 * (__int128)1000000000) >> 64 == (1000000000 * v19) >> 63)
        {
          v21 = *(_QWORD *)(v3 - 256);
          v22 = __OFADD__(v21, v20);
          v23 = v21 + v20;
          v10 = *(_QWORD *)(v3 - 272);
          v16 = *(_QWORD *)(v3 - 240);
          v17 = *(_QWORD *)(v3 - 280);
          if (!v22)
          {
            *(_QWORD *)(v3 - 72) = v23;
            *(_DWORD *)(v3 - 200) = 0;
LABEL_12:
            v24 = (id)fpfs_current_or_default_log();
            sub_23B1C5E58();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 - 232))(v17, v11, v10);
            v25 = sub_23B1C5E40();
            v26 = sub_23B1C6A94();
            if (os_log_type_enabled(v25, v26))
            {
              *(_QWORD *)(v3 - 224) = v25;
              v27 = (uint8_t *)swift_slowAlloc();
              v28 = swift_slowAlloc();
              *(_QWORD *)(v3 - 264) = v28;
              *(_QWORD *)(v3 - 136) = v28;
              *(_DWORD *)v27 = 136315138;
              *(_QWORD *)(v3 - 272) = v27 + 4;
              v29 = sub_23B1C7304();
              *(_QWORD *)(v3 - 168) = sub_23AABEC68(v29, v30, (uint64_t *)(v3 - 136));
              sub_23B1C6CBC();
              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 352) + 8))(v17, v10);
              v31 = *(NSObject **)(v3 - 224);
              _os_log_impl(&dword_23AA66000, v31, v26, "💂🏼‍♀️ start monitoring import:disk for %s", v27, 0xCu);
              v32 = *(_QWORD *)(v3 - 264);
              swift_arrayDestroy();
              MEMORY[0x23B8614BC](v32, -1, -1);
              v11 = v5;
              MEMORY[0x23B8614BC](v27, -1, -1);

              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 344) + 8))(*(_QWORD *)(v3 - 240), *(_QWORD *)(v3 - 336));
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 352) + 8))(v17, v10);

              (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 344) + 8))(v16, *(_QWORD *)(v3 - 336));
            }
            (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 - 232))(*(_QWORD *)(v3 - 288), v11, v10);
            v33 = *(_DWORD *)(v3 - 200);
            *(_BYTE *)(v3 - 136) = v33;
            *(_QWORD *)(v3 - 168) = *(_QWORD *)(v3 - 72);
            *(_QWORD *)(v3 - 160) = v33 & 1;
            *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 256);
            *(_BYTE *)(v3 - 144) = 0;
            swift_beginAccess();
            v34 = *(_QWORD *)(v3 - 320);
            *(_QWORD *)(v3 - 136) = *(_QWORD *)(v3 - 304);
            *(_QWORD *)(v3 - 128) = v34;
            v35 = *(_QWORD *)(v3 - 312);
            *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 296);
            *(_QWORD *)(v3 - 112) = v35;
            type metadata accessor for DiskImport.ImportingFolder();
          }
          goto LABEL_19;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_19:
      __break(1u);
    }
  }
}

void sub_23AD72F18(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v36 = a1;
  v32 = a2;
  v3 = (_QWORD *)*v2;
  v37 = v2 + 10;
  v4 = v3[31];
  v5 = v3[29];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v28 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v30 = (char *)v20 - v9;
  v24 = sub_23B1C5E4C();
  v23 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v34 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v11);
  v22 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for SnapshotItem(255, v5, v4, v13);
  v21 = sub_23B1C6C98();
  v20[1] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v35 = (char *)v20 - v14;
  v15 = v3[30];
  v16 = v3[28];
  v17 = swift_getAssociatedTypeWitness();
  v26 = v15;
  v25 = v16;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v29 = v4;
  v27 = v5;
  v19 = swift_getAssociatedConformanceWitness();
  v38 = v17;
  v39 = AssociatedTypeWitness;
  v40 = AssociatedConformanceWitness;
  v41 = v19;
  v33 = v19;
  type metadata accessor for ReconciliationID();
}

void sub_23AD73158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *);
  uint64_t v21;

  v13 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&a9 - v14;
  v16 = sub_23B1C6C98();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&a9 - v18;
  *(_QWORD *)(v11 - 352) = v10;
  v20 = *(void (**)(char *))(v10 + 16);
  *(_QWORD *)(v11 - 264) = v9;
  v21 = *(_QWORD *)(v11 - 208);
  *(_QWORD *)(v11 - 232) = v20;
  v20(v15);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v11 - 328) = v21 + 48;
  swift_beginAccess();
  MEMORY[0x23B8613CC](&unk_23B1DCF98, a1);
  sub_23B1C6920();
  sub_23B1C68D8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, a1);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_endAccess();
  sub_23ADB0EF0();
  sub_23AD72164();
}

void sub_23AD73284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  NSObject *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  if (!v1)
  {
    v4 = *(_QWORD *)(v3 - 224);
    sub_23ADB0190(v3 - 136);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(_BYTE *)(v3 - 96) & 1) == 0)
    {
      v5 = *(void (**)(uint64_t, uint64_t))(**(_QWORD **)(*(_QWORD *)(v0 + 96) + 40) + 240);
      swift_retain();
      v5(v2, 1);
      swift_release();
      v6 = *(_QWORD *)(v3 - 272);
      v7 = *(_QWORD *)(v6 - 8);
      v8 = v4;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
      {
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 376) + 8))(v4, *(_QWORD *)(v3 - 368));
        *(_QWORD *)(v3 - 72) = 0;
        *(_DWORD *)(v3 - 200) = 1;
        v9 = *(_QWORD *)(v3 - 264);
        v10 = *(_QWORD *)(v3 - 240);
LABEL_7:
        v15 = *(_QWORD *)(v3 - 280);
        goto LABEL_12;
      }
      v11 = v4 + *(int *)(v6 + 48);
      v12 = *(_QWORD *)(v3 - 360);
      sub_23AA9BA80(v11, v12);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v6);
      v13 = *(_DWORD *)(v12 + 4);
      v14 = *(_BYTE *)(v12 + 8);
      sub_23AA9F854(v12);
      v9 = *(_QWORD *)(v3 - 264);
      v10 = *(_QWORD *)(v3 - 240);
      if ((v14 & 1) != 0)
      {
        *(_QWORD *)(v3 - 72) = 0;
        *(_DWORD *)(v3 - 200) = 1;
        goto LABEL_7;
      }
      v16 = *(_QWORD *)(v0 + 128);
      v17 = (v13 / 0x3E8 + 1) * v16;
      if (((unsigned __int128)(v13 / 0x3E8 + 1) * v16) >> 64 == v17 >> 63)
      {
        v18 = 1000000000 * v17;
        if ((unsigned __int128)(v17 * (__int128)1000000000) >> 64 == (1000000000 * v17) >> 63)
        {
          v19 = *(_QWORD *)(v3 - 256);
          *(_QWORD *)(v3 - 72) = v19 + v18;
          v15 = *(_QWORD *)(v3 - 280);
          if (!__OFADD__(v19, v18))
          {
            *(_DWORD *)(v3 - 200) = 0;
LABEL_12:
            v20 = (id)fpfs_current_or_default_log();
            sub_23B1C5E58();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 - 232))(v15, v2, v9);
            v21 = sub_23B1C5E40();
            v22 = v9;
            v23 = sub_23B1C6A94();
            if (os_log_type_enabled(v21, v23))
            {
              *(_QWORD *)(v3 - 264) = v21;
              v24 = (uint8_t *)swift_slowAlloc();
              v25 = swift_slowAlloc();
              *(_QWORD *)(v3 - 224) = v25;
              *(_QWORD *)(v3 - 136) = v25;
              *(_DWORD *)v24 = 136315138;
              *(_QWORD *)(v3 - 272) = v24 + 4;
              v26 = sub_23B1C7304();
              *(_QWORD *)(v3 - 168) = sub_23AABEC68(v26, v27, (uint64_t *)(v3 - 136));
              sub_23B1C6CBC();
              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 352) + 8))(v15, v22);
              v28 = *(NSObject **)(v3 - 264);
              _os_log_impl(&dword_23AA66000, v28, v23, "💂🏼‍♀️ start monitoring import:provider for %s", v24, 0xCu);
              v29 = *(_QWORD *)(v3 - 224);
              swift_arrayDestroy();
              MEMORY[0x23B8614BC](v29, -1, -1);
              MEMORY[0x23B8614BC](v24, -1, -1);

              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 344) + 8))(*(_QWORD *)(v3 - 240), *(_QWORD *)(v3 - 336));
            }
            else
            {
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 352) + 8))(v15, v22);

              (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 344) + 8))(v10, *(_QWORD *)(v3 - 336));
            }
            (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 - 232))(*(_QWORD *)(v3 - 296), v2, v22);
            v30 = *(_DWORD *)(v3 - 200);
            *(_BYTE *)(v3 - 136) = v30;
            *(_QWORD *)(v3 - 168) = *(_QWORD *)(v3 - 72);
            *(_QWORD *)(v3 - 160) = v30 & 1;
            *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 256);
            *(_BYTE *)(v3 - 144) = 0;
            swift_beginAccess();
            v31 = *(_QWORD *)(v3 - 304);
            *(_QWORD *)(v3 - 136) = *(_QWORD *)(v3 - 320);
            *(_QWORD *)(v3 - 128) = v31;
            v32 = *(_QWORD *)(v3 - 288);
            *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 312);
            *(_QWORD *)(v3 - 112) = v32;
            type metadata accessor for DiskImport.ImportingFolder();
          }
          goto LABEL_19;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_19:
      __break(1u);
    }
  }
}

uint64_t sub_23AD736FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void (*)(), uint64_t *);
  uint64_t v13;
  char v14;

  v1 = v0;
  v2 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23ADB0190((uint64_t)&v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v8 = v7;
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v9 = v8 * 1000000000.0;
    if ((~COERCE__INT64(v8 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v9 > -9.22337204e18)
      {
        if (v9 < 9.22337204e18)
        {
          v10 = *(_QWORD *)(*(_QWORD *)(v0 + 96) + 16);
          MEMORY[0x24BDAC7A8](result);
          *(&v13 - 2) = v1;
          *(&v13 - 1) = v11;
          v12 = *(void (**)(void (*)(), uint64_t *))(*(_QWORD *)v10 + 264);
          swift_retain();
          v12(sub_23AD7CDB4, &v13 - 4);
          return swift_release();
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

void sub_23AD73888()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

uint64_t sub_23AD739A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, _BYTE *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char v47;
  _BYTE *v48;
  void (*v49)(uint64_t, _BYTE *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v71[96];

  *(_QWORD *)(v3 - 248) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v3 - 240) = a1;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v3 - 256) = &v71[-v4];
  v5 = sub_23B1C6C98();
  *(_QWORD *)(v3 - 200) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 - 192) = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v3 - 216) = &v71[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v3 - 272) = &v71[-v9];
  *(_QWORD *)(v3 - 208) = v1;
  *(_QWORD *)(v3 - 72) = *(_QWORD *)(v1 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v3 - 312) = &v71[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v3 - 304) = &v71[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v3 - 280) = &v71[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v71[-v16];
  v18 = sub_23B1C6C98();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = &v71[-v21];
  v23 = *(_QWORD *)(v2 - 8);
  v24 = MEMORY[0x24BDAC7A8](v20);
  v26 = &v71[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = &v71[-v28];
  MEMORY[0x24BDAC7A8](v27);
  v31 = &v71[-v30];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v19 + 16))(v22, *(_QWORD *)(v3 - 176), v18);
  *(_QWORD *)(v3 - 176) = v23;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v2) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v22, v18);
    v33 = *(_QWORD *)(v3 - 200);
    v32 = *(_QWORD *)(v3 - 192);
    v34 = *(_QWORD *)(v3 - 272);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 16))(v34, *(_QWORD *)(v3 - 184), v32);
    v35 = *(_QWORD *)(v3 - 72);
    v36 = *(_QWORD *)(v3 - 208);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v34, 1, v36) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v32);
    }
    else
    {
      v48 = v17;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v35 + 32))(v17, v34, v36);
      sub_23ADB0190(v3 - 136);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v35 + 16);
      v50 = *(_QWORD *)(v3 - 256);
      v49(v50, v48, v36);
      v51 = *(_QWORD *)(v3 - 240);
      swift_storeEnumTagMultiPayload();
      MEMORY[0x23B8613CC](&unk_23B1DCF98, v51);
      v52 = sub_23B1C6908();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v50, v51);
      if ((v52 & 1) == 0)
      {
        v49(*(_QWORD *)(v3 - 312), v48, v36);
        swift_beginAccess();
        sub_23B1C6920();
        v63 = *(_QWORD *)(v3 - 304);
        sub_23B1C68CC();
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v63, v36);
        swift_endAccess();
        sub_23ADB0EF0();
        sub_23AD72164();
      }
      (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v48, v36);
    }
    v62 = v3 - 136;
    goto LABEL_22;
  }
  *(_QWORD *)(v3 - 304) = v26;
  *(_QWORD *)(v3 - 272) = v29;
  v37 = *(_DWORD *)(v3 - 260);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v3 - 176) + 32))(v31, v22, v2);
  v39 = *(_QWORD *)(v3 - 200);
  v38 = *(_QWORD *)(v3 - 192);
  v40 = *(_QWORD *)(v3 - 216);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 16))(v40, *(_QWORD *)(v3 - 184), v38);
  v41 = *(_QWORD *)(v3 - 72);
  v42 = *(_QWORD *)(v3 - 208);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v40, 1, v42) != 1)
  {
    v53 = v41;
    *(_QWORD *)(v3 - 184) = v2;
    v54 = *(_QWORD *)(v3 - 280);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 32))(v54, *(_QWORD *)(v3 - 216), v42);
    if (v37 == 4)
    {
      *(_QWORD *)(v3 - 192) = v31;
      sub_23ADB0190(v3 - 136);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v64 = *(_QWORD *)(v3 - 256);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v64, v54, v42);
      v65 = *(_QWORD *)(v3 - 240);
      swift_storeEnumTagMultiPayload();
      MEMORY[0x23B8613CC](&unk_23B1DCF98, v65);
      v66 = sub_23B1C6908();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v64, v65);
      if ((v66 & 1) == 0)
      {
        sub_23ADB0190(v3 - 136);
        v68 = *(_QWORD *)(v3 - 344);
        *(_QWORD *)(v3 - 168) = *(_QWORD *)(v3 - 328);
        *(_QWORD *)(v3 - 160) = v68;
        v69 = *(_QWORD *)(v3 - 336);
        *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 320);
        *(_QWORD *)(v3 - 144) = v69;
        type metadata accessor for DiskImport.ImportingFolder();
      }
      v53 = *(_QWORD *)(v3 - 72);
      v31 = *(_BYTE **)(v3 - 192);
    }
    else if (v37 == 3)
    {
      sub_23ADB0190(v3 - 136);
      v55 = v31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v56 = *(_QWORD *)(v3 - 256);
      (*(void (**)(uint64_t, _BYTE *, _QWORD))(*(_QWORD *)(v3 - 176) + 16))(v56, v31, *(_QWORD *)(v3 - 184));
      v57 = *(_QWORD *)(v3 - 240);
      swift_storeEnumTagMultiPayload();
      MEMORY[0x23B8613CC](&unk_23B1DCF98, v57);
      v58 = sub_23B1C6908();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v56, v57);
      if ((v58 & 1) == 0)
      {
        sub_23ADB0190(v3 - 136);
        *(_QWORD *)(v3 - 192) = *(_QWORD *)(v3 - 128);
        v59 = *(_QWORD *)(v3 - 344);
        *(_QWORD *)(v3 - 168) = *(_QWORD *)(v3 - 328);
        *(_QWORD *)(v3 - 160) = v59;
        v60 = *(_QWORD *)(v3 - 336);
        *(_QWORD *)(v3 - 152) = *(_QWORD *)(v3 - 320);
        *(_QWORD *)(v3 - 144) = v60;
        type metadata accessor for DiskImport.ImportingFolder();
      }
      v53 = *(_QWORD *)(v3 - 72);
      v31 = v55;
      v67 = *(_QWORD *)(v3 - 176);
      v54 = *(_QWORD *)(v3 - 280);
      goto LABEL_21;
    }
    v67 = *(_QWORD *)(v3 - 176);
LABEL_21:
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v42);
    (*(void (**)(_BYTE *, _QWORD))(v67 + 8))(v31, *(_QWORD *)(v3 - 184));
    v62 = v3 - 136;
    goto LABEL_22;
  }
  (*(void (**)(_QWORD, uint64_t))(v39 + 8))(*(_QWORD *)(v3 - 216), v38);
  sub_23ADB0190(v3 - 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(v3 - 176);
  v44 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v43 + 16);
  v45 = *(_QWORD *)(v3 - 256);
  v44(v45, v31, v2);
  v46 = *(_QWORD *)(v3 - 240);
  swift_storeEnumTagMultiPayload();
  MEMORY[0x23B8613CC](&unk_23B1DCF98, v46);
  v47 = sub_23B1C6908();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v45, v46);
  if ((v47 & 1) == 0)
  {
    v44(*(_QWORD *)(v3 - 304), v31, v2);
    swift_beginAccess();
    sub_23B1C6920();
    v61 = *(_QWORD *)(v3 - 272);
    sub_23B1C68CC();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v61, v2);
    swift_endAccess();
    sub_23ADB0EF0();
    sub_23AD72164();
  }
  (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v31, v2);
  v62 = v3 - 136;
LABEL_22:
  sub_23ADB0190(v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(_BYTE *)(v3 - 96) ^ 1) & 1;
}

void sub_23AD743C4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[15];
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v55 = a1;
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 248);
  v4 = *(_QWORD *)(*v1 + 232);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v45 = sub_23B1C6C98();
  v44 = *(_QWORD *)(v45 - 8);
  v6 = MEMORY[0x24BDAC7A8](v45);
  v42 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v40[13] = (char *)v40 - v8;
  v9 = *(_QWORD *)(v2 + 240);
  v10 = *(_QWORD *)(v2 + 224);
  swift_getAssociatedTypeWitness();
  v54 = sub_23B1C6C98();
  v53 = *(_QWORD *)(v54 - 8);
  v11 = MEMORY[0x24BDAC7A8](v54);
  v52 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v43 = (char *)v40 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v46 = (char *)v40 - v15;
  v41 = sub_23B1C5E4C();
  v40[14] = *(_QWORD *)(v41 - 8);
  v16 = MEMORY[0x24BDAC7A8](v41);
  v40[2] = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v40[12] = (char *)v40 - v19;
  v51 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v40[7] = (char *)v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v40[8] = (char *)v40 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v50 = (char *)v40 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v40[3] = (char *)v40 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v40[4] = (char *)v40 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v40[0] = (char *)v40 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v40[6] = (char *)v40 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v40[11] = (char *)v40 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v40[5] = (char *)v40 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v40[1] = (char *)v40 - v38;
  v49 = sub_23B1C5BDC();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v47 = (char *)v40 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v10;
  v57 = v4;
  v58 = v9;
  v59 = v3;
  type metadata accessor for PersistenceTrigger();
}

void sub_23AD747A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedConformanceWitness;
  uint64_t v24;

  v16 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v15 - 360) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v15 - 368) = (char *)&a9 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v15 - 320) = (char *)&a9 - v21;
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v15 - 232) = (char *)&a9 - v22;
  *(_QWORD *)(v15 - 272) = v12;
  *(_QWORD *)(v15 - 304) = v14;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v15 - 296) = v9;
  *(_QWORD *)(v15 - 288) = v10;
  v24 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v15 - 224) = v13;
  *(_QWORD *)(v15 - 216) = v11;
  *(_QWORD *)(v15 - 400) = v11;
  *(_QWORD *)(v15 - 336) = AssociatedConformanceWitness;
  *(_QWORD *)(v15 - 208) = AssociatedConformanceWitness;
  *(_QWORD *)(v15 - 200) = v24;
  type metadata accessor for ReconciliationID();
}

void sub_23AD748D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  void (*v41)(uint64_t, _QWORD, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *TupleTypeMetadata;
  uint64_t v49;
  int v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[96];

  *(_QWORD *)(v5 - 352) = a1;
  v6 = sub_23B1C6C98();
  *(_QWORD *)(v5 - 328) = v6;
  *(_QWORD *)(v5 - 344) = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 552) = &v79[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v5 - 520) = &v79[-v10];
  v11 = MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v5 - 440) = &v79[-v12];
  v13 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v5 - 576) = &v79[-v14];
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v5 - 416) = &v79[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v5 - 512) = &v79[-v18];
  *(_QWORD *)(v5 - 312) = v3;
  *(_QWORD *)(v5 - 280) = *(_QWORD *)(v3 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v5 - 456) = &v79[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v5 - 448) = &v79[-v22];
  v23 = MEMORY[0x24BDAC7A8](v21);
  v24 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v5 - 632) = &v79[-v25];
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v5 - 624) = &v79[-v27];
  v28 = MEMORY[0x24BDAC7A8](v26);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v31 = MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v5 - 432) = &v79[-v32];
  v33 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v5 - 504) = &v79[-v34];
  v35 = MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v5 - 424) = &v79[-v36];
  v37 = MEMORY[0x24BDAC7A8](v35);
  v39 = &v79[-v38];
  MEMORY[0x24BDAC7A8](v37);
  *(_QWORD *)(v5 - 528) = &v79[-v40];
  *(_QWORD *)(v5 - 264) = v1;
  v41 = *(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 16);
  v42 = *(_QWORD *)(v5 - 232);
  v41(v42, *(_QWORD *)(v5 - 240), v4);
  *(_QWORD *)(v5 - 240) = v4;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xBu:
      v43 = *(_QWORD *)(v5 - 320);
      v44 = ((uint64_t (*)(uint64_t, uint64_t, _QWORD))v41)(v43, v42, *(_QWORD *)(v5 - 240));
      MEMORY[0x24BDAC7A8](v44);
      strcpy(&v79[-32], " otherID from to ");
      v45 = *(_QWORD *)(v5 - 352);
      v46 = *(_QWORD *)(v5 - 328);
      *(_QWORD *)(v5 - 224) = v45;
      *(_QWORD *)(v5 - 216) = v46;
      v47 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E6CC0);
      *(_QWORD *)(v5 - 208) = v47;
      *(_QWORD *)(v5 - 200) = v47;
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      v49 = v43 + TupleTypeMetadata[12];
      v50 = *(unsigned __int8 *)(v43 + TupleTypeMetadata[16]);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 344) + 8))(v49, v46);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v43, v45);
LABEL_22:
        v42 = *(_QWORD *)(v5 - 232);
LABEL_23:
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 264) + 8))(v42, *(_QWORD *)(v5 - 240));
LABEL_24:
        sub_23AD72164();
      }
      v57 = *(unsigned __int8 *)(v43 + TupleTypeMetadata[20]);
      if (v57 == 6)
      {
        v42 = *(_QWORD *)(v5 - 232);
        v68 = *(_QWORD *)(v5 - 312);
        v69 = *(_QWORD *)(v5 - 280);
        if ((v50 - 3) < 2)
        {
          *(_QWORD *)(v5 - 360) = v2;
          v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32);
          v71 = *(_QWORD *)(v5 - 528);
          *(_QWORD *)(v5 - 368) = v70;
          v70(v71, v43, v68);
          v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 344) + 32);
          v73 = *(_QWORD *)(v5 - 512);
          *(_QWORD *)(v5 - 320) = v72;
          v72(v73, v49, v46);
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 264) + 8))(v42, *(_QWORD *)(v5 - 240));
          sub_23ADB0190(v5 - 224);
          v74 = *(_QWORD *)(v5 - 288);
          *(_QWORD *)(v5 - 144) = *(_QWORD *)(v5 - 304);
          *(_QWORD *)(v5 - 136) = v74;
          v75 = *(_QWORD *)(v5 - 296);
          *(_QWORD *)(v5 - 128) = *(_QWORD *)(v5 - 272);
          *(_QWORD *)(v5 - 120) = v75;
          type metadata accessor for DiskImport.ImportingFolder();
        }
        (*(void (**)(uint64_t, _QWORD))(v69 + 8))(v43, *(_QWORD *)(v5 - 312));
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 344) + 8))(v49, v46);
        goto LABEL_23;
      }
      v58 = *(_QWORD *)(v5 - 312);
      v59 = *(_QWORD *)(v5 - 280);
      if (v57 == 4)
      {
        v76 = *(_QWORD *)(v5 - 432);
        (*(void (**)(uint64_t, _QWORD, _QWORD))(v59 + 32))(v76, *(_QWORD *)(v5 - 320), *(_QWORD *)(v5 - 312));
        (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 344) + 32))(*(_QWORD *)(v5 - 440), v49, v46);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v59 + 16))(*(_QWORD *)(v5 - 424), v76, v58);
        *(_QWORD *)(v5 - 144) = 0;
        *(_QWORD *)(v5 - 136) = 0;
        *(_QWORD *)(v5 - 128) = 0;
        *(_BYTE *)(v5 - 120) = 1;
        swift_beginAccess();
        v77 = *(_QWORD *)(v5 - 288);
        *(_QWORD *)(v5 - 224) = *(_QWORD *)(v5 - 304);
        *(_QWORD *)(v5 - 216) = v77;
        v78 = *(_QWORD *)(v5 - 296);
        *(_QWORD *)(v5 - 208) = *(_QWORD *)(v5 - 272);
        *(_QWORD *)(v5 - 200) = v78;
        type metadata accessor for DiskImport.ImportingFolder();
      }
      if (v57 != 3)
      {
        (*(void (**)(_QWORD, _QWORD))(v59 + 8))(*(_QWORD *)(v5 - 320), *(_QWORD *)(v5 - 312));
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 344) + 8))(v49, v46);
        goto LABEL_22;
      }
      *(_QWORD *)(v5 - 360) = v2;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v59 + 32))(v39, *(_QWORD *)(v5 - 320), v58);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 344) + 32))(*(_QWORD *)(v5 - 416), v49, v46);
      v60 = *(_QWORD *)(v5 - 488);
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v62 = v61;
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 480) + 8))(v60, *(_QWORD *)(v5 - 472));
      v63 = v62 * 1000000000.0;
      if ((~COERCE__INT64(v62 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v63 > -9.22337204e18)
        {
          if (v63 < 9.22337204e18)
            sub_23AD7272C((uint64_t)v39, (uint64_t)v63);
LABEL_28:
          __break(1u);
          JUMPOUT(0x23AD76910);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_28;
    case 0x14u:
      v51 = *(_QWORD **)(v5 - 360);
      v41((uint64_t)v51, v42, *(_QWORD *)(v5 - 240));
      if ((*v51 & 0x8000000000000000) == 0)
      {
        v52 = *(_QWORD *)(v5 - 288);
        *(_QWORD *)(v5 - 224) = *(_QWORD *)(v5 - 304);
        *(_QWORD *)(v5 - 216) = v52;
        v53 = *(_QWORD *)(v5 - 296);
        *(_QWORD *)(v5 - 208) = *(_QWORD *)(v5 - 272);
        *(_QWORD *)(v5 - 200) = v53;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
      }
      *(_QWORD *)(v5 - 360) = v2;
      v64 = *(_QWORD *)(v5 - 288);
      *(_QWORD *)(v5 - 224) = *(_QWORD *)(v5 - 304);
      *(_QWORD *)(v5 - 216) = v64;
      v65 = *(_QWORD *)(v5 - 296);
      *(_QWORD *)(v5 - 208) = *(_QWORD *)(v5 - 272);
      *(_QWORD *)(v5 - 200) = v65;
      type metadata accessor for Propagation.CreateItem();
    case 0x15u:
      *(_QWORD *)(v5 - 360) = v2;
      v54 = *(_QWORD **)(v5 - 368);
      v41((uint64_t)v54, v42, *(_QWORD *)(v5 - 240));
      if ((*v54 & 0x8000000000000000) == 0)
      {
        v55 = *(_QWORD *)(v5 - 288);
        *(_QWORD *)(v5 - 224) = *(_QWORD *)(v5 - 304);
        *(_QWORD *)(v5 - 216) = v55;
        v56 = *(_QWORD *)(v5 - 296);
        *(_QWORD *)(v5 - 208) = *(_QWORD *)(v5 - 272);
        *(_QWORD *)(v5 - 200) = v56;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
      }
      v66 = *(_QWORD *)(v5 - 288);
      *(_QWORD *)(v5 - 224) = *(_QWORD *)(v5 - 304);
      *(_QWORD *)(v5 - 216) = v66;
      v67 = *(_QWORD *)(v5 - 296);
      *(_QWORD *)(v5 - 208) = *(_QWORD *)(v5 - 272);
      *(_QWORD *)(v5 - 200) = v67;
      type metadata accessor for Propagation.CreateItem();
    case 0x27u:
      sub_23ADB0270();
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 264) + 8))(v42, *(_QWORD *)(v5 - 240));
      goto LABEL_24;
    default:
      goto LABEL_23;
  }
}

uint64_t sub_23AD76990()
{
  uint64_t v0;

  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t *sub_23AD769B4()
{
  uint64_t *v0;

  v0 = sub_23ADB0144();
  swift_release();

  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_23AD769F0()
{
  sub_23AD769B4();
  return swift_deallocClassInstance();
}

void type metadata accessor for DiskImport.Monitor()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for DiskImport()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD76A24()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AD76A64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23AD76AD8(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_23AD76B98(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t sub_23AD76C04(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23AD76C4C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for DiskImport.MonitoredFolders()
{
  JUMPOUT(0x23B861318);
}

void sub_23AD76CA4(_QWORD *a1, int a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v66 = a3;
  v65 = a4;
  v46 = a2;
  v4 = (_QWORD *)*a1;
  v44 = sub_23B1C5BDC();
  v39 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v4[71];
  v7 = v4[73];
  v36 = type metadata accessor for SnapshotItem(255, v6, v7, v8);
  v35 = sub_23B1C6C98();
  v34[2] = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)v34 - v9;
  v50 = sub_23B1C5E4C();
  v47 = *(_QWORD *)(v50 - 8);
  v10 = MEMORY[0x24BDAC7A8](v50);
  v45 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v41 = (char *)v34 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v48 = (char *)v34 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v49 = (char *)v34 - v16;
  v17 = v4[74];
  v18 = v4[72];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = sub_23B1C6C98();
  v55 = *(_QWORD *)(v20 - 8);
  v56 = v20;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v57 = (char *)v34 - v22;
  v59 = AssociatedTypeWitness;
  v61 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v21);
  v58 = (char *)v34 - v23;
  v24 = swift_getAssociatedTypeWitness();
  v62 = sub_23B1C6C98();
  v25 = MEMORY[0x24BDAC7A8](v62);
  v26 = *(_QWORD *)(v24 - 8);
  v63 = v24;
  v64 = v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v42 = (char *)v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v38 = (char *)v34 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v40 = (char *)v34 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v60 = (char *)v34 - v33;
  v53 = v6;
  v67 = v6;
  v68 = v18;
  v51 = v18;
  v54 = v7;
  v69 = v7;
  v70 = v17;
  v52 = v17;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AD7701C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, _BYTE *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  id v63;
  _BYTE *v64;
  void (*v65)(_BYTE *, _BYTE *, uint64_t);
  _BOOL4 v66;
  void (*v67)(uint64_t, uint64_t);
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  _DWORD *v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t (*v86)(_BYTE *, uint64_t);
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  void *v101;
  id v102;
  uint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  _BOOL4 v106;
  uint8_t *v107;
  const char *v108;
  uint8_t *v109;
  void *v110;
  id v111;
  int v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char v117;
  void (*v118)(uint64_t, uint64_t);
  void *v119;
  char v120;
  void *v121;
  void (*v122)(uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  _BYTE v135[96];

  v6 = sub_23B1C6C98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v135[-v9];
  *(_QWORD *)(v4 - 168) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v4 - 160) = a1;
  v11 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v4 - 352) = &v135[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = &v135[-v14];
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = &v135[-v17];
  v19 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v4 - 336) = &v135[-v20];
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v4 - 368) = &v135[-v22];
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v4 - 312) = &v135[-v24];
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v4 - 176) = &v135[-v25];
  *(_QWORD *)(v4 - 360) = v3;
  result = sub_23AABA464();
  if ((result & 1) != 0)
  {
    v27 = *(_QWORD *)(v4 - 136);
    result = (*(uint64_t (**)(void))(v4 - 144))();
    if (!v27)
    {
      *(_QWORD *)(v4 - 136) = 0;
      v29 = *(_QWORD *)(v4 - 168);
      v28 = *(_QWORD *)(v4 - 160);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v29 + 48))(v10, 1, v28) == 1)
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
      *(_QWORD *)(v4 - 144) = v18;
      v30 = *(_QWORD *)(v4 - 176);
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v29 + 32))(v30, v10, v28);
      v31 = *(_QWORD *)(v4 - 200);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v30, v31);
      v33 = *(_QWORD *)(v4 - 192);
      v32 = *(_QWORD *)(v4 - 184);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v1, 1, v33) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v28);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v31);
      }
      v34 = *(_QWORD *)(v4 - 216);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v34, v1, v33);
      v35 = v30 + *(int *)(v28 + 52);
      v36 = *(_QWORD *)(v4 - 256);
      v37 = *(_QWORD *)(v4 - 248);
      v38 = *(void (**)(uint64_t))(v36 + 16);
      v39 = *(_QWORD *)(v4 - 240);
      *(_QWORD *)(v4 - 152) = v35;
      v38(v39);
      v40 = *(_QWORD *)(v4 - 208);
      v41 = v32;
      v42 = *(_QWORD *)(v4 - 224);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v39, 1, v42) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v34, v33);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 168) + 8))(*(_QWORD *)(v4 - 176), *(_QWORD *)(v4 - 160));
        return (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v39, v37);
      }
      v43 = *(_QWORD *)(v4 - 160);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v40 + 32))(*(_QWORD *)(v4 - 232), v39, v42);
      v45 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v4 - 272), *(_QWORD *)(v4 - 264), v44);
      v46 = v45;
      v47 = *(_BYTE **)(v4 - 176);
      if (v47[*(int *)(v45 + 56)] == 3)
      {
        *(_QWORD *)(v4 - 240) = v45;
        v48 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
        v49 = (id)fpfs_current_or_default_log();
        v50 = *(_QWORD *)(v4 - 304);
        sub_23B1C5E58();
        v51 = *(_QWORD *)(v4 - 168);
        v52 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v51 + 16);
        v53 = *(_QWORD *)(v4 - 312);
        v54 = v43;
        v52(v53, v47, v43);
        v55 = v48;
        v56 = sub_23B1C5E40();
        v57 = sub_23B1C6A94();
        v58 = os_log_type_enabled(v56, v57);
        *(_QWORD *)(v4 - 256) = v52;
        *(_QWORD *)(v4 - 248) = v55;
        if (v58)
        {
          v59 = swift_slowAlloc();
          *(_QWORD *)(v4 - 352) = v56;
          v60 = v59;
          v61 = (_QWORD *)swift_slowAlloc();
          *(_QWORD *)(v4 - 472) = v61;
          v62 = swift_slowAlloc();
          *(_QWORD *)(v4 - 344) = v62;
          *(_QWORD *)(v4 - 120) = v62;
          *(_DWORD *)v60 = 138412546;
          v63 = objc_msgSend(v55, sel_enter);
          *(_QWORD *)(v4 - 128) = v63;
          sub_23B1C6CBC();
          *v61 = v63;

          *(_WORD *)(v60 + 12) = 2082;
          v64 = *(_BYTE **)(v4 - 312);
          v52(*(_QWORD *)(v4 - 368), v64, *(_QWORD *)(v4 - 160));
          (*(void (**)(_BYTE *, _QWORD))(v51 + 8))(v64, *(_QWORD *)(v4 - 160));
          sub_23B0CA854(*(_QWORD *)(v4 - 160));
        }
        v67 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
        *(_QWORD *)(v4 - 200) = v67;
        v67(v53, v43);

        v68 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 328) + 8);
        v69 = *(_QWORD *)(v4 - 296);
        v68(v50, v69);
        v70 = *(_QWORD *)(v4 - 320);
        v72 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v4 - 288), *(_QWORD *)(v4 - 280), v71);
        v73 = *(_QWORD *)(v4 - 336);
        if (*(_BYTE *)(*(_QWORD *)(v4 - 152) + *(int *)(v72 + 52)) != 3)
        {
          v74 = v72;
          *(_QWORD *)(v4 - 152) = v68;
          v75 = (id)fpfs_current_or_default_log();
          sub_23B1C5E58();
          v76 = *(_QWORD *)(v4 - 176);
          v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 256);
          v77(v73, v76, v54);
          v78 = *(_QWORD *)(v4 - 144);
          v77(v78, v76, v54);
          v79 = v70;
          v80 = sub_23B1C5E40();
          v81 = sub_23B1C6AAC();
          if (os_log_type_enabled(v80, v81))
          {
            v82 = (_DWORD *)swift_slowAlloc();
            v83 = swift_slowAlloc();
            *(_QWORD *)(v4 - 304) = v83;
            *(_QWORD *)(v4 - 120) = v83;
            *v82 = 136446466;
            v84 = *(unsigned __int8 *)(v73 + *(int *)(v54 + 52) + *(int *)(v74 + 52));
            (*(void (**)(uint64_t, uint64_t))(v4 - 200))(v73, v54);
            __asm { BR              X9 }
          }
          v95 = *(void (**)(uint64_t, uint64_t))(v4 - 200);
          v95(v78, v54);
          v95(v73, v54);

          v96 = v79;
          v68 = *(void (**)(uint64_t, uint64_t))(v4 - 152);
          v68(v96, v69);
          v42 = *(_QWORD *)(v4 - 224);
        }
        if (*(_BYTE *)(*(_QWORD *)(v4 - 176) + *(int *)(*(_QWORD *)(v4 - 240) + 52)) != 2)
        {
          v102 = (id)fpfs_current_or_default_log();
          v103 = *(_QWORD *)(v4 - 376);
          sub_23B1C5E58();
          v104 = sub_23B1C5E40();
          v105 = sub_23B1C6A94();
          v106 = os_log_type_enabled(v104, v105);
          v98 = *(_QWORD *)(v4 - 216);
          if (!v106)
          {
LABEL_39:

            v68(v103, v69);
            v110 = *(void **)(v4 - 248);
            sub_23AAD2D6C(v110);

            (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 208) + 8))(*(_QWORD *)(v4 - 232), v42);
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 184) + 8))(v98, *(_QWORD *)(v4 - 192));
            return (*(uint64_t (**)(_QWORD, uint64_t))(v4 - 200))(*(_QWORD *)(v4 - 176), v54);
          }
          v107 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v107 = 0;
          v108 = "skip item not watching content";
LABEL_38:
          _os_log_impl(&dword_23AA66000, v104, v105, v108, v107, 2u);
          v109 = v107;
          v69 = *(_QWORD *)(v4 - 296);
          MEMORY[0x23B8614BC](v109, -1, -1);
          goto LABEL_39;
        }
        v97 = *(_QWORD *)(*(_QWORD *)(v4 - 360) + 32);
        v98 = *(_QWORD *)(v4 - 216);
        v99 = *(_QWORD *)(v4 - 136);
        v100 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v97 + 408))(v98);
        if (v99)
        {
          v101 = *(void **)(v4 - 248);
          sub_23AAD2D6C(v101);

          (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 208) + 8))(*(_QWORD *)(v4 - 232), v42);
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 184) + 8))(v98, *(_QWORD *)(v4 - 192));
LABEL_34:
          v47 = *(_BYTE **)(v4 - 176);
          v86 = *(uint64_t (**)(_BYTE *, uint64_t))(v4 - 200);
          return v86(v47, v54);
        }
        *(_QWORD *)(v4 - 136) = 0;
        if ((v100 & 1) != 0)
        {
          v111 = (id)fpfs_current_or_default_log();
          v103 = *(_QWORD *)(v4 - 408);
          sub_23B1C5E58();
          v104 = sub_23B1C5E40();
          v105 = sub_23B1C6A94();
          if (!os_log_type_enabled(v104, v105))
            goto LABEL_39;
          v107 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v107 = 0;
          v108 = "skip item with pending children";
          goto LABEL_38;
        }
        v112 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 176) + *(int *)(*(_QWORD *)(v4 - 240) + 60));
        v113 = *(_QWORD *)(v4 - 192);
        v114 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 184) + 16);
        v115 = *(_QWORD *)(v4 - 416);
        v114(v115, v98, v113);
        if (v112 == 1)
        {
          v116 = *(_QWORD *)(v4 - 136);
          v117 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v97 + 368))(v115, 1);
          *(_QWORD *)(v4 - 136) = v116;
          if (v116)
          {
            v118 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 184) + 8);
            v119 = *(void **)(v4 - 248);
            v118(v115, v113);
            sub_23AAD2D6C(v119);

            (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 208) + 8))(*(_QWORD *)(v4 - 232), v42);
            v118(v98, v113);
            goto LABEL_34;
          }
          v120 = v117;
          v121 = *(void **)(v4 - 248);
        }
        else
        {
          v120 = 1;
          v121 = *(void **)(v4 - 248);
        }
        v122 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 184) + 8);
        v122(v115, v113);
        v123 = *(_QWORD *)(v4 - 432);
        v114(v123, *(_QWORD *)(v4 - 216), v113);
        *(_QWORD *)(v4 - 144) = v122;
        if ((v120 & 1) != 0)
        {
          v122(v123, v113);
          goto LABEL_50;
        }
        v127 = *(_QWORD *)(v4 - 440);
        v128 = *(_QWORD *)(v4 - 136);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v97 + 240))(v123, 1);
        if (v128)
        {
          v129 = *(void (**)(uint64_t, uint64_t))(v4 - 144);
          v129(v123, v113);
          sub_23AAD2D6C(v121);

          (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 208) + 8))(*(_QWORD *)(v4 - 232), v42);
          v129(*(_QWORD *)(v4 - 216), v113);
          goto LABEL_34;
        }
        *(_QWORD *)(v4 - 136) = 0;
        v130 = *(_QWORD *)(v4 - 448);
        v131 = *(_QWORD *)(v130 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v127, 1, v130) == 1)
        {
          (*(void (**)(_QWORD, uint64_t))(v4 - 144))(*(_QWORD *)(v4 - 432), v113);
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 464) + 8))(v127, *(_QWORD *)(v4 - 456));
        }
        else
        {
          v132 = MEMORY[0x23B8613CC](&unk_23B1DD478, v130);
          v133 = sub_23AF21910(v130, v132);
          (*(void (**)(_QWORD, uint64_t))(v4 - 144))(*(_QWORD *)(v4 - 432), v113);
          (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v127, v130);
          if ((v133 & 1) == 0)
          {
LABEL_50:
            v124 = *(_QWORD *)(v4 - 264);
            v125 = *(_QWORD *)(v4 - 288);
            *(_QWORD *)(v4 - 120) = *(_QWORD *)(v4 - 272);
            *(_QWORD *)(v4 - 112) = v125;
            v126 = *(_QWORD *)(v4 - 280);
            *(_QWORD *)(v4 - 104) = v124;
            *(_QWORD *)(v4 - 96) = v126;
            type metadata accessor for Mutation();
          }
        }
        v134 = *(_QWORD *)(v4 - 288);
        *(_QWORD *)(v4 - 120) = *(_QWORD *)(v4 - 272);
        *(_QWORD *)(v4 - 112) = v134;
        *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 264);
        *(_QWORD *)(v4 - 96) = *(_QWORD *)(v4 - 280);
        type metadata accessor for Mutation();
      }
      v65 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v4 - 168) + 16);
      v65(v15, *(_BYTE **)(v4 - 176), v43);
      v66 = (*(_DWORD *)(v4 - 344) & 1) != 0 && v15[*(int *)(v46 + 56)] == 6;
      v85 = *(_BYTE **)(v4 - 352);
      v54 = *(_QWORD *)(v4 - 160);
      v86 = *(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 168) + 8);
      v86(v15, v54);
      v65(v85, v47, v54);
      if (v66)
      {
        v88 = &v85[*(int *)(v54 + 52)];
        v89 = *(_QWORD *)(v4 - 288);
        v90 = *(_QWORD *)(v4 - 280);
        LODWORD(v88) = v88[*(int *)(type metadata accessor for ItemReconciliationHalf(0, v89, v90, v87)+ 52)];
        v86(v85, v54);
        if ((_DWORD)v88)
        {
          v91 = *(_QWORD *)(v4 - 136);
          v92 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(*(_QWORD *)(v4 - 360) + 32) + 408))(v34);
          if (v91)
          {
            (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 208) + 8))(*(_QWORD *)(v4 - 232), v42);
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 184) + 8))(v34, *(_QWORD *)(v4 - 192));
            v54 = *(_QWORD *)(v4 - 160);
            return v86(v47, v54);
          }
          if ((v92 & 1) == 0)
          {
            *(_QWORD *)(v4 - 136) = 0;
            *(_QWORD *)(v4 - 120) = *(_QWORD *)(v4 - 272);
            *(_QWORD *)(v4 - 112) = v89;
            *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 264);
            *(_QWORD *)(v4 - 96) = v90;
            type metadata accessor for Ingestion.FetchChildrenMetadata();
          }
        }
        v93 = *(_QWORD *)(v4 - 232);
        v94 = *(_QWORD *)(v4 - 208);
        v54 = *(_QWORD *)(v4 - 160);
      }
      else
      {
        v86(v85, v54);
        v93 = *(_QWORD *)(v4 - 232);
        v94 = *(_QWORD *)(v4 - 208);
      }
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v93, v42);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v4 - 184) + 8))(v34, *(_QWORD *)(v4 - 192));
      return v86(v47, v54);
    }
  }
  return result;
}

void sub_23AD783B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 296) = sub_23B1C6758();
  *(_QWORD *)(v4 - 120) = v2;
  *(_QWORD *)(v4 - 112) = v3;
  *(_QWORD *)(v4 - 104) = v1;
  *(_QWORD *)(v4 - 96) = v0;
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD783DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 - 184) = a1;
  sub_23B1C7310();
  v4 = *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72);
  *(_QWORD *)(v2 - 200) = v4;
  *(_QWORD *)(v2 - 152) = 2 * v4;
  swift_allocObject();
  *(_QWORD *)(v2 - 304) = sub_23B1C6728();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(v2 - 224);
  v7 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = v6;
  *(_QWORD *)(v2 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v2 - 96) = v7;
  type metadata accessor for ReconciliationID();
}

void sub_23AD78490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  _BYTE *v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _WORD *v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;

  v9 = type metadata accessor for ReconciliationSideMutation(255, v7, v5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v8 - 240) = TupleTypeMetadata2;
  v11 = (_BYTE *)(v4 + *(int *)(TupleTypeMetadata2 + 48));
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 208) + 16);
  *(_QWORD *)(v8 - 256) = v12;
  v13 = *(_QWORD *)(v8 - 232);
  v12(v4, v13, v6);
  swift_storeEnumTagMultiPayload();
  *v11 = 0;
  *(_QWORD *)(v8 - 312) = v9;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v14 = v4 + *(_QWORD *)(v8 - 200);
  type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v8 - 272), *(_QWORD *)(v8 - 264), v15);
  v16 = (_WORD *)(v14 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  v17 = v13;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 - 256);
  v18(v14, v17, v6);
  swift_storeEnumTagMultiPayload();
  *v16 = 6;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  v19 = v4 + *(_QWORD *)(v8 - 152);
  v20 = *(int *)(*(_QWORD *)(v8 - 240) + 48);
  v18(v19, *(_QWORD *)(v8 - 232), v6);
  swift_storeEnumTagMultiPayload();
  v21 = *(_QWORD *)(v8 - 392);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v23 = v22;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v8 - 424) + 8))(v21, *(_QWORD *)(v8 - 384));
  v24 = v23 * 1000000000.0;
  if ((~COERCE__INT64(v23 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v24 > -9.22337204e18)
    {
      if (v24 < 9.22337204e18)
      {
        v25 = v19 + v20;
        *(_OWORD *)v25 = xmmword_23B1D7F80;
        *(_QWORD *)(v25 + 16) = (uint64_t)v24;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_23AD7D55C(*(_QWORD *)(v8 - 304));
        sub_23ACFFD18();
      }
LABEL_7:
      __break(1u);
      JUMPOUT(0x23AD789F8);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_7;
}

void sub_23AD786D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = *(void **)(v1 - 248);
    sub_23AAD2D6C(v4);

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 - 208) + 8))(*(_QWORD *)(v1 - 232), *(_QWORD *)(v1 - 224));
    (*(void (**)(_QWORD, _QWORD))(v1 - 144))(*(_QWORD *)(v1 - 216), *(_QWORD *)(v1 - 192));
    JUMPOUT(0x23AD77C90);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 - 288);
  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v1 - 272);
  *(_QWORD *)(v1 - 112) = v2;
  v3 = *(_QWORD *)(v1 - 280);
  *(_QWORD *)(v1 - 104) = *(_QWORD *)(v1 - 264);
  *(_QWORD *)(v1 - 96) = v3;
  type metadata accessor for DiskImport.ContinueDiskImport();
}

void sub_23AD78770()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  if (v0)
  {
    swift_release();
    v2 = *(void **)(v1 - 248);
    sub_23AAD2D6C(v2);

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 - 208) + 8))(*(_QWORD *)(v1 - 232), *(_QWORD *)(v1 - 224));
    JUMPOUT(0x23AD7810CLL);
  }
  swift_release();
  v3 = *(void **)(v1 - 248);
  sub_23AAD2D6C(v3);

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 - 208) + 8))(*(_QWORD *)(v1 - 232), *(_QWORD *)(v1 - 224));
  (*(void (**)(_QWORD, _QWORD))(v1 - 144))(*(_QWORD *)(v1 - 216), *(_QWORD *)(v1 - 192));
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 - 168) + 8))(*(_QWORD *)(v1 - 176), *(_QWORD *)(v1 - 160));
  JUMPOUT(0x23AD77228);
}

void sub_23AD787F4()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD);
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  void *v13;

  sub_23B0EB9DC();
  v3 = *(_QWORD *)(v2 - 392);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v5 = v4;
  v1(v3, *(_QWORD *)(v2 - 384));
  v6 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v6 > -9.22337204e18)
    {
      if (v6 < 9.22337204e18)
      {
        v7 = *(_QWORD *)(v2 - 400);
        v8 = sub_23AD3B904(v7, 0x2000000000000000, (uint64_t)v6, 0x10000);
        (*(void (**)(uint64_t, _QWORD))(v2 - 144))(v7, *(_QWORD *)(v2 - 192));
        v9 = *(_QWORD *)(v2 - 392);
        sub_23B1C5BD0();
        sub_23B1C5B94();
        v11 = v10;
        v1(v9, *(_QWORD *)(v2 - 384));
        v12 = v11 * 1000000000.0;
        if ((~COERCE__INT64(v11 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v12 > -9.22337204e18)
          {
            if (v12 < 9.22337204e18)
            {
              sub_23AEBEFD4(v8);
              if (v0)
              {
                swift_release();
                JUMPOUT(0x23AD7893CLL);
              }
              swift_release();
              v13 = *(void **)(v2 - 248);
              sub_23AAD2D6C(v13);

              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 208) + 8))(*(_QWORD *)(v2 - 232), *(_QWORD *)(v2 - 224));
              (*(void (**)(_QWORD, _QWORD))(v2 - 144))(*(_QWORD *)(v2 - 216), *(_QWORD *)(v2 - 192));
              (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 168) + 8))(*(_QWORD *)(v2 - 176), *(_QWORD *)(v2 - 160));
              JUMPOUT(0x23AD77228);
            }
LABEL_16:
            __break(1u);
            JUMPOUT(0x23AD78A1CLL);
          }
LABEL_15:
          __break(1u);
          goto LABEL_16;
        }
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_13;
}

void sub_23AD78A30(_QWORD *a1, uint64_t a2, int a3)
{
  _QWORD v3[4];

  v3[2] = a1;
  v3[3] = a2;
  sub_23AD76CA4(a1, a3, (uint64_t)sub_23AD7CCF0, (uint64_t)v3);
}

uint64_t sub_23AD78A64@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v22 = a3;
  v23 = a2;
  v4 = *a1;
  v5 = *(_QWORD *)(*a1 + 568);
  v20 = *(_QWORD *)(*a1 + 584);
  v21 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v20 - v10;
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v20 - v13;
  v15 = v28;
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1[4] + 280))(v23);
  if (!v15)
  {
    v28 = 0;
    v17 = v21;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      v18 = *(_QWORD *)(v4 + 576);
      v19 = *(_QWORD *)(v4 + 592);
      v24 = v17;
      v25 = v18;
      v26 = v20;
      v27 = v19;
      type metadata accessor for ItemReconciliation();
    }
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, AssociatedTypeWitness);
    sub_23AB00114();
  }
  return result;
}

void sub_23AD78C18(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[6];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v17 = a1;
  v3 = (_QWORD *)*a3;
  v14 = sub_23B1C5BDC();
  v13[4] = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v13[5] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v3[73];
  v6 = v3[71];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13[2] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13[3] = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13[1] = (char *)v13 - v8;
  type metadata accessor for SnapshotItem(255, v6, v5, v9);
  v10 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v10);
  v11 = v3[72];
  v12 = v3[74];
  v18 = v6;
  v19 = v11;
  v15 = v11;
  v16 = v5;
  v20 = v5;
  v21 = v12;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AD78D50(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (*(_BYTE *)(v1 + *(int *)(result + 56)) == 1)
  {
    v10 = *(_QWORD *)(v9 - 128);
    result = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(v6 + 32) + 240))(*(_QWORD *)(v9 - 136), 1);
    if (!v10)
    {
      *(_QWORD *)(v9 - 208) = v6;
      *(_QWORD *)(v9 - 128) = 0;
      v11 = *(_QWORD *)(v2 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v4, 1, v2) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
      }
      else
      {
        v12 = MEMORY[0x23B8613CC](&unk_23B1DD478, v2);
        v13 = sub_23AF21910(v2, v12);
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v2);
        if ((v13 & 1) != 0)
        {
          v14 = *(_QWORD *)(v9 - 152);
          *(_QWORD *)(v9 - 112) = v8;
          *(_QWORD *)(v9 - 104) = v14;
          *(_QWORD *)(v9 - 96) = *(_QWORD *)(v9 - 144);
          *(_QWORD *)(v9 - 88) = v7;
          type metadata accessor for Ingestion.UnfaultDirectoryInTree();
        }
      }
      v16 = *(_QWORD *)(v9 - 152);
      v15 = *(_QWORD *)(v9 - 144);
      *(_QWORD *)(v9 - 112) = v8;
      *(_QWORD *)(v9 - 104) = v16;
      *(_QWORD *)(v9 - 96) = v15;
      *(_QWORD *)(v9 - 88) = v7;
      type metadata accessor for ItemJob();
    }
  }
  return result;
}

void sub_23AD78FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t MetatypeMetadata;

  *(_QWORD *)(v5 - 136) = a1;
  MetatypeMetadata = swift_getMetatypeMetadata();
  sub_23AFD4CB4(MetatypeMetadata, MetatypeMetadata);
  swift_allocObject();
  sub_23B1C6728();
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 96) = v1;
  *(_QWORD *)(v5 - 88) = v3;
  type metadata accessor for Ingestion.FaultDirectoryInTree();
}

void sub_23AD78FFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;

  *v4 = a1;
  v6 = sub_23AD7D55C(v3);
  v7 = *(_QWORD *)(v5 - 128);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 272))(v1, v6);
  swift_bridgeObjectRelease();
  if (v7
    || (*(_QWORD *)(v5 - 120) = v8,
        v9 = sub_23B1C67DC(),
        MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v9),
        sub_23B1C69A4(),
        swift_bridgeObjectRelease(),
        (v10 = *(_QWORD *)(v5 - 112)) == 0))
  {
LABEL_12:
    JUMPOUT(0x23AD78DC8);
  }
  if (*(_BYTE *)(v10 + 104) != 1)
  {
LABEL_8:
    swift_release();
    goto LABEL_12;
  }
  v11 = sub_23AF1ADBC();
  swift_retain();
  v12 = *(_QWORD *)(v5 - 168);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v14 = v13;
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 176) + 8))(v12, *(_QWORD *)(v5 - 160));
  v15 = v14 * 1000000000.0;
  if ((~COERCE__INT64(v14 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v15 > -9.22337204e18)
    {
      if (v15 < 9.22337204e18)
      {
        sub_23AEBEFD4(v11);
        swift_release();
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_11:
  __break(1u);
  goto LABEL_12;
}

void sub_23AD79164()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23AD791B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v15 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 448) = v15;
  *(_QWORD *)(v13 - 456) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 352) = (char *)&a9 - v17;
  *(_QWORD *)(v13 - 424) = a1;
  *(_QWORD *)(v13 - 416) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 432) = (char *)&a9 - v18;
  *(_QWORD *)(v13 - 384) = type metadata accessor for FileTreeError(255, v10, v9, v19);
  v20 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 400) = v20;
  *(_QWORD *)(v13 - 408) = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 360) = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v13 - 560) = (char *)&a9 - v23;
  v24 = sub_23B1C5E4C();
  *(_QWORD *)(v13 - 528) = v24;
  *(_QWORD *)(v13 - 536) = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v13 - 512) = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v13 - 728) = (char *)&a9 - v28;
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v13 - 704) = (char *)&a9 - v29;
  swift_getAssociatedTypeWitness();
  v30 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 440) = v30;
  *(_QWORD *)(v13 - 392) = *(_QWORD *)(v30 - 8);
  v31 = MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v13 - 464) = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v13 - 568) = (char *)&a9 - v33;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD79418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 624) = a1;
  *(_QWORD *)(v13 - 640) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 632) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v11;
  type metadata accessor for ItemReconciliation();
}

void sub_23AD7946C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v36;

  v12 = sub_23B1C6C98();
  *(_QWORD *)(v10 - 608) = v12;
  *(_QWORD *)(v10 - 616) = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v10 - 696) = (char *)&a9 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v10 - 576) = (char *)&a9 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v10 - 744) = (char *)&a9 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v10 - 664) = (char *)&a9 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v10 - 680) = (char *)&a9 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v10 - 592) = (char *)&a9 - v24;
  *(_QWORD *)(v10 - 496) = a1;
  *(_QWORD *)(v10 - 504) = *(_QWORD *)(a1 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v10 - 544) = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v10 - 600) = (char *)&a9 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v10 - 752) = (char *)&a9 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v10 - 688) = (char *)&a9 - v32;
  MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v10 - 656) = (char *)&a9 - v33;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v36 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v10 - 128) = v9;
  *(_QWORD *)(v10 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v10 - 192) = AssociatedConformanceWitness;
  *(_QWORD *)(v10 - 184) = v36;
  *(_QWORD *)(v10 - 112) = AssociatedConformanceWitness;
  *(_QWORD *)(v10 - 104) = v36;
  type metadata accessor for ThrottlingKey();
}

void sub_23AD796BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  *(_QWORD *)(v15 - 240) = a1;
  v16 = sub_23B1C6C98();
  *(_QWORD *)(v15 - 480) = v16;
  *(_QWORD *)(v15 - 488) = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v15 - 672) = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v15 - 176) = v14;
  *(_QWORD *)(v15 - 208) = *(_QWORD *)(v14 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v15 - 584) = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v15 - 552) = (char *)&a9 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v15 - 312) = (char *)&a9 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v15 - 368) = (char *)&a9 - v27;
  *(_QWORD *)(v15 - 168) = v9;
  *(_QWORD *)(v15 - 200) = *(_QWORD *)(v9 - 8);
  v28 = MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v15 - 472) = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  *(_QWORD *)(v15 - 736) = (char *)&a9 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  *(_QWORD *)(v15 - 520) = (char *)&a9 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v15 - 712) = (char *)&a9 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v15 - 720) = (char *)&a9 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)(v15 - 648) = (char *)&a9 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  *(_QWORD *)(v15 - 224) = (char *)&a9 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)(v15 - 280) = (char *)&a9 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  *(_QWORD *)(v15 - 288) = (char *)&a9 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  MEMORY[0x24BDAC7A8](v46);
  *(_QWORD *)(v15 - 304) = (char *)&a9 - v47;
  v49 = type metadata accessor for SnapshotItem(0, v13, v12, v48);
  *(_QWORD *)(v15 - 248) = v49;
  *(_QWORD *)(v15 - 264) = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  *(_QWORD *)(v15 - 296) = (char *)&a9 - v50;
  v52 = type metadata accessor for SnapshotItem(0, v11, v10, v51);
  *(_QWORD *)(v15 - 256) = v52;
  *(_QWORD *)(v15 - 216) = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  *(_QWORD *)(v15 - 376) = (char *)&a9 - v53;
  *(_QWORD *)(v15 - 328) = v11;
  *(_QWORD *)(v15 - 128) = v11;
  *(_QWORD *)(v15 - 120) = v13;
  *(_QWORD *)(v15 - 344) = v13;
  *(_QWORD *)(v15 - 320) = v10;
  *(_QWORD *)(v15 - 112) = v10;
  *(_QWORD *)(v15 - 104) = v12;
  *(_QWORD *)(v15 - 336) = v12;
  type metadata accessor for PersistenceTrigger();
}

uint64_t sub_23AD79A34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t result;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t, _QWORD);
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t TupleTypeMetadata3;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(_BYTE *, uint64_t, uint64_t);
  void (*v37)(_BYTE *, uint64_t);
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  _BYTE v58[96];

  *(_QWORD *)(v4 - 152) = a1;
  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 232) = &v58[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v4 - 272) = &v58[-v9];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v58[-v11];
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = &v58[-v14];
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = &v58[-v17];
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = &v58[-v20];
  MEMORY[0x24BDAC7A8](v19);
  v23 = &v58[-v22];
  result = sub_23AABA464();
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(v2 + qword_2542EDFB8))
    {
      *(_QWORD *)(v4 - 760) = v3;
      swift_retain();
      sub_23AD743C4(*(_QWORD *)(v4 - 160));
    }
    v25 = *(_QWORD *)(v4 - 160);
    *(_QWORD *)(v4 - 160) = v5;
    v26 = *(void (**)(_BYTE *, uint64_t, _QWORD))(v5 + 16);
    v26(v23, v25, *(_QWORD *)(v4 - 152));
    *(_QWORD *)(v4 - 760) = v23;
    v27 = swift_getEnumCaseMultiPayload() - 5;
    v28 = *(_QWORD *)(v4 - 760);
    v29 = *(_QWORD *)(v4 - 160);
    switch(v27)
    {
      case 0:
        v26(v21, *(_QWORD *)(v4 - 760), *(_QWORD *)(v4 - 152));
        v30 = *(_QWORD *)(v4 - 256);
        v31 = sub_23B1C6C98();
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        v33 = &v21[*(int *)(TupleTypeMetadata3 + 48)];
        v34 = *(_QWORD *)&v21[*(int *)(TupleTypeMetadata3 + 64)];
        v35 = *(_QWORD *)(v4 - 216);
        v36 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v35 + 48);
        if (v36(v21, 1, v30) == 1)
        {
          v37 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 8);
          v37(v33, v31);
          v38 = v21;
          goto LABEL_9;
        }
        if (v36(v33, 1, v30) != 1)
        {
          (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v21, v30);
          goto LABEL_21;
        }
        v51 = *(_QWORD *)(v4 - 376);
        v52 = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v35 + 32))(v51, v21, v30);
        if ((v34 & 2) != 0)
        {
          MEMORY[0x24BDAC7A8](v52);
          v57 = *(_QWORD **)(v4 - 144);
          *(_QWORD *)&v58[-16] = v57;
          *(_QWORD *)&v58[-8] = v51;
          sub_23AD76CA4(v57, 0, (uint64_t)sub_23AD7CD5C, (uint64_t)&v58[-32]);
        }
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v51, v30);
        break;
      case 1:
        v26(v18, *(_QWORD *)(v4 - 760), *(_QWORD *)(v4 - 152));
        v39 = *(_QWORD *)(v4 - 248);
        v31 = sub_23B1C6C98();
        v40 = swift_getTupleTypeMetadata3();
        v33 = &v18[*(int *)(v40 + 48)];
        v41 = *(_QWORD *)(v4 - 264);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v18, 1, v39) == 1)
        {
          v37 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 8);
          v37(v33, v31);
          v38 = v18;
LABEL_9:
          v37(v38, v31);
        }
        else
        {
          v53 = *(_QWORD *)&v18[*(int *)(v40 + 64)];
          v54 = *(_QWORD *)(v4 - 296);
          v55 = (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v41 + 32))(v54, v18, v39);
          if ((v53 & 2) != 0)
          {
            MEMORY[0x24BDAC7A8](v55);
            v56 = *(_QWORD **)(v4 - 144);
            *(_QWORD *)&v58[-16] = v56;
            *(_QWORD *)&v58[-8] = v54;
            sub_23AD76CA4(v56, 0, (uint64_t)sub_23AD7CD44, (uint64_t)&v58[-32]);
          }
          (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v54, v39);
LABEL_21:
          (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v33, v31);
        }
        break;
      case 2:
      case 3:
      case 4:
      case 8:
      case 9:
      case 10:
      case 11:
        return (*(uint64_t (**)(uint64_t, _QWORD))(v29 + 8))(v28, *(_QWORD *)(v4 - 152));
      case 5:
        v26(v12, *(_QWORD *)(v4 - 760), *(_QWORD *)(v4 - 152));
        v42 = *(_QWORD *)(v4 - 176);
        *(_QWORD *)(v4 - 128) = *(_QWORD *)(v4 - 168);
        *(_QWORD *)(v4 - 120) = v42;
        v43 = *(_QWORD *)(v4 - 184);
        *(_QWORD *)(v4 - 112) = *(_QWORD *)(v4 - 192);
        *(_QWORD *)(v4 - 104) = v43;
        type metadata accessor for ReconciliationID();
      case 6:
        v44 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v26)(*(_QWORD *)(v4 - 272), *(_QWORD *)(v4 - 760), *(_QWORD *)(v4 - 152));
        MEMORY[0x24BDAC7A8](v44);
        strcpy(&v58[-32], " otherID from to ");
        v45 = *(_QWORD *)(v4 - 176);
        *(_QWORD *)(v4 - 128) = *(_QWORD *)(v4 - 168);
        *(_QWORD *)(v4 - 120) = v45;
        v46 = *(_QWORD *)(v4 - 184);
        *(_QWORD *)(v4 - 112) = *(_QWORD *)(v4 - 192);
        *(_QWORD *)(v4 - 104) = v46;
        type metadata accessor for ReconciliationID();
      case 7:
        *(_QWORD *)(v4 - 216) = v1;
        v26(*(_BYTE **)(v4 - 232), v28, *(_QWORD *)(v4 - 152));
        __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
        swift_getTupleTypeMetadata2();
        v47 = *(_QWORD *)(v4 - 176);
        *(_QWORD *)(v4 - 128) = *(_QWORD *)(v4 - 168);
        *(_QWORD *)(v4 - 120) = v47;
        v48 = *(_QWORD *)(v4 - 184);
        *(_QWORD *)(v4 - 112) = *(_QWORD *)(v4 - 192);
        *(_QWORD *)(v4 - 104) = v48;
        type metadata accessor for ReconciliationID();
      case 12:
        v26(v15, *(_QWORD *)(v4 - 760), *(_QWORD *)(v4 - 152));
        v49 = *(_QWORD *)(v4 - 176);
        *(_QWORD *)(v4 - 128) = *(_QWORD *)(v4 - 168);
        *(_QWORD *)(v4 - 120) = v49;
        v50 = *(_QWORD *)(v4 - 184);
        *(_QWORD *)(v4 - 112) = *(_QWORD *)(v4 - 192);
        *(_QWORD *)(v4 - 104) = v50;
        type metadata accessor for ReconciliationID();
      default:
        v28 = *(_QWORD *)(v4 - 760);
        v29 = *(_QWORD *)(v4 - 160);
        return (*(uint64_t (**)(uint64_t, _QWORD))(v29 + 8))(v28, *(_QWORD *)(v4 - 152));
    }
    return (*(uint64_t (**)(uint64_t, _QWORD))(v29 + 8))(v28, *(_QWORD *)(v4 - 152));
  }
  return result;
}

void sub_23AD7AE24()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);

  v3 = *(_QWORD *)(v2 - 200);
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5 = v0;
  v6 = *(_QWORD *)(v2 - 168);
  v4(*(_QWORD *)(v2 - 224), v6);
  v7 = *(_QWORD *)(v2 - 520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v5, v6);
  *(_QWORD *)(v2 - 72) = v1;
  v8 = v1;
  if (swift_dynamicCast())
  {
    v9 = v1;
    v10 = *(_QWORD *)(v2 - 128);
    v11 = *(_QWORD *)(v2 - 120);
    v12 = *(unsigned __int8 *)(v2 - 112);
    if (v12 <= 0xFB)
    {

      sub_23AB7C0B0(v10, v11, v12);
      v4(v7, *(_QWORD *)(v2 - 168));
LABEL_11:
      JUMPOUT(0x23AD7A3FCLL);
    }
    sub_23AB7C0B0(*(_QWORD *)(v2 - 128), *(_QWORD *)(v2 - 120), *(_BYTE *)(v2 - 112));
    v1 = v9;
  }
  *(_QWORD *)(v2 - 128) = v1;
  v13 = v1;
  v14 = *(_QWORD *)(v2 - 560);
  v15 = *(_QWORD *)(v2 - 384);
  v16 = swift_dynamicCast();
  v17 = *(_QWORD *)(v15 - 8);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if (v16)
  {
    v18(v14, 0, 1, v15);
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      v4(v7, *(_QWORD *)(v2 - 168));

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v15);
      goto LABEL_11;
    }
    *(_QWORD *)(v2 - 408) = v17;
    *(_QWORD *)(v2 - 400) = v15;
  }
  else
  {
    v18(v14, 1, 1, v15);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 408) + 8))(v14, *(_QWORD *)(v2 - 400));
  sub_23AB00114();
}

void sub_23AD7AF40()
{
  void *v0;
  char v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD);
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD, uint64_t);
  uint64_t v12;

  *(_QWORD *)(v4 - 72) = v0;
  v5 = v0;
  if (swift_dynamicCast())
  {
    *(_QWORD *)(v4 - 248) = v0;
    v6 = *(_QWORD *)(v4 - 128);
    v7 = *(_QWORD *)(v4 - 120);
    v8 = *(unsigned __int8 *)(v4 - 112);
    if (v8 <= 0xFB)
    {

      sub_23AB7C0B0(v6, v7, v8);
      v11 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 200) + 8);
      v12 = *(_QWORD *)(v4 - 168);
      v11(*(_QWORD *)(v4 - 224), v12);
      v11(*(_QWORD *)(v4 - 232), v12);
      JUMPOUT(0x23AD7A3FCLL);
    }
    sub_23AB7C0B0(*(_QWORD *)(v4 - 128), *(_QWORD *)(v4 - 120), *(_BYTE *)(v4 - 112));
    v0 = *(void **)(v4 - 248);
  }
  v9 = *(int *)(v2 + 48);
  v10 = *(_QWORD *)(v4 - 216);
  v3(v10, *(_QWORD *)(v4 - 224), *(_QWORD *)(v4 - 168));
  swift_storeEnumTagMultiPayload();
  *(_BYTE *)(v10 + v9) = v1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 - 240) - 8) + 56))(v10, 0, 1);
  sub_23AD67D18((uint64_t)v0, v10, *(_QWORD *)(v4 - 144));
}

void sub_23AD7AFFC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  void (*v8)(_QWORD, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD, _QWORD);
  _QWORD *v14;
  uint64_t v15;

  if (v2)
  {

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 488) + 8))(v4, *(_QWORD *)(v7 - 480));
    v8 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v7 - 200) + 8);
    v8(*(_QWORD *)(v7 - 224), v1);
    v8(*(_QWORD *)(v7 - 232), v1);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 160) + 8))(*(_QWORD *)(v7 - 760), *(_QWORD *)(v7 - 152));
    JUMPOUT(0x23AD7AB0CLL);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 488) + 8))(v4, *(_QWORD *)(v7 - 480));
  if ((a1 & 1) != 0)
  {
    if (v6)
      sub_23AB00114();
    if (v5)
    {
      v11 = *(_QWORD *)(v7 - 344);
      *(_QWORD *)(v7 - 128) = *(_QWORD *)(v7 - 328);
      *(_QWORD *)(v7 - 120) = v11;
      v12 = *(_QWORD *)(v7 - 336);
      *(_QWORD *)(v7 - 112) = *(_QWORD *)(v7 - 320);
      *(_QWORD *)(v7 - 104) = v12;
      type metadata accessor for ConcreteJobResult();
    }
    v14 = *(_QWORD **)(v7 - 144);
    v15 = *(_QWORD *)(v7 - 224);
    *(_QWORD *)(v7 - 112) = v14;
    *(_QWORD *)(v7 - 104) = v15;
    sub_23AD76CA4(v14, 0, (uint64_t)sub_23AD7CCF0, v7 - 128);
  }
  v10 = *(_QWORD *)(v7 - 568);
  (*(void (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(v7 - 144) + 32) + 280))(*(_QWORD *)(v7 - 224));
  *(_QWORD *)(v7 - 136) = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 - 200) + 48))(v10, 1, *(_QWORD *)(v7 - 168)) == 1)
  {
    v13 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 200) + 8);
    v13(*(_QWORD *)(v7 - 224), *(_QWORD *)(v7 - 168));

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 392) + 8))(*(_QWORD *)(v7 - 568), *(_QWORD *)(v7 - 440));
    v13(*(_QWORD *)(v7 - 232), *(_QWORD *)(v7 - 168));
    JUMPOUT(0x23AD7A3FCLL);
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v7 - 200) + 32))(*(_QWORD *)(v7 - 648), *(_QWORD *)(v7 - 568), *(_QWORD *)(v7 - 168));
  sub_23AB00114();
}

void sub_23AD7B0FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 200) + 8))(*(_QWORD *)(v2 - 224), *(_QWORD *)(v2 - 168));

    JUMPOUT(0x23AD7B03CLL);
  }
  if ((*(unsigned int (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 504) + 48))(*(_QWORD *)(v2 - 592), 1, *(_QWORD *)(v2 - 496)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 616) + 8))(*(_QWORD *)(v2 - 592), *(_QWORD *)(v2 - 608));
    JUMPOUT(0x23AD7B35CLL);
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 - 504) + 32))(*(_QWORD *)(v2 - 656), *(_QWORD *)(v2 - 592), *(_QWORD *)(v2 - 496));
  v3 = *(_QWORD *)(v2 - 344);
  *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 328);
  *(_QWORD *)(v2 - 120) = v3;
  v4 = *(_QWORD *)(v2 - 336);
  *(_QWORD *)(v2 - 112) = *(_QWORD *)(v2 - 320);
  *(_QWORD *)(v2 - 104) = v4;
  type metadata accessor for ConcreteJobResult();
}

void sub_23AD7B1D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23AD78C18(v1, v0, *(_QWORD **)(v2 - 144));
}

void sub_23AD7B1E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v5 - 416);
  if (v1)
  {

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 504) + 8))(v2, *(_QWORD *)(v5 - 496));
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 200) + 8))(v4, *(_QWORD *)(v5 - 168));
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v3);
    JUMPOUT(0x23AD7A518);
  }
  *(_QWORD *)(v5 - 136) = 0;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 504) + 8))(v2, *(_QWORD *)(v5 - 496));
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 200) + 8))(v4, *(_QWORD *)(v5 - 168));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v3);
  JUMPOUT(0x23AD7A568);
}

void sub_23AD7B394()
{
  sub_23AEB6FD8();
}

void sub_23AD7B39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 128) = v1;
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 112) = v0;
  *(_QWORD *)(v4 - 104) = v2;
  type metadata accessor for JobResult();
}

void sub_23AD7B3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, _QWORD);
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  _WORD *v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for ReconciliationSideMutation(255, v6, v5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = *(_QWORD *)(v8 - 632);
  v11 = (_WORD *)(v10 + *(int *)(TupleTypeMetadata2 + 48));
  v7(v10, *(_QWORD *)(v8 - 224), *(_QWORD *)(v8 - 168));
  swift_storeEnumTagMultiPayload();
  *v11 = 262;
  swift_storeEnumTagMultiPayload();
  v12 = *(_QWORD *)(v8 - 624);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4, v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 640) + 8))(v10, v12);
  v13 = sub_23AF3EA84();
  sub_23AEBF200(v4, v13);
}

void sub_23AD7B484()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(_QWORD, uint64_t);
  uint64_t v4;

  if (v0)
  {
    v3 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 200) + 8);
    v4 = *(_QWORD *)(v2 - 168);
    v3(*(_QWORD *)(v2 - 224), v4);
    swift_release();

    v3(*(_QWORD *)(v2 - 232), v4);
    JUMPOUT(0x23AD7B048);
  }
  swift_release();
  JUMPOUT(0x23AD7B80CLL);
}

void sub_23AD7B514()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, _QWORD, _QWORD);
  void (*v6)(uint64_t, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (v0)
  {
    v6(v4, *(_QWORD *)(v7 - 168));

    JUMPOUT(0x23AD7B530);
  }
  *(_QWORD *)(v7 - 136) = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 - 504) + 48))(v2, 1, *(_QWORD *)(v7 - 496)) == 1)
  {
    v6(*(_QWORD *)(v7 - 520), *(_QWORD *)(v7 - 168));

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 616) + 8))(v2, *(_QWORD *)(v7 - 608));
    JUMPOUT(0x23AD7A3FCLL);
  }
  v8 = *(_QWORD *)(v7 - 600);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 - 504) + 32))(v8, v2, *(_QWORD *)(v7 - 496));
  if (*(_BYTE *)(v8
                + *(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v7 - 328), *(_QWORD *)(v7 - 320), v9)+ 56)) == 3)
  {
    v10 = *(int *)(v3 + 48);
    v11 = *(_QWORD *)(v7 - 672);
    v5(v11, *(_QWORD *)(v7 - 520), *(_QWORD *)(v7 - 168));
    swift_storeEnumTagMultiPayload();
    *(_BYTE *)(v11 + v10) = 6;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 - 240) - 8) + 56))(v11, 0, 1);
    sub_23AD67D18((uint64_t)v1, v11, *(_QWORD *)(v7 - 144));
  }

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v7 - 504) + 8))(*(_QWORD *)(v7 - 600), *(_QWORD *)(v7 - 496));
  JUMPOUT(0x23AD7B34CLL);
}

void sub_23AD7B6D4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;

  *(_QWORD *)(v6 - 136) = v1;
  if (v1)
  {

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 488) + 8))(*(_QWORD *)(v6 - 672), *(_QWORD *)(v6 - 480));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 504) + 8))(*(_QWORD *)(v6 - 600), *(_QWORD *)(v6 - 496));
    v5(*(_QWORD *)(v6 - 520), *(_QWORD *)(v6 - 168));
    JUMPOUT(0x23AD7AB00);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 488) + 8))(*(_QWORD *)(v6 - 672), *(_QWORD *)(v6 - 480));
  if ((a1 & 1) != 0)
  {
    v8 = *(_QWORD *)(v6 - 344);
    *(_QWORD *)(v6 - 128) = *(_QWORD *)(v6 - 328);
    *(_QWORD *)(v6 - 120) = v8;
    v9 = *(_QWORD *)(v6 - 336);
    *(_QWORD *)(v6 - 112) = *(_QWORD *)(v6 - 320);
    *(_QWORD *)(v6 - 104) = v9;
    type metadata accessor for ConcreteJobResult();
  }
  if ((*(_BYTE *)(*(_QWORD *)(v6 - 600) + *(int *)(v2 + 60)) & 1) == 0)
  {
    v10 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v4(*(_QWORD *)(v6 - 736), *(_QWORD *)(v6 - 520), *(_QWORD *)(v6 - 168));
    v11 = sub_23B1C5E40();
    v12 = sub_23B1C6AA0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (_DWORD *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      *(_QWORD *)(v6 - 176) = v14;
      *(_QWORD *)(v6 - 128) = v14;
      *(_QWORD *)(v6 - 184) = v13;
      *v13 = 136446210;
      *(_QWORD *)(v6 - 200) = v13 + 1;
      v15 = *(_QWORD *)(v6 - 280);
      v16 = *(_QWORD *)(v6 - 736);
      v17 = *(_QWORD *)(v6 - 168);
      v4(v15, v16, v17);
      v5(v16, v17);
      v18 = sub_23B1C7304();
      v20 = v19;
      v5(v15, v17);
      *(_QWORD *)(v6 - 72) = sub_23AABEC68(v18, v20, (uint64_t *)(v6 - 128));
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v21 = *(uint8_t **)(v6 - 184);
      _os_log_impl(&dword_23AA66000, v11, v12, "👽  enumerating %{public}s is throttled, unfaulting folder to allow user access", v21, 0xCu);
      v22 = *(_QWORD *)(v6 - 176);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v22, -1, -1);
      MEMORY[0x23B8614BC](v21, -1, -1);
    }
    else
    {
      v5(*(_QWORD *)(v6 - 736), *(_QWORD *)(v6 - 168));
    }

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 536) + 8))(*(_QWORD *)(v6 - 728), *(_QWORD *)(v6 - 528));
    sub_23AD78C18(*(_QWORD *)(v6 - 520), *(_QWORD *)(v6 - 600), *(_QWORD **)(v6 - 144));
  }

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 504) + 8))(*(_QWORD *)(v6 - 600), *(_QWORD *)(v6 - 496));
  JUMPOUT(0x23AD7B34CLL);
}

void sub_23AD7B7C8()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, _QWORD, uint64_t);
  uint64_t v3;
  void (*v4)(_QWORD, uint64_t);
  uint64_t v5;
  void (*v6)(_QWORD, uint64_t);
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  uint64_t v28;
  void (*v29)(_QWORD, uint64_t);
  uint64_t v30;
  void (*v31)(_QWORD, uint64_t);
  uint64_t v32;

  *(_QWORD *)(v3 - 136) = v0;
  if (v0)
  {

    v4 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 200) + 8);
    v5 = *(_QWORD *)(v3 - 168);
    v4(*(_QWORD *)(v3 - 648), v5);
    v4(*(_QWORD *)(v3 - 224), v5);
    v4(*(_QWORD *)(v3 - 232), v5);
    JUMPOUT(0x23AD7B864);
  }
  if ((*(unsigned int (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v3 - 504) + 48))(*(_QWORD *)(v3 - 664), 1, *(_QWORD *)(v3 - 496)) == 1)
  {

    v6 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 200) + 8);
    v7 = *(_QWORD *)(v3 - 168);
    v6(*(_QWORD *)(v3 - 648), v7);
    v6(*(_QWORD *)(v3 - 224), v7);
    JUMPOUT(0x23AD7B604);
  }
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 504) + 32);
  v9 = *(_QWORD *)(v3 - 688);
  v10 = *(_QWORD *)(v3 - 664);
  v11 = *(_QWORD *)(v3 - 496);
  *(_QWORD *)(v3 - 176) = v8;
  v8(v9, v10, v11);
  if (*(_BYTE *)(v9
                + *(int *)(type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v3 - 328), *(_QWORD *)(v3 - 320), v12)+ 56)) == 3)
  {
    v13 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v14 = *(_QWORD *)(v3 - 168);
    v2(*(_QWORD *)(v3 - 720), *(_QWORD *)(v3 - 224), v14);
    v2(*(_QWORD *)(v3 - 712), *(_QWORD *)(v3 - 648), v14);
    v15 = sub_23B1C5E40();
    v16 = sub_23B1C6AA0();
    *(_QWORD *)(v3 - 184) = v15;
    *(_DWORD *)(v3 - 208) = v16;
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      *(_QWORD *)(v3 - 216) = v18;
      *(_QWORD *)(v3 - 128) = v18;
      *(_DWORD *)v17 = 136446466;
      *(_QWORD *)(v3 - 192) = *(_QWORD *)(*(_QWORD *)(v3 - 192) + 8);
      v19 = *(_QWORD *)(v3 - 720);
      v20 = *(_QWORD *)(v3 - 168);
      v21 = sub_23B1C7304();
      *(_QWORD *)(v3 - 72) = sub_23AABEC68(v21, v22, (uint64_t *)(v3 - 128));
      *(_QWORD *)(v3 - 240) = v3 - 64;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 200) + 8);
      v23(v19, v20);
      *(_WORD *)(v17 + 12) = 2082;
      *(_QWORD *)(v3 - 200) = v17 + 14;
      v24 = *(_QWORD *)(v3 - 712);
      v25 = sub_23B1C7304();
      *(_QWORD *)(v3 - 72) = sub_23AABEC68(v25, v26, (uint64_t *)(v3 - 128));
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v23(v24, v20);
      v27 = *(NSObject **)(v3 - 184);
      _os_log_impl(&dword_23AA66000, v27, (os_log_type_t)*(_DWORD *)(v3 - 208), "👽  import of %{public}s within %{public}s is throttled, unfaulting folder to allow user access", (uint8_t *)v17, 0x16u);
      v28 = *(_QWORD *)(v3 - 216);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v28, -1, -1);
      MEMORY[0x23B8614BC](v17, -1, -1);

    }
    else
    {
      v31 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 200) + 8);
      v32 = *(_QWORD *)(v3 - 168);
      v31(*(_QWORD *)(v3 - 720), v32);
      v31(*(_QWORD *)(v3 - 712), v32);

    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 536) + 8))(*(_QWORD *)(v3 - 704), *(_QWORD *)(v3 - 528));
    sub_23AD78C18(*(_QWORD *)(v3 - 648), *(_QWORD *)(v3 - 688), *(_QWORD **)(v3 - 144));
  }

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 504) + 8))(*(_QWORD *)(v3 - 688), *(_QWORD *)(v3 - 496));
  v29 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 200) + 8);
  v30 = *(_QWORD *)(v3 - 168);
  v29(*(_QWORD *)(v3 - 648), v30);
  v29(*(_QWORD *)(v3 - 224), v30);
  JUMPOUT(0x23AD7B60CLL);
}

void sub_23AD7B830()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = v0;
  if (v0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 200) + 8))(*(_QWORD *)(v2 - 224), *(_QWORD *)(v2 - 168));

    JUMPOUT(0x23AD7B858);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 200) + 8))(*(_QWORD *)(v2 - 224), *(_QWORD *)(v2 - 168));

  JUMPOUT(0x23AD7B158);
}

void sub_23AD7B8F8()
{
  sub_23AEB6FD8();
}

void sub_23AD7B900(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 184) = a1;
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = v1;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v4;
  type metadata accessor for JobResult();
}

void sub_23AD7B91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, _QWORD);
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v8 - 136) = a1;
  type metadata accessor for ReconciliationSideMutation(255, v6, v5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = *(_QWORD *)(v8 - 632);
  v11 = v10 + *(int *)(TupleTypeMetadata2 + 48);
  v7(v10, *(_QWORD *)(v8 - 224), *(_QWORD *)(v8 - 168));
  swift_storeEnumTagMultiPayload();
  v12 = (_OWORD *)(*(_QWORD *)(v8 - 656) + *(int *)(*(_QWORD *)(v8 - 496) + 64));
  *(_QWORD *)v11 = 0x80000000000;
  *(_OWORD *)(v11 + 8) = *v12;
  swift_storeEnumTagMultiPayload();
  v13 = *(_QWORD *)(v8 - 624);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(v4, v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 640) + 8))(v10, v13);
  v14 = *(_QWORD *)(v8 - 504);
  v15 = *(_QWORD *)(v8 - 680);
  v16 = *(_QWORD *)(v8 - 496);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 16))(v15, *(_QWORD *)(v8 - 656), v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v15, 0, 1, v16);
  sub_23AD683E4();
}

void sub_23AD7BA64()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void (*v4)(_QWORD, uint64_t);
  uint64_t v5;
  uint64_t v6;

  if (v1)
  {
    swift_release();

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 616) + 8))(*(_QWORD *)(v3 - 680), *(_QWORD *)(v3 - 608));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 504) + 8))(*(_QWORD *)(v3 - 656), *(_QWORD *)(v3 - 496));
    v4 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v3 - 200) + 8);
    v5 = *(_QWORD *)(v3 - 168);
    v4(*(_QWORD *)(v3 - 224), v5);
    v4(*(_QWORD *)(v3 - 232), v5);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 160) + 8))(*(_QWORD *)(v3 - 760), *(_QWORD *)(v3 - 152));
    JUMPOUT(0x23AD7AB0CLL);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 616) + 8))(*(_QWORD *)(v3 - 680), *(_QWORD *)(v3 - 608));
  v6 = sub_23AF3EA84();
  sub_23AEBF200(v0, v6);
}

void sub_23AD7BBD0()
{
  sub_23AEB6FD8();
}

void sub_23AD7BBD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 192) = a1;
  *(_QWORD *)(v5 - 128) = v3;
  *(_QWORD *)(v5 - 120) = v2;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  type metadata accessor for JobResult();
}

void sub_23AD7BBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, _QWORD, _QWORD);
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v7 - 184) = a1;
  type metadata accessor for ReconciliationSideMutation(255, v4, v5, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = *(_QWORD *)(v7 - 632);
  v10 = (_BYTE *)(v9 + *(int *)(TupleTypeMetadata2 + 48));
  v6(v9, *(_QWORD *)(v7 - 520), *(_QWORD *)(v7 - 168));
  swift_storeEnumTagMultiPayload();
  *v10 = 0;
  swift_storeEnumTagMultiPayload();
  v11 = *(_QWORD *)(v7 - 624);
  swift_storeEnumTagMultiPayload();
  sub_23AEB700C(*(_QWORD *)(v7 - 192), v9);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 640) + 8);
  *(_QWORD *)(v7 - 200) = v12;
  v12(v9, v11);
  v13 = *(_QWORD *)(v7 - 504);
  v14 = *(_QWORD *)(v7 - 696);
  v15 = *(_QWORD *)(v7 - 496);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 16))(v14, *(_QWORD *)(v7 - 600), v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v14, 0, 1, v15);
  sub_23AD683E4();
}

void sub_23AD7BD28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _OWORD *v3;
  void *v4;
  void (*v5)(uint64_t, _QWORD, _QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v6 - 136) = v0;
  if (v0)
  {
    swift_release();

    JUMPOUT(0x23AD7B6FCLL);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 616) + 8))(*(_QWORD *)(v6 - 696), *(_QWORD *)(v6 - 608));
  if ((*(_BYTE *)(*(_QWORD *)(v6 - 600) + *(int *)(v1 + 60)) & 1) == 0)
  {
    type metadata accessor for ReconciliationSideMutation(255, *(_QWORD *)(v6 - 328), *(_QWORD *)(v6 - 320), v7);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    v9 = *(_QWORD *)(v6 - 632);
    v10 = v9 + *(int *)(TupleTypeMetadata2 + 48);
    v5(v9, *(_QWORD *)(v6 - 520), *(_QWORD *)(v6 - 168));
    swift_storeEnumTagMultiPayload();
    *(_WORD *)v10 = 3;
    *(_OWORD *)(v10 + 8) = *v3;
    swift_storeEnumTagMultiPayload();
    v11 = *(_QWORD *)(v6 - 624);
    swift_storeEnumTagMultiPayload();
    sub_23AEB700C(v2, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 - 200))(v9, v11);
    v12 = *(_QWORD *)(v6 - 344);
    *(_QWORD *)(v6 - 128) = *(_QWORD *)(v6 - 328);
    *(_QWORD *)(v6 - 120) = v12;
    v13 = *(_QWORD *)(v6 - 336);
    *(_QWORD *)(v6 - 112) = *(_QWORD *)(v6 - 320);
    *(_QWORD *)(v6 - 104) = v13;
    type metadata accessor for Materialization.MaterializeItem();
  }
  v14 = *(_QWORD *)(v6 - 344);
  *(_QWORD *)(v6 - 128) = *(_QWORD *)(v6 - 328);
  *(_QWORD *)(v6 - 120) = v14;
  v15 = *(_QWORD *)(v6 - 336);
  *(_QWORD *)(v6 - 112) = *(_QWORD *)(v6 - 320);
  *(_QWORD *)(v6 - 104) = v15;
  type metadata accessor for Ingestion.FetchChildrenMetadata();
}

void sub_23AD7BD94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  if (v0)
  {
    swift_release();

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 504) + 8))(*(_QWORD *)(v2 - 656), *(_QWORD *)(v2 - 496));
    JUMPOUT(0x23AD7B034);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 504) + 8))(*(_QWORD *)(v2 - 656), *(_QWORD *)(v2 - 496));
  swift_release();
  JUMPOUT(0x23AD7B35CLL);
}

void sub_23AD7C368()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = sub_23B134BC0(*(_QWORD *)(v2 - 520), *v1, v1[1], 1);
  sub_23AE181A4(v0, v3);
  swift_release();
  JUMPOUT(0x23AD7C39CLL);
}

void sub_23AD7C3D0()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23B126EE8(*(_QWORD *)(v1 - 520), *v0, v0[1], 0x400000);
}

void sub_23AD7C3E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_23AE181A4(v1, a1);
  swift_release();
  v2 = sub_23AF3EA84();
  sub_23AEBF200(v1, v2);
}

void sub_23AD7C41C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = v0;
  if (v0)
  {
    swift_release();

    JUMPOUT(0x23AD7B704);
  }
  swift_release();
  JUMPOUT(0x23AD7C600);
}

void sub_23AD7C49C()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, uint64_t);
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 - 136) = v0;
  if (v0)
  {

    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 504) + 8))(*(_QWORD *)(v4 - 688), *(_QWORD *)(v4 - 496));
    v5 = *(_QWORD *)(v4 - 168);
    v2(*(_QWORD *)(v4 - 648), v5);
    v2(*(_QWORD *)(v4 - 224), v5);
    v2(*(_QWORD *)(v4 - 232), v5);
    JUMPOUT(0x23AD7AB00);
  }
  if (v3)
    sub_23AB00114();

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 504) + 8))(*(_QWORD *)(v4 - 688), *(_QWORD *)(v4 - 496));
  JUMPOUT(0x23AD7C1E4);
}

void sub_23AD7C518()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, uint64_t);
  unsigned int (*v3)(_QWORD, uint64_t, _QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 - 136) = v0;
  if (!v0)
  {
    if (v3(*(_QWORD *)(v4 - 744), 1, *(_QWORD *)(v4 - 496)) == 1)
    {

      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v4 - 504) + 8))(*(_QWORD *)(v4 - 688), *(_QWORD *)(v4 - 496));
      v5 = *(_QWORD *)(v4 - 168);
      v2(*(_QWORD *)(v4 - 648), v5);
      v2(*(_QWORD *)(v4 - 224), v5);
      JUMPOUT(0x23AD7BB68);
    }
    v6 = *(_QWORD *)(v4 - 752);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v4 - 176))(v6, *(_QWORD *)(v4 - 744), *(_QWORD *)(v4 - 496));
    sub_23AD78C18(*(_QWORD *)(v4 - 224), v6, *(_QWORD **)(v4 - 144));
  }
  JUMPOUT(0x23AD7C4A4);
}

void sub_23AD7C5E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = v0;
  if (v0)
    JUMPOUT(0x23AD7C5F0);

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 504) + 8))(*(_QWORD *)(v2 - 600), *(_QWORD *)(v2 - 496));
  JUMPOUT(0x23AD7B34CLL);
}

void sub_23AD7C694()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(_QWORD, uint64_t);
  uint64_t v4;
  void (*v5)(_QWORD, uint64_t);
  uint64_t v6;

  *(_QWORD *)(v2 - 136) = v0;
  if (v0)
  {

    v3 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 504) + 8);
    v4 = *(_QWORD *)(v2 - 496);
    v3(*(_QWORD *)(v2 - 752), v4);
    v3(*(_QWORD *)(v2 - 688), v4);
    JUMPOUT(0x23AD7C4CCLL);
  }

  v5 = *(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 504) + 8);
  v6 = *(_QWORD *)(v2 - 496);
  v5(*(_QWORD *)(v2 - 752), v6);
  v5(*(_QWORD *)(v2 - 688), v6);
  JUMPOUT(0x23AD7C1E4);
}

void sub_23AD7C864()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23AD7C8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v2);
  type metadata accessor for SnapshotItem(0, v0, v1, v3);
  sub_23AB003A0();
}

void sub_23AD7C920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!v1)
  {
    *(_QWORD *)(v9 - 120) = 0;
    *(_QWORD *)(v9 - 72) = v8;
    v10 = *(_QWORD *)(v9 - 128);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v6, 1, v5) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
      *(_QWORD *)(v9 - 112) = v2;
      *(_QWORD *)(v9 - 104) = v0;
      v12 = *(_QWORD *)(v9 - 72);
      *(_QWORD *)(v9 - 96) = v7;
      *(_QWORD *)(v9 - 88) = v12;
      type metadata accessor for ItemReconciliation();
    }
    sub_23B0C62A4(v5, v11, v10);
  }
}

void sub_23AD7CA0C()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23AD7CA64()
{
  uint64_t v0;

  v0 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v0);
  sub_23AB003A0();
}

void sub_23AD7CAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (!v1)
  {
    v9 = v6;
    *(_QWORD *)(v8 - 72) = v5;
    *(_QWORD *)(v8 - 120) = v2;
    v11 = *(_QWORD *)(v8 - 136);
    v10 = *(_QWORD *)(v8 - 128);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v4, 1, v3) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v7);
      *(_QWORD *)(v8 - 112) = v0;
      *(_QWORD *)(v8 - 104) = v11;
      v13 = *(_QWORD *)(v8 - 120);
      *(_QWORD *)(v8 - 96) = *(_QWORD *)(v8 - 72);
      *(_QWORD *)(v8 - 88) = v13;
      type metadata accessor for ItemReconciliation();
    }
    sub_23B0C62A4(v3, v12, v10);
  }
}

unint64_t sub_23AD7CBAC(unint64_t result)
{
  if (result >= 6)
    return 6;
  return result;
}

void type metadata accessor for DiskImport.MonitoredFolders.CodingKeys()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for DiskImport.ImportingFolder()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD7CBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  id v9;
  id v10;
  uint64_t v11;

  v9 = objc_allocWithZone(MEMORY[0x24BDC8298]);
  swift_retain();
  v10 = objc_msgSend(v9, sel_init);
  v4[12] = a1;
  v4[13] = v10;
  v4[14] = a2;
  v4[15] = a3;
  v4[16] = a4;
  v4[17] = 0;
  swift_retain();
  swift_release();
  v11 = swift_retain();
  return sub_23ADB0098(v11, 0xD000000000000019, 0x800000023B201AB0);
}

void sub_23AD7CC78()
{
  type metadata accessor for DiskImport.Monitor();
}

uint64_t sub_23AD7CCB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_allocObject();
  return sub_23AD7CBD4(v3, v2, v1, v0);
}

uint64_t sub_23AD7CCF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AD78A64(*(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_23AD7CD08()
{
  sub_23AB00114();
}

void sub_23AD7CD2C()
{
  sub_23AD7CA0C();
}

void sub_23AD7CD44()
{
  sub_23AD7C864();
}

void sub_23AD7CD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for SnapshotItem(0, *(_QWORD *)(**(_QWORD **)(v4 + 16) + 568), *(_QWORD *)(**(_QWORD **)(v4 + 16) + 584), a4);
  sub_23AB00114();
}

void sub_23AD7CDB4()
{
  sub_23AD73888();
}

uint64_t sub_23AD7CDC4(char a1)
{
  return a1 & 1;
}

uint64_t sub_23AD7CDD0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23AD7CDF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD7CE18()
{
  return sub_23AD71F64();
}

uint64_t sub_23AD7CE28()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD7CE64(void *a1)
{
  uint64_t *v1;

  return sub_23AD6AFD8(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_23AD7CE74()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD7CE98()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD7CED4()
{
  uint64_t v0;

  return sub_23AD6B0E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 40));
}

uint64_t sub_23AD7CEF4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

void sub_23AD7CF20()
{
  sub_23AD69550();
}

uint64_t sub_23AD7CF28(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t inited;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  double v21;
  double v22;
  uint64_t result;
  double v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v28 = a1;
  v29 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)swift_allocObject();
  v26[1] = a4;
  v13[2] = a4;
  v13[3] = a5;
  v13[4] = a6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
  inited = swift_initStackObject();
  v15 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 24) = v15;
  *(_QWORD *)(inited + 32) = v15;
  *(_QWORD *)(inited + 40) = v15;
  *(_QWORD *)(inited + 48) = 0;
  v26[0] = a5;
  swift_retain();
  v16 = a6;
  swift_beginAccess();
  v17 = *(_QWORD **)(inited + 32);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v17 = sub_23AF98DE8(0, v17[2] + 1, 1, v17);
  v19 = v17[2];
  v18 = v17[3];
  if (v19 >= v18 >> 1)
    v17 = sub_23AF98DE8((_QWORD *)(v18 > 1), v19 + 1, 1, v17);
  v17[2] = v19 + 1;
  v20 = &v17[15 * v19];
  v20[4] = v28;
  v20[5] = a2;
  v20[6] = 5;
  *(_OWORD *)(v20 + 7) = 0u;
  *(_OWORD *)(v20 + 9) = 0u;
  *(_OWORD *)(v20 + 11) = 0u;
  *(_OWORD *)(v20 + 13) = 0u;
  *(_OWORD *)(v20 + 15) = 0u;
  v20[17] = 0;
  *((_DWORD *)v20 + 36) = 151650304;
  *(_QWORD *)(inited + 32) = v17;
  swift_endAccess();
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v22 = v21;
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v29);
  v24 = v22 * 1000000000.0;
  if ((~COERCE__INT64(v22 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v24 < 9.22337204e18)
  {
    v25 = v27;
    sub_23ADF6900((_QWORD *)inited, (uint64_t)v24);
    (*(void (**)(void (*)(void *), _QWORD *))(*(_QWORD *)v25 + 2344))(sub_23AD7D240, v13);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23AD7D214()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_23AD7D240(void *a1)
{
  uint64_t v1;

  sub_23AC9820C(a1, *(void (**)(void *))(v1 + 16), *(_QWORD *)(v1 + 24), *(char **)(v1 + 32));
}

uint64_t _s9libfssync16DiskImportStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23AD7D29C + 4 * byte_23B1D78BA[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23AD7D2D0 + 4 * byte_23B1D78B5[v4]))();
}

uint64_t sub_23AD7D2D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD7D2D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD7D2E0);
  return result;
}

uint64_t sub_23AD7D2EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD7D2F4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23AD7D2F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD7D300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiskImportStatus()
{
  return &type metadata for DiskImportStatus;
}

uint64_t sub_23AD7D31C()
{
  return sub_23AAB5A28(&qword_2569E5400, &qword_2569E5408, MEMORY[0x24BEE12E0]);
}

unint64_t sub_23AD7D34C()
{
  unint64_t result;

  result = qword_2569E5410[0];
  if (!qword_2569E5410[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D7CB8, &type metadata for DiskImportStatus);
    atomic_store(result, qword_2569E5410);
  }
  return result;
}

void sub_23AD7D390()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD7D3A0()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD7D3B0()
{
  JUMPOUT(0x23B8613CCLL);
}

uint64_t sub_23AD7D3C0()
{
  return 6;
}

void type metadata accessor for DiskImport.ImportingFolder.CodingKeys()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23AD7D3D4()
{
  unint64_t result;

  result = qword_2542E2200[0];
  if (!qword_2542E2200[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DE65C, &type metadata for NSecTimestamp);
    atomic_store(result, qword_2542E2200);
  }
  return result;
}

unint64_t sub_23AD7D418()
{
  unint64_t result;

  result = qword_2542E3280;
  if (!qword_2542E3280)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DE634, &type metadata for NSecTimestamp);
    atomic_store(result, (unint64_t *)&qword_2542E3280);
  }
  return result;
}

uint64_t sub_23AD7D45C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23AD7D4A8 + 4 * byte_23B1D78C4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23AD7D4DC + 4 * byte_23B1D78BF[v4]))();
}

uint64_t sub_23AD7D4DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD7D4E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD7D4ECLL);
  return result;
}

uint64_t sub_23AD7D4F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD7D500);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23AD7D504(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD7D50C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23AD7D518()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD7D528()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD7D538()
{
  JUMPOUT(0x23B8613CCLL);
}

void sub_23AD7D548()
{
  sub_23AD7CD08();
}

uint64_t sub_23AD7D55C(uint64_t a1)
{
  sub_23B1C67DC();
  return a1;
}

uint64_t sub_23AD7D584(uint64_t a1)
{
  return sub_23AD7D59C(a1, (uint64_t (*)(void))sub_23AF98500);
}

uint64_t sub_23AD7D590(uint64_t a1)
{
  return sub_23AD7D59C(a1, (uint64_t (*)(void))sub_23AF9850C);
}

uint64_t sub_23AD7D59C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t *v2;
  size_t v3;
  uint64_t v4;
  uint64_t v5;
  size_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;
  BOOL v13;
  size_t v14;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v5 + v3) <= *(_QWORD *)(v4 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_15:
    if (!v3)
      goto LABEL_16;
    goto LABEL_18;
  }
  v4 = a2();
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_15;
LABEL_5:
  v9 = *(_QWORD *)(v4 + 16);
  if ((*(_QWORD *)(v4 + 24) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v10 = (void *)(v4 + v9 + 32);
  if (a1 + 32 < (unint64_t)v10 + v8 && (unint64_t)v10 < a1 + 32 + v8)
    goto LABEL_21;
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v3)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v12 = *(_QWORD *)(v4 + 16);
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    *(_QWORD *)(v4 + 16) = v14;
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v2 = v4;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AD7D6F0(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_23AF98BB8(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_23B1C5A08();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AD7D858(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t *v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v5 + v3 <= *(_QWORD *)(v4 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v4 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v3)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v8 = *(_QWORD *)(v4 + 16);
  if ((*(_QWORD *)(v4 + 24) >> 1) - v8 < v3)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = (void *)(v4 + v8 + 32);
  if (a1 + 32 < (unint64_t)v9 + v3 && (unint64_t)v9 < a1 + 32 + v3)
    goto LABEL_21;
  memcpy(v9, (const void *)(a1 + 32), v3);
  if (!v3)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v2 = v4;
    return result;
  }
  v11 = *(_QWORD *)(v4 + 16);
  v12 = __OFADD__(v11, v3);
  v13 = v11 + v3;
  if (!v12)
  {
    *(_QWORD *)(v4 + 16) = v13;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AD7D9A8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_23AF995C0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E19C8);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AD7DB1C(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_23B1C7088();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x23B85F86C](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_23AEA6FE8(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_23B1C7088();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_23B1C671C();
  }
  __break(1u);
  return result;
}

uint64_t sub_23AD7DCD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_23AF9992C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[7 * v8 + 4];
  if (a1 + 32 < v9 + 56 * v2 && v9 < a1 + 32 + 56 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE6F8);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AD7DE3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_23AF99BA0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31F0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AD7DF9C(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_23AF99E00(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AD7E108(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_23AF983F4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23AD7E258(unint64_t a1)
{
  return sub_23AAB69A0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_23AEA71F8);
}

uint64_t sub_23AD7E264(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v29 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_23B1C6968();
  if (!v20)
    return sub_23B1C6758();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_23B1C61D0();
  v34 = sub_23B1C6FF8();
  sub_23B1C6FB0();
  v37 = v8;
  result = sub_23B1C695C();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_23B1C69E0();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v14);
      v24(v43, 0);
      v28 = v42;
      v38(v14, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
      sub_23B1C6FE0();
      result = sub_23B1C6980();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_23AD7E554()
{
  _QWORD *v0;
  unint64_t v1;
  char v2;
  void *v3;
  _OWORD v5[2];
  void *v6;
  __int128 v7;
  uint64_t v8;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v1 = sub_23AAAF4C4(0x6465727574706143, 0xEF746E65746E6F43), (v2 & 1) != 0))
  {
    sub_23AAA15AC(v0[7] + 32 * v1, (uint64_t)v5);
    sub_23AAA159C(v5, &v7);
    swift_endAccess();
    sub_23AAA159C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54C0);
    swift_dynamicCast();
    v3 = v6;
  }
  else
  {
    swift_endAccess();
    v3 = &unk_250BDC960;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54C0);
    *(_QWORD *)&v7 = &unk_250BDC960;
    swift_beginAccess();
    sub_23AD035F8((uint64_t)&v7, 0x6465727574706143, 0xEF746E65746E6F43);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

void *sub_23AD7E748()
{
  _QWORD *v0;
  unint64_t v1;
  char v2;
  void *v3;
  _OWORD v5[2];
  void *v6;
  __int128 v7;
  uint64_t v8;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v1 = sub_23AAAF4C4(0xD000000000000012, 0x800000023B202000), (v2 & 1) != 0))
  {
    sub_23AAA15AC(v0[7] + 32 * v1, (uint64_t)v5);
    sub_23AAA159C(v5, &v7);
    swift_endAccess();
    sub_23AAA159C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54C8);
    swift_dynamicCast();
    v3 = v6;
  }
  else
  {
    swift_endAccess();
    v3 = &unk_250BDC988;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54C8);
    *(_QWORD *)&v7 = &unk_250BDC988;
    swift_beginAccess();
    sub_23AD035F8((uint64_t)&v7, 0xD000000000000012, 0x800000023B202000);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

void *sub_23AD7E92C()
{
  _QWORD *v0;
  unint64_t v1;
  char v2;
  void *v3;
  _OWORD v5[2];
  void *v6;
  __int128 v7;
  uint64_t v8;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v1 = sub_23AAAF4C4(0xD000000000000012, 0x800000023B202070), (v2 & 1) != 0))
  {
    sub_23AAA15AC(v0[7] + 32 * v1, (uint64_t)v5);
    sub_23AAA159C(v5, &v7);
    swift_endAccess();
    sub_23AAA159C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7490);
    swift_dynamicCast();
    v3 = v6;
  }
  else
  {
    swift_endAccess();
    v3 = &unk_250BDC8E8;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7490);
    *(_QWORD *)&v7 = &unk_250BDC8E8;
    swift_beginAccess();
    sub_23AD035F8((uint64_t)&v7, 0xD000000000000012, 0x800000023B202070);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

void *sub_23AD7EB10()
{
  _QWORD *v0;
  unint64_t v1;
  char v2;
  void *v3;
  _OWORD v5[2];
  void *v6;
  __int128 v7;
  uint64_t v8;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v1 = sub_23AAAF4C4(0x6174654D6D657449, 0xEC00000061746164), (v2 & 1) != 0))
  {
    sub_23AAA15AC(v0[7] + 32 * v1, (uint64_t)v5);
    sub_23AAA159C(v5, &v7);
    swift_endAccess();
    sub_23AAA159C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54A8);
    swift_dynamicCast();
    v3 = v6;
  }
  else
  {
    swift_endAccess();
    v3 = &unk_250BDC618;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54A8);
    *(_QWORD *)&v7 = &unk_250BDC618;
    swift_beginAccess();
    sub_23AD035F8((uint64_t)&v7, 0x6174654D6D657449, 0xEC00000061746164);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

void *sub_23AD7ECFC()
{
  _QWORD *v0;
  unint64_t v1;
  char v2;
  void *v3;
  _OWORD v5[2];
  void *v6;
  __int128 v7;
  uint64_t v8;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v1 = sub_23AAAF4C4(0x746F726854626F4ALL, 0xEB00000000656C74), (v2 & 1) != 0))
  {
    sub_23AAA15AC(v0[7] + 32 * v1, (uint64_t)v5);
    sub_23AAA159C(v5, &v7);
    swift_endAccess();
    sub_23AAA159C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54A0);
    swift_dynamicCast();
    v3 = v6;
  }
  else
  {
    swift_endAccess();
    v3 = &unk_250BDC5F0;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54A0);
    *(_QWORD *)&v7 = &unk_250BDC5F0;
    swift_beginAccess();
    sub_23AD035F8((uint64_t)&v7, 0x746F726854626F4ALL, 0xEB00000000656C74);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

uint64_t sub_23AD7EEE8()
{
  return sub_23AAAF28C(&qword_2542E73E0, &qword_2542E54E0, (uint64_t (*)(uint64_t))sub_23AD83C7C);
}

uint64_t sub_23AD7EF04()
{
  return sub_23AD7EF94(&qword_2569E61C0);
}

uint64_t sub_23AD7EF10()
{
  return sub_23AD7EF94(qword_2569E5580);
}

uint64_t sub_23AD7EF1C()
{
  return sub_23AD7EF94((uint64_t *)&unk_2569E61B0);
}

uint64_t sub_23AD7EF28()
{
  return sub_23AD7EF94(qword_2542E6928);
}

uint64_t sub_23AD7EF34()
{
  return sub_23AD7EF94(&qword_2542E69B0);
}

uint64_t sub_23AD7EF40()
{
  return sub_23AD7EF94(qword_2542E68A0);
}

uint64_t sub_23AD7EF4C()
{
  return sub_23AD7EF94(&qword_2569E5578);
}

uint64_t sub_23AD7EF58()
{
  return sub_23AD7EF94((uint64_t *)&unk_2569E6100);
}

uint64_t sub_23AD7EF64()
{
  return sub_23AD7EF94(&qword_2569E5570);
}

uint64_t sub_23AD7EF70()
{
  return sub_23AD7EF94((uint64_t *)&unk_2569E6120);
}

uint64_t sub_23AD7EF7C()
{
  return sub_23AD7EF94(&qword_2569E5568);
}

uint64_t sub_23AD7EF88()
{
  return sub_23AD7EF94((uint64_t *)&unk_2569E5ED0);
}

uint64_t sub_23AD7EF94(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v2 = sub_23B1C7568();
  v4 = v3;
  swift_beginAccess();
  v5 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v6 = sub_23AAAF4C4(v2, v4), (v7 & 1) != 0))
  {
    sub_23AAA15AC(v5[7] + 32 * v6, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v14 + 1))
  {
    sub_23AAA159C(&v13, &v16);
    swift_endAccess();
    sub_23AAA159C(&v16, &v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3600);
    swift_dynamicCast();
    v8 = v15;
  }
  else
  {
    sub_23AA94C08((uint64_t)&v13);
    swift_endAccess();
    if (qword_2542E6A78 != -1)
      swift_once();
    v8 = qword_2542EDD40;
    swift_bridgeObjectRetain();
    v9 = sub_23B1C7568();
    v11 = v10;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3600);
    *(_QWORD *)&v16 = v8;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_23AD035F8((uint64_t)&v16, v9, v11);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v8;
}

void *sub_23AD7F1F4()
{
  _QWORD *v0;
  unint64_t v1;
  char v2;
  void *v3;
  _OWORD v5[2];
  void *v6;
  __int128 v7;
  uint64_t v8;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v1 = sub_23AAAF4C4(0xD000000000000036, 0x800000023B2020F0), (v2 & 1) != 0))
  {
    sub_23AAA15AC(v0[7] + 32 * v1, (uint64_t)v5);
    sub_23AAA159C(v5, &v7);
    swift_endAccess();
    sub_23AAA159C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54B8);
    swift_dynamicCast();
    v3 = v6;
  }
  else
  {
    swift_endAccess();
    v3 = &unk_250BDD9D8;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54B8);
    *(_QWORD *)&v7 = &unk_250BDD9D8;
    swift_beginAccess();
    sub_23AD035F8((uint64_t)&v7, 0xD000000000000036, 0x800000023B2020F0);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

void *sub_23AD7F3D8()
{
  _QWORD *v0;
  unint64_t v1;
  char v2;
  void *v3;
  _OWORD v5[2];
  void *v6;
  __int128 v7;
  uint64_t v8;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E6BB0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = off_2542E48B8;
  if (*((_QWORD *)off_2542E48B8 + 2) && (v1 = sub_23AAAF4C4(0xD000000000000036, 0x800000023B202130), (v2 & 1) != 0))
  {
    sub_23AAA15AC(v0[7] + 32 * v1, (uint64_t)v5);
    sub_23AAA159C(v5, &v7);
    swift_endAccess();
    sub_23AAA159C(&v7, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54B0);
    swift_dynamicCast();
    v3 = v6;
  }
  else
  {
    swift_endAccess();
    v3 = &unk_250BDDA00;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54B0);
    *(_QWORD *)&v7 = &unk_250BDDA00;
    swift_beginAccess();
    sub_23AD035F8((uint64_t)&v7, 0xD000000000000036, 0x800000023B202130);
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v3;
}

uint64_t sub_23AD7F5BC()
{
  return sub_23AAAF28C((uint64_t *)&unk_2542E4760, &qword_2542E54D0, (uint64_t (*)(uint64_t))sub_23AD836A4);
}

void sub_23AD7F5D8(char *a1)
{
  sub_23AC37708(*a1);
}

void sub_23AD7F5E4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23B1C74A8();
  __asm { BR              X9 }
}

uint64_t sub_23AD7F630()
{
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  return sub_23B1C74E4();
}

void sub_23AD7F6B8()
{
  __asm { BR              X10 }
}

uint64_t sub_23AD7F6F4()
{
  sub_23B1C64A0();
  return swift_bridgeObjectRelease();
}

void sub_23AD7F768()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_23B1C74A8();
  __asm { BR              X9 }
}

uint64_t sub_23AD7F7B0()
{
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  return sub_23B1C74E4();
}

uint64_t sub_23AD7F838@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23AD83DB0();
  *a1 = result;
  return result;
}

uint64_t sub_23AD7F864()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23AD7F894 + 4 * byte_23B1D7F9F[*v0]))();
}

void sub_23AD7F894(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "test_content");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_23AD7F8B8(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F697461636F6CLL;
  a1[1] = 0xE800000000000000;
}

void sub_23AD7F8D4(_QWORD *a1@<X8>)
{
  *a1 = 0x6874676E656CLL;
  a1[1] = 0xE600000000000000;
}

void sub_23AD7F8EC(_QWORD *a1@<X8>)
{
  *a1 = 0x7367616C66;
  a1[1] = 0xE500000000000000;
}

void sub_23AD7F904(_QWORD *a1@<X8>)
{
  *a1 = &unk_250BDC750;
}

uint64_t sub_23AD7F914()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23AD7F944 + 4 * byte_23B1D7FA4[*v0]))(0x64695F656C6966, 0xE700000000000000);
}

uint64_t sub_23AD7F944()
{
  return 0x6E6F635F74736574;
}

uint64_t sub_23AD7F964()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_23AD7F97C()
{
  return 0x6874676E656CLL;
}

uint64_t sub_23AD7F990()
{
  return 0x7367616C66;
}

void sub_23AD7F9A4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23AD7F9DC()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  v1 = (void *)sub_23B1C7514();
  v2 = objc_msgSend(v0, sel_bindObjectParameter_, v1);

  v3 = sub_23B1C63E0();
  return v3;
}

void sub_23AD7FBC8(char a1)
{
  __asm { BR              X10 }
}

id sub_23AD7FC08(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  id result;

  result = objc_msgSend(v18, sel_longLongAtIndex_, v17);
  v16[3] = MEMORY[0x24BEE4008];
  *v16 = result;
  return result;
}

uint64_t sub_23AD7FD18@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;

  v22 = 1;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6780);
  result = sub_23AA94830((uint64_t)&v22, v7, a1, v7, a2);
  if (!v3)
  {
    v9 = v20;
    v10 = v21;
    v22 = 2;
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5630);
    sub_23AA94830((uint64_t)&v22, v11, a1, v11, a2);
    if ((v21 & 1) != 0
      || (v12 = v20, v22 = 3, sub_23AA94830((uint64_t)&v22, v11, a1, v11, a2), v21 == 1))
    {
      v12 = 0;
      v19 = 0;
      v13 = 1;
    }
    else
    {
      v13 = 0;
      v19 = v20;
    }
    v22 = 4;
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5548);
    result = sub_23AA94830((uint64_t)&v22, v14, a1, v14, a2);
    v15 = v20;
    if ((_BYTE)v21)
      v15 = 0;
    if (v21 >> 60 == 15)
    {
      v18 = v15;
      v22 = 0;
      result = sub_23AA94830((uint64_t)&v22, MEMORY[0x24BEE4568], a1, MEMORY[0x24BEE4568], a2);
      v9 = 0;
      v17 = v19;
      v16 = v20;
      v10 = 0xF000000000000000;
      v15 = v18;
    }
    else
    {
      v16 = 0;
      v17 = v19;
    }
    *(_QWORD *)a3 = v16;
    *(_QWORD *)(a3 + 8) = v9;
    *(_QWORD *)(a3 + 16) = v10;
    *(_QWORD *)(a3 + 24) = v12;
    *(_QWORD *)(a3 + 32) = v17;
    *(_BYTE *)(a3 + 40) = v13;
    *(_QWORD *)(a3 + 48) = v15;
  }
  return result;
}

void sub_23AD7FF20(char *a1)
{
  sub_23AD7F9A4(*a1);
}

void sub_23AD7FF6C(char *a1)
{
  sub_23AD7FBC8(*a1);
}

double sub_23AD7FF84@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  uint64_t v9;

  sub_23AD7FD18(a1, a2, (uint64_t)v7);
  if (!v3)
  {
    v6 = v7[1];
    *(_OWORD *)a3 = v7[0];
    *(_OWORD *)(a3 + 16) = v6;
    result = *(double *)&v8;
    *(_OWORD *)(a3 + 32) = v8;
    *(_QWORD *)(a3 + 48) = v9;
  }
  return result;
}

unint64_t sub_23AD7FFD0(uint64_t a1)
{
  unint64_t result;

  result = sub_23AD7FFF4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23AD7FFF4()
{
  unint64_t result;

  result = qword_2569E54A0;
  if (!qword_2569E54A0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8078, &type metadata for CapturedContent);
    atomic_store(result, (unint64_t *)&qword_2569E54A0);
  }
  return result;
}

uint64_t sub_23AD8003C()
{
  return sub_23AAB5A28(qword_2569E54A8, &qword_2542E54C0, MEMORY[0x24BEE12C8]);
}

uint64_t _s9SQLFieldsOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23AD800B4 + 4 * byte_23B1D7FAE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23AD800E8 + 4 * byte_23B1D7FA9[v4]))();
}

uint64_t sub_23AD800E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD800F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD800F8);
  return result;
}

uint64_t sub_23AD80104(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD8010CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23AD80110(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD80118(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9SQLFieldsOMa_0()
{
  return &_s9SQLFieldsON;
}

uint64_t sub_23AD80134()
{
  return sub_23AAB5A28(qword_2569E54E0, &qword_2542E54C0, MEMORY[0x24BEE12E0]);
}

unint64_t sub_23AD80164()
{
  unint64_t result;

  result = qword_2542E0B88;
  if (!qword_2542E0B88)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8178, &_s9SQLFieldsON);
    atomic_store(result, (unint64_t *)&qword_2542E0B88);
  }
  return result;
}

unint64_t sub_23AD801AC()
{
  unint64_t result;

  result = qword_2542E1610[0];
  if (!qword_2542E1610[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D81BC, &type metadata for ItemReconciliationSQLFields);
    atomic_store(result, qword_2542E1610);
  }
  return result;
}

void sub_23AD801F0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23AD80224()
{
  unsigned __int8 v0;

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t))((char *)sub_23AD80290 + 4 * byte_23B1D7FC6[v0]))(0x64695F656C6966);
}

uint64_t sub_23AD80290()
{
  uint64_t v1;

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23AD80560(uint64_t a1, uint64_t a2)
{
  return sub_23AD82678(a1, a2, (void (*)(_BYTE *, uint64_t))sub_23AAA1FDC);
}

void sub_23AD8056C(uint64_t a1)
{
  char *v1;

  sub_23AAA1FDC(a1, *v1);
}

uint64_t sub_23AD80574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AA85974(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_23AAA1FDC);
}

void sub_23AD80580()
{
  char *v0;

  sub_23AD801F0(*v0);
}

void sub_23AD80588(char *a1)
{
  sub_23AA69030(*a1);
}

char *sub_23AD80594()
{
  uint64_t inited;
  char *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  int v21;
  int v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E55D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1D1B90;
  *(_DWORD *)(inited + 32) = -2088599168;
  v1 = sub_23AF98710((char *)1, 8, 1, (char *)inited);
  v3 = *((_QWORD *)v1 + 2);
  v2 = *((_QWORD *)v1 + 3);
  v4 = v2 >> 1;
  v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    v1 = sub_23AF98710((char *)(v2 > 1), v3 + 1, 1, v1);
    v2 = *((_QWORD *)v1 + 3);
    v4 = v2 >> 1;
  }
  *((_QWORD *)v1 + 2) = v5;
  v1[v3 + 32] = -124;
  v6 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    v1 = sub_23AF98710((char *)(v2 > 1), v3 + 2, 1, v1);
    v2 = *((_QWORD *)v1 + 3);
    v4 = v2 >> 1;
  }
  *((_QWORD *)v1 + 2) = v6;
  v1[v5 + 32] = -123;
  v7 = v3 + 3;
  if (v4 < (uint64_t)(v3 + 3))
  {
    v1 = sub_23AF98710((char *)(v2 > 1), v3 + 3, 1, v1);
    v2 = *((_QWORD *)v1 + 3);
    v4 = v2 >> 1;
  }
  *((_QWORD *)v1 + 2) = v7;
  v1[v6 + 32] = -122;
  v8 = v3 + 4;
  if (v4 < (uint64_t)(v3 + 4))
  {
    v1 = sub_23AF98710((char *)(v2 > 1), v3 + 4, 1, v1);
    v2 = *((_QWORD *)v1 + 3);
    v4 = v2 >> 1;
  }
  *((_QWORD *)v1 + 2) = v8;
  v1[v7 + 32] = -58;
  v9 = v3 + 5;
  if (v4 < (uint64_t)(v3 + 5))
  {
    v1 = sub_23AF98710((char *)(v2 > 1), v3 + 5, 1, v1);
    v2 = *((_QWORD *)v1 + 3);
    v4 = v2 >> 1;
  }
  *((_QWORD *)v1 + 2) = v9;
  v1[v8 + 32] = -60;
  if (v4 < (uint64_t)(v3 + 6))
    v1 = sub_23AF98710((char *)(v2 > 1), v3 + 6, 1, v1);
  *((_QWORD *)v1 + 2) = v3 + 6;
  v1[v9 + 32] = -59;
  v35 = v1;
  v10 = sub_23AD7E554();
  v11 = v10[2];
  if (v11)
  {
    v33 = MEMORY[0x24BEE4AF8];
    sub_23ADACD3C(0, v11, 0);
    v12 = 0;
    v13 = v33;
    v14 = *(_QWORD *)(v33 + 16);
    do
    {
      v15 = *((_BYTE *)v10 + v12 + 32);
      v16 = *(_QWORD *)(v33 + 24);
      if (v14 + v12 >= v16 >> 1)
        sub_23ADACD3C(v16 > 1, v14 + v12 + 1, 1);
      *(_QWORD *)(v33 + 16) = v14 + v12 + 1;
      *(_BYTE *)(v33 + v14 + v12++ + 32) = v15;
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x24BEE4AF8];
  }
  sub_23AD7D858(v13, (uint64_t (*)(void))sub_23AF98710);
  v17 = (char *)sub_23AD7E748();
  v18 = *((_QWORD *)v17 + 2);
  v19 = MEMORY[0x24BEE4AF8];
  if (v18)
  {
    v20 = (unsigned __int8 *)(v17 + 32);
    do
    {
      v22 = *v20++;
      v21 = v22;
      if (v22 && v21 != 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v23 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_23ADACCF4(0, *(_QWORD *)(v19 + 16) + 1, 1);
          v25 = *(_QWORD *)(v19 + 16);
          v24 = *(_QWORD *)(v19 + 24);
          if (v25 >= v24 >> 1)
            sub_23ADACCF4(v24 > 1, v25 + 1, 1);
          *(_QWORD *)(v19 + 16) = v25 + 1;
          *(_BYTE *)(v19 + v25 + 32) = v21;
        }
      }
      --v18;
    }
    while (v18);
  }
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v19 + 16);
  if (v26)
  {
    v34 = MEMORY[0x24BEE4AF8];
    sub_23ADACD3C(0, v26, 0);
    v27 = 0;
    v28 = v34;
    v29 = *(_QWORD *)(v34 + 16);
    do
    {
      v30 = *(_BYTE *)(v19 + v27 + 32);
      v31 = *(_QWORD *)(v34 + 24);
      if (v29 + v27 >= v31 >> 1)
        sub_23ADACD3C(v31 > 1, v29 + v27 + 1, 1);
      *(_QWORD *)(v34 + 16) = v29 + v27 + 1;
      *(_BYTE *)(v34 + v29 + v27++ + 32) = v30 | 0x40;
    }
    while (v26 != v27);
    swift_release();
  }
  else
  {
    swift_release();
    v28 = MEMORY[0x24BEE4AF8];
  }
  sub_23AD7D858(v28, (uint64_t (*)(void))sub_23AF98710);
  return v35;
}

char *sub_23AD80A8C()
{
  uint64_t inited;
  char *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  int v34;
  int v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  int64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E55D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1D1B90;
  *(_DWORD *)(inited + 32) = -2088599168;
  v1 = sub_23AF98710((char *)1, 8, 1, (char *)inited);
  v3 = *((_QWORD *)v1 + 2);
  v2 = *((_QWORD *)v1 + 3);
  v4 = v2 >> 1;
  v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    v1 = sub_23AF98710((char *)(v2 > 1), v3 + 1, 1, v1);
    v2 = *((_QWORD *)v1 + 3);
    v4 = v2 >> 1;
  }
  *((_QWORD *)v1 + 2) = v5;
  v1[v3 + 32] = -124;
  v6 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    v1 = sub_23AF98710((char *)(v2 > 1), v3 + 2, 1, v1);
    v2 = *((_QWORD *)v1 + 3);
    v4 = v2 >> 1;
  }
  *((_QWORD *)v1 + 2) = v6;
  v1[v5 + 32] = -123;
  v7 = v3 + 3;
  if (v4 < (uint64_t)(v3 + 3))
  {
    v1 = sub_23AF98710((char *)(v2 > 1), v3 + 3, 1, v1);
    v2 = *((_QWORD *)v1 + 3);
    v4 = v2 >> 1;
  }
  *((_QWORD *)v1 + 2) = v7;
  v1[v6 + 32] = -122;
  v8 = v3 + 4;
  if (v4 < (uint64_t)(v3 + 4))
    v1 = sub_23AF98710((char *)(v2 > 1), v3 + 4, 1, v1);
  *((_QWORD *)v1 + 2) = v8;
  v1[v7 + 32] = -58;
  v9 = v3 + 7;
  if (__OFADD__(v8, 3))
  {
    __break(1u);
  }
  else
  {
    v10 = *((_QWORD *)v1 + 3);
    v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) >= v9)
      goto LABEL_11;
  }
  if ((uint64_t)v8 <= v9)
    v46 = v3 + 7;
  else
    v46 = v3 + 4;
  v1 = sub_23AF98710((char *)1, v46, 1, v1);
  v8 = *((_QWORD *)v1 + 2);
  v10 = *((_QWORD *)v1 + 3);
  v11 = v10 >> 1;
LABEL_11:
  v12 = v8 + 1;
  if (v11 <= v8)
    v1 = sub_23AF98710((char *)(v10 > 1), v8 + 1, 1, v1);
  *((_QWORD *)v1 + 2) = v12;
  v1[v8 + 32] = -121;
  v13 = *((_QWORD *)v1 + 3);
  v14 = v8 + 2;
  if ((uint64_t)(v8 + 2) > (uint64_t)(v13 >> 1))
    v1 = sub_23AF98710((char *)(v13 > 1), v8 + 2, 1, v1);
  *((_QWORD *)v1 + 2) = v14;
  v1[v12 + 32] = -64;
  v15 = *((_QWORD *)v1 + 3);
  v16 = v8 + 3;
  if (v16 > (uint64_t)(v15 >> 1))
    v1 = sub_23AF98710((char *)(v15 > 1), v16, 1, v1);
  *((_QWORD *)v1 + 2) = v16;
  v1[v14 + 32] = -63;
  v17 = v16 + 2;
  if (__OFADD__(v16, 2))
  {
    __break(1u);
  }
  else
  {
    v18 = *((_QWORD *)v1 + 3);
    v19 = v18 >> 1;
    if ((uint64_t)(v18 >> 1) >= v17)
      goto LABEL_19;
  }
  if (v16 <= v17)
    v47 = v16 + 2;
  else
    v47 = v16;
  v1 = sub_23AF98710((char *)1, v47, 1, v1);
  v18 = *((_QWORD *)v1 + 3);
  v19 = v18 >> 1;
LABEL_19:
  v20 = *((_QWORD *)v1 + 2);
  v21 = v20 + 1;
  if (v19 <= v20)
  {
    v1 = sub_23AF98710((char *)(v18 > 1), v20 + 1, 1, v1);
    v18 = *((_QWORD *)v1 + 3);
    v19 = v18 >> 1;
  }
  *((_QWORD *)v1 + 2) = v21;
  v1[v20 + 32] = -62;
  v22 = v20 + 2;
  if ((uint64_t)v19 < v22)
    v1 = sub_23AF98710((char *)(v18 > 1), v22, 1, v1);
  *((_QWORD *)v1 + 2) = v22;
  v1[v21 + 32] = -61;
  v50 = v1;
  v23 = sub_23AD7E554();
  v24 = v23[2];
  if (v24)
  {
    v48 = MEMORY[0x24BEE4AF8];
    sub_23ADACD3C(0, v24, 0);
    v25 = 0;
    v26 = v48;
    v27 = *(_QWORD *)(v48 + 16);
    do
    {
      v28 = *((_BYTE *)v23 + v25 + 32);
      v29 = *(_QWORD *)(v48 + 24);
      if (v27 + v25 >= v29 >> 1)
        sub_23ADACD3C(v29 > 1, v27 + v25 + 1, 1);
      *(_QWORD *)(v48 + 16) = v27 + v25 + 1;
      *(_BYTE *)(v48 + v27 + v25++ + 32) = v28;
    }
    while (v24 != v25);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x24BEE4AF8];
  }
  sub_23AD7D858(v26, (uint64_t (*)(void))sub_23AF98710);
  v30 = (char *)sub_23AD7E748();
  v31 = *((_QWORD *)v30 + 2);
  v32 = MEMORY[0x24BEE4AF8];
  if (v31)
  {
    v33 = (unsigned __int8 *)(v30 + 32);
    do
    {
      v35 = *v33++;
      v34 = v35;
      if (v35 && v34 != 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v36 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if ((v36 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_23ADACCF4(0, *(_QWORD *)(v32 + 16) + 1, 1);
          v38 = *(_QWORD *)(v32 + 16);
          v37 = *(_QWORD *)(v32 + 24);
          if (v38 >= v37 >> 1)
            sub_23ADACCF4(v37 > 1, v38 + 1, 1);
          *(_QWORD *)(v32 + 16) = v38 + 1;
          *(_BYTE *)(v32 + v38 + 32) = v34;
        }
      }
      --v31;
    }
    while (v31);
  }
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(v32 + 16);
  if (v39)
  {
    v49 = MEMORY[0x24BEE4AF8];
    sub_23ADACD3C(0, v39, 0);
    v40 = 0;
    v41 = v49;
    v42 = *(_QWORD *)(v49 + 16);
    do
    {
      v43 = *(_BYTE *)(v32 + v40 + 32);
      v44 = *(_QWORD *)(v49 + 24);
      if (v42 + v40 >= v44 >> 1)
        sub_23ADACD3C(v44 > 1, v42 + v40 + 1, 1);
      *(_QWORD *)(v49 + 16) = v42 + v40 + 1;
      *(_BYTE *)(v49 + v42 + v40++ + 32) = v43 | 0x40;
    }
    while (v39 != v40);
    swift_release();
  }
  else
  {
    swift_release();
    v41 = MEMORY[0x24BEE4AF8];
  }
  sub_23AD7D858(v41, (uint64_t (*)(void))sub_23AF98710);
  return v50;
}

void *sub_23AD810B0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  int v11;
  int v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74A0);
  MEMORY[0x23B8613CC](MEMORY[0x24BEE12C8], v0);
  sub_23B1C67A0();
  swift_getAssociatedTypeWitness();
  if (swift_dynamicCastMetatype())
    sub_23B1C67A0();
  else
    sub_23B1C67AC();
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemStateVersion(0, AssociatedTypeWitness, AssociatedConformanceWitness, v3);
  if (swift_dynamicCastMetatype())
    sub_23B1C67A0();
  else
    sub_23B1C67AC();
  sub_23AD7E554();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54C0);
  v5 = sub_23AAB5A28(qword_2569E54E0, &qword_2542E54C0, MEMORY[0x24BEE12E0]);
  sub_23AD7E264((void (*)(char *, char *))sub_23AD841EC, 0, v4, (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, MEMORY[0x24BEE4078], v5, MEMORY[0x24BEE40A8], v6);
  swift_bridgeObjectRelease();
  sub_23B1C67A0();
  v7 = (char *)sub_23AD7E748();
  v8 = *((_QWORD *)v7 + 2);
  if (v8)
  {
    v9 = MEMORY[0x24BEE4AF8];
    v10 = (unsigned __int8 *)(v7 + 32);
    do
    {
      v12 = *v10++;
      v11 = v12;
      if (v12 && v11 != 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v13 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_23ADACCF4(0, *(_QWORD *)(v9 + 16) + 1, 1);
          v15 = *(_QWORD *)(v9 + 16);
          v14 = *(_QWORD *)(v9 + 24);
          if (v15 >= v14 >> 1)
            sub_23ADACCF4(v14 > 1, v15 + 1, 1);
          *(_QWORD *)(v9 + 16) = v15 + 1;
          *(_BYTE *)(v9 + v15 + 32) = v11;
        }
      }
      --v8;
    }
    while (v8);
  }
  swift_bridgeObjectRelease();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54C8);
  v17 = sub_23AAB5A28(&qword_2569E5558, &qword_2542E54C8, MEMORY[0x24BEE12E0]);
  sub_23AD7E264((void (*)(char *, char *))sub_23AAAA070, 0, v16, (uint64_t)&type metadata for ItemReconciliationHalfSQLFields, MEMORY[0x24BEE4078], v17, MEMORY[0x24BEE40A8], v18);
  swift_release();
  sub_23B1C67A0();
  return &unk_250BDC9B0;
}

void sub_23AD814D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[11];
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t AssociatedConformanceWitness;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v37 = a2;
  v36 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v27 = sub_23B1C6C98();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v25 = (char *)v23 - v4;
  v5 = swift_getAssociatedTypeWitness();
  v24 = sub_23B1C6C98();
  v23[10] = *(_QWORD *)(v24 - 8);
  v6 = MEMORY[0x24BDAC7A8](v24);
  v23[9] = (char *)v23 - v7;
  v34 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v23[5] = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v23[4] = (char *)v23 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v23[3] = (char *)v23 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v23[2] = (char *)v23 - v14;
  v15 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v31 = type metadata accessor for ItemStateVersion(0, v15, AssociatedConformanceWitness, v16);
  v30 = *(_QWORD *)(v31 - 8);
  v17 = MEMORY[0x24BDAC7A8](v31);
  v23[1] = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v23[0] = (char *)v23 - v19;
  v29 = v15;
  v32 = sub_23B1C6C98();
  v23[8] = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v28 = (char *)v23 - v20;
  v21 = swift_getAssociatedConformanceWitness();
  v22 = swift_getAssociatedConformanceWitness();
  v38 = v5;
  v39 = AssociatedTypeWitness;
  v35 = AssociatedTypeWitness;
  v23[7] = v21;
  v40 = v21;
  v41 = v22;
  v23[6] = v22;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD817F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  *(_QWORD *)(v3 - 208) = a1;
  sub_23B1C6C98();
  v4 = MEMORY[0x24BDAC7A8](v2);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v3 - 216) = v1;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  return ((uint64_t (*)(void))((char *)&loc_23AD819A8 + *((int *)qword_23AD823A0 + (v16 >> 6))))();
}

uint64_t sub_23AD819B8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v3 = *(_QWORD *)(v2 - 192) + *(int *)(*(_QWORD *)(v2 - 200) + 68);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 >> 60 == 11)
  {
    v9 = objc_msgSend(*(id *)(v2 - 184), sel_bindObjectParameter_, 0);
    v1 = sub_23B1C63E0();

  }
  else
  {
    v5 = *(_QWORD *)(v3 + 48);
    v6 = *(_DWORD *)(v3 + 40);
    *(_OWORD *)(v2 - 144) = *(_OWORD *)v3;
    *(_QWORD *)(v2 - 128) = v4;
    *(_OWORD *)(v2 - 120) = *(_OWORD *)(v3 + 24);
    *(_BYTE *)(v2 - 104) = v6 & 1;
    *(_QWORD *)(v2 - 96) = v5;
    v7 = *(_QWORD *)(v2 - 72);
    sub_23AD7F9A4(a1);
    if (!v7)
      return v8;
  }
  return v1;
}

void sub_23AD82438(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  sub_23AD814D4(*a1, a2, a3);
}

void sub_23AD82450(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  sub_23AAB3B50(*a1, a2, a3, a4);
}

void sub_23AD82470()
{
  sub_23AA831E8();
}

void *sub_23AD82490@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = sub_23AD810B0();
  *a1 = result;
  return result;
}

void sub_23AD824BC(int a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23AD824E8(char a1)
{
  sub_23AD801F0(a1);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 6255462;
}

uint64_t sub_23AD8259C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)&loc_23AD8258C + 4 * byte_23B1D7FE7[a1 - 48]))(1684957547, 0xE400000000000000);
}

void sub_23AD825C8()
{
  JUMPOUT(0x23AD8258CLL);
}

void sub_23AD825E8()
{
  JUMPOUT(0x23AD8258CLL);
}

void sub_23AD8260C()
{
  JUMPOUT(0x23AD8258CLL);
}

void sub_23AD82630()
{
  JUMPOUT(0x23AD8258CLL);
}

void sub_23AD82650()
{
  JUMPOUT(0x23AD8258CLL);
}

uint64_t sub_23AD8266C(uint64_t a1, uint64_t a2)
{
  return sub_23AD82678(a1, a2, (void (*)(_BYTE *, uint64_t))sub_23AAA1660);
}

uint64_t sub_23AD82678(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  unsigned __int8 *v3;
  uint64_t v5;
  _BYTE v7[72];

  v5 = *v3;
  sub_23B1C74A8();
  a3(v7, v5);
  return sub_23B1C74E4();
}

void sub_23AD826C0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_23AAA1660(a1, *v1);
}

void sub_23AD826C8()
{
  unsigned __int8 *v0;

  sub_23AD824BC(*v0);
}

char *sub_23AD826D0()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  char *v11;
  char v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  int64_t v18;
  int64_t v19;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;

  v0 = sub_23AAAEEC4(0xD00000000000001FLL, 0x800000023B2020D0, (uint64_t *)&unk_2542E74A0, (uint64_t (*)(uint64_t))sub_23AD80A8C);
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v34 = MEMORY[0x24BEE4AF8];
    sub_23ADACD18(0, v1, 0);
    v2 = 0;
    v3 = v34;
    v4 = *(_QWORD *)(v34 + 16);
    do
    {
      v5 = *(_BYTE *)(v0 + v2 + 32);
      v6 = *(_QWORD *)(v34 + 24);
      if (v4 + v2 >= v6 >> 1)
        sub_23ADACD18(v6 > 1, v4 + v2 + 1, 1);
      *(_QWORD *)(v34 + 16) = v4 + v2 + 1;
      *(_BYTE *)(v34 + v4 + v2++ + 32) = v5;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x24BEE4AF8];
  }
  v35 = v3;
  v7 = sub_23AAAF28C(qword_2542E4F10, (uint64_t *)&unk_2542E74A0, (uint64_t (*)(uint64_t))sub_23AD80594);
  v8 = *(_QWORD *)(v7 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v10 = (unsigned __int8 *)(v7 + 32);
    v11 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      v13 = *v10++;
      v12 = v13;
      if (v13 <= 0xC5)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v11 = sub_23AF98704(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
        v15 = *((_QWORD *)v11 + 2);
        v14 = *((_QWORD *)v11 + 3);
        if (v15 >= v14 >> 1)
          v11 = sub_23AF98704((char *)(v14 > 1), v15 + 1, 1, v11);
        *((_QWORD *)v11 + 2) = v15 + 1;
        v11[v15 + 32] = v12 | 0x10;
      }
      --v8;
    }
    while (v8);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  sub_23AD7D858((uint64_t)v11, (uint64_t (*)(void))sub_23AF98704);
  v17 = (char *)v3;
  v18 = *(_QWORD *)(v3 + 16);
  v19 = v18 + 6;
  if (__OFADD__(v18, 6))
  {
    __break(1u);
LABEL_45:
    v17 = sub_23AF98704((char *)(v16 > 1), v18, 1, v17);
    v16 = *((_QWORD *)v17 + 3);
    v21 = v16 >> 1;
    goto LABEL_26;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native
    || (v16 = *(_QWORD *)(v35 + 24), v21 = v16 >> 1, (uint64_t)(v16 >> 1) < v19))
  {
    if (v18 <= v19)
      v22 = v18 + 6;
    else
      v22 = v18;
    v17 = sub_23AF98704(isUniquelyReferenced_nonNull_native, v22, 1, (char *)v35);
    v16 = *((_QWORD *)v17 + 3);
    v21 = v16 >> 1;
  }
  v8 = *((_QWORD *)v17 + 2);
  v18 = v8 + 1;
  if (v21 <= v8)
    goto LABEL_45;
LABEL_26:
  *((_QWORD *)v17 + 2) = v18;
  v17[v8 + 32] = 48;
  v23 = v8 + 2;
  if (v21 < (uint64_t)(v8 + 2))
  {
    v17 = sub_23AF98704((char *)(v16 > 1), v8 + 2, 1, v17);
    v16 = *((_QWORD *)v17 + 3);
    v21 = v16 >> 1;
  }
  *((_QWORD *)v17 + 2) = v23;
  v17[v18 + 32] = 49;
  v24 = v8 + 3;
  if (v21 < (uint64_t)(v8 + 3))
  {
    v17 = sub_23AF98704((char *)(v16 > 1), v8 + 3, 1, v17);
    v16 = *((_QWORD *)v17 + 3);
    v21 = v16 >> 1;
  }
  *((_QWORD *)v17 + 2) = v24;
  v17[v23 + 32] = 50;
  v25 = v8 + 4;
  if (v21 < (uint64_t)(v8 + 4))
  {
    v17 = sub_23AF98704((char *)(v16 > 1), v8 + 4, 1, v17);
    v16 = *((_QWORD *)v17 + 3);
    v21 = v16 >> 1;
  }
  *((_QWORD *)v17 + 2) = v25;
  v17[v24 + 32] = 51;
  v26 = v8 + 5;
  if (v21 < (uint64_t)(v8 + 5))
  {
    v17 = sub_23AF98704((char *)(v16 > 1), v8 + 5, 1, v17);
    v16 = *((_QWORD *)v17 + 3);
    v21 = v16 >> 1;
  }
  *((_QWORD *)v17 + 2) = v26;
  v17[v25 + 32] = 52;
  if (v21 < (uint64_t)(v8 + 6))
    v17 = sub_23AF98704((char *)(v16 > 1), v8 + 6, 1, v17);
  *((_QWORD *)v17 + 2) = v8 + 6;
  v17[v26 + 32] = 53;
  v36 = v17;
  v27 = sub_23AD7E92C();
  v28 = v27[2];
  if (v28)
  {
    sub_23ADACD18(0, v28, 0);
    v29 = 0;
    v30 = *(_QWORD *)(v9 + 16);
    do
    {
      v31 = *((_BYTE *)v27 + v29 + 32);
      v32 = *(_QWORD *)(v9 + 24);
      if (v30 + v29 >= v32 >> 1)
        sub_23ADACD18(v32 > 1, v30 + v29 + 1, 1);
      *(_QWORD *)(v9 + 16) = v30 + v29 + 1;
      *(_BYTE *)(v9 + v30 + v29++ + 32) = v31 | 0x20;
    }
    while (v28 != v29);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x24BEE4AF8];
  }
  sub_23AD7D858(v9, (uint64_t (*)(void))sub_23AF98704);
  return v36;
}

uint64_t sub_23AD82B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v6 = type metadata accessor for ItemReconciliationHalf(0, a1, a3, a4);
  v7 = MEMORY[0x23B8613CC](&unk_23B1D8284, v6);
  sub_23AA7C074(v6, v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E74A0);
  v9 = MEMORY[0x24BEE12E0];
  v10 = MEMORY[0x23B8613CC](MEMORY[0x24BEE12E0], v8);
  v11 = MEMORY[0x24BEE40A8];
  v13 = sub_23AD7E264((void (*)(char *, char *))sub_23AAA6724, 0, v8, (uint64_t)&type metadata for ItemReconciliationSQLFields, MEMORY[0x24BEE4078], v10, MEMORY[0x24BEE40A8], v12);
  swift_bridgeObjectRelease();
  v23 = v13;
  v15 = type metadata accessor for ItemReconciliationHalf(0, a2, a4, v14);
  v16 = MEMORY[0x23B8613CC](&unk_23B1D8284, v15);
  sub_23AA7C074(v15, v16);
  v17 = MEMORY[0x24BEE12C8];
  MEMORY[0x23B8613CC](MEMORY[0x24BEE12C8], v8);
  sub_23B1C65E4();
  swift_bridgeObjectRelease();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7498);
  MEMORY[0x23B8613CC](v17, v18);
  sub_23B1C67A0();
  sub_23B1C67A0();
  sub_23AD7E92C();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7490);
  v20 = sub_23AAB5A28(&qword_2569E5560, &qword_2542E7490, v9);
  sub_23AD7E264((void (*)(char *, char *))sub_23AAB9C94, 0, v19, (uint64_t)&type metadata for ItemReconciliationSQLFields, MEMORY[0x24BEE4078], v20, v11, v21);
  swift_bridgeObjectRelease();
  sub_23B1C67A0();
  return v23;
}

unsigned __int8 *sub_23AD82DDC@<X0>(unsigned __int8 *result@<X0>, char *a2@<X8>)
{
  unsigned int v2;
  char v3;

  v2 = *result;
  if (v2 >= 0xC6)
    v3 = 56;
  else
    v3 = v2 | 0x10;
  *a2 = v3;
  return result;
}

void sub_23AD82DF8(int a1)
{
  __asm { BR              X10 }
}

void sub_23AD82E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 32), a4);
  sub_23AD814D4(v5, v4, v7);
}

void sub_23AD82EEC()
{
  uint64_t v0;

  if (v0)
    JUMPOUT(0x23AD82EF4);
  JUMPOUT(0x23AD82E74);
}

void sub_23AD82EF8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;

  v21 = objc_msgSend(v19, sel_bindBooleanParameter_, *(unsigned __int8 *)(v18 + *(int *)(v20 + 72)));
  sub_23B1C63E0();

  JUMPOUT(0x23AD830ACLL);
}

void sub_23AD831C4(unsigned __int8 *a1)
{
  sub_23AD82DF8(*a1);
}

uint64_t sub_23AD831DC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_23AD82B88(a1[2], a1[3], a1[4], a1[5]);
  *a2 = result;
  return result;
}

uint64_t sub_23AD8320C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23AD83220, (uint64_t (*)(void))sub_23AAA5D34);
}

unint64_t sub_23AD83220()
{
  unint64_t result;

  result = qword_2542DE230;
  if (!qword_2542DE230)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8240, &type metadata for ItemReconciliationSQLFields);
    atomic_store(result, (unint64_t *)&qword_2542DE230);
  }
  return result;
}

unint64_t sub_23AD83268()
{
  unint64_t result;

  result = qword_2542E7158;
  if (!qword_2542E7158)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8218, &type metadata for ItemReconciliationSQLFields);
    atomic_store(result, (unint64_t *)&qword_2542E7158);
  }
  return result;
}

uint64_t sub_23AD832AC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x23B8613CC](&unk_23B1D81A0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23AD832DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23AD832F0, (uint64_t (*)(void))sub_23AD83334);
}

unint64_t sub_23AD832F0()
{
  unint64_t result;

  result = qword_2542E16A8;
  if (!qword_2542E16A8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8324, &type metadata for ItemReconciliationHalfSQLFields);
    atomic_store(result, (unint64_t *)&qword_2542E16A8);
  }
  return result;
}

unint64_t sub_23AD83334()
{
  unint64_t result;

  result = qword_2542E1698;
  if (!qword_2542E1698)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D82BC, &type metadata for ItemReconciliationHalfSQLFields);
    atomic_store(result, (unint64_t *)&qword_2542E1698);
  }
  return result;
}

unint64_t sub_23AD8337C()
{
  unint64_t result;

  result = qword_2542E16A0;
  if (!qword_2542E16A0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D82FC, &type metadata for ItemReconciliationHalfSQLFields);
    atomic_store(result, (unint64_t *)&qword_2542E16A0);
  }
  return result;
}

uint64_t sub_23AD833C0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x23B8613CC](&unk_23B1D8284);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23AD833EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23AD83430, (uint64_t (*)(void))sub_23AD83474);
}

uint64_t sub_23AD83400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_23AD83430()
{
  unint64_t result;

  result = qword_2542E0B90;
  if (!qword_2542E0B90)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D80A0, &_s9SQLFieldsON);
    atomic_store(result, (unint64_t *)&qword_2542E0B90);
  }
  return result;
}

unint64_t sub_23AD83474()
{
  unint64_t result;

  result = qword_2542E0B80;
  if (!qword_2542E0B80)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8138, &_s9SQLFieldsON);
    atomic_store(result, (unint64_t *)&qword_2542E0B80);
  }
  return result;
}

char *sub_23AD834B8()
{
  _QWORD *v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  int64_t v9;
  unint64_t v10;
  char *isUniquelyReferenced_nonNull_native;
  int64_t v12;
  int64_t v13;
  uint64_t v15;

  v0 = sub_23AD7EB10();
  v1 = v0[2];
  if (v1)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_23ADACD60(0, v1, 0);
    v2 = 0;
    v3 = v15;
    v4 = *(_QWORD *)(v15 + 16);
    do
    {
      v5 = *((_BYTE *)v0 + v2 + 32);
      v6 = *(_QWORD *)(v15 + 24);
      if (v4 + v2 >= v6 >> 1)
        sub_23ADACD60(v6 > 1, v4 + v2 + 1, 1);
      *(_QWORD *)(v15 + 16) = v4 + v2 + 1;
      *(_BYTE *)(v15 + v4 + v2++ + 32) = v5;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x24BEE4AF8];
  }
  sub_23AD7D858(v3, (uint64_t (*)(void))sub_23AF9871C);
  v8 = byte_250BDD988;
  v9 = '\x03';
  v10 = 5;
  if (__OFADD__('\x03', 2))
  {
    __break(1u);
  }
  else
  {
    isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
    v8 = sub_23AF9871C(isUniquelyReferenced_nonNull_native, 5, 1, byte_250BDD988);
    v7 = *((_QWORD *)v8 + 3);
    v12 = v7 >> 1;
    v10 = *((_QWORD *)v8 + 2);
    v9 = v10 + 1;
    if (v7 >> 1 > v10)
      goto LABEL_10;
  }
  v8 = sub_23AF9871C((char *)(v7 > 1), v9, 1, v8);
  v7 = *((_QWORD *)v8 + 3);
  v12 = v7 >> 1;
LABEL_10:
  *((_QWORD *)v8 + 2) = v9;
  v8[v10 + 32] = 31;
  v13 = v10 + 2;
  if (v12 < v13)
    v8 = sub_23AF9871C((char *)(v7 > 1), v13, 1, v8);
  *((_QWORD *)v8 + 2) = v13;
  v8[v9 + 32] = 32;
  return v8;
}

char *sub_23AD836A4()
{
  _QWORD *v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;

  v0 = sub_23AD7EB10();
  v1 = v0[2];
  if (v1)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_23ADACD60(0, v1, 0);
    v2 = 0;
    v3 = v18;
    v4 = *(_QWORD *)(v18 + 16);
    do
    {
      v5 = *((_BYTE *)v0 + v2 + 32);
      v6 = *(_QWORD *)(v18 + 24);
      if (v4 + v2 >= v6 >> 1)
        sub_23ADACD60(v6 > 1, v4 + v2 + 1, 1);
      *(_QWORD *)(v18 + 16) = v4 + v2 + 1;
      *(_BYTE *)(v18 + v4 + v2++ + 32) = v5;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x24BEE4AF8];
  }
  sub_23AD7D858(v3, (uint64_t (*)(void))sub_23AF9871C);
  v7 = byte_250BDDA50;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = sub_23AF9871C(0, 4, 1, byte_250BDDA50);
  v9 = *((_QWORD *)v7 + 2);
  v8 = *((_QWORD *)v7 + 3);
  if (v9 >= v8 >> 1)
    v7 = sub_23AF9871C((char *)(v8 > 1), v9 + 1, 1, v7);
  *((_QWORD *)v7 + 2) = v9 + 1;
  v7[v9 + 32] = 33;
  sub_23AA9F52C(0, &qword_2542E7560);
  type metadata accessor for VFSItem(0);
  if (swift_dynamicCastMetatype())
  {
    v10 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = 0;
    v10 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      v12 = v7[v11 + 32];
      if ((v12 - 28) >= 7)
        __asm { BR              X8 }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23ADACD60(0, *((_QWORD *)v10 + 2) + 1, 1);
      v14 = *((_QWORD *)v10 + 2);
      v13 = *((_QWORD *)v10 + 3);
      if (v14 >= v13 >> 1)
        sub_23ADACD60(v13 > 1, v14 + 1, 1);
      *((_QWORD *)v10 + 2) = v14 + 1;
      v10[v14 + 32] = v12;
      ++v11;
    }
    while (v9 + 1 != v11);
    swift_bridgeObjectRelease_n();
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_23AF9871C(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
  v16 = *((_QWORD *)v10 + 2);
  v15 = *((_QWORD *)v10 + 3);
  if (v16 >= v15 >> 1)
    v10 = sub_23AF9871C((char *)(v15 > 1), v16 + 1, 1, v10);
  *((_QWORD *)v10 + 2) = v16 + 1;
  v10[v16 + 32] = 34;
  return v10;
}

void *sub_23AD83C7C()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v8;

  if (qword_2542E6A78 != -1)
    swift_once();
  v0 = qword_2542EDD40;
  v1 = *(_QWORD *)(qword_2542EDD40 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_23ADACEA0(0, v1, 0);
    v3 = 0;
    v2 = v8;
    v4 = *(_QWORD *)(v8 + 16);
    do
    {
      v5 = *(_BYTE *)(v0 + v3 + 32);
      v6 = *(_QWORD *)(v8 + 24);
      if (v4 + v3 >= v6 >> 1)
        sub_23ADACEA0(v6 > 1, v4 + v3 + 1, 1);
      *(_QWORD *)(v8 + 16) = v4 + v3 + 1;
      *(_BYTE *)(v8 + v4 + v3++ + 32) = v5;
    }
    while (v1 != v3);
    swift_bridgeObjectRelease();
  }
  sub_23AD7D858(v2, (uint64_t (*)(void))sub_23AF98F78);
  return &unk_250BDDA28;
}

uint64_t sub_23AD83DB0()
{
  unint64_t v0;

  v0 = sub_23B1C7118();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_23AD83DF8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = _swift_isClassOrObjCExistentialType();
  v3 = a1 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v3 = a1;
  *(_QWORD *)(v3 + 16) = 0;
  return result;
}

uint64_t getEnumTagSinglePayload for ItemReconciliationHalfSQLFields(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x1D)
    goto LABEL_17;
  if (a2 + 227 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 227) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 227;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 227;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 227;
  }
LABEL_17:
  v6 = ((*a1 >> 1) & 0x1C | (*a1 >> 6)) ^ 0x1F;
  if (v6 >= 0x1C)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for ItemReconciliationHalfSQLFields(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 227 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 227) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1C)
    return ((uint64_t (*)(void))((char *)&loc_23AD83F18 + 4 * byte_23B1D804D[v4]))();
  *a1 = a2 - 29;
  return ((uint64_t (*)(void))((char *)sub_23AD83F4C + 4 * byte_23B1D8048[v4]))();
}

uint64_t sub_23AD83F4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD83F54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD83F5CLL);
  return result;
}

uint64_t sub_23AD83F74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD83F7CLL);
  *(_BYTE *)result = 8 * (((-a2 >> 2) & 7) - 8 * a2);
  return result;
}

uint64_t sub_23AD83F80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD83F88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD83F94(unsigned __int8 *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  v1 = *a1;
  v2 = (char)v1;
  v3 = v1 >> 6;
  v4 = (v1 & 7 | (8 * (v1 >> 6))) - 14;
  if (v2 >= 0)
    return v3;
  else
    return v4;
}

_BYTE *sub_23AD83FB8(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_23AD83FC8(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 7 | ((_BYTE)a2 << 6);
  else
    *result = ((a2 - 2) & 7 | (((a2 - 2) >> 3) << 6)) ^ 0x80;
  return result;
}

ValueMetadata *type metadata accessor for ItemReconciliationHalfSQLFields()
{
  return &type metadata for ItemReconciliationHalfSQLFields;
}

uint64_t getEnumTagSinglePayload for ItemReconciliationSQLFields(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 5)
    goto LABEL_17;
  if (a2 + 251 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 251) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 251;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 251;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 251;
  }
LABEL_17:
  v6 = ((*a1 >> 1) & 4 | (*a1 >> 4) & 3) ^ 7;
  if (v6 >= 4)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for ItemReconciliationSQLFields(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 251 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 251) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 4)
    return ((uint64_t (*)(void))((char *)&loc_23AD840F8 + 4 * byte_23B1D8057[v4]))();
  *a1 = a2 - 5;
  return ((uint64_t (*)(void))((char *)sub_23AD8412C + 4 * byte_23B1D8052[v4]))();
}

uint64_t sub_23AD8412C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD84134(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23AD8413CLL);
  return result;
}

uint64_t sub_23AD84150(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23AD84158);
  *(_BYTE *)result = (16 * ((3 * a2) & 3)) | 8;
  return result;
}

uint64_t sub_23AD8415C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD84164(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23AD84170(unsigned __int8 *a1)
{
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;

  v1 = *a1;
  v2 = (v1 >> 4) & 3;
  v3 = (v1 & 7 | (8 * (v1 >> 6))) + 3;
  if (v2 == 3)
    return v3;
  else
    return v2;
}

_BYTE *sub_23AD84194(_BYTE *result)
{
  *result &= 0xCFu;
  return result;
}

_BYTE *sub_23AD841A4(_BYTE *result, unsigned int a2)
{
  if (a2 < 3)
    *result = *result & 0xC7 | (16 * (a2 & 3));
  else
    *result = (8 * (a2 - 3)) & 0xC0 | (a2 - 3) & 7 | 0x30;
  return result;
}

ValueMetadata *type metadata accessor for ItemReconciliationSQLFields()
{
  return &type metadata for ItemReconciliationSQLFields;
}

_BYTE *sub_23AD841EC@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_23AAA6724(a1, a2);
}

uint64_t sub_23AD84200()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_23AD8428C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  _QWORD v18[12];
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v29 = a6;
  v32 = a4;
  v25 = a3;
  v24 = a2;
  v31 = a1;
  v30 = a1;
  v28 = a5;
  v20 = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)a5 + 88), *(_QWORD *)(*(_QWORD *)a5 + 104), a4);
  v19 = sub_23B1C6C98();
  v18[11] = *(_QWORD *)(v19 - 8);
  v6 = MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v18[3] = (char *)v18 - v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v27 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v22 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v18[4] = (char *)v18 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v26 = (char *)v18 - v14;
  v15 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedConformanceWitness();
  v33 = v15;
  v34 = AssociatedTypeWitness;
  v23 = AssociatedConformanceWitness;
  v35 = AssociatedConformanceWitness;
  v36 = v17;
  type metadata accessor for ReconciliationID();
}

void sub_23AD844A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)(v13 - 312) = a1;
  v14 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 960) = v14;
  *(_QWORD *)(v13 - 968) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 928) = (char *)&a9 - v15;
  v17 = type metadata accessor for SnapshotItem(255, v12, v10, v16);
  v18 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 712) = v18;
  *(_QWORD *)(v13 - 848) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 816) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v13 - 936) = (char *)&a9 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v13 - 688) = (char *)&a9 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v13 - 856) = (char *)&a9 - v26;
  *(_QWORD *)(v13 - 632) = v17;
  *(_QWORD *)(v13 - 640) = *(_QWORD *)(v17 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v13 - 912) = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v13 - 976) = (char *)&a9 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v13 - 792) = (char *)&a9 - v32;
  MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v13 - 680) = (char *)&a9 - v33;
  *(_QWORD *)(v13 - 144) = v12;
  *(_QWORD *)(v13 - 136) = v11;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v9;
  type metadata accessor for TestingOperation();
}

void sub_23AD8468C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v13 - 728) = a1;
  *(_QWORD *)(v13 - 736) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 744) = (char *)&a9 - v14;
  v15 = sub_23B1C5E4C();
  *(_QWORD *)(v13 - 488) = v15;
  *(_QWORD *)(v13 - 496) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 512) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 920) = (char *)&a9 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 720) = (char *)&a9 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v13 - 520) = (char *)&a9 - v23;
  MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v13 - 784) = (char *)&a9 - v24;
  *(_QWORD *)(v13 - 144) = v12;
  *(_QWORD *)(v13 - 136) = v11;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v9;
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD847BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)(v14 - 296) = a1;
  *(_QWORD *)(v14 - 336) = *(_QWORD *)(a1 - 8);
  v15 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 832) = (char *)&a9 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v14 - 328) = (char *)&a9 - v17;
  *(_QWORD *)(v14 - 360) = v12;
  v18 = sub_23B1C6C98();
  *(_QWORD *)(v14 - 416) = v18;
  *(_QWORD *)(v14 - 424) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v14 - 624) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v14 - 896) = (char *)&a9 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v14 - 432) = (char *)&a9 - v24;
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v14 - 864) = (char *)&a9 - v25;
  *(_QWORD *)(v14 - 144) = v13;
  *(_QWORD *)(v14 - 136) = v11;
  *(_QWORD *)(v14 - 224) = v11;
  *(_QWORD *)(v14 - 128) = v10;
  *(_QWORD *)(v14 - 120) = v9;
  *(_QWORD *)(v14 - 208) = v9;
  type metadata accessor for ItemReconciliation();
}

void sub_23AD84904(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[80];

  *(_QWORD *)(v4 - 320) = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 480) = &v79[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v4 - 904) = &v79[-v8];
  v9 = MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v4 - 440) = &v79[-v10];
  v11 = MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v4 - 568) = &v79[-v12];
  v13 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v4 - 760) = &v79[-v14];
  v15 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v4 - 776) = &v79[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v4 - 656) = &v79[-v18];
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v4 - 448) = &v79[-v20];
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v4 - 464) = &v79[-v22];
  v23 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v4 - 576) = &v79[-v24];
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v4 - 824) = &v79[-v26];
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v4 - 544) = &v79[-v28];
  v29 = MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v4 - 840) = &v79[-v30];
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v4 - 872) = &v79[-v31];
  *(_QWORD *)(v4 - 200) = v32;
  v33 = sub_23B1C6C98();
  *(_QWORD *)(v4 - 608) = v33;
  *(_QWORD *)(v4 - 600) = *(_QWORD *)(v33 - 8);
  v34 = MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v4 - 696) = &v79[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v4 - 768) = &v79[-v37];
  v38 = MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)(v4 - 800) = &v79[-v39];
  v40 = MEMORY[0x24BDAC7A8](v38);
  *(_QWORD *)(v4 - 752) = &v79[-v41];
  MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)(v4 - 616) = &v79[-v42];
  v43 = sub_23B1C6C98();
  *(_QWORD *)(v4 - 240) = *(_QWORD *)(v43 - 8);
  *(_QWORD *)(v4 - 232) = v43;
  v44 = MEMORY[0x24BDAC7A8](v43);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v46 = MEMORY[0x24BDAC7A8](v45);
  *(_QWORD *)(v4 - 536) = &v79[-v47];
  v48 = MEMORY[0x24BDAC7A8](v46);
  v49 = MEMORY[0x24BDAC7A8](v48);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v51 = MEMORY[0x24BDAC7A8](v50);
  *(_QWORD *)(v4 - 648) = &v79[-v52];
  v53 = MEMORY[0x24BDAC7A8](v51);
  *(_QWORD *)(v4 - 528) = &v79[-v54];
  v55 = MEMORY[0x24BDAC7A8](v53);
  *(_QWORD *)(v4 - 72) = v1;
  *(_QWORD *)(v4 - 184) = *(_QWORD *)(v1 - 8);
  v56 = MEMORY[0x24BDAC7A8](v55);
  *(_QWORD *)(v4 - 456) = &v79[-((v57 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v58 = MEMORY[0x24BDAC7A8](v56);
  *(_QWORD *)(v4 - 344) = &v79[-v59];
  v60 = MEMORY[0x24BDAC7A8](v58);
  *(_QWORD *)(v4 - 704) = &v79[-v61];
  v62 = MEMORY[0x24BDAC7A8](v60);
  *(_QWORD *)(v4 - 352) = &v79[-v63];
  v64 = MEMORY[0x24BDAC7A8](v62);
  *(_QWORD *)(v4 - 584) = &v79[-v65];
  v66 = MEMORY[0x24BDAC7A8](v64);
  *(_QWORD *)(v4 - 392) = &v79[-v67];
  v68 = MEMORY[0x24BDAC7A8](v66);
  *(_QWORD *)(v4 - 472) = &v79[-v69];
  v70 = MEMORY[0x24BDAC7A8](v68);
  *(_QWORD *)(v4 - 304) = &v79[-v71];
  v72 = MEMORY[0x24BDAC7A8](v70);
  *(_QWORD *)(v4 - 560) = &v79[-v73];
  v74 = MEMORY[0x24BDAC7A8](v72);
  *(_QWORD *)(v4 - 592) = &v79[-v75];
  v76 = MEMORY[0x24BDAC7A8](v74);
  MEMORY[0x24BDAC7A8](v76);
  *(_QWORD *)(v4 - 400) = &v79[-v77];
  *(_QWORD *)(v4 - 264) = v3;
  *(_QWORD *)(v4 - 272) = v2;
  *(_QWORD *)(v4 - 384) = type metadata accessor for ItemReconciliationHalf(0, v3, v2, v78);
  if (*(_DWORD *)(v4 - 256) <= 0x17u)
    __asm { BR              X10 }
  sub_23B1C704C();
  __break(1u);
  JUMPOUT(0x23AD89658);
}

void sub_23AD896BC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23AD89714()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
}

void sub_23AD897E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a10, v11 + *(_QWORD *)(v10 + 536), v12);
  swift_storeEnumTagMultiPayload();
  sub_23B06BF34();
}

void sub_23AD89840(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = a1;
  type metadata accessor for ThrottlingKey();
}

uint64_t sub_23AD89858(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 0, 1, a1);
}

void sub_23AD89894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);

}

uint64_t sub_23AD898F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  v0 = sub_23AF1A8FC();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);

  return v0;
}

uint64_t sub_23AD89978()
{
  return sub_23AD9CC04((void (*)(void))sub_23AD898F8);
}

void type metadata accessor for Propagation.PropagationJob()
{
  JUMPOUT(0x23B861318);
}

void sub_23AD89990()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD89A60()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  unint64_t v6;

  result = sub_23B1C6C98();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_23B1C6C98();
    if (v2 <= 0x3F)
    {
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v5);
      result = sub_23B1C6C98();
      if (v6 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        swift_getAssociatedConformanceWitness();
        swift_getAssociatedConformanceWitness();
        type metadata accessor for FileItemVersion();
      }
    }
  }
  return result;
}

void sub_23AD89C50()
{
  type metadata accessor for Propagation.PropagationError();
}

uint64_t sub_23AD89C70()
{
  swift_getMetatypeMetadata();
  return sub_23B1C644C();
}

uint64_t sub_23AD89C90(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v8;

  MEMORY[0x24BDAC7A8](a1);
  v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v2);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v2, 1, TupleTypeMetadata2) != 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v2, AssociatedTypeWitness);
    return 0;
  }
  return v6;
}

unint64_t sub_23AD89D90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[80];

  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1CA760;
  *(_QWORD *)(inited + 32) = sub_23B1C63E0();
  *(_QWORD *)(inited + 40) = v7;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  v8 = sub_23B1C6434();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v8;
  *(_QWORD *)(inited + 56) = v9;
  return sub_23AAE9EB4(inited);
}

void sub_23AD89E60()
{
  sub_23AD89C50();
}

uint64_t sub_23AD89E78(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D8650, a1);
  return sub_23B1C7430();
}

uint64_t sub_23AD89EAC(uint64_t a1)
{
  MEMORY[0x23B8613CC](&unk_23B1D8650, a1);
  return sub_23B1C7424();
}

_QWORD *sub_23AD89EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  _BYTE *v8;
  _BYTE v9[248];
  _BYTE v10[248];
  _QWORD v11[31];
  _BYTE v12[248];
  _BYTE v13[248];

  if (!sub_23AE4F6B4())
  {
    sub_23AAF8E48((uint64_t)v10);
LABEL_7:
    v8 = v10;
    goto LABEL_8;
  }
  result = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t))(**(_QWORD **)(a1 + 40) + 264))(v11, a2);
  if (v3)
    return result;
  sub_23AA724E8((uint64_t)v11, (uint64_t)v10, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v11, (uint64_t)v12, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v12) == 1 || (v12[33] & 1) != 0)
    goto LABEL_7;
  sub_23AAB7E4C(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  sub_23AAF8E48((uint64_t)v9);
  v8 = v9;
LABEL_8:
  sub_23AA724E8((uint64_t)v8, (uint64_t)v13, &qword_2542E5050);
  return (_QWORD *)sub_23AA724E8((uint64_t)v13, a3, &qword_2542E5050);
}

uint64_t sub_23AD89FEC()
{
  return 0x692D657461657263;
}

uint64_t sub_23AD8A00C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 616);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5))
    return 4;
  else
    return *(unsigned __int8 *)(v1 + *(int *)(v5 + 40));
}

uint64_t sub_23AD8A0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 616);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5))
    return 2;
  v7 = v1 + *(int *)(v5 + 40);
  return *(unsigned __int8 *)(v7 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_23AD8A1D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 616);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5);
  result = 0;
  if (!v6)
  {
    v8 = v1 + *(int *)(v5 + 40);
    return *(_QWORD *)(v8 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_23AD8A2C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 616);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v6 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5))
  {
    v7 = 0;
  }
  else
  {
    v8 = v1 + *(int *)(v5 + 40);
    v7 = *(unsigned int *)(v8 + 4);
    v6 = *(_BYTE *)(v8 + 8);
  }
  return v7 | ((unint64_t)v6 << 32);
}

uint64_t sub_23AD8A3BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 616);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  v8 = 1;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v3, 1, v7);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!v9)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v3, AssociatedTypeWitness);
    v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v8, 1, AssociatedTypeWitness);
}

uint64_t sub_23AD8A4C0()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7340();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v1 = *(void **)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 544));
  if (v1)
  {
    v2 = objc_msgSend(v1, sel_description);
    sub_23B1C63E0();

  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0;
}

uint64_t sub_23AD8A690()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 131) & 8) != 0)
    return 2;
  else
    return 4;
}

void sub_23AD8A6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v15 = a2;
  v13 = a1;
  v11 = type metadata accessor for JobLockRule(0, *(_QWORD *)(*(_QWORD *)v4 + 568), *(_QWORD *)(*(_QWORD *)v4 + 584), a4);
  v14 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v12 = (char *)&v10 - v5;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = swift_getAssociatedConformanceWitness();
  v16 = AssociatedTypeWitness;
  v17 = v7;
  v18 = AssociatedConformanceWitness;
  v19 = v9;
  type metadata accessor for FileItemVersion();
}

void sub_23AD8A7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  *(_QWORD *)(v11 - 544) = swift_getTupleTypeMetadata2();
  v13 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 520) = v13;
  *(_QWORD *)(v11 - 528) = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v11 - 536) = (char *)&a9 - v14;
  v15 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 496) = v15;
  *(_QWORD *)(v11 - 504) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v11 - 488) = (char *)&a9 - v17;
  *(_QWORD *)(v11 - 480) = a1;
  *(_QWORD *)(v11 - 512) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v11 - 552) = (char *)&a9 - v18;
  v19 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 416) = v19;
  *(_QWORD *)(v11 - 424) = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v11 - 408) = (char *)&a9 - v21;
  *(_QWORD *)(v11 - 384) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v11 - 392) = (char *)&a9 - v22;
  *(_QWORD *)(v11 - 176) = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v26 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v25);
  *(_QWORD *)(v11 - 320) = v26;
  *(_QWORD *)(v11 - 328) = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v11 - 224) = (char *)&a9 - v27;
  v28 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 360) = v10;
  v30 = type metadata accessor for ItemState(255, v10, v28, v29);
  v31 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 368) = v31;
  *(_QWORD *)(v11 - 376) = *(_QWORD *)(v31 - 8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v11 - 432) = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v11 - 232) = (char *)&a9 - v35;
  *(_QWORD *)(v11 - 344) = v30;
  *(_QWORD *)(v11 - 336) = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v11 - 352) = (char *)&a9 - v36;
  *(_QWORD *)(v11 - 240) = AssociatedTypeWitness;
  v37 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 256) = *(_QWORD *)(v37 - 8);
  *(_QWORD *)(v11 - 248) = v37;
  MEMORY[0x24BDAC7A8](v37);
  *(_QWORD *)(v11 - 264) = (char *)&a9 - v38;
  v39 = swift_getAssociatedTypeWitness();
  v40 = swift_getAssociatedTypeWitness();
  v41 = swift_getAssociatedConformanceWitness();
  v42 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 128) = v39;
  *(_QWORD *)(v11 - 120) = v40;
  *(_QWORD *)(v11 - 112) = v41;
  *(_QWORD *)(v11 - 104) = v42;
  type metadata accessor for FileItemVersion();
}

void sub_23AD8ABC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v13 - 296) = a1;
  v14 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 272) = v14;
  *(_QWORD *)(v13 - 280) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 288) = (char *)&a9 - v15;
  v17 = type metadata accessor for SnapshotItem(255, v11, v9, v16);
  v18 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 304) = v18;
  *(_QWORD *)(v13 - 312) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 200) = v17;
  *(_QWORD *)(v13 - 192) = (char *)&a9 - v20;
  *(_QWORD *)(v13 - 208) = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v13 - 216) = (char *)&a9 - v21;
  *(_QWORD *)(v13 - 128) = v11;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 464) = v12;
  *(_QWORD *)(v13 - 184) = v9;
  *(_QWORD *)(v13 - 112) = v9;
  *(_QWORD *)(v13 - 104) = v10;
  *(_QWORD *)(v13 - 472) = v10;
  type metadata accessor for ItemReconciliation();
}

void sub_23AD8ACCC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23B1C6C98();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  sub_23AB003A0();
}

int *sub_23AD8AD54()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unsigned __int8 *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  if (!v2)
  {
    *(_QWORD *)(v10 - 576) = v0;
    *(_QWORD *)(v10 - 568) = v8;
    *(_QWORD *)(v10 - 560) = v7;
    *(_QWORD *)(v10 - 584) = v1;
    v0 = *(int **)(v10 - 184);
    *(_QWORD *)(v10 - 176) = v3;
    *(_QWORD *)(v10 - 168) = 0;
    v11 = *(_QWORD **)(v10 - 72);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v9, 1, v4) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 560) + 8))(v9, *(_QWORD *)(v10 - 568));
      return 0;
    }
    v13 = *(_QWORD *)(v10 - 176);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v13, v9, v4);
    v14 = *(_QWORD *)(v10 - 168);
    v15 = *(_QWORD *)(v10 - 192);
    (*(void (**)(_QWORD, _QWORD))(**(_QWORD **)(*(_QWORD *)(v10 - 160) + 40) + 248))(*(_QWORD *)(v10 - 576), *(_QWORD *)((char *)v11 + *(_QWORD *)(*v11 + 592)));
    *(_QWORD *)(v10 - 168) = v14;
    if (v14)
    {
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v4);
      return v0;
    }
    v16 = *(_QWORD *)(v10 - 208);
    v17 = *(_QWORD *)(v10 - 200);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v15, 1, v17) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v4);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 312) + 8))(v15, *(_QWORD *)(v10 - 304));
      return 0;
    }
    *(_QWORD *)(v10 - 312) = v6;
    *(_QWORD *)(v10 - 304) = v4;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v16 + 32))(*(_QWORD *)(v10 - 216), v15, v17);
    v19 = (uint64_t *)(v13 + *(int *)(type metadata accessor for ItemReconciliationHalf(0, v5, (uint64_t)v0, v18) + 68));
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[2];
    v23 = v19[3];
    v24 = v19[4];
    v25 = v19[5];
    v26 = v19[6];
    v27 = v11;
    v28 = (_QWORD *)((char *)v11 + *(_QWORD *)(*v11 + 624));
    v29 = v16;
    v30 = *v28;
    v31 = v28[1];
    v32 = v28[2];
    *v28 = v20;
    v28[1] = v21;
    v28[2] = v22;
    v28[3] = v23;
    v28[4] = v24;
    v28[5] = v25;
    v28[6] = v26;
    sub_23AAAE4B4(v20, v21, v22);
    v33 = v32;
    v34 = *(_QWORD *)(v10 - 200);
    sub_23AAAEE4C(v30, v31, v33);
    v35 = *(int **)(v10 - 216);
    v36 = *(_QWORD *)(v10 - 296);
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(_QWORD *)(v10 - 288);
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v38, (char *)v35 + *(int *)(v34 + 40), v36);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v36);
    v39 = (char *)v27 + *(_QWORD *)(*v27 + 600);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v10 - 280) + 40))(v39, v38, *(_QWORD *)(v10 - 272));
    swift_endAccess();
    v40 = *(_QWORD *)(v10 - 240);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(_QWORD *)(v10 - 264);
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v42, (char *)v35 + *(int *)(v34 + 36), v40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
    v43 = (char *)v27 + *(_QWORD *)(*v27 + 608);
    swift_beginAccess();
    v44 = v43;
    v0 = v35;
    (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v10 - 256) + 40))(v44, v42, *(_QWORD *)(v10 - 248));
    swift_endAccess();
    v45 = MEMORY[0x23B8613CC](&unk_23B1DD478, v34);
    v46 = *(_QWORD *)(v10 - 224);
    sub_23AF21A28(v34, v45, v46);
    v47 = *(_QWORD *)(v10 - 232);
    v48 = *(_QWORD *)(v10 - 168);
    sub_23AB0541C(v46, v47);
    *(_QWORD *)(v10 - 168) = v48;
    if (v48)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 328) + 8))(v46, *(_QWORD *)(v10 - 320));
      (*(void (**)(int *, uint64_t))(v29 + 8))(v35, v34);
      v4 = *(_QWORD *)(v10 - 304);
LABEL_12:
      v6 = *(_QWORD *)(v10 - 312);
      v13 = *(_QWORD *)(v10 - 176);
      goto LABEL_7;
    }
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 328) + 8))(v46, *(_QWORD *)(v10 - 320));
    v49 = *(_QWORD *)(v10 - 336);
    v50 = *(_QWORD *)(v10 - 344);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v50) == 1)
    {
      (*(void (**)(int *, uint64_t))(*(_QWORD *)(v10 - 208) + 8))(v0, v34);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v10 - 312) + 8))(*(_QWORD *)(v10 - 176), *(_QWORD *)(v10 - 304));
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 376) + 8))(v47, *(_QWORD *)(v10 - 368));
      return 0;
    }
    v51 = *(_QWORD *)(v10 - 352);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))(v51, v47, v50);
    v52 = *(_QWORD *)(*(_QWORD *)(v10 - 160) + 32);
    v53 = sub_23AE4F6B4();
    v54 = (unsigned __int8 *)(v51 + *(int *)(v50 + 40));
    if (v53)
    {
      v55 = *v54;
      v56 = type metadata accessor for ItemMetadata();
      v0 = (int *)v56;
      v54[*(int *)(v56 + 80)] = v55 != 2;
      v57 = *(_QWORD *)(v10 - 392);
      if (v55 != 2)
        v54[*(int *)(v56 + 84)] = 0;
      v4 = *(_QWORD *)(v10 - 304);
      if (v54[*(int *)(v56 + 84)])
      {
        v58 = *(_QWORD *)(v10 - 168);
        v59 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v52 + 520))(v51);
        *(_QWORD *)(v10 - 168) = v58;
        if (v58)
        {
          (*(void (**)(uint64_t, _QWORD))(v49 + 8))(v51, *(_QWORD *)(v10 - 344));
          (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v10 - 208) + 8))(*(_QWORD *)(v10 - 216), *(_QWORD *)(v10 - 200));
          goto LABEL_12;
        }
        *(_QWORD *)&v54[v0[19]] = v59;
      }
      v60 = *(_QWORD *)(v10 - 448);
      v50 = *(_QWORD *)(v10 - 344);
    }
    else
    {
      v0 = (int *)type metadata accessor for ItemMetadata();
      v54[v0[20]] = 0;
      v60 = *(_QWORD *)(v10 - 448);
      v57 = *(_QWORD *)(v10 - 392);
    }
    v61 = *(_QWORD *)(v10 - 176);
    v62 = *(_QWORD *)(v10 - 352);
    v63 = v62 + *(int *)(v50 + 40);
    type metadata accessor for ItemMetadata();
    *(_BYTE *)(v63 + v0[18]) = 0;
    v64 = *(_QWORD *)(v10 - 432);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v64, v62, v50);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v64, 0, 1, v50);
    v65 = (char *)v27 + *(_QWORD *)(*v27 + 616);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v10 - 376) + 40))(v65, v64, *(_QWORD *)(v10 - 368));
    swift_endAccess();
    v66 = v61 + *(int *)(*(_QWORD *)(v10 - 304) + 52);
    v67 = *(_QWORD *)(v10 - 424);
    v68 = *(_QWORD *)(v10 - 408);
    v69 = *(_QWORD *)(v10 - 416);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v68, v66, v69);
    v70 = *(_QWORD *)(v10 - 384);
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v70 + 48))(v68, 1, *(_QWORD *)(v10 - 360)) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v69);
    }
    else
    {
      v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 32);
      v72 = *(_QWORD *)(v10 - 360);
      *(_QWORD *)(v10 - 160) = v71;
      v71(v57, v68, v72);
      v74 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v10 - 464), *(_QWORD *)(v10 - 472), v73);
      v75 = *(_QWORD *)(v10 - 504);
      v76 = *(_QWORD *)(v10 - 488);
      v77 = *(_QWORD *)(v10 - 496);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v76, v66 + *(int *)(v74 + 48), v77);
      v78 = *(_QWORD *)(v10 - 512);
      v79 = *(_QWORD *)(v10 - 480);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v76, 1, v79) == 1)
      {
        (*(void (**)(_QWORD, _QWORD))(v70 + 8))(*(_QWORD *)(v10 - 392), *(_QWORD *)(v10 - 360));
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v77);
      }
      else
      {
        v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32);
        v81 = *(_QWORD *)(v10 - 552);
        v80(v81, v76, v79);
        v82 = *(_QWORD *)(v10 - 544);
        v83 = *(_QWORD *)(v10 - 536);
        v84 = v79;
        v85 = v83 + *(int *)(v82 + 48);
        (*(void (**)(uint64_t, _QWORD, _QWORD))(v10 - 160))(v83, *(_QWORD *)(v10 - 392), *(_QWORD *)(v10 - 360));
        v86 = v84;
        v50 = *(_QWORD *)(v10 - 344);
        v80(v85, v81, v86);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v83, 0, 1, v82);
        v87 = (char *)v27 + *(_QWORD *)(*v27 + 632);
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v10 - 528) + 40))(v87, v83, *(_QWORD *)(v10 - 520));
        swift_endAccess();
      }
    }
    v88 = *(_QWORD *)(v10 - 336);
    v89 = *(_QWORD *)(v10 - 200);
    v90 = *(_QWORD *)(v10 - 456);
    swift_beginAccess();
    sub_23AD4332C((uint64_t)(v27 + 6), v10 - 128);
    v91 = v27[14];
    v92 = *(_QWORD *)(v10 - 352);
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10 - 384) + 16))(v60, v92, *(_QWORD *)(v10 - 360));
    swift_storeEnumTagMultiPayload();
    v0 = (int *)sub_23ABD2E40(v10 - 128, v91, v60, v93);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 400) + 8))(v60, v90);
    sub_23AD43374(v10 - 128);
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v92, v50);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v10 - 208) + 8))(*(_QWORD *)(v10 - 216), v89);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v10 - 312) + 8))(*(_QWORD *)(v10 - 176), *(_QWORD *)(v10 - 304));
  }
  return v0;
}

void sub_23AD8B610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[22];
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v16[8] = a8;
  v16[9] = a7;
  v18 = a6;
  v19 = a3;
  v20 = a5;
  v26 = a4;
  v16[20] = a2;
  v16[21] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16[18] = type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  v10 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v10);
  v21 = (char *)v16 - v11;
  v12 = swift_getAssociatedTypeWitness();
  v13 = swift_getAssociatedTypeWitness();
  v14 = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedConformanceWitness();
  v22 = v12;
  v23 = v13;
  v24 = v14;
  v25 = v15;
  type metadata accessor for FileItemVersion();
}

void sub_23AD8B7A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 232) = a1;
  v14 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 136) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 336) = v10;
  *(_QWORD *)(v13 - 104) = v9;
  *(_QWORD *)(v13 - 96) = v11;
  *(_QWORD *)(v13 - 344) = v11;
  type metadata accessor for Reconciliation.ReconcileAfterPropagation();
}

void sub_23AD8B804(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  uint64_t v53;
  int v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  void (*v62)(uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  id v88;
  id v89;
  void *v90;
  id v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _BYTE v114[64];

  *(_QWORD *)(v5 - 248) = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v5 - 224) = &v114[-v8];
  *(_QWORD *)(v5 - 400) = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v5 - 392) = &v114[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = type metadata accessor for SnapshotItem(0, v4, v2, v10);
  *(_QWORD *)(v5 - 192) = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v5 - 384) = &v114[-v13];
  *(_QWORD *)(v5 - 352) = v3;
  v14 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v5 - 376) = &v114[-v15];
  *(_QWORD *)(v5 - 296) = v4;
  *(_QWORD *)(v5 - 328) = v2;
  v17 = type metadata accessor for ItemPropagationResult(0, v4, v2, v16);
  *(_QWORD *)(v5 - 312) = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v5 - 320) = &v114[-v18];
  *(_QWORD *)(v5 - 304) = v19;
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v20 = sub_23B1C74F0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (void **)&v114[-v22];
  *(_QWORD *)(v5 - 280) = v11;
  v24 = sub_23B1C6C98();
  *(_QWORD *)(v5 - 152) = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v5 - 144) = v24;
  v25 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v5 - 240) = &v114[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v5 - 216) = a1;
  *(_QWORD *)(v5 - 160) = &v114[-v27];
  if (v1)
  {
    *(_QWORD *)(v5 - 120) = 0x3A7265766D6F6420;
    *(_QWORD *)(v5 - 112) = 0xE800000000000000;
    v28 = objc_msgSend(v1, sel_description);
    sub_23B1C63E0();

    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v30 = *(_QWORD *)(v5 - 120);
    v29 = *(_QWORD *)(v5 - 112);
  }
  else
  {
    v30 = 0;
    v29 = 0xE000000000000000;
  }
  v31 = *(_QWORD *)(v5 - 256);
  (*(void (**)(void **, _QWORD, uint64_t))(v21 + 16))(v23, *(_QWORD *)(v5 - 264), v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v32 = *v23;
    *(_QWORD *)(v5 - 120) = 0;
    *(_QWORD *)(v5 - 112) = 0xE000000000000000;
    v33 = v32;
    sub_23B1C64F4();
    v34 = *(_QWORD *)(v5 - 288);
    MEMORY[0x23B8613CC](&unk_23B1DCA68, v34);
    v35 = *(_QWORD *)(v5 - 272);
    sub_23B1C7340();
    sub_23B1C64F4();
    *(_QWORD *)(v5 - 264) = *(_QWORD *)(v5 - 120);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 192) + 56))(*(_QWORD *)(v5 - 160), 1, 1, *(_QWORD *)(v5 - 280));

    v36 = 0;
    *(_QWORD *)(v5 - 256) = 0;
    v37 = *(_QWORD *)(v5 - 168);
LABEL_19:
    v48 = *(_QWORD *)(v5 - 184);
    goto LABEL_20;
  }
  v38 = *(_QWORD *)(v5 - 312);
  v39 = *(_QWORD *)(v5 - 304);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48))(v23, 1, v39) == 1)
  {
    v37 = *(_QWORD *)(v5 - 168);
    swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v41 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
    v42 = swift_checkMetadataState();
    v43 = v41(v42, AssociatedConformanceWitness);
    v44 = *(_QWORD *)(v5 - 328);
    v45 = *(_QWORD *)(v5 - 296);
    if ((v43 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v47 = type metadata accessor for FileTreeError(0, v45, v44, v46);
      MEMORY[0x23B8613CC](&unk_23B1D40CC, v47);
      v32 = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 192) + 56))(*(_QWORD *)(v5 - 160), 1, 1, *(_QWORD *)(v5 - 280));
      *(_QWORD *)(v5 - 264) = 0;
      v36 = 0;
      *(_QWORD *)(v5 - 256) = 0;
      v35 = *(_QWORD *)(v5 - 272);
      v48 = *(_QWORD *)(v5 - 184);
      v34 = *(_QWORD *)(v5 - 288);
      goto LABEL_20;
    }
    *(_QWORD *)(v5 - 120) = 0;
    *(_QWORD *)(v5 - 112) = 0xE000000000000000;
    sub_23B1C6EFC();
    v68 = *(_QWORD *)(v5 - 112);
    *(_QWORD *)(v5 - 120) = *(_QWORD *)(v5 - 120);
    *(_QWORD *)(v5 - 112) = v68;
    sub_23B1C64F4();
    v34 = *(_QWORD *)(v5 - 288);
    MEMORY[0x23B8613CC](&unk_23B1DCA68, v34);
    v35 = *(_QWORD *)(v5 - 272);
    sub_23B1C7340();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    *(_QWORD *)(v5 - 264) = *(_QWORD *)(v5 - 120);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 192) + 56))(*(_QWORD *)(v5 - 160), 1, 1, *(_QWORD *)(v5 - 280));
    v32 = 0;
    v36 = 0;
    *(_QWORD *)(v5 - 256) = 0;
    goto LABEL_19;
  }
  *(_QWORD *)(v5 - 424) = v30;
  *(_QWORD *)(v5 - 408) = v29;
  (*(void (**)(_QWORD, void **, uint64_t))(v38 + 32))(*(_QWORD *)(v5 - 320), v23, v39);
  v37 = *(_QWORD *)(v5 - 168);
  v49 = v37 + *(_QWORD *)(*(_QWORD *)v37 + 536);
  swift_getAssociatedTypeWitness();
  v50 = v14;
  v51 = swift_getAssociatedConformanceWitness();
  v52 = *(uint64_t (**)(void))(v51 + 64);
  v53 = swift_checkMetadataState();
  *(_QWORD *)(v5 - 256) = v49;
  *(_QWORD *)(v5 - 336) = v53;
  *(_QWORD *)(v5 - 264) = v51;
  *(_QWORD *)(v5 - 416) = v52;
  v54 = v52() & 1;
  v55 = *(_QWORD *)(v5 - 328);
  v56 = *(void (**)(uint64_t, uint64_t))(v55 + 64);
  v57 = *(_QWORD *)(v5 - 376);
  v56(*(_QWORD *)(v5 - 296), v55);
  v58 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 64);
  v59 = v31;
  v60 = *(_QWORD *)(v5 - 352);
  LODWORD(v49) = v58(v60, v59) & 1;
  *(_QWORD *)(v5 - 344) = v50;
  v61 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
  v61(v57, v60);
  if (v54 != (_DWORD)v49)
  {
    v62 = v56;
    swift_bridgeObjectRelease();
    v63 = *(_QWORD *)(v5 - 296);
    v65 = type metadata accessor for FileTreeError(0, v63, v55, v64);
    MEMORY[0x23B8613CC](&unk_23B1D40CC, v65);
    v32 = (void *)swift_allocError();
    v67 = v66;
    if (((*(uint64_t (**)(_QWORD, _QWORD))(v5 - 416))(*(_QWORD *)(v5 - 336), *(_QWORD *)(v5 - 264)) & 1) != 0)
    {
      sub_23B0EB9DC();
LABEL_16:
      v76 = 0;
LABEL_18:
      v34 = *(_QWORD *)(v5 - 288);
      v77 = *(_QWORD *)(v5 - 320);
      (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 344) + 56))(v67, v76, 1, *(_QWORD *)(v5 - 352));
      sub_23B1C6C98();
      swift_getTupleTypeMetadata2();
      v62(v63, v55);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 192) + 56))(*(_QWORD *)(v5 - 160), 1, 1, *(_QWORD *)(v5 - 280));
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 312) + 8))(v77, *(_QWORD *)(v5 - 304));
      *(_QWORD *)(v5 - 264) = 0;
      v36 = 0;
      *(_QWORD *)(v5 - 256) = 0;
      v37 = *(_QWORD *)(v5 - 168);
      v35 = *(_QWORD *)(v5 - 272);
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  v69 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 - 264) + 72);
  v70 = *(_QWORD *)(v5 - 336);
  *(_QWORD *)(v5 - 416) = v69;
  v71 = v69(v70) & 1;
  v56(*(_QWORD *)(v5 - 296), v55);
  v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 72))(v60, v59) & 1;
  v61(v57, v60);
  if (v71 != v72)
  {
    v62 = v56;
    swift_bridgeObjectRelease();
    v63 = *(_QWORD *)(v5 - 296);
    v74 = type metadata accessor for FileTreeError(0, v63, v55, v73);
    MEMORY[0x23B8613CC](&unk_23B1D40CC, v74);
    v32 = (void *)swift_allocError();
    v67 = v75;
    if (((*(uint64_t (**)(_QWORD, _QWORD))(v5 - 416))(*(_QWORD *)(v5 - 336), *(_QWORD *)(v5 - 264)) & 1) != 0)
    {
      sub_23B0EBA04();
      goto LABEL_16;
    }
LABEL_17:
    v76 = 1;
    goto LABEL_18;
  }
  v34 = *(_QWORD *)(v5 - 288);
  v93 = *(_QWORD *)(v5 - 272);
  v94 = *(char *)(v93 + *(int *)(v34 + 40));
  v95 = *(_QWORD *)(v5 - 320);
  v96 = sub_23AF219A4(*(_QWORD *)(v5 - 296), v55);
  v97 = *(_QWORD *)(v5 - 184);
  if (qword_23B1D86D8[v94] == qword_23B1D86D8[v96])
    goto LABEL_25;
  if (v94 == 3)
  {
    if (v96)
    {
LABEL_31:
      swift_bridgeObjectRelease();
      v113 = type metadata accessor for FileTreeError(0, *(_QWORD *)(v5 - 296), *(_QWORD *)(v5 - 328), v112);
      MEMORY[0x23B8613CC](&unk_23B1D40CC, v113);
      v35 = v93;
      v32 = (void *)swift_allocError();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5 - 192) + 56))(*(_QWORD *)(v5 - 160), 1, 1, *(_QWORD *)(v5 - 280));
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 312) + 8))(v95, *(_QWORD *)(v5 - 304));
      v48 = v97;
      *(_QWORD *)(v5 - 264) = 0;
      v36 = 0;
      *(_QWORD *)(v5 - 256) = 0;
LABEL_20:
      v78 = *(_QWORD *)(v5 - 232);
      v79 = *(_QWORD *)(v78 - 8);
      v80 = *(_QWORD *)(v5 - 136);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v80, v48, v78);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56))(v80, 0, 1, v78);
      v81 = *(_QWORD *)(v37 + *(_QWORD *)(*(_QWORD *)v37 + 592));
      v82 = v37;
      v83 = *(_QWORD *)(v34 - 8);
      v84 = v34;
      v85 = *(_QWORD *)(v5 - 128);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 16))(v85, v35, v84);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v84);
      v86 = *(_QWORD *)(v5 - 240);
      (*(void (**)(uint64_t))(*(_QWORD *)(v5 - 152) + 16))(v86);
      if (v32)
      {
        v87 = *(void **)(v82 + *(_QWORD *)(*(_QWORD *)v82 + 544));
        v88 = v32;
        v89 = v87;
      }
      else
      {
        v87 = 0;
      }
      v90 = *(void **)(v5 - 72);
      v91 = v90;
      v92 = (uint64_t *)swift_retain();
      sub_23AD44420(v92, *(_QWORD *)(v5 - 136), v81, 0, *(_QWORD *)(v5 - 128), v86, *(_QWORD *)(v5 - 256), v36, *(_QWORD **)(v5 - 224), (uint64_t)v90, (uint64_t)v32, (uint64_t)v87);
    }
  }
  else if ((_BYTE)v94 || v96 != 3)
  {
    goto LABEL_31;
  }
LABEL_25:
  v98 = *(_QWORD *)(v5 - 392);
  v99 = *(_QWORD *)(v5 - 296);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 400) + 16))(v98, v95, v99);
  v100 = *(_QWORD *)(v5 - 384);
  sub_23AF15480(v98, v99, *(_QWORD *)(v5 - 328), v100);
  v101 = *(_QWORD *)(v5 - 192);
  v102 = *(_QWORD *)(v5 - 160);
  v103 = *(_QWORD *)(v5 - 280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v101 + 16))(v102, v100, v103);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56))(v102, 0, 1, v103);
  v104 = *(_QWORD *)(v5 - 304);
  v105 = *(_QWORD *)(v95 + *(int *)(v104 + 36));
  *(_DWORD *)(v5 - 296) = *(unsigned __int8 *)(v95 + *(int *)(v104 + 40));
  *(_QWORD *)(v5 - 120) = 0;
  *(_QWORD *)(v5 - 112) = 0xE000000000000000;
  sub_23B1C64F4();
  MEMORY[0x23B8613CC](&unk_23B1DD494, v103);
  sub_23B1C7340();
  sub_23B1C64F4();
  v107 = *(_QWORD *)(v5 - 120);
  v106 = *(_QWORD *)(v5 - 112);
  *(_QWORD *)(v5 - 120) = 0;
  *(_QWORD *)(v5 - 112) = 0xE000000000000000;
  sub_23B1C64F4();
  MEMORY[0x23B8613CC](&unk_23B1DCA68, v34);
  sub_23B1C7340();
  sub_23B1C64F4();
  v35 = v93;
  *(_QWORD *)(v5 - 120) = v107;
  *(_QWORD *)(v5 - 112) = v106;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v109 = *(_QWORD *)(v5 - 120);
  v108 = *(_QWORD *)(v5 - 112);
  *(_QWORD *)(v5 - 120) = 0;
  *(_QWORD *)(v5 - 112) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  strcpy((char *)(v5 - 120), "stillPending:");
  *(_WORD *)(v5 - 106) = -4864;
  *(_QWORD *)(v5 - 256) = v105;
  sub_23AF16528(v105);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  *(_QWORD *)(v5 - 120) = v109;
  *(_QWORD *)(v5 - 112) = v108;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v111 = *(_QWORD *)(v5 - 120);
  v110 = *(_QWORD *)(v5 - 112);
  *(_QWORD *)(v5 - 120) = 0;
  *(_QWORD *)(v5 - 112) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  strcpy((char *)(v5 - 120), "shouldFetch:");
  *(_BYTE *)(v5 - 107) = 0;
  *(_WORD *)(v5 - 106) = -5120;
  v36 = *(_DWORD *)(v5 - 296);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  *(_QWORD *)(v5 - 120) = v111;
  *(_QWORD *)(v5 - 112) = v110;
  v37 = *(_QWORD *)(v5 - 168);
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v5 - 264) = *(_QWORD *)(v5 - 120);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 192) + 8))(v100, v103);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 312) + 8))(*(_QWORD *)(v5 - 320), *(_QWORD *)(v5 - 304));
  v48 = *(_QWORD *)(v5 - 184);
  v32 = 0;
  goto LABEL_20;
}

void sub_23AD8C79C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD8C87C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  void (*v31)(_QWORD *, _QWORD, _QWORD *, void (*)(), char *);
  _BYTE v33[96];

  v5 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v3 - 240) = a1;
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v8 = &v33[-v7];
  *(_QWORD *)(v3 - 216) = *(_QWORD *)(v1 + 584);
  v9 = *(_QWORD *)(v1 + 568);
  *(_QWORD *)(v3 - 232) = &v33[-v7];
  *(_QWORD *)(v3 - 224) = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v33[-v16];
  v18 = *(_QWORD *)(v2 + 32);
  v19 = v2;
  *(_QWORD *)(v3 - 248) = v2;
  *(_QWORD *)(v3 - 208) = *(_QWORD *)(v18 + 16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v3 - 144), v13);
  *(_QWORD *)(v3 - 256) = v5;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 16))(v8, *(_QWORD *)(v3 - 200), a1);
  v20 = (*(unsigned __int8 *)(v14 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v21 = (v15 + *(unsigned __int8 *)(v5 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v22 = (v6 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = (char *)swift_allocObject();
  v25 = *(_QWORD *)(v3 - 224);
  *((_QWORD *)v24 + 2) = *(_QWORD *)(v3 - 192);
  *((_QWORD *)v24 + 3) = v25;
  v26 = *(_QWORD *)(v3 - 216);
  *((_QWORD *)v24 + 4) = *(_QWORD *)(v3 - 184);
  *((_QWORD *)v24 + 5) = v26;
  v27 = *(_QWORD *)(v3 - 176);
  *((_QWORD *)v24 + 6) = v19;
  *((_QWORD *)v24 + 7) = v27;
  v28 = *(_QWORD *)(v3 - 136);
  *((_QWORD *)v24 + 8) = *(_QWORD *)(v3 - 128);
  *((_QWORD *)v24 + 9) = v28;
  (*(void (**)(char *, _BYTE *, uint64_t))(v14 + 32))(&v24[v20], v17, v13);
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v3 - 256) + 32))(&v24[v21], *(_QWORD *)(v3 - 232), *(_QWORD *)(v3 - 240));
  v29 = *(_QWORD **)(v3 - 160);
  *(_QWORD *)&v24[v22] = *(_QWORD *)(v3 - 168);
  sub_23AA724E8((uint64_t)v29, (uint64_t)&v24[v23], qword_2542E48C0);
  v30 = *(_QWORD **)(v3 - 152);
  sub_23AA724E8((uint64_t)v30, (uint64_t)&v24[(v23 + 63) & 0xFFFFFFFFFFFFFFF8], &qword_2542E5050);
  v31 = *(void (**)(_QWORD *, _QWORD, _QWORD *, void (*)(), char *))(**(_QWORD **)(v3 - 208)
                                                                                         + 584);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AC25990(v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
  sub_23AAB7E4C(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
  v31(v29, *(_QWORD *)(v3 - 144), v30, sub_23ADA3218, v24);
  swift_release();
  return swift_release();
}

void sub_23AD8CAFC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD8CBDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  uint64_t v25;
  void (*v26)(id);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, _QWORD, uint64_t);
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  _BYTE v43[64];

  v5 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v4 - 208) = v5;
  *(_QWORD *)(v4 - 200) = a1;
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v8 = &v43[-v7];
  v9 = *(_QWORD *)(v2 + 96);
  v10 = *(_QWORD *)(v2 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v43[-v17];
  if ((*(_DWORD *)(v4 - 152) & 1) != 0)
  {
    v27 = swift_allocObject();
    *(_QWORD *)(v4 - 152) = v27;
    v28 = *(_QWORD *)(v4 - 128);
    *(_QWORD *)(v27 + 16) = *(_QWORD *)(v4 - 136);
    *(_QWORD *)(v27 + 24) = v28;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v15 + 16))(v18, *(_QWORD *)(v4 - 192), v14);
    *(_QWORD *)(v4 - 192) = v14;
    v30 = *(_QWORD *)(v4 - 208);
    v29 = *(_QWORD *)(v4 - 200);
    v31 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v30 + 16);
    *(_QWORD *)(v4 - 216) = v8;
    v31(v8, *(_QWORD *)(v4 - 184), v29);
    v32 = (*(unsigned __int8 *)(v15 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v33 = (v16 + *(unsigned __int8 *)(v30 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v34 = (v6 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v4 - 184) = v34;
    v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v4 - 224) = v35;
    *(_QWORD *)(v4 - 232) = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
    v36 = (char *)swift_allocObject();
    *((_QWORD *)v36 + 2) = v3;
    *((_QWORD *)v36 + 3) = v10;
    *((_QWORD *)v36 + 4) = v1;
    *((_QWORD *)v36 + 5) = v9;
    v37 = *(void **)(v4 - 144);
    *((_QWORD *)v36 + 6) = *(_QWORD *)(v4 - 176);
    *((_QWORD *)v36 + 7) = v37;
    (*(void (**)(char *, _BYTE *, _QWORD))(v15 + 32))(&v36[v32], v18, *(_QWORD *)(v4 - 192));
    (*(void (**)(char *, _QWORD, _QWORD))(v30 + 32))(&v36[v33], *(_QWORD *)(v4 - 216), *(_QWORD *)(v4 - 200));
    v38 = *(_QWORD *)(v4 - 168);
    *(_QWORD *)&v36[*(_QWORD *)(v4 - 184)] = *(_QWORD *)(v4 - 160);
    *(_QWORD *)&v36[*(_QWORD *)(v4 - 224)] = v38;
    v39 = &v36[*(_QWORD *)(v4 - 232)];
    v40 = *(_QWORD *)(v4 - 128);
    *(_QWORD *)v39 = *(_QWORD *)(v4 - 136);
    *((_QWORD *)v39 + 1) = v40;
    sub_23AAFCDA4(v37, 1);
    swift_retain();
    v41 = v37;
    sub_23AAFCDA4(v37, 1);
    v42 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AD02DFC((uint64_t)"stageCreation(capturedContent:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 102, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, *(_QWORD *)(v4 - 152), (uint64_t)sub_23ADA289C, (uint64_t)v36, v42, MEMORY[0x24BEE0D00]);
    sub_23ACF6618(v41, 1, (void (*)(id))MEMORY[0x24BEE4EF8]);
    swift_release();
    swift_release();
  }
  else
  {
    v19 = sub_23AE4F6B4();
    v21 = *(_QWORD *)(v4 - 136);
    v20 = *(_QWORD *)(v4 - 128);
    if (!v19)
    {
      swift_retain();
      sub_23AD8CFF8();
    }
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v21;
    *(_QWORD *)(v22 + 24) = v20;
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v21;
    v23[3] = v20;
    v24 = *(void **)(v4 - 144);
    v23[4] = v24;
    sub_23AAFCDA4(v24, 0);
    swift_retain();
    sub_23AAFCDA4(v24, 0);
    v25 = type metadata accessor for Continuation();
    swift_retain();
    sub_23AD02DFC((uint64_t)"stageCreation(capturedContent:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 102, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v22, (uint64_t)sub_23ADA10F4, (uint64_t)v23, v25, MEMORY[0x24BEE0D00]);
    swift_release();
    v26 = (void (*)(id))MEMORY[0x24BEE4EF8];
    swift_release();
    sub_23ACF6618(v24, 0, v26);
  }
}

void sub_23AD8CFF8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD8D0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v11 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v10 - 152) = v11;
  *(_QWORD *)(v10 - 144) = a1;
  *(_QWORD *)(v10 - 256) = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v10 - 264) = (char *)&a9 - v12;
  v13 = *(_QWORD *)(v9 + 584);
  v14 = *(_QWORD *)(v9 + 568);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v17);
  *(_QWORD *)(v10 - 160) = v18;
  *(_QWORD *)(v10 - 176) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v10 - 168) = (char *)&a9 - v19;
  *(_QWORD *)(v10 - 296) = v13;
  v20 = swift_getAssociatedTypeWitness();
  v21 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v10 - 312) = v14;
  v22 = swift_getAssociatedConformanceWitness();
  v23 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v10 - 120) = v20;
  *(_QWORD *)(v10 - 112) = v21;
  *(_QWORD *)(v10 - 104) = v22;
  *(_QWORD *)(v10 - 96) = v23;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD8D244()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, void (*)(), char *, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v29;
  uint64_t v31;
  _BYTE v32[64];

  swift_getTupleTypeMetadata2();
  v4 = sub_23B1C6C98();
  v5 = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 - 280) = v4;
  v6 = v5;
  *(_QWORD *)(v3 - 272) = v5;
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v32[-v7];
  *(_QWORD *)(v3 - 304) = &v32[-v7];
  v9 = v1[16];
  v10 = 34;
  if ((v9 & 0x210000) == 0)
    v10 = 32;
  if ((v9 & 0x200) != 0)
    v11 = v10;
  else
    v11 = 2 * ((v9 & 0x210000) != 0);
  *(_QWORD *)(v3 - 328) = v11;
  v12 = *(_QWORD *)(v3 - 136);
  *(_QWORD *)(v3 - 336) = *(_QWORD *)(*(_QWORD *)(v12 + 32) + 16);
  *(_QWORD *)(v3 - 288) = (char *)v1 + *(_QWORD *)(v2 + 536);
  v13 = (char *)v1 + *(_QWORD *)(v2 + 632);
  swift_beginAccess();
  (*(void (**)(_BYTE *, char *, uint64_t))(v6 + 16))(v8, v13, v4);
  *(_QWORD *)(v3 - 320) = *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 544));
  *(_QWORD *)(v3 - 344) = v1;
  v14 = *(_QWORD *)(v3 - 176);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v14 + 16))(*(_QWORD *)(v3 - 168), *(_QWORD *)(v3 - 128), *(_QWORD *)(v3 - 160));
  v15 = *(_QWORD *)(v3 - 152);
  v16 = *(_QWORD *)(v3 - 264);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v15 + 16))(v16, *(_QWORD *)(v3 - 232), *(_QWORD *)(v3 - 144));
  v17 = (*(unsigned __int8 *)(v14 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = (v0 + *(unsigned __int8 *)(v15 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = (*(_QWORD *)(v3 - 256) + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = (char *)swift_allocObject();
  v21 = *(_QWORD *)(v3 - 240);
  v22 = *(_QWORD *)(v3 - 312);
  *((_QWORD *)v20 + 2) = *(_QWORD *)(v3 - 248);
  *((_QWORD *)v20 + 3) = v22;
  v23 = *(_QWORD *)(v3 - 296);
  *((_QWORD *)v20 + 4) = v21;
  *((_QWORD *)v20 + 5) = v23;
  v24 = *(_QWORD *)(v3 - 216);
  *((_QWORD *)v20 + 6) = v12;
  *((_QWORD *)v20 + 7) = v24;
  *((_QWORD *)v20 + 8) = *(_QWORD *)(v3 - 224);
  *((_QWORD *)v20 + 9) = v1;
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v3 - 176) + 32))(&v20[v17], *(_QWORD *)(v3 - 168), *(_QWORD *)(v3 - 160));
  (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v3 - 152) + 32))(&v20[v18], v16, *(_QWORD *)(v3 - 144));
  *(_QWORD *)&v20[v19] = *(_QWORD *)(v3 - 208);
  v25 = *(_QWORD *)(v3 - 328);
  *(_QWORD *)&v20[(v19 + 15) & 0xFFFFFFFFFFFFFFF8] = v25;
  v26 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, uint64_t, _QWORD, void (*)(), char *, uint64_t, uint64_t))(**(_QWORD **)(v3 - 336) + 608);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v31 = AssociatedTypeWitness;
  v29 = *(_QWORD *)(v3 - 304);
  v26(*(_QWORD *)(v3 - 128), *(_QWORD *)(v3 - 200), *(_QWORD *)(v3 - 192), *(_QWORD *)(v3 - 288), v29, *(_QWORD *)(v3 - 320), v25, *(_QWORD *)(v3 - 184), sub_23ADA2154, v20, v31, AssociatedConformanceWitness);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 272) + 8))(v29, *(_QWORD *)(v3 - 280));
}

void sub_23AD8D554()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD8D648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v10 - 144) = a1;
  v11 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v10 - 160) = v11;
  *(_QWORD *)(v10 - 272) = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v10 - 128) = (char *)&a9 - v12;
  v13 = *(_QWORD *)(v9 + 584);
  v14 = *(_QWORD *)(v9 + 568);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v10 - 208) = AssociatedTypeWitness;
  v18 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v17);
  *(_QWORD *)(v10 - 136) = v18;
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v10 - 192) = v19;
  *(_QWORD *)(v10 - 296) = *(_QWORD *)(v19 + 64);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v10 - 152) = (char *)&a9 - v20;
  *(_QWORD *)(v10 - 304) = v13;
  *(_QWORD *)(v10 - 312) = v14;
  v21 = swift_getAssociatedTypeWitness();
  v22 = swift_getAssociatedTypeWitness();
  v23 = swift_getAssociatedConformanceWitness();
  v24 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v10 - 120) = v21;
  *(_QWORD *)(v10 - 112) = v22;
  *(_QWORD *)(v10 - 104) = v23;
  *(_QWORD *)(v10 - 96) = v24;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD8D7AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  char v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  void (*v25)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, void (*)(), char *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  _BYTE v47[96];

  *(_QWORD *)(v3 - 352) = a1;
  v4 = sub_23B1C6C98();
  *(_QWORD *)(v3 - 280) = v4;
  *(_QWORD *)(v3 - 288) = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v3 - 168) = &v47[-v6];
  v7 = *(_QWORD *)(v1 - 8);
  *(_QWORD *)(v3 - 216) = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v3 - 200) = &v47[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v47[-v11];
  *(_QWORD *)(v3 - 336) = &v47[-v11];
  MEMORY[0x24BDAC7A8](v10);
  v14 = &v47[-v13];
  v15 = *(_QWORD *)(v3 - 184);
  v16 = *(_QWORD **)(*(_QWORD *)(*(_QWORD *)(v3 - 176) + 32) + 16);
  *(_QWORD *)(v3 - 344) = v2;
  v17 = *(_QWORD *)(v3 - 320);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  swift_retain();
  v20 = swift_checkMetadataState();
  v21 = v19(v20, AssociatedConformanceWitness);
  *(_QWORD *)(v3 - 360) = v16;
  v22 = 104;
  if ((v21 & 1) != 0)
    v22 = 96;
  v23 = v14;
  (*(void (**)(void))(*v16 + v22))();
  v24 = *(_QWORD *)(v3 - 216);
  v25 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v24 + 16);
  *(_QWORD *)(v3 - 328) = v23;
  v26 = *(_QWORD *)(v3 - 208);
  v25(v12, v23, v26);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 - 352) - 8) + 56))(*(_QWORD *)(v3 - 168), 1, 1);
  *(_QWORD *)(v3 - 352) = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 544));
  v27 = v26;
  v25(*(_BYTE **)(v3 - 200), v23, v26);
  v28 = *(_QWORD *)(v3 - 192);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v28 + 16))(*(_QWORD *)(v3 - 152), *(_QWORD *)(v3 - 264), *(_QWORD *)(v3 - 136));
  v29 = *(_QWORD *)(v3 - 160);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v29 + 16))(*(_QWORD *)(v3 - 128), *(_QWORD *)(v3 - 256), *(_QWORD *)(v3 - 144));
  v30 = (*(unsigned __int8 *)(v24 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v31 = (v8 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (*(unsigned __int8 *)(v28 + 80) + v31 + 8) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v33 = (*(_QWORD *)(v3 - 296) + *(unsigned __int8 *)(v29 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v34 = (*(_QWORD *)(v3 - 272) + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = (char *)swift_allocObject();
  v36 = *(_QWORD *)(v3 - 312);
  *((_QWORD *)v35 + 2) = v17;
  *((_QWORD *)v35 + 3) = v36;
  v37 = *(_QWORD *)(v3 - 304);
  *((_QWORD *)v35 + 4) = *(_QWORD *)(v3 - 344);
  *((_QWORD *)v35 + 5) = v37;
  v38 = *(_QWORD *)(v3 - 248);
  v39 = *(_QWORD *)(v3 - 240);
  *((_QWORD *)v35 + 6) = *(_QWORD *)(v3 - 176);
  *((_QWORD *)v35 + 7) = v38;
  *((_QWORD *)v35 + 8) = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 32))(&v35[v30], *(_QWORD *)(v3 - 200), v27);
  v40 = *(_QWORD *)(v3 - 192);
  *(_QWORD *)&v35[v31] = *(_QWORD *)(v3 - 184);
  (*(void (**)(char *, _QWORD, _QWORD))(v40 + 32))(&v35[v32], *(_QWORD *)(v3 - 152), *(_QWORD *)(v3 - 136));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v3 - 160) + 32))(&v35[v33], *(_QWORD *)(v3 - 128), *(_QWORD *)(v3 - 144));
  *(_QWORD *)&v35[v34] = *(_QWORD *)(v3 - 232);
  v41 = *(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, void (*)(), char *))(**(_QWORD **)(v3 - 360) + 496);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v42 = *(_QWORD *)(v3 - 336);
  v43 = *(_QWORD *)(v3 - 168);
  v41(v42, v43, *(_QWORD *)(v3 - 352), *(_QWORD *)(v3 - 224), 0, sub_23ADA15B0, v35);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 288) + 8))(v43, *(_QWORD *)(v3 - 280));
  v44 = *(_QWORD *)(v3 - 208);
  v45 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 216) + 8);
  v45(v42, v44);
  return ((uint64_t (*)(_QWORD, uint64_t))v45)(*(_QWORD *)(v3 - 328), v44);
}

void sub_23AD8DB90()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD8DC74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v46[64];

  *(_QWORD *)(v2 - 144) = a1;
  v3 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v2 - 160) = v3;
  *(_QWORD *)(v2 - 256) = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v2 - 152) = &v46[-v4];
  v5 = *(_QWORD *)(v1 + 96);
  v6 = *(_QWORD *)(v1 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v2 - 272) = v5;
  *(_QWORD *)(v2 - 280) = v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v2 - 168) = v11;
  *(_QWORD *)(v2 - 296) = v10;
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = &v46[-v14];
  *(_QWORD *)(v2 - 288) = &v46[-v14];
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v2 - 176) = v16;
  *(_QWORD *)(v2 - 312) = AssociatedTypeWitness;
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v19 = &v46[-v18];
  *(_QWORD *)(v2 - 304) = &v46[-v18];
  type metadata accessor for FileTreeWriter.ItemOrContinuation(255, v6, v5, v20);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v21 = sub_23B1C74F0();
  v22 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v2 - 328) = v21;
  v23 = *(_QWORD *)(v22 + 64);
  MEMORY[0x24BDAC7A8](v21);
  v25 = &v46[-v24];
  *(_QWORD *)(v2 - 320) = &v46[-v24];
  v26 = swift_allocObject();
  *(_QWORD *)(v2 - 264) = v26;
  v27 = *(_QWORD *)(v2 - 128);
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v2 - 136);
  *(_QWORD *)(v26 + 24) = v27;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v22 + 16))(v25, *(_QWORD *)(v2 - 248), v21);
  v28 = *(_QWORD *)(v2 - 176);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v28 + 16))(v19, *(_QWORD *)(v2 - 240), AssociatedTypeWitness);
  v29 = *(_QWORD *)(v2 - 168);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v29 + 16))(v15, *(_QWORD *)(v2 - 232), v10);
  v30 = *(_QWORD *)(v2 - 160);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v30 + 16))(*(_QWORD *)(v2 - 152), *(_QWORD *)(v2 - 216), *(_QWORD *)(v2 - 144));
  v31 = (*(unsigned __int8 *)(v22 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v32 = (v23 + *(unsigned __int8 *)(v28 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v33 = (v17 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (*(unsigned __int8 *)(v29 + 80) + v33 + 8) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v35 = (v12 + *(unsigned __int8 *)(v30 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v36 = (*(_QWORD *)(v2 - 256) + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = (char *)swift_allocObject();
  v39 = *(_QWORD *)(v2 - 280);
  *((_QWORD *)v38 + 2) = *(_QWORD *)(v2 - 224);
  *((_QWORD *)v38 + 3) = v39;
  v40 = *(_QWORD *)(v2 - 272);
  *((_QWORD *)v38 + 4) = *(_QWORD *)(v2 - 208);
  *((_QWORD *)v38 + 5) = v40;
  (*(void (**)(char *, _QWORD, _QWORD))(v22 + 32))(&v38[v31], *(_QWORD *)(v2 - 320), *(_QWORD *)(v2 - 328));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v2 - 176) + 32))(&v38[v32], *(_QWORD *)(v2 - 304), *(_QWORD *)(v2 - 312));
  *(_QWORD *)&v38[v33] = *(_QWORD *)(v2 - 200);
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v2 - 168) + 32))(&v38[v34], *(_QWORD *)(v2 - 288), *(_QWORD *)(v2 - 296));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v2 - 160) + 32))(&v38[v35], *(_QWORD *)(v2 - 152), *(_QWORD *)(v2 - 144));
  v41 = *(_QWORD *)(v2 - 184);
  *(_QWORD *)&v38[v36] = *(_QWORD *)(v2 - 192);
  *(_QWORD *)&v38[v37] = v41;
  v42 = &v38[(v37 + 15) & 0xFFFFFFFFFFFFFFF8];
  v43 = *(_QWORD *)(v2 - 128);
  *(_QWORD *)v42 = *(_QWORD *)(v2 - 136);
  *((_QWORD *)v42 + 1) = v43;
  v44 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AD02DFC((uint64_t)"lookup(continuation:requestedState:otherVersion:on:result:completion:)", 70, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, *(_QWORD *)(v2 - 264), (uint64_t)sub_23ADA1BC4, (uint64_t)v38, v44, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

uint64_t sub_23AD8E080(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, _QWORD, _QWORD, _QWORD), uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  uint64_t v31;
  void *v32;
  id v33;
  char v34;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v41;
  uint64_t v42;
  char *v43;
  void **v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  void (*v63)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v64;

  v63 = a8;
  v59 = a6;
  v60 = a7;
  v56 = a4;
  v57 = a5;
  v52 = a2;
  v64 = a1;
  v61 = a3;
  v62 = a9;
  v9 = *a3;
  v10 = *(_QWORD *)(*a3 + 568);
  v53 = sub_23B1C6C98();
  v51 = *(_QWORD *)(v53 - 8);
  v11 = MEMORY[0x24BDAC7A8](v53);
  v49 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v50 = (char *)&v47 - v13;
  v14 = *(_QWORD *)(v9 + 584);
  v48 = type metadata accessor for ItemPropagationResult(255, v10, v14, v15);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v58 = sub_23B1C74F0();
  v55 = *(_QWORD *)(v58 - 8);
  v16 = MEMORY[0x24BDAC7A8](v58);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char **)((char *)&v47 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v47 = (char *)&v47 - v22;
  v23 = sub_23B1C545C();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v14;
  type metadata accessor for FileTreeWriter.ItemOrContinuation(255, v10, v14, v27);
  v28 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (void **)((char *)&v47 - v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))((char *)&v47 - v29, v64, v28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v32 = *v30;
    v33 = v32;
    sub_23B1C5378();
    sub_23ADA1DEC();
    v34 = sub_23B1C575C();

    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    if ((v34 & 1) != 0)
    {
      swift_getAssociatedTypeWitness();
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v36 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72);
      v37 = swift_checkMetadataState();
      if ((v36(v37, AssociatedConformanceWitness) & 1) != 0)
      {

        v38 = (uint64_t)v47;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 1, 1);
        swift_storeEnumTagMultiPayload();
        sub_23AD8B610(v38, v56, v57, 0, v59, v60, (uint64_t)v63, v62);
      }
    }
    *v21 = v32;
    swift_storeEnumTagMultiPayload();
    v41 = v32;
    sub_23AD8B610((uint64_t)v21, v56, v57, 0, v59, v60, (uint64_t)v63, v62);
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v43 = v50;
    v42 = v51;
    v44 = v30;
    v45 = v53;
    (*(void (**)(char *, void **, uint64_t))(v51 + 32))(v50, v44, v53);
    v46 = (uint64_t)v49;
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v49, v43, v45);
    sub_23ADB3EB4(v46, 0, 0, v10, v54, v18);
    swift_storeEnumTagMultiPayload();
    sub_23AD8B610((uint64_t)v18, v56, v57, 0, v59, v60, (uint64_t)v63, v62);
  }
  v39 = swift_retain();
  v63(v39, 0, 0, 0);
  return swift_release_n();
}

void sub_23AD8E548()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD8E650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t AssociatedTypeWitness;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;

  *(_QWORD *)(v11 - 288) = swift_getTupleTypeMetadata2();
  v12 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 280) = v12;
  *(_QWORD *)(v11 - 296) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v11 - 304) = (char *)&a9 - v13;
  type metadata accessor for ItemPropagationResult(255, v10, v9, v14);
  v15 = sub_23B1C6C98();
  *(_QWORD *)(v11 - 256) = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v11 - 232) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v11 - 272) = v17;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v11 - 264) = (char *)&a9 - v18;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v20 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v22 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v11 - 112) = v20;
  *(_QWORD *)(v11 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v11 - 96) = v22;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD8E7CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void (*v64)(_QWORD, void (*)(uint64_t, uint64_t, uint64_t, uint64_t), char *);
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  _BYTE v87[64];

  *(_QWORD *)(v6 - 128) = a1;
  v7 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v6 - 248) = v7;
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 136) = &v87[-v9];
  *(_QWORD *)(v6 - 216) = v2;
  v10 = *(_QWORD *)(v6 - 144);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = type metadata accessor for ItemState(0, v10, AssociatedConformanceWitness, v12);
  *(_QWORD *)(v6 - 144) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v6 - 152) = &v87[-v16];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  *(_QWORD *)(v6 - 208) = v1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v18 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v18);
  v20 = &v87[-v19];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v21 + 16))(&v87[-v19], *(_QWORD *)(v6 - 240), v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)(v6 - 232) = *v20;
    v22 = swift_allocObject();
    *(_QWORD *)(v6 - 208) = v22;
    v23 = *(_QWORD *)(v6 - 160);
    *(_QWORD *)(v22 + 16) = *(_QWORD *)(v6 - 168);
    *(_QWORD *)(v22 + 24) = v23;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v14 + 16))(*(_QWORD *)(v6 - 152), *(_QWORD *)(v6 - 224), *(_QWORD *)(v6 - 144));
    v24 = *(_QWORD *)(v6 - 248);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v24 + 16))(*(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 200), *(_QWORD *)(v6 - 128));
    v25 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v26 = (v15 + *(unsigned __int8 *)(v24 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    v27 = (v8 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v6 - 200) = v27;
    v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
    v29 = (char *)swift_allocObject();
    *((_QWORD *)v29 + 2) = v4;
    *((_QWORD *)v29 + 3) = v5;
    v30 = *(_QWORD *)(v6 - 216);
    *((_QWORD *)v29 + 4) = v3;
    *((_QWORD *)v29 + 5) = v30;
    v31 = *(void **)(v6 - 232);
    *((_QWORD *)v29 + 6) = *(_QWORD *)(v6 - 176);
    *((_QWORD *)v29 + 7) = v31;
    (*(void (**)(char *, _QWORD, _QWORD))(v14 + 32))(&v29[v25], *(_QWORD *)(v6 - 152), *(_QWORD *)(v6 - 144));
    (*(void (**)(char *, _QWORD, _QWORD))(v24 + 32))(&v29[v26], *(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 128));
    v32 = *(_QWORD *)(v6 - 192);
    *(_QWORD *)&v29[*(_QWORD *)(v6 - 200)] = *(_QWORD *)(v6 - 184);
    *(_QWORD *)&v29[v28] = v32;
    v33 = &v29[(v28 + 15) & 0xFFFFFFFFFFFFFFF8];
    v34 = *(_QWORD *)(v6 - 160);
    *(_QWORD *)v33 = *(_QWORD *)(v6 - 168);
    *((_QWORD *)v33 + 1) = v34;
    swift_retain_n();
    swift_retain();
    v35 = v31;
    v36 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    sub_23AD02DFC((uint64_t)"create(capturedContent:stagedContext:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 109, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, *(_QWORD *)(v6 - 208), (uint64_t)sub_23ADA289C, (uint64_t)v29, v36, MEMORY[0x24BEE0D00]);

    swift_release();
    return swift_release();
  }
  else
  {
    *(_QWORD *)(v6 - 328) = v8;
    *(_QWORD *)(v6 - 320) = v14;
    *(_QWORD *)(v6 - 312) = v4;
    *(_QWORD *)(v6 - 240) = v3;
    *(_QWORD *)(v6 - 352) = v5;
    v38 = *(_QWORD *)(v6 - 256);
    v39 = *(_QWORD *)(v6 - 248);
    v40 = *(_QWORD *)(v6 + 16);
    *(_QWORD *)(v6 - 336) = *(_QWORD *)((char *)v20 + *(int *)(TupleTypeMetadata2 + 48));
    v41 = v38;
    v42 = *(void (**)(void))(v38 + 32);
    v43 = *(_QWORD *)(v6 - 264);
    *(_QWORD *)(v6 - 344) = v42;
    v42();
    if ((v40 & 0x20) == 0)
      goto LABEL_6;
    v44 = *(_QWORD *)(v6 - 176) + *(_QWORD *)(**(_QWORD **)(v6 - 176) + 632);
    swift_beginAccess();
    v45 = *(_QWORD *)(v6 - 296);
    v46 = *(_QWORD *)(v6 - 304);
    v47 = *(_QWORD *)(v6 - 280);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v46, v44, v47);
    LODWORD(v44) = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v6 - 288) - 8) + 48))(v46, 1);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v47);
    if ((_DWORD)v44 == 1)
    {
      *(_QWORD *)(v6 - 288) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 - 184) + 40) + 16);
      *(_QWORD *)(v6 - 280) = *(_QWORD *)(v6 - 176) + *(_QWORD *)(**(_QWORD **)(v6 - 176) + 536);
      v48 = *(_QWORD *)(v6 - 208);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v41 + 16))(*(_QWORD *)(v6 - 232), v43, v48);
      v49 = *(_QWORD *)(v6 - 320);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v49 + 16))(*(_QWORD *)(v6 - 152), *(_QWORD *)(v6 - 224), *(_QWORD *)(v6 - 144));
      v50 = v39;
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v39 + 16))(*(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 200), *(_QWORD *)(v6 - 128));
      v51 = (*(unsigned __int8 *)(v41 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      v52 = (*(_QWORD *)(v6 - 272) + *(unsigned __int8 *)(v49 + 80) + v51) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      v53 = (v15 + *(unsigned __int8 *)(v39 + 80) + v52) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      v54 = (*(_QWORD *)(v6 - 328) + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)(v6 - 200) = v54;
      v55 = (v54 + 15) & 0xFFFFFFFFFFFFFFF8;
      v56 = (char *)swift_allocObject();
      v57 = *(_QWORD *)(v6 - 352);
      *((_QWORD *)v56 + 2) = *(_QWORD *)(v6 - 312);
      *((_QWORD *)v56 + 3) = v57;
      v58 = *(_QWORD *)(v6 - 232);
      v59 = *(_QWORD *)(v6 - 216);
      *((_QWORD *)v56 + 4) = *(_QWORD *)(v6 - 240);
      *((_QWORD *)v56 + 5) = v59;
      v60 = *(_QWORD *)(v6 - 176);
      *((_QWORD *)v56 + 6) = *(_QWORD *)(v6 - 184);
      *((_QWORD *)v56 + 7) = v60;
      v61 = *(_QWORD *)(v6 - 160);
      *((_QWORD *)v56 + 8) = *(_QWORD *)(v6 - 168);
      *((_QWORD *)v56 + 9) = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 - 344))(&v56[v51], v58, v48);
      (*(void (**)(char *, _QWORD, _QWORD))(v49 + 32))(&v56[v52], *(_QWORD *)(v6 - 152), *(_QWORD *)(v6 - 144));
      (*(void (**)(char *, _QWORD, _QWORD))(v50 + 32))(&v56[v53], *(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 128));
      v62 = *(void **)(v6 - 336);
      v63 = *(_QWORD *)(v6 - 192);
      *(_QWORD *)&v56[*(_QWORD *)(v6 - 200)] = v62;
      *(_QWORD *)&v56[v55] = v63;
      v64 = *(void (**)(_QWORD, void (*)(uint64_t, uint64_t, uint64_t, uint64_t), char *))(**(_QWORD **)(v6 - 288) + 640);
      v65 = v62;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v64(*(_QWORD *)(v6 - 280), sub_23ADA26A8, v56);

      swift_release();
      swift_release();
      return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v6 - 256) + 8))(*(_QWORD *)(v6 - 264), v48);
    }
    else
    {
LABEL_6:
      v66 = swift_allocObject();
      *(_QWORD *)(v6 - 280) = v66;
      v67 = *(_QWORD *)(v6 - 160);
      *(_QWORD *)(v66 + 16) = *(_QWORD *)(v6 - 168);
      *(_QWORD *)(v66 + 24) = v67;
      v68 = *(_QWORD *)(v6 - 208);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v41 + 16))(*(_QWORD *)(v6 - 232), v43, v68);
      v69 = *(_QWORD *)(v6 - 320);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v69 + 16))(*(_QWORD *)(v6 - 152), *(_QWORD *)(v6 - 224), *(_QWORD *)(v6 - 144));
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v39 + 16))(*(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 200), *(_QWORD *)(v6 - 128));
      v70 = (*(unsigned __int8 *)(v41 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      v71 = (*(_QWORD *)(v6 - 272) + *(unsigned __int8 *)(v69 + 80) + v70) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      v72 = (v15 + *(unsigned __int8 *)(v39 + 80) + v71) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      v73 = (*(_QWORD *)(v6 - 328) + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)(v6 - 200) = v73;
      v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)(v6 - 224) = v74;
      v75 = (v74 + 15) & 0xFFFFFFFFFFFFFFF8;
      v76 = (char *)swift_allocObject();
      v77 = *(_QWORD *)(v6 - 352);
      *((_QWORD *)v76 + 2) = *(_QWORD *)(v6 - 312);
      *((_QWORD *)v76 + 3) = v77;
      v78 = *(_QWORD *)(v6 - 232);
      v79 = *(_QWORD *)(v6 - 216);
      *((_QWORD *)v76 + 4) = *(_QWORD *)(v6 - 240);
      *((_QWORD *)v76 + 5) = v79;
      v80 = *(_QWORD *)(v6 - 176);
      *((_QWORD *)v76 + 6) = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 - 344))(&v76[v70], v78, v68);
      (*(void (**)(char *, _QWORD, _QWORD))(v69 + 32))(&v76[v71], *(_QWORD *)(v6 - 152), *(_QWORD *)(v6 - 144));
      (*(void (**)(char *, _QWORD, _QWORD))(v39 + 32))(&v76[v72], *(_QWORD *)(v6 - 136), *(_QWORD *)(v6 - 128));
      v81 = *(void **)(v6 - 336);
      v82 = *(_QWORD *)(v6 - 192);
      *(_QWORD *)&v76[*(_QWORD *)(v6 - 200)] = v81;
      *(_QWORD *)&v76[*(_QWORD *)(v6 - 224)] = *(_QWORD *)(v6 - 184);
      *(_QWORD *)&v76[v75] = v82;
      v83 = &v76[(v75 + 15) & 0xFFFFFFFFFFFFFFF8];
      v84 = *(_QWORD *)(v6 - 160);
      *(_QWORD *)v83 = *(_QWORD *)(v6 - 168);
      *((_QWORD *)v83 + 1) = v84;
      v85 = type metadata accessor for Continuation();
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      swift_retain();
      v86 = v81;
      sub_23AD02DFC((uint64_t)"create(capturedContent:stagedContext:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 109, 2u, (uint64_t)sub_23AD9F098, v80, (uint64_t)sub_23AD43544, *(_QWORD *)(v6 - 280), (uint64_t)sub_23ADA22EC, (uint64_t)v76, v85, MEMORY[0x24BEE0D00]);

      swift_release();
      swift_release();
      swift_release();
      return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v6 - 256) + 8))(*(_QWORD *)(v6 - 264), v68);
    }
  }
}

void sub_23AD8EFE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v17 = a7;
  v18 = a8;
  type metadata accessor for ItemPropagationResult(255, *(_QWORD *)(*(_QWORD *)a1 + 568), *(_QWORD *)(*(_QWORD *)a1 + 584), a4);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v13 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v17 - v14;
  *(uint64_t *)((char *)&v17 - v14) = (uint64_t)a2;
  swift_storeEnumTagMultiPayload();
  v16 = a2;
  sub_23AD8B610((uint64_t)v15, a3, a4, 0, a5, a6, v17, v18);
}

uint64_t sub_23AD8F0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_23AD8F114()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD8F1FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _BYTE v43[64];

  v4 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v2 - 136) = v4;
  *(_QWORD *)(v2 - 264) = a1;
  *(_QWORD *)(v2 - 232) = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = &v43[-v5];
  *(_QWORD *)(v2 - 256) = &v43[-v5];
  v7 = *(_QWORD *)(v1 + 96);
  v8 = *(_QWORD *)(v1 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v2 - 248) = v8;
  *(_QWORD *)(v2 - 240) = v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v2 - 280) = v12;
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v43[-v15];
  *(_QWORD *)(v2 - 272) = &v43[-v15];
  type metadata accessor for ItemPropagationResult(255, v8, v7, v17);
  v18 = sub_23B1C6C98();
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v2 - 296) = v18;
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x24BDAC7A8](v18);
  v22 = &v43[-v21];
  *(_QWORD *)(v2 - 288) = &v43[-v21];
  v23 = swift_allocObject();
  *(_QWORD *)(v2 - 224) = v23;
  v24 = *(_QWORD *)(v2 - 128);
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v2 - 144);
  *(_QWORD *)(v23 + 24) = v24;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v19 + 16))(v22, *(_QWORD *)(v2 - 216), v18);
  *(_QWORD *)(v2 - 304) = v13;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v13 + 16))(v16, *(_QWORD *)(v2 - 192), v12);
  v25 = *(_QWORD *)(v2 - 136);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v25 + 16))(v6, *(_QWORD *)(v2 - 208), a1);
  v26 = (*(unsigned __int8 *)(v19 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v27 = (v20 + *(unsigned __int8 *)(v13 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v28 = (v14 + *(unsigned __int8 *)(v25 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v29 = (*(_QWORD *)(v2 - 232) + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  v32 = (char *)swift_allocObject();
  v33 = *(_QWORD *)(v2 - 248);
  *((_QWORD *)v32 + 2) = *(_QWORD *)(v2 - 200);
  *((_QWORD *)v32 + 3) = v33;
  v34 = *(_QWORD *)(v2 - 176);
  v35 = *(_QWORD *)(v2 - 240);
  *((_QWORD *)v32 + 4) = *(_QWORD *)(v2 - 184);
  *((_QWORD *)v32 + 5) = v35;
  *((_QWORD *)v32 + 6) = v34;
  (*(void (**)(char *, _QWORD, _QWORD))(v19 + 32))(&v32[v26], *(_QWORD *)(v2 - 288), *(_QWORD *)(v2 - 296));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v2 - 304) + 32))(&v32[v27], *(_QWORD *)(v2 - 272), *(_QWORD *)(v2 - 280));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v2 - 136) + 32))(&v32[v28], *(_QWORD *)(v2 - 256), *(_QWORD *)(v2 - 264));
  v36 = *(void **)(v2 - 160);
  *(_QWORD *)&v32[v29] = v36;
  *(_QWORD *)&v32[v30] = *(_QWORD *)(v2 - 168);
  v37 = *(_QWORD *)(v2 - 144);
  *(_QWORD *)&v32[v31] = *(_QWORD *)(v2 - 152);
  v38 = &v32[(v31 + 15) & 0xFFFFFFFFFFFFFFF8];
  v39 = *(_QWORD *)(v2 - 128);
  *(_QWORD *)v38 = v37;
  *((_QWORD *)v38 + 1) = v39;
  v40 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  v41 = v36;
  swift_retain();
  swift_retain();
  sub_23AD02DFC((uint64_t)"create(capturedContent:stagedContext:requestedState:otherVersion:on:result:nonSyncableAttributes:completion:)", 109, 2u, (uint64_t)sub_23AD9F098, v34, (uint64_t)sub_23AD43544, *(_QWORD *)(v2 - 224), (uint64_t)sub_23ADA22EC, (uint64_t)v32, v40, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23AD8F574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v18 = a7;
  v19 = a8;
  v16 = a5;
  v17 = a6;
  type metadata accessor for ItemPropagationResult(255, *(_QWORD *)(*(_QWORD *)a1 + 568), *(_QWORD *)(*(_QWORD *)a1 + 584), a4);
  v12 = sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v13 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v16 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))((char *)&v16 - v14, a2, v12);
  swift_storeEnumTagMultiPayload();
  sub_23AD8B610((uint64_t)v15, a3, a4, v16, v17, v18, v19, a9);
}

uint64_t sub_23AD8F674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_23AD8F6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v25 = a5;
  v26 = a3;
  v27 = a2;
  v28 = a4;
  v29 = a1;
  v6 = *v5;
  v7 = *(_QWORD *)(*v5 + 584);
  v8 = *(_QWORD *)(*v5 + 568);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v21 = v7;
  v24 = v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  v20 = sub_23B1C6C98();
  v19[3] = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v19[4] = (char *)v19 - v12;
  v13 = *(_QWORD *)(v6 + 576);
  v14 = *(_QWORD *)(v6 + 560);
  v15 = swift_getAssociatedTypeWitness();
  v16 = swift_getAssociatedTypeWitness();
  v17 = swift_getAssociatedConformanceWitness();
  v22 = v13;
  v23 = v14;
  v18 = swift_getAssociatedConformanceWitness();
  v30 = v15;
  v31 = v16;
  v32 = v17;
  v33 = v18;
  type metadata accessor for FileItemVersion();
}

void sub_23AD8F82C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_BYTE *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  _BYTE v51[80];

  v7 = sub_23B1C6C98();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = &v51[-v10];
  *(_QWORD *)(v1 + 144) = v4;
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(v4 - 8);
  v12 = MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v1 + 8) = &v51[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v1 + 136) = &v51[-v15];
  v16 = *(_QWORD *)(a1 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = &v51[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v17);
  v21 = &v51[-v20];
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 176) + 32) + 16);
  sub_23AA724E8(v3 + *(_QWORD *)(v2 + 624), v5 - 144, qword_2542E48C0);
  v22 = *(_QWORD *)(*(_QWORD *)v3 + 600);
  *(_QWORD *)(v1 + 128) = v3;
  v23 = v3 + v22;
  v24 = v16;
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, v23, v7);
  v25 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48);
  *(_QWORD *)(v1 + 168) = a1;
  v26 = v25(v11, 1, a1);
  *(_DWORD *)(v1 + 68) = v26;
  *(_QWORD *)(v1 + 88) = v21;
  *(_QWORD *)(v1 + 152) = v16;
  if (v26 == 1)
  {
    sub_23AC25990((_QWORD *)(v5 - 144), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    v27 = *(_QWORD *)(v1 + 80);
    *(_QWORD *)(v1 + 488) = *(_QWORD *)(v1 + 72);
    *(_QWORD *)(v1 + 496) = v27;
    v28 = *(_QWORD *)(v1 + 48);
    *(_QWORD *)(v1 + 504) = *(_QWORD *)(v1 + 56);
    *(_QWORD *)(v1 + 512) = v28;
    type metadata accessor for Propagation.PropagationError();
  }
  v30 = *(_QWORD *)(v1 + 72);
  v29 = *(_QWORD *)(v1 + 80);
  v31 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 32);
  v32 = *(_QWORD *)(v1 + 168);
  v31(v19, v11, v32);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v24 + 16))(v21, v19, v32);
  v33 = *(_QWORD *)(v1 + 128);
  v34 = v33 + *(_QWORD *)(*(_QWORD *)v33 + 616);
  swift_beginAccess();
  v36 = *(_QWORD *)(v1 + 24);
  v35 = *(_QWORD *)(v1 + 32);
  v37 = v34;
  v38 = *(_QWORD *)(v1 + 40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v35, v37, v38);
  v39 = *(_QWORD *)(v1 + 160);
  v40 = v19;
  v41 = *(_QWORD *)(v1 + 144);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v35, 1, v41) == 1)
  {
    sub_23AC25990((_QWORD *)(v5 - 144), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v38);
    *(_QWORD *)(v1 + 488) = v30;
    *(_QWORD *)(v1 + 496) = v29;
    v42 = *(_QWORD *)(v1 + 48);
    *(_QWORD *)(v1 + 504) = *(_QWORD *)(v1 + 56);
    *(_QWORD *)(v1 + 512) = v42;
    type metadata accessor for Propagation.PropagationError();
  }
  v43 = *(_QWORD *)(v1 + 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v43, v35, v41);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v39 + 16))(*(_QWORD *)(v1 + 136), v43, v41);
  v44 = v33 + *(_QWORD *)(*(_QWORD *)v33 + 536);
  sub_23AC25990((_QWORD *)(v5 - 144), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
  sub_23AD89EE0(*(_QWORD *)(v1 + 176), v44, v1 + 240);
  *(_QWORD *)(v1 + 80) = v44;
  v45 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
  *(_QWORD *)(v1 + 160) = v45;
  v45(v43, v41);
  (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v1 + 152) + 8))(v40, *(_QWORD *)(v1 + 168));
  sub_23AA724E8(v1 + 240, v1 + 488, &qword_2542E5050);
  if (sub_23AAFCF2C(v1 + 488) == 1)
  {
    v46 = *(int *)(v41 + 40);
    v47 = (_QWORD *)(*(_QWORD *)(v1 + 136) + v46 + *(int *)(type metadata accessor for ItemMetadata() + 148));
    swift_bridgeObjectRelease();
    *v47 = 0;
    v47[1] = 0;
  }
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v49 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  sub_23AAB7E4C((_QWORD *)(v1 + 240), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
  v50 = swift_checkMetadataState();
  if ((v49(v50, AssociatedConformanceWitness) & 1) != 0
    || ((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v50, AssociatedConformanceWitness) & 1) != 0)
  {
    sub_23AAB7E4C((_QWORD *)(v1 + 240), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    sub_23AD8D554();
  }
  if (*(_QWORD *)(v1 + 112))
  {
    type metadata accessor for StagedContext();
    if (swift_dynamicCastClass())
    {
      swift_retain();
      sub_23AD8CFF8();
    }
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Propagation.swift", 101, 2, 885);
  }
  sub_23AD8C79C();
}

void sub_23AD90128(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *TupleTypeMetadata;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 576);
  v5 = *(_QWORD *)(*v1 + 560);
  swift_getAssociatedTypeWitness();
  type metadata accessor for SnapshotItem(255, v5, v4, v6);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v8 = a1 + TupleTypeMetadata[12];
  v9 = TupleTypeMetadata[16];
  v10 = TupleTypeMetadata[20];
  v11 = (uint64_t)v1 + *(_QWORD *)(v3 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v11, AssociatedTypeWitness);
  v14 = type metadata accessor for SnapshotItem(0, v5, v4, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  v15 = *v1;
  *(_QWORD *)(a1 + v9) = *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 592));
  *(_QWORD *)(a1 + v10) = *(uint64_t *)((char *)v1 + *(_QWORD *)(v15 + 544));
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23AD902D0()
{
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TestingOperation();
}

id sub_23AD902F4(uint64_t a1)
{
  uint64_t v1;
  void *v4;

  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 0, 1, a1);
  return v4;
}

void sub_23AD90348()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD90418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 608);
  swift_getAssociatedTypeWitness();
  v4 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 616);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v8);
  v9 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v5, v9);
  sub_23AAAEE4C(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 624)), *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 624) + 8), *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 624) + 16));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD905B8()
{
  uint64_t v0;
  uint64_t v1;

  swift_getTupleTypeMetadata2();
  v1 = sub_23B1C6C98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

void sub_23AD90610()
{
  sub_23AD898F8();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD906EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 608);
  swift_getAssociatedTypeWitness();
  v4 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 616);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v8);
  v9 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v5, v9);
  sub_23AAAEE4C(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 624)), *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 624) + 8), *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 624) + 16));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD9088C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_getTupleTypeMetadata2();
  v2 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_23AD908E8()
{
  return sub_23AD9CC04((void (*)(void))sub_23AD90610);
}

uint64_t sub_23AD908F4()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_23B1C6C98();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
  }
  return result;
}

uint64_t sub_23AD90B94()
{
  return 0x692D657461647075;
}

uint64_t sub_23AD90BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 624);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5))
    return 4;
  else
    return *(unsigned __int8 *)(v1 + *(int *)(v5 + 40));
}

uint64_t sub_23AD90C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 624);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5))
    return 2;
  v7 = v1 + *(int *)(v5 + 40);
  return *(unsigned __int8 *)(v7 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_23AD90D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 624);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5);
  result = 0;
  if (!v6)
  {
    v8 = v1 + *(int *)(v5 + 40);
    return *(_QWORD *)(v8 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_23AD90E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 624);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v6 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5))
  {
    v7 = 0;
  }
  else
  {
    v8 = v1 + *(int *)(v5 + 40);
    v7 = *(unsigned int *)(v8 + 4);
    v6 = *(_BYTE *)(v8 + 8);
  }
  return v7 | ((unint64_t)v6 << 32);
}

uint64_t sub_23AD90F64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 624);
  swift_beginAccess();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  v8 = 1;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v3, 1, v7);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!v9)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v3, AssociatedTypeWitness);
    v8 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v8, 1, AssociatedTypeWitness);
}

uint64_t sub_23AD91068()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7340();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v2 = *(void **)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 544));
  if (v2)
  {
    v3 = objc_msgSend(v2, sel_description);
    sub_23B1C63E0();

  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AF16528(*(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 600)));
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_23AD912C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[19];
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v48 = a2;
  v37 = a1;
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 568);
  v7 = *(_QWORD *)(*v4 + 584);
  v36 = type metadata accessor for JobLockRule(0, v6, v7, a4);
  v35[17] = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v35[16] = (char *)v35 - v8;
  v10 = type metadata accessor for SnapshotItem(255, v6, v7, v9);
  v11 = sub_23B1C6C98();
  v35[8] = *(_QWORD *)(v11 - 8);
  v35[9] = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v35[12] = v10;
  v35[13] = (char *)v35 - v13;
  v35[11] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v35[7] = (char *)v35 - v14;
  v47 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v17);
  v45 = *(_QWORD *)(v18 - 8);
  v46 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v44 = (char *)v35 - v19;
  v49 = v6;
  v50 = v7;
  v20 = swift_getAssociatedTypeWitness();
  v55 = v20;
  v21 = swift_getAssociatedConformanceWitness();
  v23 = type metadata accessor for ItemState(255, v20, v21, v22);
  v24 = sub_23B1C6C98();
  v25 = *(_QWORD *)(v24 - 8);
  v39 = v24;
  v40 = v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v35[18] = (char *)v35 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v43 = (char *)v35 - v29;
  v41 = *(_QWORD *)(v23 - 8);
  v42 = v23;
  MEMORY[0x24BDAC7A8](v28);
  v38 = (char *)v35 - v30;
  v31 = swift_getAssociatedTypeWitness();
  v32 = swift_getAssociatedTypeWitness();
  v33 = swift_getAssociatedConformanceWitness();
  v34 = swift_getAssociatedConformanceWitness();
  v51 = v31;
  v52 = v32;
  v53 = v33;
  v54 = v34;
  type metadata accessor for FileItemVersion();
}

void sub_23AD915E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedTypeWitness;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  uint64_t v23;

  v9[30] = a1;
  v12 = sub_23B1C6C98();
  v9[32] = *(_QWORD *)(v12 - 8);
  v9[33] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v9[31] = (char *)&a9 - v13;
  v15 = type metadata accessor for SnapshotItem(255, v11, v10, v14);
  v16 = sub_23B1C6C98();
  v9[28] = *(_QWORD *)(v16 - 8);
  v9[29] = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v9[42] = v15;
  v9[43] = (char *)&a9 - v18;
  v9[41] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v9[40] = (char *)&a9 - v19;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v21 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v23 = swift_getAssociatedConformanceWitness();
  v9[67] = AssociatedTypeWitness;
  v9[68] = v21;
  v9[69] = AssociatedConformanceWitness;
  v9[70] = v23;
  type metadata accessor for FileItemVersion();
}

void sub_23AD91734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v16 = sub_23B1C6C98();
  v9[47] = v16;
  v9[49] = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v9[27] = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v9[45] = (char *)&a9 - v20;
  v9[48] = a1;
  v9[46] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v9[44] = (char *)&a9 - v21;
  v22 = *(_QWORD *)(v14 - 72);
  v23 = sub_23B1C6C98();
  v9[54] = *(_QWORD *)(v23 - 8);
  v9[55] = v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v9[14] = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v9[26] = (char *)&a9 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v9[53] = (char *)&a9 - v29;
  v9[56] = *(_QWORD *)(v22 - 8);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v9[10] = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v9[15] = (char *)&a9 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v9[50] = (char *)&a9 - v34;
  v9[38] = v10;
  v9[39] = v13;
  v9[67] = v13;
  v9[68] = v12;
  v9[69] = v10;
  v9[70] = v11;
  type metadata accessor for ItemReconciliation();
}

void sub_23AD918E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_23B1C6C98();
  v1[51] = *(_QWORD *)(v3 - 8);
  v1[52] = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v1[57] = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v7 = MEMORY[0x24BDAC7A8](v6);
  MEMORY[0x24BDAC7A8](v7);
  sub_23AB003A0();
}

void (*sub_23AD919C8())(uint64_t, uint64_t)
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, _QWORD);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  unsigned __int8 *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(void);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(void);
  uint64_t v107;
  int v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, _QWORD, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t TupleTypeMetadata3;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(uint64_t, uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  int *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  void (*v189)(uint64_t, uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  void (*v202)(uint64_t, uint64_t, uint64_t);
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void (*v206)(uint64_t, uint64_t);

  if (!v2)
  {
    *(_QWORD *)(v0 + 32) = v4;
    *(_QWORD *)(v0 + 40) = v1;
    *(_QWORD *)(v0 + 464) = v5;
    *(_QWORD *)(v0 + 472) = 0;
    *(_QWORD *)(v0 + 16) = v6;
    *(_QWORD *)(v0 + 24) = v7;
    *(_QWORD *)(v0 + 48) = v3;
    v11 = *(_QWORD *)(v0 + 456);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9) == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 408) + 8))(v8, *(_QWORD *)(v0 + 416));
      return 0;
    }
    v12 = v9;
    v13 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, v8, v9);
    v14 = v13 + *(int *)(v9 + 52);
    v16 = *(_QWORD *)(v0 + 424);
    v15 = *(_QWORD *)(v0 + 432);
    v17 = v11;
    v18 = *(_QWORD *)(v0 + 440);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v14, v18);
    v19 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 448) + 48);
    if (v19(v16, 1, *(_QWORD *)(v10 - 72)) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v13, v12);
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v18);
      return 0;
    }
    *(_QWORD *)(v0 + 8) = v19;
    v20 = *(_QWORD *)(v0 + 448);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
    v22 = *(_QWORD *)(v0 + 400);
    v23 = *(_QWORD *)(v10 - 72);
    *(_QWORD *)v0 = v21;
    v21(v22, v16, v23);
    v25 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 504), v24);
    *(_QWORD *)(v0 + 408) = v25;
    *(_QWORD *)(v0 + 416) = v14;
    v26 = v14 + *(int *)(v25 + 48);
    v27 = *(_QWORD *)(v0 + 360);
    v28 = *(_QWORD *)(v0 + 376);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 392) + 16))(v27, v26, v28);
    v29 = *(_QWORD *)(v0 + 368);
    v30 = *(_QWORD *)(v0 + 384);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v30) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v23);
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 48), v12);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 392) + 8))(v27, v28);
      return 0;
    }
    *(_QWORD *)(v0 + 424) = v12;
    v32 = *(_QWORD *)(v0 + 352);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v32, v27, v30);
    v1 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 480) + 40);
    v33 = *(_QWORD *)(v0 + 344);
    v34 = *(_QWORD *)(v0 + 472);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)v1 + 248))(*(_QWORD *)(v0 + 464), *(_QWORD *)(*(_QWORD *)(v0 + 488) + *(_QWORD *)(**(_QWORD **)(v0 + 488) + 592)));
    *(_QWORD *)(v0 + 472) = v34;
    if (v34)
    {
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v30);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v10 - 72));
LABEL_12:
      v35 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 456) + 8);
LABEL_13:
      v35(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 424));
      return v1;
    }
    v36 = *(_QWORD *)(v0 + 328);
    v37 = *(_QWORD *)(v0 + 336);
    v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v33, 1, v37);
    v39 = *(_QWORD *)(v0 + 448);
    if (v38 == 1)
    {
      (*(void (**)(uint64_t, _QWORD))(v29 + 8))(v32, *(_QWORD *)(v0 + 384));
      (*(void (**)(_QWORD, _QWORD))(v39 + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v10 - 72));
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 424));
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(v33, *(_QWORD *)(v0 + 232));
      return 0;
    }
    *(_QWORD *)(v0 + 232) = v1;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v36 + 32))(*(_QWORD *)(v0 + 320), v33, v37);
    v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
    v41 = *(_QWORD *)(v0 + 208);
    v42 = *(_QWORD *)(v0 + 400);
    v43 = *(_QWORD *)(v10 - 72);
    *(_QWORD *)(v0 + 360) = v40;
    v40(v41, v42, v43);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v43);
    v44 = *(_QWORD *)(v0 + 488);
    v45 = v44 + *(_QWORD *)(*(_QWORD *)v44 + 608);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 432) + 40))(v45, v41, *(_QWORD *)(v0 + 440));
    swift_endAccess();
    v46 = *(_QWORD *)(v0 + 216);
    v47 = *(_QWORD *)(v0 + 384);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v46, v32, v47);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v46, 0, 1, v47);
    v48 = v44 + *(_QWORD *)(*(_QWORD *)v44 + 640);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 392) + 40))(v48, v46, *(_QWORD *)(v0 + 376));
    swift_endAccess();
    v50 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 304), v49);
    *(_QWORD *)(v0 + 392) = v50;
    v51 = (uint64_t *)(*(_QWORD *)(v0 + 48) + *(int *)(v50 + 68));
    v52 = *v51;
    v53 = v51[1];
    v54 = v51[2];
    v55 = v51[3];
    v56 = v51[4];
    v57 = v51[5];
    v58 = v51[6];
    v59 = (uint64_t *)(v44 + *(_QWORD *)(*(_QWORD *)v44 + 632));
    v60 = *v59;
    v61 = v59[1];
    v62 = v59[2];
    *(_QWORD *)(v0 + 464) = v59[5];
    *v59 = v52;
    v59[1] = v53;
    v59[2] = v54;
    v59[3] = v55;
    v59[4] = v56;
    v59[5] = v57;
    v59[6] = v58;
    sub_23AAAE4B4(v52, v53, v54);
    v63 = v62;
    v64 = *(_QWORD *)(v0 + 336);
    v65 = *(_QWORD *)(v0 + 320);
    sub_23AAAEE4C(v60, v61, v63);
    v67 = *(_QWORD *)(v0 + 240);
    v66 = *(_QWORD *)(v0 + 248);
    v68 = *(_QWORD *)(v67 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v66, v65 + *(int *)(v64 + 40), v67);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v66, 0, 1, v67);
    v69 = v44 + *(_QWORD *)(*(_QWORD *)v44 + 616);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 256) + 40))(v69, v66, *(_QWORD *)(v0 + 264));
    swift_endAccess();
    v70 = *(_QWORD *)(v10 - 72);
    *(_BYTE *)(v44 + *(_QWORD *)(*(_QWORD *)v44 + 648)) = 0;
    v71 = MEMORY[0x23B8613CC](&unk_23B1DD478, v64);
    v72 = *(_QWORD *)(v0 + 280);
    sub_23AF21A28(v64, v71, v72);
    v73 = *(_QWORD *)(v0 + 272);
    v1 = *(void (**)(uint64_t, uint64_t))(v0 + 40);
    v74 = *(_QWORD *)(v0 + 472);
    sub_23AB0541C(v72, v73);
    *(_QWORD *)(v0 + 472) = v74;
    if (v74)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(v72, *(_QWORD *)(v0 + 296));
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 328) + 8))(v65, v64);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 400), v70);
      goto LABEL_12;
    }
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(v72, *(_QWORD *)(v0 + 296));
    v75 = *(_QWORD *)(v0 + 192);
    v76 = *(_QWORD *)(v0 + 200);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v73, 1, v76) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 328) + 8))(v65, v64);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v10 - 72));
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 424));
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(v73, *(_QWORD *)(v0 + 176));
      return 0;
    }
    v77 = *(_QWORD *)(v0 + 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v77, v73, v76);
    *(_QWORD *)(v0 + 344) = *(_QWORD *)(*(_QWORD *)(v0 + 480) + 32);
    v78 = sub_23AE4F6B4();
    v79 = (unsigned __int8 *)(v77 + *(int *)(v76 + 40));
    if (!v78)
    {
      v79[*(int *)(type metadata accessor for ItemMetadata() + 80)] = 0;
      v88 = *(_QWORD *)(v10 - 72);
      v89 = *(_QWORD *)(v0 + 488);
      goto LABEL_80;
    }
    v80 = v77;
    v81 = *v79;
    v82 = *(_QWORD *)(v0 + 456);
    v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16);
    v84 = *(_QWORD *)(v0 + 32);
    v85 = *(_QWORD *)(v0 + 48);
    v86 = *(_QWORD *)(v0 + 424);
    *(_QWORD *)(v0 + 296) = v83;
    v83(v84, v85, v86);
    if (v81 == 2)
    {
      v35 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
      v35(v84, v86);
      v87 = 0;
    }
    else
    {
      v90 = *(_BYTE *)(v84 + *(int *)(*(_QWORD *)(v0 + 392) + 52));
      v35 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
      v35(v84, v86);
      v87 = (v90 & 0xFB) == 0;
    }
    v91 = type metadata accessor for ItemMetadata();
    v92 = (int *)v91;
    v93 = *(int *)(v91 + 80);
    v79[v93] = v87;
    v94 = *(_QWORD *)(*(_QWORD *)(v0 + 488) + *(_QWORD *)(**(_QWORD **)(v0 + 488) + 600));
    *(_QWORD *)(v0 + 464) = v94;
    v95 = *(void (**)(void))(v0 + 296);
    v77 = v80;
    *(_QWORD *)(v0 + 376) = v79;
    if ((v94 & 0x10) != 0)
    {
      v96 = *(_QWORD *)(*(_QWORD *)(v0 + 488) + 128);
      if ((v96 & 1) != 0)
      {
        v79[v93] = 0;
        goto LABEL_31;
      }
      if ((v96 & 2) != 0)
      {
        *(_QWORD *)(v0 + 288) = v91;
        v79[v93] = 1;
        *(_QWORD *)(v0 + 480) = *(_QWORD *)(*(_QWORD *)(v0 + 480) + 24);
        v114 = *(_QWORD *)(v0 + 504);
        *(_QWORD *)(v0 + 536) = *(_QWORD *)(v0 + 496);
        v115 = *(_QWORD *)(v0 + 304);
        *(_QWORD *)(v0 + 544) = *(_QWORD *)(v0 + 312);
        *(_QWORD *)(v0 + 552) = v114;
        *(_QWORD *)(v0 + 560) = v115;
        type metadata accessor for ItemJob();
      }
    }
    if (v87)
    {
      v88 = *(_QWORD *)(v10 - 72);
LABEL_35:
      v89 = *(_QWORD *)(v0 + 488);
      v99 = *(_QWORD *)(v0 + 16);
      v100 = *(_QWORD *)(v0 + 408);
      v101 = *(_QWORD *)(v0 + 416);
      goto LABEL_36;
    }
LABEL_31:
    v88 = *(_QWORD *)(v10 - 72);
    if ((*(_QWORD *)(v0 + 464) & 0x10010) == 0)
    {
      v79[*(int *)(v91 + 84)] = 1;
      goto LABEL_35;
    }
    v1 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
    v97 = *(_QWORD *)(v0 + 320);
    v98 = *(_QWORD *)(v0 + 472);
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 264))(v97);
    *(_QWORD *)(v0 + 472) = v98;
    if (v98)
    {
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v80, *(_QWORD *)(v0 + 200));
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 328) + 8))(v97, v64);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 400), v88);
      goto LABEL_13;
    }
    *(_QWORD *)(v0 + 288) = v92;
    sub_23AA724E8(v0 + 576, v0 + 824, &qword_2542E5050);
    if (sub_23AAFCF2C(v0 + 824) == 1)
    {
      v113 = 6;
    }
    else
    {
      v116 = *(_OWORD *)(v0 + 1032);
      *(_OWORD *)(v0 + 1264) = *(_OWORD *)(v0 + 1016);
      *(_OWORD *)(v0 + 1280) = v116;
      *(_OWORD *)(v0 + 1296) = *(_OWORD *)(v0 + 1048);
      *(_QWORD *)(v0 + 1312) = *(_QWORD *)(v0 + 1064);
      v117 = *(_OWORD *)(v0 + 968);
      *(_OWORD *)(v0 + 1200) = *(_OWORD *)(v0 + 952);
      *(_OWORD *)(v0 + 1216) = v117;
      v118 = *(_OWORD *)(v0 + 1000);
      *(_OWORD *)(v0 + 1232) = *(_OWORD *)(v0 + 984);
      *(_OWORD *)(v0 + 1248) = v118;
      v119 = *(_OWORD *)(v0 + 904);
      *(_OWORD *)(v0 + 1136) = *(_OWORD *)(v0 + 888);
      *(_OWORD *)(v0 + 1152) = v119;
      v120 = *(_OWORD *)(v0 + 936);
      *(_OWORD *)(v0 + 1168) = *(_OWORD *)(v0 + 920);
      *(_OWORD *)(v0 + 1184) = v120;
      v121 = *(_OWORD *)(v0 + 840);
      *(_OWORD *)(v0 + 1072) = *(_OWORD *)(v0 + 824);
      *(_OWORD *)(v0 + 1088) = v121;
      v122 = *(_OWORD *)(v0 + 872);
      *(_OWORD *)(v0 + 1104) = *(_OWORD *)(v0 + 856);
      *(_OWORD *)(v0 + 1120) = v122;
      v123 = (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 480) + 512))();
      v113 = sub_23AA9F718(v123 & 1, *(_BYTE **)(v0 + 376));
      sub_23AAB7E4C((_QWORD *)(v0 + 576), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      if (v113 == 5)
        goto LABEL_59;
    }
    v1 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    v124 = *(_QWORD *)(v0 + 400);
    v125 = *(_QWORD *)(v0 + 472);
    v126 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v1 + 304))(v124, 0);
    *(_QWORD *)(v0 + 472) = v125;
    if (v125)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 200));
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 336));
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(v124, *(_QWORD *)(v10 - 72));
      goto LABEL_13;
    }
    if ((v126 & 1) == 0)
    {
      if ((*(_BYTE *)(*(_QWORD *)(v0 + 488) + 132) & 0x44) != 0)
      {
        v113 = 3;
      }
      else if (v113 == 6)
      {
        goto LABEL_61;
      }
LABEL_60:
      *(_BYTE *)(*(_QWORD *)(v0 + 376) + *(int *)(*(_QWORD *)(v0 + 288) + 84)) = v113;
LABEL_61:
      if ((*(_QWORD *)(v0 + 464) & 0x10) != 0)
      {
        *(_QWORD *)(v0 + 480) = *(_QWORD *)(*(_QWORD *)(v0 + 480) + 24);
        v127 = *(_QWORD *)(v0 + 504);
        *(_QWORD *)(v0 + 536) = *(_QWORD *)(v0 + 496);
        v128 = *(_QWORD *)(v0 + 304);
        *(_QWORD *)(v0 + 544) = *(_QWORD *)(v0 + 312);
        *(_QWORD *)(v0 + 552) = v127;
        *(_QWORD *)(v0 + 560) = v128;
        type metadata accessor for ItemJob();
      }
      v88 = *(_QWORD *)(v10 - 72);
      v77 = *(_QWORD *)(v0 + 168);
      v89 = *(_QWORD *)(v0 + 488);
      v99 = *(_QWORD *)(v0 + 16);
      v100 = *(_QWORD *)(v0 + 408);
      v101 = *(_QWORD *)(v0 + 416);
      v92 = *(int **)(v0 + 288);
      v95 = *(void (**)(void))(v0 + 296);
LABEL_36:
      v102 = *(_QWORD *)(v0 + 424);
      v103 = *(_QWORD *)(v0 + 24);
      if ((*(_BYTE *)(v101 + *(int *)(v100 + 36)) & 0x10) != 0)
      {
        *(_QWORD *)(v0 + 288) = v92;
        *(_BYTE *)(*(_QWORD *)(v0 + 376) + v92[21]) = 0;
        v104 = *(_QWORD *)(v0 + 48);
        v105 = v99;
        v106 = v95;
        v95();
        if ((*(_QWORD *)(v0 + 464) & 0x100000000000) != 0)
        {
          v107 = v102;
          v108 = *(unsigned __int8 *)(v105 + *(int *)(v102 + 56));
          v35(v105, v107);
          v92 = *(int **)(v0 + 288);
          if (v108 == 1)
            *(_BYTE *)(*(_QWORD *)(v0 + 376) + v92[15]) = 1;
          v102 = *(_QWORD *)(v0 + 424);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 296))(v103, *(_QWORD *)(v0 + 48), v102);
          v88 = *(_QWORD *)(v10 - 72);
LABEL_45:
          v109 = v102;
          v110 = *(unsigned __int8 *)(v103 + *(int *)(v102 + 56));
          v35(v103, v109);
          if (v110 == 1)
          {
            v111 = v92[15];
            if ((*(_BYTE *)(*(_QWORD *)(v0 + 376) + v111) & 1) == 0)
            {
              v1 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
              v112 = *(_QWORD *)(v0 + 472);
              (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)v1 + 240))(*(_QWORD *)(v0 + 400), 1);
              *(_QWORD *)(v0 + 472) = v112;
              if (v112)
              {
                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 200));
                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 336));
                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 400), *(_QWORD *)(v10 - 72));
                goto LABEL_13;
              }
              if ((*(unsigned int (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 48))(*(_QWORD *)(v0 + 104), 1, *(_QWORD *)(v0 + 96)) == 1)
              {
                (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72));
              }
              else
              {
                v130 = *(_QWORD *)(v0 + 88);
                v129 = *(_QWORD *)(v0 + 96);
                v131 = *(_QWORD *)(v0 + 56);
                (*(void (**)(uint64_t, _QWORD, uint64_t))(v130 + 32))(v131, *(_QWORD *)(v0 + 104), v129);
                v132 = *(unsigned __int8 *)(v131 + *(int *)(v129 + 48) + v92[18]);
                (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v131, v129);
                if (v132 == 1)
                {
                  v133 = *(_QWORD *)(v0 + 376);
                  *(_BYTE *)(v133 + v92[18]) = 1;
                  *(_BYTE *)(v133 + v111) = 1;
                }
              }
              v88 = *(_QWORD *)(v10 - 72);
              v77 = *(_QWORD *)(v0 + 168);
              v89 = *(_QWORD *)(v0 + 488);
            }
          }
          if (fpfs_supports_pkg_dataless_escape_prevention())
          {
            v134 = v92[15];
            if ((*(_BYTE *)(*(_QWORD *)(v0 + 376) + v134) & 1) == 0)
            {
              if (*(_BYTE *)(*(_QWORD *)(v0 + 376) + v92[27]) == 1)
                *(_BYTE *)(*(_QWORD *)(v0 + 376) + v134) = 1;
              v88 = *(_QWORD *)(v10 - 72);
              v77 = *(_QWORD *)(v0 + 168);
              v89 = *(_QWORD *)(v0 + 488);
              v135 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 360);
              v136 = *(_QWORD *)(v0 + 120);
              v137 = *(_QWORD *)(v0 + 392);
LABEL_71:
              if ((*(_QWORD *)(v0 + 464) & 0x10010) != 0)
              {
                v138 = v92[21];
                if (*(_BYTE *)(*(_QWORD *)(v0 + 376) + v138))
                {
                  v139 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + *(int *)(v137 + 36));
                  v135(v136, *(_QWORD *)(v0 + 400), v88);
                  if ((v139 & 0x10) != 0)
                  {
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 448) + 8))(v136, v88);
                  }
                  else
                  {
                    v140 = *(_QWORD *)(v0 + 472);
                    v141 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + 344) + 464))(v136);
                    *(_QWORD *)(v0 + 472) = v140;
                    if (v140)
                    {
                      v1 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 448) + 8);
                      v1(v136, v88);
                      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v77, *(_QWORD *)(v0 + 200));
                      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 336));
                      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
                      v1(*(_QWORD *)(v0 + 400), v88);
                      goto LABEL_13;
                    }
                    v193 = v141;
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 448) + 8))(v136, v88);
                    if ((v193 & 1) == 0)
                      goto LABEL_78;
                  }
                  *(_BYTE *)(*(_QWORD *)(v0 + 376) + v138) = 0;
                }
              }
LABEL_78:
              if ((*(_QWORD *)(v0 + 464) & 0x10000) != 0)
              {
                v173 = v88;
                v64 = *(_QWORD *)(v0 + 336);
                if (*(_BYTE *)(*(_QWORD *)(v0 + 376) + v92[21]))
                {
                  v174 = v92;
                  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
                  v175 = *(_QWORD *)(v0 + 472);
                  v176 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 520))(v77);
                  *(_QWORD *)(v0 + 472) = v175;
                  v75 = *(_QWORD *)(v0 + 192);
                  if (v175)
                  {
                    (*(void (**)(uint64_t, _QWORD))(v75 + 8))(v77, *(_QWORD *)(v0 + 200));
                    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 320), v64);
                    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
                    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 400), v173);
                    goto LABEL_13;
                  }
                  *(_QWORD *)(*(_QWORD *)(v0 + 376) + v174[19]) = v176;
                }
                else
                {
                  v75 = *(_QWORD *)(v0 + 192);
                }
                v142 = *(_QWORD *)(v0 + 176);
                v143 = *(_QWORD *)(v0 + 144);
                v88 = v173;
LABEL_81:
                v144 = *(_QWORD *)(v0 + 200);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 16))(v143, v77, v144);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v143, 0, 1, v144);
                v145 = v143;
                v146 = v89 + *(_QWORD *)(*(_QWORD *)v89 + 624);
                swift_beginAccess();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 40))(v146, v145, v142);
                swift_endAccess();
                v147 = *(_QWORD *)(v89 + *(_QWORD *)(*(_QWORD *)v89 + 600));
                v148 = *(_QWORD *)(v0 + 152);
                if (v147 == 16)
                {
                  if ((*(_BYTE *)(v89 + 128) & 2) != 0)
                  {
                    swift_beginAccess();
                    sub_23AD4332C(v89 + 48, v0 + 536);
                    *(_QWORD *)(v0 + 504) = *(_QWORD *)(v89 + 112);
                    sub_23B1C7310();
                    v149 = *(_QWORD *)(*(_QWORD *)(v0 + 136) + 72);
                    swift_allocObject();
                    v150 = sub_23B1C6728();
                    v152 = v151;
                    v153 = *(_QWORD *)(v0 + 400);
                    v154 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
                    v154(v151, v153, v88);
                    swift_storeEnumTagMultiPayload();
                    v155 = v152 + v149;
                    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
                    v157 = v155 + *(int *)(TupleTypeMetadata3 + 48);
                    v158 = v153;
                    v159 = v77;
                    v160 = v155 + *(int *)(TupleTypeMetadata3 + 64);
                    v154(v155, v158, v88);
                    v154(v157, v159, v88);
                    v154(v160, v159, v88);
                    swift_storeEnumTagMultiPayload();
                    v161 = sub_23AD7D55C(v150);
                    v1 = (void (*)(uint64_t, uint64_t))sub_23ABD195C(v0 + 536, *(_QWORD *)(v0 + 504), v161, v162);
                    swift_bridgeObjectRelease();
                    sub_23AD43374(v0 + 536);
                    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v159, *(_QWORD *)(v0 + 200));
LABEL_89:
                    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 336));
                    goto LABEL_90;
                  }
                }
                else
                {
                  if ((v147 & 8) != 0 && *(_BYTE *)(v77 + *(int *)(*(_QWORD *)(v0 + 200) + 40)) == 2)
                  {
                    v163 = v75;
                    swift_beginAccess();
                    sub_23AD4332C(v89 + 48, v0 + 536);
                    v164 = *(_QWORD *)(v89 + 112);
                    v165 = *(_QWORD *)(v0 + 128);
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360))(v165, v77, v88);
                    swift_storeEnumTagMultiPayload();
                    v1 = (void (*)(uint64_t, uint64_t))sub_23ABD2E40(v0 + 536, v164, v165, v166);
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 8))(v165, v148);
                    sub_23AD43374(v0 + 536);
                    (*(void (**)(uint64_t, _QWORD))(v163 + 8))(v77, *(_QWORD *)(v0 + 200));
                    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 320), v64);
LABEL_90:
                    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
                    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 448) + 8))(*(_QWORD *)(v0 + 400), v88);
                    goto LABEL_91;
                  }
                  if ((v147 & 2) != 0)
                  {
                    v177 = v88;
                    v1 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
                    v178 = *(_QWORD *)(v0 + 112);
                    v179 = *(_QWORD *)(v0 + 400);
                    v180 = *(_QWORD *)(v0 + 472);
                    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 280))(v179);
                    *(_QWORD *)(v0 + 472) = v180;
                    if (v180)
                    {
                      (*(void (**)(uint64_t, _QWORD))(v75 + 8))(v77, *(_QWORD *)(v0 + 200));
                      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 320), v64);
                      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
                      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 448) + 8))(v179, v177);
                      goto LABEL_12;
                    }
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 8))(v178, 1, v177) == 1)
                    {
                      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 432) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 440));
                      v181 = *(_QWORD *)(v0 + 488);
                      swift_beginAccess();
                      sub_23AD4332C(v181 + 48, v0 + 536);
                      v182 = *(_QWORD *)(v181 + 112);
                      v183 = *(_QWORD *)(v10 - 72);
                      v184 = swift_getTupleTypeMetadata3();
                      v185 = *(_QWORD *)(v0 + 128);
                      v186 = v185 + *(int *)(v184 + 48);
                      v187 = v185 + *(int *)(v184 + 64);
                      v188 = *(_QWORD *)(v0 + 400);
                      v189 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
                      v189(v185, v188, v183);
                      v190 = *(_QWORD *)(v0 + 168);
                      v189(v186, v190, v183);
                      v189(v187, v190, v183);
                      v191 = *(_QWORD *)(v0 + 152);
                      swift_storeEnumTagMultiPayload();
                      v1 = (void (*)(uint64_t, uint64_t))sub_23ABD2E40(v0 + 536, v182, v185, v192);
                      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 8))(v185, v191);
                      sub_23AD43374(v0 + 536);
                      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v190, *(_QWORD *)(v0 + 200));
                      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 336));
                      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
                      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 448) + 8))(v188, v183);
                    }
                    else
                    {
                      v194 = *(_QWORD *)(v0 + 80);
                      v195 = *(_QWORD *)(v10 - 72);
                      (*(void (**)(uint64_t, _QWORD, uint64_t))v0)(v194, *(_QWORD *)(v0 + 112), v195);
                      v196 = *(_QWORD *)(v0 + 488);
                      swift_beginAccess();
                      sub_23AD4332C(v196 + 48, v0 + 536);
                      *(_QWORD *)(v0 + 504) = *(_QWORD *)(v196 + 112);
                      v197 = swift_getTupleTypeMetadata3();
                      v198 = *(_QWORD *)(v0 + 128);
                      v199 = v198 + *(int *)(v197 + 48);
                      v200 = v198 + *(int *)(v197 + 64);
                      v201 = *(_QWORD *)(v0 + 400);
                      v202 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
                      v202(v198, v201, v195);
                      v202(v199, v194, v195);
                      v203 = *(_QWORD *)(v0 + 168);
                      v202(v200, v203, v195);
                      v204 = *(_QWORD *)(v0 + 152);
                      swift_storeEnumTagMultiPayload();
                      v1 = (void (*)(uint64_t, uint64_t))sub_23ABD2E40(v0 + 536, *(_QWORD *)(v0 + 504), v198, v205);
                      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 8))(v198, v204);
                      sub_23AD43374(v0 + 536);
                      v206 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 448) + 8);
                      v206(v194, v195);
                      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v203, *(_QWORD *)(v0 + 200));
                      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 328) + 8))(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 336));
                      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 368) + 8))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 384));
                      v206(v201, v195);
                    }
LABEL_91:
                    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 456) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 424));
                    return v1;
                  }
                }
                swift_beginAccess();
                sub_23AD4332C(v89 + 48, v0 + 536);
                *(_QWORD *)(v0 + 504) = *(_QWORD *)(v89 + 112);
                v167 = swift_getTupleTypeMetadata3();
                v168 = *(_QWORD *)(v0 + 128);
                v169 = v168 + *(int *)(v167 + 48);
                v170 = v168 + *(int *)(v167 + 64);
                v171 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 360);
                v171(v168, *(_QWORD *)(v0 + 400), v88);
                v171(v169, v77, v88);
                v171(v170, v77, v88);
                swift_storeEnumTagMultiPayload();
                v1 = (void (*)(uint64_t, uint64_t))sub_23ABD2E40(v0 + 536, *(_QWORD *)(v0 + 504), v168, v172);
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 8))(v168, v148);
                sub_23AD43374(v0 + 536);
                (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(v77, *(_QWORD *)(v0 + 200));
                goto LABEL_89;
              }
              v64 = *(_QWORD *)(v0 + 336);
              v75 = *(_QWORD *)(v0 + 192);
LABEL_80:
              v142 = *(_QWORD *)(v0 + 176);
              v143 = *(_QWORD *)(v0 + 144);
              goto LABEL_81;
            }
          }
LABEL_70:
          v135 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 360);
          v136 = *(_QWORD *)(v0 + 120);
          v137 = *(_QWORD *)(v0 + 392);
          goto LABEL_71;
        }
        v35(v105, v102);
        ((void (*)(uint64_t, uint64_t, uint64_t))v106)(v103, v104, v102);
        v92 = *(int **)(v0 + 288);
        v88 = *(_QWORD *)(v10 - 72);
      }
      else
      {
        ((void (*)(_QWORD, _QWORD, _QWORD))v95)(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 424));
        if ((*(_QWORD *)(v0 + 464) & 0x100000000000) != 0)
          goto LABEL_45;
      }
      v35(v103, v102);
      fpfs_supports_pkg_dataless_escape_prevention();
      goto LABEL_70;
    }
LABEL_59:
    v113 = 5;
    goto LABEL_60;
  }
  return v1;
}

void sub_23AD93190()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD932A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;

  *(_QWORD *)(v9 - 152) = a1;
  v10 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v9 - 192) = v10;
  *(_QWORD *)(v9 - 304) = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 - 160) = (char *)&a9 - v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 112) = v13;
  *(_QWORD *)(v9 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 96) = v15;
  type metadata accessor for FileItemVersion();
}

void sub_23AD93374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v11 - 176) = a1;
  v12 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v11 - 232) = v12;
  *(_QWORD *)(v11 - 336) = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v11 - 184) = (char *)&a9 - v13;
  *(_QWORD *)(v11 - 312) = v9;
  *(_QWORD *)(v11 - 320) = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v16);
  *(_QWORD *)(v11 - 208) = v17;
  v18 = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v11 - 240) = v18;
  *(_QWORD *)(v11 - 360) = *(_QWORD *)(v18 + 64);
  v19 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v11 - 216) = (char *)&a9 - v20;
  *(_QWORD *)(v11 - 248) = *(_QWORD *)(AssociatedTypeWitness - 8);
  v21 = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v11 - 224) = (char *)&a9 - v22;
  v23 = swift_getAssociatedTypeWitness();
  v24 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v11 - 120) = v21;
  *(_QWORD *)(v11 - 112) = v23;
  *(_QWORD *)(v11 - 376) = v21;
  *(_QWORD *)(v11 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v11 - 96) = v24;
  type metadata accessor for ReconciliationID();
}

void sub_23AD934E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  void (*v33)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD, void *, _QWORD *, _QWORD, void (*)(), char *);
  void *v34;
  uint64_t v35;

  v9 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v35 - v10;
  v12 = *(_QWORD *)(v5 + 536);
  v13 = *(_QWORD *)(v7 - 200);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 16))(v11, v13 + v12, v1);
  swift_storeEnumTagMultiPayload();
  v14 = *(_QWORD **)(v7 - 168);
  *(_QWORD *)(v7 - 328) = (*(uint64_t (**)(char *))(*v14 + 472))(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a1);
  v15 = v13;
  *(_QWORD *)(v7 - 344) = (*(_QWORD *)(v13 + 128) >> 33) & 0x40;
  v16 = v14;
  *(_QWORD *)(v7 - 368) = *(_QWORD *)(v14[4] + 16);
  *(_QWORD *)(v7 - 352) = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 600));
  v17 = *(_QWORD *)(v7 - 248);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v17 + 16))(*(_QWORD *)(v7 - 224), *(_QWORD *)(v7 - 144), v3);
  v18 = *(_QWORD *)(v7 - 240);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v18 + 16))(*(_QWORD *)(v7 - 216), *(_QWORD *)(v7 - 136), *(_QWORD *)(v7 - 208));
  v19 = *(_QWORD *)(v7 - 232);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v19 + 16))(*(_QWORD *)(v7 - 184), *(_QWORD *)(v7 - 296), *(_QWORD *)(v7 - 176));
  v20 = *(_QWORD *)(v7 - 192);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v20 + 16))(*(_QWORD *)(v7 - 160), *(_QWORD *)(v7 - 128), *(_QWORD *)(v7 - 152));
  v21 = (*(unsigned __int8 *)(v17 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v22 = (v2 + *(unsigned __int8 *)(v18 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v23 = (*(_QWORD *)(v7 - 360) + *(unsigned __int8 *)(v19 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v24 = (*(_QWORD *)(v7 - 336) + *(unsigned __int8 *)(v20 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = (*(_QWORD *)(v7 - 304) + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (char *)swift_allocObject();
  v27 = *(_QWORD *)(v7 - 320);
  *((_QWORD *)v26 + 2) = v6;
  *((_QWORD *)v26 + 3) = v27;
  v28 = *(_QWORD *)(v7 - 312);
  *((_QWORD *)v26 + 4) = v4;
  *((_QWORD *)v26 + 5) = v28;
  v29 = *(_QWORD *)(v7 - 288);
  *((_QWORD *)v26 + 6) = v16;
  *((_QWORD *)v26 + 7) = v29;
  v30 = *(_QWORD *)(v7 - 200);
  *((_QWORD *)v26 + 8) = *(_QWORD *)(v7 - 280);
  *((_QWORD *)v26 + 9) = v30;
  *((_QWORD *)v26 + 10) = *(_QWORD *)(v7 - 264);
  v31 = *(_QWORD **)(v7 - 272);
  sub_23AA724E8((uint64_t)v31, (uint64_t)(v26 + 88), qword_2542E48C0);
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v7 - 248) + 32))(&v26[v21], *(_QWORD *)(v7 - 224), *(_QWORD *)(v7 - 376));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v7 - 240) + 32))(&v26[v22], *(_QWORD *)(v7 - 216), *(_QWORD *)(v7 - 208));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v7 - 232) + 32))(&v26[v23], *(_QWORD *)(v7 - 184), *(_QWORD *)(v7 - 176));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v7 - 192) + 32))(&v26[v24], *(_QWORD *)(v7 - 160), *(_QWORD *)(v7 - 152));
  v32 = *(_QWORD **)(v7 - 256);
  sub_23AA724E8((uint64_t)v32, (uint64_t)&v26[v25], &qword_2542E5050);
  v33 = *(void (**)(_QWORD, _QWORD *, _QWORD, _QWORD, _QWORD, void *, _QWORD *, _QWORD, void (*)(), char *))(**(_QWORD **)(v7 - 368) + 592);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AC25990(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
  sub_23AAB7E4C(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
  v34 = *(void **)(v7 - 328);
  v33(*(_QWORD *)(v7 - 144), v31, *(_QWORD *)(v7 - 136), *(_QWORD *)(v7 - 352), *(_QWORD *)(v7 - 128), v34, v32, *(_QWORD *)(v7 - 344), sub_23ADA0E6C, v26);
  swift_release();
  swift_release();

}

void sub_23AD93820(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  _BYTE v21[16];
  unint64_t v22;

  if ((a2 & 1) != 0)
  {
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a4;
    *(_QWORD *)(v17 + 24) = a5;
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = a6;
    v18[3] = a1;
    v18[4] = a4;
    v18[5] = a5;
    v18[6] = a3;
    v18[7] = a7;
    v20 = 1;
    sub_23AAFCDA4(a1, 1);
    swift_retain();
    sub_23AAFCDA4(a1, 1);
    v19 = type metadata accessor for Continuation();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23AD02DFC((uint64_t)"stageUpdate(itemID:capturedContent:requestedState:otherVersion:baseVersion:on:result:nonSyncableAttributes:completion:)", 119, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v17, (uint64_t)sub_23ADA114C, (uint64_t)v18, v19, MEMORY[0x24BEE0D00]);
    swift_release();
    swift_release();
  }
  else
  {
    sub_23AA724E8(a8, (uint64_t)v21, qword_2542E48C0);
    if (v22 >> 60 == 11 || !sub_23AE4F6B4())
    {
      swift_retain();
      sub_23AD93E28();
    }
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a4;
    *(_QWORD *)(v14 + 24) = a5;
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = a4;
    v15[3] = a5;
    v15[4] = a1;
    sub_23AAFCDA4(a1, 0);
    swift_retain();
    sub_23AAFCDA4(a1, 0);
    v16 = type metadata accessor for Continuation();
    swift_retain();
    sub_23AD02DFC((uint64_t)"stageUpdate(itemID:capturedContent:requestedState:otherVersion:baseVersion:on:result:nonSyncableAttributes:completion:)", 119, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD43544, v14, (uint64_t)sub_23ADA10F4, (uint64_t)v15, v16, MEMORY[0x24BEE0D00]);
    swift_release();
    swift_release();
    v20 = 0;
  }
  sub_23ACF6618(a1, v20, (void (*)(id))MEMORY[0x24BEE4EF8]);
}

void sub_23AD93AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[14];

  v17[8] = a5;
  v17[9] = a6;
  v17[0] = a4;
  v17[1] = a3;
  v17[7] = a2;
  v17[6] = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)a1 + 568), *(_QWORD *)(*(_QWORD *)a1 + 584), a4);
  v6 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v6);
  v17[5] = (char *)v17 - v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17[4] = type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v11 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v11);
  v17[3] = (char *)v17 - v12;
  v13 = swift_getAssociatedTypeWitness();
  v14 = swift_getAssociatedTypeWitness();
  v15 = swift_getAssociatedConformanceWitness();
  v16 = swift_getAssociatedConformanceWitness();
  v17[10] = v13;
  v17[11] = v14;
  v17[12] = v15;
  v17[13] = v16;
  type metadata accessor for FileItemVersion();
}

void sub_23AD93C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v3;
  *(_QWORD *)(v4 - 96) = v0;
  *(_QWORD *)(v4 - 88) = v2;
  type metadata accessor for Reconciliation.ReconcileAfterPropagation();
}

void sub_23AD93CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t *v22;

  *(_QWORD *)(v12 - 176) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (uint64_t *)((char *)&a9 - v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v10, 1, 1, v9);
  v15 = *(_QWORD *)(v11 + *(_QWORD *)(*(_QWORD *)v11 + 592));
  v16 = *(_QWORD *)(v12 - 168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v12 - 160) - 8) + 56))(v16, 1, 1);
  v17 = *(_QWORD *)(v12 - 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v12 - 144) - 8) + 56))(v17, 1, 1);
  v18 = *(void **)(v11 + *(_QWORD *)(*(_QWORD *)v11 + 544));
  v19 = *(void **)(v12 - 136);
  v20 = v19;
  v21 = v18;
  v22 = (uint64_t *)swift_retain();
  sub_23AD44420(v22, v10, v15, 0, v16, v17, 0, 0, v14, 0, (uint64_t)v19, (uint64_t)v18);
}

void sub_23AD93DAC()
{
  sub_23AD5B170();
}

uint64_t sub_23AD93DC4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v4 - 184))(0, 0, 0, a1);

  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 176) + 8))(v3, v2);
}

void sub_23AD93E28()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD93F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;

  *(_QWORD *)(v9 - 152) = a1;
  v10 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v9 - 168) = v10;
  *(_QWORD *)(v9 - 280) = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 - 160) = (char *)&a9 - v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 112) = v13;
  *(_QWORD *)(v9 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 96) = v15;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD94000(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v37[96];

  v4 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v3 - 184) = v4;
  *(_QWORD *)(v3 - 176) = a1;
  *(_QWORD *)(v3 - 288) = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = &v37[-v5];
  *(_QWORD *)(v3 - 296) = &v37[-v5];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v3 - 312) = v10;
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = &v37[-v14];
  *(_QWORD *)(v3 - 304) = &v37[-v14];
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v3 - 320) = &v37[-v18];
  (*(void (**)(void))(v16 + 16))();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v11 + 16))(v15, *(_QWORD *)(v3 - 272), v10);
  v19 = *(_QWORD *)(v3 - 184);
  (*(void (**)(_BYTE *, _QWORD, _QWORD))(v19 + 16))(v6, *(_QWORD *)(v3 - 264), *(_QWORD *)(v3 - 176));
  v20 = *(_QWORD *)(v3 - 168);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v20 + 16))(*(_QWORD *)(v3 - 160), *(_QWORD *)(v3 - 256), *(_QWORD *)(v3 - 152));
  v21 = (*(unsigned __int8 *)(v16 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v22 = (v17 + *(unsigned __int8 *)(v11 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = (v12 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v3 - 336) = v23;
  v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = (*(unsigned __int8 *)(v19 + 80) + v24 + 56) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  *(_QWORD *)(v3 - 328) = v25;
  v26 = (*(_QWORD *)(v3 - 288) + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v3 - 288) = v26;
  v27 = (v26 + 255) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v3 - 264) = v27;
  v28 = (*(unsigned __int8 *)(v20 + 80) + v27 + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  *(_QWORD *)(v3 - 272) = v28;
  *(_QWORD *)(v3 - 256) = (*(_QWORD *)(v3 - 280) + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (char *)swift_allocObject();
  *((_QWORD *)v29 + 2) = *(_QWORD *)(v3 - 248);
  *((_QWORD *)v29 + 3) = v2;
  *((_QWORD *)v29 + 4) = *(_QWORD *)(v3 - 240);
  *((_QWORD *)v29 + 5) = v1;
  v30 = *(_QWORD *)(v3 - 136);
  *((_QWORD *)v29 + 6) = *(_QWORD *)(v3 - 144);
  *((_QWORD *)v29 + 7) = v30;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 32))(&v29[v21], *(_QWORD *)(v3 - 320), AssociatedTypeWitness);
  (*(void (**)(char *, _QWORD, _QWORD))(v11 + 32))(&v29[v22], *(_QWORD *)(v3 - 304), *(_QWORD *)(v3 - 312));
  v31 = *(_QWORD **)(v3 - 224);
  *(_QWORD *)&v29[*(_QWORD *)(v3 - 336)] = *(_QWORD *)(v3 - 232);
  sub_23AA724E8((uint64_t)v31, (uint64_t)&v29[v24], qword_2542E48C0);
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v3 - 184) + 32))(&v29[*(_QWORD *)(v3 - 328)], *(_QWORD *)(v3 - 296), *(_QWORD *)(v3 - 176));
  v32 = *(_QWORD **)(v3 - 216);
  sub_23AA724E8((uint64_t)v32, (uint64_t)&v29[*(_QWORD *)(v3 - 288)], &qword_2542E5050);
  v33 = &v29[*(_QWORD *)(v3 - 264)];
  v34 = *(_QWORD *)(v3 - 200);
  *(_QWORD *)v33 = *(_QWORD *)(v3 - 208);
  *((_QWORD *)v33 + 1) = v34;
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v3 - 168) + 32))(&v29[*(_QWORD *)(v3 - 272)], *(_QWORD *)(v3 - 160), *(_QWORD *)(v3 - 152));
  *(_QWORD *)&v29[*(_QWORD *)(v3 - 256)] = *(_QWORD *)(v3 - 192);
  swift_retain();
  v35 = *(_QWORD *)(v3 - 136);
  swift_retain();
  swift_retain();
  sub_23AC25990(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
  sub_23AAB7E4C(v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
  swift_retain();
  swift_retain();
  sub_23AD944B4(*(_QWORD *)(v3 - 128), v35, (uint64_t (*)(_QWORD, _QWORD))sub_23AD9F92C, (uint64_t)v29);
  return swift_release();
}

uint64_t sub_23AD943A4(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v1 + 16) = 0;
  swift_release();
  if ((*(_BYTE *)(v1 + 128) & 2) == 0
    || (v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 624),
        swift_beginAccess(),
        AssociatedTypeWitness = swift_getAssociatedTypeWitness(),
        AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(),
        v7 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v3, 1, v7))
    || *(_BYTE *)(v3 + *(int *)(v7 + 40)) != 1)
  {
    a1 = sub_23AF1A800(a1 & 1);
  }
  return a1 & 1;
}

uint64_t sub_23AD944B4(unint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v23 = a1;
  v24 = a2;
  v7 = *(_QWORD **)v4;
  v8 = *(_QWORD *)(*(_QWORD *)v4 + 584);
  v9 = *(_QWORD *)(*(_QWORD *)v4 + 568);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v21 - v13;
  if ((*(_BYTE *)(v4 + v7[75] + 6) & 4) == 0 || sub_23AE4F6B4())
    return a3(MEMORY[0x24BEE4AF8], 0);
  v16 = swift_allocObject();
  v22 = v16;
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v14, v23, AssociatedTypeWitness);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = (v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = v7[70];
  *((_QWORD *)v18 + 3) = v9;
  *((_QWORD *)v18 + 4) = v7[72];
  *((_QWORD *)v18 + 5) = v8;
  *((_QWORD *)v18 + 6) = v24;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v18[v17], v14, AssociatedTypeWitness);
  v19 = &v18[v23];
  *(_QWORD *)v19 = a3;
  *((_QWORD *)v19 + 1) = a4;
  swift_retain_n();
  swift_retain();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5608);
  sub_23ACFF994((uint64_t)"getListOfUpdatedConflicts(itemID:on:completion:)", 48, 2, (uint64_t)sub_23AAB5414, v22, (uint64_t)sub_23AD9FC90, (uint64_t)v18, v20);
  swift_release();
  return swift_release();
}

_QWORD *sub_23AD94698(_QWORD **a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *result;
  unint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD, _QWORD);
  void (*v24)(uint8_t *);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t (*)(void *, char), _QWORD *);
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t AssociatedTypeWitness;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  _QWORD **v76;
  uint64_t (*v77)(_QWORD, _QWORD);
  uint64_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[31];
  _BYTE v83[224];
  uint64_t v84;
  uint64_t v85;

  v78 = a4;
  v77 = a3;
  v6 = (*a1)[12];
  v68 = (*a1)[10];
  v69 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v75 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v74 = (char *)&v61 - v7;
  v8 = sub_23B1C5E4C();
  v72 = *(_QWORD *)(v8 - 8);
  v73 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v71 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_getAssociatedTypeWitness();
  v11 = sub_23B1C6C98();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v61 - v14;
  v16 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v61 - v17;
  v76 = a1;
  v19 = (uint64_t)v79;
  result = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t))(*a1[4] + 264))(v82, a2);
  if (!v19)
  {
    v66 = v16;
    v67 = v15;
    v62 = v12;
    v63 = v11;
    v79 = (uint8_t *)a2;
    v21 = (unint64_t)v76;
    v64 = v18;
    v65 = v10;
    sub_23AA724E8((uint64_t)v82, (uint64_t)v83, &qword_2542E5050);
    if (sub_23AAFCF2C((uint64_t)v83) == 1)
      return (_QWORD *)v77(MEMORY[0x24BEE4AF8], 0);
    v22 = v84;
    v23 = v77;
    if (!v84)
    {
      sub_23AAB7E4C(v82, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      return (_QWORD *)v23(MEMORY[0x24BEE4AF8], 0);
    }
    v24 = *(void (**)(uint8_t *))(**(_QWORD **)(v21 + 16) + 160);
    swift_bridgeObjectRetain();
    v25 = v67;
    v26 = (uint64_t)v79;
    v24(v79);
    v61 = v22;
    v28 = v65;
    v27 = v66;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v25, 1, v65) == 1)
    {
      swift_bridgeObjectRelease();
      sub_23AAB7E4C(v82, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v25, v63);
      return (_QWORD *)v23(MEMORY[0x24BEE4AF8], 0);
    }
    v63 = 0;
    v29 = v64;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v64, v25, v28);
    if (fpfs_supports_partial_conflicts_resolution())
    {
      v30 = *(_QWORD **)(*(_QWORD *)(v21 + 40) + 16);
      v31 = v30[17] + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
      swift_beginAccess();
      v32 = *(unsigned int *)(v31 + 8);
      v33 = (_QWORD *)swift_allocObject();
      v33[2] = v21;
      v33[3] = v23;
      v33[4] = v78;
      v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t (*)(void *, char), _QWORD *))(*v30 + 552);
      swift_retain();
      swift_retain();
      swift_retain();
      v34(v29, v32, v61, sub_23AD9FD08, v33);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_23AAB7E4C(v82, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v29, v28);
    }
    else
    {
      v80 = MEMORY[0x24BEE4AF8];
      v35 = (id)fpfs_current_or_default_log();
      v36 = v71;
      sub_23B1C5E58();
      v37 = v26;
      v39 = v74;
      v38 = v75;
      v40 = AssociatedTypeWitness;
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v37, AssociatedTypeWitness);
      v41 = sub_23B1C5E40();
      v42 = sub_23B1C6A94();
      if (os_log_type_enabled(v41, v42))
      {
        v43 = (uint8_t *)swift_slowAlloc();
        v44 = swift_slowAlloc();
        v85 = v44;
        *(_DWORD *)v43 = 136315138;
        v79 = v43 + 4;
        swift_getAssociatedConformanceWitness();
        v45 = sub_23B1C7304();
        v81 = sub_23AABEC68(v45, v46, &v85);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v40);
        _os_log_impl(&dword_23AA66000, v41, v42, "⚔️  marking all loseres as resolved for %s", v43, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v44, -1, -1);
        MEMORY[0x23B8614BC](v43, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
      }

      (*(void (**)(char *, uint64_t))(v72 + 8))(v36, v73);
      v47 = *(_QWORD *)(v61 + 16);
      if (v47)
      {
        v48 = (uint64_t *)(v61 + 48);
        do
        {
          v75 = v47;
          v49 = *(v48 - 2);
          v50 = *(v48 - 1);
          v52 = *v48;
          v51 = v48[1];
          v54 = v48[2];
          v53 = (char *)v48[3];
          v55 = v48[5];
          v72 = v48[4];
          sub_23AAAE668(v49, v50);
          v73 = v52;
          swift_bridgeObjectRetain();
          sub_23AAAE668(v51, v54);
          swift_bridgeObjectRetain();
          v74 = v53;
          swift_bridgeObjectRetain();
          sub_23AAAE668(v49, v50);
          sub_23AAAE668(v51, v54);
          swift_bridgeObjectRetain();
          v56 = (void *)sub_23B1C5AA4();
          v76 = (_QWORD **)v54;
          v57 = (void *)sub_23B1C5AA4();
          v79 = (uint8_t *)v51;
          if (v55)
          {
            v58 = (void *)sub_23B1C63BC();
            swift_bridgeObjectRelease();
          }
          else
          {
            v58 = 0;
          }
          v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC83D8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v56, v57, v58);
          sub_23AAAE53C((uint64_t)v79, (unint64_t)v76);
          sub_23AAAE53C(v49, v50);

          v60 = v59;
          MEMORY[0x23B85F008](objc_msgSend(v60, sel_setConflictResolved_, 1));
          if (*(_QWORD *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23B1C6740();
          v48 += 8;
          sub_23B1C6788();
          sub_23B1C671C();

          sub_23AAAE53C(v49, v50);
          swift_bridgeObjectRelease();
          sub_23AAAE53C((uint64_t)v79, (unint64_t)v76);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v47 = v75 - 1;
        }
        while (v75 != 1);
      }
      swift_bridgeObjectRelease();
      v77(v80, 0);
      swift_bridgeObjectRelease();
      sub_23AAB7E4C(v82, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v64, v65);
    }
  }
  return result;
}

uint64_t sub_23AD94DFC(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a4;
  *(_QWORD *)(v9 + 24) = a5;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  a2 &= 1u;
  *(_BYTE *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a4;
  *(_QWORD *)(v10 + 40) = a5;
  swift_retain_n();
  sub_23AA724DC(a1, a2);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5608);
  sub_23ACFFB5C((uint64_t)"getListOfUpdatedConflicts(itemID:on:completion:)", 48, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AAB5414, v9, (uint64_t)sub_23AD9FD50, v10, v11);
  swift_release();
  return swift_release();
}

void sub_23AD94EF8(void *a1, char a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  _QWORD *v24;
  id v25;
  void (*v26)(id);
  _QWORD v27[2];
  void (*v28)(_QWORD, _QWORD);
  uint64_t v29;
  os_log_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;

  v9 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v31 = a4;
    v14 = a1;
    v15 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v16 = a1;
    v17 = sub_23B1C5E40();
    v18 = sub_23B1C6AA0();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v29 = v4;
      v20 = (uint8_t *)v19;
      v21 = swift_slowAlloc();
      v30 = v17;
      v22 = (_QWORD *)v21;
      v28 = a3;
      *(_DWORD *)v20 = 138412290;
      v27[1] = v20 + 4;
      swift_getErrorValue();
      v23 = sub_23B0D9CF0(v33);
      v32 = v23;
      a3 = v28;
      sub_23B1C6CBC();
      *v22 = v23;
      sub_23ACF6618(a1, 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
      _os_log_impl(&dword_23AA66000, v30, v18, "⚔️  Failed updateConflictList: %@", v20, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      v24 = v22;
      v17 = v30;
      MEMORY[0x23B8614BC](v24, -1, -1);
      MEMORY[0x23B8614BC](v20, -1, -1);
    }
    else
    {
      sub_23ACF6618(a1, 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v25 = a1;
    a3(a1, 1);
    v26 = (void (*)(id))MEMORY[0x24BEE4BC0];
    sub_23ACF6618(a1, 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
    sub_23ACF6618(a1, 1, v26);
  }
  else
  {
    if (a1)
      v13 = a1;
    else
      v13 = (void *)MEMORY[0x24BEE4AF8];
    a3(v13, 0);
  }
}

void sub_23AD95168()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD9527C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  void (*v31)(_BYTE *, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, void (*)(), char *);
  _BYTE v47[64];

  v6 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v4 - 256) = v6;
  *(_QWORD *)(v4 - 248) = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 160) = &v47[-v7];
  v8 = v3[73];
  v9 = v3[71];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v4 - 240) = v9;
  *(_QWORD *)(v4 - 232) = v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = &v47[-v17];
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = *(_QWORD *)(v19 + 64);
  v21 = MEMORY[0x24BDAC7A8](v16);
  v24 = &v47[-v23];
  v25 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(v4 - 152) = a1;
  *(_QWORD *)(v4 - 296) = v2;
  if ((v25 & 0x200000) != 0 || (*(_BYTE *)(v1 + v3[75] + 5) & 8) != 0)
  {
    v26 = v21;
    if ((v25 & 0x8000000000) != 0)
      v30 = 66;
    else
      v30 = 2;
    v27 = *(_QWORD *)(v4 - 264);
    v28 = *(_QWORD *)(v4 - 272);
    v29 = *(_DWORD *)(v4 - 280);
  }
  else
  {
    v26 = v21;
    v27 = *(_QWORD *)(v4 - 264);
    v28 = *(_QWORD *)(v4 - 272);
    v29 = *(_DWORD *)(v4 - 280);
    if ((v25 & 0x8000000000) != 0)
      v30 = 64;
    else
      v30 = 0;
  }
  if ((v29 & 1) != 0)
    v28 = 0;
  *(_QWORD *)(v4 - 272) = v28;
  if (*(_BYTE *)(v1 + v3[81]))
    v30 |= 0x80uLL;
  *(_QWORD *)(v4 - 264) = v30;
  *(_QWORD *)(v4 - 304) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 - 128) + 32) + 16);
  *(_QWORD *)(v4 - 288) = *(_QWORD *)(v1 + v3[75]);
  *(_QWORD *)(v4 - 280) = *(_QWORD *)(v1 + v3[68]);
  v31 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v19 + 16);
  v32 = v1;
  *(_QWORD *)(v4 - 336) = v1;
  *(_QWORD *)(v4 - 328) = v24;
  v33 = v22;
  v31(v24, *(_QWORD *)(v4 - 144), v22);
  v34 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16);
  *(_QWORD *)(v4 - 312) = v18;
  v35 = *(_QWORD *)(v4 - 136);
  *(_QWORD *)(v4 - 320) = v26;
  v34(v18, v35, v26);
  v36 = *(_QWORD *)(v4 - 256);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v36 + 16))(*(_QWORD *)(v4 - 160), v27, *(_QWORD *)(v4 - 152));
  v37 = (*(unsigned __int8 *)(v19 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v38 = (v20 + *(unsigned __int8 *)(v14 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v39 = (v15 + *(unsigned __int8 *)(v36 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v40 = (*(_QWORD *)(v4 - 248) + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v41 = (char *)swift_allocObject();
  v42 = *(_QWORD *)(v4 - 240);
  *((_QWORD *)v41 + 2) = *(_QWORD *)(v4 - 224);
  *((_QWORD *)v41 + 3) = v42;
  v43 = *(_QWORD *)(v4 - 232);
  *((_QWORD *)v41 + 4) = *(_QWORD *)(v4 - 296);
  *((_QWORD *)v41 + 5) = v43;
  *((_QWORD *)v41 + 6) = *(_QWORD *)(v4 - 128);
  *((_QWORD *)v41 + 7) = v32;
  v44 = *(_QWORD *)(v4 - 208);
  *((_QWORD *)v41 + 8) = *(_QWORD *)(v4 - 216);
  *((_QWORD *)v41 + 9) = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 32))(&v41[v37], *(_QWORD *)(v4 - 328), v33);
  (*(void (**)(char *, _QWORD, _QWORD))(v14 + 32))(&v41[v38], *(_QWORD *)(v4 - 312), *(_QWORD *)(v4 - 320));
  (*(void (**)(char *, _QWORD, _QWORD))(v36 + 32))(&v41[v39], *(_QWORD *)(v4 - 160), *(_QWORD *)(v4 - 152));
  *(_QWORD *)&v41[v40] = *(_QWORD *)(v4 - 200);
  v45 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, void (*)(), char *))(**(_QWORD **)(v4 - 304) + 616);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v45(*(_QWORD *)(v4 - 144), *(_QWORD *)(v4 - 136), *(_QWORD *)(v4 - 288), *(_QWORD *)(v4 - 176), *(_QWORD *)(v4 - 168), *(_QWORD *)(v4 - 184), *(_QWORD *)(v4 - 280), *(_QWORD *)(v4 - 264), *(_QWORD *)(v4 - 192), *(_QWORD *)(v4 - 272), sub_23ADA00C0, v41);
  swift_release();
  return swift_release();
}

void sub_23AD9563C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD9571C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v45[64];

  v3 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v2 - 152) = v3;
  *(_QWORD *)(v2 - 144) = a1;
  *(_QWORD *)(v2 - 248) = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v2 - 168) = &v45[-v4];
  v5 = *(_QWORD *)(v1 + 96);
  v6 = *(_QWORD *)(v1 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v2 - 264) = v5;
  *(_QWORD *)(v2 - 272) = v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v2 - 160) = v11;
  *(_QWORD *)(v2 - 296) = v10;
  *(_QWORD *)(v2 - 280) = *(_QWORD *)(v11 + 64);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v45[-v13];
  *(_QWORD *)(v2 - 288) = &v45[-v13];
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v2 - 312) = AssociatedTypeWitness;
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v18 = &v45[-v17];
  *(_QWORD *)(v2 - 304) = &v45[-v17];
  type metadata accessor for ItemPropagationResult(255, v6, v5, v19);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v20 = sub_23B1C74F0();
  v21 = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v2 - 328) = v20;
  v22 = *(_QWORD *)(v21 + 64);
  MEMORY[0x24BDAC7A8](v20);
  v24 = &v45[-v23];
  *(_QWORD *)(v2 - 320) = &v45[-v23];
  v25 = swift_allocObject();
  *(_QWORD *)(v2 - 256) = v25;
  v26 = *(_QWORD *)(v2 - 128);
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v2 - 136);
  *(_QWORD *)(v25 + 24) = v26;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v21 + 16))(v24, *(_QWORD *)(v2 - 232), v20);
  *(_QWORD *)(v2 - 336) = v15;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v15 + 16))(v18, *(_QWORD *)(v2 - 224), AssociatedTypeWitness);
  v27 = *(_QWORD *)(v2 - 160);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v27 + 16))(v14, *(_QWORD *)(v2 - 216), v10);
  v28 = *(_QWORD *)(v2 - 152);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v28 + 16))(*(_QWORD *)(v2 - 168), *(_QWORD *)(v2 - 240), *(_QWORD *)(v2 - 144));
  v29 = (*(unsigned __int8 *)(v21 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v30 = (v22 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31 = (*(unsigned __int8 *)(v15 + 80) + v30 + 8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v32 = (v16 + *(unsigned __int8 *)(v27 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v33 = (*(_QWORD *)(v2 - 280) + *(unsigned __int8 *)(v28 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v34 = (*(_QWORD *)(v2 - 248) + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 23) & 0xFFFFFFFFFFFFFFF8;
  v36 = (char *)swift_allocObject();
  v37 = *(_QWORD *)(v2 - 272);
  *((_QWORD *)v36 + 2) = *(_QWORD *)(v2 - 208);
  *((_QWORD *)v36 + 3) = v37;
  v38 = *(_QWORD *)(v2 - 264);
  *((_QWORD *)v36 + 4) = *(_QWORD *)(v2 - 200);
  *((_QWORD *)v36 + 5) = v38;
  (*(void (**)(char *, _QWORD, _QWORD))(v21 + 32))(&v36[v29], *(_QWORD *)(v2 - 320), *(_QWORD *)(v2 - 328));
  v39 = *(_QWORD *)(v2 - 192);
  *(_QWORD *)&v36[v30] = v39;
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v2 - 336) + 32))(&v36[v31], *(_QWORD *)(v2 - 304), *(_QWORD *)(v2 - 312));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v2 - 160) + 32))(&v36[v32], *(_QWORD *)(v2 - 288), *(_QWORD *)(v2 - 296));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v2 - 152) + 32))(&v36[v33], *(_QWORD *)(v2 - 168), *(_QWORD *)(v2 - 144));
  v40 = &v36[v34];
  v41 = *(_QWORD *)(v2 - 128);
  *(_QWORD *)v40 = *(_QWORD *)(v2 - 136);
  *((_QWORD *)v40 + 1) = v41;
  v42 = *(_QWORD *)(v2 - 176);
  *(_QWORD *)&v36[v35] = *(_QWORD *)(v2 - 184);
  *(_QWORD *)&v36[(v35 + 15) & 0xFFFFFFFFFFFFFFF8] = v42;
  v43 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_23AD02DFC((uint64_t)"update(itemID:capturedContent:stagedContext:requestedState:otherVersion:baseVersion:on:result:nonSyncableAttributes:completion:)", 128, 2u, (uint64_t)sub_23ADA0264, v39, (uint64_t)sub_23AD43544, *(_QWORD *)(v2 - 256), (uint64_t)sub_23ADA06EC, (uint64_t)v36, v43, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23AD95B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[15];
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v19 = a8;
  v16[7] = a7;
  v16[8] = a6;
  v18 = a5;
  v22 = a4;
  v16[5] = a3;
  v28 = a1;
  v21 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v20 = type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  v10 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)v16 - v11;
  v12 = swift_getAssociatedTypeWitness();
  v13 = swift_getAssociatedTypeWitness();
  v14 = swift_getAssociatedConformanceWitness();
  v15 = swift_getAssociatedConformanceWitness();
  v24 = v12;
  v25 = v13;
  v26 = v14;
  v27 = v15;
  type metadata accessor for FileItemVersion();
}

void sub_23AD95CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 296) = a1;
  v14 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 144) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for Reconciliation.ReconcileAfterPropagation();
}

void sub_23AD95D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t TupleTypeMetadata2;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int EnumCaseMultiPayload;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t AssociatedTypeWitness;
  uint64_t v63;
  uint64_t AssociatedConformanceWitness;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(uint64_t, uint64_t, uint64_t);
  int v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  void *v110;
  id v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  id v116;
  uint64_t *v117;

  *(_QWORD *)(v14 - 264) = a1;
  *(_QWORD *)(v14 - 280) = *(_QWORD *)(a1 - 8);
  v15 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 272) = (char *)&a9 - v16;
  *(_QWORD *)(v14 - 376) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v14 - 368) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for SnapshotItem(0, v12, v11, v18);
  *(_QWORD *)(v14 - 216) = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v14 - 352) = (char *)&a9 - v20;
  *(_QWORD *)(v14 - 304) = v21;
  v22 = sub_23B1C6C98();
  *(_QWORD *)(v14 - 168) = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v14 - 160) = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v14 - 152) = (char *)&a9 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v14 - 128) = (char *)&a9 - v26;
  *(_QWORD *)(v14 - 400) = v13;
  *(_QWORD *)(v14 - 344) = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v14 - 320) = (char *)&a9 - v27;
  *(_QWORD *)(v14 - 200) = v12;
  *(_QWORD *)(v14 - 336) = v11;
  v29 = type metadata accessor for ItemPropagationResult(0, v12, v11, v28);
  *(_QWORD *)(v14 - 208) = *(_QWORD *)(v29 - 8);
  v30 = MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v14 - 360) = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&a9 - v32;
  v34 = sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v36 = sub_23B1C74F0();
  v37 = MEMORY[0x24BDAC7A8](v36);
  v39 = (uint64_t *)((char *)&a9 - v38);
  *(_QWORD *)(v14 - 184) = *(_QWORD *)(v34 - 8);
  *(_QWORD *)(v14 - 176) = v34;
  v40 = MEMORY[0x24BDAC7A8](v37);
  *(_QWORD *)(v14 - 312) = (char *)&a9 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&a9 - v42;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v44 + 16))(v39, *(_QWORD *)(v14 - 72), v36);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_QWORD *)(v14 - 72) = v43;
  if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)(v14 - 328) = *v39;
    v46 = *(_QWORD *)(v14 - 208);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v43, 1, 1, v29);
    *(_QWORD *)(v14 - 344) = 0;
    v47 = 0;
    *(_QWORD *)(v14 - 320) = 0xE000000000000000;
    v48 = *(_QWORD *)(v14 - 128);
    v50 = *(_QWORD *)(v14 - 184);
    v49 = *(_QWORD *)(v14 - 176);
    goto LABEL_20;
  }
  *(_QWORD *)(v14 - 424) = v9;
  *(_QWORD *)(v14 - 432) = v10;
  v51 = *(_QWORD *)(v14 - 320);
  *(_QWORD *)(v14 - 416) = v33;
  v52 = *(void **)((char *)v39 + *(int *)(TupleTypeMetadata2 + 48));
  v53 = *(_QWORD *)(v14 - 208);
  v54 = v29;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v53 + 48))(v39, 1, v29) == 1)
  {
    v43 = *(char **)(v14 - 72);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v43, 1, 1, v29);
    *(_QWORD *)(v14 - 328) = 0;
    v48 = *(_QWORD *)(v14 - 128);
    v50 = *(_QWORD *)(v14 - 184);
    v49 = *(_QWORD *)(v14 - 176);
    v47 = v52;
    goto LABEL_10;
  }
  v55 = *(_QWORD *)(v14 - 416);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v53 + 32))(v55, v39, v29);
  v56 = *(_QWORD *)(v14 - 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v56, v55, v29);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v56, 0, 1, v29);
  v57 = *(_QWORD *)(v14 - 336);
  v58 = *(void (**)(uint64_t, uint64_t))(v57 + 64);
  *(_QWORD *)(v14 - 224) = v52;
  *(_QWORD *)(v14 - 440) = v52;
  v59 = *(_QWORD *)(v14 - 200);
  *(_QWORD *)(v14 - 448) = v58;
  v58(v59, v57);
  v60 = *(_QWORD *)(v14 - 400);
  v61 = sub_23ABDD55C(v60, *(_QWORD *)(v14 - 328));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 344) + 8))(v51, v60);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v14 - 320) = v54;
  v63 = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if (v61 != sub_23ABDD55C(v63, AssociatedConformanceWitness))
  {
    v70 = *(_QWORD *)(v14 - 200);
    v71 = type metadata accessor for FileTreeError(0, v70, v57, v65);
    MEMORY[0x23B8613CC](&unk_23B1D40CC, v71);
    *(_QWORD *)(v14 - 328) = swift_allocError();
    v72 = v57;
    v74 = v73;
    sub_23B1C6C98();
    swift_getTupleTypeMetadata2();
    v75 = *(_QWORD *)(v14 - 344);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v75 + 16))(v74, *(_QWORD *)(v14 - 408), v60);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v74, 0, 1, v60);
    v76 = *(_QWORD *)(v14 - 416);
    (*(void (**)(uint64_t, uint64_t))(v14 - 448))(v70, v72);
    swift_storeEnumTagMultiPayload();

    v29 = *(_QWORD *)(v14 - 320);
    (*(void (**)(uint64_t))(v53 + 8))(v76);
    v48 = *(_QWORD *)(v14 - 128);
    v50 = *(_QWORD *)(v14 - 184);
    v49 = *(_QWORD *)(v14 - 176);
    v43 = *(char **)(v14 - 72);
    v47 = *(void **)(v14 - 224);
LABEL_10:
    v46 = v53;
    if (v47)
      goto LABEL_11;
    goto LABEL_18;
  }
  v66 = v57;
  v29 = *(_QWORD *)(v14 - 320);
  v67 = sub_23AF219A4(*(_QWORD *)(v14 - 200), v66);
  v50 = *(_QWORD *)(v14 - 184);
  v48 = *(_QWORD *)(v14 - 128);
  v49 = *(_QWORD *)(v14 - 176);
  v43 = *(char **)(v14 - 72);
  v47 = *(void **)(v14 - 224);
  v46 = v53;
  v69 = *(void **)(v14 - 440);
  if (qword_23B1D86D8[v67] == qword_23B1D86D8[*(char *)(*(_QWORD *)(v14 - 192) + *(int *)(*(_QWORD *)(v14 - 240) + 40))])
  {
LABEL_7:
    (*(void (**)(_QWORD, uint64_t))(v46 + 8))(*(_QWORD *)(v14 - 416), v29);

    *(_QWORD *)(v14 - 328) = 0;
    if (v47)
    {
LABEL_11:
      *(_QWORD *)(v14 - 120) = 0x3A7265766D6F6420;
      *(_QWORD *)(v14 - 112) = 0xE800000000000000;
      v77 = objc_msgSend(v47, sel_description);
      sub_23B1C63E0();

      v43 = *(char **)(v14 - 72);
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v14 - 344) = *(_QWORD *)(v14 - 120);
      v78 = *(_QWORD *)(v14 - 112);
LABEL_19:
      *(_QWORD *)(v14 - 320) = v78;
LABEL_20:
      v80 = *(_QWORD *)(v14 - 200);
      v81 = *(_QWORD *)(v14 - 312);
      (*(void (**)(uint64_t, char *, uint64_t))(v50 + 16))(v81, v43, v49);
      v82 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
      v83 = v82(v81, 1, v29);
      *(_QWORD *)(v14 - 224) = v47;
      *(_QWORD *)(v14 - 200) = v82;
      if (v83 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v81, v49);
        v84 = *(void **)(v14 - 328);
        if (v84)
        {
          swift_bridgeObjectRelease();
          *(_QWORD *)(v14 - 120) = 0;
          *(_QWORD *)(v14 - 112) = 0xE000000000000000;
          sub_23B1C64F4();
          v85 = *(_QWORD *)(v14 - 240);
          MEMORY[0x23B8613CC](&unk_23B1DCA68, v85);
          v86 = *(_QWORD *)(v14 - 192);
          sub_23B1C7340();
        }
        else
        {
          *(_QWORD *)(v14 - 120) = 0;
          *(_QWORD *)(v14 - 112) = 0xE000000000000000;
          sub_23B1C6EFC();
          v100 = *(_QWORD *)(v14 - 112);
          *(_QWORD *)(v14 - 120) = *(_QWORD *)(v14 - 120);
          *(_QWORD *)(v14 - 112) = v100;
          sub_23B1C64F4();
          v85 = *(_QWORD *)(v14 - 240);
          MEMORY[0x23B8613CC](&unk_23B1DCA68, v85);
          v86 = *(_QWORD *)(v14 - 192);
          sub_23B1C7340();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
        }
        sub_23B1C64F4();
        *(_QWORD *)(v14 - 320) = *(_QWORD *)(v14 - 120);
        *(_QWORD *)(v14 - 312) = *(_QWORD *)(v14 - 112);
        (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v14 - 216) + 56))(v48, 1, 1, *(_QWORD *)(v14 - 304));
        v98 = *(_QWORD *)(v14 - 288);
        v99 = *(_QWORD *)(v14 - 296);
      }
      else
      {
        v87 = *(_QWORD *)(v14 - 360);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v87, v81, v29);
        v88 = *(_QWORD *)(v14 - 368);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 376) + 16))(v88, v87, v80);
        v89 = *(_QWORD *)(v14 - 352);
        sub_23AF15480(v88, v80, *(_QWORD *)(v14 - 336), v89);
        v90 = *(_QWORD *)(v14 - 216);
        v91 = *(_QWORD *)(v14 - 304);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16))(v48, v89, v91);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v48, 0, 1, v91);
        *(_QWORD *)(v14 - 120) = 0;
        *(_QWORD *)(v14 - 112) = 0xE000000000000000;
        sub_23B1C64F4();
        MEMORY[0x23B8613CC](&unk_23B1DD494, v91);
        sub_23B1C7340();
        sub_23B1C64F4();
        v93 = *(_QWORD *)(v14 - 120);
        v92 = *(_QWORD *)(v14 - 112);
        *(_QWORD *)(v14 - 120) = 0;
        *(_QWORD *)(v14 - 112) = 0xE000000000000000;
        sub_23B1C64F4();
        v85 = *(_QWORD *)(v14 - 240);
        MEMORY[0x23B8613CC](&unk_23B1DCA68, v85);
        sub_23B1C7340();
        sub_23B1C64F4();
        *(_QWORD *)(v14 - 120) = v93;
        *(_QWORD *)(v14 - 112) = v92;
        swift_bridgeObjectRetain();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v95 = *(_QWORD *)(v14 - 120);
        v94 = *(_QWORD *)(v14 - 112);
        *(_QWORD *)(v14 - 120) = 0;
        *(_QWORD *)(v14 - 112) = 0xE000000000000000;
        sub_23B1C6EFC();
        swift_bridgeObjectRelease();
        strcpy((char *)(v14 - 120), "stillPending:");
        *(_WORD *)(v14 - 106) = -4864;
        sub_23AF16528(*(_QWORD *)(v87 + *(int *)(v29 + 36)));
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        *(_QWORD *)(v14 - 120) = v95;
        *(_QWORD *)(v14 - 112) = v94;
        swift_bridgeObjectRetain();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v97 = *(_QWORD *)(v14 - 120);
        v96 = *(_QWORD *)(v14 - 112);
        *(_QWORD *)(v14 - 120) = 0;
        *(_QWORD *)(v14 - 112) = 0xE000000000000000;
        sub_23B1C6EFC();
        swift_bridgeObjectRelease();
        strcpy((char *)(v14 - 120), "shouldFetch:");
        *(_BYTE *)(v14 - 107) = 0;
        *(_WORD *)(v14 - 106) = -5120;
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        *(_QWORD *)(v14 - 120) = v97;
        *(_QWORD *)(v14 - 112) = v96;
        swift_bridgeObjectRetain();
        sub_23B1C64F4();
        v86 = *(_QWORD *)(v14 - 192);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v14 - 320) = *(_QWORD *)(v14 - 120);
        *(_QWORD *)(v14 - 312) = *(_QWORD *)(v14 - 112);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 216) + 8))(v89, v91);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 208) + 8))(v87, v29);
        v98 = *(_QWORD *)(v14 - 288);
        v99 = *(_QWORD *)(v14 - 296);
        v84 = *(void **)(v14 - 328);
      }
      v101 = *(_QWORD *)(v14 - 232);
      v102 = *(_QWORD *)(v99 - 8);
      v103 = *(_QWORD *)(v14 - 144);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 16))(v103, v98, v99);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v102 + 56))(v103, 0, 1, v99);
      v104 = *(_QWORD *)(v101 + *(_QWORD *)(*(_QWORD *)v101 + 592));
      v105 = *(_QWORD *)(v85 - 8);
      v106 = *(_QWORD *)(v14 - 136);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 16))(v106, v86, v85);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v105 + 56))(v106, 0, 1, v85);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v14 - 168) + 16))(*(_QWORD *)(v14 - 152), *(_QWORD *)(v14 - 128), *(_QWORD *)(v14 - 160));
      v107 = *(_QWORD *)(v14 - 72);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 - 200))(v107, 1, v29))
      {
        v108 = 0;
        v109 = 0;
        if (v84)
        {
LABEL_28:
          v110 = *(void **)(v101 + *(_QWORD *)(*(_QWORD *)v101 + 544));
          v111 = v84;
          v112 = v110;
          goto LABEL_31;
        }
      }
      else
      {
        v113 = *(int *)(v29 + 40);
        v108 = *(_QWORD *)(v107 + *(int *)(v29 + 36));
        v109 = *(unsigned __int8 *)(v107 + v113);
        if (v84)
          goto LABEL_28;
      }
      v110 = 0;
LABEL_31:
      v114 = (uint64_t)v84;
      v115 = *(void **)(v14 - 224);
      v116 = v115;
      v117 = (uint64_t *)swift_retain();
      sub_23AD44420(v117, *(_QWORD *)(v14 - 144), v104, 0, *(_QWORD *)(v14 - 136), *(_QWORD *)(v14 - 152), v108, v109, *(_QWORD **)(v14 - 272), (uint64_t)v115, v114, (uint64_t)v110);
    }
LABEL_18:
    *(_QWORD *)(v14 - 344) = 0;
    v78 = 0xE000000000000000;
    goto LABEL_19;
  }
  if (v67 == 3)
  {
    if (!*(_BYTE *)(*(_QWORD *)(v14 - 192) + *(int *)(*(_QWORD *)(v14 - 240) + 40)))
      goto LABEL_7;
  }
  else if (!v67 && *(_BYTE *)(*(_QWORD *)(v14 - 192) + *(int *)(*(_QWORD *)(v14 - 240) + 40)) == 3)
  {
    goto LABEL_7;
  }
  v79 = type metadata accessor for FileTreeError(0, *(_QWORD *)(v14 - 200), *(_QWORD *)(v14 - 336), v68);
  MEMORY[0x23B8613CC](&unk_23B1D40CC, v79);
  *(_QWORD *)(v14 - 328) = swift_allocError();
  swift_storeEnumTagMultiPayload();

  (*(void (**)(_QWORD, uint64_t))(v46 + 8))(*(_QWORD *)(v14 - 416), v29);
  if (v47)
    goto LABEL_11;
  goto LABEL_18;
}

void sub_23AD96B00()
{
  sub_23AD5B170();
}

uint64_t sub_23AD96B20(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  if (!v2)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v6 - 384))(0, *(_QWORD *)(v6 - 320), *(_QWORD *)(v6 - 312), a1);

  }
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 280) + 8))(v5, v3);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 168) + 8))(*(_QWORD *)(v6 - 128), *(_QWORD *)(v6 - 160));
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v6 - 184) + 8))(*(_QWORD *)(v6 - 72), *(_QWORD *)(v6 - 176));
}

void sub_23AD96BE0()
{
  type metadata accessor for ItemReconciliation();
}

void sub_23AD96C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v9[2] = a1;
  v12 = sub_23B1C6C98();
  v9[3] = *(_QWORD *)(v12 - 8);
  v9[4] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v9[5] = (char *)&a9 - v13;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[40] = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9[37] = type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v16);
  v17 = sub_23B1C6C98();
  v9[9] = v17;
  v9[7] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v9[8] = (char *)&a9 - v18;
  v19 = swift_getAssociatedTypeWitness();
  v20 = swift_getAssociatedTypeWitness();
  v21 = swift_getAssociatedConformanceWitness();
  v9[23] = v10;
  v9[24] = v11;
  v22 = swift_getAssociatedConformanceWitness();
  v9[87] = v19;
  v9[88] = v20;
  v9[89] = v21;
  v9[90] = v22;
  type metadata accessor for FileItemVersion();
}

void sub_23AD96DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;

  v12 = sub_23B1C6C98();
  v9[12] = v12;
  v9[10] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v9[11] = (char *)&a9 - v13;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9[25] = v10;
  v9[26] = v11;
  v17 = swift_getAssociatedConformanceWitness();
  v9[87] = AssociatedTypeWitness;
  v9[88] = v15;
  v9[89] = AssociatedConformanceWitness;
  v9[90] = v17;
  type metadata accessor for FileItemVersion();
}

void sub_23AD96EA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _BYTE v84[48];

  v5 = sub_23B1C6C98();
  v1[15] = *(_QWORD *)(v5 - 8);
  v1[16] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v1[29] = &v84[-v6];
  v7 = v1[40];
  v8 = sub_23B1C6C98();
  v1[28] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = &v84[-v11];
  v1[20] = v2;
  v13 = v1[39];
  v1[22] = *(_QWORD *)(v2 - 8);
  v14 = MEMORY[0x24BDAC7A8](v10);
  v1[13] = &v84[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v1[19] = &v84[-v17];
  v1[18] = *(_QWORD *)(v1[37] - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v1[6] = &v84[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v1[17] = &v84[-v21];
  v1[34] = a1;
  v22 = *(_QWORD *)(a1 - 8);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v1[14] = &v84[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = MEMORY[0x24BDAC7A8](v23);
  v1[33] = &v84[-v26];
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  v29 = MEMORY[0x24BDAC7A8](v25);
  v1[1] = &v84[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = &v84[-v32];
  MEMORY[0x24BDAC7A8](v31);
  v1[35] = &v84[-v34];
  v35 = *(_QWORD *)(*(_QWORD *)(v1[41] + 32) + 16);
  sub_23AA724E8(v13 + *(_QWORD *)(v1[36] + 632), v3 - 144, qword_2542E48C0);
  v36 = v13 + *(_QWORD *)(*(_QWORD *)v13 + 608);
  swift_beginAccess();
  v37 = v36;
  v38 = v1[28];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v12, v37, v38);
  v1[38] = v27;
  v39 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v27 + 48))(v12, 1, v28);
  v1[36] = v35;
  v1[21] = v22;
  if (v39 == 1)
  {
    swift_retain();
    sub_23AC25990((_QWORD *)(v3 - 144), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v12, v38);
    v40 = v1[25];
    v1[87] = v1[26];
    v1[88] = v1[23];
    v1[89] = v40;
    v1[90] = v1[24];
    type metadata accessor for Propagation.PropagationError();
  }
  (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v1[38] + 32))(v33, v12, v1[40]);
  v41 = v1[39];
  v42 = v41 + *(_QWORD *)(*(_QWORD *)v41 + 616);
  swift_beginAccess();
  v43 = v1[15];
  v44 = v1[29];
  v45 = v42;
  v46 = v1[16];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v44, v45, v46);
  v47 = v44;
  v48 = v1[34];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v47, 1, v48) == 1)
  {
    swift_retain();
    sub_23AC25990((_QWORD *)(v3 - 144), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
    (*(void (**)(_QWORD, uint64_t))(v43 + 8))(v1[29], v46);
    v49 = v1[25];
    v1[87] = v1[26];
    v1[88] = v1[23];
    v1[89] = v49;
    v1[90] = v1[24];
    type metadata accessor for Propagation.PropagationError();
  }
  v1[16] = v33;
  v50 = v1[14];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v22 + 32))(v50, v1[29], v48);
  v51 = v41 + *(_QWORD *)(*(_QWORD *)v41 + 640);
  swift_beginAccess();
  v53 = v1[10];
  v52 = v1[11];
  v54 = v51;
  v55 = v1[12];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v52, v54, v55);
  v56 = v1[22];
  v57 = v41;
  v58 = v1[20];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v52, 1, v58) == 1)
  {
    swift_retain();
    sub_23AC25990((_QWORD *)(v3 - 144), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v55);
    v59 = v1[25];
    v1[87] = v1[26];
    v1[88] = v1[23];
    v1[89] = v59;
    v1[90] = v1[24];
    type metadata accessor for Propagation.PropagationError();
  }
  v60 = v1[13];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v60, v52, v58);
  v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1[38] + 16);
  v62 = v1[35];
  v63 = v1[16];
  v64 = v1[40];
  v1[29] = v61;
  v61(v62, v63, v64);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v1[21] + 16))(v1[33], v50, v48);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v56 + 16))(v1[19], v60, v58);
  v65 = v57 + *(_QWORD *)(*(_QWORD *)v57 + 624);
  swift_beginAccess();
  v66 = v1[7];
  v67 = v1[8];
  v68 = v1[9];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v67, v65, v68);
  v69 = v1[18];
  v70 = v50;
  v71 = v1[37];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v67, 1, v71) == 1)
  {
    swift_retain();
    sub_23AC25990((_QWORD *)(v3 - 144), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v67, v68);
    v72 = v1[25];
    v1[87] = v1[26];
    v1[88] = v1[23];
    v1[89] = v72;
    v1[90] = v1[24];
    type metadata accessor for Propagation.PropagationError();
  }
  v73 = v70;
  v74 = v1[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32))(v74, v67, v71);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v69 + 16))(v1[17], v74, v71);
  v75 = v69;
  v76 = v57 + *(_QWORD *)(*(_QWORD *)v57 + 536);
  swift_retain();
  sub_23AC25990((_QWORD *)(v3 - 144), (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAE4B4);
  sub_23AD89EE0(v1[41], v76, (uint64_t)(v1 + 56));
  v77 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
  v77(v74, v71);
  v78 = *(void (**)(uint64_t, uint64_t))(v1[22] + 8);
  v79 = v1[13];
  v1[26] = v78;
  v78(v79, v58);
  v80 = *(void (**)(uint64_t, uint64_t))(v1[21] + 8);
  v81 = v1[34];
  v1[28] = v80;
  v80(v73, v81);
  (*(void (**)(_QWORD, _QWORD))(v1[38] + 8))(v1[16], v1[40]);
  sub_23AA724E8((uint64_t)(v1 + 56), (uint64_t)(v1 + 87), &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)(v1 + 87)) == 1)
  {
    v82 = *(int *)(v71 + 40);
    v83 = (_QWORD *)(v1[17] + v82 + *(int *)(type metadata accessor for ItemMetadata() + 148));
    swift_bridgeObjectRelease();
    *v83 = 0;
    v83[1] = 0;
  }
  if (v1[32])
  {
    v1[38] = v77;
    type metadata accessor for StagedContext();
    if (swift_dynamicCastClass())
    {
      sub_23AAB7E4C(v1 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
      swift_retain();
      sub_23AB00114();
    }
    sub_23AAB7E4C(v1 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Propagation.swift", 101, 2, 1428);
  }
  sub_23AAB7E4C(v1 + 56, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
  sub_23AD93190();
}

void sub_23AD97F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[14];

  v17[5] = a5;
  v17[6] = a6;
  v17[7] = a4;
  v17[8] = a3;
  v17[4] = a1;
  v17[3] = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*(_QWORD *)a2 + 568), *(_QWORD *)(*(_QWORD *)a2 + 584), a4);
  v6 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v6);
  v17[2] = (char *)v17 - v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v11 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v11);
  v17[1] = (char *)v17 - v12;
  v13 = swift_getAssociatedTypeWitness();
  v14 = swift_getAssociatedTypeWitness();
  v15 = swift_getAssociatedConformanceWitness();
  v16 = swift_getAssociatedConformanceWitness();
  v17[10] = v13;
  v17[11] = v14;
  v17[12] = v15;
  v17[13] = v16;
  type metadata accessor for FileItemVersion();
}

void sub_23AD98120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v5);
  *(_QWORD *)(v4 - 112) = v0;
  *(_QWORD *)(v4 - 104) = v2;
  *(_QWORD *)(v4 - 96) = v3;
  *(_QWORD *)(v4 - 88) = v1;
  type metadata accessor for Reconciliation.ReconcileAfterPropagation();
}

void sub_23AD9816C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t *v23;

  MEMORY[0x24BDAC7A8](a1);
  v15 = (uint64_t *)((char *)&a9 - v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
  v16 = *(_QWORD *)(v11 + *(_QWORD *)(*(_QWORD *)v11 + 592));
  v17 = *(_QWORD *)(v13 - 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v17, 1, 1, v10);
  v18 = *(_QWORD *)(v13 - 176);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v13 - 168) - 8) + 56))(v18, 1, 1);
  v19 = *(void **)(v11 + *(_QWORD *)(*(_QWORD *)v11 + 544));
  v20 = *(void **)(v13 - 160);
  v21 = v20;
  v22 = v19;
  v23 = (uint64_t *)swift_retain();
  sub_23AD44420(v23, v9, v16, 0, v17, v18, 0, 0, v15, 0, (uint64_t)v20, (uint64_t)v19);
}

void sub_23AD98250()
{
  sub_23AD5B170();
}

uint64_t sub_23AD98268(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;

  if (v21)
  {
    v25 = v21;
    (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v24 - 128))(0, 0, 0, v21);

    v26 = v21;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD, void *))(v24 - 128))(0, 0, 0, a1);
    v26 = a1;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v23, v20);
}

uint64_t sub_23AD982F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  swift_retain();
  swift_retain();
  v17 = a6;
  v18 = type metadata accessor for Continuation();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, a9, v15, a10, (uint64_t)v16, v18, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

uint64_t sub_23AD983F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_23AD98404(a1, a2);
}

uint64_t sub_23AD98404@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v26 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 568);
  v25[1] = *(_QWORD *)(*(_QWORD *)v2 + 584);
  v25[2] = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v25[0] = sub_23B1C6C98();
  v6 = *(_QWORD *)(v25[0] - 8);
  v7 = MEMORY[0x24BDAC7A8](v25[0]);
  v9 = (char *)v25 - v8;
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v25 - v11;
  if (!sub_23AE4F6B4() || (*(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 600)) & 0x10) == 0)
  {
    v13 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v15 = swift_getAssociatedConformanceWitness();
    v27 = AssociatedTypeWitness;
    v28 = v13;
    v29 = AssociatedConformanceWitness;
    v30 = v15;
    type metadata accessor for ReconciliationID();
  }
  v16 = v31;
  result = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(a1 + 16) + 152))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 536));
  if (!v16)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, _QWORD))(v6 + 8))(v9, v25[0]);
      v18 = swift_getAssociatedTypeWitness();
      v19 = swift_getAssociatedConformanceWitness();
      v20 = swift_getAssociatedConformanceWitness();
      v27 = AssociatedTypeWitness;
      v28 = v18;
      v29 = v19;
      v30 = v20;
      type metadata accessor for ReconciliationID();
    }
    v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v21(v12, v9, AssociatedTypeWitness);
    v21(v26, v12, AssociatedTypeWitness);
    v22 = swift_getAssociatedTypeWitness();
    v23 = swift_getAssociatedConformanceWitness();
    v24 = swift_getAssociatedConformanceWitness();
    v27 = AssociatedTypeWitness;
    v28 = v22;
    v29 = v23;
    v30 = v24;
    type metadata accessor for ReconciliationID();
  }
  return result;
}

void sub_23AD98740(uint64_t a1)
{
  uint64_t v1;

  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 0, 1, a1);
  JUMPOUT(0x23AD98578);
}

void sub_23AD98774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 576);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 560);
  swift_getAssociatedTypeWitness();
  type metadata accessor for SnapshotItem(255, v2, v1, v3);
  sub_23B1C6C98();
  swift_getAssociatedTypeWitness();
  sub_23B1C6C98();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD98944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t TupleTypeMetadata;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(v23 - 120) = sub_23B1C6C98();
  *(_QWORD *)(v23 - 112) = &type metadata for Fields;
  *(_QWORD *)(v23 - 104) = MEMORY[0x24BEE1E88];
  *(_QWORD *)(v23 - 96) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v25 = v20 + *(int *)(TupleTypeMetadata + 48);
  v26 = v20 + *(int *)(TupleTypeMetadata + 64);
  v27 = v21 + *(_QWORD *)(v22 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v20, v27, AssociatedTypeWitness);
  v30 = type metadata accessor for SnapshotItem(0, a20, a19, v29);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v25, 1, 1, v30);
  v31 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v26, 1, 1, v31);
  swift_beginAccess();
  *(_QWORD *)(v23 - 144) = a17;
  *(_QWORD *)(v23 - 136) = a18;
  *(_QWORD *)(v23 - 128) = a16;
  *(_QWORD *)(v23 - 120) = a15;
  type metadata accessor for FileItemVersion();
}

void sub_23AD98AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v22 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a11, v19, v22);
  v23 = *v15;
  *(_QWORD *)(v14 + a12) = *(uint64_t *)((char *)v15 + *(_QWORD *)(*v15 + 600));
  *(_QWORD *)(v14 + a13) = *(uint64_t *)((char *)v15 + *(_QWORD *)(v23 + 592));
  *(_QWORD *)(v14 + a14) = *(uint64_t *)((char *)v15 + *(_QWORD *)(v23 + 544));
  *(_QWORD *)(v21 - 144) = v20;
  *(_QWORD *)(v21 - 136) = v18;
  *(_QWORD *)(v21 - 128) = v16;
  *(_QWORD *)(v21 - 120) = v17;
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23AD98B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v4 - 144) = v2;
  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v1;
  *(_QWORD *)(v4 - 120) = v0;
  type metadata accessor for TestingOperation();
}

id sub_23AD98B48(uint64_t a1)
{
  uint64_t v1;
  void *v4;

  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 0, 1, a1);
  return v4;
}

void sub_23AD98B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 608);
  swift_getAssociatedTypeWitness();
  v2 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD98CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;

  v12 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a10, v12);
  v13 = v10 + *(_QWORD *)(*(_QWORD *)v10 + 624);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(255, v11, AssociatedConformanceWitness, v15);
  v16 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v13, v16);
  sub_23AAAEE4C(*(_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 632)), *(_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 632) + 8), *(_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 632) + 16));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD98DF4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23B1C6C98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

void sub_23AD98E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23AD898F8();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 608);
  swift_getAssociatedTypeWitness();
  v2 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD98F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v15;
  uint64_t v16;

  v12 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a10, v12);
  v13 = v10 + *(_QWORD *)(*(_QWORD *)v10 + 624);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(255, v11, AssociatedConformanceWitness, v15);
  v16 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v13, v16);
  sub_23AAAEE4C(*(_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 632)), *(_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 632) + 8), *(_QWORD *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 632) + 16));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD99098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_23AD990DC()
{
  return sub_23AD9CC04((void (*)(void))sub_23AD98E34);
}

uint64_t sub_23AD990E8()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_23B1C6C98();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
  }
  return result;
}

uint64_t sub_23AD99290()
{
  return 0x692D6574656C6564;
}

uint64_t sub_23AD992B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = *v4;
  v6 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(*v4 + 568), *(_QWORD *)(*v4 + 584), a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - v8;
  v10 = (uint64_t)v4 + *(_QWORD *)(v5 + 640);
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
    return 4;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v12 = MEMORY[0x23B8613CC](&unk_23B1DD478, v6);
  v11 = sub_23AF219A4(v6, v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

uint64_t sub_23AD993A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *v0;
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 640);
  swift_beginAccess();
  v4 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v1 + 568), *(_QWORD *)(v1 + 584), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4))
    return 2;
  v6 = v2 + *(int *)(v4 + 48);
  return *(unsigned __int8 *)(v6 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_23AD99440()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v7;

  v1 = *v0;
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 640);
  swift_beginAccess();
  v4 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v1 + 568), *(_QWORD *)(v1 + 584), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4);
  result = 0;
  if (!v5)
  {
    v7 = v2 + *(int *)(v4 + 48);
    return *(_QWORD *)(v7 + *(int *)(type metadata accessor for ItemMetadata() + 100));
  }
  return result;
}

unint64_t sub_23AD994E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 640);
  swift_beginAccess();
  v4 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v1 + 568), *(_QWORD *)(v1 + 584), v3);
  v5 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v2, 1, v4))
  {
    v6 = 0;
  }
  else
  {
    v7 = v2 + *(int *)(v4 + 48);
    v6 = *(unsigned int *)(v7 + 4);
    v5 = *(_BYTE *)(v7 + 8);
  }
  return v6 | ((unint64_t)v5 << 32);
}

uint64_t sub_23AD99580@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 640);
  swift_beginAccess();
  v6 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v3 + 568), *(_QWORD *)(v3 + 584), v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    v9 = v4 + *(int *)(v6 + 36);
    v10 = swift_getAssociatedTypeWitness();
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, v9, v10);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
  }
}

uint64_t sub_23AD996A4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7340();
  return 0;
}

void sub_23AD9974C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t AssociatedConformanceWitness;
  uint64_t v37;
  _QWORD v38[9];
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v65 = a2;
  v57 = a1;
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 568);
  v7 = *(_QWORD *)(*v4 + 584);
  v50 = type metadata accessor for SnapshotItem(255, v6, v7, a4);
  v49 = sub_23B1C6C98();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)v38 - v8;
  v54 = type metadata accessor for JobLockRule(0, v6, v7, v9);
  MEMORY[0x24BDAC7A8](v54);
  v53 = (char *)v38 - v10;
  v64 = v5;
  v12 = type metadata accessor for SnapshotItem(0, *(_QWORD *)(v5 + 560), *(_QWORD *)(v5 + 576), v11);
  v38[7] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v38[4] = (char *)v38 - v13;
  v38[8] = v14;
  v39 = sub_23B1C6C98();
  v38[6] = *(_QWORD *)(v39 - 8);
  v15 = MEMORY[0x24BDAC7A8](v39);
  v38[5] = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v41 = (char *)v38 - v17;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v44 = sub_23B1C6C98();
  v56 = *(_QWORD *)(v44 - 8);
  v19 = MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)v38 - v20;
  v45 = AssociatedTypeWitness;
  v51 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v19);
  v40 = (char *)v38 - v21;
  v22 = swift_getAssociatedTypeWitness();
  v60 = sub_23B1C6C98();
  v59 = *(_QWORD *)(v60 - 8);
  v23 = MEMORY[0x24BDAC7A8](v60);
  v47 = (char *)v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v46 = (char *)v38 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v55 = (char *)v38 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v58 = (char *)v38 - v30;
  v63 = v22;
  v62 = *(_QWORD *)(v22 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v42 = (char *)v38 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v61 = (char *)v38 - v33;
  v34 = swift_getAssociatedTypeWitness();
  v35 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v37 = swift_getAssociatedConformanceWitness();
  v66 = v34;
  v67 = v35;
  v68 = AssociatedConformanceWitness;
  v69 = v37;
  type metadata accessor for FileItemVersion();
}

void sub_23AD99B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = sub_23B1C6C98();
  *(_QWORD *)(v13 - 216) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v13 - 208) = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v13 - 344) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v13 - 240) = (char *)&a9 - v19;
  *(_QWORD *)(v13 - 224) = a1;
  *(_QWORD *)(v13 - 200) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v13 - 248) = (char *)&a9 - v20;
  *(_QWORD *)(v13 - 320) = v10;
  *(_QWORD *)(v13 - 128) = v10;
  *(_QWORD *)(v13 - 120) = v9;
  *(_QWORD *)(v13 - 192) = v9;
  *(_QWORD *)(v13 - 328) = v12;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 232) = v11;
  type metadata accessor for ItemReconciliation();
}

void sub_23AD99C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_23B1C6C98();
  v1 = MEMORY[0x24BDAC7A8](v0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  sub_23AB003A0();
}

uint64_t sub_23AD99CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  _QWORD **v50;
  _QWORD *v51;
  uint64_t *v52;
  __int16 v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  void (*v61)(_QWORD, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t TupleTypeMetadata3;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;

  if (!v1)
  {
    *(_QWORD *)(v9 - 520) = v6;
    v10 = *(_QWORD *)(v9 - 192);
    *(_QWORD *)(v9 - 528) = v2;
    *(_QWORD *)(v9 - 184) = v5;
    *(_QWORD *)(v9 - 176) = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v0) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
      return 0;
    }
    v11 = v7;
    v12 = *(_QWORD *)(v9 - 184);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v12, v8, v0);
    v13 = v12 + *(int *)(v0 + 52);
    v15 = type metadata accessor for ItemReconciliationHalf(0, v10, *(_QWORD *)(v9 - 232), v14);
    v17 = *(_QWORD *)(v9 - 216);
    v16 = *(_QWORD *)(v9 - 208);
    v18 = *(_QWORD *)(v9 - 240);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v13 + *(int *)(v15 + 48), v16);
    v19 = *(_QWORD *)(v9 - 200);
    v20 = *(_QWORD *)(v9 - 224);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v18, 1, v20) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v0);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v16);
      return 0;
    }
    *(_QWORD *)(v9 - 192) = v11;
    v21 = *(_QWORD *)(v9 - 248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v21, v18, v20);
    v22 = *(_QWORD *)(v9 - 288);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
    v24 = *(_QWORD *)(v9 - 296);
    v25 = *(_QWORD *)(v9 - 280);
    *(_QWORD *)(v9 - 232) = v23;
    v23(v24, v13, v25);
    v26 = *(_QWORD **)(v9 - 264);
    v27 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v26[6];
    v28 = *(_QWORD *)(v9 - 256);
    *(_QWORD *)(v9 - 240) = v27;
    if (v27(v24, 1, v28) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
      (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v9 - 192) + 8))(*(_QWORD *)(v9 - 184), v0);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v25);
      return 0;
    }
    v30 = (void (*)(uint64_t, uint64_t, uint64_t))v26[4];
    v31 = *(_QWORD *)(v9 - 272);
    *(_QWORD *)(v9 - 544) = v30;
    v30(v31, v24, v28);
    v32 = (void (*)(uint64_t, uint64_t, uint64_t))v26[2];
    v33 = *(_QWORD *)(v9 - 336);
    *(_QWORD *)(v9 - 296) = v32;
    v32(v33, v31, v28);
    v34 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v26[7];
    v35 = v22;
    LOBYTE(v22) = 1;
    *(_QWORD *)(v9 - 536) = v34;
    v34(v33, 0, 1, v28);
    v36 = *(_QWORD *)(v9 - 160);
    v37 = v36 + *(_QWORD *)(*(_QWORD *)v36 + 592);
    swift_beginAccess();
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 40);
    v38(v37, v33, v25);
    swift_endAccess();
    v39 = *(_QWORD *)(v9 - 344);
    v40 = *(_QWORD *)(v9 - 200);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 16))(v39, *(_QWORD *)(v9 - 248), v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v39, 0, 1, v20);
    v41 = v36 + *(_QWORD *)(*(_QWORD *)v36 + 608);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9 - 216) + 40))(v41, v39, *(_QWORD *)(v9 - 208));
    swift_endAccess();
    v43 = type metadata accessor for ItemReconciliationHalf(0, *(_QWORD *)(v9 - 320), *(_QWORD *)(v9 - 328), v42);
    v44 = *(int *)(v43 + 36);
    v45 = *(_QWORD *)(v9 - 192);
    v46 = *(_QWORD *)(*(_QWORD *)(v9 - 184) + v44);
    v47 = *(_QWORD *)(v9 - 520);
    (*(void (**)(uint64_t))(v45 + 16))(v47);
    if ((v46 & 2) == 0)
      LODWORD(v22) = (*(unsigned __int8 *)(v47 + *(int *)(v43 + 36)) >> 4) & 1;
    v48 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 8);
    *(_QWORD *)(v9 - 192) = v0;
    v49 = v48(v47, v0);
    v50 = *(_QWORD ***)(v9 - 168);
    v51 = *(_QWORD **)(v9 - 160);
    v0 = *(_QWORD *)(*v51 + 624);
    *((_BYTE *)v51 + v0) = v22;
    v52 = v51;
    v53 = ((uint64_t (*)(uint64_t))(*v50)[19])(v49);
    v54 = *(_QWORD *)(v9 - 312);
    if ((v53 & 0x4000) == 0)
    {
      v55 = 0;
LABEL_19:
      v56 = *(_QWORD *)(v9 - 528);
      goto LABEL_20;
    }
    if ((*(_BYTE *)(*(_QWORD *)(v9 - 184) + v44) & 0x10) != 0)
    {
      v55 = 1;
      goto LABEL_19;
    }
    if (v51[16] != 0x2000000)
    {
      *(_QWORD *)(v9 - 208) = v38;
      v74 = *(_QWORD *)(v9 - 440);
      v75 = *(_QWORD *)(v9 - 432);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v54 + 16))(v74, *(_QWORD *)(v9 - 184), v75);
      v76 = *(_QWORD *)(v9 - 376);
      v77 = *(_QWORD *)(v9 - 424);
      v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v74, 1, v77);
      if (v78 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 312) + 8))(v74, v75);
LABEL_30:
        v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 208);
LABEL_31:
        v79 = *(_QWORD *)(v9 - 176);
        v80 = *(_QWORD *)(v9 - 528);
        v55 = (*(uint64_t (**)(void))(*v50[5] + 464))();
        *(_QWORD *)(v9 - 176) = v79;
        if (v79)
          goto LABEL_21;
        v56 = v80;
LABEL_20:
        *((_BYTE *)v52 + *(_QWORD *)(*v52 + 632)) = v55 & 1;
        v57 = *(_QWORD *)(v9 - 176);
        v58 = (*(uint64_t (**)(uint64_t))(*v50[5] + 296))(v56);
        if (!v57)
        {
          v60 = (char *)v52 + *(_QWORD *)(*v52 + 616);
          *(_QWORD *)v60 = v58;
          v60[8] = v59 & 1;
          *(_QWORD *)(v9 - 72) = sub_23B1C6758();
          if ((*((_BYTE *)v52 + v0) & 1) != 0)
          {
            (*(void (**)(_QWORD, _QWORD, _QWORD))(v9 - 296))(*(_QWORD *)(v9 - 360), *(_QWORD *)(v9 - 272), *(_QWORD *)(v9 - 256));
            swift_storeEnumTagMultiPayload();
            sub_23B1C67DC();
            sub_23B1C67AC();
          }
          v61 = *(void (**)(_QWORD, uint64_t))(*v50[4] + 240);
          v62 = *(_QWORD *)(v9 - 368);
          v61(*(_QWORD *)(v9 - 272), 1);
          *(_QWORD *)(v9 - 176) = 0;
          v63 = (char *)v52 + *(_QWORD *)(*v52 + 640);
          swift_beginAccess();
          (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v9 - 400) + 40))(v63, v62, *(_QWORD *)(v9 - 392));
          swift_endAccess();
          v64 = *(_QWORD *)(v9 - 384);
          v65 = 1;
          v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v63, 1, v64);
          v67 = *(_QWORD *)(v9 - 416);
          if (!v66)
          {
            (*(void (**)(_QWORD, char *, _QWORD))(v9 - 296))(*(_QWORD *)(v9 - 416), &v63[*(int *)(v64 + 36)], *(_QWORD *)(v9 - 256));
            v65 = 0;
          }
          v68 = v65;
          v69 = *(_QWORD *)(v9 - 256);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 - 536))(v67, v68, 1, v69);
          v70 = (char *)v52 + *(_QWORD *)(*v52 + 600);
          swift_beginAccess();
          v71 = v67;
          v72 = *(_QWORD *)(v9 - 280);
          v38((uint64_t)v70, v71, v72);
          swift_endAccess();
          v73 = *(_QWORD *)(v9 - 408);
          (*(void (**)(uint64_t, char *, uint64_t))(v9 - 232))(v73, v70, v72);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 - 240))(v73, 1, v69) != 1)
          {
            v81 = *(_QWORD *)(v9 - 448);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 544))(v81, v73, v69);
            TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
            v83 = *(_QWORD *)(v9 - 360);
            v84 = v83 + *(int *)(TupleTypeMetadata3 + 48);
            v85 = v69;
            v86 = v83 + *(int *)(TupleTypeMetadata3 + 64);
            v87 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 296);
            v87(v83, *(_QWORD *)(v9 - 272), v85);
            v87(v84, v81, v85);
            v87(v86, v81, v85);
            swift_storeEnumTagMultiPayload();
            sub_23B1C67DC();
            sub_23B1C67AC();
            swift_beginAccess();
            sub_23AD4332C((uint64_t)(v52 + 6), v9 - 128);
            v0 = sub_23ABD195C(v9 - 128, v52[14], *(_QWORD *)(v9 - 72), v88);
            swift_bridgeObjectRelease();
            sub_23AD43374(v9 - 128);
            v89 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 264) + 8);
            v89(v81, v85);
            v89(*(_QWORD *)(v9 - 272), v85);
            (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 200) + 8))(*(_QWORD *)(v9 - 248), *(_QWORD *)(v9 - 224));
            v48(*(_QWORD *)(v9 - 184), *(_QWORD *)(v9 - 192));
            return v0;
          }
          swift_bridgeObjectRelease();
          (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v9 - 264) + 8))(*(_QWORD *)(v9 - 272), v69);
          (*(void (**)(_QWORD, _QWORD))(v40 + 8))(*(_QWORD *)(v9 - 248), *(_QWORD *)(v9 - 224));
          v48(*(_QWORD *)(v9 - 184), *(_QWORD *)(v9 - 192));
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 288) + 8))(v73, v72);
          return 0;
        }
LABEL_21:
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v9 - 264) + 8))(*(_QWORD *)(v9 - 272), *(_QWORD *)(v9 - 256));
        (*(void (**)(_QWORD, _QWORD))(v40 + 8))(*(_QWORD *)(v9 - 248), *(_QWORD *)(v9 - 224));
        v48(*(_QWORD *)(v9 - 184), *(_QWORD *)(v9 - 192));
        return v0;
      }
      v90 = *(_QWORD *)(v9 - 464);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 32))(v90, v74, v77);
      v91 = *(_QWORD *)(v9 - 456);
      v92 = *(_QWORD *)(v9 - 176);
      (*(void (**)(uint64_t, uint64_t))(*v50[5] + 240))(v90, 1);
      *(_QWORD *)(v9 - 176) = v92;
      if (v92)
      {
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 376) + 8))(v90, v77);
        goto LABEL_21;
      }
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 376) + 8))(v90, v77);
      v93 = *(_QWORD *)(v9 - 496);
      v94 = v91;
      v95 = *(_QWORD *)(v9 - 504);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v93 + 32))(v95, v94, *(_QWORD *)(v9 - 472));
      v96 = *(_QWORD *)(v9 - 488);
      v97 = *(_QWORD *)(v9 - 480);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v95, 1, v97) == 1)
      {
        (*(void (**)(uint64_t, _QWORD))(v93 + 8))(v95, *(_QWORD *)(v9 - 472));
        goto LABEL_30;
      }
      v98 = *(_QWORD *)(v9 - 512);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 32))(v98, v95, v97);
      v99 = v98 + *(int *)(v97 + 48);
      v100 = type metadata accessor for ItemMetadata();
      v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 - 208);
      if (*(_BYTE *)(v99 + *(int *)(v100 + 64)) != 1)
      {
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 488) + 8))(v98, *(_QWORD *)(v9 - 480));
        goto LABEL_31;
      }
      v101 = *(_BYTE *)(v99 + *(int *)(v100 + 60));
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 488) + 8))(v98, *(_QWORD *)(v9 - 480));
      if ((v101 & 1) == 0)
        goto LABEL_31;
    }
    v55 = 1;
    goto LABEL_19;
  }
  return v0;
}

void sub_23AD9A750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[44];

  v18[31] = a1;
  v18[26] = a4;
  v18[27] = a5;
  v18[25] = a3;
  v6 = *v5;
  v18[20] = type metadata accessor for SnapshotItem(255, *(_QWORD *)(*v5 + 568), *(_QWORD *)(*v5 + 584), a4);
  v7 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v7);
  v18[21] = (char *)v18 - v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18[29] = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18[18] = type metadata accessor for ItemState(255, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  v12 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v12);
  v18[19] = (char *)v18 - v13;
  v18[23] = v6;
  v14 = swift_getAssociatedTypeWitness();
  v15 = swift_getAssociatedTypeWitness();
  v16 = swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedConformanceWitness();
  v18[39] = v14;
  v18[40] = v15;
  v18[41] = v16;
  v18[42] = v17;
  type metadata accessor for FileItemVersion();
}

void sub_23AD9A91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 328) = a1;
  v14 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 320) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 104) = v9;
  *(_QWORD *)(v13 - 96) = v10;
  *(_QWORD *)(v13 - 208) = v10;
  type metadata accessor for Reconciliation.ReconcileAfterPropagation();
}

void sub_23AD9A978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;

  *(_QWORD *)(v9 - 296) = a1;
  *(_QWORD *)(v9 - 304) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v9 - 312) = (char *)&a9 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v9 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v9 - 112) = v12;
  *(_QWORD *)(v9 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v9 - 96) = v14;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD9AA40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, _BYTE *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, _QWORD, uint64_t);
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t (*)(uint64_t), _QWORD *);
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  _BYTE v66[64];

  v6 = sub_23B1C6C98();
  *(_QWORD *)(v4 - 360) = v6;
  *(_QWORD *)(v4 - 336) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v4 - 256) = &v66[-v7];
  v8 = *(_QWORD *)(v4 - 200);
  v9 = sub_23B1C6C98();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = &v66[-v12];
  *(_QWORD *)(v4 - 352) = a1;
  *(_QWORD *)(v4 - 344) = *(_QWORD *)(a1 - 8);
  v14 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v4 - 376) = &v66[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v4 - 368) = &v66[-v17];
  v18 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v4 - 384) = &v66[-v19];
  v20 = *(_QWORD *)(v8 - 8);
  v21 = v8;
  v22 = *(_QWORD *)(v20 + 64);
  v23 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v4 - 424) = &v66[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v4 - 392) = &v66[-v25];
  v26 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v4 - 240) = &v66[-v27];
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v4 - 400) = &v66[-v28];
  *(_QWORD *)(v4 - 416) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 - 184) + 32) + 16);
  v29 = *(_QWORD *)(v4 - 192) + *(_QWORD *)(*(_QWORD *)(v4 - 248) + 592);
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v13, v29, v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v21) == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
    *(_QWORD *)(v4 - 120) = v3;
    *(_QWORD *)(v4 - 112) = v2;
    *(_QWORD *)(v4 - 104) = *(_QWORD *)(v4 - 208);
    *(_QWORD *)(v4 - 96) = v1;
    type metadata accessor for Propagation.PropagationError();
  }
  *(_QWORD *)(v4 - 432) = v2;
  v30 = *(_QWORD *)(v4 - 208);
  v31 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v20 + 32);
  v32 = *(_QWORD *)(v4 - 240);
  *(_QWORD *)(v4 - 248) = v31;
  v31(v32, v13, v21);
  *(_QWORD *)(v4 - 408) = v20;
  v33 = *(_QWORD *)(v4 - 192);
  v34 = v33 + *(_QWORD *)(*(_QWORD *)v33 + 608);
  swift_beginAccess();
  v35 = *(_QWORD *)(v4 - 256);
  v36 = *(_QWORD *)(v4 - 360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 336) + 16))(v35, v34, v36);
  v37 = *(_QWORD *)(v4 - 344);
  v38 = *(_QWORD *)(v4 - 352);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v38) == 1)
  {
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v4 - 336) + 8))(*(_QWORD *)(v4 - 256), v36);
    v39 = *(_QWORD *)(v4 - 432);
    *(_QWORD *)(v4 - 120) = v3;
    *(_QWORD *)(v4 - 112) = v39;
    *(_QWORD *)(v4 - 104) = v30;
    *(_QWORD *)(v4 - 96) = v1;
    type metadata accessor for Propagation.PropagationError();
  }
  v40 = *(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 32);
  v40(*(_QWORD *)(v4 - 368), *(_QWORD *)(v4 - 256), v38);
  v41 = *(unsigned __int8 *)(v33 + *(_QWORD *)(*(_QWORD *)v33 + 624));
  v42 = *(_QWORD *)(v4 - 432);
  if (v41 == 2)
  {
    *(_QWORD *)(v4 - 120) = v3;
    *(_QWORD *)(v4 - 112) = v42;
    *(_QWORD *)(v4 - 104) = v30;
    *(_QWORD *)(v4 - 96) = v1;
    type metadata accessor for Propagation.PropagationError();
  }
  if (*(_BYTE *)(v33 + *(_QWORD *)(*(_QWORD *)v33 + 632)) == 2)
  {
    *(_QWORD *)(v4 - 120) = v3;
    *(_QWORD *)(v4 - 112) = v42;
    *(_QWORD *)(v4 - 104) = v30;
    *(_QWORD *)(v4 - 96) = v1;
    type metadata accessor for Propagation.PropagationError();
  }
  *(_DWORD *)(v4 - 256) = v41 & 1;
  v43 = *(_QWORD *)(v4 - 400);
  *(_QWORD *)(v4 - 264) = v3;
  v44 = v43;
  v45 = *(_QWORD *)(v4 - 200);
  (*(void (**)(void))(v4 - 248))();
  v46 = *(_QWORD *)(v4 - 384);
  v40(v46, *(_QWORD *)(v4 - 368), v38);
  v47 = *(_QWORD *)(v4 - 408);
  *(_QWORD *)(v4 - 272) = v1;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
  v48(*(_QWORD *)(v4 - 392), v44, v45);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 344) + 16))(*(_QWORD *)(v4 - 376), v46, v38);
  *(_QWORD *)(v4 - 240) = *(_QWORD *)(v33 + *(_QWORD *)(*(_QWORD *)v33 + 544));
  v49 = *(_QWORD *)(v4 - 424);
  v48(v49, v44, v45);
  v50 = v33;
  v51 = (*(unsigned __int8 *)(v47 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  v52 = (v22 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  v53 = (_QWORD *)swift_allocObject();
  v54 = *(_QWORD *)(v4 - 432);
  v53[2] = *(_QWORD *)(v4 - 264);
  v53[3] = v54;
  v55 = *(_QWORD *)(v4 - 272);
  v53[4] = *(_QWORD *)(v4 - 208);
  v53[5] = v55;
  v53[6] = *(_QWORD *)(v4 - 184);
  v53[7] = v50;
  v56 = (char *)v53 + v51;
  v57 = *(_QWORD *)(v4 - 216);
  v53[8] = *(_QWORD *)(v4 - 224);
  v53[9] = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 - 248))(v56, v49, v45);
  *(_QWORD *)((char *)v53 + v52) = *(_QWORD *)(v4 - 232);
  v58 = *(void (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t (*)(uint64_t), _QWORD *))(**(_QWORD **)(v4 - 416) + 624);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v59 = *(_QWORD *)(v4 - 392);
  v60 = *(_QWORD *)(v4 - 376);
  v58(v59, *(unsigned int *)(v4 - 256), v60, *(_QWORD *)(v4 - 240), sub_23AD9F028, v53);
  swift_release();
  v61 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 344) + 8);
  v62 = v60;
  v63 = *(_QWORD *)(v4 - 352);
  v61(v62, v63);
  v64 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 408) + 8);
  v64(v59, v45);
  v61(*(_QWORD *)(v4 - 384), v63);
  return ((uint64_t (*)(_QWORD, uint64_t))v64)(*(_QWORD *)(v4 - 400), v45);
}

uint64_t sub_23AD9B58C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;

  v48 = a3;
  v49 = a7;
  v43 = a6;
  v39 = a5;
  v40 = a4;
  v41 = a1;
  v46 = (_QWORD *)*a2;
  v47 = a2;
  v45 = v46[12];
  v42 = v46[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v37 = AssociatedTypeWitness;
  v11 = *(_QWORD *)(v10 + 64);
  v12 = v10;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v36 - v13;
  v38 = (char *)&v36 - v13;
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v15 = sub_23B1C74F0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v36 - v18;
  v20 = swift_allocObject();
  v44 = v20;
  *(_QWORD *)(v20 + 16) = a4;
  *(_QWORD *)(v20 + 24) = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v41, v15);
  v36 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v43, AssociatedTypeWitness);
  v21 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v22 = (v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = (*(unsigned __int8 *)(v12 + 80) + v22 + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = (char *)swift_allocObject();
  v27 = v46;
  v28 = v42;
  *((_QWORD *)v26 + 2) = v46[11];
  *((_QWORD *)v26 + 3) = v28;
  v29 = v45;
  *((_QWORD *)v26 + 4) = v27[13];
  *((_QWORD *)v26 + 5) = v29;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v26[v21], v19, v15);
  *(_QWORD *)&v26[v22] = v47;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v26[v23], v38, v37);
  v30 = &v26[v24];
  v31 = v39;
  *(_QWORD *)v30 = v40;
  *((_QWORD *)v30 + 1) = v31;
  v32 = v48;
  v33 = v49;
  *(_QWORD *)&v26[v25] = v48;
  *(_QWORD *)&v26[(v25 + 15) & 0xFFFFFFFFFFFFFFF8] = v33;
  v34 = type metadata accessor for Continuation();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AD9F098, v32, (uint64_t)sub_23AD43544, v44, (uint64_t)sub_23AD9F270, (uint64_t)v26, v34, MEMORY[0x24BEE0D00]);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_23AD9B88C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15[35];

  v15[17] = a6;
  v15[18] = a7;
  v15[3] = a5;
  v15[4] = a4;
  v15[11] = a3;
  v15[21] = a2;
  v15[22] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15[0] = swift_getAssociatedConformanceWitness();
  v15[15] = type metadata accessor for ItemState(255, AssociatedTypeWitness, v15[0], v8);
  v9 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v9);
  v15[29] = (uint64_t)v15 - v10;
  v11 = swift_getAssociatedTypeWitness();
  v12 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = swift_getAssociatedConformanceWitness();
  v15[31] = v11;
  v15[32] = v12;
  v15[33] = AssociatedConformanceWitness;
  v15[34] = v14;
  type metadata accessor for FileItemVersion();
}

void sub_23AD9BA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 - 264) = a1;
  v14 = sub_23B1C6C98();
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v13 - 144) = (char *)&a9 - v15;
  *(_QWORD *)(v13 - 120) = v12;
  *(_QWORD *)(v13 - 112) = v10;
  *(_QWORD *)(v13 - 104) = v11;
  *(_QWORD *)(v13 - 96) = v9;
  type metadata accessor for Reconciliation.ReconcileAfterPropagation();
}

void sub_23AD9BA60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t TupleTypeMetadata2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int EnumCaseMultiPayload;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  int v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t *v78;
  void *v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE v86[64];

  *(_QWORD *)(v4 - 240) = a1;
  *(_QWORD *)(v4 - 272) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 256) = &v86[-v5];
  v7 = type metadata accessor for SnapshotItem(0, v2, v1, v6);
  *(_QWORD *)(v4 - 184) = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v4 - 328) = &v86[-v9];
  *(_QWORD *)(v4 - 352) = v3;
  *(_QWORD *)(v4 - 360) = *(_QWORD *)(v3 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v4 - 296) = &v86[-v11];
  *(_QWORD *)(v4 - 208) = *(_QWORD *)(v2 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v4 - 304) = &v86[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v4 - 312) = &v86[-v14];
  *(_QWORD *)(v4 - 288) = v1;
  v16 = type metadata accessor for FileTreeError(0, v2, v1, v15);
  *(_QWORD *)(v4 - 320) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v86[-v17];
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v20 = sub_23B1C74F0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (void **)&v86[-v22];
  *(_QWORD *)(v4 - 176) = v7;
  v24 = sub_23B1C6C98();
  *(_QWORD *)(v4 - 128) = v24;
  *(_QWORD *)(v4 - 160) = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v4 - 152) = &v86[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = MEMORY[0x24BDAC7A8](v25);
  *(_QWORD *)(v4 - 216) = &v86[-v28];
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = &v86[-v30];
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v4 - 72) = &v86[-v32];
  (*(void (**)(void **, _QWORD, uint64_t))(v21 + 16))(v23, *(_QWORD *)(v4 - 192), v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v43 = *(_QWORD *)(v4 - 304);
    v44 = *(_QWORD *)(v4 - 296);
    v45 = *(_QWORD *)(v4 - 312);
    v46 = *(_QWORD *)(v4 - 288);
    *(_QWORD *)(v4 - 320) = v16;
    v47 = *(void **)((char *)v23 + *(int *)(TupleTypeMetadata2 + 48));
    v48 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v4 - 208) + 48))(v23, 1, v2);
    *(_QWORD *)(v4 - 192) = v47;
    if (v48 == 1)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 - 184) + 56))(*(_QWORD *)(v4 - 72), 1, 1, *(_QWORD *)(v4 - 176));
      v49 = 0;
      v50 = *(_QWORD *)(v4 - 160);
      v39 = *(_QWORD *)(v4 - 216);
      *(_QWORD *)(v4 - 208) = 0;
      if (v47)
      {
LABEL_8:
        *(_QWORD *)(v4 - 120) = 0x3A7265766D6F6420;
        *(_QWORD *)(v4 - 112) = 0xE800000000000000;
        v51 = objc_msgSend(v47, sel_description);
        sub_23B1C63E0();

        sub_23B1C64F4();
        swift_bridgeObjectRelease();
LABEL_14:
        *(_QWORD *)(v4 - 280) = v49;
        v38 = *(_QWORD *)(v4 - 128);
        v64 = *(_QWORD *)(v4 - 72);
LABEL_15:
        v66 = *(_QWORD *)(v4 - 184);
        v65 = *(_QWORD *)(v4 - 176);
        goto LABEL_21;
      }
    }
    else
    {
      v52 = *(_QWORD *)(v4 - 208);
      v53 = v45;
      (*(void (**)(uint64_t, void **, uint64_t))(v52 + 32))(v45, v23, v2);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v43, v45, v2);
      v54 = *(_QWORD *)(v4 - 72);
      sub_23AF15480(v43, v2, v46, v54);
      (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v4 - 184) + 56))(v54, 0, 1, *(_QWORD *)(v4 - 176));
      v55 = *(void (**)(uint64_t, uint64_t))(v46 + 64);
      v56 = v47;
      v57 = v44;
      *(_QWORD *)(v4 - 304) = v55;
      v55(v2, v46);
      v58 = *(_QWORD *)(v4 - 352);
      LOBYTE(v55) = sub_23B1C63A4();
      v59 = *(_QWORD *)(v4 - 360);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
      if ((v55 & 1) != 0)
      {
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 208) + 8))(v53, v2);

        v49 = 0;
      }
      else
      {
        MEMORY[0x23B8613CC](&unk_23B1D40CC, *(_QWORD *)(v4 - 320));
        v60 = swift_allocError();
        *(_QWORD *)(v4 - 296) = v56;
        v49 = (void *)v60;
        v62 = v61;
        sub_23B1C6C98();
        swift_getTupleTypeMetadata2();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v59 + 16))(v62, *(_QWORD *)(v4 - 280), v58);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v62, 0, 1, v58);
        (*(void (**)(uint64_t, uint64_t))(v4 - 304))(v2, v46);
        swift_storeEnumTagMultiPayload();

        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 208) + 8))(v53, v2);
      }
      v50 = *(_QWORD *)(v4 - 160);
      v39 = *(_QWORD *)(v4 - 216);
      v47 = *(void **)(v4 - 192);
      v63 = v49;
      *(_QWORD *)(v4 - 208) = v49;
      if (v47)
        goto LABEL_8;
    }
    *(_QWORD *)(v4 - 192) = 0;
    goto LABEL_14;
  }
  v33 = *(_QWORD *)(v4 - 320);
  v34 = *v23;
  *(_QWORD *)(v4 - 120) = *v23;
  v35 = v34;
  v36 = swift_dynamicCast();
  v37 = *(_QWORD *)(v4 - 168);
  v38 = *(_QWORD *)(v4 - 128);
  v39 = *(_QWORD *)(v4 - 216);
  if (!v36)
    goto LABEL_20;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 9)
  {
    v41 = *(_QWORD *)(v4 - 280);
    if (EnumCaseMultiPayload == 3)
    {
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E7700);
      v16 = *(_QWORD *)(v4 - 352);

      v42 = *(_QWORD *)(v4 - 200);
      v33 = *(_QWORD *)(v4 - 360);
      goto LABEL_17;
    }
    (*(void (**)(_BYTE *, uint64_t))(v33 + 8))(v18, v16);
LABEL_20:

    v66 = *(_QWORD *)(v4 - 184);
    v65 = *(_QWORD *)(v4 - 176);
    v67 = *(_QWORD *)(v4 - 72);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v67, 1, 1, v65);
    v68 = v34;
    v64 = v67;
    *(_QWORD *)(v4 - 192) = 0;
    *(_QWORD *)(v4 - 208) = v34;
    *(_QWORD *)(v4 - 280) = v34;
    v50 = *(_QWORD *)(v4 - 160);
LABEL_21:
    v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
    v69(v39, v64, v38);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v39, 1, v65) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v39, v38);
      *(_QWORD *)(v4 - 120) = 0x3A6C61757463613CLL;
      *(_QWORD *)(v4 - 112) = 0xEB000000006C696ELL;
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v70 = *(_QWORD *)(v4 - 120);
    }
    else
    {
      v71 = v39;
      v72 = *(_QWORD *)(v4 - 328);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v72, v71, v65);
      *(_QWORD *)(v4 - 120) = 0;
      *(_QWORD *)(v4 - 112) = 0xE000000000000000;
      sub_23B1C64F4();
      MEMORY[0x23B8613CC](&unk_23B1DD494, v65);
      sub_23B1C7340();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v70 = *(_QWORD *)(v4 - 120);
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v72, v65);
    }
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 - 264) - 8) + 56))(*(_QWORD *)(v4 - 144), 1, 1);
    v73 = *(uint64_t **)(v4 - 232);
    v74 = (char *)v73 + *(_QWORD *)(*v73 + 616);
    v75 = *(_QWORD *)v74;
    v76 = v74[8];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 - 248) - 8) + 56))(*(_QWORD *)(v4 - 136), 1, 1);
    v69(*(_QWORD *)(v4 - 152), *(_QWORD *)(v4 - 72), v38);
    v77 = *(void **)(v4 - 208);
    *(_QWORD *)(v4 - 168) = v70;
    v78 = v73;
    if (v77)
    {
      v79 = *(void **)((char *)v73 + *(_QWORD *)(*v73 + 544));
      v80 = v77;
      v81 = v79;
    }
    else
    {
      v79 = 0;
    }
    swift_retain();
    v82 = *(void **)(v4 - 192);
    v83 = v82;
    sub_23AD44420(v78, *(_QWORD *)(v4 - 144), v75, v76, *(_QWORD *)(v4 - 136), *(_QWORD *)(v4 - 152), 0, 0, *(_QWORD **)(v4 - 256), (uint64_t)v82, (uint64_t)v77, (uint64_t)v79);
  }
  v42 = *(_QWORD *)(v4 - 200);
  v41 = *(_QWORD *)(v4 - 280);
LABEL_17:
  (*(void (**)(_BYTE *, uint64_t))(v33 + 8))(v18, v16);

  (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(v42 + 32) + 240))(v41, 1);
  if (!v37)
  {
    *(_QWORD *)(v4 - 168) = 0;
    v84 = *(_QWORD *)(v4 - 72);
    v85 = v31;
    v50 = *(_QWORD *)(v4 - 160);
    v38 = *(_QWORD *)(v4 - 128);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v50 + 32))(v84, v85, v38);
    v64 = v84;
    *(_QWORD *)(v4 - 192) = 0;
    *(_QWORD *)(v4 - 280) = v34;
    *(_QWORD *)(v4 - 208) = 0;
    goto LABEL_15;
  }

}

void sub_23AD9C51C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_23B1C6C98();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD9C6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v19 - 112) = sub_23B1C6C98();
  *(_QWORD *)(v19 - 104) = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E74E0);
  *(_QWORD *)(v19 - 96) = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  v20 = v15 + *(int *)(swift_getTupleTypeMetadata() + 48);
  v21 = v16 + *(_QWORD *)(v17 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v15, v21, AssociatedTypeWitness);
  v23 = v16 + *(_QWORD *)(*(_QWORD *)v16 + 592);
  swift_beginAccess();
  v24 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v20, v23, v24);
  swift_beginAccess();
  *(_QWORD *)(v19 - 128) = a15;
  *(_QWORD *)(v19 - 120) = v18;
  *(_QWORD *)(v19 - 112) = a14;
  *(_QWORD *)(v19 - 104) = a13;
  type metadata accessor for FileItemVersion();
}

void sub_23AD9C7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a10, v15, v20);
  v21 = *v13;
  *(_BYTE *)(v12 + a11) = *((_BYTE *)v13 + *(_QWORD *)(*v13 + 624));
  *(_QWORD *)(v12 + a12) = *(uint64_t *)((char *)v13 + *(_QWORD *)(v21 + 544));
  *(_QWORD *)(v19 - 128) = v14;
  *(_QWORD *)(v19 - 120) = v17;
  *(_QWORD *)(v19 - 112) = v18;
  *(_QWORD *)(v19 - 104) = v16;
  type metadata accessor for DirectionalTestingOperation();
}

void sub_23AD9C830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v4 - 128) = v2;
  *(_QWORD *)(v4 - 120) = v0;
  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v3;
  type metadata accessor for TestingOperation();
}

id sub_23AD9C854(uint64_t a1)
{
  uint64_t v1;
  void *v4;

  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 0, 1, a1);
  return v4;
}

void sub_23AD9C8A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 592);
  swift_getAssociatedTypeWitness();
  v2 = sub_23B1C6C98();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(_QWORD *)(*(_QWORD *)v0 + 600), v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD9C9D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 640);
  type metadata accessor for SnapshotItem(255, v2, v0, v6);
  v7 = sub_23B1C6C98();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
}

void sub_23AD9CA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v0 = sub_23AD898F8();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 592);
  swift_getAssociatedTypeWitness();
  v2 = sub_23B1C6C98();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(_QWORD *)(*(_QWORD *)v0 + 600), v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD9CB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 640);
  type metadata accessor for SnapshotItem(255, v2, v1, v6);
  v7 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  return v0;
}

uint64_t sub_23AD9CBF8()
{
  return sub_23AD9CC04((void (*)(void))sub_23AD9CA48);
}

uint64_t sub_23AD9CC04(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_23AD9CC24()
{
  return 0x6E6F6974656C6564;
}

void sub_23AD9CC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[12];
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v14 = a3;
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 568);
  v7 = *(_QWORD *)(*v4 + 584);
  type metadata accessor for SnapshotItem(255, v6, v7, a4);
  v12 = sub_23B1C6C98();
  v11[11] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v13 = (char *)v11 - v8;
  v9 = *(_QWORD *)(v5 + 560);
  v10 = *(_QWORD *)(v5 + 576);
  v15 = v6;
  v16 = v9;
  v17 = v7;
  v18 = v10;
  type metadata accessor for ReconciliationMutation();
}

void sub_23AD9CD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v13 - 288) = a1;
  *(_QWORD *)(v13 - 296) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v13 - 304) = (char *)&a9 - v14;
  *(_QWORD *)(v13 - 280) = v11;
  *(_QWORD *)(v13 - 120) = v11;
  *(_QWORD *)(v13 - 112) = v12;
  *(_QWORD *)(v13 - 264) = v12;
  *(_QWORD *)(v13 - 248) = v10;
  *(_QWORD *)(v13 - 104) = v10;
  *(_QWORD *)(v13 - 96) = v9;
  *(_QWORD *)(v13 - 272) = v9;
  type metadata accessor for ItemReconciliation();
}

void sub_23AD9CD78(uint64_t a1)
{
  void (*v1)(_QWORD, _QWORD, _QWORD, id);
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  id v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[96];

  v8 = sub_23B1C6C98();
  *(_QWORD *)(v6 - 200) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v6 - 192) = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v6 - 160) = &v53[-v10];
  *(_QWORD *)(v6 - 144) = *(_QWORD *)(a1 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v6 - 176) = &v53[-v12];
  v13 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v6 - 232) = v3;
  *(_QWORD *)(v6 - 224) = v13;
  v14 = MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v6 - 328) = &v53[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = &v53[-v17];
  *(_QWORD *)(v6 - 352) = v19;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v6 - 152) = &v53[-v20];
  v21 = sub_23B1C5E4C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = &v53[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (((*(uint64_t (**)(uint64_t))(*v2 + 152))(v23) & 0x4000) != 0)
  {
    *(_QWORD *)(v6 - 168) = v4;
    *(_QWORD *)(v6 - 240) = v1;
    v27 = v2[4];
    if (sub_23AE4F6B4())
    {
      v28 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v29 = sub_23B1C5E40();
      v30 = sub_23B1C6AA0();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_23AA66000, v29, v30, "DeletionAcked triggered on FS snapshot", v31, 2u);
        MEMORY[0x23B8614BC](v31, -1, -1);
      }

      (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v25, v21);
      v32 = (id)FPNotSupportedError();
      (*(void (**)(_QWORD, _QWORD, _QWORD, id))(v6 - 240))(0, 0, 0, v32);

    }
    else
    {
      v33 = *(_QWORD *)(v6 - 208) + *(_QWORD *)(**(_QWORD **)(v6 - 208) + 536);
      v34 = v5;
      v35 = v27;
      v36 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v27 + 472))(v33, v34);
      *(_QWORD *)(v6 - 384) = v35;
      *(_QWORD *)(v6 - 368) = v2;
      *(_QWORD *)(v6 - 320) = v33;
      *(_QWORD *)(v6 - 392) = v37;
      v38 = *(_QWORD *)(v6 - 232);
      *(_QWORD *)(v6 - 400) = MEMORY[0x23B85F0B0](v36, v38);
      v39 = v36;
      if (MEMORY[0x23B85F0E0](v36, v38))
      {
        *(_QWORD *)(v6 - 376) = 0;
        *(_QWORD *)(v6 - 360) = *(_QWORD *)(*(_QWORD *)(v6 - 368) + 16);
        v40 = *(_QWORD *)(v6 - 224);
        *(_QWORD *)(v6 - 216) = a1;
        v41 = sub_23B1C6770();
        sub_23B1C6734();
        if ((v41 & 1) != 0)
        {
          v42 = *(_QWORD *)(v6 - 152);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v40 + 16))(v42, v39 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80)), v38);
        }
        else
        {
          v43 = sub_23B1C6F38();
          v42 = *(_QWORD *)(v6 - 152);
          if (*(_QWORD *)(v6 - 352) != 8)
          {
            __break(1u);
            JUMPOUT(0x23AD9DA0CLL);
          }
          *(_QWORD *)(v6 - 120) = v43;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v42, v6 - 120, v38);
          swift_unknownObjectRelease();
        }
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v40 + 32))(v18, v42, v38);
        sub_23AB00114();
      }
      *(_QWORD *)(v6 - 376) = 0;
      v44 = *(_QWORD *)(v6 - 320);
      swift_bridgeObjectRelease();
      v45 = *(_QWORD *)(v6 - 392);
      v46 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v6 - 240);
      if (!v45)
      {
        (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(v6 - 384) + 240))(v44, 1);
        v47 = *(_QWORD *)(v6 - 232);
        v48 = *(_QWORD *)(v6 - 224);
        v49 = *(_QWORD *)(v6 - 312);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v49, 1, v47) == 1)
        {
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 344) + 8))(v49, *(_QWORD *)(v6 - 336));
        }
        else
        {
          v50 = *(_QWORD *)(v6 - 328);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v50, v49, v47);
          v51 = MEMORY[0x23B8613CC](&unk_23B1DD478, v47);
          if (sub_23AF219A4(v47, v51) == 1)
          {
            v52 = *(_QWORD *)(v6 - 264);
            *(_QWORD *)(v6 - 120) = *(_QWORD *)(v6 - 280);
            *(_QWORD *)(v6 - 112) = v52;
            *(_QWORD *)(v6 - 104) = *(_QWORD *)(v6 - 248);
            *(_QWORD *)(v6 - 96) = *(_QWORD *)(v6 - 272);
            type metadata accessor for JobResult();
          }
          (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v47);
        }
        v46 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v6 - 240);
      }
      *(_QWORD *)(v6 - 120) = 0;
      *(_QWORD *)(v6 - 112) = 0xE000000000000000;
      swift_retain();
      sub_23B1C6EFC();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v6 - 120) = 0x3A656C6174733CLL;
      *(_QWORD *)(v6 - 112) = 0xE700000000000000;
      *(_QWORD *)(v6 - 136) = *(_QWORD *)(v6 - 376);
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      *(_QWORD *)(v6 - 136) = *(_QWORD *)(v6 - 400);
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v46(v45, *(_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 112), 0);
      swift_release_n();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v26 = (id)FPNotSupportedError();
    v1(0, 0, 0, v26);

  }
}

void type metadata accessor for Propagation.DeletionAcked()
{
  JUMPOUT(0x23B861318);
}

void sub_23AD9DA20(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[30];

  v16[19] = a1;
  v2 = *a2;
  v3 = *(_QWORD *)(*a2 + 96);
  v4 = *(_QWORD *)(*a2 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_23B1C6C98();
  v16[9] = *(_QWORD *)(v6 - 8);
  v16[10] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v16[20] = (char *)v16 - v7;
  v8 = sub_23B1C5E4C();
  v16[13] = *(_QWORD *)(v8 - 8);
  v16[14] = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v16[17] = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[11] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v16[18] = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v16[12] = (char *)v16 - v13;
  v14 = *(_QWORD *)(v2 + 88);
  v15 = *(_QWORD *)(v2 + 104);
  v16[21] = v4;
  v16[22] = v3;
  v16[25] = v4;
  v16[26] = v14;
  v16[27] = v3;
  v16[28] = v15;
  type metadata accessor for ItemReconciliation();
}

uint64_t sub_23AD9E2E4()
{
  return 0x752D6C65636E6163;
}

uint64_t sub_23AD9E308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(uint64_t, uint64_t (*)(void *), _QWORD *);

  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  v10 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 536);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a4;
  v11[4] = a5;
  v12 = *(void (**)(uint64_t, uint64_t (*)(void *), _QWORD *))(*(_QWORD *)v9 + 744);
  swift_retain();
  swift_retain();
  swift_retain();
  v12(v10, sub_23AD9EF10, v11);
  swift_release();
  return swift_release();
}

uint64_t sub_23AD9E3B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a3;
  v8[3] = a4;
  v8[4] = a1;
  swift_retain_n();
  v9 = a1;
  v10 = type metadata accessor for Continuation();
  sub_23AD02DFC((uint64_t)"execute(on:continuation:result:completion:)", 43, 2u, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AD3B9C0, v7, (uint64_t)sub_23AD9EF28, (uint64_t)v8, v10, MEMORY[0x24BEE0D00]);
  swift_release();
  return swift_release();
}

uint64_t sub_23AD9E4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;

  v5 = sub_23AD3B904(a1, a2, a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v5;
}

void type metadata accessor for Propagation.CancelUpdate()
{
  JUMPOUT(0x23B861318);
}

void type metadata accessor for Propagation()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD9E520(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  char v17;

  v11 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 536);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v11, a1, AssociatedTypeWitness);
  *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 544)) = a2;
  v13 = a2;
  v14 = sub_23AF1A8A8(a3, a4, a5);
  swift_retain();

  v15 = *(void **)(v14 + 88);
  v16 = *(void **)(v14 + 96);
  *(_QWORD *)(v14 + 88) = 0;
  *(_QWORD *)(v14 + 96) = 0;
  v17 = *(_BYTE *)(v14 + 104);
  *(_BYTE *)(v14 + 104) = 0;
  sub_23AAAEE10(v15, v16, v17);
  swift_release();
  return v14;
}

void sub_23AD9E5F8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD9E6D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v2, 1, 1, a1);
  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 608);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v3, 1, 1, AssociatedTypeWitness);
  v5 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 616);
  v6 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = type metadata accessor for ItemState(0, v6, AssociatedConformanceWitness, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
  v10 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 624);
  *(_QWORD *)v10 = 0;
  *(_QWORD *)(v10 + 8) = 0;
  *(_QWORD *)(v10 + 16) = 0xB000000000000000;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD9E86C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t TupleTypeMetadata2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v1, 1, 1, TupleTypeMetadata2);
  *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 592)) = v4;
  return sub_23AD9E520(v5, v6, v7, v8, v9);
}

void sub_23AD9E8DC()
{
  swift_allocObject();
  sub_23AD9E5F8();
}

void sub_23AD9E954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 592);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v3(v1, 1, 1, AssociatedTypeWitness);
  v3(v0 + *(_QWORD *)(*(_QWORD *)v0 + 600), 1, 1, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD9EA94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 1, 1, a1);
  v7 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 616);
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 624)) = 2;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 632)) = 2;
  v8 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 640);
  v10 = type metadata accessor for SnapshotItem(0, v6, v5, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  return sub_23AD9E520(v4, v3, v12, v13, v14);
}

void sub_23AD9EB50()
{
  swift_allocObject();
  sub_23AD9E954();
}

void sub_23AD9EBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 608);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v1, 1, 1, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD9ECE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a9, 1, 1, a1);
  v11 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 624);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = type metadata accessor for ItemState(0, v10, AssociatedConformanceWitness, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
  v15 = v9 + *(_QWORD *)(*(_QWORD *)v9 + 632);
  *(_QWORD *)v15 = 0;
  *(_QWORD *)(v15 + 8) = 0;
  *(_QWORD *)(v15 + 16) = 0xB000000000000000;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD9EE18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v2, 1, 1, a1);
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 592)) = v4;
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 600)) = v5;
  *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 648)) = 0;
  return sub_23AD9E520(v6, v7, v8, v9, v10);
}

void sub_23AD9EE8C()
{
  swift_allocObject();
  sub_23AD9EBB8();
}

uint64_t sub_23AD9EF10(void *a1)
{
  uint64_t *v1;

  return sub_23AD9E3B4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23AD9EF1C()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_23AD9EF28()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 16))(0, 0, 0, *(_QWORD *)(v0 + 32));
}

void type metadata accessor for Propagation.PropagationError()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23AD9EF70()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23AD9F028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23AD9B58C(a1, *(_QWORD **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23AD9F098()
{
  return sub_23AF1A800(1);
}

uint64_t sub_23AD9F0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t TupleTypeMetadata2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;

  v1 = *(_QWORD *)(v0 + 24);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v3 = *(_QWORD *)(sub_23B1C74F0() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = *(_QWORD *)(v3 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (id *)(v0 + v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    v8 = *(_QWORD *)(v1 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v4, 1, v1))
      (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v4, v1);

  }
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((((v10 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6), AssociatedTypeWitness);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23AD9F270()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v1 = *(_QWORD *)(sub_23B1C74F0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AD9B88C(v0 + v2, *(_QWORD *)(v0 + v3), v0 + v5, *(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + v6 + 8), *(_QWORD *)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23AD9F3A4()
{
  return sub_23ADA1214((uint64_t)&unk_250BFB310, (uint64_t)&unk_250BFB338, (uint64_t)sub_23AD43544, (uint64_t)sub_23ADA1178);
}

void sub_23AD9F3C8()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD9F534()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v0 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v0 - 112) = v2;
  *(_QWORD *)(v0 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v0 - 96) = v4;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD9F5FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();
  swift_release();
  v6 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v6(v1 + v26, v3);
  v6(v1 + v23, v3);
  swift_bridgeObjectRelease();
  v7 = v1 + v23 + *(int *)(v25 + 40);
  v8 = (int *)type metadata accessor for ItemMetadata();
  v9 = v7 + v8[7];
  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10))
    v12(v13, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = (uint64_t *)(v7 + v8[33]);
  v15 = v14[1];
  if (v15 >> 60 != 15)
    sub_23AAAE53C(*v14, v15);
  v16 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_release();
  v17 = *(_QWORD *)(v1 + v29 + 16);
  if (v17 >> 60 != 11 && v17 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v1 + v29 + 8), v17);
  (*(void (**)(uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v1 + v28);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v1 + v28 + *(int *)(v2 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = v1 + v16;
  v20 = *(void **)(v1 + v16 + 16);
  if (v20 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v19 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  v21 = v1 + ((((v16 + 255) & 0xFFFFFFFFFFFFFFF8) + v5 + 16) & ~v5);
  (*(void (**)(uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v21);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v21 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_23AD9F92C()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD9FA90()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23AD9FB4C()
{
  sub_23AD95168();
}

uint64_t sub_23AD9FBE4()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_23AD9FC90()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_23AD94698(*(_QWORD ***)(v0 + 48), v0 + v2, *(uint64_t (**)(_QWORD, _QWORD))v3, *(_QWORD *)(v3 + 8));
}

uint64_t sub_23AD9FD08(void *a1, char a2)
{
  uint64_t *v2;

  return sub_23AD94DFC(a1, a2 & 1, v2[2], v2[3], v2[4]);
}

uint64_t sub_23AD9FD18()
{
  uint64_t v0;

  sub_23ACF6618(*(id *)(v0 + 16), *(_BYTE *)(v0 + 24), (void (*)(id))MEMORY[0x24BEE4BC0]);
  swift_release();
  return swift_deallocObject();
}

void sub_23AD9FD50()
{
  uint64_t v0;

  sub_23AD94EF8(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(_QWORD, _QWORD))(v0 + 32), *(_QWORD *)(v0 + 40));
}

void sub_23AD9FD70()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23AD9FEC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v7(v1 + v19, v2);
  v7(v1 + v23, v2);
  swift_bridgeObjectRelease();
  v8 = v1 + v23 + *(int *)(v3 + 40);
  v9 = (int *)type metadata accessor for ItemMetadata();
  v10 = v8 + v9[7];
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11))
    v13(v14, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = (uint64_t *)(v8 + v9[33]);
  v16 = v15[1];
  if (v16 >> 60 != 15)
    sub_23AAAE53C(*v15, v16);
  swift_bridgeObjectRelease();
  v17 = v1 + ((v23 + v20 + v6) & ~v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v17);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v17 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_23ADA00C0()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23ADA01FC()
{
  sub_23AD9563C();
}

uint64_t sub_23ADA0264()
{
  return sub_23AD943A4(1);
}

void sub_23ADA026C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;

  type metadata accessor for ItemPropagationResult(255, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 40), a4);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  sub_23B1C74F0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23ADA046C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v24 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v5 = (id *)(v1 + v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    if (!(*(unsigned int (**)(id *, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v5, 1))
      (*(void (**)(id *))(*(_QWORD *)(v18 - 8) + 8))(v5);

  }
  swift_release();
  v6 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  v6(v1 + v23, v2);
  v6(v1 + v26, v2);
  swift_bridgeObjectRelease();
  v7 = v1 + v26 + *(int *)(v3 + 40);
  v8 = (int *)type metadata accessor for ItemMetadata();
  v9 = v7 + v8[7];
  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);
  v12(v7 + v8[8], v10);
  swift_bridgeObjectRelease();
  v13 = v7 + v8[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10))
    v12(v13, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = (uint64_t *)(v7 + v8[33]);
  v15 = v14[1];
  if (v15 >> 60 != 15)
    sub_23AAAE53C(*v14, v15);
  swift_bridgeObjectRelease();
  v16 = v1 + ((v26 + v25 + v24) & ~v24);
  (*(void (**)(uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v16 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ADA06EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;

  type metadata accessor for ItemPropagationResult(255, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 40), a4);
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E5510);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  sub_23B1C74F0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23ADA08BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v16 = *(_QWORD *)(a1 - 8);
  v17 = (v13 + a11 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (*(_QWORD *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AD95B6C(v14 + a13, *(_QWORD *)(v14 + a12), v14 + v15, v14 + v13, v14 + v17, *(_QWORD *)(v14 + v18), *(_QWORD *)(v14 + v18 + 8), *(_QWORD *)(v14 + ((v18 + 23) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_23ADA0944()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23ADA0A98()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v0 - 120) = AssociatedTypeWitness;
  *(_QWORD *)(v0 - 112) = v2;
  *(_QWORD *)(v0 - 104) = AssociatedConformanceWitness;
  *(_QWORD *)(v0 - 96) = v4;
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23ADA0B54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_QWORD *)(a1 - 8);
  v29 = v3;
  v23 = (v3 + v2 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v6 = *(_QWORD *)(v5 + 64) + v23;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v7 = *(_QWORD *)(v1 + 104);
  if (v7 >> 60 != 15 && (v7 & 0xF000000000000000) != 0xB000000000000000)
    sub_23AAAE53C(*(_QWORD *)(v1 + 96), v7);
  v8 = v6 + 7;
  v9 = *(void (**)(uint64_t))(v27 + 8);
  v9(v1 + v25);
  v9(v1 + v24);
  swift_bridgeObjectRelease();
  v10 = v1 + v24 + *(int *)(v26 + 40);
  v11 = (int *)type metadata accessor for ItemMetadata();
  v12 = v10 + v11[7];
  v13 = sub_23B1C5BDC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v15(v12, v13);
  v15(v10 + v11[8], v13);
  swift_bridgeObjectRelease();
  v16 = v10 + v11[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v16, 1, v13))
    v15(v16, v13);
  v17 = v8 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = (uint64_t *)(v10 + v11[33]);
  v19 = v18[1];
  if (v19 >> 60 != 15)
    sub_23AAAE53C(*v18, v19);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v1 + v29);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v1 + v29 + *(int *)(v28 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(v30 - 8) + 8))(v1 + v23);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(v31 - 8) + 8))(v1 + v23 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v1 + v17;
  v21 = *(void **)(v1 + v17 + 16);
  if (v21 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v20 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_23ADA0E6C()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23ADA0FB8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23ADA1064()
{
  uint64_t *v0;
  char v1;
  void *v2;

  sub_23AD93820(v2, v1, v0[6], v0[7], v0[8], v0[9], v0[10], (uint64_t)(v0 + 11));
}

uint64_t sub_23ADA10E8()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ADA10F4()
{
  return sub_23ADA33D0();
}

uint64_t sub_23ADA1108()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ADA114C()
{
  uint64_t *v0;

  sub_23AD93AC8(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_23ADA116C()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_23ADA1178()
{
  return sub_23ADA38E8();
}

void sub_23ADA1190(uint64_t a1)
{
  uint64_t *v1;

  sub_23AD97F70(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t objectdestroy_21Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ADA11F0()
{
  return sub_23ADA1214((uint64_t)&unk_250BFB630, (uint64_t)&unk_250BFB658, (uint64_t)sub_23AD43544, (uint64_t)sub_23ADA1178);
}

uint64_t sub_23ADA1214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_23AD982F0(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(void **)(v4 + 56), a1, a2, a3, a4);
}

void sub_23ADA1250()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23ADA13B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();
  swift_release();
  v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v7(v1 + v19, v2);
  swift_release();
  v7(v1 + v23, v2);
  swift_bridgeObjectRelease();
  v8 = v1 + v23 + *(int *)(v3 + 40);
  v9 = (int *)type metadata accessor for ItemMetadata();
  v10 = v8 + v9[7];
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11))
    v13(v14, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = (uint64_t *)(v8 + v9[33]);
  v16 = v15[1];
  if (v16 >> 60 != 15)
    sub_23AAAE53C(*v15, v16);
  swift_bridgeObjectRelease();
  v17 = v1 + ((v23 + v20 + v6) & ~v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v17);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v17 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_23ADA15B0()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23ADA16FC()
{
  sub_23AD8DB90();
}

void sub_23ADA1768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;

  type metadata accessor for FileTreeWriter.ItemOrContinuation(255, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 40), a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  sub_23B1C74F0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23ADA1930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = (id *)(v1 + v24);
  v26 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

LABEL_5:
    v7 = v22;
    v8 = v23;
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    goto LABEL_5;
  }
  v21 = *(_QWORD *)(v4 - 8);
  v7 = v22;
  v8 = v23;
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v4))
    (*(void (**)(id *, uint64_t))(v21 + 8))(v6, v4);
LABEL_6:
  v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v9(v1 + v25, v2);
  swift_release();
  v9(v1 + v8, v2);
  swift_bridgeObjectRelease();
  v10 = v1 + v8 + *(int *)(v3 + 40);
  v11 = (int *)type metadata accessor for ItemMetadata();
  v12 = v10 + v11[7];
  v13 = sub_23B1C5BDC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v15(v12, v13);
  v15(v10 + v11[8], v13);
  swift_bridgeObjectRelease();
  v16 = v10 + v11[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v16, 1, v13))
    v15(v16, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = (uint64_t *)(v10 + v11[33]);
  v18 = v17[1];
  if (v18 >> 60 != 15)
    sub_23AAAE53C(*v17, v18);
  swift_bridgeObjectRelease();
  v19 = v1 + ((v8 + v27 + v26) & ~v26);
  (*(void (**)(uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v19);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v19 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ADA1BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;

  type metadata accessor for FileTreeWriter.ItemOrContinuation(255, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 40), a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  sub_23B1C74F0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23ADA1D64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = (v1 + v8 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_23AD8E080(v2 + v10, v2 + v9, *(uint64_t **)(v2 + v3), v2 + v1, v2 + v5, *(_QWORD *)(v2 + v6), *(_QWORD *)(v2 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(v2+ ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

unint64_t sub_23ADA1DEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569E29D0;
  if (!qword_2569E29D0)
  {
    v1 = sub_23B1C545C();
    result = MEMORY[0x23B8613CC](MEMORY[0x24BDCAEA8], v1);
    atomic_store(result, (unint64_t *)&qword_2569E29D0);
  }
  return result;
}

void sub_23ADA1E34()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23ADA1F64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();
  swift_release();
  swift_release();
  v20 = v5;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1 + v5, v3);
  swift_bridgeObjectRelease();
  v8 = v1 + v5 + *(int *)(v4 + 40);
  v9 = (int *)type metadata accessor for ItemMetadata();
  v10 = v8 + v9[7];
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11))
    v13(v14, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = (uint64_t *)(v8 + v9[33]);
  v16 = v15[1];
  if (v16 >> 60 != 15)
    sub_23AAAE53C(*v15, v16);
  swift_bridgeObjectRelease();
  v17 = v1 + ((v20 + v19 + v7) & ~v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v17, v2);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v17 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_23ADA2154()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23ADA2278()
{
  sub_23AD8E548();
}

void sub_23ADA22EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23ADA2C74(a1, a2, a3, a4);
}

void sub_23ADA2300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;

  type metadata accessor for ItemPropagationResult(255, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 40), a4);
  sub_23B1C6C98();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23ADA2470(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v21 = *(_QWORD *)(v6 + 64);
  swift_release();
  swift_release();
  swift_release();
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v1 + v19, 1))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1 + v19, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1 + v25, v3);
  swift_bridgeObjectRelease();
  v8 = v1 + v25 + *(int *)(v4 + 40);
  v9 = (int *)type metadata accessor for ItemMetadata();
  v10 = v8 + v9[7];
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11))
    v13(v14, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = (uint64_t *)(v8 + v9[33]);
  v16 = v15[1];
  if (v16 >> 60 != 15)
    sub_23AAAE53C(*v15, v16);
  v17 = (v25 + v22 + v7) & ~v7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v1 + v17);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v1 + v17 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_23ADA26A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;

  type metadata accessor for ItemPropagationResult(255, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 40), a4);
  sub_23B1C6C98();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23ADA2800()
{
  sub_23AD8F114();
}

uint64_t sub_23ADA2874()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23ADA289C()
{
  sub_23ADA3748();
}

void objectdestroy_100Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;

  type metadata accessor for ItemPropagationResult(255, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 40), a4);
  sub_23B1C6C98();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23ADA2A24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a1 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v23 = *(_QWORD *)(v6 + 64);
  swift_release();
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v1 + v21, 1))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1 + v21, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1 + v27, v3);
  swift_bridgeObjectRelease();
  v8 = v1 + v27 + *(int *)(v4 + 40);
  v9 = (int *)type metadata accessor for ItemMetadata();
  v10 = v8 + v9[7];
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11))
    v13(v14, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = (uint64_t *)(v8 + v9[33]);
  v16 = v15[1];
  if (v16 >> 60 != 15)
    sub_23AAAE53C(*v15, v16);
  v17 = (v27 + v24 + v7) & ~v7;
  v18 = (v23 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v19 = v1 + v17;
  (*(void (**)(uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v19);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v19 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ADA2C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;

  type metadata accessor for ItemPropagationResult(255, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 40), a4);
  sub_23B1C6C98();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

#error "23ADA2E34: call analysis failed (funcsize=27)"

void sub_23ADA2E54()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23ADA2F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *(_QWORD *)(a1 - 8);
  v7 = (v4 + v26 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1 + v4, v2);
  swift_bridgeObjectRelease();
  v9 = v1 + v4 + *(int *)(v3 + 40);
  v10 = (int *)type metadata accessor for ItemMetadata();
  v11 = v9 + v10[7];
  v12 = sub_23B1C5BDC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  v14(v9 + v10[8], v12);
  swift_bridgeObjectRelease();
  v15 = v9 + v10[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12))
    v14(v15, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = (uint64_t *)(v9 + v10[33]);
  v17 = v16[1];
  if (v17 >> 60 != 15)
    sub_23AAAE53C(*v16, v17);
  v18 = (v8 + 63) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(v24 - 8) + 8))(v1 + v7);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(v25 - 8) + 8))(v1 + v7 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v19 = *(_QWORD *)(v1 + v8 + 16);
  if (v19 >> 60 != 11 && v19 >> 60 != 15)
    sub_23AAAE53C(*(_QWORD *)(v1 + v8 + 8), v19);
  v21 = v1 + v18;
  v22 = *(void **)(v1 + v18 + 16);
  if (v22 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v21 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_23ADA3218()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23ADA3340()
{
  sub_23AD8CAFC();
}

uint64_t sub_23ADA33C4()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t sub_23ADA33D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), 0, 0, 0);
}

void objectdestroy_110Tm()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23ADA3540(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();

  v20 = v5;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1 + v5, v3);
  swift_bridgeObjectRelease();
  v8 = v1 + v5 + *(int *)(v4 + 40);
  v9 = (int *)type metadata accessor for ItemMetadata();
  v10 = v8 + v9[7];
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11))
    v13(v14, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = (uint64_t *)(v8 + v9[33]);
  v16 = v15[1];
  if (v16 >> 60 != 15)
    sub_23AAAE53C(*v15, v16);
  v17 = (v20 + v19 + v7) & ~v7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1 + v17, v2);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v1 + v17 + *(int *)(a1 + 56));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ADA3748()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemState(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

void sub_23ADA3868(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = (v3 + v1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23AD8EFE4(*(_QWORD *)(v2 + 48), *(void **)(v2 + 56), v2 + v3, v2 + v5, *(_QWORD *)(v2 + v6), *(_QWORD *)(v2 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_23ADA38DC()
{
  return objectdestroy_24Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_23ADA38E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_23ADA3918()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23ADA39A0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) == 0 && ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x18)
  {
    v10 = AssociatedTypeWitness;
    if (*(_DWORD *)(v5 + 84) < 0x7FFFFFFFu)
    {
      v11 = *(_QWORD *)((((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v11 >= 0xFFFFFFFF)
        LODWORD(v11) = -1;
      if ((_DWORD)v11 != -1)
        goto LABEL_9;
    }
    else if ((*(unsigned int (**)(uint64_t *))(v5 + 48))(a2))
    {
LABEL_9:
      memcpy(a1, a2, ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      return a1;
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, v10);
    v12 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
    return a1;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  swift_retain();
  return a1;
}

uint64_t sub_23ADA3AE4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_DWORD *)(v3 + 84) >= 0x7FFFFFFFu)
  {
    result = (*(uint64_t (**)(uint64_t))(v3 + 48))(a1);
    if ((_DWORD)result)
      return result;
LABEL_7:
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
    return swift_bridgeObjectRelease();
  }
  v5 = *(_QWORD *)(((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFF8) + 8);
  if (v5 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  result = (v5 + 1);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  return result;
}

void *sub_23ADA3BB0(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84) < 0x7FFFFFFFu)
  {
    v7 = *(_QWORD *)((((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8) + 8);
    if (v7 >= 0xFFFFFFFF)
      LODWORD(v7) = -1;
    if ((_DWORD)v7 != -1)
      goto LABEL_3;
LABEL_7:
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v8 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v9 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v8 = *v9;
    v8[1] = v9[1];
    swift_bridgeObjectRetain();
    return a1;
  }
  if (!(*(unsigned int (**)(const void *))(v5 + 48))(a2))
    goto LABEL_7;
LABEL_3:
  memcpy(a1, a2, ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
  return a1;
}

void *sub_23ADA3CB4(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 >= 0x7FFFFFFF)
  {
    v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
    v9 = v8(a1, *(unsigned int *)(v5 + 84), AssociatedTypeWitness);
    v10 = v8(a2, v6, AssociatedTypeWitness);
    if (v9)
      goto LABEL_3;
LABEL_8:
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      v14 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v15 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v14 = *v15;
      v14[1] = v15[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v13 = *(_QWORD *)((((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v10 = v13 + 1;
  if (*(_QWORD *)((((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL)
    goto LABEL_8;
LABEL_3:
  if (v10)
  {
LABEL_10:
    memcpy(a1, a2, ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v11 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_23ADA3E74(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84) < 0x7FFFFFFFu)
  {
    v7 = *(_QWORD *)((((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8) + 8);
    if (v7 >= 0xFFFFFFFF)
      LODWORD(v7) = -1;
    if ((_DWORD)v7 != -1)
      goto LABEL_3;
LABEL_7:
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    *(_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    return a1;
  }
  if (!(*(unsigned int (**)(const void *))(v5 + 48))(a2))
    goto LABEL_7;
LABEL_3:
  memcpy(a1, a2, ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
  return a1;
}

void *sub_23ADA3F6C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if (v6 >= 0x7FFFFFFF)
  {
    v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
    v9 = v8(a1, *(unsigned int *)(v5 + 84), AssociatedTypeWitness);
    v10 = v8(a2, v6, AssociatedTypeWitness);
    if (v9)
      goto LABEL_3;
LABEL_8:
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      v12 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      v13 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v12 = *v13;
      v12[1] = v13[1];
      swift_bridgeObjectRelease();
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v11 = *(_QWORD *)((((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  v10 = v11 + 1;
  if (*(_QWORD *)((((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL)
    goto LABEL_8;
LABEL_3:
  if (v10)
  {
LABEL_10:
    memcpy(a1, a2, ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

