uint64_t sub_23ADA4118(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v12;
  unint64_t v13;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 - 1 < a2)
  {
    v8 = a2 - v6 + 2;
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 < 0x7FFFFFFF)
  {
    v13 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
    if (v13 >= 0xFFFFFFFF)
      LODWORD(v13) = -1;
    v12 = v13 + 1;
  }
  else
  {
    v12 = (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  }
  if (v12 >= 2)
    return v12 - 1;
  else
    return 0;
}

void sub_23ADA4270(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = v7 - 1;
  if (v7 - 1 >= a3)
  {
    v11 = 0;
    if (v8 >= a2)
      goto LABEL_16;
  }
  else
  {
    v9 = a3 - v7 + 2;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (v8 >= a2)
LABEL_16:
      __asm { BR              X13 }
  }
  v12 = a2 - v7;
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_23ADA4390()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x23ADA4438);
}

void sub_23ADA4398()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x23ADA43A0);
  JUMPOUT(0x23ADA4438);
}

void sub_23ADA43F4()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x23ADA4438);
}

void sub_23ADA43FC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x23ADA4438);
}

uint64_t sub_23ADA4404@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  unsigned int v4;
  _DWORD *v5;
  int v6;
  size_t v7;

  *(_WORD *)((char *)v5 + v7) = 0;
  if (!v6)
LABEL_8:
    JUMPOUT(0x23ADA4438);
  if (v6 + 1 > v4)
  {
    if ((_DWORD)v7)
    {
      v2 = v6 - v4;
      bzero(v5, v7);
      *v5 = v2;
    }
    goto LABEL_8;
  }
  if (v6 == -1)
    goto LABEL_8;
  if (a1 < 0x7FFFFFFF)
    JUMPOUT(0x23ADA4410);
  return (*(uint64_t (**)(_DWORD *))(a2 + 56))(v5);
}

uint64_t sub_23ADA4450(uint64_t a1)
{
  uint64_t v2;
  unint64_t v4;

  v2 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v2 + 84) >= 0x7FFFFFFFu)
    return (*(uint64_t (**)(uint64_t))(v2 + 48))(a1);
  v4 = *(_QWORD *)(((a1 + *(_QWORD *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFF8) + 8);
  if (v4 >= 0xFFFFFFFF)
    LODWORD(v4) = -1;
  return (v4 + 1);
}

void sub_23ADA44E0(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  int v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if ((_DWORD)a2)
    {
      if (v5 < 0x7FFFFFFF)
      {
        v10 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
        if ((a2 & 0x80000000) != 0)
        {
          *v10 = a2 ^ 0x80000000;
          v10[1] = 0;
        }
        else
        {
          v10[1] = (a2 - 1);
        }
      }
      else
      {
        (*(void (**)(_DWORD *, uint64_t))(v4 + 56))(a1, a2);
      }
    }
  }
  else
  {
    v8 = (v7 + 7) & 0xFFFFFFF8;
    if (v8 != -16)
    {
      v9 = ~v6 + a2;
      bzero(a1, (v8 + 16));
      *a1 = v9;
    }
  }
}

void sub_23ADA45B8()
{
  JUMPOUT(0x23B8613CCLL);
}

uint64_t sub_23ADA4608(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  _OWORD v34[2];
  __int128 v35;
  _BYTE v36[40];
  void *v37;
  uint64_t v38;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (!v1)
    return v2;
  v3 = a1;
  v38 = MEMORY[0x24BEE4AF8];
  sub_23ADACF94(0, v1, 0);
  result = sub_23AAB7928(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v27 = v3 + 80;
  v28 = v5;
  v29 = v3 + 64;
  v30 = v3;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_26;
    sub_23ACEBF78(*(_QWORD *)(v3 + 48) + 40 * v6, (uint64_t)v36);
    v12 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v6);
    v37 = v12;
    sub_23ACEBF78((uint64_t)v36, (uint64_t)v34);
    *((_QWORD *)&v35 + 1) = v12;
    v32[0] = v34[0];
    v32[1] = v34[1];
    v33 = v35;
    v13 = v12;
    v14 = v12;
    sub_23AA8A05C((uint64_t)v36, qword_2569E5710);
    v15 = (void *)*((_QWORD *)&v33 + 1);
    v16 = sub_23B1C6E60();
    v31 = v17;
    v18 = v15;
    sub_23AA8A05C((uint64_t)v32, qword_2569E5710);
    v2 = v38;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_23ADACF94(0, *(_QWORD *)(v2 + 16) + 1, 1);
      v2 = v38;
    }
    v20 = *(_QWORD *)(v2 + 16);
    v19 = *(_QWORD *)(v2 + 24);
    if (v20 >= v19 >> 1)
    {
      result = sub_23ADACF94(v19 > 1, v20 + 1, 1);
      v2 = v38;
    }
    *(_QWORD *)(v2 + 16) = v20 + 1;
    v21 = (_QWORD *)(v2 + 24 * v20);
    v3 = v30;
    v21[4] = v16;
    v21[5] = v31;
    v21[6] = v15;
    v9 = 1 << *(_BYTE *)(v30 + 32);
    if (v6 >= v9)
      goto LABEL_27;
    v8 = v29;
    v22 = *(_QWORD *)(v29 + 8 * v11);
    if ((v22 & (1 << v6)) == 0)
      goto LABEL_28;
    v5 = v28;
    if (*(_DWORD *)(v30 + 36) != v28)
      goto LABEL_29;
    v23 = v22 & (-2 << (v6 & 0x3F));
    if (v23)
    {
      v9 = __clz(__rbit64(v23)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v1;
    }
    else
    {
      v24 = v11 + 1;
      v25 = (unint64_t)(v9 + 63) >> 6;
      v10 = v1;
      if (v11 + 1 < v25)
      {
        v26 = *(_QWORD *)(v29 + 8 * v24);
        if (v26)
        {
LABEL_22:
          v9 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v11)
          {
            v26 = *(_QWORD *)(v27 + 8 * v11++);
            if (v26)
            {
              v24 = v11 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23ADA48B8(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *, uint64_t), uint64_t a8, uint64_t a9, uint64_t a10, char a11, unsigned __int8 a12, void (*a13)(uint64_t), uint64_t a14)
{
  uint64_t v14;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t inited;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  id v70;
  void *v71;
  id v72;
  unint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void *v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  unint64_t v89;
  char *v90;
  id v91;
  char *v92;
  char *v93;
  unint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  char *v102;
  os_log_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  void *v107;
  void *v108;
  void *v109;
  unsigned int v110;
  id v111;
  char *v112;
  void (*v113)(char *, uint64_t, uint64_t);
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t, char *, uint64_t);
  void *v122;
  id v123;
  void *v124;
  void *v125;
  id v127;
  void (*v128)(char *, uint64_t);
  _QWORD *v129;
  id v130;
  char *v131;
  id v132;
  id v133;
  NSObject *v134;
  os_log_type_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  _QWORD *v141;
  unint64_t v142;
  unint64_t v143;
  id v144;
  _QWORD *v145;
  char *v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  os_log_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  void (*v163)(char *, uint64_t);
  void (*v164)(char *, uint64_t);
  uint64_t v165;
  id v166;
  _QWORD *v167;
  uint64_t v168;
  _QWORD *v169;
  char *v170;
  uint64_t v171;
  void (*v172)(uint64_t);
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  _OWORD v179[2];
  __int128 v180;
  void (*v181)(uint64_t, void *, void *);
  void *v182;
  uint64_t (*v183)();
  uint64_t v184;
  uint64_t v185;

  v158 = a8;
  v164 = a7;
  v165 = a6;
  v162 = a5;
  v163 = a2;
  v172 = a13;
  v185 = *MEMORY[0x24BDAC8D0];
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3158);
  MEMORY[0x24BDAC7A8](v168);
  v169 = (uint64_t *)((char *)&v149 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v19);
  v157 = (uint64_t)&v149 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23B1C5A08();
  v176 = *(_QWORD *)(v21 - 8);
  v22 = *(_QWORD *)(v176 + 64);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v167 = (uint64_t *)((char *)&v149 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = MEMORY[0x24BDAC7A8](v23);
  v155 = (char *)&v149 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v154 = (char *)&v149 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v151 = (char *)&v149 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v161 = (char *)&v149 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v170 = (char *)&v149 - v32;
  v33 = sub_23B1C5E4C();
  v174 = *(_QWORD *)(v33 - 8);
  v175 = v33;
  v34 = MEMORY[0x24BDAC7A8](v33);
  v173 = (char *)&v149 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v152 = (char *)&v149 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)&v149 - v38;
  v40 = *(void **)(v14 + 16);
  v41 = (void *)sub_23B1C5954();
  *(_QWORD *)&v180 = 0;
  v42 = objc_msgSend(v40, sel_permanentStorageForItemAtURL_allocateIfNone_error_, v41, 1, &v180);

  v43 = (void *)v180;
  v171 = a14;
  if (!v42)
  {
    v70 = (id)v180;
    v71 = (void *)sub_23B1C587C();

    swift_willThrow();
LABEL_25:
    v78 = v176;
    goto LABEL_26;
  }
  v166 = v42;
  v160 = v21;
  LODWORD(v153) = a12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1D8700;
  *(_QWORD *)(inited + 32) = sub_23B1C63E0();
  *(_QWORD *)(inited + 40) = v45;
  v46 = v43;
  v47 = sub_23B1C5930();
  v48 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v47;
  *(_QWORD *)(inited + 56) = v49;
  *(_QWORD *)(inited + 80) = sub_23B1C63E0();
  *(_QWORD *)(inited + 88) = v50;
  *(_QWORD *)(inited + 120) = v48;
  v150 = a3;
  *(_QWORD *)(inited + 96) = a3;
  *(_QWORD *)(inited + 104) = a4;
  *(_QWORD *)(inited + 128) = sub_23B1C63E0();
  *(_QWORD *)(inited + 136) = v51;
  v159 = a4;
  swift_bridgeObjectRetain();
  v156 = a1;
  v52 = sub_23B1C5930();
  *(_QWORD *)(inited + 168) = v48;
  *(_QWORD *)(inited + 144) = v52;
  *(_QWORD *)(inited + 152) = v53;
  v54 = sub_23B1C63E0();
  v55 = MEMORY[0x24BEE1328];
  *(_QWORD *)(inited + 176) = v54;
  *(_QWORD *)(inited + 184) = v56;
  *(_QWORD *)(inited + 216) = v55;
  *(_BYTE *)(inited + 192) = 1;
  *(_QWORD *)(inited + 224) = sub_23B1C63E0();
  *(_QWORD *)(inited + 232) = v57;
  *(_QWORD *)(inited + 264) = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5708);
  *(_QWORD *)(inited + 240) = v163;
  *(_QWORD *)(inited + 272) = sub_23B1C63E0();
  *(_QWORD *)(inited + 280) = v58;
  *(_QWORD *)(inited + 312) = v48;
  v59 = v165;
  *(_QWORD *)(inited + 288) = v162;
  *(_QWORD *)(inited + 296) = v59;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v60 = sub_23AAE9EB4(inited);
  v61 = (void *)MEMORY[0x24BEE4568];
  if ((a11 & 1) != 0)
  {
    v62 = sub_23B1C63E0();
    v64 = v63;
    v182 = v61;
    *(_QWORD *)&v180 = 9;
    sub_23AAA159C(&v180, v179);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v177 = v60;
    sub_23AD1A024(v179, v62, v64, isUniquelyReferenced_nonNull_native);
    v60 = v177;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if ((v153 & 1) != 0)
  {
    v66 = sub_23B1C63E0();
    v68 = v67;
    v182 = v61;
    *(_QWORD *)&v180 = 1;
    sub_23AAA159C(&v180, v179);
    v69 = swift_isUniquelyReferenced_nonNull_native();
    v177 = v60;
    sub_23AD1A024(v179, v66, v68, v69);
    v165 = v177;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v165 = v60;
  }
  v72 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v73 = v159;
  swift_bridgeObjectRetain_n();
  v74 = sub_23B1C5E40();
  v75 = sub_23B1C6A88();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = (uint8_t *)swift_slowAlloc();
    v77 = swift_slowAlloc();
    *(_QWORD *)&v180 = v77;
    *(_DWORD *)v76 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v179[0] = sub_23AABEC68(v150, v73, (uint64_t *)&v180);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v74, v75, "⚔️  Putting remote version %s into Genstore...", v76, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v77, -1, -1);
    MEMORY[0x23B8614BC](v76, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v163 = *(void (**)(char *, uint64_t))(v174 + 8);
  v163(v39, v175);
  v21 = v160;
  v78 = v176;
  v79 = (void *)sub_23B1C5954();
  v80 = swift_bridgeObjectRetain();
  sub_23B147D30(v80);
  swift_bridgeObjectRelease();
  v81 = (void *)sub_23B1C61F4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v180 = 0;
  v82 = v166;
  v83 = objc_msgSend(v166, sel_prepareAdditionCreationWithItemAtURL_byMoving_creationInfo_error_, v79, 1, v81, &v180);

  v84 = (void *)v180;
  a1 = v156;
  if (v83)
  {
    sub_23B1C59CC();
    v85 = v84;

    v86 = v157;
    sub_23AB6C0EC(v158, v157);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v86, 1, v21) == 1)
    {
      sub_23AA8A05C(v86, (uint64_t *)&unk_2542E6740);
      v87 = v171;
LABEL_23:
      v112 = v170;
      v175 = sub_23B1C5954();
      sub_23B147D30(v165);
      swift_bridgeObjectRelease();
      v174 = sub_23B1C61F4();
      swift_bridgeObjectRelease();
      v113 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
      v114 = v154;
      v113(v154, a1, v21);
      v115 = v155;
      v113(v155, (uint64_t)v112, v21);
      v116 = *(unsigned __int8 *)(v78 + 80);
      v117 = (v116 + 32) & ~v116;
      v118 = (v22 + v116 + v117) & ~v116;
      v119 = swift_allocObject();
      *(_QWORD *)(v119 + 16) = v172;
      *(_QWORD *)(v119 + 24) = v87;
      v120 = v119 + v117;
      v121 = *(void (**)(uint64_t, char *, uint64_t))(v78 + 32);
      v121(v120, v114, v21);
      v121(v119 + v118, v115, v21);
      v183 = sub_23ADA7AD4;
      v184 = v119;
      *(_QWORD *)&v180 = MEMORY[0x24BDAC760];
      *((_QWORD *)&v180 + 1) = 1107296256;
      v181 = sub_23AAB5F54;
      v182 = &block_descriptor_3_0;
      v122 = _Block_copy(&v180);
      swift_retain();
      swift_release();
      v123 = v166;
      v125 = (void *)v174;
      v124 = (void *)v175;
      objc_msgSend(v166, sel_createAdditionStagedAtURL_creationInfo_completionHandler_, v175, v174, v122);
      _Block_release(v122);

      return (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v112, v21);
    }
    v89 = a10;
    v90 = v161;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v161, v86, v21);
    v91 = (id)fpfs_current_or_default_log();
    v92 = v152;
    sub_23B1C5E58();
    v93 = v151;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v151, v90, v21);
    v94 = v159;
    swift_bridgeObjectRetain_n();
    v95 = sub_23B1C5E40();
    v96 = sub_23B1C6A88();
    LODWORD(v162) = v96;
    if (os_log_type_enabled(v95, v96))
    {
      v97 = swift_slowAlloc();
      v158 = a10;
      v98 = v97;
      v157 = swift_slowAlloc();
      *(_QWORD *)&v180 = v157;
      *(_DWORD *)v98 = 136315394;
      v164 = (void (*)(char *, uint64_t))(v98 + 4);
      sub_23AA7E38C((unint64_t *)&qword_2542DD420, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      v153 = v95;
      v99 = sub_23B1C7304();
      *(_QWORD *)&v179[0] = sub_23AABEC68(v99, v100, (uint64_t *)&v180);
      v101 = v93;
      v102 = v92;
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v164 = *(void (**)(char *, uint64_t))(v78 + 8);
      v164(v101, v21);
      *(_WORD *)(v98 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v179[0] = sub_23AABEC68(v150, v94, (uint64_t *)&v180);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease_n();
      v103 = v153;
      _os_log_impl(&dword_23AA66000, v153, (os_log_type_t)v162, "⚔️  associate thumnail %s for loser %s", (uint8_t *)v98, 0x16u);
      v104 = v157;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v104, -1, -1);
      v105 = v98;
      v89 = v158;
      a1 = v156;
      MEMORY[0x23B8614BC](v105, -1, -1);

      v106 = v102;
    }
    else
    {
      v164 = *(void (**)(char *, uint64_t))(v78 + 8);
      v164(v93, v21);

      swift_bridgeObjectRelease_n();
      v106 = v92;
    }
    v163(v106, v175);
    v107 = (void *)sub_23B1C5954();
    v108 = (void *)sub_23B1C5954();
    v87 = v171;
    if (v89 >> 60 == 15)
      v109 = 0;
    else
      v109 = (void *)sub_23B1C5AA4();
    *(_QWORD *)&v180 = 0;
    v110 = objc_msgSend(v107, sel_fp_associateThumbnailToVersionAtURL_thumbnailMetadata_error_, v108, v109, &v180);

    if (v110)
    {
      v111 = (id)v180;
      v21 = v160;
      v164(v161, v160);
      v78 = v176;
      goto LABEL_23;
    }
    v127 = (id)v180;
    swift_bridgeObjectRelease();
    v71 = (void *)sub_23B1C587C();

    swift_willThrow();
    v21 = v160;
    v128 = v164;
    v164(v161, v160);
    v128(v170, v21);
    goto LABEL_25;
  }
  v88 = (id)v180;
  swift_bridgeObjectRelease();
  v71 = (void *)sub_23B1C587C();

  swift_willThrow();
LABEL_26:
  v129 = v167;
  v130 = (id)fpfs_current_or_default_log();
  v131 = v173;
  sub_23B1C5E58();
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v78 + 16))(v129, a1, v21);
  v132 = v71;
  v133 = v71;
  v134 = sub_23B1C5E40();
  v135 = sub_23B1C6AA0();
  if (os_log_type_enabled(v134, v135))
  {
    v136 = swift_slowAlloc();
    v167 = (_QWORD *)swift_slowAlloc();
    v170 = (char *)swift_slowAlloc();
    *(_QWORD *)&v180 = v170;
    *(_DWORD *)v136 = 136446466;
    v166 = (id)(v136 + 4);
    v137 = (void *)sub_23B1C5954();
    v138 = v21;
    v139 = objc_msgSend(v137, sel_fp_shortDescription);

    v140 = sub_23B1C63E0();
    v141 = v129;
    v143 = v142;

    *(_QWORD *)&v179[0] = sub_23AABEC68(v140, v143, (uint64_t *)&v180);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v176 + 8))(v141, v138);
    *(_WORD *)(v136 + 12) = 2112;
    swift_getErrorValue();
    v144 = sub_23B0D9CF0(v178);
    *(_QWORD *)&v179[0] = v144;
    sub_23B1C6CBC();
    v145 = v167;
    *v167 = v144;

    _os_log_impl(&dword_23AA66000, v134, v135, "failed to add version to %{public}s: %@", (uint8_t *)v136, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v145, -1, -1);
    v146 = v170;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v146, -1, -1);
    MEMORY[0x23B8614BC](v136, -1, -1);

    (*(void (**)(char *, uint64_t))(v174 + 8))(v173, v175);
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v78 + 8))(v129, v21);

    (*(void (**)(char *, uint64_t))(v174 + 8))(v131, v175);
  }
  v147 = (uint64_t)v169;
  *v169 = v71;
  swift_storeEnumTagMultiPayload();
  v148 = v71;
  v172(v147);

  return sub_23AA8A05C(v147, &qword_2569E3158);
}

uint64_t sub_23ADA57A4(void *a1, void *a2, void (*a3)(uint64_t *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t *v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t result;
  void (*v45)(uint64_t *);
  uint64_t v46;
  id v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void (*v65)(uint64_t *);
  int v66;

  v59 = a6;
  v62 = a5;
  v63 = a1;
  v64 = a4;
  v65 = a3;
  v7 = sub_23B1C5570();
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23B1C5A08();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C5E4C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3158);
  v22 = MEMORY[0x24BDAC7A8](v21);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (uint64_t *)((char *)&v53 - v25);
  if (a2)
  {
    *v26 = (uint64_t)a2;
    swift_storeEnumTagMultiPayload();
    v27 = a2;
LABEL_3:
    v65(v26);
    return sub_23AA8A05C((uint64_t)v26, &qword_2569E3158);
  }
  v54 = v18;
  v55 = v13;
  v28 = v61;
  v56 = v11;
  v57 = v16;
  v29 = v60;
  v58 = v23;
  v30 = v63;
  if (!v63)
  {
    v47 = (id)fpfs_current_or_default_log();
    v48 = v20;
    sub_23B1C5E58();
    v49 = sub_23B1C5E40();
    v50 = sub_23B1C6A88();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_23AA66000, v49, v50, "⚔️  no addition was created", v51, 2u);
      MEMORY[0x23B8614BC](v51, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v17);
    v66 = 22;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    sub_23B1C5864();
    v52 = sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
    *v26 = v52;
    swift_storeEnumTagMultiPayload();
    goto LABEL_3;
  }
  v31 = v24;
  v32 = (void *)objc_opt_self();
  v33 = v30;
  v34 = (void *)sub_23B1C5954();
  v35 = objc_msgSend(v33, sel_nameSpace);
  v36 = objc_msgSend(v33, sel_name);
  objc_msgSend(v32, sel___itemAtURL_didGainVersionWithClientID_name_purposeID_, v34, v35, v36, 0);

  v37 = v56;
  v26 = v31;
  v38 = v10;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v56 + 16))(v31, v59, v10);
  v39 = objc_msgSend(v33, "url");
  if (v39)
  {
    v40 = v39;
    v41 = v55;
    sub_23B1C59CC();

    v42 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v43 = v57;
    v42(v57, v41, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v43, 0, 1, v38);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v43, 1, v38);
    v45 = v65;
    if ((_DWORD)result != 1)
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3160);
      v42((char *)v31 + *(int *)(v46 + 48), v43, v38);
      swift_storeEnumTagMultiPayload();
      v45(v31);

      return sub_23AA8A05C((uint64_t)v26, &qword_2569E3158);
    }
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v57, 1, 1, v10);
  }
  __break(1u);
  return result;
}

uint64_t sub_23ADA5C24(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;

  if (a1)
    v8 = a1;
  else
    v8 = sub_23AAEC2B8(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  v9 = sub_23ADA4608(v8);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v9 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1CC0);
    v10 = sub_23B1C70AC();
  }
  else
  {
    v10 = MEMORY[0x24BEE4B00];
  }
  v24 = v10;
  v11 = (_QWORD *)swift_bridgeObjectRetain();
  sub_23ADA6254(v11, 1, &v24);
  swift_bridgeObjectRelease();
  v23 = v24;
  if (!(a3 >> 62))
  {
    v12 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
      goto LABEL_9;
LABEL_16:
    swift_bridgeObjectRelease();
    a5(v23, a2);
    return swift_release();
  }
LABEL_18:
  swift_bridgeObjectRetain();
  v12 = sub_23B1C7088();
  if (!v12)
    goto LABEL_16;
LABEL_9:
  v13 = 4;
  while (1)
  {
    if ((a3 & 0xC000000000000001) != 0)
      v14 = (id)MEMORY[0x23B85F860](v13 - 4, a3);
    else
      v14 = *(id *)(a3 + 8 * v13);
    v15 = v14;
    v16 = v13 - 3;
    if (__OFADD__(v13 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    v17 = objc_msgSend(v14, sel_nameSpace);
    if (!v17)
      break;
    v18 = v17;
    v19 = sub_23B1C63E0();
    v21 = v20;

    sub_23ADA74DC(v15, v19, v21);
    swift_bridgeObjectRelease();
    ++v13;
    if (v16 == v12)
      goto LABEL_16;
  }
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_23ADA5E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = *(void **)(v3 + 16);
  v6 = (void *)sub_23B1C5954();
  v11[0] = 0;
  v7 = objc_msgSend(v5, sel_permanentStorageForItemAtURL_allocateIfNone_error_, v6, 0, v11);

  if (v7)
  {
    v8 = v11[0];
    a3 = sub_23ADA78AC(v7);

  }
  else
  {
    v9 = v11[0];
    sub_23B1C587C();

    swift_willThrow();
  }
  return a3;
}

id sub_23ADA5F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = *(void **)(v2 + 16);
  v10[0] = 0;
  v5 = objc_msgSend(v4, sel_permanentStorageForItemWithDocID_deviceID_allocateIfNone_error_, a1, a2, 0, v10);
  if (v5)
  {
    v6 = v5;
    v7 = v10[0];
    v8 = (id)sub_23ADA78AC(v6);

  }
  else
  {
    v8 = v10[0];
    sub_23B1C587C();

    swift_willThrow();
  }
  return v8;
}

void sub_23ADA6014(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v5;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  unsigned __int8 v19;
  id v20;
  id v21[8];

  v21[7] = *(id *)MEMORY[0x24BDAC8D0];
  v9 = *(void **)(v5 + 16);
  v21[0] = 0;
  v10 = objc_msgSend(v9, sel_permanentStorageForItemWithDocID_deviceID_allocateIfNone_error_, a1, a2, 0, v21);
  if (v10)
  {
    v11 = v10;
    v12 = v21[0];
    v13 = (void *)sub_23B1C66F8();
    v21[4] = a4;
    v21[5] = a5;
    v21[0] = (id)MEMORY[0x24BDAC760];
    v21[1] = (id)1107296256;
    v21[2] = sub_23AC46D44;
    v21[3] = &block_descriptor_12;
    v14 = _Block_copy(v21);
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_removeAllAdditionsForNamespaces_completionHandler_, v13, v14);
    _Block_release(v14);

  }
  else
  {
    v15 = v21[0];
    v16 = (void *)sub_23B1C587C();

    swift_willThrow();
    v17 = v16;
    LODWORD(v21[0]) = sub_23B1C54F8();
    sub_23AB6CD48();
    LOBYTE(v15) = sub_23B1C575C();

    if ((v15 & 1) != 0)
    {

      ((void (*)(_QWORD))a4)(0);
    }
    else
    {
      v18 = (void *)sub_23B1C5870();
      v19 = objc_msgSend(v18, sel_fp_isGSInvalidStorageError);

      if ((v19 & 1) != 0)
      {
        ((void (*)(_QWORD))a4)(0);
      }
      else
      {
        v20 = v16;
        ((void (*)(void *))a4)(v16);

      }
    }
  }
}

uint64_t sub_23ADA6218()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for GSRemoteVersionsManager()
{
  return objc_opt_self();
}

void sub_23ADA6254(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  id v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  void *v19;
  id v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  char v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  v43 = a1[2];
  v7 = a1[4];
  v6 = a1[5];
  v8 = (void *)a1[6];
  swift_bridgeObjectRetain();
  v9 = (_QWORD *)*a3;
  swift_bridgeObjectRetain();
  v10 = v8;
  v12 = sub_23AAAF4C4(v7, v6);
  v13 = v9[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
    goto LABEL_23;
  v16 = v11;
  if (v9[3] >= v15)
  {
    if ((a2 & 1) != 0)
    {
      if ((v11 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_23B18A52C();
      if ((v16 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    v22 = (uint64_t *)(v21[6] + 16 * v12);
    *v22 = v7;
    v22[1] = v6;
    *(_QWORD *)(v21[7] + 8 * v12) = v8;
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v25;
    v26 = v43 - 1;
    if (v43 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v27 = (void **)(a1 + 9);
    while (1)
    {
      v29 = (uint64_t)*(v27 - 2);
      v28 = (uint64_t)*(v27 - 1);
      v8 = *v27;
      v30 = (_QWORD *)*a3;
      swift_bridgeObjectRetain();
      v31 = v8;
      v32 = sub_23AAAF4C4(v29, v28);
      v34 = v30[2];
      v35 = (v33 & 1) == 0;
      v24 = __OFADD__(v34, v35);
      v36 = v34 + v35;
      if (v24)
        break;
      v37 = v33;
      if (v30[3] < v36)
      {
        sub_23AD1714C(v36, 1);
        v32 = sub_23AAAF4C4(v29, v28);
        if ((v37 & 1) != (v38 & 1))
          goto LABEL_25;
      }
      if ((v37 & 1) != 0)
        goto LABEL_10;
      v39 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      v40 = (uint64_t *)(v39[6] + 16 * v32);
      *v40 = v29;
      v40[1] = v28;
      *(_QWORD *)(v39[7] + 8 * v32) = v8;
      v41 = v39[2];
      v24 = __OFADD__(v41, 1);
      v42 = v41 + 1;
      if (v24)
        goto LABEL_24;
      v39[2] = v42;
      v27 += 3;
      if (!--v26)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_23AD1714C(v15, a2 & 1);
  v17 = sub_23AAAF4C4(v7, v6);
  if ((v16 & 1) == (v18 & 1))
  {
    v12 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v19 = (void *)swift_allocError();
    swift_willThrow();
    v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_23B1C7418();
  __break(1u);
LABEL_26:
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C7028();
  sub_23B1C64F4();
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23ADA65E8(uint64_t a1, void (*a2)(char *, uint64_t), _QWORD *a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, char a11, char a12, uint64_t a13, void (*a14)(uint64_t, uint64_t, id, id), uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  NSObject *v45;
  void *v46;
  uint64_t inited;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  id v73;
  void *v74;
  uint64_t v75;
  id v76;
  unint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  char *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  NSObject *v86;
  id v87;
  void *v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  id v92;
  unint64_t v93;
  char *v94;
  id v95;
  char *v96;
  unint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void *v109;
  void *v110;
  BOOL v111;
  void *v112;
  unsigned int v113;
  id v114;
  char *v115;
  void (*v116)(char *, uint64_t, uint64_t);
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  void (*v126)(uint64_t, char *, uint64_t);
  void *v127;
  NSObject *v128;
  void *v129;
  void *v130;
  id v131;
  id v132;
  char *v133;
  char *v134;
  id v135;
  id v136;
  NSObject *v137;
  os_log_type_t v138;
  uint64_t v139;
  void *v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  id v146;
  _QWORD *v147;
  NSObject *v148;
  uint64_t v149;
  uint64_t v150;
  id v151;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char *v161;
  uint64_t v162;
  void (*v163)(char *, uint64_t);
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  _QWORD *v169;
  void (*v170)(uint64_t, uint64_t, id, id);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  _QWORD *v175;
  NSObject *v176;
  _QWORD *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _OWORD v185[2];
  __int128 v186;
  void (*v187)(uint64_t, void *, void *);
  void *v188;
  uint64_t (*v189)();
  uint64_t v190;
  uint64_t v191;

  v159 = a8;
  v163 = a2;
  v164 = a7;
  v166 = a6;
  v162 = a5;
  v177 = a3;
  v191 = *MEMORY[0x24BDAC8D0];
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3158);
  MEMORY[0x24BDAC7A8](v168);
  v169 = (uint64_t *)((char *)&v153 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v20);
  v158 = (uint64_t)&v153 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23B1C5A08();
  v179 = *(_QWORD *)(v22 - 8);
  v180 = v22;
  v23 = *(_QWORD *)(v179 + 64);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v167 = (char *)&v153 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v157 = (char *)&v153 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v156 = (char *)&v153 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v165 = (char *)&v153 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v161 = (char *)&v153 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v174 = (char *)&v153 - v33;
  v34 = sub_23B1C5E4C();
  v181 = *(_QWORD *)(v34 - 8);
  v182 = v34;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v178 = (char *)&v153 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v155 = (char *)&v153 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v153 - v39;
  v41 = (_QWORD *)swift_allocObject();
  v170 = a14;
  v171 = a15;
  v41[2] = a14;
  v41[3] = a15;
  v42 = a1;
  v172 = a16;
  v41[4] = a16;
  v41[5] = a17;
  v175 = v41;
  v43 = *(void **)(a13 + 16);
  swift_retain();
  v173 = a17;
  swift_bridgeObjectRetain();
  v44 = (void *)sub_23B1C5954();
  *(_QWORD *)&v186 = 0;
  v45 = objc_msgSend(v43, sel_permanentStorageForItemAtURL_allocateIfNone_error_, v44, 1, &v186);

  v46 = (void *)v186;
  v176 = v45;
  if (!v45)
  {
    v73 = (id)v186;
    v74 = (void *)sub_23B1C587C();

    swift_willThrow();
    v75 = v180;
LABEL_25:
    v89 = v179;
    goto LABEL_26;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE850);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23B1D8700;
  *(_QWORD *)(inited + 32) = sub_23B1C63E0();
  *(_QWORD *)(inited + 40) = v48;
  v49 = v46;
  v50 = sub_23B1C5930();
  v51 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v50;
  *(_QWORD *)(inited + 56) = v52;
  *(_QWORD *)(inited + 80) = sub_23B1C63E0();
  *(_QWORD *)(inited + 88) = v53;
  *(_QWORD *)(inited + 120) = v51;
  *(_QWORD *)(inited + 96) = v177;
  *(_QWORD *)(inited + 104) = a4;
  *(_QWORD *)(inited + 128) = sub_23B1C63E0();
  *(_QWORD *)(inited + 136) = v54;
  v160 = a4;
  swift_bridgeObjectRetain();
  v154 = a1;
  v55 = sub_23B1C5930();
  *(_QWORD *)(inited + 168) = v51;
  *(_QWORD *)(inited + 144) = v55;
  *(_QWORD *)(inited + 152) = v56;
  v57 = sub_23B1C63E0();
  v58 = MEMORY[0x24BEE1328];
  *(_QWORD *)(inited + 176) = v57;
  *(_QWORD *)(inited + 184) = v59;
  *(_QWORD *)(inited + 216) = v58;
  *(_BYTE *)(inited + 192) = 1;
  *(_QWORD *)(inited + 224) = sub_23B1C63E0();
  *(_QWORD *)(inited + 232) = v60;
  *(_QWORD *)(inited + 264) = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5708);
  *(_QWORD *)(inited + 240) = v163;
  *(_QWORD *)(inited + 272) = sub_23B1C63E0();
  *(_QWORD *)(inited + 280) = v61;
  *(_QWORD *)(inited + 312) = v51;
  v62 = v166;
  *(_QWORD *)(inited + 288) = v162;
  *(_QWORD *)(inited + 296) = v62;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v63 = sub_23AAE9EB4(inited);
  v64 = (void *)MEMORY[0x24BEE4568];
  if ((a11 & 1) != 0)
  {
    v65 = sub_23B1C63E0();
    v67 = v66;
    v188 = v64;
    *(_QWORD *)&v186 = 9;
    sub_23AAA159C(&v186, v185);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v183 = v63;
    sub_23AD1A024(v185, v65, v67, isUniquelyReferenced_nonNull_native);
    v63 = v183;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if ((a12 & 1) != 0)
  {
    v69 = sub_23B1C63E0();
    v71 = v70;
    v188 = v64;
    *(_QWORD *)&v186 = 1;
    sub_23AAA159C(&v186, v185);
    v72 = swift_isUniquelyReferenced_nonNull_native();
    v183 = v63;
    sub_23AD1A024(v185, v69, v71, v72);
    v166 = v183;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v166 = v63;
  }
  v76 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v77 = v160;
  swift_bridgeObjectRetain_n();
  v78 = sub_23B1C5E40();
  v79 = sub_23B1C6A88();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = (uint8_t *)swift_slowAlloc();
    v81 = swift_slowAlloc();
    *(_QWORD *)&v186 = v81;
    *(_DWORD *)v80 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v185[0] = sub_23AABEC68((uint64_t)v177, v77, (uint64_t *)&v186);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23AA66000, v78, v79, "⚔️  Putting remote version %s into Genstore...", v80, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v81, -1, -1);
    MEMORY[0x23B8614BC](v80, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v163 = *(void (**)(char *, uint64_t))(v181 + 8);
  v163(v40, v182);
  v75 = v180;
  v82 = v165;
  v83 = (void *)sub_23B1C5954();
  v84 = swift_bridgeObjectRetain();
  sub_23B147D30(v84);
  swift_bridgeObjectRelease();
  v85 = (void *)sub_23B1C61F4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v186 = 0;
  v86 = v176;
  v87 = -[NSObject prepareAdditionCreationWithItemAtURL:byMoving:creationInfo:error:](v176, sel_prepareAdditionCreationWithItemAtURL_byMoving_creationInfo_error_, v83, 1, v85, &v186);

  v88 = (void *)v186;
  v89 = v179;
  if (v87)
  {
    sub_23B1C59CC();
    v90 = v88;

    v91 = v158;
    sub_23AB6C0EC(v159, v158);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v91, 1, v75) == 1)
    {
      sub_23AA8A05C(v91, (uint64_t *)&unk_2542E6740);
      v42 = v154;
LABEL_23:
      v115 = v174;
      v182 = sub_23B1C5954();
      sub_23B147D30(v166);
      swift_bridgeObjectRelease();
      v181 = sub_23B1C61F4();
      swift_bridgeObjectRelease();
      v116 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
      v117 = v156;
      v116(v156, v42, v75);
      v118 = v157;
      v116(v157, (uint64_t)v115, v75);
      v119 = *(unsigned __int8 *)(v89 + 80);
      v120 = (v119 + 32) & ~v119;
      v121 = (v23 + v119 + v120) & ~v119;
      v122 = swift_allocObject();
      v123 = v75;
      v124 = v175;
      *(_QWORD *)(v122 + 16) = sub_23ADA7B04;
      *(_QWORD *)(v122 + 24) = v124;
      v125 = v122 + v120;
      v126 = *(void (**)(uint64_t, char *, uint64_t))(v89 + 32);
      v126(v125, v117, v123);
      v126(v122 + v121, v118, v123);
      v189 = sub_23ADA7AD4;
      v190 = v122;
      *(_QWORD *)&v186 = MEMORY[0x24BDAC760];
      *((_QWORD *)&v186 + 1) = 1107296256;
      v187 = sub_23AAB5F54;
      v188 = &block_descriptor_13;
      v127 = _Block_copy(&v186);
      swift_retain();
      swift_release();
      v128 = v176;
      v130 = (void *)v181;
      v129 = (void *)v182;
      -[NSObject createAdditionStagedAtURL:creationInfo:completionHandler:](v176, sel_createAdditionStagedAtURL_creationInfo_completionHandler_, v182, v181, v127);
      _Block_release(v127);

      (*(void (**)(char *, uint64_t))(v89 + 8))(v115, v123);
      return swift_release();
    }
    v93 = (unint64_t)a10;
    v94 = v161;
    (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v161, v91, v75);
    v95 = (id)fpfs_current_or_default_log();
    v96 = v155;
    sub_23B1C5E58();
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v82, v94, v75);
    v97 = v160;
    swift_bridgeObjectRetain_n();
    v98 = sub_23B1C5E40();
    v99 = sub_23B1C6A88();
    v100 = v99;
    if (os_log_type_enabled(v98, v99))
    {
      v101 = swift_slowAlloc();
      *(_QWORD *)&v186 = swift_slowAlloc();
      v165 = a10;
      v102 = v186;
      *(_DWORD *)v101 = 136315394;
      sub_23AA7E38C((unint64_t *)&qword_2542DD420, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
      LODWORD(v164) = v100;
      v103 = sub_23B1C7304();
      *(_QWORD *)&v185[0] = sub_23AABEC68(v103, v104, (uint64_t *)&v186);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      v105 = *(void (**)(char *, uint64_t))(v179 + 8);
      v105(v82, v180);
      *(_WORD *)(v101 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v185[0] = sub_23AABEC68((uint64_t)v177, v97, (uint64_t *)&v186);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23AA66000, v98, (os_log_type_t)v164, "⚔️  associate thumnail %s for loser %s", (uint8_t *)v101, 0x16u);
      swift_arrayDestroy();
      v106 = v102;
      v93 = (unint64_t)v165;
      MEMORY[0x23B8614BC](v106, -1, -1);
      v107 = v101;
      v75 = v180;
      MEMORY[0x23B8614BC](v107, -1, -1);

      v108 = v155;
    }
    else
    {
      v105 = *(void (**)(char *, uint64_t))(v89 + 8);
      v105(v82, v75);

      swift_bridgeObjectRelease_n();
      v108 = v96;
    }
    v163(v108, v182);
    v109 = (void *)sub_23B1C5954();
    v110 = (void *)sub_23B1C5954();
    v111 = v93 >> 60 == 15;
    v42 = v154;
    if (v111)
      v112 = 0;
    else
      v112 = (void *)sub_23B1C5AA4();
    *(_QWORD *)&v186 = 0;
    v113 = objc_msgSend(v109, sel_fp_associateThumbnailToVersionAtURL_thumbnailMetadata_error_, v110, v112, &v186);

    if (v113)
    {
      v114 = (id)v186;
      v105(v161, v75);
      v89 = v179;
      goto LABEL_23;
    }
    v131 = (id)v186;
    swift_bridgeObjectRelease();
    v74 = (void *)sub_23B1C587C();

    swift_willThrow();
    v105(v161, v75);
    v105(v174, v75);
    goto LABEL_25;
  }
  v92 = (id)v186;
  swift_bridgeObjectRelease();
  v74 = (void *)sub_23B1C587C();

  swift_willThrow();
  v42 = v154;
LABEL_26:
  v132 = (id)fpfs_current_or_default_log();
  v133 = v178;
  sub_23B1C5E58();
  v134 = v167;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v167, v42, v75);
  v135 = v74;
  v136 = v74;
  v137 = sub_23B1C5E40();
  v138 = sub_23B1C6AA0();
  if (os_log_type_enabled(v137, v138))
  {
    v139 = swift_slowAlloc();
    v177 = (_QWORD *)swift_slowAlloc();
    v180 = swift_slowAlloc();
    *(_QWORD *)&v186 = v180;
    *(_DWORD *)v139 = 136446466;
    v174 = (char *)(v139 + 4);
    v176 = v137;
    v140 = (void *)sub_23B1C5954();
    v141 = objc_msgSend(v140, sel_fp_shortDescription);

    v142 = sub_23B1C63E0();
    v143 = v75;
    v145 = v144;

    *(_QWORD *)&v185[0] = sub_23AABEC68(v142, v145, (uint64_t *)&v186);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v134, v143);
    *(_WORD *)(v139 + 12) = 2112;
    swift_getErrorValue();
    v146 = sub_23B0D9CF0(v184);
    *(_QWORD *)&v185[0] = v146;
    sub_23B1C6CBC();
    v147 = v177;
    *v177 = v146;

    v148 = v176;
    _os_log_impl(&dword_23AA66000, v176, v138, "failed to add version to %{public}s: %@", (uint8_t *)v139, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v147, -1, -1);
    v149 = v180;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v149, -1, -1);
    MEMORY[0x23B8614BC](v139, -1, -1);

    (*(void (**)(char *, uint64_t))(v181 + 8))(v178, v182);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v89 + 8))(v134, v75);

    (*(void (**)(char *, uint64_t))(v181 + 8))(v133, v182);
  }
  v150 = (uint64_t)v169;
  *v169 = v74;
  swift_storeEnumTagMultiPayload();
  v151 = v74;
  sub_23ACC7B14(v150, v170, v171, v172, v173);

  sub_23AA8A05C(v150, &qword_2569E3158);
  return swift_release();
}

void sub_23ADA74DC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;

  v6 = sub_23B1C5A08();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v31 - v14;
  if (sub_23B1C63E0() == a2 && v16 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      goto LABEL_15;
  }
  v19 = objc_msgSend(a1, sel_storage);
  if (!v19)
  {
LABEL_23:
    __break(1u);
    return;
  }
  v20 = objc_msgSend(v19, sel_documentURL);
  swift_unknownObjectRelease();
  if (v20)
  {
    sub_23B1C59CC();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v9, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
    {
      v21 = 0;
    }
    else
    {
      v21 = (void *)sub_23B1C5954();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v15, 1, 1, v6);
    v21 = 0;
  }
  v22 = (void *)objc_opt_self();
  v23 = objc_msgSend(a1, sel_nameSpace);
  v24 = objc_msgSend(a1, sel_name);
  objc_msgSend(v22, sel___itemAtURL_didResolveConflictVersionWithClientID_name_purposeID_, v21, v23, v24, 0);

LABEL_15:
  v25 = objc_msgSend(a1, sel_storage);
  if (!v25)
  {
    __break(1u);
    goto LABEL_23;
  }
  v26 = objc_msgSend(v25, sel_documentURL);
  swift_unknownObjectRelease();
  if (v26)
  {
    sub_23B1C59CC();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v9, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
    {
      v27 = 0;
    }
    else
    {
      v27 = (void *)sub_23B1C5954();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, 1, 1, v6);
    v27 = 0;
  }
  v28 = (void *)objc_opt_self();
  v29 = objc_msgSend(a1, sel_nameSpace);
  v30 = objc_msgSend(a1, sel_name);
  objc_msgSend(v28, sel___itemAtURL_didLoseVersionWithClientID_name_purposeID_, v27, v29, v30, 0);

}

uint64_t sub_23ADA78AC(void *a1)
{
  void *v2;
  id v3;
  id v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];
  uint64_t v11;

  v11 = MEMORY[0x24BEE4AF8];
  v2 = (void *)sub_23B1C63BC();
  v3 = objc_msgSend(a1, sel_enumeratorForAdditionsInNameSpace_withOptions_withoutOptions_ordering_, v2, 0, 0, 0);

  if (v3)
  {
    while (1)
    {
      if (objc_msgSend(v3, sel_nextObject, v6, v7))
      {
        sub_23B1C6D7C();
        swift_unknownObjectRelease();
      }
      else
      {
        v6 = 0u;
        v7 = 0u;
      }
      sub_23ADA7A4C((uint64_t)&v6, (uint64_t)&v8);
      if (!*((_QWORD *)&v9 + 1))
        break;
      sub_23AAA159C(&v8, v10);
      sub_23AAA15AC((uint64_t)v10, (uint64_t)&v8);
      sub_23ADA7A94();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v4 = (id)v6;
        MEMORY[0x23B85F008]();
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23B1C6740();
        sub_23B1C6788();
        sub_23B1C671C();

      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }

  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  sub_23AA8A05C((uint64_t)&v8, qword_2542E5640);
  return v11;
}

uint64_t sub_23ADA7A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_23ADA7A94()
{
  unint64_t result;

  result = qword_2569E3200;
  if (!qword_2569E3200)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2569E3200);
  }
  return result;
}

uint64_t sub_23ADA7AD8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23ADA7B04(uint64_t a1)
{
  uint64_t v1;

  sub_23ACC7B14(a1, *(void (**)(uint64_t, uint64_t, id, id))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_23B1C5A08();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  swift_release();
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  return swift_deallocObject();
}

uint64_t sub_23ADA7BA8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  return sub_23ADA57A4(a1, a2, *(void (**)(uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v6 + 32) & ~v6), v2 + ((*(_QWORD *)(v5 + 64) + v6 + ((v6 + 32) & ~v6)) & ~v6));
}

uint64_t sub_23ADA7C1C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_23ADA7C78()
{
  uint64_t v0;

  swift_release();

  return v0;
}

uint64_t sub_23ADA7C9C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

void type metadata accessor for SyncEngine()
{
  JUMPOUT(0x23B861318);
}

uint64_t sub_23ADA7CD4(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 112);
}

uint64_t sub_23ADA7CDC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 120);
}

uint64_t sub_23ADA7CE4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a2();
  result = swift_beginAccess();
  if (*(_BYTE *)(a4 + 16) == 1)
  {
    v8 = *(_QWORD *)(a5 + 24);
    v9 = __OFSUB__(v8, 1);
    v10 = v8 - 1;
    if (v9)
      __break(1u);
    else
      *(_QWORD *)(a5 + 24) = v10;
  }
  return result;
}

ValueMetadata *type metadata accessor for JobSchedulingOrder()
{
  return &type metadata for JobSchedulingOrder;
}

uint64_t sub_23ADA7D64(unint64_t a1)
{
  if (a1 >> 61 >= 5)
    return 1;
  else
    return a1 >> 61;
}

BOOL sub_23ADA7D74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t sub_23ADA7D88(unint64_t a1)
{
  unint64_t v1;
  uint64_t result;

  if ((a1 & 0x1FFFFFFFFFFFFFFFLL) != 0)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C686C();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v1 = a1 >> 61;
    result = 0x756F72676B636162;
    switch(v1)
    {
      case 0uLL:
        return result;
      case 2uLL:
        result = 0x746C7561666564;
        break;
      case 3uLL:
        result = 0x74696E4972657375;
        break;
      case 4uLL:
        result = 0x65746E4972657375;
        break;
      default:
        result = 0x7974696C697475;
        break;
    }
  }
  return result;
}

BOOL sub_23ADA7F78(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

BOOL sub_23ADA7F8C(_QWORD *a1, _QWORD *a2)
{
  return *a2 >= *a1;
}

BOOL sub_23ADA7FA0(_QWORD *a1, _QWORD *a2)
{
  return *a1 >= *a2;
}

BOOL sub_23ADA7FB4(_QWORD *a1, _QWORD *a2)
{
  return *a2 < *a1;
}

uint64_t sub_23ADA7FC8()
{
  unint64_t *v0;

  return sub_23ADA7D88(*v0);
}

BOOL sub_23ADA7FD0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_23ADA7FE8(_QWORD *a1, _QWORD *a2)
{
  if (*a2 < *a1)
    return 1;
  return *a1 == *a2 && a1[1] < a2[1];
}

BOOL sub_23ADA8018(_QWORD *a1, _QWORD *a2)
{
  if (*a1 < *a2)
    return 0;
  return *a2 != *a1 || a2[1] >= a1[1];
}

BOOL sub_23ADA8048(_QWORD *a1, _QWORD *a2)
{
  if (*a2 < *a1)
    return 0;
  return *a1 != *a2 || a1[1] >= a2[1];
}

BOOL sub_23ADA8078(_QWORD *a1, _QWORD *a2)
{
  if (*a1 < *a2)
    return 1;
  return *a2 == *a1 && a2[1] < a1[1];
}

uint64_t sub_23ADA80A8()
{
  unint64_t *v0;
  uint64_t v2;

  v2 = sub_23ADA7D88(*v0);
  sub_23B1C64F4();
  sub_23B1C686C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_23ADA8124()
{
  unint64_t result;

  result = qword_2569E5760;
  if (!qword_2569E5760)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8814, &type metadata for JobSchedulingOrder);
    atomic_store(result, (unint64_t *)&qword_2569E5760);
  }
  return result;
}

uint64_t sub_23ADA816C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  double v5;
  uint64_t result;
  double v7;
  uint64_t v8;

  v0 = sub_23B1C5BDC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v5 = v4;
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18)
    return 0x2000000000000000;
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_23ADA8248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  double v5;
  uint64_t result;
  double v7;
  uint64_t v8;

  v0 = sub_23B1C5BDC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v5 = v4;
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18)
    return 0;
LABEL_7:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for JobSchedulingPriority()
{
  return &type metadata for JobSchedulingPriority;
}

unint64_t sub_23ADA8338()
{
  unint64_t result;

  result = qword_2569E5768;
  if (!qword_2569E5768)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D88C8, &type metadata for JobSchedulingPriority);
    atomic_store(result, (unint64_t *)&qword_2569E5768);
  }
  return result;
}

uint64_t sub_23ADA837C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_23ADA83A8()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  v2 = (id)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_put_, v2);

}

id sub_23ADA8418@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v8 = *(id *)v3;
  v9 = *(_QWORD *)(v3 + 8);
  v10 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v8;
  a3[1] = v9;
  a3[2] = v10;
  return v8;
}

uint64_t sub_23ADA8494@<X0>(void *a1@<X0>, void *a2@<X1>, void **a3@<X8>)
{
  void **v3;
  void *v4;
  id v5;

  v4 = *v3;
  *a3 = *v3;
  a3[1] = a1;
  a3[3] = &type metadata for SubFPCTLTermDumper;
  a3[4] = &off_250BFBB88;
  a3[2] = a2;
  v5 = v4;
  return swift_bridgeObjectRetain();
}

uint64_t destroy for SubFPCTLTermDumper(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s9libfssync18SubFPCTLTermDumperVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubFPCTLTermDumper(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SubFPCTLTermDumper(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubFPCTLTermDumper(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubFPCTLTermDumper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubFPCTLTermDumper()
{
  return &type metadata for SubFPCTLTermDumper;
}

void sub_23ADA867C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, unsigned int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  unsigned int v39;
  int v40;

  v30 = a1;
  v39 = a8;
  v29 = a9;
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v28 - v20;
  v33 = v9;
  v34 = a3;
  v35 = a4;
  v36 = a5;
  v37 = a6;
  v38 = a7;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
  swift_bridgeObjectRetain();
  v24 = v31;
  sub_23B0E2EA0(4294967294, v30, a2, v39, 0, 0, (uint64_t)v21, (uint64_t)sub_23AABD5BC, (uint64_t)v32);
  if (v24)
  {
    sub_23AA8A05C((uint64_t)v21, qword_2542E5250);
    v25 = v24;
    v40 = sub_23B1C54F8();
    sub_23AB6CD48();
    v26 = sub_23B1C575C();

    if ((v26 & 1) != 0)
    {
      v27 = type metadata accessor for VFSItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v29, 1, 1, v27);

    }
  }
  else
  {
    sub_23AA8EFC8((uint64_t)v21, (uint64_t)v19, qword_2542E5250);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v19, 1, v22) == 1)
    {
      __break(1u);
      JUMPOUT(0x23ADA8894);
    }
    sub_23AA724E8((uint64_t)v19, v29, &qword_2542E72C0);
    sub_23AA8A05C((uint64_t)v21, qword_2542E5250);
  }
}

uint64_t sub_23ADA88A4@<X0>(char a1@<W0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;

  v9 = *(unsigned int *)(a3 + 16);
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  v12 = a6;
  v13 = a7;
  v14 = a1;
  v15 = *a2;
  v16 = *((_QWORD *)a2 + 2);
  v17 = *(__int128 *)((char *)a2 + 24);
  return sub_23AC3A9A8((uint64_t *)a2, v9, 0x208000u, 0, (uint64_t)sub_23ADA92E8, (uint64_t)v11, a8);
}

void sub_23ADA8910(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23AABD714(a1, a2);
}

void sub_23ADA8998(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  void *v34;
  _BYTE v35[16];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v33 = a1;
  v32 = a8;
  v31 = a7;
  v30 = a9;
  v48 = *MEMORY[0x24BDAC8D0];
  v16 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E5250);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v29 = (uint64_t)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v29 - v19;
  v21 = *(unsigned int *)(a2 + 16);
  v36 = v10;
  v37 = a2;
  v38 = a3;
  v39 = a4;
  v40 = a5;
  v41 = a6;
  v42 = v31;
  v43 = v32;
  v44 = a10;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v20, 1, 1, v22);
  v24 = v34;
  v45 = v33;
  v46 = 0u;
  v47 = 0u;
  sub_23B0E1EBC((uint64_t)&v45, v21, 2129920, 0, (uint64_t)v20, (uint64_t)sub_23ADA9338, (uint64_t)v35);
  if (v24)
  {
    sub_23AA8A05C((uint64_t)v20, qword_2542E5250);
    v25 = v24;
    LODWORD(v45) = sub_23B1C54F8();
    sub_23AB6CD48();
    v26 = sub_23B1C575C();

    if ((v26 & 1) != 0)
    {
      v27 = type metadata accessor for VFSItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v30, 1, 1, v27);

    }
  }
  else
  {
    v28 = v29;
    sub_23AA8EFC8((uint64_t)v20, v29, qword_2542E5250);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v28, 1, v22) == 1)
    {
      __break(1u);
    }
    else
    {
      sub_23AA724E8(v28, v30, &qword_2542E72C0);
      sub_23AA8A05C((uint64_t)v20, qword_2542E5250);
    }
  }
}

void sub_23ADA8C0C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  _QWORD v23[3];
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  int v33;

  v5 = *(unsigned __int8 *)(a2 + 68);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v23[2] = v11;
  v24 = v6;
  v25 = v12;
  v26 = v13;
  v27 = v14;
  v28 = v15;
  v29 = v16;
  v30 = v17;
  v31 = v18;
  v19 = 0x100000000;
  if (!v5)
    v19 = 0;
  v32 = v8;
  sub_23B1AA0D0(v6, v7, v9, v19 | v10, (uint64_t)sub_23AA8ABA0, (uint64_t)v23, a3);
  if (v3)
  {
    v20 = v3;
    v33 = sub_23B1C54A4();
    sub_23AB6CD48();
    v21 = sub_23B1C575C();

    if ((v21 & 1) != 0)
    {

      v22 = type metadata accessor for VFSItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a3, 1, 1, v22);
    }
  }
}

uint64_t sub_23ADA8D44@<X0>(int a1@<W0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int v18;
  uint64_t *v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v7 = 0;
  v8 = 0;
  v10 = 0;
  v9 = 0;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = a1;
  v19 = &v7;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC374EC);
  if (!v3)
    *a3 = v8 == a2;
  return result;
}

uint64_t sub_23ADA8DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W4>, _BYTE *a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, unsigned __int8 a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  return sub_23AA8AC14(a3, a1, a2, a4, a5, a6, a8, a7, a9, a10, a11, a12);
}

uint64_t sub_23ADA8E4C(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  _QWORD v27[3];
  id v28;
  uint64_t v29;

  v29 = a5;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a7;
  *(_QWORD *)(v19 + 24) = a8;
  *(_QWORD *)(v19 + 32) = a9;
  *(_QWORD *)(v19 + 40) = a1;
  *(_QWORD *)(v19 + 48) = a2;
  *(_BYTE *)(v19 + 56) = a3;
  sub_23AA724E8((uint64_t)a4, v19 + 64, (uint64_t *)&unk_2542E4948);
  *(_QWORD *)(v19 + 160) = a6;
  v20 = (_QWORD *)(a1 + qword_2542EDF28);
  result = swift_beginAccess();
  if (*v20 == -1)
  {
    __break(1u);
  }
  else
  {
    ++*v20;
    v27[1] = a7;
    v27[2] = a9;
    v22 = *(_QWORD *)(a1 + 224);
    v28 = *(id *)(a1 + 216);
    v23 = sub_23B1C60A4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v18, 1, 1, v23);
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v29;
    *(_QWORD *)(v24 + 24) = a1;
    *(_QWORD *)(v24 + 32) = a2;
    *(_BYTE *)(v24 + 40) = a3;
    sub_23AA724E8((uint64_t)a4, v24 + 48, (uint64_t *)&unk_2542E4948);
    *(_QWORD *)(v24 + 144) = sub_23ADA9C8C;
    *(_QWORD *)(v24 + 152) = v19;
    *(_QWORD *)(v24 + 160) = a6;
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = sub_23ADA9C8C;
    v25[3] = v19;
    v25[4] = v22;
    swift_retain();
    sub_23AABA6D4(a4);
    swift_retain_n();
    swift_retain();
    sub_23AABA6D4(a4);
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    v26 = v28;
    sub_23AA9086C(v26, (uint64_t)v18, (void (*)())sub_23ADA9D68, v25, (uint64_t)sub_23ADA9D20, v24);

    swift_release();
    swift_release();
    sub_23AA8A05C((uint64_t)v18, &qword_2542DD460);
    return swift_release();
  }
  return result;
}

uint64_t sub_23ADA90A4(uint64_t a1, uint64_t a2, void (*a3)(void **), uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  void **v20;
  void *v21;
  id v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a8;
  v30 = a5;
  v28 = a7;
  v27 = a6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (void **)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E21A0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (void **)((char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getObjectType();
  sub_23B1C6BA8();
  sub_23AA8EFC8(a1, (uint64_t)v20, &qword_2542E21A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = *v20;
    *v17 = *v20;
    swift_storeEnumTagMultiPayload();
    v22 = v21;
    a3(v17);

    v23 = (uint64_t *)&unk_2542E21B0;
    v24 = (uint64_t)v17;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_2542E0AF8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = *v20;
      swift_retain();
      sub_23AA7BAC4(v27, v28, v29, v25, a9, a3, a4);
      return swift_release_n();
    }
    sub_23AA724E8((uint64_t)v20, (uint64_t)v14, &qword_2542E72C0);
    sub_23AA8EFC8((uint64_t)v14, (uint64_t)v17, &qword_2542E72C0);
    swift_storeEnumTagMultiPayload();
    a3(v17);
    sub_23AA8A05C((uint64_t)v17, (uint64_t *)&unk_2542E21B0);
    v24 = (uint64_t)v14;
    v23 = &qword_2542E72C0;
  }
  return sub_23AA8A05C(v24, v23);
}

void sub_23ADA92E8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23ADA8910(a1, a2);
}

void sub_23ADA9338(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_23ADA99E0(a1, a2);
}

unint64_t sub_23ADA9350()
{
  unint64_t result;

  result = qword_2569E5778;
  if (!qword_2569E5778)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8A5C, &type metadata for PackageInternalLookupPolicy);
    atomic_store(result, (unint64_t *)&qword_2569E5778);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PackageInternalLookupPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23ADA93E0 + 4 * byte_23B1D8A55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23ADA9414 + 4 * byte_23B1D8A50[v4]))();
}

uint64_t sub_23ADA9414(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23ADA941C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23ADA9424);
  return result;
}

uint64_t sub_23ADA9430(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23ADA9438);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23ADA943C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23ADA9444(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PackageInternalLookupPolicy()
{
  return &type metadata for PackageInternalLookupPolicy;
}

uint64_t sub_23ADA9460(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  return sub_23ADA95D0(a1, a2, (uint64_t *)&unk_2542E6B00, (uint64_t (*)(uint64_t))sub_23ADF7370);
}

uint64_t sub_23ADA9474(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  a1(&v3);
  if (!v4)
  {
    v2 = 0x284449636F64;
    goto LABEL_5;
  }
  if (v4 == 1)
  {
    v2 = 0x284449656C6966;
LABEL_5:
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    return v2;
  }
  if (v3)
    return 0x6873617274;
  else
    return 1953460082;
}

uint64_t sub_23ADA9568(void (*a1)(void **__return_ptr))
{
  void *v1;
  uint64_t v2;
  void *v4;

  a1(&v4);
  v1 = v4;
  v2 = sub_23AA7B734();

  return v2;
}

uint64_t sub_23ADA95BC(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  return sub_23ADA95D0(a1, a2, (uint64_t *)&unk_2542E4760, (uint64_t (*)(uint64_t))sub_23ADF78A4);
}

uint64_t sub_23ADA95D0(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1(v8);
  v12 = a4(v11);
  sub_23AA8A05C((uint64_t)v10, a3);
  return v12;
}

uint64_t sub_23ADA966C(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v1;
  uint64_t v3;

  a1(&v3);
  type metadata accessor for BrokenInvariants(0);
  sub_23AA7E38C(&qword_2542DF378, (uint64_t (*)(uint64_t))type metadata accessor for BrokenInvariants, (uint64_t)&unk_23B1D9730);
  v1 = sub_23B1C6218();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23ADA96FC(_QWORD *(*a1)(uint64_t *__return_ptr), uint64_t a2)
{
  return sub_23ADA974C(a1, a2, (void (*)(_QWORD *))sub_23ADA9B50);
}

uint64_t sub_23ADA9710(_QWORD *(*a1)(uint64_t *__return_ptr), uint64_t a2)
{
  return sub_23ADA974C(a1, a2, (void (*)(_QWORD *))sub_23ADA9B0C);
}

uint64_t sub_23ADA9724(_QWORD *(*a1)(uint64_t *__return_ptr), uint64_t a2)
{
  return sub_23ADA974C(a1, a2, (void (*)(_QWORD *))sub_23ADA9AC8);
}

uint64_t sub_23ADA9738(_QWORD *(*a1)(uint64_t *__return_ptr), uint64_t a2)
{
  return sub_23ADA974C(a1, a2, (void (*)(_QWORD *))sub_23ADA9A84);
}

uint64_t sub_23ADA974C(_QWORD *(*a1)(uint64_t *__return_ptr), uint64_t a2, void (*a3)(_QWORD *))
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;

  v4 = a1(&v7);
  a3(v4);
  v5 = sub_23B1C6218();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_23ADA97C0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_pkg_promote();
  *a1 = result;
  return result;
}

uint64_t sub_23ADA97F0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_pkg_demote();
  *a1 = result;
  return result;
}

uint64_t sub_23ADA9820@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_23ADA9848@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _BYTE *a7@<X8>)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t result;
  char v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v11 = 2;
  v9 = *((_QWORD *)a1 + 3);
  v12 = *a1;
  v13 = *((_QWORD *)a1 + 2);
  v14 = v9;
  v15 = *((_QWORD *)a1 + 4);
  result = sub_23B0E327C((uint64_t)&v12, a2, a3, a4, (uint64_t)&v11, a5, a6);
  if (!v7)
  {
    if (v11 == 2)
      __break(1u);
    else
      *a7 = v11 & 1;
  }
  return result;
}

double sub_23ADA98F0(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 8;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_BYTE *)(a1 + 120) = 10;
  return result;
}

uint64_t sub_23ADA9924@<X0>(int a1@<W0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  return sub_23ADA8D44(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23ADA993C@<X0>(__int128 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  return sub_23ADA9848(a1, *(unsigned int *)(v2 + 16), *(unsigned int *)(v2 + 20), *(unsigned int *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

_QWORD *sub_23ADA995C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *(*v6)(uint64_t *__return_ptr, uint64_t);
  _QWORD *result;
  uint64_t v8;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *(**)(uint64_t *__return_ptr, uint64_t))(v2 + 24);
  *(_QWORD *)(v5 + 24) = a1;
  result = v6(&v8, v5);
  if (!v3)
    *a2 = v8;
  return result;
}

uint64_t sub_23ADA99A4(uint64_t result)
{
  *(_BYTE *)(result + 120) = 4;
  return result;
}

uint64_t sub_23ADA99B0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_untrack_document();
  *a1 = result;
  return result;
}

void sub_23ADA99E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_23ADA8C0C(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23ADA9A1C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_fset_syncroot();
  *a1 = result;
  return result;
}

uint64_t sub_23ADA9A50@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_track_document();
  *a1 = result;
  return result;
}

unint64_t sub_23ADA9A84()
{
  unint64_t result;

  result = qword_2542DF288;
  if (!qword_2542DF288)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA56C, &type metadata for BackupManifestVsFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2542DF288);
  }
  return result;
}

unint64_t sub_23ADA9AC8()
{
  unint64_t result;

  result = qword_2542DF2B0;
  if (!qword_2542DF2B0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA2B8, &type metadata for ReconciliationTableBrokenInvariants);
    atomic_store(result, (unint64_t *)&qword_2542DF2B0);
  }
  return result;
}

unint64_t sub_23ADA9B0C()
{
  unint64_t result;

  result = qword_2542DF298;
  if (!qword_2542DF298)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA004, &type metadata for FSSnapshotVersusFPSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2542DF298);
  }
  return result;
}

unint64_t sub_23ADA9B50()
{
  unint64_t result;

  result = qword_2542DF260;
  if (!qword_2542DF260)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9D50, &type metadata for DiskVersusFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2542DF260);
  }
  return result;
}

uint64_t sub_23ADA9B94()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 104))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ADA9BF8()
{
  uint64_t v0;

  return sub_23ADA8E4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), (uint64_t *)(v0 + 40), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
}

uint64_t sub_23ADA9C30()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 128))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_23ADA9C8C(uint64_t a1)
{
  uint64_t v1;

  return sub_23ADA90A4(a1, *(_QWORD *)(v1 + 16), *(void (**)(void **))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), v1 + 64, *(_QWORD *)(v1 + 160));
}

uint64_t sub_23ADA9CC4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ADA9D20()
{
  uint64_t v0;

  return sub_23B1585C4(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), v0 + 48, *(void (**)(char *))(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
}

uint64_t sub_23ADA9D3C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ADA9D68()
{
  uint64_t v0;

  return sub_23B149864(*(void (**)(uint64_t *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_23ADA9D74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  return sub_23AA8AC14(*(_DWORD *)(v3 + 24), a1, a2, *(_BYTE **)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(unsigned __int8 *)(v3 + 56), a3, *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_BYTE *)(v3 + 80), v5);
}

uint64_t sub_23ADA9DD0@<X0>(_DWORD *a1@<X8>)
{
  return sub_23ADA97C0(a1);
}

uint64_t sub_23ADA9DE4@<X0>(_DWORD *a1@<X8>)
{
  return sub_23ADA97F0(a1);
}

uint64_t sub_23ADA9DF8@<X0>(int a1@<W0>, char *a2@<X8>)
{
  return sub_23AABCBA4(a1, a2);
}

uint64_t sub_23ADA9E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  return sub_23ADA9E50(-2, a1, a2, a3, a4, a5, a6, a7, a9, a8);
}

uint64_t sub_23ADA9E50@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v29 = a7;
  v30 = a8;
  v27 = a5;
  v28 = a6;
  v26 = a4;
  v25 = a9;
  v13 = sub_23B1C6C98();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v24 - v18;
  v20 = *(_QWORD *)(a10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))((char *)&v24 - v18, 1, 1, a10);
  v31 = a10;
  v32 = a1;
  v33 = a2;
  v34 = a3;
  v35 = v26;
  v36 = v27;
  v37 = v28;
  v38 = v19;
  v39 = v29;
  v40 = v30;
  v21 = v41;
  sub_23ADAA1EC((void (*)(int *__return_ptr, void **))sub_23ADAA1AC);
  if (v21)
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  v22 = v25;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, a10);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v22, v17, a10);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
  __break(1u);
  return result;
}

uint64_t sub_23ADA9FD4()
{
  return sub_23AF3FB54((uint64_t (*)(__int128 *))sub_23ADAA9F4);
}

uint64_t sub_23ADAA01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, _DWORD *a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  int v11;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];
  _DWORD *v15;

  v15 = a3;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a6;
  v8[3] = a2;
  v8[4] = a4;
  v8[5] = a5;
  v8[6] = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23ADAB3E4;
  *(_QWORD *)(v9 + 24) = v8;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_22_0;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_23B1C6458();
  v11 = fpfs_openat();
  swift_release();
  _Block_release(v10);
  swift_release();
  *v15 = v11;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23ADAA1AC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_23ADAA01C(a1, v2[8], a2, v2[9], v2[10], v2[2]);
}

void sub_23ADAA1EC(void (*a1)(int *__return_ptr, void **))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD v12[31];
  int v13;
  void *v14;

  v3 = sub_23B1C5570();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12[-2] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  a1(&v13, &v14);
  if (v1)
  {
    v7 = v14;
LABEL_3:

    return;
  }
  if (v14)
  {
    swift_willThrow();
    return;
  }
  if (v13 < 0)
  {
    v8 = MEMORY[0x23B85E7A4]();
    if (!(_DWORD)v8)
    {
      MEMORY[0x24BDAC7A8](v8);
      *(&v11 - 2) = (uint64_t)&v13;
      sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23ADAB444, (uint64_t)(&v11 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 300);
    }
    if (MEMORY[0x23B85E7A4]() == 96)
    {
      sub_23AC42C18((uint64_t)v12);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      sub_23ADAB3F8();
      swift_allocError();
      sub_23AD3E060((uint64_t)v12, v9);
LABEL_16:
      swift_willThrow();
      v7 = v14;
      goto LABEL_3;
    }
    if (MEMORY[0x23B85E7A4]() != 9939394)
    {
      MEMORY[0x23B85E7A4]();
      v10 = sub_23B1C5E64();
      if ((v10 & 0x100000000) != 0)
        v12[0] = 22;
      else
        v12[0] = v10;
      sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
      sub_23AC37520();
      sub_23B1C5864();
      sub_23B1C5558();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      goto LABEL_16;
    }
    objc_msgSend((id)objc_opt_self(), sel_fp_errorForDataProtectionClass_, 2);
    swift_willThrow();
  }
}

void sub_23ADAA418(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
  sub_23ADAA1EC((void (*)(int *__return_ptr, void **))sub_23ADAADB0);
  if (v2)
  {
    v4 = sub_23B1C6C98();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a2, v4);
  }
}

uint64_t sub_23ADAA4C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _DWORD *a6@<X8>)
{
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  int v15;
  uint64_t result;
  _QWORD v17[6];

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a5;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_23ADAB0FC;
  *(_QWORD *)(v13 + 24) = v12;
  v17[4] = sub_23AA698DC;
  v17[5] = v13;
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 1107296256;
  v17[2] = sub_23AA698B0;
  v17[3] = &block_descriptor_13;
  v14 = _Block_copy(v17);
  swift_retain();
  swift_release();
  v15 = fpfs_fopendir();
  _Block_release(v14);
  swift_release();
  *a6 = v15;
  LOBYTE(a6) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a6 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_23ADAA624(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;

  v15 = a2;
  v16 = a5;
  v7 = sub_23B1C5570();
  v14[1] = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_23B1C6C98();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v14 - v11;
  a3(a1);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v15, v12, v9);
  return 0;
}

uint64_t sub_23ADAA830@<X0>(__int128 *a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  int v32;
  int v33;
  int v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v28 = a6;
  v27 = a5;
  v26 = a4;
  v25 = a8;
  v42 = *MEMORY[0x24BDAC8D0];
  v12 = sub_23B1C6C98();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v24 - v17;
  v19 = *(_QWORD *)(a7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))((char *)&v24 - v17, 1, 1, a7);
  v20 = *((_QWORD *)a1 + 3);
  v38 = *a1;
  v39 = *((_QWORD *)a1 + 2);
  v40 = v20;
  v41 = *((_QWORD *)a1 + 4);
  v30 = a7;
  v31 = &v38;
  v32 = a2;
  v33 = a3;
  v34 = v26;
  v35 = v18;
  v36 = v27;
  v21 = v29;
  v37 = v28;
  sub_23ADAA1EC((void (*)(int *__return_ptr, void **))sub_23ADAB3A0);
  if (v21)
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  v22 = v25;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, a7);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v22, v16, a7);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
  __break(1u);
  return result;
}

uint64_t sub_23ADAA9F4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23ADAA830(a1, *(_DWORD *)(v2 + 24), *(_DWORD *)(v2 + 28), *(_DWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23ADAAA18@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, _DWORD *a6@<X8>, uint64_t a7)
{
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  int v14;
  uint64_t result;
  _QWORD aBlock[6];
  int v18;

  v18 = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a7;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  v11[6] = a1;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_23ADAB3E4;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_23AA698D4;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23AA698B0;
  aBlock[3] = &block_descriptor_12;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v14 = fpfs_openbyid_ext();
  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
  else
    *a6 = v14;
  return result;
}

uint64_t sub_23ADAAB8C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v17 = a2;
  v18 = a5;
  v9 = sub_23B1C5570();
  v16[1] = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = sub_23B1C6C98();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v16 - v13;
  a3(a1);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 56))(v14, 0, 1, a6);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v17, v14, v11);
  return 0;
}

uint64_t sub_23ADAADB0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_23ADAA4C8(a1, v2[4], v2[5], v2[6], v2[2], a2);
}

void sub_23ADAADD4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23ADAAE40()
{
  _DWORD *v0;
  int v1;
  uint64_t result;

  sub_23B1C6458();
  v1 = fpfs_fsetxattr();
  result = swift_release();
  *v0 = v1;
  return result;
}

uint64_t sub_23ADAB0EC()
{
  return swift_deallocObject();
}

uint64_t sub_23ADAB0FC(uint64_t a1)
{
  uint64_t v1;

  return sub_23ADAA624(a1, *(_QWORD *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_23ADAB10C()
{
  return swift_deallocObject();
}

void sub_23ADAB11C()
{
  sub_23B1AA030();
}

uint64_t sub_23ADAB160(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5;
  __int16 v7;
  char v8;
  __int16 v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  int v23;
  __int16 v24;
  char v25;
  __int16 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  int v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;

  if (*(_DWORD *)(result + 20) == *(_DWORD *)(a4 + 20))
  {
    v5 = result;
    if (*(_QWORD *)result == *(_QWORD *)a4)
    {
      v7 = *(_WORD *)(result + 44);
      v8 = *(_BYTE *)(result + 46);
      v9 = *(_WORD *)(result + 48);
      v10 = *(_BYTE *)(result + 136);
      v11 = *(_DWORD *)(result + 144);
      v12 = *(_QWORD *)(result + 200);
      v13 = *(_QWORD *)(result + 216);
      v14 = *(_QWORD *)(result + 232);
      v15 = *(_QWORD *)(result + 240);
      v16 = *(_DWORD *)(result + 256);
      v17 = *(_BYTE *)(v5 + 224) & 1;
      v18 = *(_BYTE *)(v5 + 225) & 1;
      v23 = *(_DWORD *)(v5 + 40);
      v25 = v8;
      v24 = v7;
      v26 = v9;
      v19 = *(_OWORD *)(v5 + 72);
      v27 = *(_OWORD *)(v5 + 56);
      v28 = v19;
      v20 = *(_OWORD *)(v5 + 104);
      v29 = *(_OWORD *)(v5 + 88);
      v30 = v20;
      v31 = *(_OWORD *)(v5 + 120);
      v32 = v10;
      v33 = v11;
      v21 = *(_OWORD *)(v5 + 168);
      v34 = *(_OWORD *)(v5 + 152);
      v35 = v21;
      v36 = *(_OWORD *)(v5 + 184);
      v37 = v12;
      v38 = *(_QWORD *)(v5 + 208);
      v39 = v13;
      v40 = v17;
      v41 = v18;
      v42 = v14;
      v43 = v15;
      v44 = *(_QWORD *)(v5 + 248);
      v45 = v16;
      result = sub_23ADAB360((uint64_t)&v23);
      if ((_DWORD)result)
      {
        result = sub_23AA928C4(v15);
        if (a5)
        {
          if (!(_BYTE)result)
            return result;
          if (result == 1)
          {
            if (a5 < 4u)
            {
              v22 = 2048;
LABEL_15:
              *(_QWORD *)(v5 + 240) = v22;
              MEMORY[0x24BDAC7A8](result);
              return sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADAB36C);
            }
          }
          else if (result > a5)
          {
            a5 = result;
          }
          if (a5 == result)
            return result;
          v22 = qword_23B1D8B00[(char)a5 - 2];
          goto LABEL_15;
        }
        if (!(_BYTE)result)
          return result;
        v22 = 0;
        goto LABEL_15;
      }
    }
  }
  return result;
}

uint64_t sub_23ADAB340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23ADAB160(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
}

uint64_t sub_23ADAB360(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 4) >> 5) & 1;
}

uint64_t sub_23ADAB36C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = fpfs_set_evictable();
  *a1 = result;
  return result;
}

uint64_t sub_23ADAB3A0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_23ADAAA18(a1, *(_DWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23ADAB3D4()
{
  return swift_deallocObject();
}

uint64_t sub_23ADAB3E8()
{
  return swift_deallocObject();
}

unint64_t sub_23ADAB3F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542E0940;
  if (!qword_2542E0940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542E0950);
    result = MEMORY[0x23B8613CC](&unk_23B1D40CC, v1);
    atomic_store(result, (unint64_t *)&qword_2542E0940);
  }
  return result;
}

uint64_t sub_23ADAB444()
{
  return sub_23B0EA144();
}

uint64_t sub_23ADAB44C()
{
  return swift_deallocObject();
}

uint64_t sub_23ADAB45C(uint64_t a1)
{
  uint64_t v1;

  return sub_23ADAAB8C(a1, *(_QWORD *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16));
}

uint64_t sub_23ADAB47C()
{
  return swift_deallocObject();
}

id sub_23ADAB49C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  id v10;
  id v11;
  id v12;

  v1 = objc_msgSend(v0, sel_itemID);
  v2 = objc_msgSend(v1, sel_identifier);

  v3 = sub_23B1C63E0();
  v5 = v4;
  if (v3 == sub_23B1C63E0() && v5 == v6)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  v8 = sub_23B1C7388();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
LABEL_9:
    v10 = objc_msgSend(v0, sel_itemID);
    v11 = objc_msgSend(v10, sel_identifier);
    goto LABEL_10;
  }
  if (objc_msgSend(v0, sel_isTrashed))
    return (id)*MEMORY[0x24BDC8230];
  v10 = objc_msgSend(v0, sel_parentItemID);
  v11 = objc_msgSend(v10, sel_identifier);
LABEL_10:
  v12 = v11;

  return v12;
}

id sub_23ADAB624(uint64_t a1, void *a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  id *v11;
  id v12;
  uint64_t v13;
  int v14;
  id v15;
  id v16;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;

  v36 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)a1;
  v9 = *(unsigned __int8 *)(a1 + 8);
  v37 = sub_23AA96E5C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a3);
  v10 = v9 == 2 && v8 == 0;
  v11 = (id *)MEMORY[0x24BDC8228];
  if (v10)
    v12 = (id)*MEMORY[0x24BDC8228];
  else
    v12 = 0;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(unsigned __int8 *)(a1 + 24);
  v15 = v12;
  v16 = sub_23AA96E5C(v13, v14, a3 & 1);
  if (v14 == 2 && v13 == 0)
    v18 = *v11;
  else
    v18 = 0;
  v20 = *(_QWORD *)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 40);
  v21 = (uint64_t)&v7[*(int *)(v5 + 40)];
  v22 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for VFSItem(0) + 28));
  sub_23AA9BA80((uint64_t)v22, v21);
  *(_QWORD *)v7 = v16;
  *((_QWORD *)v7 + 1) = v20;
  *((_QWORD *)v7 + 2) = v19;
  v23 = qword_2542E1790;
  v35 = v16;
  v24 = v18;
  swift_bridgeObjectRetain();
  if (v23 != -1)
    swift_once();
  v25 = v37;
  v26 = v36;
  v27 = sub_23AA976F8(v37, v36, (id *)v7, qword_2542EDD00, 0);
  sub_23AA8A05C((uint64_t)v7, (uint64_t *)&unk_2542E1E00);
  objc_msgSend(v27, sel_setFormerIdentifier_, v15);

  objc_msgSend(v27, sel_setParentFormerIdentifier_, v24);
  v28 = *v22;
  objc_msgSend(v27, sel_isExcludedFromSync);
  v29 = *((unsigned __int16 *)v22 + 5);
  v30 = objc_msgSend(v26, sel_supportsSyncingTrash);
  if ((*MEMORY[0x24BDC8210] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    v31 = *MEMORY[0x24BDC8210] | 0x2CLL;
    if (v28 == 1)
    {
      v32 = v35;
      if ((~v29 & 0x140) != 0)
      {
LABEL_24:
        if ((v29 & 0x80) == 0)
          goto LABEL_26;
        goto LABEL_25;
      }
    }
    else
    {
      v32 = v35;
      if ((v29 & 0x100) == 0)
        goto LABEL_24;
    }
LABEL_23:
    v31 |= 1uLL;
    goto LABEL_24;
  }
  if (v28 == 1)
  {
    v32 = v35;
    if ((~v29 & 0x140) == 0)
    {
LABEL_21:
      v31 = 44;
      goto LABEL_23;
    }
  }
  else
  {
    v32 = v35;
    if ((v29 & 0x100) != 0)
      goto LABEL_21;
  }
  v31 = 44;
  if ((v29 & 0x80) == 0)
  {
    if ((v30 & 1) == 0)
      goto LABEL_28;
    goto LABEL_27;
  }
LABEL_25:
  v31 |= 2uLL;
LABEL_26:
  if (v30)
LABEL_27:
    v31 |= 0x10uLL;
LABEL_28:
  objc_msgSend(v27, sel_setCapabilities_, v31);

  return v27;
}

id sub_23ADAB8E8(uint64_t a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  id v16;
  id v17;
  int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23AA96E5C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a3);
  v10 = sub_23AA96E5C(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), a3);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = (uint64_t)&v8[*(int *)(v6 + 40)];
  v14 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for VFSItem(0) + 28));
  sub_23AA9BA80((uint64_t)v14, v13);
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  *((_QWORD *)v8 + 2) = v12;
  v15 = qword_2542E1790;
  v16 = v10;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v17 = sub_23AA976F8(v9, a2, (id *)v8, qword_2542EDD00, 0);
  sub_23AA8A05C((uint64_t)v8, (uint64_t *)&unk_2542E1E00);
  objc_msgSend(v17, sel_setFormerIdentifier_, 0);
  objc_msgSend(v17, sel_setParentFormerIdentifier_, 0);
  v18 = *v14;
  objc_msgSend(v17, sel_isExcludedFromSync);
  v19 = *((unsigned __int16 *)v14 + 5);
  v20 = objc_msgSend(a2, sel_supportsSyncingTrash);
  if ((*MEMORY[0x24BDC8210] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    v21 = *MEMORY[0x24BDC8210] | 0x2CLL;
    if (v18 == 1)
    {
      if ((~v19 & 0x140) != 0)
      {
LABEL_12:
        if ((v19 & 0x80) == 0)
          goto LABEL_14;
        goto LABEL_13;
      }
    }
    else if ((v19 & 0x100) == 0)
    {
      goto LABEL_12;
    }
LABEL_11:
    v21 |= 1uLL;
    goto LABEL_12;
  }
  if (v18 == 1)
  {
    if ((~v19 & 0x140) == 0)
    {
LABEL_9:
      v21 = 44;
      goto LABEL_11;
    }
  }
  else if ((v19 & 0x100) != 0)
  {
    goto LABEL_9;
  }
  v21 = 44;
  if ((v19 & 0x80) == 0)
  {
    if ((v20 & 1) == 0)
      goto LABEL_16;
    goto LABEL_15;
  }
LABEL_13:
  v21 |= 2uLL;
LABEL_14:
  if (v20)
LABEL_15:
    v21 |= 0x10uLL;
LABEL_16:
  objc_msgSend(v17, sel_setCapabilities_, v21);

  return v17;
}

id sub_23ADABB30(uint64_t a1, void *a2, char a3)
{
  return sub_23ADABB44(a1, a2, a3);
}

id sub_23ADABB44(uint64_t a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  id v16;
  id v17;
  int v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23AA96E5C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), a3);
  v10 = sub_23AA96E5C(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), a3);
  v11 = *(_QWORD *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 136);
  v13 = (uint64_t)&v8[*(int *)(v6 + 40)];
  v14 = (unsigned __int8 *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00) + 48));
  sub_23AA9BA80((uint64_t)v14, v13);
  *(_QWORD *)v8 = v10;
  *((_QWORD *)v8 + 1) = v11;
  *((_QWORD *)v8 + 2) = v12;
  v15 = qword_2542E1790;
  v16 = v10;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v17 = sub_23AA976F8(v9, a2, (id *)v8, qword_2542EDD00, 0);
  sub_23AA8A05C((uint64_t)v8, (uint64_t *)&unk_2542E1E00);
  objc_msgSend(v17, sel_setFormerIdentifier_, 0);
  objc_msgSend(v17, sel_setParentFormerIdentifier_, 0);
  v18 = *v14;
  objc_msgSend(v17, sel_isExcludedFromSync);
  v19 = *((unsigned __int16 *)v14 + 5);
  v20 = objc_msgSend(a2, sel_supportsSyncingTrash);
  if ((*MEMORY[0x24BDC8210] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    v21 = *MEMORY[0x24BDC8210] | 0x2CLL;
    if (v18 == 1)
    {
      if ((~v19 & 0x140) != 0)
      {
LABEL_12:
        if ((v19 & 0x80) == 0)
          goto LABEL_14;
        goto LABEL_13;
      }
    }
    else if ((v19 & 0x100) == 0)
    {
      goto LABEL_12;
    }
LABEL_11:
    v21 |= 1uLL;
    goto LABEL_12;
  }
  if (v18 == 1)
  {
    if ((~v19 & 0x140) == 0)
    {
LABEL_9:
      v21 = 44;
      goto LABEL_11;
    }
  }
  else if ((v19 & 0x100) != 0)
  {
    goto LABEL_9;
  }
  v21 = 44;
  if ((v19 & 0x80) == 0)
  {
    if ((v20 & 1) == 0)
      goto LABEL_16;
    goto LABEL_15;
  }
LABEL_13:
  v21 |= 2uLL;
LABEL_14:
  if (v20)
LABEL_15:
    v21 |= 0x10uLL;
LABEL_16:
  objc_msgSend(v17, sel_setCapabilities_, v21);

  return v17;
}

id sub_23ADABD90(uint64_t a1, void *a2, char a3)
{
  return sub_23ADABDA4(a1, a2, a3);
}

id sub_23ADABDA4(uint64_t a1, void *a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  id v18;
  id v19;
  int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(id *)a1;
  v10 = sub_23ADAE618(v9, a3);

  v11 = *(id *)(a1 + 8);
  v12 = sub_23ADAE618(v11, a3);

  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 88);
  v15 = (uint64_t)&v8[*(int *)(v6 + 40)];
  v16 = (unsigned __int8 *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760) + 48));
  sub_23AA9BA80((uint64_t)v16, v15);
  *(_QWORD *)v8 = v12;
  *((_QWORD *)v8 + 1) = v13;
  *((_QWORD *)v8 + 2) = v14;
  v17 = qword_2542E1790;
  v18 = v12;
  swift_bridgeObjectRetain();
  if (v17 != -1)
    swift_once();
  v19 = sub_23AA976F8(v10, a2, (id *)v8, qword_2542EDD00, 0);
  sub_23AA8A05C((uint64_t)v8, (uint64_t *)&unk_2542E1E00);
  objc_msgSend(v19, sel_setFormerIdentifier_, 0);
  objc_msgSend(v19, sel_setParentFormerIdentifier_, 0);
  v20 = *v16;
  objc_msgSend(v19, sel_isExcludedFromSync);
  v21 = *((unsigned __int16 *)v16 + 5);
  v22 = objc_msgSend(a2, sel_supportsSyncingTrash);
  if ((*MEMORY[0x24BDC8210] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    v23 = *MEMORY[0x24BDC8210] | 0x2CLL;
    if (v20 == 1)
    {
      if ((~v21 & 0x140) != 0)
      {
LABEL_12:
        if ((v21 & 0x80) == 0)
          goto LABEL_14;
        goto LABEL_13;
      }
    }
    else if ((v21 & 0x100) == 0)
    {
      goto LABEL_12;
    }
LABEL_11:
    v23 |= 1uLL;
    goto LABEL_12;
  }
  if (v20 == 1)
  {
    if ((~v21 & 0x140) == 0)
    {
LABEL_9:
      v23 = 44;
      goto LABEL_11;
    }
  }
  else if ((v21 & 0x100) != 0)
  {
    goto LABEL_9;
  }
  v23 = 44;
  if ((v21 & 0x80) == 0)
  {
    if ((v22 & 1) == 0)
      goto LABEL_16;
    goto LABEL_15;
  }
LABEL_13:
  v23 |= 2uLL;
LABEL_14:
  if (v22)
LABEL_15:
    v23 |= 0x10uLL;
LABEL_16:
  objc_msgSend(v19, sel_setCapabilities_, v23);

  return v19;
}

id sub_23ADAC000(uint64_t a1, void *a2, char a3)
{
  return sub_23ADAC014(a1, a2, a3);
}

id sub_23ADAC014(uint64_t a1, void *a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  int v22;
  int v23;
  unsigned int v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  id v30;
  id v31;
  void *v32;

  v32 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(id *)a1;
  v31 = sub_23ADAE618(v8, a3);

  v9 = *(void **)(a1 + 8);
  v10 = v8;
  v11 = v9;
  v12 = sub_23ADAE618(v11, a3);

  v14 = *(_QWORD *)(a1 + 80);
  v13 = *(_QWORD *)(a1 + 88);
  v15 = (uint64_t)&v7[*(int *)(v5 + 40)];
  v16 = (unsigned __int8 *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760) + 48));
  sub_23AA9BA80((uint64_t)v16, v15);
  *(_QWORD *)v7 = v12;
  *((_QWORD *)v7 + 1) = v14;
  *((_QWORD *)v7 + 2) = v13;
  v17 = qword_2542E1790;
  v18 = v11;
  v30 = v12;
  swift_bridgeObjectRetain();
  if (v17 != -1)
    swift_once();
  v19 = v31;
  v20 = v32;
  v21 = sub_23AA976F8(v31, v32, (id *)v7, qword_2542EDD00, 0);
  sub_23AA8A05C((uint64_t)v7, (uint64_t *)&unk_2542E1E00);
  objc_msgSend(v21, sel_setFormerIdentifier_, v10);

  objc_msgSend(v21, sel_setParentFormerIdentifier_, v18);
  v22 = *v16;
  objc_msgSend(v21, sel_isExcludedFromSync);
  v23 = *((unsigned __int16 *)v16 + 5);
  v24 = objc_msgSend(v20, sel_supportsSyncingTrash);
  v25 = v19;
  if ((*MEMORY[0x24BDC8210] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    v26 = *MEMORY[0x24BDC8210] | 0x2CLL;
    if (v22 == 1)
    {
      v27 = v30;
      if ((~v23 & 0x140) != 0)
      {
LABEL_12:
        if ((v23 & 0x80) == 0)
          goto LABEL_14;
        goto LABEL_13;
      }
    }
    else
    {
      v27 = v30;
      if ((v23 & 0x100) == 0)
        goto LABEL_12;
    }
LABEL_11:
    v26 |= 1uLL;
    goto LABEL_12;
  }
  if (v22 == 1)
  {
    v27 = v30;
    if ((~v23 & 0x140) == 0)
    {
LABEL_9:
      v26 = 44;
      goto LABEL_11;
    }
  }
  else
  {
    v27 = v30;
    if ((v23 & 0x100) != 0)
      goto LABEL_9;
  }
  v26 = 44;
  if ((v23 & 0x80) == 0)
  {
    if ((v24 & 1) == 0)
      goto LABEL_16;
    goto LABEL_15;
  }
LABEL_13:
  v26 |= 2uLL;
LABEL_14:
  if (v24)
LABEL_15:
    v26 |= 0x10uLL;
LABEL_16:
  objc_msgSend(v21, sel_setCapabilities_, v26);

  return v21;
}

id sub_23ADAC2A8(void *a1, void *a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  int *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  int v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v34;
  id v35;
  int *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;

  v43 = a2;
  v5 = type metadata accessor for ItemMetadata();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (unsigned __int8 *)&v34 - v9;
  v36 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  MEMORY[0x24BDAC7A8](v36);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(a1, sel_itemID);
  v14 = objc_msgSend(v13, sel_identifier);

  v35 = sub_23ADAE618(v14, a3);
  v15 = objc_msgSend(a1, sel_itemID);

  v16 = sub_23ADAB49C();
  v17 = sub_23ADAE618(v16, a3);

  v18 = (int *)v17;
  v19 = objc_msgSend(a1, sel_filename);
  v20 = sub_23B1C63E0();
  v22 = v21;

  v41 = v20;
  v42 = v22;
  v39 = 58;
  v40 = 0xE100000000000000;
  v37 = 47;
  v38 = 0xE100000000000000;
  sub_23AAA420C();
  v23 = sub_23B1C6CF8();
  v25 = v24;
  swift_bridgeObjectRelease();
  sub_23AAA3120((uint64_t)&v12[v36[10]]);
  v36 = v18;
  *(_QWORD *)v12 = v18;
  *((_QWORD *)v12 + 1) = v23;
  *((_QWORD *)v12 + 2) = v25;
  if (qword_2542E1790 != -1)
    swift_once();
  v26 = v35;
  v27 = v43;
  v28 = sub_23AA976F8(v35, v43, (id *)v12, qword_2542EDD00, 0);
  sub_23AA8A05C((uint64_t)v12, (uint64_t *)&unk_2542E1E00);
  objc_msgSend(v28, sel_setFormerIdentifier_, 0);
  objc_msgSend(v28, sel_setParentFormerIdentifier_, 0);
  sub_23AAA3120((uint64_t)v10);
  v29 = *v10;
  sub_23AA9F854((uint64_t)v10);
  objc_msgSend(v28, sel_isExcludedFromSync);
  sub_23AAA3120((uint64_t)v8);
  v30 = *((unsigned __int16 *)v8 + 5);
  sub_23AA9F854((uint64_t)v8);
  v31 = objc_msgSend(v27, sel_supportsSyncingTrash);
  if ((*MEMORY[0x24BDC8210] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    v32 = *MEMORY[0x24BDC8210] | 0x2CLL;
    if (v29 == 1)
    {
      if ((~v30 & 0x140) != 0)
      {
LABEL_12:
        if ((v30 & 0x80) == 0)
          goto LABEL_14;
        goto LABEL_13;
      }
    }
    else if ((v30 & 0x100) == 0)
    {
      goto LABEL_12;
    }
LABEL_11:
    v32 |= 1uLL;
    goto LABEL_12;
  }
  if (v29 == 1)
  {
    if ((~v30 & 0x140) == 0)
    {
LABEL_9:
      v32 = 44;
      goto LABEL_11;
    }
  }
  else if ((v30 & 0x100) != 0)
  {
    goto LABEL_9;
  }
  v32 = 44;
  if ((v30 & 0x80) == 0)
  {
    if ((v31 & 1) == 0)
      goto LABEL_16;
    goto LABEL_15;
  }
LABEL_13:
  v32 |= 2uLL;
LABEL_14:
  if (v31)
LABEL_15:
    v32 |= 0x10uLL;
LABEL_16:
  objc_msgSend(v28, sel_setCapabilities_, v32);

  return v28;
}

uint64_t *sub_23ADAC66C()
{
  if (qword_2569E12C0 != -1)
    swift_once();
  return &qword_256A079A8;
}

void *sub_23ADAC6AC()
{
  return &unk_23B1D8B20;
}

uint64_t sub_23ADAC6B8()
{
  return 65533;
}

id sub_23ADAC6C0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1738]), sel_init);
  qword_256A079A8 = (uint64_t)result;
  return result;
}

void sub_23ADAC6F0()
{
  void *v0;
  id v1;

  v1 = (id)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setFilename_, v1);

}

void (*sub_23ADAC73C(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(v1, sel_filename);
  v5 = sub_23B1C63E0();
  v7 = v6;

  v3[2] = v5;
  v3[3] = v7;
  v3[4] = 58;
  v3[5] = 0xE100000000000000;
  v3[6] = 47;
  v3[7] = 0xE100000000000000;
  sub_23AAA420C();
  v8 = sub_23B1C6CF8();
  v10 = v9;
  swift_bridgeObjectRelease();
  *v3 = v8;
  v3[1] = v10;
  return sub_23ADAC834;
}

void sub_23ADAC834(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setFilename_, v4);

    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setFilename_, v5);

  }
  free(v2);
}

uint64_t sub_23ADAC8DC()
{
  void *v0;

  return sub_23AFA9348((int)objc_msgSend(v0, sel_unsupportedFields));
}

void sub_23ADAC8FC(_QWORD *a1@<X8>)
{
  id *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(*v1, sel_itemID);
  v4 = objc_msgSend(v3, sel_identifier);

  *a1 = v4;
}

id sub_23ADAC95C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_23ADAB49C();
  *a1 = result;
  return result;
}

uint64_t sub_23ADAC984()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_filename);
  sub_23B1C63E0();

  sub_23AAA420C();
  v2 = sub_23B1C6CF8();
  swift_bridgeObjectRelease();
  return v2;
}

void sub_23ADACA40()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  v2 = (id)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setFilename_, v2);

}

void (*sub_23ADACA90(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_23ADAC73C(v2);
  return sub_23ACDBAE4;
}

uint64_t sub_23ADACAD8@<X0>(uint64_t a1@<X8>)
{
  return sub_23AAA3120(a1);
}

double sub_23ADACAF8@<D0>(_OWORD *a1@<X8>)
{
  __int128 v2;
  double result;
  __int128 v4;
  _OWORD v5[2];
  __int128 v6;
  __int128 v7;

  sub_23AAA5788((uint64_t *)v5);
  v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  result = *(double *)&v6;
  v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t sub_23ADACB38@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[248];

  sub_23AAA4B74((uint64_t)v3);
  return sub_23AA724E8((uint64_t)v3, a1, &qword_2542E5050);
}

uint64_t sub_23ADACB84()
{
  id *v0;

  return sub_23AFA9348((int)objc_msgSend(*v0, sel_unsupportedFields));
}

uint64_t sub_23ADACBA4(uint64_t (*a1)(void))
{
  return a1();
}

void sub_23ADACBC4(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_23B1C6CBC();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_23ADACC74(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAD040(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACC90(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADAD1A8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACCAC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAD510(a1, a2, a3, *v3, &qword_2542E55A0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACCD0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAD510(a1, a2, a3, *v3, &qword_2569E5898);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACCF4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAD510(a1, a2, a3, *v3, (uint64_t *)&unk_2542E55A8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACD18(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAD510(a1, a2, a3, *v3, &qword_2542E55C8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACD3C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAD510(a1, a2, a3, *v3, (uint64_t *)&unk_2542E55D0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACD60(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAD510(a1, a2, a3, *v3, &qword_2542E55C0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACD84(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADAD95C(a1, a2, a3, (_QWORD *)*v3, &qword_2542E20F8, &qword_2542E6CD8);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACDB0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADADC80(a1, a2, a3, (_QWORD *)*v3, &qword_2542E3668, (uint64_t *)&unk_2542E6B00);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACDDC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAD510(a1, a2, a3, *v3, &qword_2542E55E0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACE00(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADAE48C(a1, a2, a3, (_QWORD *)*v3, &qword_2542E2160, type metadata accessor for NSFileProviderItemIdentifier);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACE2C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADAD330(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACE48(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADADC80(a1, a2, a3, (_QWORD *)*v3, &qword_2542DE800, qword_2542DDA70);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACE74(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADAD95C(a1, a2, a3, (_QWORD *)*v3, &qword_2569E5820, &qword_2569E5828);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACEA0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAD510(a1, a2, a3, *v3, &qword_2542E55E8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACEC4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAD658(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACEE0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADAD7B4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACEFC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADAD95C(a1, a2, a3, (_QWORD *)*v3, &qword_2569E31E8, (uint64_t *)&unk_2569E31F0);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACF28(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAE1A8(a1, a2, a3, *v3, &qword_2542E55F8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACF4C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADADAE4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACF68(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADADC80(a1, a2, a3, (_QWORD *)*v3, &qword_2569E5878, &qword_2542DDDB0);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACF94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADADE60(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23ADACFB0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAE1A8(a1, a2, a3, *v3, (uint64_t *)&unk_2542E5610);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACFD4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23ADAD510(a1, a2, a3, *v3, &qword_2569E5850);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23ADACFF8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADAE300(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23ADAD014(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23ADAE48C(a1, a2, a3, (_QWORD *)*v3, &qword_2569E5840, type metadata accessor for NSFileProviderItemDecorationIdentifier);
  *v3 = result;
  return result;
}

uint64_t sub_23ADAD040(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3678);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADAD1A8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E3670);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 + 31;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 6);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v10 + 4, a4 + 4, v8 << 6);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75E0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADAD330(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5598);
  v10 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_23B1C5A08() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADAD510(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v9])
      memmove(v13, v14, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADAD658(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5830);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADAD7B4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5838);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8)
      memmove(v10 + 4, a4 + 4, 56 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE6F8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADAD95C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  size_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 17;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = v13 + 4;
  v17 = a4 + 4;
  v18 = 2 * v11;
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= &v17[v18])
      memmove(v13 + 4, a4 + 4, v18 * 8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= &v16[v18] || v16 >= &v17[v18])
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADADAE4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5880);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5888);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADADC6C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23ADADC80(a1, a2, a3, a4, &qword_2569E5878, &qword_2542DDDB0);
}

uint64_t sub_23ADADC80(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADADE60(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5868);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5870);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADAE004(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5858);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5860);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADAE1A8(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADAE300(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5848);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 < a4 || v13 >= v14 + 8 * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_34:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADAE48C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, void (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

id sub_23ADAE618(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  id v18;
  uint64_t v19;

  if (qword_2542E1FE0 != -1)
    swift_once();
  v4 = sub_23B1C63E0();
  v6 = v5;
  if (v4 == sub_23B1C63E0() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    if ((a2 & 1) != 0)
    {
LABEL_9:
      v10 = (id *)MEMORY[0x24BDC8228];
      return *v10;
    }
  }
  else
  {
    v9 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0 && (a2 & 1) != 0)
      goto LABEL_9;
  }
  if (qword_2542E1FE8 != -1)
    swift_once();
  v11 = sub_23B1C63E0();
  v13 = v12;
  if (v11 == sub_23B1C63E0() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    if ((a2 & 1) != 0)
    {
LABEL_19:
      v10 = (id *)MEMORY[0x24BDC8230];
      return *v10;
    }
  }
  else
  {
    v16 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0 && (a2 & 1) != 0)
      goto LABEL_19;
  }
  sub_23B1C63E0();
  v18 = a1;
  v19 = sub_23B1C63BC();
  swift_bridgeObjectRelease();

  return (id)v19;
}

unint64_t sub_23ADAE7F0()
{
  unint64_t result;

  result = qword_2542E4C08;
  if (!qword_2542E4C08)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DC1E0, &type metadata for FPItemVersionData);
    atomic_store(result, (unint64_t *)&qword_2542E4C08);
  }
  return result;
}

unint64_t sub_23ADAE838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542E5518;
  if (!qword_2542E5518)
  {
    type metadata accessor for NSFileProviderItemIdentifier(255);
    result = MEMORY[0x23B8613CC](&unk_23B1E0EE8, v1);
    atomic_store(result, (unint64_t *)&qword_2542E5518);
  }
  return result;
}

unint64_t sub_23ADAE880(uint64_t a1)
{
  unint64_t result;

  result = sub_23ADAE8A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23ADAE8A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542E5530;
  if (!qword_2542E5530)
  {
    v1 = sub_23AA9F52C(255, &qword_2542E7560);
    result = MEMORY[0x23B8613CC](MEMORY[0x24BDD0240], v1);
    atomic_store(result, (unint64_t *)&qword_2542E5530);
  }
  return result;
}

int *sub_23ADAE8FC(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  void *v15;
  void *v16;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  int v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  id v46;

  v45 = a2;
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)a1;
  v14 = *(_BYTE *)(a1 + 8);
  v46 = sub_23AA96E5C(*(_QWORD *)a1, v14, a3);
  v15 = sub_23AA96FFC(v13, v14, a4, a5);
  if (!v5)
  {
    v43 = v12;
    v44 = a4;
    v16 = v45;
    v17 = *(_QWORD *)(a1 + 16);
    v18 = *(_BYTE *)(a1 + 24);
    v19 = v15;
    v20 = sub_23AA96E5C(v17, v18, a3 & 1);
    v22 = sub_23AA96FFC(v17, v18, v44, a5);
    v42 = 0;
    v24 = *(_QWORD *)(a1 + 128);
    v23 = *(_QWORD *)(a1 + 136);
    v25 = v10[10];
    v26 = (uint64_t)v43;
    v27 = (uint64_t)&v43[v25];
    v28 = (unsigned __int8 *)(a1
                            + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00) + 48));
    sub_23AA9BA80((uint64_t)v28, v27);
    v41 = v20;
    *(_QWORD *)v26 = v20;
    *(_QWORD *)(v26 + 8) = v24;
    v29 = v26;
    *(_QWORD *)(v26 + 16) = v23;
    v30 = qword_2542E1790;
    v31 = v22;
    swift_bridgeObjectRetain();
    if (v30 != -1)
      swift_once();
    v32 = v46;
    v10 = (int *)sub_23AA976F8(v46, v16, (id *)v26, qword_2542EDD00, 0);
    sub_23AA8A05C(v29, (uint64_t *)&unk_2542E1E00);
    v33 = v19;
    objc_msgSend(v10, sel_setFormerIdentifier_, v19);

    objc_msgSend(v10, sel_setParentFormerIdentifier_, v31);
    v34 = v31;

    v35 = *v28;
    objc_msgSend(v10, sel_isExcludedFromSync);
    v36 = *((unsigned __int16 *)v28 + 5);
    v37 = objc_msgSend(v16, sel_supportsSyncingTrash);
    if ((*MEMORY[0x24BDC8210] & 0xFFFFFFFFFFFFFFD3) != 0)
    {
      v38 = *MEMORY[0x24BDC8210] | 0x2CLL;
      if (v35 == 1)
      {
        v39 = v41;
        if ((~v36 & 0x140) != 0)
        {
LABEL_16:
          if ((v36 & 0x80) == 0)
            goto LABEL_18;
          goto LABEL_17;
        }
      }
      else
      {
        v39 = v41;
        if ((v36 & 0x100) == 0)
          goto LABEL_16;
      }
LABEL_15:
      v38 |= 1uLL;
      goto LABEL_16;
    }
    if (v35 == 1)
    {
      v39 = v41;
      if ((~v36 & 0x140) == 0)
      {
LABEL_13:
        v38 = 44;
        goto LABEL_15;
      }
    }
    else
    {
      v39 = v41;
      if ((v36 & 0x100) != 0)
        goto LABEL_13;
    }
    v38 = 44;
    if ((v36 & 0x80) == 0)
    {
      if ((v37 & 1) == 0)
        goto LABEL_20;
      goto LABEL_19;
    }
LABEL_17:
    v38 |= 2uLL;
LABEL_18:
    if (!v37)
    {
LABEL_20:
      objc_msgSend(v10, sel_setCapabilities_, v38);
      swift_bridgeObjectRelease();

      return v10;
    }
LABEL_19:
    v38 |= 0x10uLL;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();

  return v10;
}

uint64_t sub_23ADAEC30(char a1, unsigned __int16 a2, char a3)
{
  uint64_t result;

  if ((*MEMORY[0x24BDC8210] & 0xFFFFFFFFFFFFFFD3) != 0)
  {
    result = *MEMORY[0x24BDC8210] | 0x2CLL;
    if ((a1 & 1) != 0)
    {
      if ((~a2 & 0x140) != 0)
        goto LABEL_17;
    }
    else if ((a2 & 0x100) == 0)
    {
LABEL_17:
      if ((a2 & 0x80) == 0)
        goto LABEL_19;
      goto LABEL_18;
    }
LABEL_16:
    result |= 1uLL;
    goto LABEL_17;
  }
  if ((a1 & 1) != 0)
  {
    if ((~a2 & 0x140) != 0)
    {
      if ((a2 & 0x80) == 0)
        goto LABEL_8;
LABEL_14:
      result = 44;
LABEL_18:
      result |= 2uLL;
LABEL_19:
      if ((a3 & 1) == 0)
        return result;
      return result | 0x10;
    }
LABEL_15:
    result = 44;
    goto LABEL_16;
  }
  if ((a2 & 0x100) != 0)
    goto LABEL_15;
  if ((a2 & 0x80) != 0)
    goto LABEL_14;
LABEL_8:
  result = 44;
  if ((a3 & 1) != 0)
    return result | 0x10;
  return result;
}

int *sub_23ADAECC0(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  void *v15;
  void *v16;
  uint64_t v17;
  char v18;
  id v19;
  id v20;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  int v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void *v45;
  id v46;

  v45 = a2;
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)a1;
  v14 = *(_BYTE *)(a1 + 8);
  v46 = sub_23AA96E5C(*(_QWORD *)a1, v14, a3);
  v15 = sub_23AA96FFC(v13, v14, a4, a5);
  if (!v5)
  {
    v43 = v12;
    v44 = a4;
    v16 = v45;
    v17 = *(_QWORD *)(a1 + 16);
    v18 = *(_BYTE *)(a1 + 24);
    v19 = v15;
    v20 = sub_23AA96E5C(v17, v18, a3 & 1);
    v22 = sub_23AA96FFC(v17, v18, v44, a5);
    v42 = 0;
    v24 = *(_QWORD *)(a1 + 32);
    v23 = *(_QWORD *)(a1 + 40);
    v25 = v10[10];
    v26 = (uint64_t)v43;
    v27 = (uint64_t)&v43[v25];
    v28 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for VFSItem(0) + 28));
    sub_23AA9BA80((uint64_t)v28, v27);
    v41 = v20;
    *(_QWORD *)v26 = v20;
    *(_QWORD *)(v26 + 8) = v24;
    v29 = v26;
    *(_QWORD *)(v26 + 16) = v23;
    v30 = qword_2542E1790;
    v31 = v22;
    swift_bridgeObjectRetain();
    if (v30 != -1)
      swift_once();
    v32 = v46;
    v10 = (int *)sub_23AA976F8(v46, v16, (id *)v26, qword_2542EDD00, 0);
    sub_23AA8A05C(v29, (uint64_t *)&unk_2542E1E00);
    v33 = v19;
    objc_msgSend(v10, sel_setFormerIdentifier_, v19);

    objc_msgSend(v10, sel_setParentFormerIdentifier_, v31);
    v34 = v31;

    v35 = *v28;
    objc_msgSend(v10, sel_isExcludedFromSync);
    v36 = *((unsigned __int16 *)v28 + 5);
    v37 = objc_msgSend(v16, sel_supportsSyncingTrash);
    if ((*MEMORY[0x24BDC8210] & 0xFFFFFFFFFFFFFFD3) != 0)
    {
      v38 = *MEMORY[0x24BDC8210] | 0x2CLL;
      if (v35 == 1)
      {
        v39 = v41;
        if ((~v36 & 0x140) != 0)
        {
LABEL_16:
          if ((v36 & 0x80) == 0)
            goto LABEL_18;
          goto LABEL_17;
        }
      }
      else
      {
        v39 = v41;
        if ((v36 & 0x100) == 0)
          goto LABEL_16;
      }
LABEL_15:
      v38 |= 1uLL;
      goto LABEL_16;
    }
    if (v35 == 1)
    {
      v39 = v41;
      if ((~v36 & 0x140) == 0)
      {
LABEL_13:
        v38 = 44;
        goto LABEL_15;
      }
    }
    else
    {
      v39 = v41;
      if ((v36 & 0x100) != 0)
        goto LABEL_13;
    }
    v38 = 44;
    if ((v36 & 0x80) == 0)
    {
      if ((v37 & 1) == 0)
        goto LABEL_20;
      goto LABEL_19;
    }
LABEL_17:
    v38 |= 2uLL;
LABEL_18:
    if (!v37)
    {
LABEL_20:
      objc_msgSend(v10, sel_setCapabilities_, v38);
      swift_bridgeObjectRelease();

      return v10;
    }
LABEL_19:
    v38 |= 0x10uLL;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();

  return v10;
}

unint64_t sub_23ADAEFF0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  char isEscapingClosureAtFileLocation;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t aBlock;
  unint64_t v18;
  id (*v19)(uint64_t, void *);
  void *v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_23ADAFFEC;
  *(_QWORD *)(v7 + 24) = v6;
  v21 = sub_23AA698D4;
  v22 = v7;
  aBlock = MEMORY[0x24BDAC760];
  v18 = 1107296256;
  v19 = sub_23AA9432C;
  v20 = &block_descriptor_14;
  v8 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v9 = objc_msgSend(a3, sel_fetchSwift_error_, v8, &aBlock);
  _Block_release(v8);
  v10 = (id)aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (v9)
  {
    v12 = 0xA3A6E616C70;
    aBlock = 0xA3A6E616C70;
    v18 = 0xE600000000000000;
    if (objc_msgSend(v9, sel_next))
    {
      do
      {
        v13 = (void *)MEMORY[0x23B8601A8]();
        v14 = objc_msgSend(v9, sel_stringAtIndex_, 3, 538976288, 0xE400000000000000);
        sub_23B1C63E0();

        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        objc_autoreleasePoolPop(v13);
      }
      while ((objc_msgSend(v9, sel_next) & 1) != 0);
      swift_release();

      return aBlock;
    }
    else
    {
      swift_release();

    }
  }
  else
  {
    v15 = (void *)sub_23B1C587C();

    swift_willThrow();
    swift_release();
    return 0xD000000000000016;
  }
  return v12;
}

unint64_t sub_23ADAF2A4()
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0xD000000000000013;
}

uint64_t sub_23ADAF320()
{
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t (*sub_23ADAF408())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

id sub_23ADAF450()
{
  char *v0;
  unint64_t *v1;
  char *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  unsigned int v7;
  unint64_t v8;
  id v9;
  signed int v10;
  objc_super v12;

  v1 = (unint64_t *)&v0[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics];
  *(_QWORD *)&v0[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics] = 0;
  v2 = v0;
  if (!os_variant_has_internal_content())
    goto LABEL_5;
  v3 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v4 = (void *)sub_23B1C63BC();
  v5 = objc_msgSend(v3, sel_initWithSuiteName_, v4);

  if (!v5)
    goto LABEL_5;
  v6 = (void *)sub_23B1C63BC();
  v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);

  if (v7)
    v8 = sub_23AAEC080(MEMORY[0x24BEE4AF8]);
  else
LABEL_5:
    v8 = 0;
  swift_beginAccess();
  *v1 = v8;
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  v10 = objc_msgSend(v9, sel_sqlDatabaseStatementWarnTime);

  *(_QWORD *)&v2[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_maxQueryExecutionTime] = v10;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for PQLConnectionWithStatistics();
  return objc_msgSendSuper2(&v12, sel_init);
}

void sub_23ADAF600(char a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  char *v22;
  void *v23;

  if ((a1 & 1) == 0
    || (v2 = &v1[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics],
        swift_beginAccess(),
        (v3 = *(_QWORD *)v2) == 0))
  {
LABEL_27:
    swift_beginAccess();
    swift_bridgeObjectRetain();
    return;
  }
  v22 = v2;
  v23 = v1;
  *(_QWORD *)v2 = 0;
  v4 = v3 + 64;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v3 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v8)
      goto LABEL_26;
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v8)
        goto LABEL_26;
      v14 = *(_QWORD *)(v4 + 8 * v9);
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v8)
          goto LABEL_26;
        v14 = *(_QWORD *)(v4 + 8 * v9);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v12);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(void **)(*(_QWORD *)(v3 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    v20 = v19;
    v21 = objc_msgSend(v20, sel_queryPlan);
    if (v21)
    {
      v10 = v21;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23ADAEFF0(v18, v17, v23);
      swift_bridgeObjectRelease();
      v10 = (void *)sub_23B1C63BC();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_setQueryPlan_, v10);
    }

  }
  v15 = v13 + 3;
  if (v15 >= v8)
  {
LABEL_26:
    swift_release();
    *(_QWORD *)v22 = v3;
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v8)
      goto LABEL_26;
    v14 = *(_QWORD *)(v4 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
}

const char *sub_23ADAF848(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  const char *result;
  double v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  uint64_t (*v34)();
  double *v35;
  char isUniquelyReferenced_nonNull_native;
  sqlite3_stmt *v37;
  int v38;
  int v39;
  int v40;
  int v41;
  char *v42;
  int v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD v52[3];
  uint64_t v53;
  double v54;
  double v55;
  char *v56;
  sqlite3_stmt *v57;
  id v58;
  uint64_t v59[4];
  double v60;

  v58 = a1;
  v5 = sub_23B1C5E4C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a2, sel_executionTime);
  v10 = v9;
  objc_msgSend(a2, sel_preparationTime);
  v12 = v11;
  v57 = (sqlite3_stmt *)objc_msgSend(a2, sel_stmt);
  result = sqlite3_sql(v57);
  if (!result)
    goto LABEL_27;
  v14 = v10 + v12;
  v15 = sub_23B1C650C();
  v17 = v16;
  v18 = (uint64_t *)(a3 + OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics);
  swift_beginAccess();
  v19 = *v18;
  if (*v18)
  {
    if (*(_QWORD *)(v19 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_23AAAF4C4(v15, v17);
      if ((v21 & 1) != 0)
      {
        v22 = *(id *)(*(_QWORD *)(v19 + 56) + 8 * v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = (const char *)objc_msgSend(v22, sel_count);
        if (!__OFADD__(result, 1))
        {
          objc_msgSend(v22, sel_setCount_, result + 1);
          objc_msgSend(v22, sel_cumulatedTime);
          objc_msgSend(v22, sel_setCumulatedTime_, v14 + v23);
          objc_msgSend(v22, sel_minTime);
          if (v14 < v24)
            objc_msgSend(v22, sel_setMinTime_, v10 + v12);
          objc_msgSend(v22, sel_maxTime);
          if (v25 < v14)
            objc_msgSend(v22, sel_setMaxTime_, v10 + v12);
          objc_msgSend(v22, sel_cumulatedTime);
          v27 = v26;
          v28 = objc_msgSend(v22, sel_count);
          v29 = (v14 - v27 / (double)(uint64_t)v28) * (v14 - v27 / (double)(uint64_t)v28);
          objc_msgSend(v22, sel_cumulatedSquareDiffFromMean);
          objc_msgSend(v22, sel_setCumulatedSquareDiffFromMean_, v30 + v29);
LABEL_15:

          goto LABEL_16;
        }
        __break(1u);
LABEL_27:
        __break(1u);
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v56 = v8;
    v31 = v6;
    v32 = v5;
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC8308]), sel_initWithMinTime_maxTime_cumulatedTime_cumulatedSquareDiffFromMean_count_queryPlan_, 1, 0, v10 + v12, v10 + v12, v10 + v12, 0.0);
    v34 = sub_23ADAF408();
    if (*(_QWORD *)v33)
    {
      v35 = v33;
      swift_bridgeObjectRetain();
      v22 = v22;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v60 = *v35;
      *v35 = -0.0;
      sub_23AD2681C((uint64_t)v22, v15, v17, isUniquelyReferenced_nonNull_native);
      *v35 = v60;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    ((void (*)(uint64_t *, _QWORD))v34)(v59, 0);
    v5 = v32;
    v6 = v31;
    v8 = v56;
    goto LABEL_15;
  }
LABEL_16:
  if ((double)*(uint64_t *)(a3 + OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_maxQueryExecutionTime) / 1000.0 >= v14 * 1000.0
    || (sub_23B1C656C() & 1) != 0
    || (sub_23B1C656C() & 1) != 0
    || (sub_23B1C656C() & 1) != 0
    || (sub_23B1C656C() & 1) != 0)
  {
    return (const char *)swift_bridgeObjectRelease();
  }
  v56 = (char *)v5;
  v55 = COERCE_DOUBLE(objc_msgSend(a2, sel_returnedRows));
  v37 = v57;
  v53 = sqlite3_column_count(v57);
  v38 = sqlite3_bind_parameter_count(v37);
  v39 = sqlite3_stmt_status(v37, 4, 0);
  v54 = COERCE_DOUBLE(objc_msgSend(v58, sel_changes));
  v40 = sqlite3_stmt_status(v37, 1, 0);
  v41 = sqlite3_stmt_status(v37, 2, 0);
  v42 = v8;
  v43 = sqlite3_stmt_status(v37, 3, 0);
  v44 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  swift_bridgeObjectRetain();
  v45 = sub_23B1C5E40();
  v46 = sub_23B1C6A94();
  LODWORD(v58) = v46;
  if (os_log_type_enabled(v45, v46))
  {
    v57 = (sqlite3_stmt *)v43;
    v52[1] = v40;
    v52[2] = v41;
    v52[0] = v39;
    *(_QWORD *)&v47 = (int)v53;
    v48 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v59[0] = v49;
    *(_DWORD *)v48 = 136448514;
    swift_bridgeObjectRetain();
    v60 = COERCE_DOUBLE(sub_23AABEC68(v15, v17, v59));
    sub_23B1C6CBC();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v48 + 12) = 2048;
    *(_QWORD *)&v60 = v38;
    sub_23B1C6CBC();
    *(_WORD *)(v48 + 22) = 2048;
    v60 = v47;
    sub_23B1C6CBC();
    *(_WORD *)(v48 + 32) = 2048;
    v60 = v55;
    sub_23B1C6CBC();
    *(_WORD *)(v48 + 42) = 2048;
    v60 = v54;
    sub_23B1C6CBC();
    *(_WORD *)(v48 + 52) = 2048;
    v60 = *(double *)v52;
    sub_23B1C6CBC();
    *(_WORD *)(v48 + 62) = 2048;
    v60 = v10;
    sub_23B1C6CBC();
    *(_WORD *)(v48 + 72) = 2048;
    v60 = v12;
    sub_23B1C6CBC();
    *(_WORD *)(v48 + 82) = 2048;
    v60 = v10 + v12;
    sub_23B1C6CBC();
    *(_WORD *)(v48 + 92) = 2082;
    v50 = sub_23ADAF320();
    v60 = COERCE_DOUBLE(sub_23AABEC68(v50, v51, v59));
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v45, (os_log_type_t)v58, "🐢 Possible slow statement on %{public}s:\n  binds:    %ld\n  columns:  %ld\n  rows:     %ld\n  changes:  %ld\n  vm steps: %ld\n  execution time: %fs preparation time: %fs total time: %fs\n  warning: %{public}s", (uint8_t *)v48, 0x66u);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v49, -1, -1);
    MEMORY[0x23B8614BC](v48, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (const char *)(*(uint64_t (**)(char *, char *))(v6 + 8))(v42, v56);
}

id sub_23ADAFF68()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PQLConnectionWithStatistics();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PQLConnectionWithStatistics()
{
  return objc_opt_self();
}

uint64_t sub_23ADAFFC8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_23ADAFFEC()
{
  return sub_23ADAF2A4();
}

uint64_t sub_23ADAFFF4()
{
  return swift_deallocObject();
}

uint64_t sub_23ADB0004()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23ADB0098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v4 = v3;
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8]();
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 16) = v9;
  (*(void (**)(uint64_t))(*(_QWORD *)(v12 + 104) + 8))(v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 136), v11, v7);
  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  return v4;
}

uint64_t *sub_23ADB0144()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 136));
  return v0;
}

uint64_t sub_23ADB0190@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 136);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t (*sub_23ADB01F4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23ADB023C;
}

uint64_t sub_23ADB023C(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    *(_BYTE *)(*(_QWORD *)(a1 + 24) + 40) = 1;
  return result;
}

uint64_t sub_23ADB0270()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD v28[6];
  unint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = *v0;
  v3 = sub_23B1C5E4C();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v2 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v0 + 40) == 1)
  {
    v28[2] = v10;
    v28[3] = result;
    *((_BYTE *)v0 + 40) = 0;
    sub_23B1C57B0();
    swift_allocObject();
    v13 = sub_23B1C57A4();
    sub_23B1C578C();
    v14 = *v1;
    v15 = (char *)v1 + *(_QWORD *)(*v1 + 136);
    swift_beginAccess();
    (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(v14 + 80) - 8) + 16))(v12, v15);
    v28[4] = v13;
    v16 = sub_23B1C5798();
    v18 = v17;
    v28[1] = v6;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    v28[0] = v28;
    v19 = v1[2];
    MEMORY[0x24BDAC7A8](v1[3]);
    v27 = (_QWORD *)v18;
    v28[5] = 0x656372756F736572;
    v29 = 0xEA00000000002F73;
    v20 = sub_23B1C64F4();
    v21 = v29;
    MEMORY[0x24BDAC7A8](v20);
    v28[-4] = v19;
    v28[-3] = v22;
    v23 = v22;
    v26 = v21;
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADB1194);
    v24 = v19 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
    swift_beginAccess();
    v25 = MEMORY[0x24BDAC7A8](*(unsigned int *)(v24 + 12));
    v27 = &v28[-4];
    LOBYTE(v30) = 1;
    result = sub_23B0E1010(v25, v23, v21, 2097665, 0x180u, 0, (uint64_t)&v30, (uint64_t)sub_23ADB11C8, (uint64_t)&v28[-4]);
    if ((v30 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      return sub_23AAAE53C(v16, v18);
    }
  }
  return result;
}

uint64_t sub_23ADB0844()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  _QWORD v18[6];
  char v19[16];
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v1 = v0;
  v2 = *v0;
  v3 = sub_23B1C5E4C();
  v18[4] = *(_QWORD *)(v3 - 8);
  v18[5] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v18[3] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v2 + 80);
  v6 = sub_23B1C6C98();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v18 - v9;
  v11 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v0[3];
  v20 = v5;
  v21 = *(_OWORD *)(v2 + 88);
  v22 = *(_QWORD *)(v2 + 104);
  v18[2] = v14;
  sub_23B1AA8DC((uint64_t)sub_23ADB1160, (uint64_t)v19, v5, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v5) == 1)
  {
    v15 = *v0;
    v16 = (char *)v0 + *(_QWORD *)(*v0 + 136);
    swift_beginAccess();
    (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(v15 + 80) - 8) + 16))(v13, v16);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, v5);
  }
  sub_23ADB10EC((uint64_t)v13);
  result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v5);
  *((_BYTE *)v1 + 40) = 0;
  return result;
}

uint64_t sub_23ADB0C04()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[3];

  v1 = *v0;
  v2 = sub_23B1C5E4C();
  v9[1] = *(_QWORD *)(v2 - 8);
  v9[2] = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1AAA50();
  (*(void (**)(uint64_t))(*(_QWORD *)(v1 + 104) + 8))(v4);
  sub_23ADB10EC((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_23ADB0EF0()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 40) = 1;
}

void sub_23ADB0EFC(uint64_t a1)
{
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1578]), sel_initWithFileDescriptor_closeOnDealloc_, a1, 0);
  sub_23ADB10A8();
  sub_23B1C6A64();

}

void sub_23ADB0F88(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1578]), sel_initWithFileDescriptor_closeOnDealloc_, a1, 0);
  v3 = sub_23B1C6A70();
  if (!v1)
  {
    if (v4 >> 60 == 15)
      v5 = 0;
    else
      v5 = v3;
    if (v4 >> 60 == 15)
      v6 = 0xC000000000000000;
    else
      v6 = v4;
    sub_23B1C5780();
    swift_allocObject();
    sub_23B1C5774();
    sub_23B1C5768();
    swift_release();
    sub_23AAAE53C(v5, v6);
  }

}

uint64_t sub_23ADB1078()
{
  sub_23ADB0144();
  return swift_deallocClassInstance();
}

void type metadata accessor for WharfResource()
{
  JUMPOUT(0x23B861318);
}

unint64_t sub_23ADB10A8()
{
  unint64_t result;

  result = qword_2542E2390[0];
  if (!qword_2542E2390[0])
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, qword_2542E2390);
  }
  return result;
}

uint64_t sub_23ADB10EC(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;

  v3 = *(_QWORD *)v1;
  v4 = &v1[*(_QWORD *)(*(_QWORD *)v1 + 136)];
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 24))(v4, a1);
  result = swift_endAccess();
  v1[40] = 1;
  return result;
}

void sub_23ADB1160(uint64_t a1)
{
  sub_23ADB0F88(a1);
}

void sub_23ADB117C(uint64_t a1)
{
  sub_23ADB0EFC(a1);
}

uint64_t sub_23ADB1194@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1B14D0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23ADB11B0@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23B1B14E4(v1, a1);
}

uint64_t sub_23ADB11C8(uint64_t a1)
{
  uint64_t v1;

  return sub_23B1AD4AC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_23ADB11E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_23AAABA5C(*a1);
  v5 = v4;
  if (v3 == sub_23AAABA5C(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_23ADB1268()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23B1C74A8();
  sub_23AAABA5C(v1);
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  return sub_23B1C74E4();
}

uint64_t sub_23ADB12C8()
{
  unsigned __int8 *v0;

  sub_23AAABA5C(*v0);
  sub_23B1C64A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23ADB1308()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_23B1C74A8();
  sub_23AAABA5C(v1);
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  return sub_23B1C74E4();
}

uint64_t sub_23ADB1364@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23ADB277C();
  *a1 = result;
  return result;
}

uint64_t sub_23ADB1390@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_23AAABA5C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_23ADB13B8(_QWORD *a1@<X8>)
{
  *a1 = &unk_250BDC818;
}

uint64_t sub_23ADB13C8()
{
  unsigned __int8 *v0;

  return sub_23AAABA5C(*v0);
}

void sub_23ADB13D0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23ADB140C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[15];

  v1 = *v0;
  v6[3] = MEMORY[0x24BEE1E88];
  v6[0] = v1;
  v2 = sub_23AA94C90((uint64_t)v6);
  v4 = v3;
  sub_23AA94C08((uint64_t)v6);
  if (!v4)
  {
    sub_23B1C704C();
    __break(1u);
    JUMPOUT(0x23ADB173CLL);
  }
  return v2;
}

void sub_23ADB1868(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  id v50;
  id v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[3];
  char v58;
  _QWORD v59[2];
  _QWORD v60[2];
  _QWORD v61[2];
  _QWORD v62[2];
  char v63;
  char v64;
  _QWORD v65[2];
  char v66;
  _QWORD v67[2];
  _QWORD v68[2];
  char v69;
  char v70;
  char v71;
  void *v72;
  void *v73;
  unsigned __int8 v74;
  unsigned __int8 v75;
  uint64_t v76;
  int v77;
  int v78;

  LOBYTE(v68[0]) = 0;
  type metadata accessor for NSFileProviderItemCapabilities(0);
  v8 = v7;
  sub_23AA84870(a1, v7);
  sub_23AA94830((uint64_t)v68, v8, a1, v8, a2);
  if (!v3)
  {
    v9 = v76;
    LOBYTE(v68[0]) = 1;
    v10 = MEMORY[0x24BEE1328];
    sub_23AA84870(a1, MEMORY[0x24BEE1328]);
    sub_23AA94830((uint64_t)v68, v10, a1, v10, a2);
    LODWORD(v10) = v75;
    LOBYTE(v68[0]) = 2;
    sub_23AA94830((uint64_t)v68, MEMORY[0x24BEE1328], a1, MEMORY[0x24BEE1328], a2);
    v78 = v10;
    v11 = v74;
    LOBYTE(v68[0]) = 3;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7700);
    sub_23AA84870(a1, v12);
    sub_23AA94830((uint64_t)v68, v12, a1, v12, a2);
    v77 = v11;
    v13 = v73;
    LOBYTE(v68[0]) = 4;
    sub_23AA94830((uint64_t)v68, v12, a1, v12, a2);
    v14 = v72;
    LOBYTE(v68[0]) = 6;
    sub_23AA94830((uint64_t)v68, MEMORY[0x24BEE1328], a1, MEMORY[0x24BEE1328], a2);
    v51 = v13;
    LOBYTE(v13) = v71;
    LOBYTE(v68[0]) = 7;
    sub_23AA94830((uint64_t)v68, MEMORY[0x24BEE1328], a1, MEMORY[0x24BEE1328], a2);
    v49 = (char)v13;
    v50 = v14;
    LOBYTE(v14) = v70;
    LOBYTE(v68[0]) = 8;
    sub_23AA94830((uint64_t)v68, MEMORY[0x24BEE1328], a1, MEMORY[0x24BEE1328], a2);
    v48 = (char)v14;
    LOBYTE(v13) = v69;
    LOBYTE(v67[0]) = 9;
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E7460);
    sub_23AA84870(a1, v15);
    sub_23AA94830((uint64_t)v67, v15, a1, v15, a2);
    v45 = v68[0];
    v46 = v15;
    v47 = v68[1];
    LOBYTE(v65[0]) = 10;
    sub_23AA94830((uint64_t)v65, v15, a1, v15, a2);
    v42 = (char)v13;
    v43 = v67[0];
    v44 = v67[1];
    LOBYTE(v65[0]) = 11;
    sub_23AA94830((uint64_t)v65, MEMORY[0x24BEE1328], a1, MEMORY[0x24BEE1328], a2);
    v41 = v66;
    LOBYTE(v62[0]) = 12;
    sub_23AA94830((uint64_t)v62, v46, a1, v46, a2);
    v39 = v65[0];
    v40 = v65[1];
    LOBYTE(v62[0]) = 13;
    sub_23AA94830((uint64_t)v62, MEMORY[0x24BEE1328], a1, MEMORY[0x24BEE1328], a2);
    v38 = v64;
    LOBYTE(v62[0]) = 14;
    sub_23AA94830((uint64_t)v62, MEMORY[0x24BEE1328], a1, MEMORY[0x24BEE1328], a2);
    v37 = v63;
    LOBYTE(v61[0]) = 15;
    sub_23AA94830((uint64_t)v61, v46, a1, v46, a2);
    v35 = v62[0];
    v36 = v62[1];
    LOBYTE(v60[0]) = 16;
    sub_23AA94830((uint64_t)v60, v46, a1, v46, a2);
    v16 = v61[0];
    v34 = v61[1];
    LOBYTE(v59[0]) = 17;
    sub_23AA94830((uint64_t)v59, v46, a1, v46, a2);
    v32 = v60[0];
    v33 = v60[1];
    LOBYTE(v57[0]) = 18;
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E72C8);
    sub_23AA84870(a1, v17);
    sub_23AA94830((uint64_t)v57, v17, a1, v17, a2);
    v30 = v59[0];
    v31 = v59[1];
    LOBYTE(v57[0]) = 19;
    sub_23AA94830((uint64_t)v57, MEMORY[0x24BEE1328], a1, MEMORY[0x24BEE1328], a2);
    v29 = v58;
    LOBYTE(v57[0]) = 20;
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E76D0);
    sub_23AA84870(a1, v18);
    sub_23AA94830((uint64_t)v57, v18, a1, v18, a2);
    v28 = v57[2];
    LOBYTE(v53) = 21;
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E76A0);
    sub_23AA84870(a1, v19);
    sub_23AA94830((uint64_t)&v53, v19, a1, v19, a2);
    v26 = v57[0];
    v27 = v57[1];
    LOBYTE(v53) = 22;
    type metadata accessor for NSFileProviderContentPolicy(0);
    v21 = v20;
    sub_23AA84870(a1, v20);
    sub_23AA94830((uint64_t)&v53, v21, a1, v21, a2);
    v24 = v56;
    LOBYTE(v53) = 23;
    sub_23AA94830((uint64_t)&v53, v21, a1, v21, a2);
    v25 = v55;
    LOBYTE(v53) = 24;
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E76C0);
    sub_23AA84870(a1, v22);
    sub_23AA94830((uint64_t)&v53, v22, a1, v22, a2);
    v23 = v54;
    v52 = 25;
    sub_23AA94830((uint64_t)&v52, v15, a1, v15, a2);
    *(_QWORD *)a3 = v9;
    *(_BYTE *)(a3 + 8) = v78;
    *(_BYTE *)(a3 + 9) = v77;
    *(_QWORD *)(a3 + 16) = v51;
    *(_QWORD *)(a3 + 24) = v50;
    *(_BYTE *)(a3 + 32) = v49;
    *(_BYTE *)(a3 + 33) = v48;
    *(_BYTE *)(a3 + 34) = v42;
    *(_QWORD *)(a3 + 40) = v45;
    *(_QWORD *)(a3 + 48) = v47;
    *(_QWORD *)(a3 + 56) = v43;
    *(_QWORD *)(a3 + 64) = v44;
    *(_BYTE *)(a3 + 72) = v41;
    *(_QWORD *)(a3 + 80) = v39;
    *(_QWORD *)(a3 + 88) = v40;
    *(_QWORD *)(a3 + 96) = 0;
    *(_BYTE *)(a3 + 104) = v38;
    *(_BYTE *)(a3 + 105) = v37;
    *(_QWORD *)(a3 + 112) = v35;
    *(_QWORD *)(a3 + 120) = v36;
    *(_QWORD *)(a3 + 128) = v16;
    *(_QWORD *)(a3 + 136) = v34;
    *(_QWORD *)(a3 + 144) = v32;
    *(_QWORD *)(a3 + 152) = v33;
    *(_QWORD *)(a3 + 160) = v30;
    *(_QWORD *)(a3 + 168) = v31;
    *(_BYTE *)(a3 + 176) = v29;
    *(_QWORD *)(a3 + 184) = v28;
    *(_QWORD *)(a3 + 192) = v26;
    *(_QWORD *)(a3 + 200) = v27;
    *(_QWORD *)(a3 + 208) = v24;
    *(_QWORD *)(a3 + 216) = v25;
    *(_QWORD *)(a3 + 224) = v23;
    *(_OWORD *)(a3 + 232) = v53;
  }
}

void sub_23ADB230C(char *a1)
{
  sub_23ADB13D0(*a1);
}

void sub_23ADB2380(char *a1)
{
  sub_23AAAC300(*a1);
}

double sub_23ADB2398@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  sub_23ADB1868(a1, a2, (uint64_t)v13);
  if (!v3)
  {
    v6 = v25;
    *(_OWORD *)(a3 + 192) = v24;
    *(_OWORD *)(a3 + 208) = v6;
    *(_OWORD *)(a3 + 224) = v26;
    *(_QWORD *)(a3 + 240) = v27;
    v7 = v21;
    *(_OWORD *)(a3 + 128) = v20;
    *(_OWORD *)(a3 + 144) = v7;
    v8 = v23;
    *(_OWORD *)(a3 + 160) = v22;
    *(_OWORD *)(a3 + 176) = v8;
    v9 = v17;
    *(_OWORD *)(a3 + 64) = v16;
    *(_OWORD *)(a3 + 80) = v9;
    v10 = v19;
    *(_OWORD *)(a3 + 96) = v18;
    *(_OWORD *)(a3 + 112) = v10;
    v11 = v13[1];
    *(_OWORD *)a3 = v13[0];
    *(_OWORD *)(a3 + 16) = v11;
    result = *(double *)&v14;
    v12 = v15;
    *(_OWORD *)(a3 + 32) = v14;
    *(_OWORD *)(a3 + 48) = v12;
  }
  return result;
}

unint64_t sub_23ADB242C(uint64_t a1)
{
  unint64_t result;

  result = sub_23ADB2450();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23ADB2450()
{
  unint64_t result;

  result = qword_2569E58B0;
  if (!qword_2569E58B0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8C78, &type metadata for ItemNonSyncableAttributes);
    atomic_store(result, (unint64_t *)&qword_2569E58B0);
  }
  return result;
}

unint64_t sub_23ADB2498()
{
  unint64_t result;

  result = qword_2569E58B8;
  if (!qword_2569E58B8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8DA0, &_s9SQLFieldsON_2);
    atomic_store(result, (unint64_t *)&qword_2569E58B8);
  }
  return result;
}

uint64_t sub_23ADB24DC()
{
  return sub_23ADB2680(qword_2569E58C0, MEMORY[0x24BEE12C8]);
}

uint64_t _s9SQLFieldsOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9SQLFieldsOwst_2(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_23ADB25DC + 4 * byte_23B1D8C57[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_23ADB2610 + 4 * byte_23B1D8C52[v4]))();
}

uint64_t sub_23ADB2610(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23ADB2618(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23ADB2620);
  return result;
}

uint64_t sub_23ADB262C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23ADB2634);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_23ADB2638(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23ADB2640(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9SQLFieldsOMa_3()
{
  return &_s9SQLFieldsON_2;
}

uint64_t sub_23ADB265C()
{
  return sub_23ADB2680(&qword_2569E58F8, MEMORY[0x24BEE12E0]);
}

uint64_t sub_23ADB2680(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E54D8);
    result = MEMORY[0x23B8613CC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23ADB26C8()
{
  unint64_t result;

  result = qword_2542E75F8[0];
  if (!qword_2542E75F8[0])
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8D78, &_s9SQLFieldsON_2);
    atomic_store(result, qword_2542E75F8);
  }
  return result;
}

unint64_t sub_23ADB270C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23ADB2738();
  result = sub_23AAACAA0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_23ADB2738()
{
  unint64_t result;

  result = qword_2569E5900;
  if (!qword_2569E5900)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8CA0, &_s9SQLFieldsON_2);
    atomic_store(result, (unint64_t *)&qword_2569E5900);
  }
  return result;
}

uint64_t sub_23ADB277C()
{
  unint64_t v0;

  v0 = sub_23B1C73C4();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A)
    return 26;
  else
    return v0;
}

uint64_t sub_23ADB27CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23ADB2814(unsigned __int8 a1, id a2)
{
  uint64_t *v2;
  uint64_t v4;
  int v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v10;
  uint64_t (*v11)(id, uint64_t, uint64_t);
  uint64_t v12;
  id v13;
  uint64_t v14;

  v4 = *v2;
  v5 = a1 >> 5;
  if (v5 == 4)
  {
    if (a1 == 129)
    {
      v7 = *(void **)((char *)v2 + *(_QWORD *)(v4 + 544));
      if (v7)
        v8 = objc_msgSend(v7, sel_version);
      else
        v8 = 0;
      v6 = objc_msgSend(a2, sel_bindLongParameter_, v8);
      goto LABEL_13;
    }
    return sub_23B06BF54(a1, (uint64_t)a2);
  }
  if (v5 != 2)
    return sub_23B06BF54(a1, (uint64_t)a2);
  if (a1 == 66)
  {
    swift_getAssociatedTypeWitness();
    v10 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
    v11 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 32);
    v12 = swift_checkMetadataState();
    return v11(a2, v12, v10);
  }
  if (a1 != 67)
    return sub_23B06BF54(a1, (uint64_t)a2);
  v6 = objc_msgSend(a2, sel_bindUnsignedLongParameter_, *(uint64_t *)((char *)v2 + *(_QWORD *)(v4 + 592)));
LABEL_13:
  v13 = v6;
  v14 = sub_23B1C63E0();

  return v14;
}

void sub_23ADB298C(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  void (*v15)(id, uint64_t, uint64_t, uint64_t);

  v8 = a2 >> 5;
  if (v8 == 4)
  {
    if (a2 == 129)
    {
      v10 = a1;
      if ((objc_msgSend(v10, sel_isNullAtIndex_, a3) & 1) != 0
        || (v11 = objc_msgSend(v10, sel_integerAtIndex_, a3)) == 0)
      {

        *(_OWORD *)a4 = 0u;
        *(_OWORD *)(a4 + 16) = 0u;
      }
      else
      {
        v12 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v11);

        *(_QWORD *)(a4 + 24) = sub_23AD2AE58();
        *(_QWORD *)a4 = v12;
      }
      return;
    }
LABEL_10:
    sub_23B06C1BC(a1, a2, a3, a4);
    return;
  }
  if (v8 != 2)
    goto LABEL_10;
  if (a2 != 66)
  {
    if (a2 == 67)
    {
      v9 = objc_msgSend(a1, sel_unsignedLongAtIndex_, a3);
      *(_QWORD *)(a4 + 24) = MEMORY[0x24BEE1E88];
      *(_QWORD *)a4 = v9;
      return;
    }
    goto LABEL_10;
  }
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v15 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v14 + 16);
  *(_QWORD *)(a4 + 24) = AssociatedTypeWitness;
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
  v15(a1, a3, AssociatedTypeWitness, v14);
  if (v4)
    __swift_deallocate_boxed_opaque_existential_0(a4);
}

void sub_23ADB2B64()
{
  sub_23AAB9B4C();
  type metadata accessor for SQLCodableAccessorWrapper();
}

uint64_t sub_23ADB2BBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[96];

  *(_QWORD *)(v5 - 152) = a1;
  *(_QWORD *)(v5 - 168) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v19[-v6];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = &v19[-v10];
  *(_BYTE *)(v5 - 112) = 66;
  v12 = sub_23AA84870(v1, AssociatedTypeWitness);
  v13 = v1;
  *(_QWORD *)(v5 - 144) = v2;
  v14 = *(_QWORD *)(v5 - 136);
  sub_23AA94830(v5 - 112, v12, v1, AssociatedTypeWitness, v3);
  if (!v14)
  {
    *(_QWORD *)(v5 - 200) = v4;
    *(_QWORD *)(v5 - 192) = v7;
    *(_QWORD *)(v5 - 184) = v9;
    *(_QWORD *)(v5 - 176) = AssociatedTypeWitness;
    *(_QWORD *)(v5 - 136) = v11;
    *(_BYTE *)(v5 - 72) = 67;
    v15 = MEMORY[0x24BEE1E88];
    sub_23AA84870(v1, MEMORY[0x24BEE1E88]);
    sub_23AA94830(v5 - 72, v15, v1, v15, v3);
    v16 = *(_QWORD *)(v5 - 112);
    *(_BYTE *)(v5 - 120) = -127;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5510);
    sub_23AA84870(v13, v17);
    sub_23AA94830(v5 - 120, v17, v13, v17, v3);
    *(_QWORD *)(v5 - 208) = v16;
    sub_23AA84C6C((uint64_t)sub_23AAB9C94, v13, (uint64_t)&_s9SQLFieldsON_1, v3, *(_QWORD *)(v5 - 160), *(_QWORD *)(v5 - 192));
  }
  return v2;
}

void sub_23ADB2EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v0, v1);
  sub_23B06F49C();
}

void sub_23ADB2EEC()
{
  uint64_t v0;

  if (!v0)
    swift_retain();
  swift_release();
  JUMPOUT(0x23ADB2DECLL);
}

uint64_t sub_23ADB2F14(unsigned __int8 *a1, void *a2)
{
  return sub_23ADB2814(*a1, a2);
}

void sub_23ADB2F38(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_23ADB298C(a2, *a1, a3, a4);
}

void sub_23ADB2F50()
{
  sub_23ADB2B64();
}

uint64_t sub_23ADB2F64(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

_QWORD *sub_23ADB2F78(unsigned __int8 a1, id a2)
{
  _QWORD *v2;
  uint64_t v3;
  id v4;
  _QWORD *v5;
  int v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(id, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];

  v4 = a2;
  v5 = (_QWORD *)*v2;
  v6 = a1 >> 5;
  if (v6 == 4)
  {
    if (a1 == 128)
    {
      v14 = *(_QWORD *)((char *)v2 + v5[75]);
      v20[3] = MEMORY[0x24BEE1768];
      v20[0] = v14;
      v2 = (_QWORD *)sub_23AA94C90((uint64_t)v20);
      v4 = v15;
      sub_23AA94C08((uint64_t)v20);
      if (v4)
        return v2;
      LODWORD(v19) = 0;
      v18 = 213;
      sub_23B1C704C();
      __break(1u);
    }
    else
    {
      if (a1 != 129)
      {
LABEL_10:
        v10 = sub_23B06BF54(a1, (uint64_t)a2);
        if (v3)
          return v2;
        return (_QWORD *)v10;
      }
      v8 = *(void **)((char *)v2 + v5[68]);
      if (v8)
      {
        v9 = objc_msgSend(v8, sel_version);
LABEL_17:
        v7 = objc_msgSend(v4, sel_bindLongParameter_, v9, v18, v19);
        goto LABEL_18;
      }
    }
    v9 = 0;
    goto LABEL_17;
  }
  if (v6 != 2)
    goto LABEL_10;
  if (a1 != 66)
  {
    if (a1 == 67)
    {
      v7 = objc_msgSend(a2, sel_bindUnsignedLongParameter_, *(_QWORD *)((char *)v2 + v5[74]));
LABEL_18:
      v16 = v7;
      v2 = (_QWORD *)sub_23B1C63E0();

      return v2;
    }
    goto LABEL_10;
  }
  swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
  v12 = *(uint64_t (**)(id, uint64_t, uint64_t))(v11 + 32);
  v13 = swift_checkMetadataState();
  return (_QWORD *)v12(v4, v13, v11);
}

void sub_23ADB3194(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  void (*v15)(id, uint64_t, uint64_t, uint64_t);

  v8 = a2 >> 5;
  if (v8 == 4)
  {
    if (a2 == 128)
    {
      *(_QWORD *)(a4 + 24) = &type metadata for Fields;
      *(_QWORD *)a4 = objc_msgSend(a1, sel_longAtIndex_, a3);
      return;
    }
    if (a2 != 129)
      goto LABEL_11;
    v10 = a1;
    if ((objc_msgSend(v10, sel_isNullAtIndex_, a3) & 1) != 0
      || (v11 = objc_msgSend(v10, sel_integerAtIndex_, a3)) == 0)
    {

      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
    }
    else
    {
      v12 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v11);

      *(_QWORD *)(a4 + 24) = sub_23AD2AE58();
      *(_QWORD *)a4 = v12;
    }
  }
  else
  {
    if (v8 != 2)
    {
LABEL_11:
      sub_23B06C1BC(a1, a2, a3, a4);
      return;
    }
    if (a2 != 66)
    {
      if (a2 == 67)
      {
        v9 = objc_msgSend(a1, sel_unsignedLongAtIndex_, a3);
        *(_QWORD *)(a4 + 24) = MEMORY[0x24BEE1E88];
        *(_QWORD *)a4 = v9;
        return;
      }
      goto LABEL_11;
    }
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v14 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
    v15 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v14 + 16);
    *(_QWORD *)(a4 + 24) = AssociatedTypeWitness;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
    v15(a1, a3, AssociatedTypeWitness, v14);
    if (v4)
      __swift_deallocate_boxed_opaque_existential_0(a4);
  }
}

void sub_23ADB339C()
{
  sub_23AAB9B4C();
  type metadata accessor for SQLCodableAccessorWrapper();
}

uint64_t sub_23ADB33F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[96];

  *(_QWORD *)(v5 - 160) = a1;
  *(_QWORD *)(v5 - 176) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v20[-v6];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = &v20[-v10];
  *(_BYTE *)(v5 - 112) = 66;
  v12 = sub_23AA84870(v1, AssociatedTypeWitness);
  v13 = v1;
  *(_QWORD *)(v5 - 152) = v2;
  v14 = *(_QWORD *)(v5 - 144);
  sub_23AA94830(v5 - 112, v12, v1, AssociatedTypeWitness, v3);
  if (!v14)
  {
    *(_QWORD *)(v5 - 208) = v4;
    *(_QWORD *)(v5 - 200) = v7;
    *(_QWORD *)(v5 - 192) = v9;
    *(_QWORD *)(v5 - 184) = AssociatedTypeWitness;
    *(_QWORD *)(v5 - 144) = v11;
    *(_BYTE *)(v5 - 72) = 67;
    v15 = MEMORY[0x24BEE1E88];
    sub_23AA84870(v1, MEMORY[0x24BEE1E88]);
    sub_23AA94830(v5 - 72, v15, v1, v15, v3);
    *(_BYTE *)(v5 - 120) = 0x80;
    sub_23AA84870(v1, (uint64_t)&type metadata for Fields);
    sub_23AA94830(v5 - 120, (uint64_t)&type metadata for Fields, v1, (uint64_t)&type metadata for Fields, v3);
    v17 = *(_QWORD *)(v5 - 72);
    *(_BYTE *)(v5 - 128) = -127;
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5510);
    sub_23AA84870(v13, v18);
    sub_23AA94830(v5 - 128, v18, v13, v18, v3);
    v19 = *(_QWORD *)(v5 - 120);
    *(_QWORD *)(v5 - 224) = v17;
    *(_QWORD *)(v5 - 216) = v19;
    sub_23AA84C6C((uint64_t)sub_23AD2AFB4, v13, (uint64_t)&_s9SQLFieldsON_1, v3, *(_QWORD *)(v5 - 168), *(_QWORD *)(v5 - 200));
  }
  return v2;
}

void sub_23ADB3748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 192) + 8))(v0, v1);
  sub_23B06F49C();
}

void sub_23ADB3778()
{
  uint64_t v0;

  if (!v0)
    swift_retain();
  swift_release();
  JUMPOUT(0x23ADB3580);
}

_QWORD *sub_23ADB37A0(unsigned __int8 *a1, void *a2)
{
  return sub_23ADB2F78(*a1, a2);
}

void sub_23ADB37C4(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_23ADB3194(a2, *a1, a3, a4);
}

void sub_23ADB37DC()
{
  sub_23ADB339C();
}

uint64_t sub_23ADB37F0(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

uint64_t sub_23ADB3804(unsigned __int8 a1, id a2)
{
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t (*v6)(id, uint64_t, uint64_t);
  uint64_t v7;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;

  v4 = a1 >> 5;
  if (v4 != 4)
  {
    if (v4 == 2 && a1 == 66)
    {
      swift_getAssociatedTypeWitness();
      v5 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
      v6 = *(uint64_t (**)(id, uint64_t, uint64_t))(v5 + 32);
      v7 = swift_checkMetadataState();
      return v6(a2, v7, v5);
    }
    return sub_23B06BF54(a1, (uint64_t)a2);
  }
  if (a1 != 129)
    return sub_23B06BF54(a1, (uint64_t)a2);
  v9 = *(void **)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 544));
  if (v9)
    v10 = objc_msgSend(v9, sel_version);
  else
    v10 = 0;
  v11 = objc_msgSend(a2, sel_bindLongParameter_, v10);
  v12 = sub_23B1C63E0();

  return v12;
}

void sub_23ADB3954(id a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  void (*v11)(id, uint64_t, uint64_t, uint64_t);
  id v12;
  id v13;
  id v14;

  v8 = a2 >> 5;
  if (v8 != 4)
  {
    if (v8 == 2 && a2 == 66)
    {
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v10 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 40);
      v11 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v10 + 16);
      *(_QWORD *)(a4 + 24) = AssociatedTypeWitness;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)a4);
      v11(a1, a3, AssociatedTypeWitness, v10);
      if (v4)
        __swift_deallocate_boxed_opaque_existential_0(a4);
      return;
    }
LABEL_10:
    sub_23B06C1BC(a1, a2, a3, a4);
    return;
  }
  if (a2 != 129)
    goto LABEL_10;
  v12 = a1;
  if ((objc_msgSend(v12, sel_isNullAtIndex_, a3) & 1) != 0
    || (v13 = objc_msgSend(v12, sel_integerAtIndex_, a3)) == 0)
  {

    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  else
  {
    v14 = objc_msgSend((id)objc_opt_self(), sel_domainVersionWithVersion_, v13);

    *(_QWORD *)(a4 + 24) = sub_23AD2AE58();
    *(_QWORD *)a4 = v14;
  }
}

void sub_23ADB3AFC()
{
  sub_23AAB9B4C();
  type metadata accessor for SQLCodableAccessorWrapper();
}

_BYTE *sub_23ADB3B54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[96];

  *(_QWORD *)(v5 - 168) = a1;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = &v20[-v7];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v12 = &v20[-v11];
  *(_BYTE *)(v5 - 112) = 66;
  v13 = sub_23AA84870(v3, AssociatedTypeWitness);
  *(_QWORD *)(v5 - 152) = v3;
  *(_QWORD *)(v5 - 144) = v2;
  *(_QWORD *)(v5 - 136) = v1;
  v14 = *(_QWORD *)(v5 - 128);
  sub_23AA94830(v5 - 112, v13, v3, AssociatedTypeWitness, v2);
  if (!v14)
  {
    v15 = *(_QWORD *)(v5 - 160);
    *(_QWORD *)(v5 - 184) = AssociatedTypeWitness;
    *(_QWORD *)(v5 - 176) = v12;
    *(_QWORD *)(v5 - 200) = v4;
    *(_QWORD *)(v5 - 192) = v6;
    *(_QWORD *)(v5 - 128) = v10;
    *(_BYTE *)(v5 - 72) = -127;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5510);
    v17 = *(_QWORD *)(v5 - 152);
    v18 = *(_QWORD *)(v5 - 144);
    sub_23AA84870(v17, v16);
    sub_23AA94830(v5 - 72, v16, v17, v16, v18);
    sub_23AA84C6C((uint64_t)sub_23AD2AFB4, v17, (uint64_t)&_s9SQLFieldsON_1, v18, v15, (uint64_t)v8);
  }
  return v8;
}

uint64_t sub_23ADB3E50(unsigned __int8 *a1, void *a2)
{
  return sub_23ADB3804(*a1, a2);
}

void sub_23ADB3E74(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_23ADB3954(a2, *a1, a3, a4);
}

void sub_23ADB3E8C()
{
  sub_23ADB3AFC();
}

uint64_t sub_23ADB3EA0(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

uint64_t sub_23ADB3EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v12 = *(_QWORD *)(a4 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v27 - v17;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v16, 1, v19) == 1)
  {
    v20 = sub_23B1C6C98();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(a1, v20);
    v22 = type metadata accessor for ItemPropagationResult(0, a4, a5, v21);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a6, 1, 1, v22);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    v24(v18, a1, a4);
    v24(v15, (uint64_t)v18, a4);
    v24(a6, (uint64_t)v15, a4);
    v26 = type metadata accessor for ItemPropagationResult(0, a4, a5, v25);
    *(_QWORD *)&a6[*(int *)(v26 + 36)] = a2;
    a6[*(int *)(v26 + 40)] = a3 & 1;
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a6, 0, 1, v26);
  }
}

uint64_t *sub_23ADB4044()
{
  uint64_t *v0;

  v0 = (uint64_t *)sub_23ABD8C28();
  sub_23AAB7948(v0[2]);
  sub_23AAB7948(v0[4]);
  sub_23AAB7948(v0[6]);
  sub_23AAB7948(v0[8]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23AAB7948(v0[15]);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_23ADB40C4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t sub_23ADB40CC(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 112) = result;
  return result;
}

uint64_t sub_23ADB40D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v14;
  _QWORD *v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), _QWORD *);

  v14 = (_QWORD *)*v7;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14[24];
  v15[3] = v14[25];
  v15[4] = a6;
  v15[5] = a7;
  v16 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), _QWORD *))v14[17];
  swift_retain();
  v16(a1, a2, a3, a5, sub_23ADB8BA4, v15);
  return swift_release();
}

uint64_t sub_23ADB4184@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, 1, 1, AssociatedTypeWitness);
}

void sub_23ADB41D8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB4238()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB4298()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB42F8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB4358()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB43B8()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB4418()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB4478()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23ADB44D8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

void sub_23ADB44FC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB455C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB45BC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB461C()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23ADB467C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v0[2] = 0;
  v0[3] = 0;
  sub_23AAB7948(v1);
  v2 = v0[6];
  v0[6] = 0;
  v0[7] = 0;
  return sub_23AAB7948(v2);
}

void sub_23ADB46A0()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB4700()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23ADB4760(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_23ADB4768()
{
  uint64_t *v0;

  return sub_23AFD4D60(*v0);
}

uint64_t sub_23ADB4770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_23AFD5950(a1, a2, a3, *v3);
}

uint64_t sub_23ADB4778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  result = type metadata accessor for ItemPropagationResult(0, a4, a5, v11);
  *(_QWORD *)(a6 + *(int *)(result + 36)) = a2;
  *(_BYTE *)(a6 + *(int *)(result + 40)) = a3;
  return result;
}

uint64_t sub_23ADB47EC(int a1)
{
  uint64_t result;

  result = 1701736302;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x65726F745353442ELL;
      break;
    case 2:
      result = 0x656D75636F44534ELL;
      break;
    case 3:
      result = 0x697461646E756F46;
      break;
    case 4:
      result = 0x65636966664F534DLL;
      break;
    case 5:
      result = 0x6E7953726F6C6F43;
      break;
    case 6:
      result = 0x617469724BLL;
      break;
    case 7:
      result = 0x7363616D45;
      break;
    case 8:
      result = 0x6666457265746641;
      break;
    case 9:
      result = 0x61727473756C6C49;
      break;
    case 10:
      result = 0x706D6574726B6D61;
      break;
    case 11:
      result = 5065046;
      break;
    default:
      type metadata accessor for fpfs_tempfile_pattern_t(0);
      result = sub_23B1C73E8();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_23ADB4970()
{
  int *v0;

  return sub_23ADB47EC(*v0);
}

uint64_t sub_23ADB4978()
{
  sub_23AA7E38C(&qword_2569E5968, (uint64_t (*)(uint64_t))type metadata accessor for fpfs_tempfile_pattern_t, (uint64_t)&unk_23B1CACD8);
  return sub_23B1C66D4();
}

uint64_t sub_23ADB49EC()
{
  sub_23AA7E38C(&qword_2569E5968, (uint64_t (*)(uint64_t))type metadata accessor for fpfs_tempfile_pattern_t, (uint64_t)&unk_23B1CACD8);
  return sub_23B1C6680();
}

uint64_t sub_23ADB4A50()
{
  return swift_retain();
}

unint64_t sub_23ADB4A58(unint64_t a1, char a2)
{
  __CFString *v3;

  if ((a2 & 1) != 0)
    __asm { BR              X9 }
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v3 = resetReason2str(a1);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0xD00000000000001BLL;
}

unint64_t sub_23ADB4C0C()
{
  uint64_t v0;

  return sub_23ADB4A58(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_23ADB4C18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[6];

  v2 = v1;
  MEMORY[0x24BDAC7A8](a1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[1] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v8 = (char *)sub_23ADB4D48 + 4 * word_23B1D8E1C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23ADB4D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t TupleTypeMetadata3;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v8 = sub_23B1C6C98();
  type metadata accessor for JobLockAggregator(255, v1, v3, v9);
  sub_23B1C6C98();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v11 = v4 + *(int *)(TupleTypeMetadata3 + 48);
  if (*(_QWORD *)(v4 + *(int *)(TupleTypeMetadata3 + 64)))
  {
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v1) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v11, v1);
      *(_QWORD *)(v7 - 96) = 0;
      *(_QWORD *)(v7 - 88) = 0xE000000000000000;
      sub_23B1C64F4();
      sub_23B1C7340();
      v15 = *(_QWORD *)(v7 - 96);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v1);
      v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 120) + 8);
      v17 = v4;
      v18 = v0;
      goto LABEL_6;
    }
    v12 = *(_QWORD *)(v7 - 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v2, v4, v0);
    *(_QWORD *)(v7 - 96) = 0;
    *(_QWORD *)(v7 - 88) = 0xE000000000000000;
    v13 = v11;
  }
  else
  {
    v12 = *(_QWORD *)(v7 - 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v2, v4, v0);
    *(_QWORD *)(v7 - 96) = 0;
    *(_QWORD *)(v7 - 88) = 0xE000000000000000;
    v13 = v11;
    sub_23B1C6EFC();
    v14 = *(_QWORD *)(v7 - 88);
    *(_QWORD *)(v7 - 96) = *(_QWORD *)(v7 - 96);
    *(_QWORD *)(v7 - 88) = v14;
  }
  sub_23B1C64F4();
  swift_getAssociatedConformanceWitness();
  sub_23B1C7340();
  v15 = *(_QWORD *)(v7 - 96);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v0);
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v17 = v13;
  v18 = v8;
LABEL_6:
  v16(v17, v18);
  return v15;
}

uint64_t sub_23ADB51F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 56))(a2, 1, 1);
  }
  else
  {
    v8 = sub_23B1C6C98();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, v6, v8);
  }
}

uint64_t sub_23ADB52C4(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  void (*v14)(char *);
  uint64_t v15;
  uint64_t v16;

  v14 = a2;
  type metadata accessor for FileTreeWriter.ItemOrContinuation(255, a4, a5, a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v7 = sub_23B1C74F0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - v9;
  v15 = a4;
  v16 = a5;
  sub_23B1C6C98();
  v11 = sub_23B1C74F0();
  sub_23AAE25C0((void (*)(char *))sub_23ADB8BBC, v11, (uint64_t)v10);
  v14(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_23ADB53E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = sub_23B1C6C98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, a1, v8);
  type metadata accessor for FileTreeWriter.ItemOrContinuation(0, a2, a3, v9);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23ADB5450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v13;
  _QWORD *v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t (*)(uint64_t), _QWORD *);

  v13 = (_QWORD *)*v6;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13[24];
  v14[3] = v13[25];
  v14[4] = a5;
  v14[5] = a6;
  v15 = (void (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t (*)(uint64_t), _QWORD *))v13[62];
  swift_retain();
  v15(a1, a2, a3, 0, a4, sub_23ADB5E4C, v14);
  return swift_release();
}

uint64_t sub_23ADB5504(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  void (*v15)(char *);
  uint64_t v16;
  uint64_t v17;

  v15 = a2;
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v7 = sub_23B1C74F0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14 - v9;
  v16 = a4;
  v17 = a5;
  type metadata accessor for FileTreeWriter.ItemOrContinuation(255, a4, a5, v11);
  v12 = sub_23B1C74F0();
  sub_23AAE25C0((void (*)(char *))sub_23ADB8BC4, v12, (uint64_t)v10);
  v15(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_23ADB5624()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB5684()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB56E4()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB5744()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB57A4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_23B1C5570();
  MEMORY[0x24BDAC7A8](v0);
  swift_getTupleTypeMetadata2();
  sub_23B1C6C98();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542DE880);
  v1 = sub_23B1C74F0();
  MEMORY[0x24BDAC7A8](v1);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
}

uint64_t sub_23ADB5938(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[96];

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v9 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v11 = &v16[-v10];
  *((_QWORD *)v11 + 6) = *(_QWORD *)(v3 + 48);
  v12 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v3;
  *((_OWORD *)v11 + 1) = v12;
  *((_OWORD *)v11 + 2) = *(_OWORD *)(v3 + 32);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(&v16[*(int *)(v9 + 48) - v10], *(_QWORD *)(v5 - 152), a1);
  *(_DWORD *)(v5 - 112) = 45;
  sub_23AC24384(v3);
  sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
  sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
  sub_23B1C5864();
  v13 = sub_23B1C5558();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 136) + 8))(v2, v1);
  *v4 = v13;
  v14 = *(_QWORD *)(v5 - 160);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *))(v5 - 128))(v4);
  (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v5 - 144) + 8))(v4, v14);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, TupleTypeMetadata2);
}

void sub_23ADB5A9C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB5AFC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB5B5C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB5BBC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB5C1C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB5C7C()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB5CDC()
{
  sub_23B1C704C();
  __break(1u);
}

void sub_23ADB5D3C()
{
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23ADB5D9C(uint64_t (*a1)(_QWORD))
{
  return a1(0);
}

uint64_t sub_23ADB5DC4()
{
  uint64_t *v0;

  sub_23AAB7948(v0[2]);
  sub_23AAB7948(v0[4]);
  sub_23AAB7948(v0[6]);
  sub_23AAB7948(v0[8]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_23AAB7948(v0[15]);
  swift_release();
  return swift_release();
}

uint64_t sub_23ADB5E28()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ADB5E4C(uint64_t a1)
{
  uint64_t v1;

  return sub_23ADB5504(a1, *(void (**)(char *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23ADB5E58()
{
  sub_23ADB4044();
  return swift_deallocClassInstance();
}

unint64_t sub_23ADB5E74(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23ADB5EA0();
  result = sub_23ADB5EE4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_23ADB5EA0()
{
  unint64_t result;

  result = qword_2569E5928;
  if (!qword_2569E5928)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8EE8, &type metadata for FileTreeWriterCollisionOptions);
    atomic_store(result, (unint64_t *)&qword_2569E5928);
  }
  return result;
}

unint64_t sub_23ADB5EE4()
{
  unint64_t result;

  result = qword_2569E5930;
  if (!qword_2569E5930)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8F20, &type metadata for FileTreeWriterCollisionOptions);
    atomic_store(result, (unint64_t *)&qword_2569E5930);
  }
  return result;
}

unint64_t sub_23ADB5F2C()
{
  unint64_t result;

  result = qword_2569E5938;
  if (!qword_2569E5938)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9050, &type metadata for FileTreeWriterCollisionOptions);
    atomic_store(result, (unint64_t *)&qword_2569E5938);
  }
  return result;
}

unint64_t sub_23ADB5F74()
{
  unint64_t result;

  result = qword_2569E5940;
  if (!qword_2569E5940)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D8F88, &type metadata for FileTreeWriterCollisionOptions);
    atomic_store(result, (unint64_t *)&qword_2569E5940);
  }
  return result;
}

unint64_t sub_23ADB5FBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2569E5948;
  if (!qword_2569E5948)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E5950);
    result = MEMORY[0x23B8613CC](&unk_23B1DD070, v1);
    atomic_store(result, (unint64_t *)&qword_2569E5948);
  }
  return result;
}

unint64_t sub_23ADB600C()
{
  unint64_t result;

  result = qword_2569E5958;
  if (!qword_2569E5958)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9088, &type metadata for FileTreeWriterCollisionOptions);
    atomic_store(result, (unint64_t *)&qword_2569E5958);
  }
  return result;
}

unint64_t sub_23ADB6054()
{
  unint64_t result;

  result = qword_2569E5960;
  if (!qword_2569E5960)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D90B0, &type metadata for FileTreeWriterCollisionOptions);
    atomic_store(result, (unint64_t *)&qword_2569E5960);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileTreeWriterCollisionOptions()
{
  return &type metadata for FileTreeWriterCollisionOptions;
}

uint64_t sub_23ADB60A8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23ADB612C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  }
  return v4;
}

uint64_t sub_23ADB61E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_23ADB61F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  return a1;
}

uint64_t sub_23ADB6258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  return a1;
}

uint64_t sub_23ADB62BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  return a1;
}

uint64_t sub_23ADB6320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  return a1;
}

uint64_t sub_23ADB6384(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 >= 0xFE)
      return (*(uint64_t (**)(void))(v4 + 48))();
    v14 = *(unsigned __int8 *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
    if (v14 >= 2)
      return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  v8 = ((v7 + 7) & 0xFFFFFFF8) + 9;
  v9 = (a2 - v6 + 255) >> (8 * v8);
  if (v8 < 4)
    v10 = v9 + 1;
  else
    v10 = 2;
  if (v10 >= 0x10000)
    v11 = 4;
  else
    v11 = 2;
  if (v10 < 0x100)
    v11 = 1;
  if (v10 >= 2)
    v12 = v11;
  else
    v12 = 0;
  return ((uint64_t (*)(void))((char *)&loc_23ADB640C + 4 * byte_23B1D8E2A[v12]))();
}

void sub_23ADB64A4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_23ADB65C0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23ADB65C8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x23ADB65D0);
}

void sub_23ADB6610()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_23ADB6618()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_23ADB6620(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
LABEL_2:
    JUMPOUT(0x23ADB6628);
  if (a3 < 0xFE)
  {
    *(_BYTE *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = a2 + 1;
    goto LABEL_2;
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for ItemPropagationResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ItemPropagationResult);
}

uint64_t sub_23ADB664C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FileTreeWriter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeWriter);
}

uint64_t sub_23ADB66C0()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t *v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    v2 = sub_23B1C6C98();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      v4 = *(_QWORD *)(AssociatedTypeWitness - 8) + 64;
      swift_getTupleTypeLayout3();
      v8 = &v7;
      v9 = v4;
      v10 = &unk_23B1D92E8;
      swift_getTupleTypeLayout2();
      v11 = &v6;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

char *sub_23ADB67B4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  BOOL v20;
  uint64_t v22;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  const void *v31;
  unsigned int v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84))
    v12 = *(_QWORD *)(v9 + 64);
  else
    v12 = *(_QWORD *)(v9 + 64) + 1;
  v13 = ((v12 + ((v8 + v10) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13)
    v13 = *(_QWORD *)(v7 + 64);
  if (v13 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9)
    v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v13 <= 0x11)
    v14 = 17;
  else
    v14 = v13;
  if (v14 > 3)
    goto LABEL_15;
  v15 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  v16 = v15 | 4;
  v20 = HIWORD(v15) == 0;
  v17 = 2;
  if (!v20)
    v17 = 4;
  if (v16 <= 0xFF)
LABEL_15:
    v17 = 1;
  v18 = v17 + v14;
  v19 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  v20 = v18 <= 0x18 && ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) == 0;
  if (!v20 || v19 > 7)
  {
    v22 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v22 + (((v19 | 7) + 16) & ~(unint64_t)(v19 | 7)));
    swift_retain();
    return a1;
  }
  if (v14 > 3)
    goto LABEL_29;
  v24 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (!HIWORD(v24))
  {
    if ((v24 | 4) > 0xFF)
    {
      v25 = *(unsigned __int16 *)&a2[v14];
      if (v25 < 4)
        goto LABEL_44;
      goto LABEL_34;
    }
LABEL_29:
    v25 = a2[v14];
    if (v25 < 4)
      goto LABEL_44;
LABEL_34:
    if (v14 <= 3)
      v26 = v14;
    else
      v26 = 4;
    __asm { BR              X14 }
  }
  v25 = *(_DWORD *)&a2[v14];
  if (v25 >= 4)
    goto LABEL_34;
LABEL_44:
  switch(v25)
  {
    case 0u:
      v30 = ~v10;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      v31 = (const void *)((unint64_t)&a2[v11] & v30);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v31, 1, v5))
      {
        memcpy((void *)((unint64_t)&a1[v11] & v30), v31, v12);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))((unint64_t)&a1[v11] & v30, v31, v5);
        (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))((unint64_t)&a1[v11] & v30, 0, 1, v5);
      }
      *(_QWORD *)((((unint64_t)&a1[v11] & v30) + v12 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v31 + v12 + 7) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      if (v14 > 3)
        goto LABEL_62;
      v39 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (HIWORD(v39))
      {
        *(_DWORD *)&a1[v14] = 0;
        return a1;
      }
      if ((v39 | 4) <= 0xFF)
LABEL_62:
        a1[v14] = 0;
      else
        *(_WORD *)&a1[v14] = 0;
      return a1;
    case 1u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      if (v14 > 3)
        goto LABEL_56;
      v37 = 1;
      v38 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (HIWORD(v38))
        goto LABEL_68;
      if ((v38 | 4) <= 0xFF)
LABEL_56:
        a1[v14] = 1;
      else
        *(_WORD *)&a1[v14] = 1;
      return a1;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      if (v14 <= 3)
      {
        v32 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v32))
        {
          *(_DWORD *)&a1[v14] = 2;
          return a1;
        }
        if ((v32 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 2;
          return a1;
        }
      }
      a1[v14] = 2;
      return a1;
    case 3u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      v33 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      v34 = *(_BYTE *)(v33 + 8);
      v35 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v35 = *(_QWORD *)v33;
      *(_BYTE *)(v35 + 8) = v34;
      if (v14 > 3)
        goto LABEL_54;
      v36 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (!HIWORD(v36))
      {
        if ((v36 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 3;
          return a1;
        }
LABEL_54:
        a1[v14] = 3;
        return a1;
      }
      v37 = 3;
LABEL_68:
      *(_DWORD *)&a1[v14] = v37;
      break;
    default:
      if (v14 > 3)
        goto LABEL_42;
      v27 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      v28 = v27 | 4;
      v20 = HIWORD(v27) == 0;
      v29 = 2;
      if (!v20)
        v29 = 4;
      if (v28 <= 0xFF)
LABEL_42:
        v29 = 1;
      memcpy(a1, a2, v29 + v14);
      return a1;
  }
  return a1;
}

uint64_t sub_23ADB6C84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(a2 + 16);
  result = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(result - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(v3 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v6 + v8;
  if (*(_DWORD *)(v7 + 84))
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  v11 = ((v10 + ((v6 + v8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v6 > v11)
    v11 = *(_QWORD *)(v5 + 64);
  v12 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v11 > v12)
    v12 = v11;
  if (v12 <= 0x11)
    v12 = 17;
  if (v12 > 3)
    goto LABEL_11;
  v14 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
  if (HIWORD(v14))
  {
    v13 = *(_DWORD *)(a1 + v12);
  }
  else
  {
    if ((v14 | 4) <= 0xFF)
    {
LABEL_11:
      v13 = *(unsigned __int8 *)(a1 + v12);
      goto LABEL_16;
    }
    v13 = *(unsigned __int16 *)(a1 + v12);
  }
LABEL_16:
  if (v13 >= 4)
  {
    if (v12 <= 3)
      v15 = v12;
    else
      v15 = 4;
    __asm { BR              X15 }
  }
  if (v13 == 3 || v13 == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, result);
  if (!v13)
  {
    v16 = ~v8;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, result);
    v17 = (v9 + a1) & v16;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v17, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v17, v3);
    return swift_release();
  }
  return result;
}

_BYTE *sub_23ADB6E7C(_BYTE *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  unsigned int v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  BOOL v27;
  uint64_t v28;
  int v29;
  unsigned int v30;
  unsigned int v31;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84))
    v12 = *(_QWORD *)(v9 + 64);
  else
    v12 = *(_QWORD *)(v9 + 64) + 1;
  v13 = ((v12 + ((v8 + v10) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13)
    v13 = *(_QWORD *)(v7 + 64);
  if (v13 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9)
    v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v13 <= 0x11)
    v14 = 17;
  else
    v14 = v13;
  if (v14 > 3)
    goto LABEL_14;
  v15 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (HIWORD(v15))
  {
    v16 = *(_DWORD *)&a2[v14];
    if (v16 < 4)
      goto LABEL_23;
    goto LABEL_19;
  }
  if ((v15 | 4) <= 0xFF)
  {
LABEL_14:
    v16 = a2[v14];
    if (v16 < 4)
      goto LABEL_23;
LABEL_19:
    if (v14 <= 3)
      v17 = v14;
    else
      v17 = 4;
    __asm { BR              X14 }
  }
  v16 = *(unsigned __int16 *)&a2[v14];
  if (v16 >= 4)
    goto LABEL_19;
LABEL_23:
  switch(v16)
  {
    case 0u:
      v18 = ~v10;
      (*(void (**)(_BYTE *, char *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      v19 = (const void *)((unint64_t)&a2[v11] & v18);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v19, 1, v5))
      {
        memcpy((void *)((unint64_t)&a1[v11] & v18), v19, v12);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))((unint64_t)&a1[v11] & v18, v19, v5);
        (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))((unint64_t)&a1[v11] & v18, 0, 1, v5);
      }
      *(_QWORD *)((((unint64_t)&a1[v11] & v18) + v12 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v19 + v12 + 7) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      if (v14 <= 3)
      {
        v31 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v31))
        {
          *(_DWORD *)&a1[v14] = 0;
          return a1;
        }
        if ((v31 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 0;
          return a1;
        }
      }
      a1[v14] = 0;
      return a1;
    case 1u:
      (*(void (**)(_BYTE *, char *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      if (v14 > 3)
        goto LABEL_43;
      v29 = 1;
      v30 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (HIWORD(v30))
        goto LABEL_51;
      if ((v30 | 4) > 0xFF)
        *(_WORD *)&a1[v14] = 1;
      else
LABEL_43:
        a1[v14] = 1;
      return a1;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      if (v14 <= 3)
      {
        v20 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v20))
        {
          *(_DWORD *)&a1[v14] = 2;
          return a1;
        }
        if ((v20 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 2;
          return a1;
        }
      }
      a1[v14] = 2;
      return a1;
    case 3u:
      (*(void (**)(_BYTE *, char *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      v21 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      v22 = *(_BYTE *)(v21 + 8);
      v23 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v23 = *(_QWORD *)v21;
      *(_BYTE *)(v23 + 8) = v22;
      if (v14 > 3)
        goto LABEL_33;
      v24 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (!HIWORD(v24))
      {
        if ((v24 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v14] = 3;
          return a1;
        }
LABEL_33:
        a1[v14] = 3;
        return a1;
      }
      v29 = 3;
LABEL_51:
      *(_DWORD *)&a1[v14] = v29;
      return a1;
    default:
      if (v14 > 3)
        goto LABEL_38;
      v25 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      v26 = v25 | 4;
      v27 = HIWORD(v25) == 0;
      v28 = 2;
      if (!v27)
        v28 = 4;
      if (v26 <= 0xFF)
LABEL_38:
        v28 = 1;
      memcpy(a1, a2, v28 + v14);
      return a1;
  }
}

char *sub_23ADB72A8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  BOOL v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  __int128 v27;
  unsigned int v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  __int16 v35;
  unsigned int v36;
  uint64_t v38;

  if (a1 == a2)
    return a1;
  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84))
    v12 = *(_QWORD *)(v9 + 64);
  else
    v12 = *(_QWORD *)(v9 + 64) + 1;
  v13 = ((v12 + ((v8 + v10) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13)
    v13 = *(_QWORD *)(v7 + 64);
  if (v13 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9)
    v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v13 <= 0x11)
    v14 = 17;
  else
    v14 = v13;
  if (v14 > 3)
    goto LABEL_15;
  v15 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (HIWORD(v15))
  {
    v16 = *(_DWORD *)&a1[v14];
    if (v16 < 4)
      goto LABEL_24;
    goto LABEL_20;
  }
  if ((v15 | 4) <= 0xFF)
  {
LABEL_15:
    v16 = a1[v14];
    if (v16 < 4)
      goto LABEL_24;
LABEL_20:
    if (v14 <= 3)
      v17 = v14;
    else
      v17 = 4;
    __asm { BR              X13 }
  }
  v16 = *(unsigned __int16 *)&a1[v14];
  if (v16 >= 4)
    goto LABEL_20;
LABEL_24:
  v38 = ~v10;
  if (v16 == 3 || v16 == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
    if (v14 > 3)
      goto LABEL_35;
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((unint64_t)&a1[v11] & v38, 1, v5))(*(void (**)(unint64_t, uint64_t))(v9 + 8))((unint64_t)&a1[v11] & v38, v5);
      swift_release();
    }
    if (v14 > 3)
      goto LABEL_35;
  }
  v18 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (!HIWORD(v18))
  {
    if ((v18 | 4) > 0xFF)
    {
      v19 = *(unsigned __int16 *)&a2[v14];
      if (v19 < 4)
        goto LABEL_50;
      goto LABEL_40;
    }
LABEL_35:
    v19 = a2[v14];
    if (v19 < 4)
      goto LABEL_50;
LABEL_40:
    if (v14 <= 3)
      v20 = v14;
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  v19 = *(_DWORD *)&a2[v14];
  if (v19 >= 4)
    goto LABEL_40;
LABEL_50:
  switch(v19)
  {
    case 0u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      v25 = (void *)((unint64_t)&a1[v11] & v38);
      v26 = (const void *)((unint64_t)&a2[v11] & v38);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v26, 1, v5))
      {
        memcpy(v25, v26, v12);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v25, v26, v5);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v25, 0, 1, v5);
      }
      *(_QWORD *)(((unint64_t)v25 + v12 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v26 + v12 + 7) & 0xFFFFFFFFFFFFF8);
      swift_retain();
      if (v14 > 3)
        goto LABEL_68;
      v36 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (HIWORD(v36))
      {
        *(_DWORD *)&a1[v14] = 0;
        return a1;
      }
      if ((v36 | 4) <= 0xFF)
LABEL_68:
        a1[v14] = 0;
      else
        *(_WORD *)&a1[v14] = 0;
      return a1;
    case 1u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      if (v14 <= 3)
      {
        v33 = 1;
        v34 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v34))
          goto LABEL_74;
        if ((v34 | 4) > 0xFF)
        {
          v35 = 1;
          goto LABEL_78;
        }
      }
      a1[v14] = 1;
      return a1;
    case 2u:
      v27 = *(_OWORD *)a2;
      a1[16] = a2[16];
      *(_OWORD *)a1 = v27;
      if (v14 <= 3)
      {
        v28 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
        if (HIWORD(v28))
        {
          *(_DWORD *)&a1[v14] = 2;
          return a1;
        }
        if ((v28 | 4) > 0xFF)
        {
          v35 = 2;
          goto LABEL_78;
        }
      }
      a1[v14] = 2;
      return a1;
    case 3u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, AssociatedTypeWitness);
      v29 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      v30 = *(_BYTE *)(v29 + 8);
      v31 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v31 = *(_QWORD *)v29;
      *(_BYTE *)(v31 + 8) = v30;
      if (v14 > 3)
        goto LABEL_60;
      v32 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (HIWORD(v32))
      {
        v33 = 3;
LABEL_74:
        *(_DWORD *)&a1[v14] = v33;
      }
      else
      {
        if ((v32 | 4) <= 0xFF)
        {
LABEL_60:
          a1[v14] = 3;
          return a1;
        }
        v35 = 3;
LABEL_78:
        *(_WORD *)&a1[v14] = v35;
      }
      break;
    default:
      if (v14 > 3)
        goto LABEL_48;
      v21 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      v22 = v21 | 4;
      v23 = HIWORD(v21) == 0;
      v24 = 2;
      if (!v23)
        v24 = 4;
      if (v22 <= 0xFF)
LABEL_48:
        v24 = 1;
      memcpy(a1, a2, v24 + v14);
      return a1;
  }
  return a1;
}

_BYTE *sub_23ADB787C(_BYTE *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  size_t v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  const void *v21;
  unsigned int v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  uint64_t v33;
  unsigned int v34;
  void *__dst;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = *(_DWORD *)(v9 + 84);
  v13 = *(_QWORD *)(v9 + 64);
  if (v12)
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = v13 + 1;
  v15 = ((((v8 + v10) & ~v10) + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v15)
    v15 = *(_QWORD *)(v7 + 64);
  if (v15 <= ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9)
    v15 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v15 <= 0x11)
    v16 = 17;
  else
    v16 = v15;
  if (v16 > 3)
    goto LABEL_14;
  v17 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
  if (HIWORD(v17))
  {
    v18 = *(_DWORD *)&a2[v16];
    if (v18 < 4)
      goto LABEL_23;
    goto LABEL_19;
  }
  if ((v17 | 4) <= 0xFF)
  {
LABEL_14:
    v18 = a2[v16];
    if (v18 < 4)
      goto LABEL_23;
LABEL_19:
    if (v16 <= 3)
      v19 = v16;
    else
      v19 = 4;
    __asm { BR              X14 }
  }
  v18 = *(unsigned __int16 *)&a2[v16];
  if (v18 >= 4)
    goto LABEL_19;
LABEL_23:
  switch(v18)
  {
    case 0u:
      v20 = ~v10;
      (*(void (**)(_BYTE *, char *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      __dst = (void *)((unint64_t)&a1[v11] & v20);
      v21 = (const void *)((unint64_t)&a2[v11] & v20);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v21, 1, v5))
      {
        memcpy(__dst, v21, v14);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(__dst, v21, v5);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(__dst, 0, 1, v5);
      }
      v33 = 7;
      if (!v12)
        v33 = 8;
      *(_QWORD *)(((unint64_t)__dst + v13 + v33) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21
                                                                                           + v13
                                                                                           + v33) & 0xFFFFFFFFFFFFF8);
      if (v16 <= 3)
      {
        v34 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
        if (HIWORD(v34))
        {
          *(_DWORD *)&a1[v16] = 0;
          return a1;
        }
        if ((v34 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v16] = 0;
          return a1;
        }
      }
      a1[v16] = 0;
      return a1;
    case 1u:
      (*(void (**)(_BYTE *, char *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      if (v16 > 3)
        goto LABEL_43;
      v31 = 1;
      v32 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
      if (HIWORD(v32))
        goto LABEL_53;
      if ((v32 | 4) > 0xFF)
        *(_WORD *)&a1[v16] = 1;
      else
LABEL_43:
        a1[v16] = 1;
      return a1;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      if (v16 <= 3)
      {
        v22 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
        if (HIWORD(v22))
        {
          *(_DWORD *)&a1[v16] = 2;
          return a1;
        }
        if ((v22 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v16] = 2;
          return a1;
        }
      }
      a1[v16] = 2;
      return a1;
    case 3u:
      (*(void (**)(_BYTE *, char *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      v23 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      v24 = *(_BYTE *)(v23 + 8);
      v25 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v25 = *(_QWORD *)v23;
      *(_BYTE *)(v25 + 8) = v24;
      if (v16 > 3)
        goto LABEL_33;
      v26 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
      if (!HIWORD(v26))
      {
        if ((v26 | 4) > 0xFF)
        {
          *(_WORD *)&a1[v16] = 3;
          return a1;
        }
LABEL_33:
        a1[v16] = 3;
        return a1;
      }
      v31 = 3;
LABEL_53:
      *(_DWORD *)&a1[v16] = v31;
      return a1;
    default:
      if (v16 > 3)
        goto LABEL_38;
      v27 = ((1 << (8 * v16)) | 2u) >> (8 * v16);
      v28 = v27 | 4;
      v29 = HIWORD(v27) == 0;
      v30 = 2;
      if (!v29)
        v30 = 4;
      if (v28 <= 0xFF)
LABEL_38:
        v30 = 1;
      memcpy(a1, a2, v30 + v16);
      return a1;
  }
}

char *sub_23ADB7CC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  BOOL v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  size_t v28;
  unsigned int v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  __int16 v36;
  uint64_t v37;
  unint64_t v38;
  unsigned int v39;
  unint64_t v41;
  int v42;
  uint64_t v43;
  size_t __n;
  uint64_t v45;
  uint64_t v46;

  if (a1 == a2)
    return a1;
  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v46 = v8 + v10;
  v11 = (v8 + v10) & ~v10;
  if (*(_DWORD *)(v9 + 84))
    v12 = *(_QWORD *)(v9 + 64);
  else
    v12 = *(_QWORD *)(v9 + 64) + 1;
  __n = v12;
  v13 = ((v12 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > v13)
    v13 = *(_QWORD *)(v7 + 64);
  v14 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v13 <= v14)
    v13 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v13 <= 0x11)
    v15 = 17;
  else
    v15 = v13;
  if (v15 > 3)
    goto LABEL_15;
  v16 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
  if (HIWORD(v16))
  {
    v17 = *(_DWORD *)&a1[v15];
  }
  else
  {
    if ((v16 | 4) <= 0xFF)
    {
LABEL_15:
      v17 = a1[v15];
      goto LABEL_18;
    }
    v17 = *(unsigned __int16 *)&a1[v15];
  }
LABEL_18:
  v43 = *(_QWORD *)(v9 + 64);
  v42 = *(_DWORD *)(v9 + 84);
  if (v17 >= 4)
  {
    if (v15 <= 3)
      v18 = v15;
    else
      v18 = 4;
    __asm { BR              X13 }
  }
  v45 = ~v10;
  if (v17 == 3 || v17 == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
    if (v15 > 3)
      goto LABEL_34;
  }
  else
  {
    if (!v17)
    {
      v41 = (v8 + v10) & ~v10;
      (*(void (**)(char *, uint64_t))(v7 + 8))(a1, AssociatedTypeWitness);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((unint64_t)&a1[v46] & v45, 1, v5))(*(void (**)(unint64_t, uint64_t))(v9 + 8))((unint64_t)&a1[v46] & v45, v5);
      swift_release();
      v11 = v41;
    }
    if (v15 > 3)
      goto LABEL_34;
  }
  v19 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
  if (!HIWORD(v19))
  {
    if ((v19 | 4) > 0xFF)
    {
      v20 = *(unsigned __int16 *)&a2[v15];
      if (v20 < 4)
        goto LABEL_49;
      goto LABEL_39;
    }
LABEL_34:
    v20 = a2[v15];
    if (v20 < 4)
      goto LABEL_49;
LABEL_39:
    if (v15 <= 3)
      v21 = v15;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  v20 = *(_DWORD *)&a2[v15];
  if (v20 >= 4)
    goto LABEL_39;
LABEL_49:
  switch(v20)
  {
    case 0u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      v26 = (void *)((unint64_t)&a1[v46] & v45);
      v27 = (const void *)((unint64_t)&a2[v46] & v45);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v27, 1, v5))
      {
        v28 = __n;
        memcpy(v26, v27, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v26, v27, v5);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v26, 0, 1, v5);
        v28 = __n;
      }
      v37 = 7;
      if (!v42)
        v37 = 8;
      *(_QWORD *)(((unint64_t)v26 + v43 + v37) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v27
                                                                                         + v43
                                                                                         + v37) & 0xFFFFFFFFFFFFF8);
      v38 = ((v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
      if (v8 > v38)
        v38 = v8;
      if (v38 <= v14)
        v38 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
      if (v38 <= 0x11)
        v38 = 17;
      if (v38 > 3)
        goto LABEL_75;
      v39 = ((1 << (8 * v38)) | 2u) >> (8 * v38);
      if (HIWORD(v39))
      {
        *(_DWORD *)&a1[v38] = 0;
        return a1;
      }
      if ((v39 | 4) <= 0xFF)
LABEL_75:
        a1[v38] = 0;
      else
        *(_WORD *)&a1[v38] = 0;
      return a1;
    case 1u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      if (v15 <= 3)
      {
        v34 = 1;
        v35 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
        if (HIWORD(v35))
          goto LABEL_81;
        if ((v35 | 4) > 0xFF)
        {
          v36 = 1;
          goto LABEL_85;
        }
      }
      a1[v15] = 1;
      return a1;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      if (v15 <= 3)
      {
        v29 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
        if (HIWORD(v29))
        {
          *(_DWORD *)&a1[v15] = 2;
          return a1;
        }
        if ((v29 | 4) > 0xFF)
        {
          v36 = 2;
          goto LABEL_85;
        }
      }
      a1[v15] = 2;
      return a1;
    case 3u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, AssociatedTypeWitness);
      v30 = (unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      v31 = *(_BYTE *)(v30 + 8);
      v32 = (unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v32 = *(_QWORD *)v30;
      *(_BYTE *)(v32 + 8) = v31;
      if (v15 > 3)
        goto LABEL_59;
      v33 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
      if (HIWORD(v33))
      {
        v34 = 3;
LABEL_81:
        *(_DWORD *)&a1[v15] = v34;
      }
      else
      {
        if ((v33 | 4) <= 0xFF)
        {
LABEL_59:
          a1[v15] = 3;
          return a1;
        }
        v36 = 3;
LABEL_85:
        *(_WORD *)&a1[v15] = v36;
      }
      break;
    default:
      if (v15 > 3)
        goto LABEL_47;
      v22 = ((1 << (8 * v15)) | 2u) >> (8 * v15);
      v23 = v22 | 4;
      v24 = HIWORD(v22) == 0;
      v25 = 2;
      if (!v24)
        v25 = 4;
      if (v23 <= 0xFF)
LABEL_47:
        v25 = 1;
      memcpy(a1, a2, v25 + v15);
      return a1;
  }
  return a1;
}

uint64_t sub_23ADB82CC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  unsigned int v15;
  char v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  BOOL v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  char v31;
  int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;

  v5 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_DWORD *)(v8 + 84);
  v11 = *(_QWORD *)(v8 + 64);
  if (!v10)
    ++v11;
  v12 = ((v11 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 > v12)
    v12 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  v13 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v12 > v13)
    v13 = v12;
  if (v13 <= 0x11)
    v13 = 17;
  if (v13 > 3)
  {
    v14 = 5;
LABEL_13:
    v16 = 8;
    goto LABEL_14;
  }
  v15 = ((1 << (8 * v13)) | 2u) >> (8 * v13);
  if (HIWORD(v15))
    goto LABEL_17;
  v14 = v15 | 4;
  if (v14 <= 0xFF)
    goto LABEL_13;
  v16 = 16;
LABEL_14:
  v17 = (1 << v16) - v14;
  if (v17 >= 0)
  {
    if (v13 > 3)
      goto LABEL_21;
LABEL_18:
    v18 = ((1 << (8 * v13)) | 2u) >> (8 * v13);
    v19 = v18 | 4;
    v20 = HIWORD(v18) == 0;
    v21 = 2;
    if (!v20)
      v21 = 4;
    if (v19 > 0xFF)
      goto LABEL_22;
    goto LABEL_21;
  }
LABEL_17:
  v17 = 0x7FFFFFFF;
  if (v13 <= 3)
    goto LABEL_18;
LABEL_21:
  v21 = 1;
LABEL_22:
  if (!a2)
    return 0;
  if (a2 <= v17)
    goto LABEL_41;
  v22 = v21 + v13;
  v23 = 8 * v22;
  if (v22 <= 3)
  {
    v26 = ((a2 - v17 + ~(-1 << v23)) >> v23) + 1;
    if (HIWORD(v26))
    {
      v24 = *(_DWORD *)(a1 + v22);
      if (!v24)
        goto LABEL_41;
      goto LABEL_34;
    }
    if (v26 > 0xFF)
    {
      v24 = *(unsigned __int16 *)(a1 + v22);
      if (!*(_WORD *)(a1 + v22))
        goto LABEL_41;
      goto LABEL_34;
    }
    if (v26 < 2)
    {
LABEL_41:
      if (v13 <= 3)
      {
        v34 = ((1 << (8 * v13)) | 2u) >> (8 * v13);
        if (HIWORD(v34))
        {
          v29 = *(_DWORD *)(a1 + v13);
          v30 = ~v29;
LABEL_49:
          v33 = 0x7FFFFFFF;
LABEL_50:
          if (v33 > v30)
            return -v29;
          else
            return 0;
        }
        v32 = v34 | 4;
        if ((v34 | 4) > 0xFF)
        {
          v36 = *(unsigned __int16 *)(a1 + v13);
          v29 = v36 | 0xFFFF0000;
          v30 = v36 ^ 0xFFFF;
          v31 = 16;
        }
        else
        {
          v35 = *(unsigned __int8 *)(a1 + v13);
          v29 = v35 | 0xFFFFFF00;
          v30 = v35 ^ 0xFF;
          v31 = 8;
        }
      }
      else
      {
        v28 = *(unsigned __int8 *)(a1 + v13);
        v29 = v28 | 0xFFFFFF00;
        v30 = v28 ^ 0xFF;
        v31 = 8;
        v32 = 5;
      }
      v33 = (1 << v31) - v32;
      if (v33 >= 0)
        goto LABEL_50;
      goto LABEL_49;
    }
  }
  v24 = *(unsigned __int8 *)(a1 + v22);
  if (!*(_BYTE *)(a1 + v22))
    goto LABEL_41;
LABEL_34:
  v27 = (v24 - 1) << v23;
  if (v22 > 3)
    v27 = 0;
  if ((_DWORD)v22)
  {
    if (v22 > 3)
      LODWORD(v22) = 4;
    __asm { BR              X12 }
  }
  return (v17 + v27 + 1);
}

void sub_23ADB8590(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unsigned int v17;
  char v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  BOOL v23;
  uint64_t v24;
  size_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;

  v7 = *(_QWORD *)(a4 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  v10 = *(_QWORD *)(v7 - 8);
  v11 = (v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(v10 + 64);
  if (!v12)
    ++v13;
  v14 = ((v13 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v9 > v14)
    v14 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  v15 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v14 > v15)
    v15 = v14;
  if (v15 <= 0x11)
    v15 = 17;
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v20 = ((1 << v16) | 2u) >> v16;
    if (HIWORD(v20))
      goto LABEL_18;
    v17 = v20 | 4;
    if (v17 > 0xFF)
    {
      v18 = 16;
LABEL_12:
      v19 = (1 << v18) - v17;
      if (v19 >= 0)
      {
        if (v15 > 3)
          goto LABEL_22;
LABEL_19:
        v21 = ((1 << v16) | 2u) >> v16;
        v22 = v21 | 4;
        v23 = HIWORD(v21) == 0;
        v24 = 2;
        if (!v23)
          v24 = 4;
        if (v22 > 0xFF)
        {
LABEL_23:
          v25 = v24 + v15;
          if (a3 <= v19)
          {
            v26 = 0;
          }
          else if (v25 <= 3)
          {
            v28 = ((a3 - v19 + ~(-1 << (8 * v25))) >> (8 * v25)) + 1;
            if (HIWORD(v28))
            {
              v26 = 4u;
            }
            else if (v28 >= 0x100)
            {
              v26 = 2;
            }
            else
            {
              v26 = v28 > 1;
            }
          }
          else
          {
            v26 = 1u;
          }
          if (v19 < a2)
          {
            v27 = ~v19 + a2;
            if (v25 < 4)
            {
              if ((_DWORD)v25)
              {
                v29 = v27 & ~(-1 << (8 * v25));
                bzero(a1, v25);
                if ((_DWORD)v25 == 3)
                {
                  *(_WORD *)a1 = v29;
                  a1[2] = BYTE2(v29);
                }
                else if ((_DWORD)v25 == 2)
                {
                  *(_WORD *)a1 = v29;
                }
                else
                {
                  *a1 = v29;
                }
              }
            }
            else
            {
              bzero(a1, v25);
              *(_DWORD *)a1 = v27;
            }
            __asm { BR              X10 }
          }
          __asm { BR              X12 }
        }
LABEL_22:
        v24 = 1;
        goto LABEL_23;
      }
LABEL_18:
      v19 = 0x7FFFFFFF;
      if (v15 > 3)
        goto LABEL_22;
      goto LABEL_19;
    }
  }
  else
  {
    v17 = 5;
  }
  v18 = 8;
  goto LABEL_12;
}

uint64_t sub_23ADB8880(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  unsigned int v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  v6 = *(_QWORD *)(v3 - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(v6 + 64);
  if (!v8)
    ++v9;
  v10 = ((v9 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v5 > v10)
    v10 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  v11 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v10 > v11)
    v11 = v10;
  if (v11 <= 0x11)
    v11 = 17;
  if (v11 > 3)
    goto LABEL_10;
  v13 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
  if (HIWORD(v13))
  {
    result = *(unsigned int *)(a1 + v11);
  }
  else
  {
    if ((v13 | 4) <= 0xFF)
    {
LABEL_10:
      result = *(unsigned __int8 *)(a1 + v11);
      goto LABEL_15;
    }
    result = *(unsigned __int16 *)(a1 + v11);
  }
LABEL_15:
  if (result >= 4)
  {
    if (v11 <= 3)
      v14 = v11;
    else
      v14 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_23ADB89D0(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  size_t v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int *v18;
  unsigned int v19;
  int v20;

  v5 = *(_QWORD *)(a3 + 16);
  result = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 64);
  v8 = *(_QWORD *)(v5 - 8);
  v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_DWORD *)(v8 + 84);
  v11 = *(_QWORD *)(v8 + 64);
  if (!v10)
    ++v11;
  v12 = ((v11 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 > v12)
    v12 = *(_QWORD *)(*(_QWORD *)(result - 8) + 64);
  v13 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v12 > v13)
    v13 = v12;
  if (v13 <= 0x11)
    v14 = 17;
  else
    v14 = v13;
  if (a2 > 3)
  {
    v15 = a2 - 4;
    if (v14 < 4)
    {
      v17 = (v15 >> (8 * v14)) + 4;
      v18 = (int *)&a1[v14];
      v19 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
      if (HIWORD(v19))
      {
        *v18 = v17;
      }
      else if ((v19 | 4) > 0xFF)
      {
        *(_WORD *)v18 = v17;
      }
      else
      {
        *(_BYTE *)v18 = v17;
      }
    }
    else
    {
      a1[v14] = 4;
    }
    if (v14 >= 4)
      v20 = 4;
    else
      v20 = v14;
    bzero(a1, v14);
    __asm { BR              X10 }
  }
  if (v14 > 3)
    goto LABEL_12;
  v16 = ((1 << (8 * v14)) | 2u) >> (8 * v14);
  if (HIWORD(v16))
  {
    *(_DWORD *)&a1[v14] = a2;
  }
  else
  {
    if ((v16 | 4) <= 0xFF)
    {
LABEL_12:
      a1[v14] = a2;
      return result;
    }
    *(_WORD *)&a1[v14] = a2;
  }
  return result;
}

uint64_t type metadata accessor for FileTreeWriter.FileTreeChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeWriter.FileTreeChange);
}

uint64_t type metadata accessor for FileTreeWriter.StreamResetReason(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeWriter.StreamResetReason);
}

uint64_t sub_23ADB8BA4(uint64_t a1)
{
  uint64_t v1;

  return sub_23ADB52C4(a1, *(void (**)(char *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t type metadata accessor for FileTreeWriter.ItemOrContinuation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeWriter.ItemOrContinuation);
}

uint64_t sub_23ADB8BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23ADB53E4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23ADB8BC4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = type metadata accessor for FileTreeWriter.ItemOrContinuation(0, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1);
  return sub_23ADB51F0(v4, a2);
}

uint64_t sub_23ADB8C04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23ADB8C48(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t sub_23ADB8CB4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t sub_23ADB8D00(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23ADB8D48(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for FileTreeWriter.EventStreamBatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileTreeWriter.EventStreamBatch);
}

uint64_t sub_23ADB8D94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23B1C6C98();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_23ADB8E08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v9;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v8 <= 8)
    v9 = 8;
  else
    v9 = v8;
  if ((v7 & 0x1000F8) != 0 || (unint64_t)(v9 + 1) > 0x18)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v11 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
LABEL_20:
    swift_retain();
    return v4;
  }
  v12 = *((unsigned __int8 *)a2 + v9);
  if (v12 >= 2)
  {
    if (v9 <= 3)
      v13 = v9;
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  if (v12 == 1)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v9) = 1;
    goto LABEL_20;
  }
  if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(v4, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(v4, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  }
  *((_BYTE *)v4 + v9) = 0;
  return v4;
}

uint64_t sub_23ADB8F88(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (*(_DWORD *)(v4 + 84))
    v5 = *(_QWORD *)(v4 + 64);
  else
    v5 = *(_QWORD *)(v4 + 64) + 1;
  if (v5 <= 8)
    v5 = 8;
  v6 = *(unsigned __int8 *)(a1 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
    return swift_release();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

_QWORD *sub_23ADB9090(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84))
    v7 = *(_QWORD *)(v6 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 <= 8)
    v8 = 8;
  else
    v8 = v7;
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X12 }
  }
  if (v9 == 1)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v8) = 1;
    swift_retain();
  }
  else
  {
    if ((*(unsigned int (**)(_QWORD *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    *((_BYTE *)a1 + v8) = 0;
  }
  return a1;
}

_QWORD *sub_23ADB91D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    if (v7 <= 8)
      v8 = 8;
    else
      v8 = v7;
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      swift_release();
    }
    else if (!(*(unsigned int (**)(_QWORD *, uint64_t, _QWORD))(v6 + 48))(a1, 1, *(_QWORD *)(a3 + 16)))
    {
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
    }
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v8) = 1;
      swift_retain();
    }
    else
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v7);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      *((_BYTE *)a1 + v8) = 0;
    }
  }
  return a1;
}

_QWORD *sub_23ADB93CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84))
    v7 = *(_QWORD *)(v6 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 <= 8)
    v8 = 8;
  else
    v8 = v7;
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X12 }
  }
  if (v9 == 1)
  {
    *a1 = *a2;
    v11 = 1;
  }
  else
  {
    if ((*(unsigned int (**)(_QWORD *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v11 = 0;
  }
  *((_BYTE *)a1 + v8) = v11;
  return a1;
}

_QWORD *sub_23ADB950C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    if (v7 <= 8)
      v8 = 8;
    else
      v8 = v7;
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      swift_release();
    }
    else if (!(*(unsigned int (**)(_QWORD *, uint64_t, _QWORD))(v6 + 48))(a1, 1, *(_QWORD *)(a3 + 16)))
    {
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, v5);
    }
    v11 = *((unsigned __int8 *)a2 + v8);
    if (v11 >= 2)
    {
      if (v8 <= 3)
        v12 = v8;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    if (v11 == 1)
    {
      *a1 = *a2;
      v13 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v7);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      v13 = 0;
    }
    *((_BYTE *)a1 + v8) = v13;
  }
  return a1;
}

uint64_t sub_23ADB9700(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v11;
  int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(v3 + 64);
  if (!v4)
    ++v5;
  v6 = 8;
  if (v5 > 8)
    v6 = v5;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_23;
  v7 = v6 + 1;
  v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    v11 = ((a2 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v11))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v11 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v11 < 2)
    {
LABEL_23:
      v13 = *(unsigned __int8 *)(a1 + v6);
      if (v13 >= 2)
        return (v13 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_23;
LABEL_16:
  v12 = (v9 - 1) << v8;
  if (v7 > 3)
    v12 = 0;
  if (!(_DWORD)v7)
    return (v12 + 255);
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23ADB97D0 + 4 * byte_23B1D8EB4[(v7 - 1)]))();
}

void sub_23ADB981C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  int v6;
  unint64_t v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  if (!v6)
    ++v7;
  if (v7 <= 8)
    v7 = 8;
  v8 = v7 + 1;
  if (a3 < 0xFF)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 + ~(-1 << (8 * v8)) - 254) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v10 = a2 - 255;
  if (v8 < 4)
  {
    if ((_DWORD)v7 != -1)
    {
      v12 = v10 & ~(-1 << (8 * v8));
      bzero(a1, v8);
      if ((_DWORD)v8 == 3)
      {
        *a1 = v12;
        *((_BYTE *)a1 + 2) = BYTE2(v12);
      }
      else if ((_DWORD)v8 == 2)
      {
        *a1 = v12;
      }
      else
      {
        *(_BYTE *)a1 = v12;
      }
    }
  }
  else
  {
    bzero(a1, v7 + 1);
    *(_DWORD *)a1 = v10;
  }
  __asm { BR              X10 }
}

uint64_t sub_23ADB99D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_DWORD *)(v2 + 84);
  v4 = *(_QWORD *)(v2 + 64);
  if (!v3)
    ++v4;
  v5 = 8;
  if (v4 > 8)
    v5 = v4;
  if (*(unsigned __int8 *)(a1 + v5) < 2u)
    return *(unsigned __int8 *)(a1 + v5);
  if (v5 <= 3)
    v6 = v5;
  else
    v6 = 4;
  return ((uint64_t (*)(void))((char *)&loc_23ADB9A24 + 4 * byte_23B1D8EC2[v6]))();
}

_BYTE *sub_23ADB9A6C(_BYTE *result, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  size_t v7;
  char v8;
  int v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v6;
  if (v6 <= 8)
    v7 = 8;
  else
    v7 = v6;
  if (a2 > 1)
  {
    if (v7 <= 3)
      v8 = ((a2 - 2) >> (8 * v7)) + 2;
    else
      v8 = 2;
    result[v7] = v8;
    if (v7 >= 4)
      v9 = 4;
    else
      v9 = v7;
    bzero(result, v7);
    __asm { BR              X10 }
  }
  result[v7] = a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FPCKRunningMode(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FPCKRunningMode(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_23ADB9B9C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23ADB9BB8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

__CFString *resetReason2str(unint64_t a1)
{
  __CFString *v1;
  __CFString *v2;

  if (a1 <= 0xA)
  {
    v1 = off_250BFC570[a1];
    v2 = off_250BFC518[a1];
  }
  return v1;
}

uint64_t sub_23ADB9C24(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v11 = MEMORY[0x24BEE4AF8];
    result = sub_23ADACFB0(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x23B85F860](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_unsignedLongLongValue);

      v10 = *(_QWORD *)(v11 + 16);
      v9 = *(_QWORD *)(v11 + 24);
      if (v10 >= v9 >> 1)
        sub_23ADACFB0(v9 > 1, v10 + 1, 1);
      ++v5;
      *(_QWORD *)(v11 + 16) = v10 + 1;
      *(_QWORD *)(v11 + 8 * v10 + 32) = v8;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_23B1C7088();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23ADB9D84(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_23AAB5A28(a3, a2, (uint64_t)&unk_23B1D15E8);
  sub_23B1C68A8();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_23B1C68A8();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0x676E696E6E75723CLL;
}

uint64_t sub_23ADB9F14(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  sub_23B1C64C4();
  return sub_23B1C65A8();
}

uint64_t sub_23ADB9F8C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char v20;
  id v21;
  uint64_t v22;
  char v24;
  _QWORD *v25;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  void *v38;
  id v39;
  _QWORD *v40;
  char v41;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t result;
  _QWORD v76[2];
  unint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;

  v78 = a2;
  v3 = *(_QWORD *)(a1 + 64);
  v81 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & v3;
  v82 = (unint64_t)(v4 + 63) >> 6;
  v7 = *MEMORY[0x24BDC7F58];
  v79 = *MEMORY[0x24BDC7F60];
  swift_bridgeObjectRetain();
  v8 = 0;
  v80 = v7;
  while (v6)
  {
    v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v10 = v9 | (v8 << 6);
LABEL_23:
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v16 = *v14;
    v15 = v14[1];
    v17 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    if (v16 == sub_23B1C63E0() && v15 == v18)
    {
LABEL_4:
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = sub_23B1C7388();
      swift_bridgeObjectRetain();
      v21 = v17;
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0)
        goto LABEL_28;
      if (v16 != sub_23B1C63E0() || v15 != v22)
      {
        v24 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if ((v24 & 1) != 0)
          goto LABEL_28;
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          v88 = 0uLL;
          sub_23B1C63D4();
          if (*((_QWORD *)&v88 + 1))
          {
            v89 = MEMORY[0x24BEE0D00];
            v90 = MEMORY[0x24BEE0D08];
            sub_23ABD76F0(&v88, (uint64_t)&v86);
            swift_bridgeObjectRetain();
            v25 = v78;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v91 = (_QWORD *)*v25;
            v27 = v91;
            *v25 = 0x8000000000000000;
            v29 = sub_23AAAF4C4(v16, v15);
            v30 = v27[2];
            v31 = (v28 & 1) == 0;
            v32 = v30 + v31;
            if (__OFADD__(v30, v31))
              goto LABEL_66;
            v33 = v28;
            if (v27[3] >= v32)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v36 = v91;
                if ((v28 & 1) == 0)
                  goto LABEL_55;
              }
              else
              {
                v54 = v29;
                sub_23B18AC18();
                v29 = v54;
                v36 = v91;
                if ((v33 & 1) == 0)
                  goto LABEL_55;
              }
            }
            else
            {
              sub_23AD17D94(v32, isUniquelyReferenced_nonNull_native);
              v34 = sub_23AAAF4C4(v16, v15);
              if ((v33 & 1) != (v35 & 1))
                goto LABEL_70;
              v29 = v34;
              v36 = v91;
              if ((v33 & 1) == 0)
              {
LABEL_55:
                v77 = v29;
                v55 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v86, v87);
                v76[0] = v76;
                MEMORY[0x24BDAC7A8](v55);
                v57 = (_QWORD *)((char *)v76 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
                (*(void (**)(uint64_t *))(v58 + 16))(v57);
                v59 = *v57;
                v60 = v57[1];
                v84 = MEMORY[0x24BEE0D00];
                v85 = MEMORY[0x24BEE0D08];
                *(_QWORD *)&v83 = v59;
                *((_QWORD *)&v83 + 1) = v60;
                v61 = v77;
                v36[(v77 >> 6) + 8] |= 1 << v77;
                v62 = (uint64_t *)(v36[6] + 16 * v61);
                *v62 = v16;
                v62[1] = v15;
                sub_23ABD76F0(&v83, v36[7] + 40 * v61);
                v63 = v36[2];
                v64 = __OFADD__(v63, 1);
                v65 = v63 + 1;
                if (v64)
                  goto LABEL_68;
                v36[2] = v65;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
                swift_bridgeObjectRetain();
LABEL_57:
                *v78 = v36;

LABEL_62:
                swift_bridgeObjectRelease_n();
                goto LABEL_4;
              }
            }
            v52 = v36[7] + 40 * v29;
            __swift_destroy_boxed_opaque_existential_1(v52);
            sub_23ABD76F0(&v86, v52);
            goto LABEL_57;
          }
        }
        objc_opt_self();
        v37 = swift_dynamicCastObjCClass();
        if (!v37)
        {
LABEL_28:

          goto LABEL_4;
        }
        v38 = (void *)v37;
        swift_bridgeObjectRetain();
        v77 = (unint64_t)v21;
        v39 = objc_msgSend(v38, sel_longLongValue);
        v90 = MEMORY[0x24BEE4010];
        v89 = MEMORY[0x24BEE4008];
        *(_QWORD *)&v88 = v39;
        sub_23ABD76F0(&v88, (uint64_t)&v86);
        v40 = v78;
        v41 = swift_isUniquelyReferenced_nonNull_native();
        v91 = (_QWORD *)*v40;
        v42 = v91;
        *v40 = 0x8000000000000000;
        v44 = sub_23AAAF4C4(v16, v15);
        v45 = v42[2];
        v46 = (v43 & 1) == 0;
        v47 = v45 + v46;
        if (__OFADD__(v45, v46))
          goto LABEL_67;
        v48 = v43;
        if (v42[3] >= v47)
        {
          if ((v41 & 1) != 0)
          {
            v51 = v91;
            if ((v43 & 1) == 0)
              goto LABEL_59;
          }
          else
          {
            sub_23B18AC18();
            v51 = v91;
            if ((v48 & 1) == 0)
              goto LABEL_59;
          }
        }
        else
        {
          sub_23AD17D94(v47, v41);
          v49 = sub_23AAAF4C4(v16, v15);
          if ((v48 & 1) != (v50 & 1))
            goto LABEL_70;
          v44 = v49;
          v51 = v91;
          if ((v48 & 1) == 0)
          {
LABEL_59:
            v66 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v86, v87);
            v76[0] = v76;
            MEMORY[0x24BDAC7A8](v66);
            v68 = (_QWORD *)((char *)v76 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v69 + 16))(v68);
            v70 = *v68;
            v85 = MEMORY[0x24BEE4010];
            v84 = MEMORY[0x24BEE4008];
            *(_QWORD *)&v83 = v70;
            v51[(v44 >> 6) + 8] |= 1 << v44;
            v71 = (uint64_t *)(v51[6] + 16 * v44);
            *v71 = v16;
            v71[1] = v15;
            sub_23ABD76F0(&v83, v51[7] + 40 * v44);
            v72 = v51[2];
            v64 = __OFADD__(v72, 1);
            v73 = v72 + 1;
            if (v64)
              goto LABEL_69;
            v51[2] = v73;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
            swift_bridgeObjectRetain();
            goto LABEL_61;
          }
        }
        v53 = v51[7] + 40 * v44;
        __swift_destroy_boxed_opaque_existential_1(v53);
        sub_23ABD76F0(&v86, v53);
LABEL_61:
        v74 = (void *)v77;
        *v78 = v51;

        goto LABEL_62;
      }

      swift_bridgeObjectRelease_n();
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_65;
  }
  if (v11 >= v82)
    return swift_release();
  v12 = *(_QWORD *)(v81 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_22;
  v8 = v11 + 1;
  if (v11 + 1 >= v82)
    return swift_release();
  v12 = *(_QWORD *)(v81 + 8 * v8);
  if (v12)
    goto LABEL_22;
  v8 = v11 + 2;
  if (v11 + 2 >= v82)
    return swift_release();
  v12 = *(_QWORD *)(v81 + 8 * v8);
  if (v12)
    goto LABEL_22;
  v8 = v11 + 3;
  if (v11 + 3 >= v82)
    return swift_release();
  v12 = *(_QWORD *)(v81 + 8 * v8);
  if (v12)
  {
LABEL_22:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_23;
  }
  v13 = v11 + 4;
  if (v13 >= v82)
    return swift_release();
  v12 = *(_QWORD *)(v81 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v82)
      return swift_release();
    v12 = *(_QWORD *)(v81 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

_QWORD *sub_23ADBA6BC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  _QWORD *v6;
  void (*v7)(void **, _QWORD, _QWORD, _QWORD, uint64_t (*)(unint64_t), uint64_t, uint64_t (*)(), _QWORD *);
  NSObject *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  void *v13;

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = MEMORY[0x24BEE4B00];
  v4 = dispatch_group_create();
  dispatch_group_enter(v4);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  v13 = a1;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v1;
  v6[3] = a1;
  v6[4] = sub_23ADF2480;
  v6[5] = v3;
  v6[6] = sub_23ADF3528;
  v6[7] = v5;
  v7 = *(void (**)(void **, _QWORD, _QWORD, _QWORD, uint64_t (*)(unint64_t), uint64_t, uint64_t (*)(), _QWORD *))(*(_QWORD *)v1 + 144);
  swift_retain_n();
  v8 = v4;
  v9 = a1;
  swift_retain();
  swift_retain();
  v7(&v13, 0, 0, 0, sub_23ADF2480, v3, sub_23ADF248C, v6);
  swift_release();
  swift_release();
  swift_release();
  sub_23B1C6AD0();
  swift_beginAccess();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_23AEA5A2C(v10);
  swift_release();

  swift_bridgeObjectRelease();
  return v11;
}

size_t sub_23ADBA840(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(uint64_t *, _QWORD, _QWORD, _QWORD, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(), _QWORD *);
  NSObject *v10;
  uint64_t v11;
  size_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = MEMORY[0x24BEE4B00];
  v6 = dispatch_group_create();
  dispatch_group_enter(v6);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  v14 = a1;
  v15 = a2;
  v16 = a1;
  v17 = a2;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v2;
  sub_23AA9F454(&v16, (uint64_t)(v8 + 3));
  v8[5] = sub_23ADF2328;
  v8[6] = v5;
  v8[7] = sub_23ADF2330;
  v8[8] = v7;
  v9 = *(void (**)(uint64_t *, _QWORD, _QWORD, _QWORD, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(), _QWORD *))(*(_QWORD *)v2 + 144);
  swift_retain_n();
  v10 = v6;
  swift_retain();
  swift_retain();
  v9(&v14, 0, 0, 0, sub_23ADF2328, v5, sub_23ADF233C, v8);
  swift_release();
  swift_release();
  swift_release();
  sub_23B1C6AD0();
  swift_beginAccess();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_23AEA5B24(v11);
  swift_release();

  swift_bridgeObjectRelease();
  return v12;
}

void sub_23ADBA9DC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, uint64_t *, _QWORD, uint64_t, void (*)(uint64_t), uint64_t);
  NSObject *v13;
  int v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (unsigned __int8 *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a2;
  v9 = dispatch_group_create();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_BYTE *)(v10 + 24) = -1;
  dispatch_group_enter(v9);
  v29 = 0;
  v30 = 0;
  v31 = 1;
  v32 = 0u;
  v33 = 0u;
  v34 = 0;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  v12 = *(void (**)(uint64_t *, uint64_t *, _QWORD, uint64_t, void (*)(uint64_t), uint64_t))(*v3 + 136);
  swift_retain();
  v13 = v9;
  v12(&v35, &v29, 0, 1, sub_23ADF2428, v11);
  swift_release();
  sub_23AAAE4D0(v29, v30, v31, v32, *((unint64_t *)&v32 + 1));
  sub_23B1C6AD0();
  swift_beginAccess();
  v14 = *(unsigned __int8 *)(v10 + 24);
  if (v14 == 255)
    goto LABEL_7;
  v15 = *(void **)(v10 + 16);
  if ((v14 & 1) != 0)
  {
    v28 = *(_QWORD *)(v10 + 16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    swift_willThrowTypedImpl();
LABEL_7:
    swift_release();

    return;
  }
  if (v15)
  {
    v28 = *(_QWORD *)(v10 + 16);
    v16 = a1[3];
    v27 = a1[4];
    v26[1] = __swift_project_boxed_opaque_existential_1(a1, v16);
    sub_23ADF2448(v15, v14);
    v17 = objc_msgSend(v15, sel_description);
    v26[0] = a1;
    v18 = v17;
    v19 = sub_23B1C63E0();
    v21 = v20;

    sub_23AEBD130(v19, v21, v16, v27);
    swift_bridgeObjectRelease();
    sub_23AAA3120((uint64_t)v8);
    LODWORD(v16) = *v8;
    sub_23AA937BC((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    if ((_DWORD)v16 == 1)
    {
      v22 = v26[0][3];
      v23 = v26[0][4];
      v24 = __swift_project_boxed_opaque_existential_1(v26[0], v22);
      MEMORY[0x24BDAC7A8](v24);
      v26[-4] = v3;
      v26[-3] = &v28;
      v26[-2] = (_QWORD *)1;
      sub_23AEBD1D4(32, 0xE100000000000000, sub_23ADF2460, (uint64_t)&v26[-6], v22, MEMORY[0x24BEE4AE0] + 8, v23);

      sub_23ADF2430(v15, v14);
      swift_release();
      return;
    }

    v25 = v15;
  }
  else
  {

    v25 = 0;
  }
  sub_23ADF2430(v25, v14);
  swift_release();
}

uint64_t sub_23ADBACE0(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, __int128 *, _QWORD, uint64_t, void (*)(uint64_t), uint64_t);
  NSObject *v21;
  NSObject *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  void **v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char v59;

  v4 = v3;
  v46 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v48 = (void **)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for VFSItem(0);
  v13 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v45 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = a2;
  v59 = a3;
  v15 = dispatch_group_create();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E40);
  v16 = swift_allocBox();
  v18 = v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v17, 1, 1, v7);
  dispatch_group_enter(v15);
  v56 = 0u;
  v57 = 0u;
  v54 = 0u;
  v55 = 0u;
  v52 = 0u;
  v53 = 0u;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v16;
  *(_QWORD *)(v19 + 24) = v15;
  v20 = *(void (**)(uint64_t *, __int128 *, _QWORD, uint64_t, void (*)(uint64_t), uint64_t))(*(_QWORD *)v4 + 136);
  v50 = v16;
  swift_retain();
  v21 = v15;
  v47 = v4;
  v20(&v58, &v52, 0, 1, sub_23ADF2304, v19);
  v22 = v21;
  swift_release();
  v44 = v57;
  v43 = *((_QWORD *)&v56 + 1);
  sub_23AAAEE68(v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55, *((uint64_t *)&v55 + 1), v56);
  sub_23B1C6AD0();
  swift_beginAccess();
  v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v18, 1, v7);
  v24 = v49;
  if (v23)
    goto LABEL_4;
  v25 = (uint64_t)v12;
  v26 = v49;
  v27 = v46;
  v28 = (uint64_t)v45;
  v30 = v47;
  v29 = v48;
  sub_23AA8EFC8(v18, (uint64_t)v48, (uint64_t *)&unk_2542E21B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = *v29;
    v51 = v31;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    swift_willThrowTypedImpl();

    v24 = v26;
    v22 = v21;
    v12 = (char *)v25;
LABEL_4:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, 1, 1, v24);
    v32 = (uint64_t)v12;
LABEL_5:

    sub_23AA8A05C(v32, &qword_2542E72C0);
    return swift_release();
  }
  v32 = v25;
  sub_23AA724E8((uint64_t)v29, v25, &qword_2542E72C0);
  v34 = v26;
  v22 = v21;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v25, 1, v26) == 1)
    goto LABEL_5;
  sub_23AB3CAF0(v25, v28);
  v35 = v27[3];
  v36 = v27[4];
  __swift_project_boxed_opaque_existential_1(v27, v35);
  v37 = sub_23AC3E1F8();
  sub_23AEBD130(v37, v38, v35, v36);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v28 + *(int *)(v34 + 28)) == 1)
  {
    v39 = v27[3];
    v40 = v27[4];
    v41 = __swift_project_boxed_opaque_existential_1(v27, v39);
    MEMORY[0x24BDAC7A8](v41);
    v42 = v30;
    v43 = v28;
    *(_QWORD *)&v44 = 1;
    sub_23AEBD1D4(32, 0xE100000000000000, (void (*)(_QWORD *))sub_23ADF230C, (uint64_t)(&v45 - 6), v39, MEMORY[0x24BEE4AE0] + 8, v40);
  }

  sub_23AA937BC(v28, type metadata accessor for VFSItem);
  return swift_release();
}

void sub_23ADBB0EC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  unint64_t v8;
  unint64_t v9;

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | a1 & 0x1000000000000000))
  {
    sub_23B1C6EF0();
  }
  else if ((a2 & 0x2000000000000000) != 0)
  {
    v7 = fpfs_lp_faccessat();
    v8 = *a3;
    v9 = 0x8000000000000040;
    if (v7)
      v9 = 0x8000000000000048;
    *a3 = v9;
    sub_23ACF212C(v8);
  }
  else
  {
    if ((a1 & 0x1000000000000000) != 0)
    {
      v5 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
      v6 = a1 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      v5 = sub_23B1C6F80();
    }
    sub_23B1B1824(v5, v6, (uint64_t (*)(void))sub_23ADF1D30);
  }
}

void sub_23ADBB1FC(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int64_t v54;
  int64_t v55;
  unint64_t v56;
  unint64_t v57;
  int64_t v58;
  unint64_t v59;
  int64_t v60;
  int64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int64_t v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  int64_t v72;
  unint64_t v73;
  int64_t v74;
  int64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  int64_t v98;
  unint64_t v99;
  unint64_t v100;
  int64_t v101;
  unint64_t v102;
  int64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int64_t v128;
  int64_t v129;
  int64_t v130;
  int64_t v131;
  uint64_t v132;
  uint64_t i;
  int64_t v134;
  uint64_t v135;

  v2 = v1;
  if (sub_23AE1DB1C() && !*(_QWORD *)(v1[4] + 16))
  {
    v121 = a1[3];
    v122 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v121);
    sub_23AEBD130(0xD000000000000022, 0x800000023B201CD0, v121, v122);
    return;
  }
  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(0xD000000000000016, 0x800000023B201C30, v3, v4);
  swift_bridgeObjectRelease();
  v5 = *v1;
  v123 = v1;
  if (!*(_QWORD *)(*v1 + 16))
    goto LABEL_27;
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(0xD000000000000011, 0x800000023B201C50, v6, v7);
  swift_bridgeObjectRelease();
  v127 = v5 + 64;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v131 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_24;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_156;
    if (v14 >= v131)
      goto LABEL_26;
    v15 = *(_QWORD *)(v127 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v131)
        goto LABEL_26;
      v15 = *(_QWORD *)(v127 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v131)
          goto LABEL_26;
        v15 = *(_QWORD *)(v127 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_24:
    v17 = *(_QWORD *)(v5 + 56);
    v18 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + 16 * v13 + 8);
    v19 = v17 + 24 * v13;
    v20 = *(_QWORD *)v19;
    v21 = *(_BYTE *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v23);
    if (v18 < 2)
    {
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
    }
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AD6B358(v20, v21, v22);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(538976288, 0xE400000000000000, v23, v24);
    swift_bridgeObjectRelease();
  }
  v16 = v14 + 3;
  if (v16 >= v131)
    goto LABEL_26;
  v15 = *(_QWORD *)(v127 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_161;
    if (v11 >= v131)
      break;
    v15 = *(_QWORD *)(v127 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_26:
  swift_release();
  v2 = v1;
LABEL_27:
  v25 = v2[1];
  if (!*(_QWORD *)(v25 + 16))
    goto LABEL_49;
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(0xD000000000000015, 0x800000023B201C70, v26, v27);
  swift_bridgeObjectRelease();
  v124 = v25 + 64;
  v28 = 1 << *(_BYTE *)(v25 + 32);
  v29 = -1;
  if (v28 < 64)
    v29 = ~(-1 << v28);
  v30 = v29 & *(_QWORD *)(v25 + 64);
  v128 = (unint64_t)(v28 + 63) >> 6;
  swift_bridgeObjectRetain();
  v31 = 0;
  while (2)
  {
    if (v30)
    {
      v32 = __clz(__rbit64(v30));
      v30 &= v30 - 1;
      v134 = v31;
      v33 = v32 | (v31 << 6);
      v34 = v25;
LABEL_32:
      v35 = *(void **)(*(_QWORD *)(v34 + 48) + 8 * v33);
      v36 = *(_QWORD *)(v34 + 56) + 24 * v33;
      v37 = *(_QWORD *)v36;
      v38 = *(_BYTE *)(v36 + 8);
      v39 = *(_QWORD *)(v36 + 16);
      v40 = a1[3];
      v41 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v40);
      v42 = v35;
      sub_23AA7B734();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23AD6B358(v37, v38, v39);
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23AEBD130(538976288, 0xE400000000000000, v40, v41);

      swift_bridgeObjectRelease();
      v31 = v134;
      continue;
    }
    break;
  }
  v43 = v31 + 1;
  v34 = v25;
  if (__OFADD__(v31, 1))
    goto LABEL_157;
  if (v43 >= v128)
    goto LABEL_48;
  v44 = *(_QWORD *)(v124 + 8 * v43);
  v45 = v31 + 1;
  if (v44)
    goto LABEL_47;
  v45 = v31 + 2;
  if (v31 + 2 >= v128)
    goto LABEL_48;
  v44 = *(_QWORD *)(v124 + 8 * v45);
  if (v44)
    goto LABEL_47;
  v45 = v31 + 3;
  if (v31 + 3 >= v128)
    goto LABEL_48;
  v44 = *(_QWORD *)(v124 + 8 * v45);
  if (v44)
  {
LABEL_47:
    v30 = (v44 - 1) & v44;
    v134 = v45;
    v33 = __clz(__rbit64(v44)) + (v45 << 6);
    goto LABEL_32;
  }
  v46 = v31 + 4;
  if (v31 + 4 >= v128)
    goto LABEL_48;
  v44 = *(_QWORD *)(v124 + 8 * v46);
  if (v44)
  {
    v45 = v31 + 4;
    goto LABEL_47;
  }
  while (1)
  {
    v45 = v46 + 1;
    if (__OFADD__(v46, 1))
      goto LABEL_162;
    if (v45 >= v128)
      break;
    v44 = *(_QWORD *)(v124 + 8 * v45);
    ++v46;
    if (v44)
      goto LABEL_47;
  }
LABEL_48:
  swift_release();
  v2 = v123;
LABEL_49:
  v47 = v2[2];
  if (*(_QWORD *)(v47 + 16) || *(_QWORD *)(v2[3] + 16))
  {
    v48 = a1[3];
    v49 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v48);
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    if (__OFADD__(*(_QWORD *)(v47 + 16), *(_QWORD *)(v123[3] + 16)))
      goto LABEL_164;
    v125 = v123[3];
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(0xD000000000000018, 0x800000023B201C90, v48, v49);
    swift_bridgeObjectRelease();
    v50 = v47 + 56;
    v51 = -1;
    v52 = -1 << *(_BYTE *)(v47 + 32);
    if (-v52 < 64)
      v51 = ~(-1 << -(char)v52);
    v53 = v51 & *(_QWORD *)(v47 + 56);
    v54 = (unint64_t)(63 - v52) >> 6;
    swift_bridgeObjectRetain();
    v55 = 0;
    while (1)
    {
      if (v53)
      {
        v56 = __clz(__rbit64(v53));
        v53 &= v53 - 1;
        v57 = v56 | (v55 << 6);
      }
      else
      {
        v58 = v55 + 1;
        if (__OFADD__(v55, 1))
        {
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        if (v58 >= v54)
          goto LABEL_75;
        v59 = *(_QWORD *)(v50 + 8 * v58);
        v60 = v55 + 1;
        if (!v59)
        {
          v60 = v55 + 2;
          if (v55 + 2 >= v54)
            goto LABEL_75;
          v59 = *(_QWORD *)(v50 + 8 * v60);
          if (!v59)
          {
            v60 = v55 + 3;
            if (v55 + 3 >= v54)
              goto LABEL_75;
            v59 = *(_QWORD *)(v50 + 8 * v60);
            if (!v59)
            {
              v61 = v55 + 4;
              if (v55 + 4 >= v54)
              {
LABEL_75:
                sub_23ACF19B8();
                v132 = v125 + 56;
                v65 = -1;
                v66 = -1 << *(_BYTE *)(v125 + 32);
                if (-v66 < 64)
                  v65 = ~(-1 << -(char)v66);
                v67 = v65 & *(_QWORD *)(v125 + 56);
                v129 = (unint64_t)(63 - v66) >> 6;
                swift_bridgeObjectRetain();
                v68 = 0;
                while (1)
                {
                  if (v67)
                  {
                    v70 = __clz(__rbit64(v67));
                    v67 &= v67 - 1;
                    v71 = v70 | (v68 << 6);
                  }
                  else
                  {
                    v72 = v68 + 1;
                    if (__OFADD__(v68, 1))
                      goto LABEL_155;
                    if (v72 >= v129)
                    {
LABEL_109:
                      sub_23ACF19B8();
                      v2 = v123;
                      goto LABEL_110;
                    }
                    v73 = *(_QWORD *)(v132 + 8 * v72);
                    v74 = v68 + 1;
                    if (!v73)
                    {
                      v74 = v68 + 2;
                      if (v68 + 2 >= v129)
                        goto LABEL_109;
                      v73 = *(_QWORD *)(v132 + 8 * v74);
                      if (!v73)
                      {
                        v74 = v68 + 3;
                        if (v68 + 3 >= v129)
                          goto LABEL_109;
                        v73 = *(_QWORD *)(v132 + 8 * v74);
                        if (!v73)
                        {
                          v75 = v68 + 4;
                          if (v68 + 4 >= v129)
                            goto LABEL_109;
                          v73 = *(_QWORD *)(v132 + 8 * v75);
                          if (!v73)
                          {
                            while (1)
                            {
                              v74 = v75 + 1;
                              if (__OFADD__(v75, 1))
                                break;
                              if (v74 >= v129)
                                goto LABEL_109;
                              v73 = *(_QWORD *)(v132 + 8 * v74);
                              ++v75;
                              if (v73)
                                goto LABEL_95;
                            }
LABEL_160:
                            __break(1u);
LABEL_161:
                            __break(1u);
LABEL_162:
                            __break(1u);
                            goto LABEL_163;
                          }
                          v74 = v68 + 4;
                        }
                      }
                    }
LABEL_95:
                    v67 = (v73 - 1) & v73;
                    v71 = __clz(__rbit64(v73)) + (v74 << 6);
                    v68 = v74;
                  }
                  v76 = *(void **)(*(_QWORD *)(v125 + 48) + 8 * v71);
                  v78 = a1[3];
                  v77 = a1[4];
                  __swift_project_boxed_opaque_existential_1(a1, v78);
                  v79 = sub_23B1C63E0();
                  v81 = v80;
                  if (v79 == sub_23B1C63E0() && v81 == v82)
                  {
                    v69 = v76;
                    swift_bridgeObjectRelease_n();
                  }
                  else
                  {
                    v84 = sub_23B1C7388();
                    v85 = v76;
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v84 & 1) == 0)
                    {
                      v86 = sub_23B1C63E0();
                      v88 = v87;
                      if (v86 == sub_23B1C63E0() && v88 == v89)
                      {
                        swift_bridgeObjectRelease_n();
                      }
                      else
                      {
                        v91 = sub_23B1C7388();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if ((v91 & 1) == 0)
                          sub_23B1C63E0();
                      }
                    }
                  }
                  sub_23B1C64F4();
                  swift_bridgeObjectRelease();
                  sub_23AEBD130(0x3A706620202020, 0xE700000000000000, v78, v77);

                  swift_bridgeObjectRelease();
                }
              }
              v59 = *(_QWORD *)(v50 + 8 * v61);
              if (!v59)
              {
                while (1)
                {
                  v60 = v61 + 1;
                  if (__OFADD__(v61, 1))
                    break;
                  if (v60 >= v54)
                    goto LABEL_75;
                  v59 = *(_QWORD *)(v50 + 8 * v60);
                  ++v61;
                  if (v59)
                    goto LABEL_72;
                }
LABEL_159:
                __break(1u);
                goto LABEL_160;
              }
              v60 = v55 + 4;
            }
          }
        }
LABEL_72:
        v53 = (v59 - 1) & v59;
        v57 = __clz(__rbit64(v59)) + (v60 << 6);
        v55 = v60;
      }
      v62 = *(unsigned __int8 *)(*(_QWORD *)(v47 + 48) + 16 * v57 + 8);
      v63 = a1[3];
      v64 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v63);
      if (v62 < 2)
      {
        sub_23B1C7304();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
      }
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23AEBD130(0x3A736620202020, 0xE700000000000000, v63, v64);
      swift_bridgeObjectRelease();
    }
  }
LABEL_110:
  v92 = v2[4];
  if (!*(_QWORD *)(v92 + 16))
    return;
  v93 = a1[3];
  v94 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v93);
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(0xD000000000000014, 0x800000023B201CB0, v93, v94);
  swift_bridgeObjectRelease();
  v126 = v92 + 56;
  v95 = 1 << *(_BYTE *)(v92 + 32);
  v96 = -1;
  if (v95 < 64)
    v96 = ~(-1 << v95);
  v97 = v96 & *(_QWORD *)(v92 + 56);
  v130 = (unint64_t)(v95 + 63) >> 6;
  swift_bridgeObjectRetain();
  v98 = 0;
  while (2)
  {
    if (v97)
    {
      v99 = __clz(__rbit64(v97));
      v97 &= v97 - 1;
      v100 = v99 | (v98 << 6);
LABEL_132:
      v104 = *(_QWORD *)(v92 + 48) + 16 * v100;
      v105 = *(void **)v104;
      v106 = *(unsigned __int8 *)(v104 + 8);
      v107 = *(_BYTE *)(v104 + 9);
      v108 = a1[3];
      v135 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v108);
      if ((v107 & 1) != 0)
      {
        v109 = sub_23B1C63E0();
        v111 = v110;
        if (v109 == sub_23B1C63E0() && v111 == v112)
        {
          sub_23AA88218(v105, v106, 1);
          sub_23AA88218(v105, v106, 1);
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v114 = sub_23B1C7388();
          sub_23AA88218(v105, v106, 1);
          sub_23AA88218(v105, v106, 1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v114 & 1) == 0)
          {
            v115 = sub_23B1C63E0();
            v117 = v116;
            if (v115 == sub_23B1C63E0() && v117 == v118)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              v120 = sub_23B1C7388();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v120 & 1) == 0)
                sub_23B1C63E0();
            }
          }
        }
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        sub_23AA862DC(v105, v106, 1);
      }
      else
      {
        if (v106 <= 1)
        {
          sub_23B1C7304();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
        }
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
      }
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23AEBD130(538976288, 0xE400000000000000, v108, v135);
      swift_bridgeObjectRelease();
      sub_23AA862DC(v105, v106, v107);
      continue;
    }
    break;
  }
  v101 = v98 + 1;
  if (__OFADD__(v98, 1))
    goto LABEL_158;
  if (v101 >= v130)
  {
LABEL_151:
    swift_release();
    return;
  }
  v102 = *(_QWORD *)(v126 + 8 * v101);
  ++v98;
  if (v102)
    goto LABEL_131;
  v98 = v101 + 1;
  if (v101 + 1 >= v130)
    goto LABEL_151;
  v102 = *(_QWORD *)(v126 + 8 * v98);
  if (v102)
    goto LABEL_131;
  v98 = v101 + 2;
  if (v101 + 2 >= v130)
    goto LABEL_151;
  v102 = *(_QWORD *)(v126 + 8 * v98);
  if (v102)
  {
LABEL_131:
    v97 = (v102 - 1) & v102;
    v100 = __clz(__rbit64(v102)) + (v98 << 6);
    goto LABEL_132;
  }
  v103 = v101 + 3;
  if (v103 >= v130)
    goto LABEL_151;
  v102 = *(_QWORD *)(v126 + 8 * v103);
  if (v102)
  {
    v98 = v103;
    goto LABEL_131;
  }
  while (1)
  {
    v98 = v103 + 1;
    if (__OFADD__(v103, 1))
      break;
    if (v98 >= v130)
      goto LABEL_151;
    v102 = *(_QWORD *)(v126 + 8 * v98);
    ++v103;
    if (v102)
      goto LABEL_131;
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
}

uint64_t sub_23ADBC48C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_physicalLocation;
  v4 = sub_23B1C5A08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23ADBC598@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23AA8EFC8(v1 + OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_logicalLocation, a1, (uint64_t *)&unk_2542E6740);
}

uint64_t sub_23ADBC5D4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_inode);
}

uint64_t sub_23ADBC5F4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_shouldRefreshBookmark);
}

uint64_t sub_23ADBC604(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  _BYTE *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  objc_class *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  _BYTE v41[12];
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  char v49[16];
  uint64_t v50;
  objc_super v51;
  uint64_t v52;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1E8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v46 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v41[-v8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1E0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v41[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v41[-v15];
  v17 = v2;
  v52 = a1;
  v18 = sub_23B1C59E4();
  v20 = v19;
  v47 = a2;
  v50 = a2;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  swift_bridgeObjectRetain();
  v21 = v48;
  sub_23B0E399C(4294967294, v18, v20, 0x100000, 0, 0, (uint64_t)v9, (uint64_t)sub_23ADF3610, (uint64_t)v49);
  v48 = v21;
  if (v21)
  {
    sub_23AA8A05C((uint64_t)v9, &qword_2542DF1E8);

    swift_bridgeObjectRelease();
    v22 = sub_23B1C5A08();
    v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
    v23(v52, v22);
    v23(v47, v22);
    type metadata accessor for FPCKDetachedRoot(0);
    swift_deallocPartialClassInstance();
    return (uint64_t)v23;
  }
  v24 = v46;
  sub_23AA8EFC8((uint64_t)v9, (uint64_t)v46, &qword_2542DF1E8);
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v24, 1, v10);
  if ((_DWORD)result != 1)
  {
    v26 = *(int *)(v10 + 48);
    v27 = *(int *)(v10 + 64);
    v43 = v26;
    v44 = v27;
    sub_23AA724E8((uint64_t)v24, (uint64_t)v16, &qword_2542DF1E0);
    sub_23AA8A05C((uint64_t)v9, &qword_2542DF1E8);
    swift_bridgeObjectRelease();
    v28 = &v17[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_physicalLocation];
    v29 = sub_23B1C5A08();
    v30 = *(_BYTE **)(v29 - 8);
    v45 = v29;
    v46 = v30;
    (*((void (**)(char *, uint64_t, uint64_t))v30 + 2))(v28, v52, v29);
    sub_23AA8EFC8((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_2542E6740);
    v31 = *(_QWORD *)&v16[v26];
    v32 = v44;
    v42 = v16[v44];
    sub_23AA724E8((uint64_t)v14, (uint64_t)&v17[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_logicalLocation], (uint64_t *)&unk_2542E6740);
    v33 = *(int *)(v10 + 48);
    v34 = *(int *)(v10 + 64);
    sub_23AA8EFC8((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_2542E6740);
    *(_QWORD *)&v14[v33] = v31;
    v14[v34] = v42;
    *(_QWORD *)&v17[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_inode] = v31;
    sub_23AA8A05C((uint64_t)v14, (uint64_t *)&unk_2542E6740);
    v35 = *(int *)(v10 + 48);
    v36 = *(int *)(v10 + 64);
    sub_23AA724E8((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_2542E6740);
    *(_QWORD *)&v14[v35] = *(_QWORD *)&v16[v43];
    v37 = v16[v32];
    v14[v36] = v37;
    v17[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_shouldRefreshBookmark] = v37;

    sub_23AA8A05C((uint64_t)v14, (uint64_t *)&unk_2542E6740);
    v38 = (objc_class *)type metadata accessor for FPCKDetachedRoot(0);
    v51.receiver = v17;
    v51.super_class = v38;
    v23 = (void (*)(uint64_t, uint64_t))objc_msgSendSuper2(&v51, sel_init);
    v39 = v45;
    v40 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v46 + 1);
    v40(v52, v45);
    v40(v47, v39);
    return (uint64_t)v23;
  }
  __break(1u);
  return result;
}

uint64_t sub_23ADBC9B0@<X0>(int a1@<W0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[7];
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  int v40;
  uint64_t *v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for VFSDetachedRootBookmark();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = 0;
  v29 = 0;
  v32 = 0;
  v31 = 0;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v40 = a1;
  v41 = &v29;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AC374EC);
  if (!v3)
  {
    v28 = 0;
    fpfs_is_detached_root();
    if ((v28 & 1) != 0)
    {
      v14 = sub_23B1C5A08();
      v15 = *(_QWORD *)(v14 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v9, a2, v14);
      v16 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56);
      v16(v9, 0, 1, v14);
      sub_23AD2AFBC(a1, (uint64_t)v9, (uint64_t)v12);
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1E0);
      v22 = *(int *)(v21 + 48);
      v27[0] = *(int *)(v21 + 64);
      v23 = &v12[*(int *)(v10 + 20)];
      v25 = *(_QWORD *)v23;
      v24 = *((_QWORD *)v23 + 1);
      v27[5] = v25;
      v27[6] = v24;
      v27[3] = 47;
      v27[4] = 0xE100000000000000;
      v27[1] = 58;
      v27[2] = 0xE100000000000000;
      sub_23AAA420C();
      sub_23B1C6CF8();
      sub_23B1C5978();
      swift_bridgeObjectRelease();
      v16(a3, 0, 1, v14);
      *(_QWORD *)&a3[v22] = v30;
      v26 = v12[*(int *)(v10 + 28)];
      result = sub_23AA937BC((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for VFSDetachedRootBookmark);
      a3[v27[0]] = v26;
    }
    else
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1E0);
      v18 = *(int *)(v17 + 48);
      v19 = *(int *)(v17 + 64);
      v20 = sub_23B1C5A08();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a3, 1, 1, v20);
      *(_QWORD *)&a3[v18] = v30;
      a3[v19] = 0;
    }
  }
  return result;
}

void sub_23ADBCDF4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_23ADBCE4C()
{
  return sub_23ABF7D20(0, (uint64_t (*)(void))type metadata accessor for FPCKDetachedRoot);
}

uint64_t type metadata accessor for FPCKDetachedRoot(uint64_t a1)
{
  return sub_23AA94094(a1, (uint64_t *)&unk_2542DF230);
}

id sub_23ADBCEEC(char a1, uint64_t a2)
{
  objc_class *v2;
  _BYTE *v5;
  objc_super v7;

  v5 = objc_allocWithZone(v2);
  v5[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_shouldPause] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_semaphore] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_23ADBCF50(char a1, uint64_t a2)
{
  _BYTE *v2;
  objc_super v4;

  v2[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_shouldPause] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_semaphore] = a2;
  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for FPShouldPauseResult();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for FPShouldPauseResult()
{
  return objc_opt_self();
}

void sub_23ADBD018()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_23ADBD070(uint64_t a1)
{
  return sub_23ABF7D20(a1, type metadata accessor for FPShouldPauseResult);
}

uint64_t sub_23ADBD08C(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23B1C752C();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_23B1C7394();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_23ADBD1D0(_QWORD *a1)
{
  return sub_23ADBD08C(a1);
}

uint64_t sub_23ADBD1E8(uint64_t a1, uint64_t a2)
{
  return sub_23ADEB830(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_23ADBD200(uint64_t a1, uint64_t a2, __int16 a3, _QWORD *a4, uint64_t a5, uint64_t a6, __int16 a7, _QWORD *a8)
{
  return sub_23ADEB920(a2, a3, SHIBYTE(a3), a4, a6, a7, SHIBYTE(a7), a8);
}

uint64_t sub_23ADBD224()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23ADBD250 + 4 * byte_23B1D9415[*v0]))(0x746E756F63, 0xE500000000000000);
}

uint64_t sub_23ADBD250()
{
  return 0x6F69746365726964;
}

uint64_t sub_23ADBD26C()
{
  return 0x65646F43626F6ALL;
}

uint64_t sub_23ADBD284()
{
  return 0x65646953626F6ALL;
}

unint64_t sub_23ADBD29C()
{
  return 0xD000000000000010;
}

uint64_t sub_23ADBD2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23ADEBD50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23ADBD2DC()
{
  sub_23ADEBA5C();
  return sub_23B1C7544();
}

uint64_t sub_23ADBD304()
{
  sub_23ADEBA5C();
  return sub_23B1C7550();
}

uint64_t sub_23ADBD32C(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  char v21;

  v17 = a5;
  v20 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5980);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23ADEBA5C();
  sub_23B1C7538();
  LOBYTE(v18) = 0;
  sub_23B1C728C();
  if (v5)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v13 = v9;
  v14 = v17;
  v18 = a3;
  v15 = v20;
  v19 = v20;
  v21 = 1;
  sub_23ADEBAA0();
  sub_23B1C72A4();
  LOBYTE(v18) = BYTE1(v15);
  v21 = 2;
  sub_23ADEBAE4();
  sub_23B1C7238();
  LOBYTE(v18) = BYTE2(v15);
  v21 = 3;
  sub_23ADEBB28();
  sub_23B1C7238();
  v18 = v14;
  v21 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
  sub_23ADEBB6C();
  sub_23B1C72A4();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v11, v8);
}

uint64_t sub_23ADBD548(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADBD32C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int16 *)(v1 + 16) | (*(unsigned __int8 *)(v1 + 18) << 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23ADBD570(uint64_t a1, uint64_t a2)
{
  return sub_23ADEB920(*(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_BYTE *)(a1 + 17), *(_QWORD **)(a1 + 24), *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16), *(_BYTE *)(a2 + 17), *(_QWORD **)(a2 + 24));
}

uint64_t sub_23ADBD5DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfFilesChecked;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBD668(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfFilesChecked);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBD6B0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBD738()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBD7C4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBD80C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBD894()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBD920(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBD968())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBD9F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInReconciliationTableCheck;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBDA7C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInReconciliationTableCheck);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBDAC4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBDB4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInBackupManifestCheck;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBDBD8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInBackupManifestCheck);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBDC20())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBDCA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfReconciliationTableEntries;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBDD34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfReconciliationTableEntries);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBDD7C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBDDC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_totalDatalessItems;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBDE04(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_totalDatalessItems);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBDE4C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBDE90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_totalMaterializedItems;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBDED4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_totalMaterializedItems);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBDF1C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBDF60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedFileSizes;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBDFA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedFileSizes);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBDFEC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBE030()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedSizeOfDisk;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBE074(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedSizeOfDisk);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBE0BC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBE100()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedDownloads;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBE144(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedDownloads);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBE18C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBE1D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedUploads;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBE214(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedUploads);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBE25C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBE2A0()
{
  return sub_23ADBE5E8();
}

uint64_t sub_23ADBE2AC(uint64_t a1)
{
  return sub_23ADBE6C0(a1, &OBJC_IVAR____TtC9libfssync4FPCK_multipleHardlinksExtensions);
}

uint64_t (*sub_23ADBE2B8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBE2FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_pendingSetSize;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBE340(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_pendingSetSize);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBE388())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t sub_23ADBE3CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetSize;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_23ADBE410(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetSize);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_23ADBE458())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBE49C()
{
  return sub_23ADBE5E8();
}

uint64_t sub_23ADBE4A8(uint64_t a1)
{
  return sub_23ADBE6C0(a1, &OBJC_IVAR____TtC9libfssync4FPCK_pendingSetItemPayload);
}

uint64_t (*sub_23ADBE4B4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBE4F8()
{
  return sub_23ADBE5E8();
}

uint64_t sub_23ADBE504(uint64_t a1)
{
  return sub_23ADBE6C0(a1, &OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetItemPayload);
}

uint64_t (*sub_23ADBE510())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBE5DC()
{
  return sub_23ADBE5E8();
}

uint64_t sub_23ADBE5E8()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23ADBE6B4(uint64_t a1)
{
  return sub_23ADBE6C0(a1, &OBJC_IVAR____TtC9libfssync4FPCK_telemetryReport);
}

uint64_t sub_23ADBE6C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23ADBE70C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBE750()
{
  return sub_23ADBE5E8();
}

uint64_t sub_23ADBE75C(uint64_t a1)
{
  return sub_23ADBE6C0(a1, &OBJC_IVAR____TtC9libfssync4FPCK_pendingSetErrors);
}

uint64_t (*sub_23ADBE768())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBE7AC()
{
  return sub_23ADBE5E8();
}

uint64_t sub_23ADBE7B8(uint64_t a1)
{
  return sub_23ADBE6C0(a1, &OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetErrors);
}

uint64_t (*sub_23ADBE7C4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_23ADBE808()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_volumeRole);
}

void sub_23ADBE818()
{
  sub_23B1C704C();
  __break(1u);
}

id sub_23ADBE870(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)())
{
  objc_class *v12;
  id v17;
  id v20;

  v17 = objc_allocWithZone(v12);
  if ((a8 & 1) != 0)
  {
    swift_retain();
  }
  else
  {
    a9 = 0;
    a10 = 0;
  }
  swift_getObjectType();
  v20 = sub_23ADEC718(a1, a2, a3, a4, a5, a6 & 1, a7 & 1, 0, 256, a9, a10, a11, a12);
  swift_release();
  swift_deallocPartialClassInstance();
  return v20;
}

id sub_23ADBE978(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)())
{
  id v17;

  if ((a8 & 1) != 0)
  {
    swift_retain();
  }
  else
  {
    a9 = 0;
    a10 = 0;
  }
  swift_getObjectType();
  v17 = sub_23ADEC718(a1, a2, a3, a4, a5, a6 & 1, a7 & 1, 0, 256, a9, a10, a11, a12);
  swift_release();
  swift_deallocPartialClassInstance();
  return v17;
}

id sub_23ADBEA70(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8, __int16 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)())
{
  return sub_23ADEC718(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 0x1FF, a10, a11, a12, a13);
}

uint64_t sub_23ADBEC58(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  const void *v30;
  int v31;
  void *v32;
  id v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void (*v38)(char *, uint64_t);
  unint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  char *v43;
  fp_task_tracker *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  signed int v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  signed int v54;
  uint64_t v55;
  _QWORD *v56;
  id v57;
  uint64_t v58;
  _QWORD *v59;
  id v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  void (*v65)(_QWORD, _QWORD, _QWORD);
  void *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  fp_task_tracker *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char isUniquelyReferenced_nonNull_native;
  char *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t);
  uint64_t v106;
  char *v107;
  fp_task_tracker *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  unint64_t v118;
  id v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124[11];
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  _OWORD v134[2];
  uint64_t v135;
  __int128 v136;

  v119 = a5;
  v120 = a1;
  v121 = a2;
  v8 = sub_23B1C5E4C();
  v116 = *(_QWORD *)(v8 - 8);
  v117 = (uint64_t *)v8;
  MEMORY[0x24BDAC7A8](v8);
  v122 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4E70);
  MEMORY[0x24BDAC7A8](v10);
  v110 = (char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_23B1C5A08();
  v12 = *(_QWORD *)(v123 - 8);
  v13 = MEMORY[0x24BDAC7A8](v123);
  v109 = (char *)&v107 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v113 = (void (*)(char *, uint64_t))((char *)&v107 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v107 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v107 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v107 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v107 - v26;
  sub_23B1C5918();
  v120 = v25;
  v114 = a3;
  v115 = a4;
  sub_23B1C5918();
  v28 = sub_23AB60D98();
  v111 = sub_23B1C63E0();
  v121 = v29;

  v112 = v5;
  v30 = *(const void **)(v5 + OBJC_IVAR____TtC9libfssync4FPCK_ioContext);
  v118 = *(unsigned int *)(v5 + OBJC_IVAR____TtC9libfssync4FPCK_ioContext + 8);
  v31 = *(unsigned __int8 *)(v5 + OBJC_IVAR____TtC9libfssync4FPCK_ioContext + 12);
  v32 = (void *)objc_opt_self();
  _Block_copy(v30);
  v33 = objc_msgSend(v32, sel_fp_insecureTempDirectoryIgnoringPersona);
  sub_23B1C59CC();

  type metadata accessor for ReadOnlyWharf();
  swift_allocObject();
  v34 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v35 = v123;
  v34(v19, v22, v123);
  v36 = 0x100000000;
  if (!v31)
    v36 = 0;
  v37 = (void *)sub_23B1AD8A4(0x4F52236672616877, 0xE800000000000000, (uint64_t)v19, v30, v36 | v118, 0, 0);
  v38 = *(void (**)(char *, uint64_t))(v12 + 8);
  v38(v22, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5598);
  v39 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_23B1CA760;
  v34((char *)(v40 + v39), v27, v35);
  v41 = objc_allocWithZone((Class)type metadata accessor for InternalPathsManager());
  swift_retain();
  v42 = (char *)sub_23AB60F08((uint64_t)v119, 0, 0, 0, 0, 0);
  type metadata accessor for VFSFileTree(0);
  swift_allocObject();
  v43 = 0;
  v44 = sub_23B152EB8(v40, (uint64_t)v37, v42, 0, 0, 0, 0, 0, 0, 0);
  v45 = (uint64_t)v113;
  v118 = (unint64_t)v34;
  v46 = (void *)swift_retain();
  if (objc_sync_enter(v46))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v44);
  swift_retain();
  if (objc_sync_exit(v44))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v44);
  v119 = v37;
  swift_release();
  if (qword_2542E5360 != -1)
    swift_once();
  v131 = xmmword_2542EDE40;
  *(_QWORD *)&v125 = 47;
  *((_QWORD *)&v125 + 1) = 0xE100000000000000;
  v124[0] = 58;
  v124[1] = 0xE100000000000000;
  sub_23AAA420C();
  sub_23B1C6CF8();
  sub_23B1C5984();
  swift_bridgeObjectRelease();
  sub_23AABACB8(v45);
  v107 = v27;
  v108 = v44;
  v113 = v38;
  v38((char *)v45, v123);
  swift_release();
  v47 = (void *)objc_opt_self();
  swift_retain();
  v48 = objc_msgSend(v47, sel_defaultStore);
  v49 = (int)objc_msgSend(v48, sel_softConcurrentOperationLimit);
  v50 = objc_msgSend(v48, sel_hardConcurrentOperationLimit);

  type metadata accessor for JobLimit();
  v51 = (_QWORD *)swift_allocObject();
  v51[2] = 0;
  v51[3] = v49;
  v51[4] = v49;
  v51[5] = v50;
  v52 = objc_msgSend(v47, sel_defaultStore);
  v53 = (int)objc_msgSend(v52, sel_softConcurrentContentUpdateLimit);
  v54 = objc_msgSend(v52, sel_hardConcurrentContentUpdateLimit);

  v55 = v54;
  v56 = (_QWORD *)swift_allocObject();
  v56[2] = 0;
  v56[3] = v53;
  v56[4] = v53;
  v56[5] = v55;
  v57 = objc_msgSend(v47, sel_defaultStore);
  v58 = (int)objc_msgSend(v57, sel_softConcurrentMetadataOnlyUpdateLimit);
  LODWORD(v53) = objc_msgSend(v57, sel_hardConcurrentMetadataOnlyUpdateLimit);

  v59 = (_QWORD *)swift_allocObject();
  v59[2] = 0;
  v59[3] = v58;
  v59[4] = v58;
  v59[5] = (int)v53;
  v60 = objc_msgSend(v47, sel_defaultStore);
  v61 = (int)objc_msgSend(v60, sel_softConcurrentProvideFileLimit);
  LODWORD(v47) = objc_msgSend(v60, sel_hardConcurrentProvideFileLimit);

  v62 = (_QWORD *)swift_allocObject();
  v62[2] = 0;
  v62[3] = v61;
  v62[4] = v61;
  v62[5] = (int)v47;
  type metadata accessor for RestoreUpgradeSchemaFPFileTree(0);
  swift_allocObject();
  v63 = sub_23B1490F0((uint64_t)v119, (uint64_t)v51, (uint64_t)v56, (uint64_t)v59, (uint64_t)v62);
  v64 = *(char **)(v112 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker);
  if (!v64)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v72 = (uint64_t)v107;
    v66 = v120;
    goto LABEL_85;
  }
  v65 = *(void (**)(_QWORD, _QWORD, _QWORD))(v112 + OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker);
  v66 = v120;
  if (!v65)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v72 = (uint64_t)v107;
    goto LABEL_85;
  }
  v67 = v109;
  ((void (*)(char *, char *, uint64_t))v118)(v109, v120, v123);
  v68 = type metadata accessor for TelemetrySignposter(0);
  v69 = (uint64_t)v110;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v110, 1, 1, v68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69F0);
  v70 = swift_allocObject();
  v71 = v108;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23AE306F4(v67, v71, v63, v69, 0x21uLL, 1801678950, 0xE400000000000000, v70);
  v122 = v64;
  v118 = (unint64_t)v65;
  v116 = v63;
  v73 = (uint64_t *)(v112 + OBJC_IVAR____TtC9libfssync4FPCK_openBackupDatabases);
  v74 = swift_beginAccess();
  MEMORY[0x23B85F008](v74);
  if (*(_QWORD *)((*v73 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_23B1C6740();
  sub_23B1C6788();
  sub_23B1C671C();
  swift_endAccess();
  v75 = (void *)sub_23B1C63BC();
  v76 = *v73;
  v77 = (unint64_t)*v73 >> 62;
  v117 = v73;
  if (!v77)
  {
    v78 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v78)
      goto LABEL_16;
LABEL_25:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v78 = sub_23B1C7088();
  if (!v78)
    goto LABEL_25;
LABEL_16:
  v79 = v78 - 1;
  if (__OFSUB__(v78, 1))
  {
    __break(1u);
  }
  else if ((v76 & 0xC000000000000001) == 0)
  {
    if ((v79 & 0x8000000000000000) != 0)
    {
LABEL_90:
      __break(1u);
      goto LABEL_91;
    }
    if (v79 >= *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_93;
    }
    swift_retain();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(qword_2542E45D8);
    v80 = swift_dynamicCastClassUnconditional();
    swift_retain();
    swift_release();
    goto LABEL_21;
  }
  MEMORY[0x23B85F860](v79, v76);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E45D8);
  v80 = swift_dynamicCastClassUnconditional();
  swift_retain();
  swift_unknownObjectRelease();
LABEL_21:
  v81 = v122 + 16;
  swift_beginAccess();
  if (v80)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v125 = *v81;
    *v81 = 0x8000000000000000;
    sub_23AD26B48(v80, v75, isUniquelyReferenced_nonNull_native);
    *v81 = v125;

    swift_bridgeObjectRelease();
    v73 = v117;
    goto LABEL_27;
  }
  v73 = v117;
LABEL_26:
  sub_23B1830F8((uint64_t)v75);

  swift_release();
LABEL_27:
  swift_endAccess();
  v66 = (void *)sub_23B1C63BC();
  v83 = v122;
  swift_beginAccess();
  v84 = (uint64_t)v108;
  swift_retain();
  v85 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v125 = *((_QWORD *)v83 + 3);
  *((_QWORD *)v83 + 3) = 0x8000000000000000;
  sub_23AD26B34(v84, v66, v85);
  *((_QWORD *)v83 + 3) = v125;

  swift_bridgeObjectRelease();
  swift_endAccess();
  v75 = (void *)sub_23B1C63BC();
  v86 = *v73;
  if (!((unint64_t)*v73 >> 62))
  {
    v87 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v87)
      goto LABEL_29;
LABEL_41:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    goto LABEL_42;
  }
  if (v86 < 0)
    v66 = (void *)*v73;
  else
    v66 = (void *)(v86 & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  v87 = sub_23B1C7088();
  if (!v87)
    goto LABEL_41;
LABEL_29:
  v88 = v87 - 1;
  if (__OFSUB__(v87, 1))
  {
    __break(1u);
    goto LABEL_90;
  }
  if ((v86 & 0xC000000000000001) == 0)
  {
    if ((v88 & 0x8000000000000000) != 0)
    {
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
    if (v88 >= *(_QWORD *)((v86 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_98;
    }
    v66 = *(void **)(v86 + 8 * v88 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6A00);
    v89 = swift_dynamicCastClassUnconditional();
    swift_retain();
    swift_release();
    goto LABEL_34;
  }
LABEL_91:
  v66 = (void *)MEMORY[0x23B85F860]();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6A00);
  v89 = swift_dynamicCastClassUnconditional();
  swift_retain();
  swift_unknownObjectRelease();
LABEL_34:
  v90 = (_QWORD *)(v118 + 16);
  swift_beginAccess();
  if (v89)
  {
    v91 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v125 = *v90;
    *v90 = 0x8000000000000000;
    sub_23AD26B20(v89, v75, v91);
    *v90 = v125;

    swift_bridgeObjectRelease();
    v73 = v117;
    goto LABEL_43;
  }
  v73 = v117;
LABEL_42:
  sub_23B1830DC((uint64_t)v75);

  swift_release();
LABEL_43:
  swift_endAccess();
  v92 = *v73;
  if (!((unint64_t)*v73 >> 62))
  {
    v72 = *(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v72)
      goto LABEL_45;
LABEL_57:
    swift_bridgeObjectRelease();
LABEL_58:
    swift_bridgeObjectRelease();
    while (1)
    {
LABEL_59:
      v98 = *v73;
      if ((unint64_t)*v73 >> 62)
      {
        if (v98 < 0)
          v66 = (void *)*v73;
        else
          v66 = (void *)(v98 & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain();
        v99 = sub_23B1C7088();
        if (!v99)
        {
LABEL_75:
          swift_bridgeObjectRelease();
          v72 = (uint64_t)v107;
          goto LABEL_76;
        }
      }
      else
      {
        v99 = *(_QWORD *)((v98 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v99)
          goto LABEL_75;
      }
      v100 = v99 - 1;
      if (__OFSUB__(v99, 1))
      {
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
      }
      else if ((v98 & 0xC000000000000001) == 0)
      {
        v72 = (uint64_t)v107;
        if ((v100 & 0x8000000000000000) != 0)
          goto LABEL_103;
        if (v100 >= *(_QWORD *)((v98 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_106:
          __break(1u);
          goto LABEL_107;
        }
        swift_retain();
        swift_bridgeObjectRelease();
        swift_retain();
        swift_release();
        goto LABEL_66;
      }
      MEMORY[0x23B85F860]();
      swift_bridgeObjectRelease();
      swift_retain();
      swift_unknownObjectRelease();
      v72 = (uint64_t)v107;
LABEL_66:
      sub_23AF9504C(1129530692, 0xE400000000000000, v124);
      if (v43)
      {

LABEL_68:
        swift_release();
        goto LABEL_76;
      }
      sub_23AA724E8((uint64_t)v124, (uint64_t)&v125, qword_2542E4958);
      if (!(_QWORD)v126)
        goto LABEL_68;
      v134[0] = v128;
      v134[1] = v129;
      v135 = v130;
      v131 = v125;
      v132 = v126;
      v133 = v127;
      v136 = *(_OWORD *)((char *)v134 + 8);
      sub_23ABE5118((uint64_t)&v136);
      sub_23ACF9524(v124);
      swift_release();
      *(_OWORD *)(v112 + OBJC_IVAR____TtC9libfssync4FPCK_providerVersion) = v136;
      swift_bridgeObjectRelease();
LABEL_76:
      v101 = *v73;
      if ((unint64_t)*v73 >> 62)
      {
        swift_bridgeObjectRetain();
        v43 = (char *)sub_23B1C7088();
      }
      else
      {
        v43 = *(char **)((v101 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      v66 = v120;
      if (!v43)
        goto LABEL_84;
      v102 = v43 - 1;
      if (__OFSUB__(v43, 1))
        goto LABEL_102;
      if ((v101 & 0xC000000000000001) != 0)
        goto LABEL_104;
      if (((unint64_t)v102 & 0x8000000000000000) != 0)
        goto LABEL_106;
      if ((unint64_t)v102 < *(_QWORD *)((v101 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v43 = *(char **)(v101 + 8 * (_QWORD)v102 + 32);
        swift_retain();
        goto LABEL_84;
      }
LABEL_107:
      __break(1u);
LABEL_108:
      swift_release();
      swift_bridgeObjectRelease();
      v73 = v117;
    }
  }
  if (v92 < 0)
    v66 = (void *)*v73;
  else
    v66 = (void *)(v92 & 0xFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  v72 = sub_23B1C7088();
  if (!v72)
    goto LABEL_57;
LABEL_45:
  v93 = v72 - 1;
  if (__OFSUB__(v72, 1))
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  if ((v92 & 0xC000000000000001) != 0)
  {
LABEL_95:
    v66 = (void *)MEMORY[0x23B85F860]();
    swift_bridgeObjectRelease();
    swift_retain();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7010);
    v106 = swift_dynamicCastClass();
    if (!v106)
      goto LABEL_108;
    v95 = v106;
    v73 = v117;
    goto LABEL_51;
  }
  if ((v93 & 0x8000000000000000) != 0)
    goto LABEL_99;
  if (v93 < *(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v66 = *(void **)(v92 + 8 * v93 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_retain();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7010);
    v94 = swift_dynamicCastClass();
    if (v94)
    {
      v95 = v94;
LABEL_51:
      v66 = (void *)sub_23B1C63BC();
      swift_bridgeObjectRelease();
      v96 = v118;
      swift_beginAccess();
      swift_retain();
      v97 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v125 = *(_QWORD *)(v96 + 24);
      *(_QWORD *)(v96 + 24) = 0x8000000000000000;
      sub_23AD269A4(v95, v66, v97);
      *(_QWORD *)(v96 + 24) = v125;

      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release();
      goto LABEL_59;
    }
    swift_release();
    goto LABEL_58;
  }
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  v43 = (char *)MEMORY[0x23B85F860]();
LABEL_84:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v112 + OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase) = v43;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
LABEL_85:
  swift_release();
  v103 = v123;
  v104 = (uint64_t (*)(uint64_t, uint64_t))v113;
  v113((char *)v66, v123);
  return v104(v72, v103);
}

id sub_23ADC00BC(uint64_t a1, void *a2)
{
  swift_willThrow();
  return a2;
}

id sub_23ADC00EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  id result;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  objc_super v11;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_openBackupDatabases);
  swift_beginAccess();
  v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = (id)swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    v11.receiver = v10;
    v11.super_class = (Class)type metadata accessor for FPCK(0);
    return objc_msgSendSuper2(&v11, sel_dealloc);
  }
  swift_bridgeObjectRetain();
  result = (id)sub_23B1C7088();
  v3 = (uint64_t)result;
  if (!result)
    goto LABEL_12;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        v7 = MEMORY[0x23B85F860](v5, v2);
      }
      else
      {
        v7 = *(_QWORD *)(v2 + 8 * v5 + 32);
        swift_retain();
      }
      v8 = (id)fpfs_adopt_log();
      sub_23ADD4598();
      if ((*(_BYTE *)(v7 + qword_2542EDE58) & 1) == 0)
      {
        v9 = *(id *)(v7 + 64);
        sub_23AC494B4(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_23ACF20E0, v7);

      }
      ++v5;
      v6 = (id)fpfs_adopt_log();
      swift_release();

    }
    while (v3 != v5);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_23ADC04D0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  char v3;

  v1 = OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___importIsRunning;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___importIsRunning);
  if (v2 == 2)
  {
    v3 = sub_23ADC0518(v0);
    *(_BYTE *)(v0 + v1) = v3 & 1;
  }
  else
  {
    v3 = v2 & 1;
  }
  return v3 & 1;
}

uint64_t sub_23ADC0518(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;

  v18 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v18);
  v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC9libfssync4FPCK_openBackupDatabases);
  swift_beginAccess();
  v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    v4 = sub_23B1C7088();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v5 = 4;
      do
      {
        v7 = v5 - 4;
        if ((v3 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x23B85F860](v5 - 4, v3);
          v13 = v8;
          v14 = v5 - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_13;
        }
        else
        {
          v13 = *(_QWORD *)(v3 + 8 * v5);
          v8 = swift_retain();
          v14 = v5 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        v15 = (void *)MEMORY[0x23B8601A8](v8, v9, v10, v11, v12);
        v6 = sub_23ADDA2BC(v13, (uint64_t)"importIsRunning", 15, 2, 1, (uint64_t)sub_23ADF2124, v13);
        objc_autoreleasePoolPop(v15);
        swift_release();
        if ((v6 & 1) != 0)
        {
          v16 = 1;
          goto LABEL_16;
        }
        ++v5;
      }
      while (v14 != v4);
    }
  }
  v16 = 0;
LABEL_16:
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_23ADC0834@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  char v5;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7010);
  swift_dynamicCastClassUnconditional();
  swift_retain();
  v5 = sub_23ADDE720();
  result = swift_release();
  if (!v2)
  {
    if ((v5 & 1) != 0)
      result = 1;
    else
      result = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(a1 + 24) + 488))(result);
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_23ADC08EC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_reason);
  if ((v1 & 2) == 0)
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((v1 & 4) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  v2 = sub_23AF983F4(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_23AF983F4((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  v5 = &v2[2 * v4];
  v5[4] = 0x6F6974617267696DLL;
  v5[5] = 0xE90000000000006ELL;
  if ((v1 & 4) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_23AF983F4(0, v2[2] + 1, 1, v2);
    v7 = v2[2];
    v6 = v2[3];
    if (v7 >= v6 >> 1)
      v2 = sub_23AF983F4((_QWORD *)(v6 > 1), v7 + 1, 1, v2);
    v2[2] = v7 + 1;
    v8 = &v2[2 * v7];
    v8[4] = 0x726961706572;
    v8[5] = 0xE600000000000000;
  }
LABEL_12:
  if ((v1 & 8) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_23AF983F4(0, v2[2] + 1, 1, v2);
    v10 = v2[2];
    v9 = v2[3];
    if (v10 >= v9 >> 1)
      v2 = sub_23AF983F4((_QWORD *)(v9 > 1), v10 + 1, 1, v2);
    v2[2] = v10 + 1;
    v11 = &v2[2 * v10];
    v11[4] = 1919251317;
    v11[5] = 0xE400000000000000;
    if ((v1 & 0x10) == 0)
    {
LABEL_14:
      if ((v1 & 0x20) == 0)
        goto LABEL_15;
      goto LABEL_28;
    }
  }
  else if ((v1 & 0x10) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23AF983F4(0, v2[2] + 1, 1, v2);
  v13 = v2[2];
  v12 = v2[3];
  if (v13 >= v12 >> 1)
    v2 = sub_23AF983F4((_QWORD *)(v12 > 1), v13 + 1, 1, v2);
  v2[2] = v13 + 1;
  v14 = &v2[2 * v13];
  v14[4] = 0x6E6F6D656164;
  v14[5] = 0xE600000000000000;
  if ((v1 & 0x20) == 0)
  {
LABEL_15:
    if ((v1 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_33;
  }
LABEL_28:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23AF983F4(0, v2[2] + 1, 1, v2);
  v16 = v2[2];
  v15 = v2[3];
  if (v16 >= v15 >> 1)
    v2 = sub_23AF983F4((_QWORD *)(v15 > 1), v16 + 1, 1, v2);
  v2[2] = v16 + 1;
  v17 = &v2[2 * v16];
  v17[4] = 0x676E6974736574;
  v17[5] = 0xE700000000000000;
  if ((v1 & 0x40) == 0)
  {
LABEL_16:
    if ((v1 & 0x80) == 0)
      goto LABEL_43;
    goto LABEL_38;
  }
LABEL_33:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23AF983F4(0, v2[2] + 1, 1, v2);
  v19 = v2[2];
  v18 = v2[3];
  if (v19 >= v18 >> 1)
    v2 = sub_23AF983F4((_QWORD *)(v18 > 1), v19 + 1, 1, v2);
  v2[2] = v19 + 1;
  v20 = &v2[2 * v19];
  v20[4] = 4469316;
  v20[5] = 0xE300000000000000;
  if ((v1 & 0x80) != 0)
  {
LABEL_38:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_23AF983F4(0, v2[2] + 1, 1, v2);
    v22 = v2[2];
    v21 = v2[3];
    if (v22 >= v21 >> 1)
      v2 = sub_23AF983F4((_QWORD *)(v21 > 1), v22 + 1, 1, v2);
    v2[2] = v22 + 1;
    v23 = &v2[2 * v22];
    v23[4] = 0x6E776F6E6B6E75;
    v23[5] = 0xE700000000000000;
  }
LABEL_43:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
  sub_23AAB5A28((unint64_t *)&qword_2542E74B0, &qword_2542E54E8, MEMORY[0x24BEE12B0]);
  v24 = sub_23B1C6338();
  swift_bridgeObjectRelease();
  return v24;
}

void sub_23ADC0D00(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  uint64_t *v40;
  uint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t v64;
  char v65;
  void *v66;
  char v67;
  void *v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t inited;
  _QWORD *v82;
  os_log_type_t v83;
  _BOOL4 v84;
  _QWORD *v85;
  uint8_t *v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  char *v90;
  NSObject *v91;
  uint8_t *v92;
  char *v93;
  char *v94;
  char *v95;
  NSObject *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(uint64_t, uint64_t, uint64_t);
  char v110;
  uint64_t (*v111)(uint64_t, uint64_t, uint64_t);
  char v112;
  unint64_t v113;
  uint64_t v114;
  _BOOL8 v115;
  uint64_t v116;
  char v117;
  unint64_t v118;
  char v119;
  uint64_t (*v120)(uint64_t, uint64_t, uint64_t);
  id v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  NSObject *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  os_log_type_t v132;
  uint8_t *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  int64_t v144;
  int64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(uint64_t, uint64_t, uint64_t);
  uint64_t v151;
  char v152;
  int64_t v153;
  unint64_t v154;
  int64_t v155;
  id v156;
  NSObject *v157;
  uint64_t v158;
  NSObject *v159;
  uint64_t v160;
  NSObject *v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint8_t *v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  int64_t v176;
  int64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  BOOL v182;
  unint64_t v183;
  int64_t v184;
  uint64_t *v185;
  uint64_t v186;
  NSObject *v187;
  uint64_t v188;
  NSObject *v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  uint8_t *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int64_t v204;
  int64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  int64_t v211;
  NSObject *v212;
  uint64_t v213;
  NSObject *v214;
  uint64_t v215;
  NSObject *v216;
  os_log_type_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  uint8_t *v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  int64_t v231;
  int64_t v232;
  unint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unint64_t v237;
  int64_t v238;
  NSObject *v239;
  char *v240;
  char *v241;
  uint64_t *v242;
  uint64_t v243;
  NSObject *v244;
  uint64_t v245;
  uint64_t *v246;
  uint64_t v247;
  uint64_t v248;
  NSObject *v249;
  os_log_type_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  unint64_t v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  unint64_t v261;
  uint64_t v262;
  uint64_t v263;
  unint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char v267;
  uint64_t v268;
  uint64_t v269;
  NSObject *v270;
  char v271;
  uint64_t (*v272)(uint64_t, uint64_t, uint64_t);
  int v273;
  unint64_t v274;
  uint64_t v275;
  _BOOL8 v276;
  uint64_t v277;
  char v278;
  uint64_t v279;
  unint64_t v280;
  char v281;
  int v282;
  uint64_t (*v283)(uint64_t, uint64_t, uint64_t);
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  NSObject *v287;
  NSObject *v288;
  os_log_type_t v289;
  uint64_t v290;
  uint64_t v291;
  NSObject *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  unint64_t v296;
  int64_t v297;
  int64_t v298;
  uint64_t *v299;
  unint64_t v300;
  unint64_t v301;
  unint64_t v302;
  int64_t v303;
  uint64_t v304;
  unint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char v308;
  uint64_t v309;
  uint64_t v310;
  NSObject *v311;
  uint64_t (*v312)(uint64_t, uint64_t, uint64_t);
  char v313;
  uint64_t (*v314)(uint64_t, uint64_t, uint64_t);
  int v315;
  unint64_t v316;
  uint64_t v317;
  _BOOL8 v318;
  uint64_t v319;
  char v320;
  uint64_t v321;
  unint64_t v322;
  char v323;
  int v324;
  uint64_t (*v325)(uint64_t, uint64_t, uint64_t);
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  unint64_t v344;
  unint64_t v345;
  unint64_t v346;
  uint64_t v347;
  unint64_t v348;
  uint64_t v349;
  uint64_t *v350;
  uint64_t v351;
  unint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t (*v359)(uint64_t, uint64_t, uint64_t);
  uint64_t v360;
  uint64_t v361;
  char *v362;
  uint64_t (*v363)(uint64_t, uint64_t, uint64_t);
  uint64_t v364;
  uint64_t v365;
  char *v366;
  uint64_t (*v367)(uint64_t, uint64_t, uint64_t);
  uint64_t v368;
  uint64_t v369;
  char *v370;
  uint64_t *v371;
  uint64_t v372;
  unsigned int v373;
  uint64_t *v374;
  char *v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t (*v378)(uint64_t, uint64_t, uint64_t);
  uint64_t v379;
  uint64_t v380;
  int v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  unsigned int v385;
  uint64_t *v386;
  char *v387;
  char *v388;
  char *v389;
  char *v390;
  uint64_t *v391;
  char *v392;
  NSObject *v393;
  uint64_t v394;
  void (*isa)(NSObject *, uint64_t);
  char *v396;
  uint64_t v397;
  uint64_t (*v398)(uint64_t, uint64_t, uint64_t);
  NSObject *v399;
  NSObject *v400;
  NSObject *v401;
  uint64_t (*v402)(uint64_t, uint64_t, uint64_t);
  uint64_t v403;
  __int128 v404;
  uint64_t v405;
  uint64_t (*v406)(uint64_t, uint64_t, uint64_t);
  NSObject *v407;
  uint64_t v408;
  uint64_t v409;
  _QWORD v410[3];
  unint64_t v411[5];
  _QWORD v412[3];
  _QWORD v413[3];
  _QWORD v414[3];
  uint64_t v415[3];
  _QWORD v416[34];
  uint64_t (*v417)(uint64_t, uint64_t, uint64_t);

  v2 = v1;
  v397 = sub_23B1C5E4C();
  v400 = *(NSObject **)(v397 - 8);
  v4 = MEMORY[0x24BDAC7A8](v397);
  v6 = (char *)&v384 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v389 = (char *)&v384 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v390 = (char *)&v384 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v391 = (uint64_t *)((char *)&v384 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v392 = (char *)&v384 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v393 = ((char *)&v384 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v401 = ((char *)&v384 - v17);
  v18 = (void *)sub_23AB60CA8();
  sub_23B1C63E0();

  v19 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v385 = objc_msgSend(v19, sel_fp_isiCloudDriveIdentifier);

  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v406 = v20;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(a1, 0x7544726961706572, 0xEE006E6F69746172, isUniquelyReferenced_nonNull_native);
  v22 = v406;
  swift_bridgeObjectRelease();
  v23 = sub_23ADC04D0() & 1;
  v24 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v22;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(v23, 0x6D6965526E497369, 0xEC00000074726F70, v24);
  v417 = v406;
  swift_bridgeObjectRelease();
  v25 = (uint64_t *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_numberOfFilesChecked];
  swift_beginAccess();
  v26 = *v25;
  v27 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v417;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(v26, 0xD000000000000014, 0x800000023B203930, v27);
  v417 = v406;
  swift_bridgeObjectRelease();
  v28 = (uint64_t *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck];
  swift_beginAccess();
  v29 = *v28;
  v30 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v417;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(v29, 0xD000000000000029, 0x800000023B203950, v30);
  v417 = v406;
  swift_bridgeObjectRelease();
  v31 = (uint64_t *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck];
  swift_beginAccess();
  v32 = *v31;
  v33 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v417;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(v32, 0xD000000000000031, 0x800000023B203980, v33);
  v417 = v406;
  swift_bridgeObjectRelease();
  v34 = (uint64_t *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInReconciliationTableCheck];
  swift_beginAccess();
  v35 = *v34;
  v36 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v417;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(v35, 0xD00000000000002DLL, 0x800000023B2039C0, v36);
  v417 = v406;
  swift_bridgeObjectRelease();
  v37 = (uint64_t *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_totalDatalessItems];
  swift_beginAccess();
  v38 = *v37;
  v39 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v417;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(v38, 0xD000000000000012, 0x800000023B203A50, v39);
  v417 = v406;
  swift_bridgeObjectRelease();
  v40 = (uint64_t *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_totalMaterializedItems];
  swift_beginAccess();
  v41 = *v40;
  v42 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v417;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(v41, 0xD000000000000016, 0x800000023B203A70, v42);
  v417 = v406;
  swift_bridgeObjectRelease();
  v43 = (uint64_t *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedFileSizes];
  swift_beginAccess();
  v44 = *v43;
  v45 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v417;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(v44, 0xD000000000000014, 0x800000023B203A90, v45);
  v417 = v406;
  swift_bridgeObjectRelease();
  v46 = (uint64_t *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedSizeOfDisk];
  swift_beginAccess();
  v47 = *v46;
  v48 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v417;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  v384 = 0xD000000000000015;
  sub_23AD26DFC(v47, 0xD000000000000015, 0x800000023B203AB0, v48);
  v417 = v406;
  swift_bridgeObjectRelease();
  v49 = (uint64_t *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_pendingSetSize];
  swift_beginAccess();
  v50 = *v49;
  v51 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v417;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(v50, 0x53676E69646E6570, 0xEE00657A69537465, v51);
  v417 = v406;
  swift_bridgeObjectRelease();
  v52 = (uint64_t *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetSize];
  swift_beginAccess();
  v53 = *v52;
  v54 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v417;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(v53, 0xD000000000000013, 0x800000023B203B40, v54);
  v417 = v406;
  swift_bridgeObjectRelease();
  v55 = (uint64_t *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_numberOfReconciliationTableEntries];
  swift_beginAccess();
  v56 = *v55;
  v57 = swift_isUniquelyReferenced_nonNull_native();
  v406 = v417;
  v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
  sub_23AD26DFC(v56, 0xD000000000000022, 0x800000023B203A20, v57);
  v417 = v406;
  swift_bridgeObjectRelease();
  v58 = OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker;
  v59 = *(_QWORD *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker];
  if (v59)
  {
    v60 = *(_QWORD *)(v59 + 48);
    if (*(_BYTE *)(v59 + 56) == 1)
    {
      if (!v60)
        goto LABEL_12;
      swift_retain();
      v60 = (uint64_t)sub_23AF41654();
    }
    else
    {
      swift_retain();
    }
    if (v60 != 0x7FFFFFFF)
    {
      if (v60 && sub_23AF41654())
      {
        v61 = *(_QWORD *)(v59 + 64);
        swift_release();
        v62 = fmin((double)v60 / (double)v61, 1.0);
      }
      else
      {
        swift_release();
        v62 = 0.0;
      }
LABEL_13:
      v63 = v62 * 100.0;
      if ((~*(_QWORD *)&v63 & 0x7FF0000000000000) == 0)
        goto LABEL_297;
      if (v63 <= -9.22337204e18)
      {
LABEL_298:
        __break(1u);
      }
      else if (v63 < 9.22337204e18)
      {
        v64 = (uint64_t)v63;
        v65 = swift_isUniquelyReferenced_nonNull_native();
        v406 = v417;
        v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
        sub_23AD26DFC(v64, 0x676E696C706D6173, 0xEC00000065746152, v65);
        v417 = v406;
        swift_bridgeObjectRelease();
        if (*(_QWORD *)&v2[v58])
        {
          swift_retain();
          v66 = sub_23AF41654();
          swift_release();
          v67 = swift_isUniquelyReferenced_nonNull_native();
          v406 = v417;
          v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
          sub_23AD26DFC((uint64_t)v66, 0xD000000000000019, 0x800000023B204E20, v67);
          v417 = v406;
          swift_bridgeObjectRelease();
        }
        goto LABEL_18;
      }
      __break(1u);
      goto LABEL_300;
    }
    swift_release();
LABEL_12:
    v62 = 1.0;
    goto LABEL_13;
  }
LABEL_18:
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker])
  {
    swift_retain();
    v68 = sub_23B0810D8();
    swift_release();
    v69 = swift_isUniquelyReferenced_nonNull_native();
    v406 = v417;
    v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
    sub_23AD26DFC((uint64_t)v68, 0xD000000000000019, 0x800000023B204E40, v69);
    v417 = v406;
    swift_bridgeObjectRelease();
  }
  v387 = v6;
  v70 = *(_QWORD *)&v2[v58];
  if (v70)
  {
    swift_beginAccess();
    v71 = *(_QWORD *)(*(_QWORD *)(v70 + 40) + 16);
    v72 = swift_isUniquelyReferenced_nonNull_native();
    v406 = v417;
    v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
    sub_23AD26DFC(v71, 0xD000000000000012, 0x800000023B203E50, v72);
    v417 = v406;
    swift_bridgeObjectRelease();
  }
  v73 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v74 = swift_allocObject();
  *(_QWORD *)(v74 + 16) = v2;
  v75 = swift_allocObject();
  *(_QWORD *)(v75 + 16) = sub_23ADF1EB0;
  *(_QWORD *)(v75 + 24) = v74;
  v396 = v2;
  swift_retain();
  v76 = sub_23B1C5E40();
  v77 = sub_23B1C6A88();
  v78 = swift_allocObject();
  *(_BYTE *)(v78 + 16) = 32;
  v60 = swift_allocObject();
  *(_BYTE *)(v60 + 16) = 8;
  v79 = swift_allocObject();
  *(_QWORD *)(v79 + 16) = sub_23ADF1EBC;
  *(_QWORD *)(v79 + 24) = v75;
  v80 = swift_allocObject();
  *(_QWORD *)(v80 + 16) = sub_23AB22A20;
  *(_QWORD *)(v80 + 24) = v79;
  v394 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75B8);
  inited = swift_initStackObject();
  sub_23B1A1F64(inited, 3);
  *v82 = sub_23AB22A08;
  v82[1] = v78;
  v82[2] = sub_23AB336B0;
  v82[3] = v60;
  v82[4] = sub_23AB22A28;
  v82[5] = v80;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  v83 = v77;
  v399 = v76;
  v84 = os_log_type_enabled(v76, v77);
  v85 = &unk_2569E5000;
  if (v84)
  {
    v86 = (uint8_t *)swift_slowAlloc();
    v398 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc();
    v406 = v398;
    *(_WORD *)v86 = 258;
    v86[2] = 32;
    swift_release();
    v86[3] = 8;
    swift_release();
    isa = (void (*)(NSObject *, uint64_t))(v86 + 4);
    swift_beginAccess();
    type metadata accessor for BrokenInvariants(0);
    sub_23AA7E38C(&qword_2542DF378, (uint64_t (*)(uint64_t))type metadata accessor for BrokenInvariants, (uint64_t)&unk_23B1D9730);
    swift_bridgeObjectRetain();
    v87 = sub_23B1C6218();
    v89 = v88;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v404 = sub_23AABEC68(v87, v89, (uint64_t *)&v406);
    sub_23B1C6CBC();
    v90 = v396;

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v91 = v399;
    _os_log_impl(&dword_23AA66000, v399, v83, "FPCK: FPDRTCReporting diskBrokenInvariants %s ", v86, 0xCu);
    v60 = (uint64_t)v398;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v60, -1, -1);
    v92 = v86;
    v85 = (_QWORD *)&unk_2569E5000;
    MEMORY[0x23B8614BC](v92, -1, -1);

    isa = (void (*)(NSObject *, uint64_t))v400[1].isa;
    isa(v401, v397);
    v93 = v90;
  }
  else
  {

    v94 = v396;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    isa = (void (*)(NSObject *, uint64_t))v400[1].isa;
    isa(v401, v397);
    v93 = v94;
  }
  v95 = &v93[v85[356]];
  swift_beginAccess();
  v388 = v95;
  v96 = *(NSObject **)v95;
  v97 = *(_QWORD *)(*(_QWORD *)v95 + 64);
  v398 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v95 + 64);
  v98 = 1 << LOBYTE(v96[4].isa);
  v99 = -1;
  if (v98 < 64)
    v99 = ~(-1 << v98);
  v100 = v99 & v97;
  v399 = ((unint64_t)(v98 + 63) >> 6);
  v401 = v96;
  swift_bridgeObjectRetain();
  v101 = 0;
  v400 = 0x800000023B204E60;
  while (1)
  {
    if (v100)
    {
      v102 = __clz(__rbit64(v100));
      v100 &= v100 - 1;
      v103 = v102 | (v101 << 6);
      goto LABEL_46;
    }
    v104 = v101 + 1;
    if (__OFADD__(v101, 1))
      goto LABEL_277;
    if (v104 >= (uint64_t)v399)
      break;
    v105 = *((_QWORD *)v398 + v104);
    ++v101;
    if (!v105)
    {
      v101 = v104 + 1;
      if (v104 + 1 >= (uint64_t)v399)
        break;
      v105 = *((_QWORD *)v398 + v101);
      if (!v105)
      {
        v101 = v104 + 2;
        if (v104 + 2 >= (uint64_t)v399)
          break;
        v105 = *((_QWORD *)v398 + v101);
        if (!v105)
        {
          v106 = v104 + 3;
          if (v106 >= (uint64_t)v399)
            break;
          v105 = *((_QWORD *)v398 + v106);
          if (!v105)
          {
            while (1)
            {
              v101 = v106 + 1;
              if (__OFADD__(v106, 1))
                goto LABEL_286;
              if (v101 >= (uint64_t)v399)
                goto LABEL_56;
              v105 = *((_QWORD *)v398 + v101);
              ++v106;
              if (v105)
                goto LABEL_45;
            }
          }
          v101 = v106;
        }
      }
    }
LABEL_45:
    v100 = (v105 - 1) & v105;
    v103 = __clz(__rbit64(v105)) + (v101 << 6);
LABEL_46:
    v107 = 8 * v103;
    v60 = *(_QWORD *)((char *)v401[7].isa + v107);
    sub_23AF16770(*(_QWORD *)((char *)v401[6].isa + v107));
    v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0xD000000000000017;
    v407 = v400;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v109 = v406;
    v108 = (uint64_t)v407;
    v110 = swift_isUniquelyReferenced_nonNull_native();
    v111 = v417;
    v406 = v417;
    v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
    v113 = sub_23AAAF4C4((uint64_t)v109, v108);
    v114 = *((_QWORD *)v111 + 2);
    v115 = (v112 & 1) == 0;
    v116 = v114 + v115;
    if (__OFADD__(v114, v115))
    {
      __break(1u);
LABEL_275:
      __break(1u);
LABEL_276:
      __break(1u);
LABEL_277:
      __break(1u);
LABEL_278:
      __break(1u);
LABEL_279:
      __break(1u);
LABEL_280:
      __break(1u);
LABEL_281:
      __break(1u);
LABEL_282:
      __break(1u);
LABEL_283:
      __break(1u);
LABEL_284:
      __break(1u);
LABEL_285:
      __break(1u);
LABEL_286:
      __break(1u);
      goto LABEL_287;
    }
    v117 = v112;
    if (*((_QWORD *)v111 + 3) >= v116)
    {
      if ((v110 & 1) != 0)
      {
        v120 = v406;
        if ((v112 & 1) == 0)
          goto LABEL_28;
      }
      else
      {
        sub_23B18AE24();
        v120 = v406;
        if ((v117 & 1) == 0)
          goto LABEL_28;
      }
    }
    else
    {
      sub_23AD180C8(v116, v110);
      v118 = sub_23AAAF4C4((uint64_t)v109, v108);
      if ((v117 & 1) != (v119 & 1))
        goto LABEL_301;
      v113 = v118;
      v120 = v406;
      if ((v117 & 1) == 0)
      {
LABEL_28:
        sub_23AD280E4(v113, v109, v108, v60, v120);
        swift_bridgeObjectRetain();
        goto LABEL_29;
      }
    }
    *(_QWORD *)(*((_QWORD *)v120 + 7) + 8 * v113) = v60;
LABEL_29:
    v60 = (uint64_t)v417;
    v417 = v120;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_56:
  swift_release();
  v121 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v122 = swift_allocObject();
  v123 = v396;
  *(_QWORD *)(v122 + 16) = v396;
  v124 = swift_allocObject();
  *(_QWORD *)(v124 + 16) = sub_23ADF1EE4;
  *(_QWORD *)(v124 + 24) = v122;
  v400 = v123;
  v125 = sub_23B1C5E40();
  LOBYTE(v122) = sub_23B1C6A88();
  v126 = swift_allocObject();
  *(_BYTE *)(v126 + 16) = 32;
  v127 = swift_allocObject();
  *(_BYTE *)(v127 + 16) = 8;
  v128 = swift_allocObject();
  *(_QWORD *)(v128 + 16) = sub_23ADF1EF0;
  *(_QWORD *)(v128 + 24) = v124;
  v129 = swift_allocObject();
  *(_QWORD *)(v129 + 16) = sub_23AB33690;
  *(_QWORD *)(v129 + 24) = v128;
  v130 = swift_allocObject();
  sub_23B1A1F64(v130, 3);
  *v131 = sub_23AB336B0;
  v131[1] = v126;
  v131[2] = sub_23AB336B0;
  v131[3] = v127;
  v131[4] = sub_23AB336AC;
  v131[5] = v129;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  v132 = v122;
  if (os_log_type_enabled(v125, (os_log_type_t)v122))
  {
    v133 = (uint8_t *)swift_slowAlloc();
    v134 = swift_slowAlloc();
    v416[0] = 0;
    v415[0] = v134;
    *(_WORD *)v133 = 258;
    *(_QWORD *)&v404 = v133 + 2;
    sub_23AFF5C88((_BYTE **)&v404, (uint64_t)v416, (uint64_t)v415, 32);
    swift_release();
    sub_23AFF5C88((_BYTE **)&v404, (uint64_t)v416, (uint64_t)v415, 8);
    swift_release();
    swift_retain();
    v135 = sub_23ADA96FC(*(_QWORD *(**)(uint64_t *__return_ptr))(v124 + 16), *(_QWORD *)(v124 + 24));
    v137 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AABEC68(v135, v136, v415);
    v138 = v404 + 8;
    v406 = v137;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    swift_release();
    *(_QWORD *)&v404 = v138;
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl(&dword_23AA66000, v125, v132, "FPCK: FPDRTCReporting diskVersusFSSnapshotDiff %s ", v133, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v134, -1, -1);
    MEMORY[0x23B8614BC](v133, -1, -1);

  }
  else
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  isa(v393, v397);
  v139 = (uint64_t *)((char *)v400 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskVsFSSnapshotDiffCounters);
  swift_beginAccess();
  v386 = v139;
  v60 = *v139;
  v140 = *(_QWORD *)(*v139 + 64);
  v401 = (*v139 + 64);
  v141 = 1 << *(_BYTE *)(v60 + 32);
  v142 = -1;
  if (v141 < 64)
    v142 = ~(-1 << v141);
  v143 = v142 & v140;
  v144 = (unint64_t)(v141 + 63) >> 6;
  swift_bridgeObjectRetain();
  v145 = 0;
  while (2)
  {
    if (v143)
    {
      v146 = __clz(__rbit64(v143));
      v143 &= v143 - 1;
      v147 = v146 | (v145 << 6);
LABEL_63:
      v148 = 8 * v147;
      v149 = *(_QWORD *)(*(_QWORD *)(v60 + 56) + v148);
      sub_23AF162C0(*(_QWORD *)(*(_QWORD *)(v60 + 48) + v148));
      v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0xD00000000000001ELL;
      v407 = 0x800000023B204E80;
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v150 = v406;
      v151 = (uint64_t)v407;
      v152 = swift_isUniquelyReferenced_nonNull_native();
      v406 = v417;
      v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
      sub_23AD26DFC(v149, (uint64_t)v150, v151, v152);
      v417 = v406;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
  v153 = v145 + 1;
  if (__OFADD__(v145, 1))
    goto LABEL_278;
  if (v153 < v144)
  {
    v154 = (unint64_t)v401[v153].isa;
    ++v145;
    if (!v154)
    {
      v145 = v153 + 1;
      if (v153 + 1 >= v144)
        goto LABEL_79;
      v154 = (unint64_t)v401[v145].isa;
      if (!v154)
      {
        v145 = v153 + 2;
        if (v153 + 2 >= v144)
          goto LABEL_79;
        v154 = (unint64_t)v401[v145].isa;
        if (!v154)
        {
          v155 = v153 + 3;
          if (v155 >= v144)
            goto LABEL_79;
          v154 = (unint64_t)v401[v155].isa;
          if (!v154)
          {
            while (1)
            {
              v145 = v155 + 1;
              if (__OFADD__(v155, 1))
                break;
              if (v145 >= v144)
                goto LABEL_79;
              v154 = (unint64_t)v401[v145].isa;
              ++v155;
              if (v154)
                goto LABEL_78;
            }
LABEL_287:
            __break(1u);
            goto LABEL_288;
          }
          v145 = v155;
        }
      }
    }
LABEL_78:
    v143 = (v154 - 1) & v154;
    v147 = __clz(__rbit64(v154)) + (v145 << 6);
    goto LABEL_63;
  }
LABEL_79:
  swift_release();
  v156 = (id)fpfs_current_or_default_log();
  v157 = v392;
  sub_23B1C5E58();
  v158 = swift_allocObject();
  v159 = v400;
  *(_QWORD *)(v158 + 16) = v400;
  v160 = swift_allocObject();
  *(_QWORD *)(v160 + 16) = sub_23ADF1F18;
  *(_QWORD *)(v160 + 24) = v158;
  v400 = v159;
  v161 = sub_23B1C5E40();
  v162 = sub_23B1C6A88();
  v163 = swift_allocObject();
  *(_BYTE *)(v163 + 16) = 32;
  v164 = swift_allocObject();
  *(_BYTE *)(v164 + 16) = 8;
  v165 = swift_allocObject();
  *(_QWORD *)(v165 + 16) = sub_23ADF1F24;
  *(_QWORD *)(v165 + 24) = v160;
  v166 = swift_allocObject();
  *(_QWORD *)(v166 + 16) = sub_23AB33690;
  *(_QWORD *)(v166 + 24) = v165;
  v167 = swift_allocObject();
  sub_23B1A1F64(v167, 3);
  *v168 = sub_23AB336B0;
  v168[1] = v163;
  v168[2] = sub_23AB336B0;
  v168[3] = v164;
  v168[4] = sub_23AB336AC;
  v168[5] = v166;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  LODWORD(v399) = v162;
  if (os_log_type_enabled(v161, (os_log_type_t)v162))
  {
    v169 = (uint8_t *)swift_slowAlloc();
    v170 = swift_slowAlloc();
    v415[0] = 0;
    v414[0] = v170;
    *(_WORD *)v169 = 258;
    *(_QWORD *)&v404 = v169 + 2;
    v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
    v407 = v163;
    sub_23AFF5C54(&v406, (uint64_t)&v404, (uint64_t)v415, (uint64_t)v414);
    swift_release();
    v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
    v407 = v164;
    sub_23AFF5C54(&v406, (uint64_t)&v404, (uint64_t)v415, (uint64_t)v414);
    swift_release();
    v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
    v407 = v166;
    sub_23AFF5C54(&v406, (uint64_t)&v404, (uint64_t)v415, (uint64_t)v414);
    v401 = 0;
    swift_release();
    _os_log_impl(&dword_23AA66000, v161, (os_log_type_t)v399, "FPCK: FPDRTCReporting fsSnapshotVersusFpSnapshotDiff %s ", v169, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v170, -1, -1);
    sub_23AFF5C38();
  }

  swift_release();
  swift_release();
  swift_release();
  isa(v157, v397);
  v401 = 0;
  v171 = (char *)v400 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredFSSnapshotVsFPSnapshotDiffCounters;
  swift_beginAccess();
  v172 = *(_QWORD *)v171;
  v60 = *(_QWORD *)v171 + 64;
  v173 = 1 << *(_BYTE *)(*(_QWORD *)v171 + 32);
  v174 = -1;
  if (v173 < 64)
    v174 = ~(-1 << v173);
  v175 = v174 & *(_QWORD *)(*(_QWORD *)v171 + 64);
  v176 = (unint64_t)(v173 + 63) >> 6;
  swift_bridgeObjectRetain();
  v177 = 0;
  while (2)
  {
    if (v175)
    {
      v178 = __clz(__rbit64(v175));
      v175 &= v175 - 1;
      v179 = v178 | (v177 << 6);
LABEL_85:
      v180 = 8 * v179;
      v181 = *(_QWORD *)(*(_QWORD *)(v172 + 56) + v180);
      sub_23AF164D4(*(_QWORD *)(*(_QWORD *)(v172 + 48) + v180));
      v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0xD000000000000025;
      v407 = 0x800000023B204EA0;
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23AD0426C(v181, 0, (uint64_t)v406, (uint64_t)v407);
      continue;
    }
    break;
  }
  v182 = __OFADD__(v177++, 1);
  if (v182)
    goto LABEL_279;
  if (v177 < v176)
  {
    v183 = *(_QWORD *)(v60 + 8 * v177);
    if (!v183)
    {
      v184 = v177 + 1;
      if (v177 + 1 >= v176)
        goto LABEL_102;
      v183 = *(_QWORD *)(v60 + 8 * v184);
      if (!v183)
      {
        v184 = v177 + 2;
        if (v177 + 2 >= v176)
          goto LABEL_102;
        v183 = *(_QWORD *)(v60 + 8 * v184);
        if (!v183)
        {
          v184 = v177 + 3;
          if (v177 + 3 >= v176)
            goto LABEL_102;
          v183 = *(_QWORD *)(v60 + 8 * v184);
          if (!v183)
          {
            while (1)
            {
              v177 = v184 + 1;
              if (__OFADD__(v184, 1))
                break;
              if (v177 >= v176)
                goto LABEL_102;
              v183 = *(_QWORD *)(v60 + 8 * v177);
              ++v184;
              if (v183)
                goto LABEL_97;
            }
LABEL_288:
            __break(1u);
            goto LABEL_289;
          }
        }
      }
      v177 = v184;
    }
LABEL_97:
    v175 = (v183 - 1) & v183;
    v179 = __clz(__rbit64(v183)) + (v177 << 6);
    goto LABEL_85;
  }
LABEL_102:
  v185 = v391;
  swift_release();
  sub_23AF9CAE0();
  v186 = swift_allocObject();
  v187 = v400;
  *(_QWORD *)(v186 + 16) = v400;
  v188 = swift_allocObject();
  *(_QWORD *)(v188 + 16) = sub_23ADF1F4C;
  *(_QWORD *)(v188 + 24) = v186;
  v400 = v187;
  v189 = sub_23B1C5E40();
  v190 = sub_23B1C6A88();
  v191 = swift_allocObject();
  *(_BYTE *)(v191 + 16) = 32;
  v192 = swift_allocObject();
  *(_BYTE *)(v192 + 16) = 8;
  v193 = swift_allocObject();
  *(_QWORD *)(v193 + 16) = sub_23ADF1F58;
  *(_QWORD *)(v193 + 24) = v188;
  v194 = swift_allocObject();
  *(_QWORD *)(v194 + 16) = sub_23AB33690;
  *(_QWORD *)(v194 + 24) = v193;
  v195 = swift_allocObject();
  sub_23B1A1F64(v195, 3);
  *v196 = sub_23AB336B0;
  v196[1] = v191;
  v196[2] = sub_23AB336B0;
  v196[3] = v192;
  v196[4] = sub_23AB336AC;
  v196[5] = v194;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  LODWORD(v399) = v190;
  if (os_log_type_enabled(v189, (os_log_type_t)v190))
  {
    v197 = (uint8_t *)sub_23AFF5C30();
    v198 = swift_slowAlloc();
    v414[0] = 0;
    v413[0] = v198;
    *(_WORD *)v197 = 258;
    *(_QWORD *)&v404 = v197 + 2;
    v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
    v407 = v191;
    v60 = (uint64_t)v401;
    sub_23AFF5C54(&v406, (uint64_t)&v404, (uint64_t)v414, (uint64_t)v413);
    if (!v60)
    {
      swift_release();
      v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
      v407 = v192;
      sub_23AFF5C54(&v406, (uint64_t)&v404, (uint64_t)v414, (uint64_t)v413);
      swift_release();
      v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
      v407 = v194;
      sub_23AFF5C54(&v406, (uint64_t)&v404, (uint64_t)v414, (uint64_t)v413);
      v401 = 0;
      swift_release();
      _os_log_impl(&dword_23AA66000, v189, (os_log_type_t)v399, "FPCK: FPDRTCReporting reconciliationTableBrokenInvariants %s ", v197, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v198, -1, -1);
      sub_23AFF5C38();
    }
    goto LABEL_302;
  }

  swift_release();
  swift_release();
  swift_release();
  isa(v185, v397);
  v199 = (char *)v400 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredReconciliationTableBrokenInvariantsCounters;
  swift_beginAccess();
  v200 = *(_QWORD *)v199;
  v201 = *(_QWORD *)v199 + 64;
  v202 = 1 << *(_BYTE *)(*(_QWORD *)v199 + 32);
  v203 = -1;
  if (v202 < 64)
    v203 = ~(-1 << v202);
  v60 = v203 & *(_QWORD *)(*(_QWORD *)v199 + 64);
  v204 = (unint64_t)(v202 + 63) >> 6;
  swift_bridgeObjectRetain();
  v205 = 0;
  while (2)
  {
    if (v60)
    {
      v206 = __clz(__rbit64(v60));
      v60 &= v60 - 1;
      v207 = v206 | (v205 << 6);
LABEL_109:
      v208 = 8 * v207;
      v209 = *(_QWORD *)(*(_QWORD *)(v200 + 56) + v208);
      sub_23AF164F0(*(_QWORD *)(*(_QWORD *)(v200 + 48) + v208));
      v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0xD000000000000026;
      v407 = 0x800000023B204ED0;
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23AD0426C(v209, 0, (uint64_t)v406, (uint64_t)v407);
      continue;
    }
    break;
  }
  v182 = __OFADD__(v205++, 1);
  if (v182)
    goto LABEL_280;
  if (v205 < v204)
  {
    v210 = *(_QWORD *)(v201 + 8 * v205);
    if (!v210)
    {
      v211 = v205 + 1;
      if (v205 + 1 >= v204)
        goto LABEL_126;
      v210 = *(_QWORD *)(v201 + 8 * v211);
      if (!v210)
      {
        v211 = v205 + 2;
        if (v205 + 2 >= v204)
          goto LABEL_126;
        v210 = *(_QWORD *)(v201 + 8 * v211);
        if (!v210)
        {
          v211 = v205 + 3;
          if (v205 + 3 >= v204)
            goto LABEL_126;
          v210 = *(_QWORD *)(v201 + 8 * v211);
          if (!v210)
          {
            while (1)
            {
              v205 = v211 + 1;
              if (__OFADD__(v211, 1))
                break;
              if (v205 >= v204)
                goto LABEL_126;
              v210 = *(_QWORD *)(v201 + 8 * v205);
              ++v211;
              if (v210)
                goto LABEL_121;
            }
LABEL_289:
            __break(1u);
            goto LABEL_290;
          }
        }
      }
      v205 = v211;
    }
LABEL_121:
    v60 = (v210 - 1) & v210;
    v207 = __clz(__rbit64(v210)) + (v205 << 6);
    goto LABEL_109;
  }
LABEL_126:
  v212 = v390;
  swift_release();
  sub_23AF9CAE0();
  v213 = swift_allocObject();
  v214 = v400;
  *(_QWORD *)(v213 + 16) = v400;
  v215 = swift_allocObject();
  *(_QWORD *)(v215 + 16) = sub_23ADF1FC8;
  *(_QWORD *)(v215 + 24) = v213;
  v396 = v214;
  v216 = sub_23B1C5E40();
  v217 = sub_23B1C6A88();
  v218 = swift_allocObject();
  *(_BYTE *)(v218 + 16) = 32;
  v219 = swift_allocObject();
  *(_BYTE *)(v219 + 16) = 8;
  v220 = swift_allocObject();
  *(_QWORD *)(v220 + 16) = sub_23ADF2024;
  *(_QWORD *)(v220 + 24) = v215;
  v221 = swift_allocObject();
  *(_QWORD *)(v221 + 16) = sub_23AB33690;
  *(_QWORD *)(v221 + 24) = v220;
  v222 = swift_allocObject();
  sub_23B1A1F64(v222, 3);
  *v223 = sub_23AB336B0;
  v223[1] = v218;
  v223[2] = sub_23AB336B0;
  v223[3] = v219;
  v223[4] = sub_23AB336AC;
  v223[5] = v221;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v216, v217))
  {
    v224 = (uint8_t *)sub_23AFF5C30();
    v225 = swift_slowAlloc();
    v413[0] = 0;
    v412[0] = v225;
    *(_WORD *)v224 = 258;
    *(_QWORD *)&v404 = v224 + 2;
    v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
    v407 = v218;
    v60 = (uint64_t)v401;
    sub_23AFF5C54(&v406, (uint64_t)&v404, (uint64_t)v413, (uint64_t)v412);
    if (!v60)
    {
      swift_release();
      v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336B0;
      v407 = v219;
      sub_23AFF5C54(&v406, (uint64_t)&v404, (uint64_t)v413, (uint64_t)v412);
      swift_release();
      v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23AB336AC;
      v407 = v221;
      sub_23AFF5C54(&v406, (uint64_t)&v404, (uint64_t)v413, (uint64_t)v412);
      v401 = 0;
      swift_release();
      _os_log_impl(&dword_23AA66000, v216, v217, "FPCK: FPDRTCReporting backupManifestVsFSSnapshotDiff %s ", v224, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v225, -1, -1);
      sub_23AFF5C38();
    }
    goto LABEL_302;
  }

  swift_release();
  swift_release();
  swift_release();
  isa(v212, v397);
  v226 = &v396[OBJC_IVAR____TtC9libfssync4FPCK_discoveredBackupManifestVsFSSnapshotDiffCounters];
  swift_beginAccess();
  v227 = *(_QWORD *)v226;
  v228 = *(_QWORD *)v226 + 64;
  v229 = 1 << *(_BYTE *)(*(_QWORD *)v226 + 32);
  v230 = -1;
  if (v229 < 64)
    v230 = ~(-1 << v229);
  v60 = v230 & *(_QWORD *)(*(_QWORD *)v226 + 64);
  v231 = (unint64_t)(v229 + 63) >> 6;
  swift_bridgeObjectRetain();
  v232 = 0;
  while (2)
  {
    if (v60)
    {
      v233 = __clz(__rbit64(v60));
      v60 &= v60 - 1;
      v234 = v233 | (v232 << 6);
LABEL_133:
      v235 = 8 * v234;
      v236 = *(_QWORD *)(*(_QWORD *)(v227 + 56) + v235);
      sub_23AF162DC(*(_QWORD *)(*(_QWORD *)(v227 + 48) + v235));
      v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0xD000000000000029;
      v407 = 0x800000023B204F00;
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23AD0426C(v236, 0, (uint64_t)v406, (uint64_t)v407);
      continue;
    }
    break;
  }
  v182 = __OFADD__(v232++, 1);
  if (v182)
    goto LABEL_281;
  if (v232 < v231)
  {
    v237 = *(_QWORD *)(v228 + 8 * v232);
    if (!v237)
    {
      v238 = v232 + 1;
      if (v232 + 1 >= v231)
        goto LABEL_150;
      v237 = *(_QWORD *)(v228 + 8 * v238);
      if (!v237)
      {
        v238 = v232 + 2;
        if (v232 + 2 >= v231)
          goto LABEL_150;
        v237 = *(_QWORD *)(v228 + 8 * v238);
        if (!v237)
        {
          v238 = v232 + 3;
          if (v232 + 3 >= v231)
            goto LABEL_150;
          v237 = *(_QWORD *)(v228 + 8 * v238);
          if (!v237)
          {
            while (1)
            {
              v232 = v238 + 1;
              if (__OFADD__(v238, 1))
                break;
              if (v232 >= v231)
                goto LABEL_150;
              v237 = *(_QWORD *)(v228 + 8 * v232);
              ++v238;
              if (v237)
                goto LABEL_145;
            }
LABEL_290:
            __break(1u);
            goto LABEL_291;
          }
        }
      }
      v232 = v238;
    }
LABEL_145:
    v60 = (v237 - 1) & v237;
    v234 = __clz(__rbit64(v237)) + (v232 << 6);
    goto LABEL_133;
  }
LABEL_150:
  v240 = v388;
  v239 = v389;
  swift_release();
  v241 = v396;
  v242 = (uint64_t *)&v396[OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskBrokenInvariantsCounters];
  swift_beginAccess();
  v243 = *v242;
  swift_bridgeObjectRetain();
  v244 = v401;
  v245 = sub_23ADC3E40(0, v243);
  swift_bridgeObjectRelease();
  sub_23AD0426C(v245, 0, 0xD00000000000001ELL, 0x800000023B204F30);
  v246 = (uint64_t *)&v241[OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskVsFSSnapshotDiffCounters];
  swift_beginAccess();
  v400 = v246;
  v247 = *v246;
  swift_bridgeObjectRetain();
  v248 = sub_23ADC3E40(0, v247);
  swift_bridgeObjectRelease();
  sub_23AD0426C(v248, 0, 0xD000000000000019, 0x800000023B204F50);
  sub_23AF9CAE0();
  v249 = sub_23B1C5E40();
  v250 = sub_23B1C6A88();
  v251 = sub_23ACD83E4(0);
  if (os_log_type_enabled(v249, v250))
  {
    v252 = sub_23AFF5C30();
    *(_QWORD *)&v404 = 0;
    v410[0] = 0;
    *(_WORD *)v252 = 0;
    v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v252 + 2);
    sub_23B0204FC(v251, (uint64_t)&v406, (uint64_t)&v404, (uint64_t)v410);
    v399 = v244;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v249, v250, "FPCK: FPDRTCReporting remainingDiskBrokenInvariants", (uint8_t *)v252, 2u);
    sub_23AFF5C38();
  }
  v399 = v244;

  swift_bridgeObjectRelease();
  isa(v239, v397);
  v253 = *(_QWORD *)v240;
  v254 = *(_QWORD *)v240 + 64;
  v255 = 1 << *(_BYTE *)(*(_QWORD *)v240 + 32);
  v256 = -1;
  if (v255 < 64)
    v256 = ~(-1 << v255);
  v257 = v256 & *(_QWORD *)(*(_QWORD *)v240 + 64);
  v60 = (unint64_t)(v255 + 63) >> 6;
  swift_bridgeObjectRetain();
  v258 = 0;
  v393 = 0x800000023B204F70;
  v394 = 0;
  v391 = v242;
  v392 = (char *)v60;
  while (2)
  {
    if (v257)
    {
      v259 = __clz(__rbit64(v257));
      v257 &= v257 - 1;
      v260 = v259 | (v258 << 6);
LABEL_168:
      v263 = 8 * v260;
      v264 = *(_QWORD *)(*(_QWORD *)(v253 + 48) + v263);
      v265 = *(_QWORD *)(*(_QWORD *)(v253 + 56) + v263);
      v266 = sub_23AF40E74(v264, *v242);
      if ((v267 & 1) != 0)
        v268 = 0;
      else
        v268 = v266;
      v269 = v265 - v268;
      if (__OFSUB__(v265, v268))
        goto LABEL_275;
      if (v269 >= 1)
      {
        sub_23AF16770(v264);
        v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0xD000000000000021;
        v407 = v393;
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v60 = (uint64_t)v406;
        v270 = v407;
        sub_23AAB7948(v394);
        v271 = swift_isUniquelyReferenced_nonNull_native();
        v272 = v417;
        v406 = v417;
        v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
        v398 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v60;
        v401 = v270;
        v274 = sub_23AAAF4C4(v60, (uint64_t)v270);
        v275 = *((_QWORD *)v272 + 2);
        v276 = (v273 & 1) == 0;
        v277 = v275 + v276;
        if (__OFADD__(v275, v276))
          goto LABEL_293;
        v278 = v273;
        v279 = *((_QWORD *)v272 + 3);
        LODWORD(v394) = v273;
        if (v279 >= v277)
        {
          v60 = (uint64_t)v392;
          if ((v271 & 1) == 0)
          {
            sub_23B18AE24();
            v272 = v406;
          }
        }
        else
        {
          sub_23AD180C8(v277, v271);
          v272 = v406;
          v280 = sub_23AAAF4C4((uint64_t)v398, (uint64_t)v401);
          v282 = v278 & 1;
          v60 = (uint64_t)v392;
          if (v282 != (v281 & 1))
            goto LABEL_301;
          v274 = v280;
        }
        v417 = v272;
        swift_bridgeObjectRelease();
        v283 = v417;
        swift_bridgeObjectRetain();
        if ((v394 & 1) == 0)
        {
          sub_23AD280E4(v274, v398, v401, 0, v283);
          swift_bridgeObjectRetain();
        }
        v284 = *((_QWORD *)v283 + 7);
        swift_bridgeObjectRelease();
        v285 = *(_QWORD *)(v284 + 8 * v274);
        v182 = __OFADD__(v285, v269);
        v286 = v285 + v269;
        if (v182)
          goto LABEL_294;
        *(_QWORD *)(v284 + 8 * v274) = v286;
        swift_bridgeObjectRelease();
        v394 = (uint64_t)sub_23AAED18C;
        v242 = v391;
      }
      continue;
    }
    break;
  }
  v182 = __OFADD__(v258++, 1);
  if (v182)
    goto LABEL_282;
  if (v258 < v60)
  {
    v261 = *(_QWORD *)(v254 + 8 * v258);
    if (!v261)
    {
      v262 = v258 + 1;
      if (v258 + 1 >= v60)
        goto LABEL_187;
      v261 = *(_QWORD *)(v254 + 8 * v262);
      if (!v261)
      {
        v262 = v258 + 2;
        if (v258 + 2 >= v60)
          goto LABEL_187;
        v261 = *(_QWORD *)(v254 + 8 * v262);
        if (!v261)
        {
          v262 = v258 + 3;
          if (v258 + 3 >= v60)
            goto LABEL_187;
          v261 = *(_QWORD *)(v254 + 8 * v262);
          if (!v261)
          {
            while (1)
            {
              v258 = v262 + 1;
              if (__OFADD__(v262, 1))
                break;
              if (v258 >= v60)
                goto LABEL_187;
              v261 = *(_QWORD *)(v254 + 8 * v258);
              ++v262;
              if (v261)
                goto LABEL_167;
            }
LABEL_291:
            __break(1u);
            goto LABEL_292;
          }
        }
      }
      v258 = v262;
    }
LABEL_167:
    v257 = (v261 - 1) & v261;
    v260 = __clz(__rbit64(v261)) + (v258 << 6);
    goto LABEL_168;
  }
LABEL_187:
  swift_release();
  v287 = v387;
  sub_23AF9CAE0();
  v288 = sub_23B1C5E40();
  v289 = sub_23B1C6A88();
  v290 = sub_23ACD83E4(0);
  if (os_log_type_enabled(v288, v289))
  {
    v291 = sub_23AFF5C30();
    *(_QWORD *)&v404 = 0;
    v410[0] = 0;
    *(_WORD *)v291 = 0;
    v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v291 + 2);
    v292 = v399;
    sub_23B0204FC(v290, (uint64_t)&v406, (uint64_t)&v404, (uint64_t)v410);
    v399 = v292;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v288, v289, "FPCK: FPDRTCReporting remainingFSSnapshotDiffs", (uint8_t *)v291, 2u);
    sub_23AFF5C38();
  }

  swift_bridgeObjectRelease();
  isa(v287, v397);
  v293 = *v386;
  v60 = *v386 + 64;
  v294 = 1 << *(_BYTE *)(*v386 + 32);
  v295 = -1;
  if (v294 < 64)
    v295 = ~(-1 << v294);
  v296 = v295 & *(_QWORD *)(*v386 + 64);
  v297 = (unint64_t)(v294 + 63) >> 6;
  swift_bridgeObjectRetain();
  v397 = 0;
  v298 = 0;
  isa = (void (*)(NSObject *, uint64_t))0x800000023B204FA0;
  v299 = (uint64_t *)v400;
  v393 = v297;
  while (2)
  {
    if (v296)
    {
      v300 = __clz(__rbit64(v296));
      v296 &= v296 - 1;
      v301 = v300 | (v298 << 6);
LABEL_205:
      v304 = 8 * v301;
      v305 = *(_QWORD *)(*(_QWORD *)(v293 + 48) + v304);
      v306 = *(_QWORD *)(*(_QWORD *)(v293 + 56) + v304);
      v307 = sub_23AF40E80(v305, *v299);
      if ((v308 & 1) != 0)
        v309 = 0;
      else
        v309 = v307;
      v310 = v306 - v309;
      if (__OFSUB__(v306, v309))
        goto LABEL_276;
      if (v310 >= 1)
      {
        sub_23AF162C0(v305);
        v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0xD00000000000001DLL;
        v407 = isa;
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        v312 = v406;
        v311 = v407;
        sub_23AAB7948(v397);
        v313 = swift_isUniquelyReferenced_nonNull_native();
        v314 = v417;
        v406 = v417;
        v417 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))0x8000000000000000;
        v398 = v312;
        v401 = v311;
        v316 = sub_23AAAF4C4((uint64_t)v312, (uint64_t)v311);
        v317 = *((_QWORD *)v314 + 2);
        v318 = (v315 & 1) == 0;
        v319 = v317 + v318;
        if (__OFADD__(v317, v318))
          goto LABEL_295;
        v320 = v315;
        v321 = *((_QWORD *)v314 + 3);
        LODWORD(v397) = v315;
        if (v321 >= v319)
        {
          v297 = (int64_t)v393;
          if ((v313 & 1) == 0)
          {
            sub_23B18AE24();
            v314 = v406;
          }
        }
        else
        {
          sub_23AD180C8(v319, v313);
          v314 = v406;
          v322 = sub_23AAAF4C4((uint64_t)v398, (uint64_t)v401);
          v324 = v320 & 1;
          v297 = (int64_t)v393;
          if (v324 != (v323 & 1))
            goto LABEL_301;
          v316 = v322;
        }
        v417 = v314;
        swift_bridgeObjectRelease();
        v325 = v417;
        swift_bridgeObjectRetain();
        if ((v397 & 1) == 0)
        {
          sub_23AD280E4(v316, v398, v401, 0, v325);
          swift_bridgeObjectRetain();
        }
        v326 = *((_QWORD *)v325 + 7);
        swift_bridgeObjectRelease();
        v327 = *(_QWORD *)(v326 + 8 * v316);
        v182 = __OFADD__(v327, v310);
        v328 = v327 + v310;
        if (v182)
          goto LABEL_296;
        *(_QWORD *)(v326 + 8 * v316) = v328;
        swift_bridgeObjectRelease();
        v397 = (uint64_t)sub_23AAED18C;
        v299 = (uint64_t *)v400;
      }
      continue;
    }
    break;
  }
  v182 = __OFADD__(v298++, 1);
  if (v182)
    goto LABEL_283;
  if (v298 < v297)
  {
    v302 = *(_QWORD *)(v60 + 8 * v298);
    if (!v302)
    {
      v303 = v298 + 1;
      if (v298 + 1 >= v297)
        goto LABEL_224;
      v302 = *(_QWORD *)(v60 + 8 * v303);
      if (!v302)
      {
        v303 = v298 + 2;
        if (v298 + 2 >= v297)
          goto LABEL_224;
        v302 = *(_QWORD *)(v60 + 8 * v303);
        if (!v302)
        {
          v303 = v298 + 3;
          if (v298 + 3 >= v297)
            goto LABEL_224;
          v302 = *(_QWORD *)(v60 + 8 * v303);
          if (!v302)
          {
            while (1)
            {
              v298 = v303 + 1;
              if (__OFADD__(v303, 1))
                break;
              if (v298 >= v297)
                goto LABEL_224;
              v302 = *(_QWORD *)(v60 + 8 * v298);
              ++v303;
              if (v302)
                goto LABEL_204;
            }
LABEL_292:
            __break(1u);
LABEL_293:
            __break(1u);
LABEL_294:
            __break(1u);
LABEL_295:
            __break(1u);
LABEL_296:
            __break(1u);
LABEL_297:
            __break(1u);
            goto LABEL_298;
          }
        }
      }
      v298 = v303;
    }
LABEL_204:
    v296 = (v302 - 1) & v302;
    v301 = __clz(__rbit64(v302)) + (v298 << 6);
    goto LABEL_205;
  }
LABEL_224:
  v60 = (uint64_t)v399;
  v329 = swift_release();
  MEMORY[0x24BDAC7A8](v329);
  *(&v384 - 2) = (uint64_t)&v417;
  v330 = swift_bridgeObjectRetain();
  sub_23ADEBBC8(v330, (void (*)(uint64_t, uint64_t, uint64_t))sub_23ADF204C);
  swift_bridgeObjectRelease();
  v331 = swift_bridgeObjectRetain();
  v332 = sub_23B1480F4(v331);
  swift_bridgeObjectRelease();
  v411[0] = v332;
  v333 = &v396[OBJC_IVAR____TtC9libfssync4FPCK_multipleHardlinksExtensions];
  swift_beginAccess();
  v334 = MEMORY[0x24BEE0D08];
  if (!*(_QWORD *)(*(_QWORD *)v333 + 16))
  {
LABEL_255:
    v362 = &v396[OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetErrors];
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v362 + 16))
    {
      swift_bridgeObjectRetain();
      v363 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23ADECBFC();
      v365 = v364;
      swift_bridgeObjectRelease();
      if (v365)
      {
        v408 = MEMORY[0x24BEE0D00];
        v409 = v334;
        v406 = v363;
        v407 = v365;
        sub_23AD043FC((uint64_t)&v406, v384, 0x800000023B203BD0);
      }
    }
    v366 = &v396[OBJC_IVAR____TtC9libfssync4FPCK_pendingSetErrors];
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)v366 + 16))
    {
      swift_bridgeObjectRetain();
      v367 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23ADECBFC();
      v369 = v368;
      swift_bridgeObjectRelease();
      if (v369)
      {
        v408 = MEMORY[0x24BEE0D00];
        v409 = v334;
        v406 = v367;
        v407 = v369;
        sub_23AD043FC((uint64_t)&v406, 0xD000000000000010, 0x800000023B203BB0);
      }
    }
    v370 = v396;
    v371 = (uint64_t *)&v396[OBJC_IVAR____TtC9libfssync4FPCK_pendingSetItemPayload];
    swift_beginAccess();
    if (*v371)
    {
      v372 = *v371;
      v373 = v385;
    }
    else
    {
      v374 = (uint64_t *)&v370[OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetItemPayload];
      swift_beginAccess();
      v372 = *v374;
      v373 = v385;
      if (!v372)
        goto LABEL_266;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_23ADB9F8C(v372, v411);
    swift_bridgeObjectRelease();
LABEL_266:
    v375 = v396;
    if (v373)
    {
      v376 = *(_QWORD *)&v396[OBJC_IVAR____TtC9libfssync4FPCK_domainUserInfo];
      if (v376)
      {
        sub_23B1A4A4C();
        sub_23AF40E24((uint64_t)&v406, v376, &v404);
        sub_23AC0521C((uint64_t)&v406);
        if (v405)
        {
          v377 = MEMORY[0x24BEE0D00];
          if ((swift_dynamicCast() & 1) != 0)
          {
            v408 = v377;
            v409 = v334;
            v406 = v402;
            v407 = v403;
            sub_23AD043FC((uint64_t)&v406, 0x7267694D67616964, 0xEF44496E6F697461);
          }
        }
        else
        {
          sub_23AA8A05C((uint64_t)&v404, qword_2542E5640);
        }
        v375 = v396;
      }
    }
    v378 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23ADC08EC();
    v408 = MEMORY[0x24BEE0D00];
    v409 = v334;
    v406 = v378;
    v407 = v379;
    sub_23AD043FC((uint64_t)&v406, 0x526E75524B435046, 0xED00006E6F736165);
    v380 = sub_23B1C63E0();
    v381 = *(_DWORD *)&v375[OBJC_IVAR____TtC9libfssync4FPCK_volumeRole];
    v408 = MEMORY[0x24BEE44F0];
    v409 = MEMORY[0x24BEE44F8];
    LODWORD(v406) = v381;
    sub_23AD043FC((uint64_t)&v406, v380, v382);
    v383 = swift_bridgeObjectRetain();
    sub_23B148430(v383);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_23AAB7948(v394);
    sub_23AAB7948(v397);
    return;
  }
  v335 = swift_bridgeObjectRetain();
  v336 = sub_23ADE9D20(v335, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23ADEA03C);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v404 = v336;
  v337 = swift_bridgeObjectRetain();
  v338 = sub_23ADE9D20(v337, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23ADE9E7C);
  isa = (void (*)(NSObject *, uint64_t))v60;
  v339 = v338;
  swift_bridgeObjectRelease();
  v340 = 0;
  v341 = *(_QWORD *)(v339 + 64);
  v398 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v339 + 64);
  v342 = 1 << *(_BYTE *)(v339 + 32);
  v343 = -1;
  if (v342 < 64)
    v343 = ~(-1 << v342);
  v344 = v343 & v341;
  v399 = ((unint64_t)(v342 + 63) >> 6);
  while (v344)
  {
    v345 = __clz(__rbit64(v344));
    v344 &= v344 - 1;
    v346 = v345 | (v340 << 6);
LABEL_249:
    v350 = (uint64_t *)(*(_QWORD *)(v339 + 48) + 16 * v346);
    v351 = *v350;
    v352 = v350[1];
    swift_bridgeObjectRetain_n();
    v60 = sub_23AAAE580(v351, v352);
    v354 = v353;
    swift_bridgeObjectRelease();
    if (v354)
    {
      swift_bridgeObjectRetain();
      v401 = sub_23ADB9F14(v351, v352);
      v356 = v355;
      swift_bridgeObjectRelease();
      if (v356)
      {
        v400 = v340;
        v357 = v339;
        v406 = 0;
        v407 = 0xE000000000000000;
        sub_23B1C734C();
        v60 = MEMORY[0x24BEE3960];
        sub_23B1C62F0();
        swift_bridgeObjectRelease();
        sub_23B1C734C();
        v358 = sub_23B1C64AC();
        swift_bridgeObjectRelease();
        if (__OFSUB__(v358, 2))
          goto LABEL_284;
        sub_23AF14D90();
        sub_23B1C734C();
        sub_23B1C62F0();
        swift_bridgeObjectRelease();
        sub_23B1C734C();
        sub_23AD04288(1, 0, (uint64_t)v406, (uint64_t)v407);
        v339 = v357;
        v340 = (uint64_t)v400;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v347 = v340 + 1;
  if (__OFADD__(v340, 1))
    goto LABEL_285;
  if (v347 >= (uint64_t)v399)
  {
LABEL_254:
    swift_release();
    v406 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v404;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E00);
    sub_23AAB5A28(&qword_2569E5E08, &qword_2569E5E00, MEMORY[0x24BEE0310]);
    sub_23AAA420C();
    v359 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23B1C6644();
    v361 = v360;
    swift_bridgeObjectRelease();
    v408 = MEMORY[0x24BEE0D00];
    v334 = MEMORY[0x24BEE0D08];
    v409 = MEMORY[0x24BEE0D08];
    v406 = v359;
    v407 = v361;
    sub_23AD043FC((uint64_t)&v406, 0xD00000000000001BLL, 0x800000023B203B10);
    goto LABEL_255;
  }
  v348 = *((_QWORD *)v398 + v347);
  ++v340;
  if (v348)
    goto LABEL_248;
  v340 = v347 + 1;
  if (v347 + 1 >= (uint64_t)v399)
    goto LABEL_254;
  v348 = *((_QWORD *)v398 + v340);
  if (v348)
    goto LABEL_248;
  v340 = v347 + 2;
  if (v347 + 2 >= (uint64_t)v399)
    goto LABEL_254;
  v348 = *((_QWORD *)v398 + v340);
  if (v348)
    goto LABEL_248;
  v340 = v347 + 3;
  if (v347 + 3 >= (uint64_t)v399)
    goto LABEL_254;
  v348 = *((_QWORD *)v398 + v340);
  if (v348)
    goto LABEL_248;
  v340 = v347 + 4;
  if (v347 + 4 >= (uint64_t)v399)
    goto LABEL_254;
  v348 = *((_QWORD *)v398 + v340);
  if (v348)
  {
LABEL_248:
    v344 = (v348 - 1) & v348;
    v346 = __clz(__rbit64(v348)) + (v340 << 6);
    goto LABEL_249;
  }
  v349 = v347 + 5;
  if (v349 >= (uint64_t)v399)
    goto LABEL_254;
  v348 = *((_QWORD *)v398 + v349);
  if (v348)
  {
    v340 = v349;
    goto LABEL_248;
  }
  while (1)
  {
    v340 = v349 + 1;
    if (__OFADD__(v349, 1))
      break;
    if (v340 >= (uint64_t)v399)
      goto LABEL_254;
    v348 = *((_QWORD *)v398 + v340);
    ++v349;
    if (v348)
      goto LABEL_248;
  }
LABEL_300:
  __break(1u);
LABEL_301:
  sub_23B1C7418();
  __break(1u);
LABEL_302:

  __break(1u);
  __break(1u);
}

uint64_t sub_23ADC3E40(uint64_t result, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;

  v2 = 0;
  v3 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v2 << 6);
LABEL_5:
    v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v9);
    v11 = __OFADD__(result, v10);
    result += v10;
    if (v11)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
  v12 = v2 + 1;
  if (__OFADD__(v2, 1))
    goto LABEL_25;
  if (v12 >= v7)
    return result;
  v13 = *(_QWORD *)(v3 + 8 * v12);
  ++v2;
  if (v13)
    goto LABEL_22;
  v2 = v12 + 1;
  if (v12 + 1 >= v7)
    return result;
  v13 = *(_QWORD *)(v3 + 8 * v2);
  if (v13)
    goto LABEL_22;
  v2 = v12 + 2;
  if (v12 + 2 >= v7)
    return result;
  v13 = *(_QWORD *)(v3 + 8 * v2);
  if (v13)
    goto LABEL_22;
  v2 = v12 + 3;
  if (v12 + 3 >= v7)
    return result;
  v13 = *(_QWORD *)(v3 + 8 * v2);
  if (v13)
  {
LABEL_22:
    v6 = (v13 - 1) & v13;
    v9 = __clz(__rbit64(v13)) + (v2 << 6);
    goto LABEL_5;
  }
  v14 = v12 + 4;
  if (v14 >= v7)
    return result;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v2 >= v7)
      return result;
    v13 = *(_QWORD *)(v3 + 8 * v2);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23ADC3F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v7;
  void *v8;
  void *v9;
  id v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a3);
  sub_23B0DC740(2);
  v9 = v8;

  if (v9)
  {
    v10 = objc_msgSend(v9, sel_integerValue);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *a4;
    *a4 = 0x8000000000000000;
    sub_23AD26DFC((uint64_t)v10, a1, a2, isUniquelyReferenced_nonNull_native);
    *a4 = v13;

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23B18321C(a1, a2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23ADC4054()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  _BOOL4 v22;
  uint8_t *v23;
  uint8_t *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint8_t *v29;
  uint8_t *v30;
  id v31;
  id v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  NSObject *v39;
  uint8_t *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  NSObject *v43;
  id v44;
  char *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint8_t *v53;
  uint8_t *v54;
  uint8_t *v55;
  char *v56;
  uint64_t v57;
  id v58;
  NSObject *v59;
  uint64_t (*v60)(uint64_t);
  uint64_t v61;
  char *v62;

  v1 = sub_23B1C5E4C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v53 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v53 - v9;
  v11 = *(uint64_t (**)(uint64_t))&v0[OBJC_IVAR____TtC9libfssync4FPCK_isInvalidated];
  v12 = swift_retain();
  LOBYTE(v11) = v11(v12);
  swift_release();
  if ((v11 & 1) != 0)
    return 0;
  v14 = *(uint64_t (**)(uint64_t))&v0[OBJC_IVAR____TtC9libfssync4FPCK_shouldPause];
  if (!v14)
    return 1;
  v15 = *(_QWORD *)&v0[OBJC_IVAR____TtC9libfssync4FPCK_shouldPause + 8];
  v16 = swift_retain();
  v17 = (char *)v14(v16);
  v18 = *(void **)&v17[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_semaphore];
  if (v17[OBJC_IVAR____TtC9libfssync19FPShouldPauseResult_shouldPause] != 1)
  {
    if (v18)
    {
      v31 = v18;
      sub_23AAB7948((uint64_t)v14);

    }
    else
    {
      sub_23AAB7948((uint64_t)v14);
    }

    return 1;
  }
  if (v18)
  {
    v59 = v18;
    v19 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v56 = v0;
    v20 = sub_23B1C5E40();
    v21 = sub_23B1C6A88();
    v22 = os_log_type_enabled(v20, v21);
    v57 = v15;
    v58 = v17;
    v60 = v14;
    if (v22)
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (uint8_t *)swift_slowAlloc();
      v55 = v24;
      *(_DWORD *)v23 = 136315138;
      v62 = (char *)v24;
      v53 = v23 + 4;
      v54 = v23;
      v25 = v56;
      v27 = *(_QWORD *)&v56[OBJC_IVAR____TtC9libfssync4FPCK_runID];
      v26 = *(_QWORD *)&v56[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
      swift_bridgeObjectRetain();
      v61 = sub_23AABEC68(v27, v26, (uint64_t *)&v62);
      v28 = v25;
      sub_23B1C6CBC();

      swift_bridgeObjectRelease();
      v29 = v54;
      _os_log_impl(&dword_23AA66000, v20, v21, "🧹 FPCK %s pausing mid-run because pause checker indicated", v54, 0xCu);
      v30 = v55;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v30, -1, -1);
      MEMORY[0x23B8614BC](v29, -1, -1);

    }
    else
    {

      v28 = v56;
    }
    v42 = *(void (**)(char *, uint64_t))(v2 + 8);
    v42(v8, v1);
    v43 = v59;
    sub_23B1C6BFC();
    v44 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v45 = v28;
    v46 = sub_23B1C5E40();
    v47 = sub_23B1C6A88();
    if (os_log_type_enabled(v46, v47))
    {
      v56 = (char *)v42;
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      *(_DWORD *)v48 = 136315138;
      v62 = (char *)v49;
      v55 = v48 + 4;
      v50 = *(_QWORD *)&v45[OBJC_IVAR____TtC9libfssync4FPCK_runID];
      v51 = *(_QWORD *)&v45[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
      swift_bridgeObjectRetain();
      v61 = sub_23AABEC68(v50, v51, (uint64_t *)&v62);
      sub_23B1C6CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v46, v47, "🧹 FPCK %s resuming mid-run", v48, 0xCu);
      v13 = 1;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v49, -1, -1);
      MEMORY[0x23B8614BC](v48, -1, -1);
      sub_23AAB7948((uint64_t)v60);

      ((void (*)(char *, uint64_t))v56)(v5, v1);
      return v13;
    }
    sub_23AAB7948((uint64_t)v60);

    v42(v5, v1);
    return 1;
  }
  v32 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v33 = v0;
  v34 = sub_23B1C5E40();
  v35 = sub_23B1C6A88();
  if (os_log_type_enabled(v34, v35))
  {
    v59 = v34;
    v36 = (uint8_t *)swift_slowAlloc();
    v56 = (char *)swift_slowAlloc();
    v62 = v56;
    v55 = v36;
    *(_DWORD *)v36 = 136315138;
    v54 = v36 + 4;
    v60 = v14;
    v37 = *(_QWORD *)&v33[OBJC_IVAR____TtC9libfssync4FPCK_runID];
    v38 = *(_QWORD *)&v33[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
    swift_bridgeObjectRetain();
    v61 = sub_23AABEC68(v37, v38, (uint64_t *)&v62);
    sub_23B1C6CBC();

    swift_bridgeObjectRelease();
    v39 = v59;
    v40 = v55;
    _os_log_impl(&dword_23AA66000, v59, v35, "🧹 FPCK %s skipping mid-run, shouldPause missing semaphore", v55, 0xCu);
    v41 = v56;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v41, -1, -1);
    MEMORY[0x23B8614BC](v40, -1, -1);
    sub_23AAB7948((uint64_t)v60);

  }
  else
  {

    sub_23AAB7948((uint64_t)v14);
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
  return 0;
}

void sub_23ADC4674(uint64_t a1, uint64_t a2, uint8_t *a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  void (*v55)(char *);
  void (*v56)(char *, _QWORD, uint64_t, uint64_t);
  char *v57;
  char *v58;
  void (**v59)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  void (**v61)(char *, uint64_t, uint64_t, uint64_t);
  NSObject *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  id v83;
  void (*v84)(char *, uint64_t);
  id v85;
  void *v86;
  void *v87;
  id v88;
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  char *v91;
  id v92;
  char *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  void (*v102)(char *, uint64_t);
  id v103;
  char *v104;
  char *v105;
  NSObject *v106;
  os_log_type_t v107;
  _BOOL4 v108;
  uint8_t *v109;
  uint64_t v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  unint64_t v113;
  char *v114;
  const void *v115;
  int v116;
  char v117;
  id v118;
  id v119;
  void *v120;
  void *v121;
  id v122;
  char *v123;
  NSObject *v124;
  os_log_type_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  id v134;
  char *v135;
  char *v136;
  NSObject *v137;
  os_log_type_t v138;
  uint8_t *v139;
  uint64_t v140;
  void (*v141)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v142;
  unint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint8_t *v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  char *v151;
  char *v152;
  NSObject *v153;
  os_log_type_t v154;
  _BOOL4 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  id v165;
  char *v166;
  NSObject *v167;
  os_log_type_t v168;
  uint8_t *v169;
  uint64_t v170;
  void (*v171)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v172;
  unint64_t v173;
  char *v174;
  void (*v175)(char *, char *, uint64_t);
  char *v176;
  uint64_t v177;
  uint64_t v178;
  id v179;
  char *v180;
  NSObject *v181;
  os_log_type_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  id v195;
  os_log_type_t v196;
  uint64_t v197;
  uint8_t *v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint8_t *v202;
  char *v203;
  uint64_t v204;
  id v205;
  char *v206;
  void (**v207)(char *, uint64_t, uint64_t, uint64_t);
  NSObject *v208;
  os_log_type_t v209;
  uint8_t *v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  uint64_t v224;
  char *v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  void (*v235)(char *, _QWORD, uint64_t, uint64_t);
  unint64_t v236;
  void (*v237)(char *, char *, uint64_t);
  uint64_t v238;
  uint64_t v239;
  unsigned int (*v240)(NSObject *, uint64_t, uint64_t);
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  NSObject *v247;
  void (**v248)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v249;
  uint64_t v250;
  Class v251;
  void (**v252)(char *, uint64_t, uint64_t, uint64_t);
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint8_t *v257;
  char *v258;
  objc_super v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  const void *v264;
  int v265;
  char v266;
  uint64_t v267;

  v6 = v5;
  v257 = a3;
  v267 = *MEMORY[0x24BDAC8D0];
  v229 = sub_23B1C5BDC();
  v228 = *(_QWORD *)(v229 - 8);
  v10 = MEMORY[0x24BDAC7A8](v229);
  v226 = (char *)&v216 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v232 = (char *)&v216 - v12;
  v234 = sub_23B1C5E4C();
  v231 = *(_QWORD *)(v234 - 8);
  v13 = MEMORY[0x24BDAC7A8](v234);
  v217 = (char *)&v216 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v219 = (char *)&v216 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v220 = (char *)&v216 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v221 = (char *)&v216 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v222 = (char *)&v216 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v223 = (char *)&v216 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v225 = (char *)&v216 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v227 = (char *)&v216 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v230 = (char *)&v216 - v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1E8);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v244 = (uint64_t)&v216 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v246 = (char *)&v216 - v33;
  v245 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1E0);
  v248 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v245 - 8);
  v34 = MEMORY[0x24BDAC7A8](v245);
  v243 = (uint64_t)&v216 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v242 = (uint64_t)&v216 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v247 = ((char *)&v216 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v216 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v216 - v43;
  v45 = sub_23B1C5A08();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = MEMORY[0x24BDAC7A8](v45);
  v256 = (char *)&v216 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x24BDAC7A8](v47);
  v258 = (char *)&v216 - v50;
  MEMORY[0x24BDAC7A8](v49);
  v253 = (char *)&v216 - v51;
  v218 = OBJC_IVAR____TtC9libfssync4FPCK_launchOptions;
  v224 = a2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9libfssync4FPCK_launchOptions] = a2;
  v233 = v4;
  v52 = &v4[OBJC_IVAR____TtC9libfssync4FPCK_resultHandler];
  *(_QWORD *)v52 = v257;
  *((_QWORD *)v52 + 1) = a4;
  swift_retain();
  swift_release();
  v53 = *(_QWORD *)(a1 + 16);
  v238 = a1;
  if (v53)
  {
    v54 = a1 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
    v55 = *(void (**)(char *))(v46 + 16);
    v241 = v54;
    v55(v44);
    v56 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56);
    v56(v44, 0, 1, v45);
    v240 = *(unsigned int (**)(NSObject *, uint64_t, uint64_t))(v46 + 48);
    if (v240(v44, 1, v45) != 1)
    {
      v57 = v253;
      v237 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
      v237(v253, v44, v45);
      ((void (*)(char *, char *, uint64_t))v55)(v42, v57, v45);
      v56(v42, 0, 1, v45);
      v58 = &v233[OBJC_IVAR____TtC9libfssync4FPCK_rootURL];
      swift_beginAccess();
      sub_23AA8A660((uint64_t)v42, (uint64_t)v58, (uint64_t *)&unk_2542E6740);
      swift_endAccess();
      v261 = MEMORY[0x24BEE4AF8];
      v255 = v45;
      v239 = v46;
      if (v53 >= 2)
      {
        v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v55;
        swift_bridgeObjectRetain();
        v60 = 1;
        v61 = v248;
        v62 = v247;
        v236 = v53;
        v235 = v56;
        v252 = v59;
        while (v53 != v60)
        {
          ((void (*)(NSObject *, uint64_t, uint64_t))v59)(v62, v241 + *(_QWORD *)(v46 + 72) * v60, v45);
          v56((char *)v62, 0, 1, v45);
          if (v240(v62, 1, v45) == 1)
            goto LABEL_18;
          v250 = v60;
          v237(v258, (char *)v62, v45);
          v63 = v256;
          ((void (*)(char *, char *, uint64_t))v59)(v256, v253, v45);
          v251 = (Class)type metadata accessor for FPCKDetachedRoot(0);
          v64 = (char *)objc_allocWithZone(v251);
          v65 = sub_23B1C59E4();
          v67 = v66;
          MEMORY[0x24BDAC7A8](v65);
          v215 = v63;
          v68 = (uint64_t)v246;
          v69 = v245;
          v61[7](v246, 1, 1, v245);
          swift_bridgeObjectRetain();
          sub_23B0E399C(4294967294, v65, v67, 0x100000, 0, 0, v68, (uint64_t)sub_23ADECA70, (uint64_t)(&v216 - 4));
          if (v6)
          {
            sub_23AA8A05C(v68, &qword_2542DF1E8);

            swift_bridgeObjectRelease();
            v89 = *(void (**)(char *, uint64_t))(v239 + 8);
            v90 = v255;
            v89(v258, v255);
            v89(v256, v90);
            swift_deallocPartialClassInstance();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v89(v253, v90);
            return;
          }
          v254 = 0;
          v70 = v244;
          sub_23AA8EFC8(v68, v244, &qword_2542DF1E8);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v61[6])(v70, 1, v69) == 1)
            __break(1u);
          v257 = (uint8_t *)*(int *)(v69 + 48);
          v71 = v69;
          v72 = *(int *)(v69 + 64);
          v249 = v72;
          v73 = v242;
          sub_23AA724E8(v70, v242, &qword_2542DF1E0);
          sub_23AA8A05C(v68, &qword_2542DF1E8);
          swift_bridgeObjectRelease();
          v74 = v64;
          ((void (*)(char *, char *, uint64_t))v252)(&v64[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_physicalLocation], v258, v255);
          v75 = v243;
          sub_23AA8EFC8(v73, v243, (uint64_t *)&unk_2542E6740);
          v76 = *(_QWORD *)&v257[v73];
          v77 = *(_BYTE *)(v73 + v72);
          sub_23AA724E8(v75, (uint64_t)&v74[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_logicalLocation], (uint64_t *)&unk_2542E6740);
          v78 = *(int *)(v71 + 48);
          v79 = *(int *)(v71 + 64);
          sub_23AA8EFC8(v73, v75, (uint64_t *)&unk_2542E6740);
          *(_QWORD *)(v75 + v78) = v76;
          v45 = v255;
          *(_BYTE *)(v75 + v79) = v77;
          *(_QWORD *)&v74[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_inode] = v76;
          sub_23AA8A05C(v75, (uint64_t *)&unk_2542E6740);
          v80 = *(int *)(v71 + 48);
          v81 = *(int *)(v71 + 64);
          sub_23AA724E8(v73, v75, (uint64_t *)&unk_2542E6740);
          *(_QWORD *)(v75 + v80) = *(_QWORD *)&v257[v73];
          v82 = *(_BYTE *)(v73 + v249);
          *(_BYTE *)(v75 + v81) = v82;
          v74[OBJC_IVAR____TtC9libfssync16FPCKDetachedRoot_shouldRefreshBookmark] = v82;

          sub_23AA8A05C(v75, (uint64_t *)&unk_2542E6740);
          v259.receiver = v74;
          v259.super_class = v251;
          v83 = objc_msgSendSuper2(&v259, sel_init);
          v46 = v239;
          v84 = *(void (**)(char *, uint64_t))(v239 + 8);
          v84(v258, v45);
          v84(v256, v45);
          v85 = v83;
          MEMORY[0x23B85F008]();
          if (*(_QWORD *)((v261 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v261 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23B1C6740();
          v60 = v250 + 1;
          sub_23B1C6788();
          sub_23B1C671C();

          v53 = v236;
          v6 = v254;
          v61 = v248;
          v62 = v247;
          v56 = v235;
          v59 = v252;
          if (v236 == v60)
          {
            v235((char *)v247, 1, 1, v45);
LABEL_18:
            v254 = v6;
            swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
        __break(1u);
        goto LABEL_59;
      }
      v254 = v5;
LABEL_19:
      v91 = v230;
      v92 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v93 = v233;
      v94 = sub_23B1C5E40();
      v95 = sub_23B1C6A88();
      if (os_log_type_enabled(v94, v95))
      {
        v96 = swift_slowAlloc();
        v97 = swift_slowAlloc();
        v264 = (const void *)v97;
        *(_DWORD *)v96 = 136315394;
        v98 = *(_QWORD *)&v93[OBJC_IVAR____TtC9libfssync4FPCK_runID];
        v99 = *(_QWORD *)&v93[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
        swift_bridgeObjectRetain();
        v262 = sub_23AABEC68(v98, v99, (uint64_t *)&v264);
        sub_23B1C6CBC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v96 + 12) = 2080;
        v100 = sub_23ADD3684(v224);
        v262 = sub_23AABEC68(v100, v101, (uint64_t *)&v264);
        v45 = v255;
        sub_23B1C6CBC();
        v46 = v239;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v94, v95, "🧹 FPCK %s: launching with options: [%s].", (uint8_t *)v96, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v97, -1, -1);
        MEMORY[0x23B8614BC](v96, -1, -1);

      }
      else
      {

      }
      v102 = *(void (**)(char *, uint64_t))(v231 + 8);
      v102(v91, v234);
      if ((sub_23ADC4054() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v253, v45);
        return;
      }
      v103 = (id)fpfs_current_or_default_log();
      v104 = v227;
      sub_23B1C5E58();
      v105 = v93;
      v106 = sub_23B1C5E40();
      v107 = sub_23B1C6A88();
      v108 = os_log_type_enabled(v106, v107);
      v258 = (char *)v102;
      if (v108)
      {
        v109 = (uint8_t *)swift_slowAlloc();
        v110 = swift_slowAlloc();
        v264 = (const void *)v110;
        *(_DWORD *)v109 = 136315138;
        v111 = v102;
        v112 = *(_QWORD *)&v105[OBJC_IVAR____TtC9libfssync4FPCK_runID];
        v113 = *(_QWORD *)&v105[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
        swift_bridgeObjectRetain();
        v262 = sub_23AABEC68(v112, v113, (uint64_t *)&v264);
        sub_23B1C6CBC();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v106, v107, "🧹 FPCK %s: launching disk and FSSnapshot checks.", v109, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v110, -1, -1);
        MEMORY[0x23B8614BC](v109, -1, -1);

        v111(v227, v234);
      }
      else
      {

        v102(v104, v234);
      }
      v114 = v225;
      sub_23B1C5BB8();
      v116 = *(_DWORD *)&v105[OBJC_IVAR____TtC9libfssync4FPCK_ioContext + 8];
      v117 = v105[OBJC_IVAR____TtC9libfssync4FPCK_ioContext + 12];
      v264 = *(const void **)&v105[OBJC_IVAR____TtC9libfssync4FPCK_ioContext];
      v115 = v264;
      v265 = v116;
      v266 = v117;
      v118 = objc_allocWithZone((Class)FSChecker);
      _Block_copy(v115);
      v119 = objc_msgSend(v118, sel_init);
      v120 = (void *)sub_23B1C5954();
      type metadata accessor for FPCKDetachedRoot(0);
      v121 = (void *)sub_23B1C66F8();
      objc_msgSend(v119, sel_enumerateItemsOnDiskAtURL_detachedRoots_usingFPFS_ioContext_delegate_, v120, v121, v105[OBJC_IVAR____TtC9libfssync4FPCK_usingFPFS], &v264, v105);

      _Block_release(v115);
      swift_bridgeObjectRelease();
      v122 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v123 = v105;
      v124 = sub_23B1C5E40();
      v125 = sub_23B1C6A88();
      if (os_log_type_enabled(v124, v125))
      {
        v126 = swift_slowAlloc();
        v127 = swift_slowAlloc();
        v264 = (const void *)v127;
        *(_DWORD *)v126 = 136315394;
        v128 = *(_QWORD *)&v123[OBJC_IVAR____TtC9libfssync4FPCK_runID];
        v129 = *(_QWORD *)&v123[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
        swift_bridgeObjectRetain();
        v262 = sub_23AABEC68(v128, v129, (uint64_t *)&v264);
        sub_23B1C6CBC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v126 + 12) = 2048;
        v130 = v226;
        sub_23B1C5BB8();
        swift_beginAccess();
        sub_23B1C5B4C();
        v132 = v131;
        (*(void (**)(char *, uint64_t))(v228 + 8))(v130, v229);
        v263 = v132;
        sub_23B1C6CBC();
        _os_log_impl(&dword_23AA66000, v124, v125, "🧹 FPCK %s: FS vs snapshot check took %fs", (uint8_t *)v126, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v127, -1, -1);
        MEMORY[0x23B8614BC](v126, -1, -1);

      }
      else
      {

      }
      v56 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v258;
      ((void (*)(char *, uint64_t))v258)(v114, v234);
      v133 = v255;
      v46 = v239;
      if ((sub_23ADC4054() & 1) != 0)
      {
        v134 = (id)fpfs_current_or_default_log();
        v135 = v223;
        sub_23B1C5E58();
        v136 = v123;
        v137 = sub_23B1C5E40();
        v138 = sub_23B1C6A88();
        if (os_log_type_enabled(v137, v138))
        {
          v139 = (uint8_t *)swift_slowAlloc();
          v140 = swift_slowAlloc();
          v264 = (const void *)v140;
          *(_DWORD *)v139 = 136315138;
          v141 = v56;
          v142 = *(_QWORD *)&v136[OBJC_IVAR____TtC9libfssync4FPCK_runID];
          v143 = *(_QWORD *)&v136[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
          swift_bridgeObjectRetain();
          v263 = sub_23AABEC68(v142, v143, (uint64_t *)&v264);
          v46 = v239;
          sub_23B1C6CBC();

          v56 = v141;
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_23AA66000, v137, v138, "🧹 FPCK %s: launching reconciliation table checks.", v139, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v140, -1, -1);
          MEMORY[0x23B8614BC](v139, -1, -1);

          ((void (*)(char *, uint64_t))v141)(v223, v234);
        }
        else
        {

          ((void (*)(char *, uint64_t))v56)(v135, v234);
        }
        v144 = v226;
        sub_23B1C5BB8();
        v145 = v232;
        swift_beginAccess();
        v146 = v228;
        v147 = *(uint8_t **)(v228 + 40);
        v148 = v229;
        ((void (*)(char *, char *, uint64_t))v147)(v145, v144, v229);
        v149 = v254;
        sub_23ADCA130();
        if (v149)
        {
          (*(void (**)(char *, uint64_t))(v46 + 8))(v253, v255);
          (*(void (**)(char *, uint64_t))(v146 + 8))(v145, v148);
          return;
        }
        v150 = (id)fpfs_current_or_default_log();
        v151 = v222;
        sub_23B1C5E58();
        v152 = v136;
        v153 = sub_23B1C5E40();
        v154 = sub_23B1C6A88();
        v155 = os_log_type_enabled(v153, v154);
        v254 = 0;
        v257 = v147;
        if (v155)
        {
          v156 = swift_slowAlloc();
          v157 = swift_slowAlloc();
          v263 = v157;
          *(_DWORD *)v156 = 136315394;
          v158 = *(_QWORD *)&v152[OBJC_IVAR____TtC9libfssync4FPCK_runID];
          v159 = *(_QWORD *)&v152[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
          swift_bridgeObjectRetain();
          v260 = sub_23AABEC68(v158, v159, &v263);
          sub_23B1C6CBC();

          swift_bridgeObjectRelease();
          *(_WORD *)(v156 + 12) = 2048;
          v160 = v226;
          sub_23B1C5BB8();
          sub_23B1C5B4C();
          v162 = v161;
          (*(void (**)(char *, uint64_t))(v228 + 8))(v160, v229);
          v260 = v162;
          v46 = v239;
          sub_23B1C6CBC();
          _os_log_impl(&dword_23AA66000, v153, v154, "🧹 FPCK %s: reconciliation table check took %fs", (uint8_t *)v156, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v157, -1, -1);
          MEMORY[0x23B8614BC](v156, -1, -1);

          ((void (*)(char *, uint64_t))v56)(v222, v234);
        }
        else
        {

          ((void (*)(char *, uint64_t))v56)(v151, v234);
        }
        v163 = v255;
        v164 = v221;
        if ((sub_23ADC4054() & 1) != 0)
        {
          v165 = (id)fpfs_current_or_default_log();
          sub_23B1C5E58();
          v166 = v152;
          v167 = sub_23B1C5E40();
          v168 = sub_23B1C6A88();
          if (os_log_type_enabled(v167, v168))
          {
            v169 = (uint8_t *)swift_slowAlloc();
            v170 = swift_slowAlloc();
            v263 = v170;
            *(_DWORD *)v169 = 136315138;
            v171 = v56;
            v172 = *(_QWORD *)&v166[OBJC_IVAR____TtC9libfssync4FPCK_runID];
            v173 = *(_QWORD *)&v166[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
            swift_bridgeObjectRetain();
            v260 = sub_23AABEC68(v172, v173, &v263);
            v46 = v239;
            v163 = v255;
            sub_23B1C6CBC();

            v56 = v171;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23AA66000, v167, v168, "🧹 FPCK %s: launching FSSnapshot and FPSnapshot checks.", v169, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v170, -1, -1);
            MEMORY[0x23B8614BC](v169, -1, -1);

            ((void (*)(char *, uint64_t))v171)(v221, v234);
          }
          else
          {

            ((void (*)(char *, uint64_t))v56)(v164, v234);
          }
          v174 = v226;
          v175 = (void (*)(char *, char *, uint64_t))v257;
          sub_23B1C5BB8();
          v176 = v232;
          v177 = v229;
          v175(v232, v174, v229);
          v178 = v254;
          sub_23ADCD848();
          v6 = v178;
          if (v178)
          {
            (*(void (**)(char *, uint64_t))(v46 + 8))(v253, v163);
            (*(void (**)(char *, uint64_t))(v228 + 8))(v176, v177);
            return;
          }
          v179 = (id)fpfs_current_or_default_log();
          v180 = v220;
          sub_23B1C5E58();
          v61 = v166;
          v181 = sub_23B1C5E40();
          v182 = sub_23B1C6A88();
          if (os_log_type_enabled(v181, v182))
          {
            v183 = swift_slowAlloc();
            v254 = 0;
            v184 = v183;
            v185 = swift_slowAlloc();
            v263 = v185;
            *(_DWORD *)v184 = 136315394;
            v186 = *(uint64_t *)((char *)v61 + OBJC_IVAR____TtC9libfssync4FPCK_runID);
            v187 = *(unint64_t *)((char *)v61 + OBJC_IVAR____TtC9libfssync4FPCK_runID + 8);
            swift_bridgeObjectRetain();
            v260 = sub_23AABEC68(v186, v187, &v263);
            sub_23B1C6CBC();

            swift_bridgeObjectRelease();
            *(_WORD *)(v184 + 12) = 2048;
            v188 = v226;
            sub_23B1C5BB8();
            sub_23B1C5B4C();
            v190 = v189;
            (*(void (**)(char *, uint64_t))(v228 + 8))(v188, v229);
            v260 = v190;
            v46 = v239;
            sub_23B1C6CBC();
            _os_log_impl(&dword_23AA66000, v181, v182, "🧹 FPCK %s: FS vs FP snapshot check took %fs", (uint8_t *)v184, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v185, -1, -1);
            v191 = v184;
            v6 = v254;
            MEMORY[0x23B8614BC](v191, -1, -1);

            ((void (*)(char *, uint64_t))v56)(v220, v234);
          }
          else
          {

            ((void (*)(char *, uint64_t))v56)(v180, v234);
          }
          v60 = (uint64_t)v219;
          v192 = *(_QWORD *)&v233[v218];
          v45 = v228;
          if ((v192 & 0x10) == 0)
          {
            if ((v192 & 0x20) != 0)
            {
LABEL_62:
              if ((sub_23ADC4054() & 1) != 0)
              {
                v204 = v6;
                v205 = (id)fpfs_current_or_default_log();
                v206 = v217;
                sub_23B1C5E58();
                v207 = v61;
                v208 = sub_23B1C5E40();
                v209 = sub_23B1C6A88();
                if (os_log_type_enabled(v208, v209))
                {
                  v210 = (uint8_t *)swift_slowAlloc();
                  v211 = swift_slowAlloc();
                  v263 = v211;
                  *(_DWORD *)v210 = 136315138;
                  v212 = *(uint64_t *)((char *)v207 + OBJC_IVAR____TtC9libfssync4FPCK_runID);
                  v213 = *(unint64_t *)((char *)v207 + OBJC_IVAR____TtC9libfssync4FPCK_runID + 8);
                  swift_bridgeObjectRetain();
                  v260 = sub_23AABEC68(v212, v213, &v263);
                  v46 = v239;
                  sub_23B1C6CBC();

                  swift_bridgeObjectRelease();
                  _os_log_impl(&dword_23AA66000, v208, v209, "🧹 FPCK %s: launching backup manifest checks.", v210, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x23B8614BC](v211, -1, -1);
                  MEMORY[0x23B8614BC](v210, -1, -1);

                  ((void (*)(char *, uint64_t))v258)(v217, v234);
                }
                else
                {

                  ((void (*)(char *, uint64_t))v56)(v206, v234);
                }
                v214 = v255;
                sub_23ADD24CC();
                if (v204)
                {
                  (*(void (**)(char *, uint64_t))(v46 + 8))(v253, v214);
                  (*(void (**)(char *, uint64_t))(v228 + 8))(v232, v229);
                  return;
                }
                v193 = v229;
                v194 = v232;
                v45 = v228;
LABEL_54:
                (*(void (**)(char *, uint64_t))(v46 + 8))(v253, v255);
                (*(void (**)(char *, uint64_t))(v45 + 8))(v194, v193);
                return;
              }
LABEL_65:
              (*(void (**)(char *, uint64_t))(v46 + 8))(v253, v255);
              (*(void (**)(char *, uint64_t))(v45 + 8))(v232, v229);
              return;
            }
LABEL_53:
            v193 = v229;
            v194 = v232;
            goto LABEL_54;
          }
          if ((sub_23ADC4054() & 1) == 0)
            goto LABEL_65;
          v195 = (id)fpfs_current_or_default_log();
          sub_23B1C5E58();
          v59 = v61;
          v62 = sub_23B1C5E40();
          v196 = sub_23B1C6A88();
          if (os_log_type_enabled(v62, v196))
          {
            v197 = v6;
            v198 = (uint8_t *)swift_slowAlloc();
            v199 = swift_slowAlloc();
            v263 = v199;
            *(_DWORD *)v198 = 136315138;
            v257 = v198 + 4;
            v200 = *(uint64_t *)((char *)v59 + OBJC_IVAR____TtC9libfssync4FPCK_runID);
            v201 = *(unint64_t *)((char *)v59 + OBJC_IVAR____TtC9libfssync4FPCK_runID + 8);
            swift_bridgeObjectRetain();
            v260 = sub_23AABEC68(v200, v201, &v263);
            v46 = v239;
            sub_23B1C6CBC();

            v56 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v258;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23AA66000, v62, v196, "🧹 FPCK %s: launching purgePurgatory.", v198, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v199, -1, -1);
            v202 = v198;
            v6 = v197;
            v45 = v228;
            MEMORY[0x23B8614BC](v202, -1, -1);

            v203 = v219;
            goto LABEL_60;
          }
LABEL_59:

          v203 = (char *)v60;
LABEL_60:
          ((void (*)(char *, uint64_t))v56)(v203, v234);
          sub_23ADD2218();
          if (v6)
            goto LABEL_65;
          if ((*(_QWORD *)&v233[v218] & 0x20) != 0)
            goto LABEL_62;
          goto LABEL_53;
        }
        (*(void (**)(char *, uint64_t))(v46 + 8))(v253, v163);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v46 + 8))(v253, v133);
      }
      (*(void (**)(char *, uint64_t))(v228 + 8))(v232, v229);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v44, 1, 1, v45);
  }
  sub_23AA8A05C((uint64_t)v44, (uint64_t *)&unk_2542E6740);
  v86 = (void *)sub_23B1C63BC();
  v87 = (void *)sub_23B1C66F8();
  v88 = (id)FPInvalidParameterError();

  if (v88)
    swift_willThrow();
  else
    __break(1u);
}

uint64_t sub_23ADC62F4(uint64_t a1, uint64_t a2, uint8_t *a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t result;
  id v15;
  char *v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v10 = sub_23B1C5E4C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v27 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23ADED08C((uint64_t)v13, (uint64_t)v13, a1, a2, a3, a4);

  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v5)
  {
    v25 = v11;
    v26 = v10;
    v15 = (id)fpfs_current_or_default_log();
    v16 = v27;
    sub_23B1C5E58();
    v17 = (char *)v13;
    v18 = sub_23B1C5E40();
    v19 = sub_23B1C6A88();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v29 = v21;
      *(_DWORD *)v20 = 136315138;
      v24[1] = v20 + 4;
      v22 = *(_QWORD *)&v17[OBJC_IVAR____TtC9libfssync4FPCK_runID];
      v23 = *(_QWORD *)&v17[OBJC_IVAR____TtC9libfssync4FPCK_runID + 8];
      swift_bridgeObjectRetain();
      v28 = sub_23AABEC68(v22, v23, &v29);
      sub_23B1C6CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v18, v19, "🧹 FPCK %s: all checks done.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v21, -1, -1);
      MEMORY[0x23B8614BC](v20, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v16, v26);
  }
  return result;
}

uint64_t sub_23ADC662C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_23ADED998(a2, a3, a4, a5);
}

_QWORD *sub_23ADC6640(_QWORD *result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, unint64_t *a6, unint64_t *a7)
{
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);

  if (*result || *a2)
  {
    v12 = (_QWORD *)(a3 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck);
    result = (_QWORD *)swift_beginAccess();
    if (__OFADD__(*v12, 1))
    {
      __break(1u);
    }
    else
    {
      ++*v12;
      swift_bridgeObjectRetain();
      v13 = (void *)sub_23B1C63BC();
      swift_bridgeObjectRelease();
      v14 = objc_msgSend(v13, sel_fp_prettyPath);

      v15 = sub_23B1C63E0();
      v17 = v16;

      v18 = sub_23ADED670(v15, v17, *a5, *a6, *a2, *a7);
      v20 = v19;
      swift_bridgeObjectRelease();
      v21 = *(void (**)(uint64_t, uint64_t))(a3 + OBJC_IVAR____TtC9libfssync4FPCK_resultHandler);
      swift_retain();
      v21(v18, v20);
      swift_bridgeObjectRelease();
      return (_QWORD *)swift_release();
    }
  }
  return result;
}

uint64_t sub_23ADC6790@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  void (*v14)(uint64_t, const char *, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t@<X8>), _QWORD *, uint64_t);
  uint64_t v15;
  _QWORD v16[5];
  _OWORD v17[31];

  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker);
  if (!v5)
    goto LABEL_7;
  swift_beginAccess();
  v8 = *(_QWORD *)(v5 + 24);
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_7;
  v9 = a2;
  swift_bridgeObjectRetain();
  v10 = sub_23AA88CF8(v9);
  if ((v11 & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_7:
    sub_23ACFC784(v17);
    return sub_23AA724E8((uint64_t)v17, a4, qword_2542E6E20);
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v10);
  swift_retain();

  swift_bridgeObjectRelease();
  result = swift_weakLoadStrong();
  if (result)
  {
    v16[2] = v12;
    v16[3] = a3;
    v14 = *(void (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t (*)@<X0>(uint64_t@<X8>), _QWORD *, uint64_t))(*(_QWORD *)MEMORY[0x24BDAC7A8](result) + 424);
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E6E20);
    v14(1, "checker(_:handleItem:itemStatus:under:brokenInvariants:)", 56, 2, sub_23ADF30D4, v16, v15);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23ADC68FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  _QWORD *v15;
  id v16;
  uint8_t *v17;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[31];
  _BYTE v24[504];
  _BYTE v25[512];
  uint64_t v26;
  _OWORD v27[32];

  v5 = sub_23B1C5E4C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B07FF48(*(void **)a1, *(unsigned __int8 *)(a1 + 8), 0, v27);
  if (v2)
  {
    v22 = v6;
    v9 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v10 = v2;
    v11 = sub_23B1C5E40();
    v12 = sub_23B1C6AA0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v21 = a2;
      v14 = (uint8_t *)v13;
      v15 = (_QWORD *)swift_slowAlloc();
      v20 = v5;
      *(_DWORD *)v14 = 138543362;
      v19 = v14 + 4;
      swift_getErrorValue();
      v16 = sub_23B0D9CF0(v26);
      *(_QWORD *)&v27[0] = v16;
      v5 = v20;
      sub_23B1C6CBC();
      *v15 = v16;

      _os_log_impl(&dword_23AA66000, v11, v12, "FPCK: error fetching the item in the reconciliation table: %{public}@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v15, -1, -1);
      v17 = v14;
      a2 = v21;
      MEMORY[0x23B8614BC](v17, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
    sub_23ACFC784(v27);
    return sub_23AA724E8((uint64_t)v27, a2, qword_2542E6E20);
  }
  else
  {
    sub_23AA724E8((uint64_t)v27, (uint64_t)v24, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v24, (uint64_t)v25, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v25) == 1)
    {
      sub_23ACFC784(v23);
    }
    else
    {
      memcpy(v23, v25, sizeof(v23));
      nullsub_1(v23);
    }
    return sub_23AA724E8((uint64_t)v23, a2, qword_2542E6E20);
  }
}

uint64_t sub_23ADC6C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___vendorExcludedFolders;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___vendorExcludedFolders))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___vendorExcludedFolders);
  }
  else
  {
    v2 = sub_23ADC6CC4(v0);
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23ADC6CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t result;
  void (*v9)(_QWORD *__return_ptr, _QWORD, const char *, uint64_t, uint64_t, void (*)(_QWORD *@<X8>), uint64_t, uint64_t);
  uint64_t v10;
  _QWORD v11[2];

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker);
  if (!v1)
    return MEMORY[0x24BEE4B08];
  sub_23B1C63E0();
  v11[0] = 47;
  v11[1] = 0xE100000000000000;
  sub_23AAA420C();
  swift_retain();
  v2 = sub_23B1C6CD4();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release();
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4B08];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 24);
  if (!*(_QWORD *)(v4 + 16))
  {

LABEL_10:
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  swift_bridgeObjectRetain();
  v5 = sub_23AA88CF8(v3);
  if ((v6 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
  swift_retain();

  swift_bridgeObjectRelease();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = *(void (**)(_QWORD *__return_ptr, _QWORD, const char *, uint64_t, uint64_t, void (*)(_QWORD *@<X8>), uint64_t, uint64_t))(*(_QWORD *)result + 424);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF370);
    v9(v11, 0, "vendorExcludedFolders", 21, 2, sub_23ADF1E54, v7, v10);
    swift_release();
    swift_release();
    swift_release();
    return v11[0];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_23ADC6E9C(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  uint64_t v21;
  _QWORD __dst[63];
  uint64_t v23;

  v2 = 0;
  v3 = 1;
  v4 = MEMORY[0x24BEE4B08];
  while (1)
  {
    v5 = sub_23ADDDF20(v2, v3 & 1);
    if (v1)
    {

      goto LABEL_21;
    }
    v8 = v5;
    v2 = v6;
    v9 = v7;
    v10 = v5[2];
    if (!v10)
      break;
    v20 = v7;
    v21 = v6;
    v11 = 0;
    while (1)
    {
      memcpy(__dst, &v8[62 * v11 + 4], 0x1F0uLL);
      if (LOBYTE(__dst[1]) != 1)
        goto LABEL_15;
      v12 = __dst[0];
      v13 = sub_23B1C749C();
      v14 = -1 << *(_BYTE *)(v4 + 32);
      v15 = v13 & ~v14;
      if (((*(_QWORD *)(v4 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        v16 = *(_QWORD *)(v4 + 48);
        if (*(_QWORD *)(v16 + 8 * v15) == v12)
          goto LABEL_15;
        v17 = ~v14;
        while (1)
        {
          v15 = (v15 + 1) & v17;
          if (((*(_QWORD *)(v4 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            break;
          if (*(_QWORD *)(v16 + 8 * v15) == v12)
            goto LABEL_15;
        }
      }
      sub_23ACFC940((uint64_t)__dst);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v23 = v4;
      sub_23ADE52B4(v12, v15, isUniquelyReferenced_nonNull_native, &qword_2542DF398);
      v4 = v23;
      swift_bridgeObjectRelease();
      sub_23AAFC3AC((uint64_t)__dst);
LABEL_15:
      if (++v11 == v10)
        break;
      if (v11 >= v8[2])
      {
        __break(1u);
        return;
      }
    }
    swift_bridgeObjectRelease();
    v2 = v21;
    if ((v20 & 1) != 0)
      goto LABEL_21;
LABEL_3:
    v3 = 0;
    if (*(_QWORD *)(v4 + 16) >= 0x249F0uLL)
      goto LABEL_21;
  }
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
    goto LABEL_3;
LABEL_21:
  *a1 = v4;
}

uint64_t sub_23ADC7090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  if (*(_QWORD *)(v4 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker))
  {
    v5 = *a4;
    swift_beginAccess();
    swift_retain();
    sub_23ADE11B8(&v7, v5, &qword_2542DF398);
    swift_endAccess();
    swift_release();
  }
  return 1;
}

id sub_23ADC71D8(unsigned __int8 *__src, void *a2, uint8_t *a3, unsigned __int8 a4, uint64_t a5, char a6, char a7, char a8, char a9)
{
  uint64_t v9;
  uint64_t v12;
  id v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  NSObject *v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  NSObject *v28;
  id v29;
  const char *v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33;
  id result;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  char v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  char v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  char v102;
  id v104;
  char v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  NSObject *v124;
  uint64_t v125;
  __int16 v127;
  __int128 v129;
  unint64_t v130;
  void *v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  uint64_t v139;
  __int16 v140;
  char v141;
  uint64_t v142;
  _OWORD v143[34];
  uint64_t v144;
  _QWORD v145[62];
  _BYTE v146[496];
  uint64_t v147;

  memcpy(v146, __src, sizeof(v146));
  v12 = sub_23B1C6428();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_23AB60D98();
  sub_23B1C63E0();

  v136 = swift_allocObject();
  *(_QWORD *)(v136 + 16) = 0;
  v14 = (uint64_t *)(v136 + 16);
  v15 = *(_QWORD *)(v9 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker);
  if (!v15)
    goto LABEL_9;
  swift_retain();
  v16 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v17 = *(_QWORD *)(v15 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(_QWORD *)(v17 + 16) || (v18 = sub_23AA88CF8(v16), (v19 & 1) == 0))
  {

LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    swift_beginAccess();
    v33 = *(_QWORD *)(v136 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return (id)v33;
  }
  v125 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
  swift_retain();

  swift_bridgeObjectRelease();
  v20 = dispatch_group_create();
  v21 = v20;
  v22 = __src[8];
  v121 = *((_QWORD *)__src + 2);
  v122 = *((_QWORD *)__src + 3);
  v123 = v22;
  v124 = v20;
  if (v22 == 255)
    goto LABEL_13;
  v23 = *(_QWORD *)__src;
  if (v22 == 1)
  {
    dispatch_group_enter(v20);
    v35 = (_QWORD *)swift_allocObject();
    v35[2] = v136;
    v35[3] = v23;
    v35[4] = v21;
    v118 = *(void **)(v125 + 216);
    v36 = (_QWORD *)swift_allocObject();
    v37 = v23;
    v27 = (uint64_t)v36;
    v36[2] = v37;
    v36[3] = v125;
    v36[4] = sub_23ADF1DF8;
    v36[5] = v35;
    v21 = v124;
    swift_retain();
    swift_retain();
    v38 = v124;
    v29 = v118;
    swift_retain();
    v30 = "performWithDiskDiagnosticAttributes(by:block:)";
    v31 = sub_23ACF4428;
    v32 = 46;
  }
  else
  {
    if (__src[8])
      goto LABEL_13;
    dispatch_group_enter(v20);
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v136;
    *(_DWORD *)(v24 + 24) = v23;
    *(_QWORD *)(v24 + 32) = v21;
    v117 = *(void **)(v125 + 216);
    v25 = swift_allocObject();
    v26 = v23;
    v27 = v25;
    *(_DWORD *)(v25 + 16) = v26;
    *(_QWORD *)(v25 + 24) = v125;
    *(_QWORD *)(v25 + 32) = sub_23ADF1E3C;
    *(_QWORD *)(v25 + 40) = v24;
    v21 = v124;
    swift_retain();
    swift_retain();
    v28 = v124;
    v29 = v117;
    swift_retain();
    v30 = "performWithDiskDiagnosticAttributes(for:block:)";
    v31 = sub_23ACF43B0;
    v32 = 47;
  }
  sub_23AA814FC(0, (uint64_t)v30, v32, 2, (uint64_t)v31, v27);
  swift_release();

  swift_release();
LABEL_13:
  sub_23B1C6AD0();
  swift_beginAccess();
  v39 = *v14;
  if (!*v14)
  {
    swift_release();

    goto LABEL_10;
  }
  if (!a2)
  {
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  v145[0] = a2;
  swift_bridgeObjectRetain();
  v40 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    if (a4 == 253)
    {
      v59 = sub_23B1C63E0();
      v61 = v60;
      v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, 1);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v143[0] = v39;
      sub_23AD26808((uint64_t)v62, v59, v61, isUniquelyReferenced_nonNull_native);
      v39 = *(_QWORD *)&v143[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if ((a6 & 1) == 0)
    {
      v64 = sub_23B1C63E0();
      v66 = v65;
      v67 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, a5);
      v68 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v143[0] = v39;
      sub_23AD26808((uint64_t)v67, v64, v66, v68);
      v39 = *(_QWORD *)&v143[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a7 != 70)
    {
      v69 = sub_23B1C63E0();
      v71 = v70;
      v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, qword_23B1DA698[a7]);
      v73 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v143[0] = v39;
      sub_23AD26808((uint64_t)v72, v69, v71, v73);
      v39 = *(_QWORD *)&v143[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v123 != 255)
    {
      v74 = sub_23B1C63E0();
      v76 = v75;
      v77 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v121);
      v78 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v143[0] = v39;
      sub_23AD26808((uint64_t)v77, v74, v76, v78);
      v79 = *(_QWORD *)&v143[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v80 = sub_23B1C63E0();
      v82 = v81;
      v83 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v122);
      v84 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v143[0] = v79;
      sub_23AD26808((uint64_t)v83, v80, v82, v84);
      v39 = *(_QWORD *)&v143[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v85 = *((_OWORD *)__src + 26);
    v143[10] = *((_OWORD *)__src + 25);
    v143[11] = v85;
    *(_QWORD *)&v143[12] = *((_QWORD *)__src + 54);
    v86 = *((_OWORD *)__src + 22);
    v143[6] = *((_OWORD *)__src + 21);
    v143[7] = v86;
    v87 = *((_OWORD *)__src + 24);
    v143[8] = *((_OWORD *)__src + 23);
    v143[9] = v87;
    v88 = *((_OWORD *)__src + 18);
    v143[2] = *((_OWORD *)__src + 17);
    v143[3] = v88;
    v89 = *((_OWORD *)__src + 20);
    v143[4] = *((_OWORD *)__src + 19);
    v143[5] = v89;
    v90 = *((_OWORD *)__src + 16);
    v143[0] = *((_OWORD *)__src + 15);
    v143[1] = v90;
    sub_23AA724E8((uint64_t)v143, (uint64_t)&v144, &qword_2542E7550);
    sub_23AA724E8((uint64_t)&v144, (uint64_t)&v147, &qword_2542E7550);
    if (v147)
    {
      v91 = sub_23B1C63E0();
      v93 = v92;
      v94 = *((_QWORD *)__src + 32);
      v95 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, *((_QWORD *)__src + 31));
      v96 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v137 = v39;
      sub_23AD26808((uint64_t)v95, v91, v93, v96);
      v97 = v137;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v98 = sub_23B1C63E0();
      v100 = v99;
      v101 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v94);
      v102 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v137 = v97;
      sub_23AD26808((uint64_t)v101, v98, v100, v102);
      v39 = v137;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a9 == 2)
    {
      swift_release();

    }
    else
    {
      v104 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, a9 & 1);
      v105 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v137 = v39;
      sub_23AD26808((uint64_t)v104, 0x75735F73695F6264, 0xEB00000000726570, v105);
      v39 = v137;
      swift_release();

      swift_bridgeObjectRelease();
    }
    *v14 = v39;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v114 = sub_23B1C63E0();
  v119 = *(void **)&v143[0];
  v42 = v41;
  result = objc_msgSend(*(id *)&v143[0], sel_domain);
  if (result)
  {
    v43 = (uint64_t)result;
    v44 = swift_isUniquelyReferenced_nonNull_native();
    sub_23AD26808(v43, v114, v42, v44);
    v45 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v115 = sub_23B1C63E0();
    v47 = v46;
    v48 = objc_msgSend(*(id *)&v143[0], sel_code);
    v49 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v48);
    v50 = swift_isUniquelyReferenced_nonNull_native();
    v145[0] = v45;
    sub_23AD26808((uint64_t)v49, v115, v47, v50);
    v39 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v143, v146, 0x1F0uLL);
    nullsub_1(v143);
    sub_23AA724E8((uint64_t)v143, (uint64_t)v145, qword_2542E6E20);
    v51 = v119;
    sub_23ADEF614(v119, (uint64_t)v145, a3, a4, a7, a8, (uint64_t)&v137);
    v129 = v137;
    v52 = v138;
    v53 = v139;
    v127 = v140;
    v54 = v141;
    v116 = v51;
    v120 = v142;

    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DE0);
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_23B1CA760;
    *(_OWORD *)(v55 + 32) = v129;
    *(_QWORD *)(v55 + 48) = v52;
    *(_QWORD *)(v55 + 56) = v53;
    *(_WORD *)(v55 + 64) = v127;
    *(_BYTE *)(v55 + 66) = v54;
    *(_QWORD *)(v55 + 72) = v120;
    v56 = sub_23AAEC514(v55);
    sub_23B1C55C4();
    swift_allocObject();
    sub_23B1C55B8();
    *(_QWORD *)&v137 = v56;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DE8);
    sub_23ADF2054(&qword_2569E5DF0, &qword_2569E5DE8, (uint64_t (*)(void))sub_23ADF1DB0);
    v57 = sub_23B1C55AC();
    if (v135)
    {

      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      v106 = v58;
      v107 = v57;
      swift_bridgeObjectRelease();
      sub_23B1C641C();
      v130 = v106;
      sub_23B1C63F8();
      if (v108)
      {
        v109 = sub_23B1C63E0();
        v111 = v110;
        v112 = sub_23B1C63BC();
        swift_bridgeObjectRelease();
        v113 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v137 = v39;
        sub_23AD26808(v112, v109, v111, v113);
        v39 = v137;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23AAAE53C(v107, v130);
        swift_release();
      }
      else
      {
        swift_release();

        sub_23AAAE53C(v107, v106);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_23ADC7D94(void *a1, char a2, uint64_t a3, int a4, NSObject *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  void (*v25)(id);
  _QWORD *v26;
  void (*v27)(id);
  NSObject *v28;
  uint64_t v29;

  v10 = sub_23B1C5E4C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v14 = a1;
    v15 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v16 = a1;
    v17 = a1;
    v18 = sub_23B1C5E40();
    v19 = sub_23B1C6AA0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v28 = a5;
      v22 = (_QWORD *)v21;
      *(_DWORD *)v20 = 67109378;
      LODWORD(v29) = a4;
      sub_23B1C6CBC();
      *(_WORD *)(v20 + 8) = 2112;
      v23 = a1;
      v24 = _swift_stdlib_bridgeErrorToNSError();
      v29 = v24;
      sub_23B1C6CBC();
      *v22 = v24;
      v25 = (void (*)(id))MEMORY[0x24BEE4BC0];
      sub_23ACF6618(a1, 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
      sub_23ACF6618(a1, 1, v25);
      _os_log_impl(&dword_23AA66000, v18, v19, "Failed gathering diag info for item with did %u: %@", (uint8_t *)v20, 0x12u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      v26 = v22;
      a5 = v28;
      MEMORY[0x23B8614BC](v26, -1, -1);
      MEMORY[0x23B8614BC](v20, -1, -1);

      sub_23ACF6618(a1, 1, v25);
    }
    else
    {
      v27 = (void (*)(id))MEMORY[0x24BEE4BC0];
      sub_23ACF6618(a1, 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
      sub_23ACF6618(a1, 1, v27);

    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    swift_beginAccess();
    *(_QWORD *)(a3 + 16) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  dispatch_group_leave(a5);
}

void sub_23ADC801C(void *a1, char a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  void (*v24)(id);
  os_log_t v25;
  void (*v26)(id);
  uint64_t v27;
  os_log_t v28;
  _QWORD *v29;
  uint64_t v30;

  v10 = sub_23B1C5E4C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v14 = a1;
    v15 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v16 = a1;
    v17 = a1;
    v18 = sub_23B1C5E40();
    v19 = sub_23B1C6AA0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      v30 = a4;
      *(_DWORD *)v20 = 134218242;
      sub_23B1C6CBC();
      *(_WORD *)(v20 + 12) = 2112;
      v28 = v18;
      v21 = a1;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      v30 = v22;
      sub_23B1C6CBC();
      v23 = v29;
      *v29 = v22;
      v24 = (void (*)(id))MEMORY[0x24BEE4BC0];
      sub_23ACF6618(a1, 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
      sub_23ACF6618(a1, 1, v24);
      v25 = v28;
      _os_log_impl(&dword_23AA66000, v28, v19, "Failed gathering diag info for item with fid %llu: %@", (uint8_t *)v20, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v23, -1, -1);
      MEMORY[0x23B8614BC](v20, -1, -1);

      sub_23ACF6618(a1, 1, v24);
    }
    else
    {
      v26 = (void (*)(id))MEMORY[0x24BEE4BC0];
      sub_23ACF6618(a1, 1, (void (*)(id))MEMORY[0x24BEE4BC0]);
      sub_23ACF6618(a1, 1, v26);

    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    swift_beginAccess();
    *(_QWORD *)(a3 + 16) = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  dispatch_group_leave(a5);
}

uint64_t sub_23ADC82AC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  void *v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  if (a2 == -1 || (v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker)) == 0)
  {
    sub_23ADF1C70();
    v17 = swift_allocError();
    *v19 = 0x8000000000000038;
  }
  else
  {
    swift_retain();
    v6 = sub_23AB60D98();
    sub_23B1C63E0();

    v7 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v8 = *(_QWORD *)(v3 + 24);
    if (*(_QWORD *)(v8 + 16))
    {
      v9 = v7;
      swift_bridgeObjectRetain();
      v10 = sub_23AA88CF8(v9);
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD **)(*(_QWORD *)(v8 + 56) + 8 * v10);
        swift_retain();

        swift_bridgeObjectRelease();
        if (a2)
        {
          if (a2 == 1)
            goto LABEL_21;
          v13 = (void *)swift_retain();
          v14 = objc_sync_enter(v13);
          if (a1)
          {
            if (!v14)
            {
              v15 = v12[20];
              swift_retain();
              if (!objc_sync_exit(v12))
              {
                swift_release();
                v16 = *(_BYTE *)(v15 + 48);
                swift_release();
                if ((v16 & 1) != 0)
                {
                  sub_23ADF1C70();
                  v17 = swift_allocError();
                  *v18 = 0x8000000000000038;
LABEL_22:
                  swift_release();
                  swift_release();

                  return v17;
                }
LABEL_21:
                v25 = 0;
                v22 = fpfs_supports_long_paths();
                MEMORY[0x24BDAC7A8](v22);
                sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADF1D14);
                sub_23ADF1C70();
                v17 = swift_allocError();
                *v23 = 0x8000000000000038;
                free(v25);
                goto LABEL_22;
              }
LABEL_25:
              sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v12);
            }
          }
          else if (!v14)
          {
            swift_retain();
            if (!objc_sync_exit(v12))
            {
              swift_release();
              swift_release();
              goto LABEL_21;
            }
            goto LABEL_25;
          }
        }
        else
        {
          v21 = (void *)swift_retain();
          if (!objc_sync_enter(v21))
          {
            swift_retain();
            if (!objc_sync_exit(v12))
            {
              swift_release();
              swift_release();
              GSLibraryResolveDocumentId2();
              goto LABEL_21;
            }
            goto LABEL_25;
          }
        }
        sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v12);
      }

      swift_bridgeObjectRelease();
    }
    sub_23ADF1C70();
    v17 = swift_allocError();
    *v20 = 0x8000000000000038;
    swift_release();

  }
  return v17;
}

uint64_t sub_23ADC8768@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  void *v4;
  uint64_t result;

  v4 = (void *)swift_retain();
  if (objc_sync_enter(v4))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  swift_retain();
  if (objc_sync_exit(a1))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  swift_release();
  swift_release();
  result = fpfs_fsgetpath();
  *a2 = result;
  return result;
}

uint64_t sub_23ADC8844(uint8_t *a1, char a2)
{
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  int v27;
  uint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  _QWORD *v46;
  void *v47;
  int v48;
  uint64_t v49;
  char v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v63[12];
  uint64_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[2];
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;

  v65 = a1;
  v4 = ~a2;
  v5 = sub_23B1C5E4C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = &v63[-v9];
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = &v63[-v12];
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = &v63[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v63[-v17];
  if (!v4)
  {
    v29 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v30 = sub_23B1C5E40();
    v31 = sub_23B1C6AA0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v68[0] = v33;
      *(_DWORD *)v32 = 136315138;
      v67 = sub_23AABEC68(0xD000000000000014, 0x800000023B204D60, v68);
      sub_23B1C6CBC();
      _os_log_impl(&dword_23AA66000, v30, v31, "%s: nil item ID", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v33, -1, -1);
      MEMORY[0x23B8614BC](v32, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v10, v5);
    goto LABEL_14;
  }
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker);
  if (!v19)
  {
    v34 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v35 = sub_23B1C5E40();
    v36 = sub_23B1C6AA0();
    if (os_log_type_enabled(v35, (os_log_type_t)v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v68[0] = v38;
      *(_DWORD *)v37 = 136315138;
      v67 = sub_23AABEC68(0xD000000000000014, 0x800000023B204D60, v68);
      sub_23B1C6CBC();
      _os_log_impl(&dword_23AA66000, v35, (os_log_type_t)v36, "%s: nil fsSnapshotChecker", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v38, -1, -1);
      MEMORY[0x23B8614BC](v37, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v13, v5);
LABEL_14:
    sub_23ADF1C70();
    v39 = swift_allocError();
    *v40 = 0x8000000000000050;
    return v39;
  }
  v64 = v5;
  swift_retain();
  v20 = sub_23AB60D98();
  sub_23B1C63E0();

  v21 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v22 = *(_QWORD *)(v19 + 24);
  if (*(_QWORD *)(v22 + 16))
  {
    v23 = v21;
    swift_bridgeObjectRetain();
    v24 = sub_23AA88CF8(v23);
    if ((v25 & 1) != 0)
    {
      v26 = *(_QWORD **)(*(_QWORD *)(v22 + 56) + 8 * v24);
      swift_retain();

      swift_bridgeObjectRelease();
      if (a2)
      {
        if (a2 == 1)
        {
          v27 = 0;
          v28 = (uint64_t)v65;
          goto LABEL_31;
        }
        v47 = (void *)swift_retain();
        v48 = objc_sync_enter(v47);
        if (v65)
        {
          if (v48)
            goto LABEL_35;
          v49 = v26[20];
          swift_retain();
          if (objc_sync_exit(v26))
            goto LABEL_36;
          swift_release();
          v28 = *(_QWORD *)(v49 + 40);
          v50 = *(_BYTE *)(v49 + 48);
          swift_release();
          if ((v50 & 1) != 0)
          {
            v51 = (id)fpfs_current_or_default_log();
            sub_23B1C5E58();
            v52 = sub_23B1C5E40();
            v53 = sub_23B1C6AA0();
            if (os_log_type_enabled(v52, v53))
            {
              v54 = (uint8_t *)swift_slowAlloc();
              v55 = swift_slowAlloc();
              v68[0] = v55;
              *(_DWORD *)v54 = 136315138;
              v65 = v54 + 4;
              v66 = sub_23AABEC68(0xD000000000000014, 0x800000023B204D60, v68);
              sub_23B1C6CBC();
              _os_log_impl(&dword_23AA66000, v52, v53, "%s: failed to retrieve error for trash, it's inode is unexpectedly nil", v54, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x23B8614BC](v55, -1, -1);
              MEMORY[0x23B8614BC](v54, -1, -1);
            }

            (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v18, v64);
            sub_23ADF1C70();
            v39 = swift_allocError();
            *v56 = 0x8000000000000050;
            swift_release();
            swift_release();

            return v39;
          }
        }
        else
        {
          if (v48)
            goto LABEL_35;
          v57 = v26[20];
          swift_retain();
          if (objc_sync_exit(v26))
            goto LABEL_36;
          swift_release();
          v28 = *(_QWORD *)(v57 + 24);
          swift_release();
        }
        v27 = 0;
      }
      else
      {
        v28 = 0;
        v27 = (int)v65;
      }
LABEL_31:
      v68[0] = v28;
      v68[1] = 0;
      v69 = v27;
      v71 = 0;
      v70 = 0;
      v72 = 0;
      v58 = (void *)swift_retain();
      if (!objc_sync_enter(v58))
      {
        v59 = v26[20];
        swift_retain();
        if (!objc_sync_exit(v26))
        {
          swift_release();
          v60 = *(unsigned int *)(v59 + 16);
          swift_release();
          sub_23AC3AC0C(v68, v60, 2129920, 0, (uint64_t)sub_23ADC9334, 0);
          v39 = v61;
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();

          return v39;
        }
LABEL_36:
        sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v26);
      }
LABEL_35:
      sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v26);
    }

    swift_bridgeObjectRelease();
  }
  v41 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v42 = sub_23B1C5E40();
  v43 = sub_23B1C6AA0();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    v45 = swift_slowAlloc();
    v68[0] = v45;
    *(_DWORD *)v44 = 136315138;
    v66 = sub_23AABEC68(0xD000000000000014, 0x800000023B204D60, v68);
    sub_23B1C6CBC();
    _os_log_impl(&dword_23AA66000, v42, v43, "%s: nil fsTree", v44, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v45, -1, -1);
    MEMORY[0x23B8614BC](v44, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v16, v64);
  sub_23ADF1C70();
  v39 = swift_allocError();
  *v46 = 0x8000000000000050;
  swift_release();

  return v39;
}

uint64_t sub_23ADC9334@<X0>(int a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  _QWORD *v5;
  _QWORD v6[3];
  int v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int v15;
  _QWORD *v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  memset(v6, 0, sizeof(v6));
  v7 = 0;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = a1;
  v16 = v6;
  result = sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ACFEA08);
  if (!v2)
  {
    if ((DWORD1(v13) & 0x40000020) == 0x20)
    {
      sub_23ADF1C70();
      result = swift_allocError();
      *v5 = 0x8000000000000058;
      *a2 = result;
    }
    else
    {
      result = 0;
      *a2 = 0;
    }
  }
  return result;
}

uint64_t sub_23ADC9418(uint64_t a1, uint8_t *a2, char a3)
{
  sub_23B1C54BC();
  sub_23AB6CD48();
  if ((sub_23B1C575C() & 1) != 0)
    return sub_23ADC82AC((uint64_t)a2, a3);
  sub_23B1C5540();
  if ((sub_23B1C575C() & 1) != 0)
    return sub_23ADC8844(a2, a3);
  else
    return 0;
}

uint64_t sub_23ADC94DC(void *a1, uint64_t a2, uint8_t *a3, char a4)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  char v17;
  uint64_t result;
  uint64_t v19;

  v8 = objc_msgSend(a1, sel_domain);
  v9 = sub_23B1C63E0();
  v11 = v10;

  if (sub_23B1C63E0() == v9 && v12 == v11)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    swift_bridgeObjectRelease();
    result = sub_23ADEF42C(a1, a2);
    if (!result)
      return result;
    goto LABEL_14;
  }
  v14 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
    goto LABEL_13;
  if (sub_23B1C63E0() == v9 && v15 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
      return 0;
  }
  result = sub_23ADC9418((uint64_t)a1, a3, a4);
  if (result)
  {
LABEL_14:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
    sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
    if (swift_dynamicCast())
      return v19;
    else
      return 0;
  }
  return result;
}

uint64_t sub_23ADC9678(uint64_t a1, id a2, BOOL a3, uint8_t *a4, unsigned __int8 a5, char a6, char a7)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  BOOL v22;
  BOOL v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  BOOL v29;
  char v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  BOOL v42;
  _QWORD *v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  _QWORD *v46;
  uint64_t result;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  BOOL v57;
  BOOL v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  BOOL v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v67;
  unint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  char v72;
  _QWORD *v73;
  char v74;
  _QWORD *v75;
  _QWORD *v76;
  BOOL v77;
  BOOL v78;
  BOOL v79;
  char v80;
  uint64_t v81;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  int v91;
  char v92;
  _QWORD *v93;
  unsigned int v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD v99[4];
  unsigned __int8 v100;
  unsigned __int8 v101;
  char v102;
  _QWORD *v103;

  sub_23ADEF614(a2, a1, a4, a5, a6, a7, (uint64_t)v99);
  v12 = v99[0];
  v11 = v99[1];
  v81 = v99[2];
  v90 = (_QWORD *)v99[3];
  v94 = v100;
  v84 = (char)v101;
  v91 = v101;
  v80 = v102;
  v93 = v103;
  v13 = (_QWORD *)(v7 + OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetErrors);
  swift_beginAccess();
  v14 = *v13;
  v15 = *(_QWORD *)(*v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v85 = v12;
  v83 = v13;
  if (v15 && (v16 = sub_23AAAF4C4(v12, v11), (v17 & 1) != 0))
  {
    v18 = *(_QWORD **)(*(_QWORD *)(v14 + 56) + 8 * v16);
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v86 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v88 = v18;
  v19 = (_QWORD *)v18[2];
  v20 = v93;
  if (!v19)
  {
LABEL_59:
    swift_bridgeObjectRetain();
    v26 = (uint64_t)v88;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_60;
    goto LABEL_146;
  }
  v9 = 0;
  v21 = v18 + 4;
  v22 = v94 == 2;
  v23 = v90 == (_QWORD *)1 && v94 == 2;
  if (v90)
    v22 = 0;
  v77 = v22;
  v78 = v23;
  while (2)
  {
    v24 = &v21[4 * v9];
    v26 = *v24;
    v25 = (_QWORD *)v24[1];
    v10 = *((unsigned __int8 *)v24 + 16);
    v27 = (_QWORD *)v24[3];
    v92 = *((_BYTE *)v24 + 18);
    switch(*((_BYTE *)v24 + 16))
    {
      case 0xFB:
        if (v94 == 251)
          goto LABEL_29;
        goto LABEL_12;
      case 0xFC:
        if (v94 == 252)
          goto LABEL_29;
        goto LABEL_12;
      case 0xFD:
        if (v94 == 253)
          goto LABEL_29;
        goto LABEL_12;
      case 0xFE:
        if (v94 == 254)
          goto LABEL_29;
        goto LABEL_12;
      case 0xFF:
        if (v94 == 255)
          goto LABEL_29;
        goto LABEL_12;
      default:
        if (v94 > 0xFA)
          goto LABEL_12;
        if (*((_BYTE *)v24 + 16))
        {
          if (v10 == 1)
          {
            if (v94 != 1 || v25 != v90)
              goto LABEL_12;
          }
          else if (v25)
          {
            if (!v78)
              goto LABEL_12;
          }
          else if (!v77)
          {
            goto LABEL_12;
          }
        }
        else if (v94 || (_DWORD)v25 != (_DWORD)v90)
        {
          goto LABEL_12;
        }
LABEL_29:
        LOBYTE(v8) = *((_BYTE *)v24 + 17);
        if (v8 == 70)
        {
          if (v91 != 70)
            goto LABEL_12;
        }
        else if (v91 == 70 || qword_23B1DA698[*((char *)v24 + 17)] != qword_23B1DA698[v84])
        {
          goto LABEL_12;
        }
        v28 = (_QWORD *)v27[2];
        if (v28 != (_QWORD *)v20[2])
          goto LABEL_12;
        if (!v28)
          goto LABEL_64;
        if (v27 != v20)
        {
          v29 = v27[4] == v20[4] && v27[5] == v20[5];
          if (v29 || (v30 = sub_23B1C7388(), v20 = v93, (v30 & 1) != 0))
          {
            v28 = (_QWORD *)((char *)v28 - 1);
            if (!v28)
              goto LABEL_64;
            v13 = 0;
            while (1)
            {
              if (*(_QWORD *)((char *)v13 + (_QWORD)v27 + 48) != *(_QWORD *)((char *)v13 + (_QWORD)v20 + 48)
                || *(_QWORD *)((char *)v13 + (_QWORD)v27 + 56) != *(_QWORD *)((char *)v13 + (_QWORD)v20 + 56))
              {
                v32 = sub_23B1C7388();
                v20 = v93;
                if ((v32 & 1) == 0)
                  break;
              }
              v13 += 2;
              v28 = (_QWORD *)((char *)v28 - 1);
              if (!v28)
                goto LABEL_64;
            }
          }
LABEL_12:
          if ((_QWORD *)++v9 == v19)
            goto LABEL_59;
          continue;
        }
        v27 = v20;
LABEL_64:
        v41 = v26 + 1;
        v42 = __OFADD__(v26, 1);
        swift_bridgeObjectRetain();
        if (v42)
          goto LABEL_148;
        swift_bridgeObjectRetain();
        v28 = v88;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          goto LABEL_149;
LABEL_69:
        if (v9 >= v28[2])
        {
          __break(1u);
          goto LABEL_151;
        }
        v43 = &v28[4 * v9];
        v9 = v43[7];
        v43[4] = v41;
        v43[5] = v25;
        *((_BYTE *)v43 + 48) = v10;
        *((_BYTE *)v43 + 49) = v8;
        *((_BYTE *)v43 + 50) = v92;
        v43[7] = v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v33 = v86;
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v98 = (_QWORD *)*v83;
        *v83 = 0x8000000000000000;
        v45 = (uint64_t)v28;
        v34 = v85;
        sub_23AD26B5C(v45, v85, v86, isUniquelyReferenced_nonNull_native);
        *v83 = v98;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        v37 = v87;
        while (2)
        {
          v46 = (_QWORD *)(v37 + OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetSize);
          swift_beginAccess();
          if (__OFADD__(*v46, 1))
          {
LABEL_145:
            __break(1u);
LABEL_146:
            v26 = (uint64_t)sub_23AF99F50(0, *(_QWORD *)(v26 + 16) + 1, 1, (_QWORD *)v26);
LABEL_60:
            v34 = v85;
            v33 = v86;
            v36 = *(_QWORD *)(v26 + 16);
            v35 = *(_QWORD *)(v26 + 24);
            v37 = v87;
            v38 = v93;
            if (v36 >= v35 >> 1)
            {
              v75 = sub_23AF99F50((_QWORD *)(v35 > 1), v36 + 1, 1, (_QWORD *)v26);
              v38 = v93;
              v26 = (uint64_t)v75;
            }
            *(_QWORD *)(v26 + 16) = v36 + 1;
            v39 = v26 + 32 * v36;
            *(_QWORD *)(v39 + 32) = v81;
            *(_QWORD *)(v39 + 40) = v90;
            *(_BYTE *)(v39 + 48) = v94;
            *(_BYTE *)(v39 + 49) = v91;
            *(_BYTE *)(v39 + 50) = v80;
            *(_QWORD *)(v39 + 56) = v38;
            swift_beginAccess();
            swift_bridgeObjectRetain();
            v40 = swift_isUniquelyReferenced_nonNull_native();
            v97 = (_QWORD *)*v83;
            *v83 = 0x8000000000000000;
            sub_23AD26B5C(v26, v85, v86, v40);
            *v83 = v97;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            continue;
          }
          break;
        }
        ++*v46;
        if (a3)
        {
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        v48 = (_QWORD *)(v37 + OBJC_IVAR____TtC9libfssync4FPCK_pendingSetErrors);
        swift_beginAccess();
        v83 = v48;
        v49 = *v48;
        v50 = *(_QWORD *)(*v48 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v50 && (v51 = sub_23AAAF4C4(v34, v33), (v52 & 1) != 0))
        {
          v53 = *(_QWORD **)(*(_QWORD *)(v49 + 56) + 8 * v51);
          swift_bridgeObjectRetain();
        }
        else
        {
          v53 = (_QWORD *)MEMORY[0x24BEE4AF8];
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v89 = v53;
        v54 = v53[2];
        v55 = v93;
        if (!v54)
        {
LABEL_133:
          v13 = v89;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
LABEL_134:
            v41 = v87;
            v28 = (_QWORD *)v85;
            v69 = v13[2];
            v68 = v13[3];
            v70 = v93;
            if (v69 >= v68 >> 1)
            {
              v76 = sub_23AF99F50((_QWORD *)(v68 > 1), v69 + 1, 1, v13);
              v70 = v93;
              v13 = v76;
            }
            v13[2] = v69 + 1;
            v71 = &v13[4 * v69];
            v71[4] = v81;
            v71[5] = v90;
            *((_BYTE *)v71 + 48) = v94;
            *((_BYTE *)v71 + 49) = v91;
            *((_BYTE *)v71 + 50) = v80;
            v71[7] = v70;
            swift_beginAccess();
            v72 = swift_isUniquelyReferenced_nonNull_native();
            v95 = (_QWORD *)*v83;
            *v83 = 0x8000000000000000;
            sub_23AD26B5C((uint64_t)v13, v85, v86, v72);
            v27 = (_QWORD *)*v83;
            *v83 = v95;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            goto LABEL_142;
          }
LABEL_151:
          v13 = sub_23AF99F50(0, v13[2] + 1, 1, v13);
          goto LABEL_134;
        }
        v8 = 0;
        v56 = v53 + 4;
        v57 = v94 == 2;
        v58 = v90 == (_QWORD *)1 && v94 == 2;
        a3 = v58;
        if (v90)
          v57 = 0;
        v79 = v57;
        while (2)
        {
          v59 = &v56[4 * v8];
          v13 = (_QWORD *)*v59;
          v9 = v59[1];
          v10 = *((unsigned __int8 *)v59 + 16);
          v92 = *((_BYTE *)v59 + 18);
          v60 = (_QWORD *)v59[3];
          switch(*((_BYTE *)v59 + 16))
          {
            case 0xFB:
              if (v94 != 251)
                goto LABEL_85;
              goto LABEL_102;
            case 0xFC:
              if (v94 == 252)
                goto LABEL_102;
              goto LABEL_85;
            case 0xFD:
              if (v94 == 253)
                goto LABEL_102;
              goto LABEL_85;
            case 0xFE:
              if (v94 == 254)
                goto LABEL_102;
              goto LABEL_85;
            case 0xFF:
              if (v94 == 255)
                goto LABEL_102;
              goto LABEL_85;
            default:
              if (v94 > 0xFA)
                goto LABEL_85;
              if (*((_BYTE *)v59 + 16))
              {
                if (v10 == 1)
                {
                  if (v94 != 1 || (_QWORD *)v9 != v90)
                    goto LABEL_85;
                }
                else if (v9)
                {
                  if (!a3)
                    goto LABEL_85;
                }
                else if (!v79)
                {
                  goto LABEL_85;
                }
              }
              else if (v94 || (_DWORD)v9 != (_DWORD)v90)
              {
                goto LABEL_85;
              }
LABEL_102:
              v26 = *((unsigned __int8 *)v59 + 17);
              if ((_DWORD)v26 == 70)
              {
                if (v91 != 70)
                  goto LABEL_85;
              }
              else if (v91 == 70 || qword_23B1DA698[*((char *)v59 + 17)] != qword_23B1DA698[v84])
              {
                goto LABEL_85;
              }
              v61 = v60[2];
              if (v61 != v55[2])
                goto LABEL_85;
              if (!v61)
                goto LABEL_138;
              if (v60 != v55)
              {
                v62 = v60[4] == v55[4] && v60[5] == v55[5];
                if (v62 || (v63 = sub_23B1C7388(), v55 = v93, (v63 & 1) != 0))
                {
                  v64 = v61 - 1;
                  if (v61 == 1)
                    goto LABEL_138;
                  v65 = 0;
                  while (v64)
                  {
                    if (v60[v65 + 6] != v55[v65 + 6] || v60[v65 + 7] != v55[v65 + 7])
                    {
                      v67 = sub_23B1C7388();
                      v55 = v93;
                      if ((v67 & 1) == 0)
                        goto LABEL_85;
                    }
                    v65 += 2;
                    if (!--v64)
                      goto LABEL_138;
                  }
                  __break(1u);
                  goto LABEL_145;
                }
LABEL_85:
                if (++v8 == v54)
                  goto LABEL_133;
                continue;
              }
              v60 = v55;
LABEL_138:
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (__OFADD__(v13, 1))
              {
                __break(1u);
              }
              else
              {
                swift_bridgeObjectRetain();
                v56 = v89;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                  goto LABEL_140;
              }
              v56 = sub_23B0522A8(v56);
LABEL_140:
              if (v8 >= v56[2])
              {
                __break(1u);
                JUMPOUT(0x23ADCA108);
              }
              v73 = &v56[4 * v8];
              v28 = (_QWORD *)v73[7];
              v73[4] = (char *)v13 + 1;
              v73[5] = v9;
              *((_BYTE *)v73 + 48) = v10;
              *((_BYTE *)v73 + 49) = v26;
              *((_BYTE *)v73 + 50) = v92;
              v73[7] = v60;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_beginAccess();
              v74 = swift_isUniquelyReferenced_nonNull_native();
              v96 = (_QWORD *)*v83;
              *v83 = 0x8000000000000000;
              sub_23AD26B5C((uint64_t)v56, v85, v86, v74);
              v27 = (_QWORD *)*v83;
              *v83 = v96;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_endAccess();
              v41 = v87;
LABEL_142:
              v25 = (_QWORD *)(v41 + OBJC_IVAR____TtC9libfssync4FPCK_pendingSetSize);
              result = swift_beginAccess();
              if (__OFADD__(*v25, 1))
              {
                __break(1u);
LABEL_148:
                __break(1u);
LABEL_149:
                v28 = sub_23B0522A8(v28);
                goto LABEL_69;
              }
              ++*v25;
              return result;
          }
        }
    }
  }
}

void sub_23ADCA130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker);
  if (v2)
  {
    v3 = v0;
    swift_retain();
    v4 = sub_23AB60D98();
    sub_23B1C63E0();

    v5 = (void *)sub_23B1C63BC();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v6 = *(_QWORD *)(v2 + 24);
    if (!*(_QWORD *)(v6 + 16))
    {
      swift_release();

      return;
    }
    swift_bridgeObjectRetain();
    v7 = sub_23AA88CF8(v5);
    if ((v8 & 1) == 0)
    {
      swift_release();

      swift_bridgeObjectRelease();
      return;
    }
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    swift_retain();

    swift_bridgeObjectRelease();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v11 = MEMORY[0x24BDAC7A8](Strong);
      v18 = v9;
      v19 = v3;
      (*(void (**)(uint64_t, const char *, uint64_t, uint64_t, void (*)()))(*(_QWORD *)v11 + 424))(1, "reconciliationTableCheck()", 26, 2, sub_23ADF3490);
      v12 = swift_release();
      if (!v1)
      {
        v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase);
        if (!v13)
        {
          swift_release();
          swift_release();
          return;
        }
        MEMORY[0x24BDAC7A8](v12);
        v17[2] = v3;
        v17[3] = v13;
        v18 = v9;
        v14 = swift_retain();
        v15 = (void *)MEMORY[0x23B8601A8](v14);
        sub_23ADDA710(v13, (uint64_t)"reconciliationTableCheck()", 26, 2, 0, (uint64_t)sub_23ADF34C4, (uint64_t)v17, v16);
        objc_autoreleasePoolPop(v15);
        swift_release();
      }
      swift_release();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_23ADCA380(void *__src, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v7;
  _QWORD *v8;
  uint64_t v10;
  int v11;
  BOOL v12;
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void (*v26)(_QWORD *@<X8>);
  _QWORD *v27;
  void (*v28)(_QWORD *@<X8>);
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  void (*v54)(uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _OWORD __dst[31];
  char v64;
  __int128 v65;
  __int128 v66;
  _OWORD v67[6];
  __int128 v68;
  __int128 v69;
  _OWORD v70[4];
  __int128 v71;
  char v72;
  _BYTE v73[96];
  _BYTE v74[56];
  _BYTE v75[15];
  char v76;
  __int128 v77;
  __int128 v78;
  _OWORD v79[4];
  __int128 v80;
  __int128 v81;
  _OWORD v82[4];
  uint64_t v83;
  _BYTE v84[64];
  char v85[8];
  _BYTE v86[56];
  char v87[8];
  uint64_t v88;
  char v89[16];
  unint64_t v90;
  uint64_t v91;
  char v92[16];
  uint64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  unsigned __int8 v97;
  char v98[16];
  _BYTE v99[16];
  char v100[16];
  unint64_t v101;
  char v102[64];
  uint64_t v103;
  char v104;
  char v105[17];
  uint64_t v106;

  memcpy(__dst, __src, sizeof(__dst));
  result = sub_23ADC4054();
  if ((result & 1) == 0)
    return result;
  v82[2] = __dst[25];
  v82[3] = __dst[26];
  v83 = *(_QWORD *)&__dst[27];
  v80 = __dst[21];
  v81 = __dst[22];
  v82[0] = __dst[23];
  v82[1] = __dst[24];
  v79[0] = __dst[17];
  v79[1] = __dst[18];
  v79[2] = __dst[19];
  v79[3] = __dst[20];
  v77 = __dst[15];
  v78 = __dst[16];
  v5 = *((_QWORD *)&__dst[21] + 1);
  v6 = *(_QWORD *)&__dst[22];
  v7 = BYTE8(__dst[22]);
  if (!BYTE8(__dst[22]) && (BYTE8(__dst[21]) & 2) != 0)
  {
LABEL_6:
    v70[2] = __dst[12];
    v70[3] = __dst[13];
    v71 = __dst[14];
    v68 = __dst[8];
    v69 = __dst[9];
    v70[0] = __dst[10];
    v70[1] = __dst[11];
    v67[2] = __dst[4];
    v67[3] = __dst[5];
    v67[4] = __dst[6];
    v67[5] = __dst[7];
    v65 = __dst[0];
    v66 = __dst[1];
    v67[0] = __dst[2];
    v67[1] = __dst[3];
    sub_23AA724E8((uint64_t)&v68 + 9, (uint64_t)&v76, &qword_2542E6CC0);
    sub_23AA724E8((uint64_t)&v76, (uint64_t)&v95, &qword_2542E6CC0);
    v10 = v95 == 6 && v80 == 3;
    sub_23AA724E8((uint64_t)&v65, (uint64_t)v75, (uint64_t *)&unk_2542E7420);
    sub_23AA724E8((uint64_t)v75, (uint64_t)v99, (uint64_t *)&unk_2542E7420);
    v61 = v2;
    if (v99[8] == 255)
    {
      v11 = BYTE8(v68);
    }
    else
    {
      sub_23AA724E8((uint64_t)&v77, (uint64_t)v87, &qword_2542E7550);
      sub_23AA724E8((uint64_t)v87, (uint64_t)&v88, &qword_2542E7550);
      v11 = BYTE8(v68);
      if (BYTE8(v68))
        v12 = 1;
      else
        v12 = v88 == 0;
      if (!v12)
        v10 |= 2uLL;
    }
    v13 = LOBYTE(v70[0]);
    v14 = v80;
    v106 = a2;
    if (LOBYTE(v70[0]) == 2)
    {
      if (v7 == 2)
        goto LABEL_28;
    }
    else if (v7 != 2)
    {
      if (v11 != 1)
        goto LABEL_29;
      goto LABEL_27;
    }
    if (v11 == 1)
      goto LABEL_28;
LABEL_27:
    if (v80 == 1)
LABEL_28:
      v10 |= 4uLL;
LABEL_29:
    v15 = v69;
    sub_23ACFC940((uint64_t)__dst);
    if (qword_2542E7190 != -1)
      swift_once();
    LOBYTE(v60) = BYTE8(v66);
    if ((*((_QWORD *)&v66 + 1) & (qword_2542EDE38 | 0x10)) != 0)
      goto LABEL_34;
    if ((v66 & 0x51) != 0)
      goto LABEL_34;
    if (((unint64_t)v78 & (qword_2542EDE38 | 0x10)) != 0)
      goto LABEL_34;
    if ((BYTE8(v77) & 0x51) != 0)
      goto LABEL_34;
    if (v11 == 1)
      goto LABEL_34;
    if (v14 == 1)
      goto LABEL_34;
    sub_23AA724E8((uint64_t)v67, (uint64_t)&v72, qword_2542E4E88);
    sub_23AA724E8((uint64_t)&v72, (uint64_t)&v104, qword_2542E4E88);
    if (v104 != 3)
      goto LABEL_34;
    sub_23AA724E8((uint64_t)&v76, (uint64_t)&v94, &qword_2542E6CC0);
    if (v94 != 6 || v13 != 3 && (v13 != 4 || v15 & 0xFFFFFFFFFFFFFFFELL | *((_QWORD *)&v15 + 1)))
      goto LABEL_34;
    if (v7 == 3)
      goto LABEL_123;
    if (v7 != 4)
    {
LABEL_34:
      sub_23AAFC3AC((uint64_t)__dst);
    }
    else
    {
      sub_23AAFC3AC((uint64_t)__dst);
      if (!(v5 & 0xFFFFFFFFFFFFFFFELL | v6))
      {
        while (1)
        {
          if (*((_QWORD *)&__dst[28] + 1) == 0x2000000000000000)
            v59 = v10;
          else
            v59 = v10 | 8;
          sub_23AA724E8((uint64_t)v70 + 8, (uint64_t)v74, qword_2542E48C0);
          sub_23AA724E8((uint64_t)v74, (uint64_t)v100, qword_2542E48C0);
          if (v101 >> 60 != 11)
            v59 |= 0x10uLL;
          sub_23AA724E8((uint64_t)v82, (uint64_t)v86, qword_2542E48C0);
          sub_23AA724E8((uint64_t)v86, (uint64_t)v89, qword_2542E48C0);
          v18 = v90 >> 60 == 11 ? v59 : v59 | 0x20;
          v19 = v106;
LABEL_48:
          sub_23AA724E8((uint64_t)v75, (uint64_t)&v96, (uint64_t *)&unk_2542E7420);
          if (v97 != 255)
          {
            sub_23AA9F454(&v96, (uint64_t)v98);
            sub_23AA724E8((uint64_t)&v77, (uint64_t)v85, &qword_2542E7550);
            sub_23AA724E8((uint64_t)v85, (uint64_t)&v91, &qword_2542E7550);
            if (v91)
            {
              sub_23AA724E8((uint64_t)v67 + 8, (uint64_t)v73, (uint64_t *)&unk_2542E4948);
              sub_23AA724E8((uint64_t)v73, (uint64_t)v102, (uint64_t *)&unk_2542E4948);
              if (!(v103 | v18 & 0x40))
                v18 |= 0x40uLL;
              sub_23AA724E8((uint64_t)v79, (uint64_t)v84, &qword_2542DF228);
              sub_23AA724E8((uint64_t)v84, (uint64_t)v92, &qword_2542DF228);
              v20 = (v18 >> 7) & 1;
              if (v93 != 1)
                LODWORD(v20) = 1;
              if (!(_DWORD)v20)
                v18 |= 0x80uLL;
              sub_23AA724E8((uint64_t)&__dst[27] + 8, (uint64_t)&v64, &qword_2542E4690);
              sub_23AA724E8((uint64_t)&v64, (uint64_t)v105, &qword_2542E4690);
              if (v105[0] == 1)
              {
                v21 = (v18 >> 8) & 1;
                if ((v60 & 8) == 0)
                  LODWORD(v21) = 1;
                if ((_DWORD)v21)
                  v22 = v18;
                else
                  v22 = v18 | 0x100;
                v23 = (v22 >> 9) & 1;
                if ((v78 & 8) == 0)
                  LODWORD(v23) = 1;
                if ((_DWORD)v23)
                  v18 = v22;
                else
                  v18 = v22 | 0x200;
              }
            }
          }
          v24 = (BYTE8(v71) & 0xC) == 8 ? v18 | 0x4000 : v18;
          v25 = (*(_BYTE *)(v19 + OBJC_IVAR____TtC9libfssync4FPCK_launchOptions) & 2) != 0
              ? v24 & 0xFFFFFFFFFFFFC3FFLL
              : v24;
          v60 = v25;
          if (!v25)
            break;
          v26 = 0;
          v27 = (_QWORD *)(v19 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredReconciliationTableBrokenInvariantsCounters);
          v28 = sub_23AAED18C;
          v29 = v25;
          while (1)
          {
            v30 = __clz(__rbit64(v29));
            v31 = v29 & ~(1 << v30);
            if (((1 << v30) & v29) == 0)
              v31 = v29;
            if (v30 >= 0x40)
              v10 = 0;
            else
              v10 = 1 << v30;
            if (v30 < 0x40)
              v29 = v31;
            swift_beginAccess();
            sub_23AAB7948((uint64_t)v26);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v33 = (_QWORD *)*v27;
            v62 = (_QWORD *)*v27;
            *v27 = 0x8000000000000000;
            v35 = sub_23ACD61DC(v10);
            v36 = v33[2];
            v37 = (v34 & 1) == 0;
            v38 = v36 + v37;
            if (__OFADD__(v36, v37))
              break;
            v39 = v34;
            if (v33[3] >= v38)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_23B18AFEC();
                v33 = v62;
              }
            }
            else
            {
              sub_23AD18400(v38, isUniquelyReferenced_nonNull_native);
              v33 = v62;
              v40 = sub_23ACD61DC(v10);
              if ((v39 & 1) != (v41 & 1))
                goto LABEL_135;
              v35 = v40;
            }
            *v27 = v33;
            swift_bridgeObjectRelease();
            v42 = (_QWORD *)*v27;
            if ((v39 & 1) != 0)
            {
              swift_bridgeObjectRetain();
            }
            else
            {
              v42[(v35 >> 6) + 8] |= 1 << v35;
              v43 = 8 * v35;
              *(_QWORD *)(v42[6] + v43) = v10;
              *(_QWORD *)(v42[7] + v43) = 0;
              v44 = v42[2];
              v45 = v44 + 1;
              v46 = __OFADD__(v44, 1);
              swift_bridgeObjectRetain();
              if (v46)
                goto LABEL_122;
              v42[2] = v45;
            }
            v47 = v42[7];
            v48 = *(_QWORD *)(v47 + 8 * v35);
            v49 = __OFADD__(v48, 1);
            v50 = v48 + 1;
            if (v49)
              goto LABEL_121;
            *(_QWORD *)(v47 + 8 * v35) = v50;
            swift_endAccess();
            swift_bridgeObjectRelease();
            v26 = sub_23AAED18C;
            if (!v29)
              goto LABEL_99;
          }
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          sub_23AAFC3AC((uint64_t)__dst);
        }
        v28 = 0;
LABEL_99:
        if (sub_23B026C90())
        {
          v51 = v106;
          sub_23ADCD3E4((uint64_t)__dst);
          if (v61)
            return sub_23AAB7948((uint64_t)v28);
          v52 = v60;
          if (!v60)
            return sub_23AAB7948((uint64_t)v28);
        }
        else
        {
          v51 = v106;
          v52 = v60;
          if (!v60)
            return sub_23AAB7948((uint64_t)v28);
        }
        v53 = (_QWORD *)(v51 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInReconciliationTableCheck);
        swift_beginAccess();
        if (!__OFADD__(*v53, 1))
        {
          ++*v53;
          v54 = *(void (**)(uint64_t, uint64_t))(v51 + OBJC_IVAR____TtC9libfssync4FPCK_resultHandler);
          sub_23ACFC940((uint64_t)__dst);
          swift_retain();
          sub_23ADCACE0();
          v56 = v55;
          v58 = v57;
          sub_23AAFC3AC((uint64_t)__dst);
          sub_23B1C6EFC();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          sub_23AF164F0(v52);
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          v54(v56, v58);
          swift_release();
          swift_bridgeObjectRelease();
          return sub_23AAB7948((uint64_t)v28);
        }
        goto LABEL_134;
      }
    }
    v16 = v10 | 0x400;
    if (v13 != 2)
      v16 = v10;
    if (v7 == 2)
      v16 |= 0x800uLL;
    if ((v15 & 0x40100) == 0x100 && v13 == 0)
      v18 = v16 | 0x1000;
    else
      v18 = v16;
    v19 = v106;
    if (!v7 && (v5 & 0x40100) == 0x100)
      v18 |= 0x2000uLL;
    goto LABEL_48;
  }
  v8 = (_QWORD *)(a2 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfReconciliationTableEntries);
  swift_beginAccess();
  if (!__OFADD__(*v8, 1))
  {
    ++*v8;
    goto LABEL_6;
  }
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23ADCACE0()
{
  uint64_t v0;
  int v1;
  void *v2;
  id v3;
  char v4;
  char v5;

  v1 = *(unsigned __int8 *)(v0 + 8);
  if (v1 == 255)
  {
    v2 = *(void **)(v0 + 240);
    if (!v2)
    {
LABEL_5:
      sub_23AA724E8(v0 + 440, (uint64_t)&v4, &qword_2542E4690);
      sub_23AA724E8((uint64_t)&v4, (uint64_t)&v5, &qword_2542E4690);
      __asm { BR              X10 }
    }
  }
  else
  {
    sub_23AA96F18(*(_QWORD *)v0, v1);
    v2 = *(void **)(v0 + 240);
    if (!v2)
      goto LABEL_5;
  }
  v3 = v2;
  sub_23AA7B734();

  goto LABEL_5;
}

uint64_t sub_23ADCADA0()
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 980641340;
}

uint64_t sub_23ADCAEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_23ADCAEF4(a2);
  if (!v2)
    return sub_23ADCB2FC(a2);
  return result;
}

uint64_t sub_23ADCAEF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  void *v20;
  uint64_t v21;
  char v22;
  void *v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t (*v29)(uint64_t, _QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  _OWORD __dst[31];
  _BYTE v39[504];
  _BYTE v40[504];
  _QWORD __src[63];
  _BYTE v42[504];
  int v43;

  v2 = v1;
  v3 = 0;
  v4 = *(_QWORD *)(a1 + 24);
  v29 = *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v4 + 440);
  v31 = v4;
  do
  {
    result = v29(v3, 0);
    if (v2)
      break;
    v8 = result;
    if ((v7 & 1) != 0)
      v9 = -1;
    else
      v9 = v6;
    if (result < 0 || (result & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v10 = sub_23B1C7088();
      swift_bridgeObjectRelease();
      v30 = v9;
      if (v10)
      {
LABEL_10:
        v11 = 0;
        v12 = v8 & 0xC000000000000001;
        v36 = v8 + 32;
        v32 = v8;
        v33 = v10;
        v34 = v8 & 0xC000000000000001;
        do
        {
          if (v12)
          {
            result = MEMORY[0x23B85F860](v11, v8);
            v13 = result;
            v14 = __OFADD__(v11++, 1);
            if (v14)
              goto LABEL_33;
          }
          else
          {
            v13 = *(_QWORD *)(v36 + 8 * v11);
            result = swift_retain();
            v14 = __OFADD__(v11++, 1);
            if (v14)
            {
LABEL_33:
              __break(1u);
              return result;
            }
          }
          v37 = (void *)MEMORY[0x23B8601A8]();
          if (sub_23AE57808() == 3)
          {
            v15 = *(unsigned __int8 *)(v13 + 144);
            v16 = *(void **)(v13 + 136);
            v43 = v15;
            sub_23B07FF48(v16, v15, 1, __src);
            sub_23AA724E8((uint64_t)__src, (uint64_t)v39, (uint64_t *)&unk_2542E4CB0);
            sub_23AA724E8((uint64_t)v39, (uint64_t)v40, (uint64_t *)&unk_2542E4CB0);
            if (sub_23AAFC2A4((uint64_t)v40) == 1)
            {
              *(_QWORD *)&__dst[0] = v16;
              BYTE8(__dst[0]) = v43;
              v17 = (*(uint64_t (**)(_OWORD *, uint64_t))(*(_QWORD *)v4 + 352))(__dst, 70);
              v18 = *(_QWORD *)(v17 + 16);
              if (v18)
              {
                v35 = v16;
                v19 = (void **)(v17 + 88);
                do
                {
                  v20 = *(v19 - 7);
                  v21 = *((unsigned __int8 *)v19 - 48);
                  v22 = *((_BYTE *)v19 - 47);
                  v23 = *v19;
                  v24 = *((unsigned __int8 *)v19 - 40);
                  sub_23AA88218(v20, v21, v22);
                  v25 = v23;
                  swift_bridgeObjectRetain();
                  sub_23AA88218(v20, v21, v22);
                  v26 = v23;
                  swift_bridgeObjectRetain();
                  sub_23AA862DC(v20, v21, v22);

                  swift_bridgeObjectRelease();
                  if (v24 == 1)
                  {
                    sub_23AA88218(v20, v21, v22);
                    v27 = v23;
                    swift_bridgeObjectRetain();
                    sub_23AA862DC(v20, v21, v22);

                    swift_bridgeObjectRelease();
                    if (v23)
                    {
                      swift_bridgeObjectRelease();
                      sub_23AA862DC(v20, v21, v22);
                      v28 = v23;

                      swift_bridgeObjectRelease();
                      goto LABEL_27;
                    }
                  }
                  v19 += 11;
                  sub_23AA862DC(v20, v21, v22);

                  swift_bridgeObjectRelease();
                  --v18;
                }
                while (v18);
                swift_bridgeObjectRelease();
                v23 = 0;
LABEL_27:
                v16 = v35;
                v2 = 0;
                v4 = v31;
                v8 = v32;
              }
              else
              {
                swift_bridgeObjectRelease();
                v23 = 0;
              }
              v10 = v33;
              sub_23ACFC784(__dst);
              sub_23AA724E8((uint64_t)__dst, (uint64_t)v42, qword_2542E6E20);
              sub_23ADC9678((uint64_t)v42, v23, 1, (uint8_t *)v16, v43, 3, 0);

              v12 = v34;
            }
            else
            {
              memcpy(__dst, __src, sizeof(__dst));
              sub_23AAFC3AC((uint64_t)__dst);
            }
          }
          objc_autoreleasePoolPop(v37);
          swift_release();
        }
        while (v11 != v10);
      }
    }
    else
    {
      v10 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      v30 = v9;
      if (v10)
        goto LABEL_10;
    }
    result = swift_bridgeObjectRelease();
    v3 = v30;
  }
  while ((v30 & 0x8000000000000000) == 0);
  return result;
}

uint64_t sub_23ADCB2FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  void *v14;
  uint64_t (*v15)(_OWORD *, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  void *v20;
  uint64_t v21;
  char v22;
  void *v23;
  int v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  void *v33;
  int v34;
  id v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, _QWORD);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  _OWORD v49[12];
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  _OWORD __dst[31];
  _BYTE v74[504];
  _BYTE v75[504];
  _QWORD __src[63];
  _BYTE v77[504];

  v2 = v1;
  v3 = 0;
  v43 = *(_QWORD *)(a1 + 24);
  v40 = *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v43 + 448);
  do
  {
    result = v40(v3, 0);
    if (v2)
      break;
    v7 = result;
    if ((v6 & 1) != 0)
      v8 = -1;
    else
      v8 = v5;
    if (result < 0 || (result & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      v9 = sub_23B1C7088();
      swift_bridgeObjectRelease();
      v41 = v8;
      if (v9)
      {
LABEL_10:
        v10 = 0;
        v11 = v7 & 0xC000000000000001;
        v44 = v7 + 32;
        v45 = v7 & 0xC000000000000001;
        v42 = v7;
        v46 = v9;
        do
        {
          if (v11)
          {
            result = MEMORY[0x23B85F860](v10, v7);
            v12 = result;
            v13 = __OFADD__(v10++, 1);
            if (v13)
              goto LABEL_43;
          }
          else
          {
            v12 = *(_QWORD *)(v44 + 8 * v10);
            result = swift_retain();
            v13 = __OFADD__(v10++, 1);
            if (v13)
            {
LABEL_43:
              __break(1u);
              return result;
            }
          }
          v48 = (void *)MEMORY[0x23B8601A8]();
          if (sub_23AE58240() == 3)
          {
            v14 = *(void **)(v12 + 136);
            v47 = v14;
            sub_23B07FF48(v14, 256, 1, __src);
            sub_23AA724E8((uint64_t)__src, (uint64_t)v74, (uint64_t *)&unk_2542E4CB0);
            sub_23AA724E8((uint64_t)v74, (uint64_t)v75, (uint64_t *)&unk_2542E4CB0);
            if (sub_23AAFC2A4((uint64_t)v75) == 1)
            {

              *(_QWORD *)&__dst[0] = v47;
              v15 = *(uint64_t (**)(_OWORD *, uint64_t))(*(_QWORD *)v43 + 344);
              v16 = v47;
              v17 = v15(__dst, 70);

              v18 = *(_QWORD *)(v17 + 16);
              if (v18)
              {
                v19 = (void **)(v17 + 88);
                do
                {
                  v20 = *(v19 - 7);
                  v21 = *((unsigned __int8 *)v19 - 48);
                  v22 = *((_BYTE *)v19 - 47);
                  v23 = *v19;
                  v24 = *((unsigned __int8 *)v19 - 40);
                  sub_23AB5692C(v20, v21, v22);
                  v25 = v23;
                  swift_bridgeObjectRetain();
                  sub_23AB5692C(v20, v21, v22);
                  v26 = v23;
                  swift_bridgeObjectRetain();
                  sub_23AB7C6B4(v20, v21, v22);

                  swift_bridgeObjectRelease();
                  if (v24 == 1)
                  {
                    sub_23AB5692C(v20, v21, v22);
                    v27 = v23;
                    swift_bridgeObjectRetain();
                    sub_23AB7C6B4(v20, v21, v22);

                    swift_bridgeObjectRelease();
                    if (v23)
                    {
                      swift_bridgeObjectRelease();
                      sub_23AB7C6B4(v20, v21, v22);
                      v28 = v23;

                      swift_bridgeObjectRelease();
                      goto LABEL_36;
                    }
                  }
                  v19 += 11;
                  sub_23AB7C6B4(v20, v21, v22);

                  swift_bridgeObjectRelease();
                  --v18;
                }
                while (v18);
                swift_bridgeObjectRelease();
                v23 = 0;
LABEL_36:
                v2 = 0;
                v7 = v42;
                v9 = v46;
              }
              else
              {
                swift_bridgeObjectRelease();
                v23 = 0;
              }
              v11 = v45;
              sub_23ACFC784(__dst);
              sub_23AA724E8((uint64_t)__dst, (uint64_t)v77, qword_2542E6E20);
              sub_23ADC9678((uint64_t)v77, v23, 1, 0, 0xFCu, 3, 1);

            }
            else
            {
              memcpy(__dst, __src, sizeof(__dst));
              v29 = *(_QWORD *)&__dst[28];
              v30 = *(_QWORD *)(*(_QWORD *)&__dst[28] + 16);
              if (v30)
              {
                sub_23AAFC2BC((uint64_t)&__dst[15]);
                sub_23ACF4048((uint64_t)__dst);
                *(_QWORD *)&v49[0] = MEMORY[0x24BEE4AF8];
                swift_bridgeObjectRetain();
                sub_23ADACE74(0, v30, 0);
                v31 = *(_QWORD *)&v49[0];
                v32 = (unsigned __int8 *)(v29 + 41);
                do
                {
                  v33 = *(void **)(v32 - 9);
                  v34 = *v32;
                  if (v34 == 1)
                  {
                    v35 = v33;
                    v36 = 0;
                  }
                  else
                  {
                    v36 = *(v32 - 1);
                  }
                  *(_QWORD *)&v49[0] = v31;
                  v38 = *(_QWORD *)(v31 + 16);
                  v37 = *(_QWORD *)(v31 + 24);
                  if (v38 >= v37 >> 1)
                  {
                    sub_23ADACE74(v37 > 1, v38 + 1, 1);
                    v31 = *(_QWORD *)&v49[0];
                  }
                  v32 += 16;
                  *(_QWORD *)(v31 + 16) = v38 + 1;
                  v39 = v31 + 16 * v38;
                  *(_QWORD *)(v39 + 32) = v33;
                  *(_BYTE *)(v39 + 40) = v36;
                  *(_BYTE *)(v39 + 41) = v34 ^ 1;
                  --v30;
                }
                while (v30);
                swift_bridgeObjectRelease();
                sub_23AAFC3AC((uint64_t)__dst);

                v7 = v42;
                v11 = v45;
                v9 = v46;
              }
              else
              {
                sub_23AAFC2BC((uint64_t)&__dst[15]);
                sub_23ACF4048((uint64_t)__dst);
                sub_23AAFC3AC((uint64_t)__dst);

                v31 = MEMORY[0x24BEE4AF8];
                v9 = v46;
              }
              v49[10] = __dst[25];
              v49[11] = __dst[26];
              v50 = *(_QWORD *)&__dst[27];
              v49[6] = __dst[21];
              v49[7] = __dst[22];
              v49[8] = __dst[23];
              v49[9] = __dst[24];
              v49[2] = __dst[17];
              v49[3] = __dst[18];
              v49[4] = __dst[19];
              v49[5] = __dst[20];
              v49[0] = __dst[15];
              v49[1] = __dst[16];
              v63 = __dst[12];
              v64 = __dst[13];
              v65 = __dst[14];
              v59 = __dst[8];
              v60 = __dst[9];
              v61 = __dst[10];
              v62 = __dst[11];
              v55 = __dst[4];
              v56 = __dst[5];
              v57 = __dst[6];
              v58 = __dst[7];
              v51 = __dst[0];
              v52 = __dst[1];
              v53 = __dst[2];
              v54 = __dst[3];
              v66 = BYTE8(__dst[27]);
              v67 = v31;
              v68 = *((_QWORD *)&__dst[28] + 1);
              v69 = *(_QWORD *)&__dst[29];
              v70 = 0;
              v71 = __dst[30];
              v72 = *((_QWORD *)&__dst[30] + 1);
              sub_23AAFCF50((uint64_t)v49);
            }
          }
          objc_autoreleasePoolPop(v48);
          swift_release();
        }
        while (v10 != v9);
      }
    }
    else
    {
      v9 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
      v41 = v8;
      if (v9)
        goto LABEL_10;
    }
    result = swift_bridgeObjectRelease();
    v3 = v41;
  }
  while ((v41 & 0x8000000000000000) == 0);
  return result;
}

uint64_t sub_23ADCB918(uint64_t a1, void *a2, uint64_t a3, uint8_t *a4, unsigned __int8 a5, char a6, char a7, char a8)
{
  uint64_t v8;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  id v31;
  void *v32;
  unint64_t v33;
  uint64_t v34;
  objc_class *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  id v41;
  void *v42;
  unint64_t v43;
  id v44;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v48[12];
  uint64_t v49;
  _BYTE v50[8];
  _QWORD v51[3];

  v15 = *(_OWORD *)(a1 + 416);
  v48[10] = *(_OWORD *)(a1 + 400);
  v48[11] = v15;
  v49 = *(_QWORD *)(a1 + 432);
  v16 = *(_OWORD *)(a1 + 352);
  v48[6] = *(_OWORD *)(a1 + 336);
  v48[7] = v16;
  v17 = *(_OWORD *)(a1 + 384);
  v48[8] = *(_OWORD *)(a1 + 368);
  v48[9] = v17;
  v18 = *(_OWORD *)(a1 + 288);
  v48[2] = *(_OWORD *)(a1 + 272);
  v48[3] = v18;
  v19 = *(_OWORD *)(a1 + 320);
  v48[4] = *(_OWORD *)(a1 + 304);
  v48[5] = v19;
  v20 = *(_OWORD *)(a1 + 256);
  v48[0] = *(_OWORD *)(a1 + 240);
  v48[1] = v20;
  sub_23AA724E8((uint64_t)v48, (uint64_t)v50, &qword_2542E7550);
  sub_23AA724E8((uint64_t)v50, (uint64_t)v51, &qword_2542E7550);
  if (!v51[0])
  {
    v21 = (uint64_t *)(v8 + OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetItemPayload);
    swift_beginAccess();
    v36 = *v21;
    swift_bridgeObjectRetain();
    v37 = sub_23ADEF094((_OWORD *)a1, a2, a3, 0, v36);
    result = swift_bridgeObjectRelease();
    if (!v37)
      return result;
    result = (uint64_t)sub_23ADC71D8((unsigned __int8 *)a1, a2, a4, a5, a3, 0, a6, a7, 1);
    v25 = result;
    if (!result)
      return result;
    if ((a8 & 1) == 0)
      goto LABEL_24;
    v26 = sub_23B1C63E0();
    v28 = v38;
    if (*(_QWORD *)(v25 + 16))
    {
      swift_bridgeObjectRetain();
      v39 = sub_23AAAF4C4(v26, v28);
      if ((v40 & 1) != 0)
      {
        v41 = *(id *)(*(_QWORD *)(v25 + 56) + 8 * v39);
        swift_bridgeObjectRelease();
        objc_opt_self();
        v42 = (void *)swift_dynamicCastObjCClass();
        if (v42)
        {
          v43 = (unint64_t)objc_msgSend(v42, sel_integerValue);

          v34 = v43 | 0x80000000;
LABEL_22:
          v35 = (objc_class *)MEMORY[0x24BDD16E0];
          goto LABEL_23;
        }

      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v34 = 0x80000000;
    goto LABEL_22;
  }
  v21 = (uint64_t *)(v8 + OBJC_IVAR____TtC9libfssync4FPCK_pendingSetItemPayload);
  swift_beginAccess();
  v22 = *v21;
  swift_bridgeObjectRetain();
  v23 = sub_23ADEF094((_OWORD *)a1, a2, a3, 0, v22);
  result = swift_bridgeObjectRelease();
  if (v23)
  {
    result = (uint64_t)sub_23ADC71D8((unsigned __int8 *)a1, a2, a4, a5, a3, 0, a6, a7, 0);
    v25 = result;
    if (result)
    {
      if ((a8 & 1) != 0)
      {
        v26 = sub_23B1C63E0();
        v28 = v27;
        if (*(_QWORD *)(v25 + 16))
        {
          swift_bridgeObjectRetain();
          v29 = sub_23AAAF4C4(v26, v28);
          if ((v30 & 1) != 0)
          {
            v31 = *(id *)(*(_QWORD *)(v25 + 56) + 8 * v29);
            swift_bridgeObjectRelease();
            objc_opt_self();
            v32 = (void *)swift_dynamicCastObjCClass();
            if (v32)
            {
              v33 = (unint64_t)objc_msgSend(v32, sel_integerValue);

              v34 = v33 | 0x80000000;
              v35 = (objc_class *)MEMORY[0x24BDD16E0];
LABEL_23:
              v44 = objc_msgSend(objc_allocWithZone(v35), sel_initWithInteger_, v34);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              sub_23AD26808((uint64_t)v44, v26, v28, isUniquelyReferenced_nonNull_native);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_24;
            }

          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        v34 = 0x80000000;
        v35 = (objc_class *)MEMORY[0x24BDD16E0];
        goto LABEL_23;
      }
LABEL_24:
      *v21 = v25;
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_23ADCBCC0(uint64_t a1)
{
  char *v1;
  void (**v2)(_QWORD, _QWORD);
  char *v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (**v9)(_QWORD, _QWORD);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (**v13)(char *, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  __n128 v24;
  __n128 v25;
  __n128 v26;
  uint64_t v27;
  void (**v28)(_QWORD, _QWORD);
  __n128 v29;
  __n128 v30;
  __n128 v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  char *v46;
  uint64_t v47;
  unsigned __int8 v48;
  __n128 *v49;
  uint64_t v50;
  void (*v51)(_OWORD *__return_ptr, __n128 **);
  uint64_t v52;
  void (*v53)(_OWORD *__return_ptr, __n128 **, uint64_t);
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _OWORD *v59;
  __n128 v60;
  __n128 v61;
  __n128 v62;
  __n128 v63;
  __n128 v64;
  __n128 v65;
  int v66;
  __n128 *v67;
  uint64_t v68;
  void (*v69)(_OWORD *__return_ptr, __n128 **);
  uint64_t v70;
  void (*v71)(_OWORD *__return_ptr, __n128 **, uint64_t);
  unint64_t *v72;
  uint64_t v73;
  unint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  void (*v81)(_OWORD *__return_ptr, __n128 **, uint64_t);
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __n128 *v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t *v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t *v94;
  id v95;
  uint64_t v96;
  __n128 *v97;
  unint64_t v98;
  __n128 *v99;
  void (**v100)(char *, uint64_t);
  char *v101;
  uint64_t v102;
  unint64_t v103;
  void (**v104)(_QWORD, _QWORD);
  _BYTE v105[496];
  _BYTE v106[496];
  uint64_t v107;
  _BYTE v108[504];
  __n128 *v109;
  unsigned __int16 v110;
  __n128 *v111;
  __int16 v112;
  _OWORD v113[31];
  uint64_t v114;
  _BYTE v115[504];
  id v116[3];
  uint64_t v117;
  _QWORD v118[63];
  _QWORD v119[63];
  _QWORD v120[63];
  _QWORD v121[63];
  _BYTE v122[496];
  unint64_t v123;
  _BYTE v124[496];
  uint64_t v125;
  _BYTE v126[496];
  uint64_t v127;
  _BYTE v128[496];
  uint64_t v129;
  __n128 v130;
  __n128 v131;
  __n128 v132;
  __n128 v133;
  __n128 v134;
  __n128 v135;
  _OWORD v136[6];
  unint64_t v137;
  __n128 v138;
  id v139;
  _BYTE v140[32];
  __n128 v141;
  __n128 v142;
  __n128 v143;
  __n128 v144;
  __n128 v145;
  __n128 v146;
  __n128 v147;
  __n128 v148;
  __n128 v149;
  __n128 v150;
  unint64_t v151;
  _BYTE v152[24];
  __n128 v153;
  __n128 v154;
  __n128 v155;
  __n128 v156;
  __n128 v157;
  _OWORD v158[6];
  unint64_t v159;
  __n128 v160;
  __n128 v161;
  __n128 v162;
  __n128 v163;
  __n128 v164;
  __n128 v165;
  __n128 v166;
  __n128 v167;
  __n128 v168;
  __n128 v169;
  __n128 v170;
  __n128 v171;
  __n128 v172;
  __n128 v173;
  __n128 v174;
  __n128 v175;
  __n128 v176;
  _BYTE v177[16];
  _BYTE v178[496];
  _BYTE v179[496];
  _OWORD v180[31];
  _BYTE v181[496];
  _OWORD v182[31];
  __n128 *v183;
  unsigned __int8 v184;
  __n128 *v185;
  unsigned __int8 v186;
  _BYTE v187[16];
  __n128 v188;
  char v189;
  __n128 v190;
  char v191;
  uint64_t v192;
  void *v193;
  __n128 v194;
  char v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  _BYTE v211[16];
  _BYTE v212[32];
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  uint64_t v223;
  _BYTE v224[24];
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  _OWORD v230[6];
  uint64_t v231;
  __n128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  _BYTE v248[16];
  _BYTE v249[32];
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  uint64_t v260;
  _BYTE v261[24];
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  _OWORD v267[6];
  uint64_t v268;
  __n128 v269;
  __n128 v270;
  char v271;
  uint64_t v272;
  _BYTE v273[16];
  __n128 v274;
  char v275;
  uint64_t v276;
  _BYTE v277[16];
  _BYTE v278[496];
  uint64_t v279;

  v104 = v2;
  v3 = v1;
  v4 = (__n128 *)MEMORY[0x24BDAC7A8](a1);
  v102 = v5;
  memcpy(v278, v4, sizeof(v278));
  v6 = sub_23B1C545C();
  MEMORY[0x24BDAC7A8](v6);
  v103 = (unint64_t)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C5474();
  v9 = *(void (***)(_QWORD, _QWORD))(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23B1C5E4C();
  v13 = *(void (***)(char *, uint64_t))(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F10);
  MEMORY[0x24BDAC7A8](v16);
  v100 = (void (**)(char *, uint64_t))((char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DD0);
  MEMORY[0x24BDAC7A8](v18);
  v101 = v3;
  v279 = *(_QWORD *)&v3[OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase];
  if (v279)
  {
    v103 = (unint64_t)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    v20 = v4[13];
    v173 = v4[12];
    v174 = v20;
    v175 = v4[14];
    v21 = v4[9];
    v169 = v4[8];
    v170 = v21;
    v22 = v4[11];
    v171 = v4[10];
    v172 = v22;
    v23 = v4[5];
    v165 = v4[4];
    v166 = v23;
    v24 = v4[7];
    v167 = v4[6];
    v168 = v24;
    v25 = v4[1];
    v161 = *v4;
    v162 = v25;
    v26 = v4[3];
    v163 = v4[2];
    v164 = v26;
    sub_23AA724E8((uint64_t)&v161, (uint64_t)v177, (uint64_t *)&unk_2542E7420);
    sub_23AA724E8((uint64_t)v177, (uint64_t)v187, (uint64_t *)&unk_2542E7420);
    v27 = v279;
    v28 = v104;
    if (v187[8] == 255)
    {
      v29 = v4[26];
      v158[4] = v4[25];
      v158[5] = v29;
      v159 = v4[27].n128_u64[0];
      v30 = v4[22];
      v158[0] = v4[21];
      v158[1] = v30;
      v31 = v4[24];
      v158[2] = v4[23];
      v158[3] = v31;
      v32 = v4[18];
      v154 = v4[17];
      v155 = v32;
      v33 = v4[20];
      v156 = v4[19];
      v157 = v33;
      v34 = v4[16];
      *(__n128 *)&v152[8] = v4[15];
      v153 = v34;
      sub_23ADF1BC0((__n128 *)((char *)v158 + 8), &v160);
      sub_23ADF1BC0(&v160, &v190);
      if (!v191 && (v190.n128_u8[0] & 2) != 0)
        goto LABEL_17;
    }
    v35 = v4[23];
    v148 = v4[24];
    v36 = v4[26];
    v149 = v4[25];
    v150 = v36;
    v37 = v4[19];
    v144 = v4[20];
    v38 = v4[22];
    v145 = v4[21];
    v146 = v38;
    v147 = v35;
    v39 = v4[15];
    *(__n128 *)&v140[16] = v4[16];
    v40 = v4[18];
    v141 = v4[17];
    v142 = v40;
    v143 = v37;
    v151 = v4[27].n128_u64[0];
    *(__n128 *)v140 = v39;
    sub_23AA724E8((uint64_t)v140, (uint64_t)v152, &qword_2542E7550);
    sub_23AA724E8((uint64_t)v152, (uint64_t)&v192, &qword_2542E7550);
    if (!v192 && ((v140[8] & 0x10) != 0 || (v162.n128_u8[0] & 0x10) != 0))
      goto LABEL_17;
    if ((v146.n128_u8[8] == 3 || v146.n128_u8[8] == 4 && !(v145.n128_u64[1] & 0xFFFFFFFFFFFFFFFELL | v146.n128_u64[0]))
      && *(_OWORD *)&v140[8] == 0
      && (v171.n128_u8[0] == 3 || v171.n128_u8[0] == 4 && !(v170.n128_u64[0] & 0xFFFFFFFFFFFFFFFELL | v170.n128_u64[1]))
      && *(_OWORD *)&v162 == 0
      && v163.n128_u8[0])
    {
LABEL_17:
      swift_retain();
    }
    else
    {
      v41 = swift_retain();
      sub_23AA9F938(v41, 0, 0, 1, (uint64_t)v116);
      if (v28)
      {
LABEL_11:
        swift_release();
        return;
      }
      v54 = v116[0];
      if (v116[0])
      {
        v55 = v116[0];
        sub_23AAA05A4((uint64_t)v116);
LABEL_52:
        swift_release();
        memcpy(v113, v278, sizeof(v113));
        v114 = (uint64_t)v54;
        nullsub_1(v113);
        sub_23ACFC940((uint64_t)v4);
LABEL_97:
        v75 = v113;
LABEL_98:
        sub_23AA724E8((uint64_t)v75, (uint64_t)v115, &qword_2569E5DC8);
        sub_23AA724E8((uint64_t)v115, v102, &qword_2569E5DC8);
        return;
      }
      sub_23AA724E8((uint64_t)&v117, (uint64_t)&v139, &qword_2542E7700);
      sub_23ADF1BFC(&v139);
      sub_23AAA05A4((uint64_t)v116);
      sub_23AA724E8((uint64_t)&v139, (uint64_t)&v193, &qword_2542E7700);
      v54 = v193;
      if (v193)
        goto LABEL_52;
    }
    sub_23ADF1BC0(&v170, &v176);
    sub_23ADF1BC0(&v176, &v188);
    if (v189 != 2)
    {
      if (v189 == 1)
      {
LABEL_95:
        sub_23ADF1C70();
        v73 = swift_allocError();
        v74 = 0x8000000000000068;
        goto LABEL_96;
      }
      if (!v189)
      {
        v98 = v188.n128_u64[0];
        if ((v188.n128_u8[0] & 2) != 0)
        {
          sub_23AA724E8((uint64_t)v177, (uint64_t)&v185, (uint64_t *)&unk_2542E7420);
          v48 = v186;
          if (v186 == 255)
          {
            __break(1u);
LABEL_133:
            __break(1u);
            return;
          }
          v49 = v185;
          if (v186 != 2 || v185)
          {
            v97 = (__n128 *)((char *)v230 + 8);
            do
            {
              v50 = *(_QWORD *)(v27 + 32);
              v109 = v49;
              LOBYTE(v110) = v48;
              v51 = *(void (**)(_OWORD *__return_ptr, __n128 **))(*(_QWORD *)v50 + 280);
              swift_retain();
              v51(v113, &v109);
              if (v28)
                goto LABEL_103;
              swift_release();
              if (BYTE8(v113[0]) == 255)
                goto LABEL_59;
              v52 = *(_QWORD *)(v279 + 16);
              v99 = *(__n128 **)&v113[0];
              v111 = *(__n128 **)&v113[0];
              LODWORD(v104) = BYTE8(v113[0]);
              v112 = BYTE8(v113[0]);
              v53 = *(void (**)(_OWORD *__return_ptr, __n128 **, uint64_t))(*(_QWORD *)v52 + 168);
              swift_retain();
              v53(v113, &v111, 1);
              sub_23AA724E8((uint64_t)v113, (uint64_t)v108, (uint64_t *)&unk_2542E4CB0);
              sub_23AA724E8((uint64_t)v108, (uint64_t)&v109, (uint64_t *)&unk_2542E4CB0);
              LODWORD(v53) = sub_23AAFC2A4((uint64_t)&v109);
              swift_release();
              if ((_DWORD)v53 == 1)
              {
LABEL_59:
                v27 = v279;
                break;
              }
              memcpy(v182, v113, sizeof(v182));
              v207 = v113[11];
              v208 = v113[12];
              v209 = v113[13];
              v210 = v113[14];
              v203 = v113[7];
              v204 = v113[8];
              v205 = v113[9];
              v206 = v113[10];
              v199 = v113[3];
              v200 = v113[4];
              v201 = v113[5];
              v202 = v113[6];
              v196 = v113[0];
              v197 = v113[1];
              v198 = v113[2];
              sub_23AA724E8((uint64_t)&v196, (uint64_t)v211, (uint64_t *)&unk_2542E7420);
              sub_23AA724E8((uint64_t)v211, (uint64_t)v277, (uint64_t *)&unk_2542E7420);
              v27 = v279;
              if (v277[8] == 255)
              {
                v230[3] = v182[24];
                v230[4] = v182[25];
                v230[5] = v182[26];
                v229 = v182[20];
                v230[0] = v182[21];
                v230[1] = v182[22];
                v230[2] = v182[23];
                v225 = v182[16];
                v226 = v182[17];
                v227 = v182[18];
                v228 = v182[19];
                v231 = *(_QWORD *)&v182[27];
                *(_OWORD *)&v224[8] = v182[15];
                sub_23ADF1BC0(v97, &v232);
                sub_23ADF1BC0(&v232, &v274);
                if (!v275 && (v274.n128_u8[0] & 2) != 0)
                  goto LABEL_61;
              }
              v220 = v182[24];
              v221 = v182[25];
              v222 = v182[26];
              v216 = v182[20];
              v217 = v182[21];
              v218 = v182[22];
              v219 = v182[23];
              *(_OWORD *)&v212[16] = v182[16];
              v213 = v182[17];
              v214 = v182[18];
              v215 = v182[19];
              v223 = *(_QWORD *)&v182[27];
              *(_OWORD *)v212 = v182[15];
              sub_23AA724E8((uint64_t)v212, (uint64_t)v224, &qword_2542E7550);
              sub_23AA724E8((uint64_t)v224, (uint64_t)&v276, &qword_2542E7550);
              if (!v276 && ((v212[8] & 0x10) != 0 || (v197 & 0x10) != 0))
              {
LABEL_61:
                sub_23AAFC3AC((uint64_t)v182);
                break;
              }
              if ((BYTE8(v218) == 3
                 || BYTE8(v218) == 4 && !(*((_QWORD *)&v217 + 1) & 0xFFFFFFFFFFFFFFFELL | (unint64_t)v218))
                && *(_OWORD *)&v212[8] == 0
                && (v206 == 3
                 || v206 == 4 && !(v205 & 0xFFFFFFFFFFFFFFFELL | *((_QWORD *)&v205 + 1)))
                && v197 == 0
                && (_BYTE)v198)
              {
                sub_23AAFC3AC((uint64_t)v182);
                v27 = v279;
                break;
              }
              sub_23ADCBCC0(v118, v182);
              sub_23AA724E8((uint64_t)v118, (uint64_t)v128, &qword_2569E5DC8);
              if (sub_23AAFC2A4((uint64_t)v128) != 1)
              {
                memcpy(v105, v128, sizeof(v105));
                v56 = v129;
                sub_23ADF1C70();
                v57 = swift_allocError();
                *v58 = v56;
                v59 = v182;
                goto LABEL_126;
              }
              sub_23AAFC3AC((uint64_t)v182);
              v48 = v104;
              v49 = v99;
            }
            while ((_DWORD)v104 != 2 || v99);
          }
        }
        if ((v98 & 0x400) != 0)
        {
          v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
          v77 = v103;
          (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v103, 1, 1, v76);
          sub_23B015BD0((uint64_t)v113);
          if (v28)
          {
            swift_release();
            sub_23AA8A05C(v77, &qword_2569E5DD0);
            return;
          }
          sub_23AA8A05C(v77, &qword_2569E5DD0);
          v78 = WORD4(v113[0]);
          if (HIBYTE(WORD4(v113[0])) > 0xFEu)
            goto LABEL_111;
          v79 = *(void **)&v113[0];
          v80 = *(_QWORD *)(v27 + 16);
          v111 = *(__n128 **)&v113[0];
          v112 = WORD4(v113[0]) & 0x1FF;
          v81 = *(void (**)(_OWORD *__return_ptr, __n128 **, uint64_t))(*(_QWORD *)v80 + 168);
          sub_23ADF1CE4(*(id *)&v113[0], WORD4(v113[0]));
          swift_retain();
          v81(v113, &v111, 1);
          sub_23AA724E8((uint64_t)v113, (uint64_t)v108, (uint64_t *)&unk_2542E4CB0);
          sub_23AA724E8((uint64_t)v108, (uint64_t)&v109, (uint64_t *)&unk_2542E4CB0);
          if (sub_23AAFC2A4((uint64_t)&v109) == 1)
          {
            swift_release();
            sub_23ADF1CFC(v79, v78);
            sub_23ADF1CFC(v79, v78);
            swift_release();
LABEL_121:
            sub_23ADF1C24((uint64_t)v106);
LABEL_128:
            v75 = v106;
            goto LABEL_98;
          }
          swift_release();
          memcpy(v181, v113, sizeof(v181));
          sub_23ADCBCC0(v119, v181);
          v27 = v279;
          sub_23AA724E8((uint64_t)v119, (uint64_t)v126, &qword_2569E5DC8);
          if (sub_23AAFC2A4((uint64_t)v126) != 1)
          {
            memcpy(v105, v126, sizeof(v105));
            v90 = v127 | 0x4000000000000000;
            sub_23ADF1C70();
            v57 = swift_allocError();
            *v91 = v90;
            sub_23ADF1CFC(v79, v78);
            sub_23ADF1CFC(v79, v78);
            v59 = v181;
LABEL_126:
            sub_23AAFC3AC((uint64_t)v59);
            swift_release();
            memcpy(v106, v105, sizeof(v106));
            v107 = v57;
            goto LABEL_127;
          }
          sub_23AAFC3AC((uint64_t)v181);
          sub_23ADF1CFC(v79, v78);
          sub_23ADF1CFC(v79, v78);
        }
      }
      v60 = v4[23];
      v136[3] = v4[24];
      v61 = v4[26];
      v136[4] = v4[25];
      v136[5] = v61;
      v62 = v4[19];
      v135 = v4[20];
      v63 = v4[22];
      v136[0] = v4[21];
      v136[1] = v63;
      v136[2] = v60;
      v64 = v4[15];
      v131 = v4[16];
      v65 = v4[18];
      v132 = v4[17];
      v133 = v65;
      v134 = v62;
      v137 = v4[27].n128_u64[0];
      v130 = v64;
      sub_23ADF1BC0((__n128 *)((char *)v136 + 8), &v138);
      sub_23ADF1BC0(&v138, &v194);
      if (v195 != 2)
      {
        if (v195 != 1)
        {
          if (!v195)
          {
            v103 = v194.n128_u64[0];
            if ((v194.n128_u8[0] & 2) == 0)
            {
LABEL_110:
              if ((v103 & 0x400) == 0)
                goto LABEL_111;
              sub_23ACFC940((uint64_t)v4);
              sub_23AFFD9BC((uint64_t)v113);
              sub_23AAFC3AC((uint64_t)v4);
              memcpy(v179, v113, sizeof(v179));
              v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
              v85 = (uint64_t)v100;
              (*(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v100, 1, 1, v84);
              swift_retain();
              sub_23AE4F234();
              swift_release();
              sub_23B00D7D8((uint64_t)&v109);
              if (v28)
              {
                swift_release();
                swift_release();
                sub_23AA8A05C(v85, (uint64_t *)&unk_2569E5F10);
                sub_23AAFCF50((uint64_t)v179);
                return;
              }
              swift_release();
              sub_23AA8A05C(v85, (uint64_t *)&unk_2569E5F10);
              sub_23AAFCF50((uint64_t)v179);
              v86 = v110;
              if (HIBYTE(v110) > 0xFEu)
                goto LABEL_111;
              v87 = v109;
              v88 = *(_QWORD *)(v27 + 16);
              if ((v110 & 0x100) != 0)
              {
                swift_retain();
                sub_23ADF1CB4(v87, v86);
                v89 = v86;
              }
              else
              {
                sub_23ADF1CCC(v109, v110);
                sub_23ADF1CCC(v87, v86);
                swift_retain();
                v89 = 0;
              }
              v111 = v87;
              LOBYTE(v112) = v89;
              HIBYTE(v112) = (v86 & 0x100) == 0;
              (*(void (**)(_OWORD *__return_ptr, __n128 **, uint64_t))(*(_QWORD *)v88 + 168))(v113, &v111, 1);
              sub_23AA724E8((uint64_t)v113, (uint64_t)v108, (uint64_t *)&unk_2542E4CB0);
              sub_23AA724E8((uint64_t)v108, (uint64_t)&v109, (uint64_t *)&unk_2542E4CB0);
              if (sub_23AAFC2A4((uint64_t)&v109) == 1)
              {
                swift_release();
                sub_23ADF1CB4(v87, v86);
                swift_release();
                sub_23ADF1CB4(v87, v86);
                sub_23ADF1CB4(v87, v86);
                goto LABEL_121;
              }
              swift_release();
              sub_23ADF1CB4(v87, v86);
              memcpy(v178, v113, sizeof(v178));
              sub_23ADCBCC0(v121, v178);
              sub_23AA724E8((uint64_t)v121, (uint64_t)v122, &qword_2569E5DC8);
              if (sub_23AAFC2A4((uint64_t)v122) == 1)
              {
                swift_release();
                sub_23AAFC3AC((uint64_t)v178);
                sub_23ADF1CB4(v87, v86);
                sub_23ADF1CB4(v87, v86);
                goto LABEL_112;
              }
              memcpy(v105, v122, sizeof(v105));
              v92 = v123;
              sub_23ADF1C70();
              v93 = swift_allocError();
              *v94 = v92 | 0x4000000000000000;
              v95 = (id)v92;
              sub_23ADF1CB4(v87, v86);
              sub_23ADF1CB4(v87, v86);

              sub_23AAFC3AC((uint64_t)v178);
              swift_release();
              memcpy(v106, v105, sizeof(v106));
              v107 = v93;
LABEL_127:
              nullsub_1(v106);
              goto LABEL_128;
            }
            sub_23AA724E8((uint64_t)v177, (uint64_t)&v183, (uint64_t *)&unk_2542E7420);
            LOBYTE(v66) = v184;
            if (v184 != 255)
            {
              v67 = v183;
              if (v184 != 2 || v183)
              {
                v99 = (__n128 *)((char *)v267 + 8);
                while (1)
                {
                  v68 = *(_QWORD *)(v27 + 32);
                  v109 = v67;
                  LOBYTE(v110) = v66;
                  v69 = *(void (**)(_OWORD *__return_ptr, __n128 **))(*(_QWORD *)v68 + 280);
                  swift_retain();
                  v69(v113, &v109);
                  if (v28)
                    break;
                  swift_release();
                  v66 = BYTE8(v113[0]);
                  if (BYTE8(v113[0]) == 255)
                    goto LABEL_106;
                  v70 = *(_QWORD *)(v279 + 16);
                  v104 = *(void (***)(_QWORD, _QWORD))&v113[0];
                  v111 = *(__n128 **)&v113[0];
                  v112 = BYTE8(v113[0]);
                  v71 = *(void (**)(_OWORD *__return_ptr, __n128 **, uint64_t))(*(_QWORD *)v70 + 168);
                  swift_retain();
                  v71(v113, &v111, 1);
                  sub_23AA724E8((uint64_t)v113, (uint64_t)v108, (uint64_t *)&unk_2542E4CB0);
                  sub_23AA724E8((uint64_t)v108, (uint64_t)&v109, (uint64_t *)&unk_2542E4CB0);
                  LODWORD(v71) = sub_23AAFC2A4((uint64_t)&v109);
                  swift_release();
                  if ((_DWORD)v71 == 1)
                  {
LABEL_106:
                    v27 = v279;
                    goto LABEL_110;
                  }
                  memcpy(v180, v113, sizeof(v180));
                  v244 = v113[11];
                  v245 = v113[12];
                  v246 = v113[13];
                  v247 = v113[14];
                  v240 = v113[7];
                  v241 = v113[8];
                  v242 = v113[9];
                  v243 = v113[10];
                  v236 = v113[3];
                  v237 = v113[4];
                  v238 = v113[5];
                  v239 = v113[6];
                  v233 = v113[0];
                  v234 = v113[1];
                  v235 = v113[2];
                  sub_23AA724E8((uint64_t)&v233, (uint64_t)v248, (uint64_t *)&unk_2542E7420);
                  sub_23AA724E8((uint64_t)v248, (uint64_t)v273, (uint64_t *)&unk_2542E7420);
                  if (v273[8] == 255)
                  {
                    v267[4] = v180[25];
                    v267[5] = v180[26];
                    v268 = *(_QWORD *)&v180[27];
                    v267[0] = v180[21];
                    v267[1] = v180[22];
                    v267[2] = v180[23];
                    v267[3] = v180[24];
                    v263 = v180[17];
                    v264 = v180[18];
                    v265 = v180[19];
                    v266 = v180[20];
                    *(_OWORD *)&v261[8] = v180[15];
                    v262 = v180[16];
                    sub_23ADF1BC0(v99, &v269);
                    sub_23ADF1BC0(&v269, &v270);
                    if (!v271 && (v270.n128_u8[0] & 2) != 0)
                      goto LABEL_93;
                  }
                  v258 = v180[25];
                  v259 = v180[26];
                  v260 = *(_QWORD *)&v180[27];
                  v254 = v180[21];
                  v255 = v180[22];
                  v256 = v180[23];
                  v257 = v180[24];
                  v250 = v180[17];
                  v251 = v180[18];
                  v252 = v180[19];
                  v253 = v180[20];
                  *(_OWORD *)v249 = v180[15];
                  *(_OWORD *)&v249[16] = v180[16];
                  sub_23AA724E8((uint64_t)v249, (uint64_t)v261, &qword_2542E7550);
                  sub_23AA724E8((uint64_t)v261, (uint64_t)&v272, &qword_2542E7550);
                  v27 = v279;
                  if (!v272 && ((v249[8] & 0x10) != 0 || (v234 & 0x10) != 0))
                  {
                    sub_23AAFC3AC((uint64_t)v180);
                    goto LABEL_110;
                  }
                  if ((BYTE8(v255) == 3
                     || BYTE8(v255) == 4 && !(*((_QWORD *)&v254 + 1) & 0xFFFFFFFFFFFFFFFELL | (unint64_t)v255))
                    && *(_OWORD *)&v249[8] == 0
                    && (v243 == 3
                     || v243 == 4 && !(v242 & 0xFFFFFFFFFFFFFFFELL | *((_QWORD *)&v242 + 1)))
                    && v234 == 0
                    && (_BYTE)v235)
                  {
LABEL_93:
                    sub_23AAFC3AC((uint64_t)v180);
                    v27 = v279;
                    goto LABEL_110;
                  }
                  sub_23ADCBCC0(v120, v180);
                  sub_23AA724E8((uint64_t)v120, (uint64_t)v124, &qword_2569E5DC8);
                  if (sub_23AAFC2A4((uint64_t)v124) != 1)
                  {
                    memcpy(v105, v124, sizeof(v105));
                    v82 = v125;
                    sub_23ADF1C70();
                    v57 = swift_allocError();
                    *v83 = v82;
                    v59 = v180;
                    goto LABEL_126;
                  }
                  sub_23AAFC3AC((uint64_t)v180);
                  v67 = (__n128 *)v104;
                  if (v66 == 2 && !v104)
                    goto LABEL_110;
                }
LABEL_103:
                swift_release();
                goto LABEL_11;
              }
              goto LABEL_110;
            }
            goto LABEL_133;
          }
LABEL_111:
          swift_release();
LABEL_112:
          sub_23ADF1C24((uint64_t)v113);
          goto LABEL_97;
        }
        goto LABEL_95;
      }
    }
    sub_23ADF1C70();
    v73 = swift_allocError();
    v74 = 0x8000000000000060;
LABEL_96:
    *v72 = v74;
    sub_23ACFC940((uint64_t)v4);
    swift_release();
    memcpy(v113, v278, sizeof(v113));
    v114 = v73;
    nullsub_1(v113);
    goto LABEL_97;
  }
  v100 = v13;
  v101 = v11;
  v102 = v12;
  v104 = v9;
  v279 = v8;
  v42 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v43 = sub_23B1C5E40();
  v44 = sub_23B1C6AA0();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    _os_log_impl(&dword_23AA66000, v43, v44, "Update for pending set, db is not a sql db", v45, 2u);
    MEMORY[0x23B8614BC](v45, -1, -1);
  }

  v100[1](v15, v102);
  sub_23B1C536C();
  sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
  sub_23AA7E38C((unint64_t *)&qword_2569E8150, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
  v46 = v101;
  v47 = v279;
  sub_23B1C5864();
  sub_23B1C5354();
  ((void (**)(char *, uint64_t))v104)[1](v46, v47);
  swift_willThrow();
}

uint64_t sub_23ADCD3E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char v11;
  unsigned __int8 v12;
  id v13;
  char v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v20;
  id v21;
  _QWORD v22[2];
  char v23;
  char v24;
  id v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;

  v3 = v1;
  v5 = sub_23B1C5E4C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase))
  {
    v9 = swift_retain();
    sub_23AA9F938(v9, 0, 0, 1, (uint64_t)v22);
    if (!v2)
    {
      v10 = (void *)v22[0];
      if (v22[0])
      {
        v29 = v22[1];
        v11 = v23;
        v12 = -2;
        v13 = (id)v22[0];
        v14 = v24;
      }
      else
      {
        v13 = v25;
        if (v25)
        {
          v29 = v26;
          v11 = v27;
          v14 = v28;
          v20 = v25;
          v12 = -3;
        }
        else
        {
          v29 = 0;
          v12 = -5;
          v11 = 70;
          v14 = 2;
        }
      }
      v21 = v10;
      sub_23ADCD5E8(a1, v13, v29, 0, v12, v11, v14, 2u);

      sub_23AAA05A4((uint64_t)v22);
    }
    return swift_release();
  }
  else
  {
    v15 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v16 = sub_23B1C5E40();
    v17 = sub_23B1C6AA0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_23AA66000, v16, v17, "Update for pending set, db is not a sql db", v18, 2u);
      MEMORY[0x23B8614BC](v18, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void sub_23ADCD5E8(uint64_t a1, void *a2, uint64_t a3, uint8_t *a4, unsigned __int8 a5, char a6, char a7, unsigned __int8 a8)
{
  uint64_t v8;
  int v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  BOOL v23;
  uint64_t v24;
  void *v25;
  _BOOL8 v26;
  id v27;
  _QWORD v28[63];
  _BYTE v29[504];
  _BYTE v30[504];
  _OWORD v31[12];
  uint64_t v32;
  _BYTE v33[8];
  _BYTE v34[496];
  _BYTE __src[496];
  uint64_t v36;
  _BYTE __dst[496];
  uint64_t v38;

  v16 = a8;
  memcpy(__dst, (const void *)a1, sizeof(__dst));
  if ((*(_BYTE *)(v8 + OBJC_IVAR____TtC9libfssync4FPCK_launchOptions) & 0x80) == 0)
  {
    if (!a2)
    {
      v24 = v38;
      sub_23ADCBCC0(a1);
      if (v24)
        return;
      v38 = 0;
      sub_23AA724E8((uint64_t)v29, (uint64_t)v30, &qword_2569E5DC8);
      if (sub_23AAFC2A4((uint64_t)v30) != 1)
      {
        memcpy(v28, v30, sizeof(v28));
        memcpy(__src, v30, sizeof(__src));
        v25 = (void *)v28[62];
        v26 = *(_QWORD *)(a1 + 240) == 0;
        sub_23ADF190C((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ADF1724);
        v27 = v25;
        sub_23ADCD5E8(__src, v25, 0, 0, 251, 70, 2, v26);

        sub_23AAFC3AC((uint64_t)v28);
        sub_23ADF190C((uint64_t)v29, (voidsub_23ADF19D8);
        return;
      }
    }
    sub_23ADCB918(a1, a2, a3, a4, a5, a6, a7, v16 != 2);
  }
  if (v16 == 2)
  {
    v17 = *(_OWORD *)(a1 + 416);
    v31[10] = *(_OWORD *)(a1 + 400);
    v31[11] = v17;
    v32 = *(_QWORD *)(a1 + 432);
    v18 = *(_OWORD *)(a1 + 352);
    v31[6] = *(_OWORD *)(a1 + 336);
    v31[7] = v18;
    v19 = *(_OWORD *)(a1 + 384);
    v31[8] = *(_OWORD *)(a1 + 368);
    v31[9] = v19;
    v20 = *(_OWORD *)(a1 + 288);
    v31[2] = *(_OWORD *)(a1 + 272);
    v31[3] = v20;
    v21 = *(_OWORD *)(a1 + 320);
    v31[4] = *(_OWORD *)(a1 + 304);
    v31[5] = v21;
    v22 = *(_OWORD *)(a1 + 256);
    v31[0] = *(_OWORD *)(a1 + 240);
    v31[1] = v22;
    sub_23AA724E8((uint64_t)v31, (uint64_t)v33, &qword_2542E7550);
    sub_23AA724E8((uint64_t)v33, (uint64_t)&v36, &qword_2542E7550);
    v23 = v36 == 0;
  }
  else
  {
    v23 = v16 & 1;
  }
  memcpy(v28, __dst, 0x1F0uLL);
  nullsub_1(v28);
  sub_23AA724E8((uint64_t)v28, (uint64_t)v34, qword_2542E6E20);
  sub_23ADC9678((uint64_t)v34, a2, v23, a4, a5, a6, a7);
}

void sub_23ADCD848()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  id v6;
  void *v7;
  _QWORD *v8;
  char *v9;
  id v10;

  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker];
  if (v2)
  {
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker];
    if (v3)
    {
      v4 = (_QWORD *)swift_allocObject();
      v4[2] = v0;
      v4[3] = v2;
      v4[4] = v3;
      swift_retain_n();
      swift_retain_n();
      v5 = v0;
      sub_23AF4289C(0, (uint64_t)sub_23ADF3198, v4);
      swift_release();
      if (v1)
      {
        swift_release();
      }
      else
      {
        v6 = sub_23AB60D98();
        sub_23B1C63E0();

        v7 = (void *)sub_23B1C63BC();
        swift_bridgeObjectRelease();
        v8 = (_QWORD *)swift_allocObject();
        v8[2] = v3;
        v8[3] = v7;
        v8[4] = v5;
        swift_retain();
        v9 = v5;
        v10 = v7;
        sub_23B081808(v10, (uint64_t)sub_23ADF31E8, (uint64_t)v8);
        swift_release();
        swift_release();

      }
      swift_release();
    }
  }
}

void sub_23ADCD9C8(unsigned __int8 *a1, char a2, void *a3, unint64_t a4, unint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  void (*v42)(_QWORD *@<X8>);
  void (*v43)(_QWORD *@<X8>);
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char *v79;
  char *v80;
  unsigned __int8 *v81;
  void *v82;
  void (*v83)(uint64_t, uint64_t);
  _QWORD *v84;
  _QWORD v85[31];
  unsigned __int8 v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[496];
  _BYTE v90[496];
  _BYTE v91[496];
  _BYTE v92[24];
  uint64_t v93;
  char v94;
  char v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  _BYTE v106[256];
  unint64_t v107;

  v83 = a6;
  v82 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  MEMORY[0x24BDAC7A8](v10);
  v79 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v76 = *(_QWORD *)(v12 - 8);
  v77 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v80 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v75 - v19;
  v107 = a4;
  if ((sub_23ADC4054() & 1) == 0)
    return;
  v81 = a1;
  sub_23AA8EFC8((uint64_t)a1, (uint64_t)v20, (uint64_t *)&unk_2542E6B00);
  if ((a2 & 1) != 0)
  {
    sub_23AA8A05C((uint64_t)v20, (uint64_t *)&unk_2542E6B00);
LABEL_5:
    a5 = 0;
    v78 = 1;
    v22 = (uint64_t)v81;
    goto LABEL_8;
  }
  swift_beginAccess();
  v21 = sub_23ADF8180(*((_QWORD *)v20 + 4), *(_QWORD *)(a5 + 40));
  sub_23AA8A05C((uint64_t)v20, (uint64_t *)&unk_2542E6B00);
  if ((v21 & 1) != 0)
    goto LABEL_5;
  v23 = (uint64_t *)(v107 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck);
  swift_beginAccess();
  v24 = *v23 + 1;
  v22 = (uint64_t)v81;
  if (__OFADD__(*v23, 1))
  {
    __break(1u);
LABEL_105:
    if (v78)
    {
LABEL_17:
      swift_release();
      v83 = 0;
      goto LABEL_41;
    }
    v28 = 0;
    LODWORD(v82) = 1;
    goto LABEL_10;
  }
  v78 = 0;
  *v23 = v24;
  a5 = 0x20000000;
LABEL_8:
  sub_23AA8EFC8(v22, (uint64_t)v18, (uint64_t *)&unk_2542E6B00);
  v25 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v26 = swift_allocObject();
  v27 = v82;
  v16 = (uint64_t)v83;
  *(_QWORD *)(v26 + 16) = v83;
  *(_QWORD *)(v26 + 24) = v27;
  sub_23AA724E8((uint64_t)v18, v26 + v25, (uint64_t *)&unk_2542E6B00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF360);
  v20 = (char *)swift_allocObject();
  sub_23ADF29D8((uint64_t)v90);
  sub_23AA724E8((uint64_t)v90, (uint64_t)(v20 + 32), &qword_2542DF240);
  *((_QWORD *)v20 + 2) = sub_23ADF3430;
  *((_QWORD *)v20 + 3) = v26;
  swift_retain();
  a1 = v27;
  sub_23ADD6ED0((uint64_t)v89);
  sub_23AA724E8((uint64_t)v89, (uint64_t)v91, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v91, (uint64_t)v92, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v92) != 1)
  {
    sub_23AA724E8((uint64_t)v91, (uint64_t)&v87, qword_2542E6E20);
    sub_23ACFC940((uint64_t)&v87);
    v29 = v107;
    if (qword_2542E7190 == -1)
      goto LABEL_12;
    goto LABEL_101;
  }
  LODWORD(v82) = 0;
  v28 = 1;
LABEL_10:
  v29 = v107;
  while (1)
  {
    v34 = (uint64_t *)(v29 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck);
    swift_beginAccess();
    v35 = *v34 + 1;
    if (!__OFADD__(*v34, 1))
      break;
    __break(1u);
LABEL_101:
    swift_once();
LABEL_12:
    isUniquelyReferenced_nonNull_native = (uint64_t)v79;
    v28 = (uint64_t)v80;
    if ((v93 & (qword_2542EDE38 | 0x10)) != 0
      || (v92[16] & 0x51) != 0
      || (v101 & (qword_2542EDE38 | 0x10)) != 0
      || (v100 & 0x51) != 0
      || v95 == 1
      || v102 == 1
      || v94 != 3
      || v96 != 6
      || v99 != 3 && (v99 != 4 || v97 & 0xFFFFFFFFFFFFFFFELL | v98))
    {
LABEL_15:
      sub_23ADF2D34((uint64_t)v91, (voidsub_23AAAEC3C);
LABEL_16:
      sub_23ADF2D34((uint64_t)v91, (voidsub_23AAAEC3C);
      if (v78)
        goto LABEL_17;
      goto LABEL_35;
    }
    if (v105 == 3)
    {
      sub_23ADF2D34((uint64_t)v91, (voidsub_23AAAEC3C);
    }
    else
    {
      if (v105 != 4)
        goto LABEL_15;
      v31 = v103 & 0xFFFFFFFFFFFFFFFELL | v104;
      sub_23ADF2D34((uint64_t)v91, (voidsub_23AAAEC3C);
      if (v31)
        goto LABEL_16;
    }
    v32 = v84;
    sub_23B081240(*(_QWORD *)v81, v81[8], a1, isUniquelyReferenced_nonNull_native);
    v33 = v32;
    if (v32)
    {
      sub_23ADF2D34((uint64_t)v91, (voidsub_23AAAEC3C);
      swift_release();
      return;
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(isUniquelyReferenced_nonNull_native, 1, v77) == 1)
    {
      sub_23ADF2D34((uint64_t)v91, (voidsub_23AAAEC3C);
      sub_23AA8A05C(isUniquelyReferenced_nonNull_native, &qword_2542E4770);
      v84 = 0;
      if ((v78 & 1) != 0)
        goto LABEL_17;
LABEL_35:
      v28 = 0;
      LODWORD(v82) = 1;
    }
    else
    {
LABEL_98:
      sub_23AA724E8(isUniquelyReferenced_nonNull_native, v28, (uint64_t *)&unk_2542E4760);
      v73 = *(id *)v28;
      sub_23B081AE4((uint64_t)v73);
      if (v33)
      {
        sub_23AA8A05C(v28, (uint64_t *)&unk_2542E4760);
        sub_23ADF2D34((uint64_t)v91, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
        swift_release();

        return;
      }
      v84 = 0;

      sub_23AA724E8((uint64_t)v85, (uint64_t)v106, &qword_2542E5050);
      v74 = v28;
      v28 = sub_23ADD13E8((uint64_t)v81, v28, (uint64_t)v106, *(unsigned __int8 *)(v16 + 32), v86);
      sub_23ADF2D34((uint64_t)v91, (voidsub_23AAAEC3C);
      sub_23AAA5B2C((uint64_t)v85);
      sub_23AA8A05C(v74, (uint64_t *)&unk_2542E4760);
      if (!v28)
        goto LABEL_105;
      LODWORD(v82) = 0;
    }
  }
  v80 = v20;
  *v34 = v35;
  v83 = *(void (**)(uint64_t, uint64_t))(v29 + OBJC_IVAR____TtC9libfssync4FPCK_resultHandler);
  v36 = *((_QWORD *)v81 + 2);
  v37 = v81[24];
  swift_retain();
  v87 = sub_23AA96F18(v36, v37);
  v88 = v38;
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  v39 = (void *)sub_23B1C63BC();
  v40 = objc_msgSend(v39, sel_fp_obfuscatedFilename);

  v29 = sub_23B1C63E0();
  v16 = v41;

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AF162C0(a5);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AF164D4(v28);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v83(v87, v88);
  swift_release();
  swift_bridgeObjectRelease();
  if ((v78 & 1) == 0)
  {
    v43 = 0;
    v20 = (char *)(v107 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskVsFSSnapshotDiffCounters);
    v83 = (void (*)(uint64_t, uint64_t))sub_23AAED18C;
    while (1)
    {
      v44 = __clz(__rbit64(a5));
      v45 = a5 & ~(1 << v44);
      if (((1 << v44) & a5) == 0)
        v45 = a5;
      if (v44 >= 0x40)
        a1 = 0;
      else
        a1 = (unsigned __int8 *)(1 << v44);
      if (v44 < 0x40)
        a5 = v45;
      swift_beginAccess();
      sub_23AAB7948((uint64_t)v43);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v85[0] = *(_QWORD *)v20;
      v33 = (_QWORD *)v85[0];
      *(_QWORD *)v20 = 0x8000000000000000;
      v29 = sub_23ACD61E8((uint64_t)a1);
      v47 = v33[2];
      v48 = (v46 & 1) == 0;
      v49 = v47 + v48;
      if (__OFADD__(v47, v48))
      {
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      v16 = v46;
      if (v33[3] >= v49)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23B18AFD4();
          v33 = (_QWORD *)v85[0];
        }
      }
      else
      {
        sub_23AD183D8(v49, isUniquelyReferenced_nonNull_native);
        v33 = (_QWORD *)v85[0];
        v50 = sub_23ACD61E8((uint64_t)a1);
        if ((v16 & 1) != (v51 & 1))
        {
          sub_23B1C7418();
          __break(1u);
LABEL_108:
          sub_23B1C7418();
          __break(1u);
          return;
        }
        v29 = v50;
      }
      *(_QWORD *)v20 = v33;
      swift_bridgeObjectRelease();
      v33 = *(_QWORD **)v20;
      if ((v16 & 1) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v33[(v29 >> 6) + 8] |= 1 << v29;
        v52 = 8 * v29;
        *(_QWORD *)(v33[6] + v52) = a1;
        *(_QWORD *)(v33[7] + v52) = 0;
        v53 = v33[2];
        v54 = v53 + 1;
        isUniquelyReferenced_nonNull_native = __OFADD__(v53, 1);
        swift_bridgeObjectRetain();
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          goto LABEL_96;
        v33[2] = v54;
      }
      v55 = v33[7];
      v56 = *(_QWORD *)(v55 + 8 * v29);
      v57 = __OFADD__(v56, 1);
      v58 = v56 + 1;
      if (v57)
        goto LABEL_93;
      *(_QWORD *)(v55 + 8 * v29) = v58;
      swift_endAccess();
      swift_bridgeObjectRelease();
      v43 = sub_23AAED18C;
      if (!a5)
        goto LABEL_39;
    }
  }
  v83 = 0;
LABEL_39:
  if ((v82 & 1) == 0)
  {
    v42 = 0;
    v20 = (char *)(v107 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredFSSnapshotVsFPSnapshotDiffCounters);
    v16 = 1;
    while (1)
    {
      v59 = __clz(__rbit64(v28));
      v60 = v28 & ~(1 << v59);
      if (((1 << v59) & v28) == 0)
        v60 = v28;
      if (v59 >= 0x40)
        a1 = 0;
      else
        a1 = (unsigned __int8 *)(1 << v59);
      if (v59 < 0x40)
        v28 = v60;
      swift_beginAccess();
      sub_23AAB7948((uint64_t)v42);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v85[0] = *(_QWORD *)v20;
      v33 = (_QWORD *)v85[0];
      *(_QWORD *)v20 = 0x8000000000000000;
      a5 = sub_23ACD61E8((uint64_t)a1);
      v62 = v33[2];
      v63 = (v61 & 1) == 0;
      v64 = v62 + v63;
      if (__OFADD__(v62, v63))
        break;
      v29 = v61;
      if (v33[3] >= v64)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23B18B004();
          v33 = (_QWORD *)v85[0];
        }
      }
      else
      {
        sub_23AD18600(v64, isUniquelyReferenced_nonNull_native);
        v33 = (_QWORD *)v85[0];
        v65 = sub_23ACD61E8((uint64_t)a1);
        if ((v29 & 1) != (v66 & 1))
          goto LABEL_108;
        a5 = v65;
      }
      *(_QWORD *)v20 = v33;
      swift_bridgeObjectRelease();
      v33 = *(_QWORD **)v20;
      if ((v29 & 1) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v33[(a5 >> 6) + 8] |= 1 << a5;
        v67 = 8 * a5;
        *(_QWORD *)(v33[6] + v67) = a1;
        *(_QWORD *)(v33[7] + v67) = 0;
        v68 = v33[2];
        v69 = v68 + 1;
        isUniquelyReferenced_nonNull_native = __OFADD__(v68, 1);
        swift_bridgeObjectRetain();
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          goto LABEL_97;
        v33[2] = v69;
      }
      v70 = v33[7];
      v71 = *(_QWORD *)(v70 + 8 * a5);
      v57 = __OFADD__(v71, 1);
      v72 = v71 + 1;
      if (v57)
        goto LABEL_95;
      *(_QWORD *)(v70 + 8 * a5) = v72;
      swift_endAccess();
      swift_bridgeObjectRelease();
      v42 = sub_23AAED18C;
      if (!v28)
      {
        swift_release();
        goto LABEL_90;
      }
    }
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  swift_release();
LABEL_41:
  v42 = 0;
LABEL_90:
  sub_23AAB7948((uint64_t)v83);
  sub_23AAB7948((uint64_t)v42);
}

uint64_t sub_23ADCE528@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  id v9;
  char v10;
  int v11;
  _OWORD *v12;
  _OWORD v14[31];
  _BYTE v15[504];
  _BYTE v16[552];
  _OWORD v17[31];

  v8 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v8);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 24) + 16))
    goto LABEL_7;
  v9 = a2;
  swift_bridgeObjectRetain();
  sub_23AA88CF8(v9);
  if ((v10 & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_7:
    sub_23ACFC784(v17);
    v12 = v17;
    return sub_23AA724E8((uint64_t)v12, a4, qword_2542E6E20);
  }
  swift_retain();

  swift_bridgeObjectRelease();
  sub_23B07FF48(*(void **)a3, *(unsigned __int8 *)(a3 + 8), 0, v17);
  swift_release();
  sub_23AA724E8((uint64_t)v17, (uint64_t)v15, (uint64_t *)&unk_2542E4CB0);
  sub_23AA724E8((uint64_t)v15, (uint64_t)v16, (uint64_t *)&unk_2542E4CB0);
  v11 = sub_23AAFC2A4((uint64_t)v16);
  if (v11 == 1)
  {
    sub_23ACFC784(v14);
  }
  else
  {
    memcpy(v14, v16, sizeof(v14));
    nullsub_1(v14);
  }
  v12 = v14;
  return sub_23AA724E8((uint64_t)v12, a4, qword_2542E6E20);
}

uint64_t sub_23ADCE84C(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  id v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;
  _BYTE *v16;
  _BYTE __dst[496];
  _BYTE v18[504];
  _OWORD __src[32];
  _QWORD v20[63];
  _BYTE v21[496];
  _BYTE v22[496];

  swift_beginAccess();
  v9 = *(_QWORD *)(a3 + 24);
  if (*(_QWORD *)(v9 + 16))
  {
    v10 = a4;
    swift_bridgeObjectRetain();
    v11 = sub_23AA88CF8(v10);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v11);
      swift_retain();

      swift_bridgeObjectRelease();
      if (v13)
      {
        swift_retain();
        v14 = a1;
        sub_23B07FF48(a1, 256, 0, v20);
        if (v4)
        {

          return swift_release_n();
        }

        swift_release();
        sub_23AA724E8((uint64_t)v20, (uint64_t)v18, (uint64_t *)&unk_2542E4CB0);
        sub_23AA724E8((uint64_t)v18, (uint64_t)__src, (uint64_t *)&unk_2542E4CB0);
        if (sub_23AAFC2A4((uint64_t)__src) != 1)
        {
          memcpy(__dst, __src, sizeof(__dst));
          nullsub_1(__dst);
          v16 = __dst;
          goto LABEL_8;
        }
      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  sub_23ACFC784(__src);
  v16 = __src;
LABEL_8:
  sub_23AA724E8((uint64_t)v16, (uint64_t)v21, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v21, (uint64_t)v22, qword_2542E6E20);
  sub_23ADC9678((uint64_t)v22, a2, 1, 0, 0xFFu, 70, 2);
  sub_23ADF2D34((uint64_t)v21, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
  return swift_release();
}

uint64_t sub_23ADCEA2C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  int v68;
  __int16 v69;
  char v70;
  __int16 v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  char v77;
  char v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  int v82;
  unsigned int v83;
  __int16 v84;
  char v85;
  __int16 v86;
  char v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  char v92;
  char v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  char v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  int v103;
  char v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  char v126;
  uint64_t v127;
  __int16 v128;
  char v129;
  __int16 v130;
  char v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  char v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  int v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  __int16 v146;
  char v147;
  __int16 v148;
  char v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  char v154;
  char v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  char v159;
  int v160;
  int v161;
  int v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  int *v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void *v183;
  id v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  void *v191;
  id v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char v205;
  char v206;
  char v207;
  __int16 v208;
  char v209;
  __int16 v210;
  char v211;
  unsigned int v212;
  uint64_t v213;
  uint64_t v214;
  int v215;
  char v216;
  char v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  int v221;
  char v222;
  __int16 v223;
  char v224;
  __int16 v225;
  char v226;
  unsigned int v227;
  uint64_t v228;
  uint64_t v229;
  int v230;
  char v231;
  char v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  char v236;
  uint64_t v237;
  unsigned __int8 v238;
  int v239;
  int v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  void (*v248)(_QWORD, _QWORD, _QWORD, _QWORD);
  int v249;
  unsigned int v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unsigned int v258;
  unsigned int v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char v263;
  int v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unsigned int v268;
  int v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  unint64_t v278;
  unsigned int v279;
  char v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unsigned int v288;
  unsigned int v289;
  uint64_t v290;
  uint64_t v291;
  char v292;
  int v293;
  int v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  int v298;
  uint64_t v299;
  uint64_t v300;
  __int16 v301;
  char v302;
  __int16 v303;
  char v304;
  unsigned int v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  char v309;
  char v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  char v314;
  int v315;
  uint64_t v316;
  unint64_t v317;
  char v318;
  char v319;
  int v320;
  uint64_t v321;
  uint64_t v322;
  char v323;
  __int16 v324;
  char v325;
  __int16 v326;
  char v327;
  unsigned int v328;
  uint64_t v329;
  uint64_t v330;
  int v331;
  char v332;
  char v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  char v337;
  uint64_t v338;
  unsigned __int8 v339;
  uint64_t v340;
  int v341;
  unsigned int v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  int v352;
  unsigned int v353;
  char *v354;
  char *v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  unsigned int v361;
  unsigned int v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  int v366;
  int v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  int v374;
  int v375;
  int v376;
  unsigned int v377;
  uint64_t v378;
  uint64_t v379;
  char v380;
  uint64_t v381;
  char v382;
  char v383;
  unsigned int v384;
  char *v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  unsigned int v392;
  uint64_t v393;
  uint64_t v394;
  __int16 v395;
  char v396;
  __int16 v397;
  uint64_t v398;
  __int128 v399;
  __int128 v400;
  int v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  char v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  __int16 v410;
  char v411;
  __int16 v412;
  char v413;
  unsigned int v414;
  uint64_t v415;
  uint64_t v416;
  int v417;
  char v418;
  char v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  char v423;
  uint64_t v424;
  int v425;
  __int16 v426;
  char v427;
  __int16 v428;
  char v429;
  unsigned int v430;
  uint64_t v431;
  uint64_t v432;
  int v433;
  char v434;
  char v435;
  __int128 v436;
  __int128 v437;
  __int128 v438;
  int v439;
  char v440;
  char *v441;
  __int16 v442;
  char v443;
  __int16 v444;
  char v445;
  unsigned int v446;
  uint64_t v447;
  uint64_t v448;
  int v449;
  char v450;
  char v451;
  __int128 v452;
  __int128 v453;
  __int128 v454;
  char v455;
  uint64_t v456;
  uint64_t v457;
  int *v458;
  char *v459;
  uint64_t v460;
  int v461;
  char v462;
  __int16 v463;
  char v464;
  __int16 v465;
  char v466;
  unsigned int v467;
  uint64_t v468;
  uint64_t v469;
  int v470;
  char v471;
  char v472;
  __int128 v473;
  __int128 v474;
  __int128 v475;
  int v476;
  char v477;
  __int16 v478;
  char v479;
  __int16 v480;
  char v481;
  unsigned int v482;
  uint64_t v483;
  uint64_t v484;
  int v485;
  char v486;
  char v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  char v491;
  uint64_t v492;
  int *v493;
  int *v494;
  int v495;
  uint64_t v496;
  uint64_t v497;
  __int16 v498;
  char v499;
  __int16 v500;
  char v501;
  unsigned int v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  int v506;
  char v507;
  char v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  uint64_t *v512;
  uint64_t v513;
  uint64_t v514;
  _QWORD *v515;
  uint64_t v516;
  _QWORD *v517;
  char *v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  unsigned int v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  unsigned int v543;
  int v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  char *v548;
  uint64_t v549;
  unint64_t v550;
  uint64_t v551;
  char *v552;
  char *v553;
  char *v554;
  int *v555;
  char *v556;
  uint64_t v557;
  char *v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  char *v562;
  unint64_t v563;
  uint64_t v564;
  int *v565;
  uint64_t v566;
  unint64_t v567;
  uint64_t v568;
  unint64_t v569;
  uint64_t v570;
  uint64_t v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  char v577;
  unsigned int v578;
  __int128 v579;
  __int128 v580;
  __int128 v581;
  uint64_t v582;
  unint64_t v583;
  uint64_t v584;
  char v585;
  char v586;
  __int128 v587;
  unint64_t v588;
  int v589;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v520 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v562 = (char *)&v520 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v558 = (char *)&v520 - v12;
  v564 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v13 = MEMORY[0x24BDAC7A8](v564);
  v527 = (uint64_t)&v520 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v548 = (char *)&v520 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v545 = (uint64_t)&v520 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v525 = (uint64_t)&v520 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v554 = (char *)&v520 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v523 = (uint64_t)&v520 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v559 = (uint64_t)&v520 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v557 = (uint64_t)&v520 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v565 = (int *)((char *)&v520 - v36);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v553 = (char *)&v520 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v552 = (char *)&v520 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v551 = (uint64_t)&v520 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v555 = (int *)((char *)&v520 - v44);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)&v520 - v46;
  v48 = MEMORY[0x24BDAC7A8](v45);
  v50 = (char *)&v520 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v52 = (char *)&v520 - v51;
  v53 = *(_DWORD *)(a1 + 40);
  v546 = v55;
  v547 = v54;
  v526 = v56;
  v524 = v57;
  v560 = v58;
  v563 = v59;
  v556 = v9;
  if (v53 != 1)
  {
    if (*(_QWORD *)(a1 + 24))
    {
      v60 = a3;
      LODWORD(v561) = 0;
      goto LABEL_6;
    }
    v67 = 0;
    switch(v53)
    {
      case 4:
LABEL_33:
        v100 = v67 | 8;
        v101 = *(_BYTE *)(a2 + *(int *)(v564 + 48)) == 2;
        break;
      case 3:
LABEL_29:
        v102 = v564;
        v103 = *(unsigned __int8 *)(a2 + *(int *)(v564 + 48));
        sub_23AA8EFC8(a2, (uint64_t)v47, (uint64_t *)&unk_2542E6B00);
        if (!v103)
        {
          v519 = &v47[*(int *)(v102 + 48)];
          LOBYTE(v519) = v519[*(int *)(type metadata accessor for ItemMetadata() + 108)];
          sub_23AA8A05C((uint64_t)v47, (uint64_t *)&unk_2542E6B00);
          if ((v519 & 1) != 0)
            goto LABEL_36;
          goto LABEL_32;
        }
        v99 = (uint64_t)v47;
LABEL_31:
        sub_23AA8A05C(v99, (uint64_t *)&unk_2542E6B00);
LABEL_32:
        v67 |= 8uLL;
        goto LABEL_36;
      case 2:
LABEL_28:
        v100 = v67 | 8;
        v101 = *(_BYTE *)(a2 + *(int *)(v564 + 48)) == 1;
        break;
      default:
        goto LABEL_36;
    }
    if (!v101)
      v67 = v100;
    goto LABEL_36;
  }
  if (!*(_QWORD *)(a1 + 24))
  {
    v67 = 0;
LABEL_12:
    v68 = *(unsigned __int8 *)(a2 + *(int *)(v564 + 48));
    sub_23AA8EFC8(a2, (uint64_t)v52, (uint64_t *)&unk_2542E6B00);
    if (!v68)
    {
      sub_23AA8A05C((uint64_t)v52, (uint64_t *)&unk_2542E6B00);
      goto LABEL_36;
    }
    v69 = *(_WORD *)(a1 + 44);
    v70 = *(_BYTE *)(a1 + 46);
    v71 = *(_WORD *)(a1 + 48);
    v72 = *(_BYTE *)(a1 + 136);
    v73 = *(_DWORD *)(a1 + 144);
    v74 = *(_QWORD *)(a1 + 200);
    v75 = *(_QWORD *)(a1 + 216);
    v76 = *(_DWORD *)(a1 + 256);
    v77 = *(_BYTE *)(a1 + 224) & 1;
    v78 = *(_BYTE *)(a1 + 225) & 1;
    LODWORD(v570) = *(_DWORD *)(a1 + 40);
    BYTE6(v570) = v70;
    WORD2(v570) = v69;
    LOWORD(v571) = v71;
    v79 = *(_OWORD *)(a1 + 72);
    v572 = *(_OWORD *)(a1 + 56);
    v573 = v79;
    v80 = *(_OWORD *)(a1 + 104);
    v574 = *(_OWORD *)(a1 + 88);
    v575 = v80;
    v576 = *(_OWORD *)(a1 + 120);
    v577 = v72;
    v578 = v73;
    v81 = *(_OWORD *)(a1 + 168);
    v579 = *(_OWORD *)(a1 + 152);
    v580 = v81;
    v581 = *(_OWORD *)(a1 + 184);
    v582 = v74;
    v583 = *(_QWORD *)(a1 + 208);
    v584 = v75;
    v585 = v77;
    v586 = v78;
    v587 = *(_OWORD *)(a1 + 232);
    v588 = *(_QWORD *)(a1 + 248);
    v589 = v76;
    v82 = sub_23AABEF58((uint64_t)&v570);
    sub_23AA8EFC8((uint64_t)v52, (uint64_t)v50, (uint64_t *)&unk_2542E6B00);
    if (v82)
    {
      v83 = v50[*(int *)(v564 + 48)];
      sub_23AA8A05C((uint64_t)v50, (uint64_t *)&unk_2542E6B00);
      sub_23AA8A05C((uint64_t)v52, (uint64_t *)&unk_2542E6B00);
      if (v83 >= 3)
        goto LABEL_36;
      goto LABEL_32;
    }
    sub_23AA8A05C((uint64_t)v50, (uint64_t *)&unk_2542E6B00);
    v99 = (uint64_t)v52;
    goto LABEL_31;
  }
  LODWORD(v561) = *(_DWORD *)(a1 + 144) > 1u;
  v60 = a3;
LABEL_6:
  v61 = sub_23B1C650C();
  v63 = v62;
  v64 = *(_QWORD *)(a2 + 136);
  v570 = *(_QWORD *)(a2 + 128);
  v571 = v64;
  v568 = 47;
  v569 = 0xE100000000000000;
  v566 = 58;
  v567 = 0xE100000000000000;
  sub_23AAA420C();
  if (v61 == sub_23B1C6CF8() && v63 == v65)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  v66 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v66 & 1) != 0)
  {
LABEL_10:
    v67 = 0;
    a3 = v60;
    switch(*(_DWORD *)(a1 + 40))
    {
      case 1:
        goto LABEL_12;
      case 2:
        goto LABEL_28;
      case 3:
        goto LABEL_29;
      case 4:
        goto LABEL_33;
      default:
        goto LABEL_36;
    }
    goto LABEL_36;
  }
  v84 = *(_WORD *)(a1 + 44);
  v85 = *(_BYTE *)(a1 + 46);
  v86 = *(_WORD *)(a1 + 48);
  v87 = *(_BYTE *)(a1 + 136);
  v88 = *(_DWORD *)(a1 + 144);
  v89 = *(_QWORD *)(a1 + 200);
  v90 = *(_QWORD *)(a1 + 216);
  v91 = *(_DWORD *)(a1 + 256);
  v92 = *(_BYTE *)(a1 + 224) & 1;
  v93 = *(_BYTE *)(a1 + 225) & 1;
  LODWORD(v570) = *(_DWORD *)(a1 + 40);
  BYTE6(v570) = v85;
  WORD2(v570) = v84;
  LOWORD(v571) = v86;
  v94 = *(_OWORD *)(a1 + 72);
  v572 = *(_OWORD *)(a1 + 56);
  v573 = v94;
  v95 = *(_OWORD *)(a1 + 104);
  v574 = *(_OWORD *)(a1 + 88);
  v575 = v95;
  v576 = *(_OWORD *)(a1 + 120);
  v577 = v87;
  v578 = v88;
  v96 = *(_OWORD *)(a1 + 168);
  v579 = *(_OWORD *)(a1 + 152);
  v580 = v96;
  v581 = *(_OWORD *)(a1 + 184);
  v582 = v89;
  v583 = *(_QWORD *)(a1 + 208);
  v584 = v90;
  v585 = v92;
  v586 = v93;
  v587 = *(_OWORD *)(a1 + 232);
  v588 = *(_QWORD *)(a1 + 248);
  v589 = v91;
  v97 = sub_23AA92C24((uint64_t)&v570);
  v98 = *(_DWORD *)(a1 + 40);
  a3 = v60;
  if ((v97 & 1) != 0)
  {
    v67 = 0;
    switch(v98)
    {
      case 1:
        goto LABEL_12;
      case 2:
        goto LABEL_28;
      case 3:
        goto LABEL_29;
      case 4:
        goto LABEL_33;
      default:
        break;
    }
  }
  else
  {
    if ((_DWORD)v561)
      v67 = 0;
    else
      v67 = 2;
    switch(v98)
    {
      case 1:
        goto LABEL_12;
      case 2:
        goto LABEL_28;
      case 3:
        goto LABEL_29;
      case 4:
        goto LABEL_33;
      default:
        break;
    }
  }
LABEL_36:
  v104 = fpfs_supports_parent_mtime_iopolicy();
  v105 = *(_DWORD *)(a1 + 40);
  v561 = a2;
  if ((v104 & 1) == 0 && v105 == 2)
  {
    v106 = v564;
    v107 = (uint64_t)v565;
    goto LABEL_72;
  }
  v108 = v564;
  if (v105 == 3)
  {
    v550 = v67;
  }
  else
  {
    v109 = (uint64_t)v555;
    sub_23AA8EFC8(a2, (uint64_t)v555, (uint64_t *)&unk_2542E6B00);
    if ((a3 & 1) != 0)
    {
      v550 = v67;
      sub_23AA8A05C(v109, (uint64_t *)&unk_2542E6B00);
    }
    else
    {
      v110 = (uint64_t)v558;
      sub_23B1C5B88();
      v111 = sub_23B1C5BDC();
      v112 = *(_QWORD *)(v111 - 8);
      v550 = *(_QWORD *)(v112 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v550)(v110, 0, 1, v111);
      v113 = *(int *)(v108 + 48);
      v114 = v109 + v113 + *(int *)(type metadata accessor for ItemMetadata() + 32);
      v115 = (uint64_t)v562;
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v562, v114, v111);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v550)(v115, 0, 1, v111);
      LOBYTE(v111) = sub_23B12AAB0(v115);
      sub_23AA8A05C(v115, (uint64_t *)&unk_2542E4310);
      sub_23AA8A05C(v110, (uint64_t *)&unk_2542E4310);
      sub_23AA8A05C((uint64_t)v555, (uint64_t *)&unk_2542E6B00);
      if ((v111 & 1) == 0)
        v67 |= 0x10uLL;
      v550 = v67;
    }
  }
  v116 = (uint64_t)v558;
  sub_23B1C5B88();
  v117 = sub_23B1C5BDC();
  v118 = *(_QWORD *)(v117 - 8);
  v119 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56);
  v120 = 1;
  v119(v116, 0, 1, v117);
  v121 = a2 + *(int *)(v108 + 48);
  v555 = (int *)type metadata accessor for ItemMetadata();
  v122 = (uint64_t)v562;
  (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v562, v121 + v555[7], v117);
  v119(v122, 0, 1, v117);
  LOBYTE(v118) = sub_23B12AAB0(v122);
  sub_23AA8A05C(v122, (uint64_t *)&unk_2542E4310);
  sub_23AA8A05C(v116, (uint64_t *)&unk_2542E4310);
  if ((v118 & 1) != 0)
    v123 = v550;
  else
    v123 = v550 | 0x20;
  v124 = (uint64_t)v556;
  if (*(_OWORD *)(a1 + 96) != 0)
  {
    sub_23B1C5B88();
    v120 = 0;
  }
  v119(v124, v120, 1, v117);
  v125 = v555;
  v126 = sub_23B12AAB0(v121 + v555[29]);
  sub_23AA8A05C(v124, (uint64_t *)&unk_2542E4310);
  if ((v126 & 1) != 0)
    v67 = v123;
  else
    v67 = v123 | 0x40;
  a2 = v561;
  v106 = v564;
  v107 = (uint64_t)v565;
  if (*(_DWORD *)(a1 + 40) != 2)
  {
    v127 = *(_QWORD *)(v561 + *(int *)(v564 + 48) + v125[25]);
    v128 = *(_WORD *)(a1 + 44);
    v129 = *(_BYTE *)(a1 + 46);
    v130 = *(_WORD *)(a1 + 48);
    v131 = *(_BYTE *)(a1 + 136);
    v132 = *(_DWORD *)(a1 + 144);
    v133 = *(_QWORD *)(a1 + 200);
    v134 = *(_QWORD *)(a1 + 216);
    v135 = *(_DWORD *)(a1 + 256);
    v136 = *(_BYTE *)(a1 + 224) & 1;
    v137 = *(_BYTE *)(a1 + 225) & 1;
    LODWORD(v570) = *(_DWORD *)(a1 + 40);
    BYTE6(v570) = v129;
    WORD2(v570) = v128;
    LOWORD(v571) = v130;
    if (*(_QWORD *)(a1 + 56) != v127)
      v67 |= 0x100uLL;
    v138 = *(_OWORD *)(a1 + 72);
    v572 = *(_OWORD *)(a1 + 56);
    v573 = v138;
    v139 = *(_OWORD *)(a1 + 104);
    v574 = *(_OWORD *)(a1 + 88);
    v575 = v139;
    v576 = *(_OWORD *)(a1 + 120);
    v577 = v131;
    v578 = v132;
    v140 = *(_OWORD *)(a1 + 168);
    v579 = *(_OWORD *)(a1 + 152);
    v580 = v140;
    v581 = *(_OWORD *)(a1 + 184);
    v582 = v133;
    v583 = *(_QWORD *)(a1 + 208);
    v584 = v134;
    v585 = v136;
    v586 = v137;
    v587 = *(_OWORD *)(a1 + 232);
    v588 = *(_QWORD *)(a1 + 248);
    v589 = v135;
    v141 = sub_23AA92C54((uint64_t)&v570);
    v142 = v551;
    sub_23AA8EFC8(a2, v551, (uint64_t *)&unk_2542E6B00);
    if (v141)
    {
      v143 = *(_BYTE *)(v142 + *(int *)(v106 + 48) + v125[13]);
      sub_23AA8A05C(v142, (uint64_t *)&unk_2542E6B00);
      v144 = (uint64_t)v552;
      v145 = (uint64_t)v553;
      if ((v143 & 1) == 0)
      {
        v67 |= 0x800000uLL;
LABEL_65:
        v161 = *(_DWORD *)(a1 + 20);
        v162 = *(_DWORD *)(a2 + 40);
        sub_23AA8EFC8(a2, v145, (uint64_t *)&unk_2542E6B00);
        if (v161 == v162)
        {
          sub_23AA8A05C(v145, (uint64_t *)&unk_2542E6B00);
        }
        else
        {
          v163 = *(_BYTE *)(v145 + *(int *)(v106 + 48) + v125[20]);
          sub_23AA8A05C(v145, (uint64_t *)&unk_2542E6B00);
          if ((v163 & 1) == 0)
          {
            v164 = (v67 >> 13) & 1;
            if (*(_DWORD *)(a1 + 40) == 4)
              LODWORD(v164) = 1;
            if (!(_DWORD)v164)
              v67 |= 0x2000uLL;
          }
        }
        goto LABEL_72;
      }
    }
    else
    {
      sub_23AA8A05C(v142, (uint64_t *)&unk_2542E6B00);
      v144 = (uint64_t)v552;
      v145 = (uint64_t)v553;
    }
    v146 = *(_WORD *)(a1 + 44);
    v147 = *(_BYTE *)(a1 + 46);
    v148 = *(_WORD *)(a1 + 48);
    v149 = *(_BYTE *)(a1 + 136);
    v150 = *(_DWORD *)(a1 + 144);
    v151 = *(_QWORD *)(a1 + 200);
    v152 = *(_QWORD *)(a1 + 216);
    v153 = *(_DWORD *)(a1 + 256);
    v154 = *(_BYTE *)(a1 + 224) & 1;
    v155 = *(_BYTE *)(a1 + 225) & 1;
    LODWORD(v570) = *(_DWORD *)(a1 + 40);
    BYTE6(v570) = v147;
    WORD2(v570) = v146;
    LOWORD(v571) = v148;
    v156 = *(_OWORD *)(a1 + 72);
    v572 = *(_OWORD *)(a1 + 56);
    v573 = v156;
    v157 = *(_OWORD *)(a1 + 104);
    v574 = *(_OWORD *)(a1 + 88);
    v575 = v157;
    v576 = *(_OWORD *)(a1 + 120);
    v577 = v149;
    v578 = v150;
    v158 = *(_OWORD *)(a1 + 168);
    v579 = *(_OWORD *)(a1 + 152);
    v580 = v158;
    v581 = *(_OWORD *)(a1 + 184);
    v582 = v151;
    v583 = *(_QWORD *)(a1 + 208);
    v584 = v152;
    v585 = v154;
    v586 = v155;
    v587 = *(_OWORD *)(a1 + 232);
    v588 = *(_QWORD *)(a1 + 248);
    v589 = v153;
    v159 = sub_23AA92C54((uint64_t)&v570);
    sub_23AA8EFC8(a2, v144, (uint64_t *)&unk_2542E6B00);
    if ((v159 & 1) != 0)
    {
      sub_23AA8A05C(v144, (uint64_t *)&unk_2542E6B00);
    }
    else
    {
      v160 = *(unsigned __int8 *)(v144 + *(int *)(v106 + 48) + v125[13]);
      sub_23AA8A05C(v144, (uint64_t *)&unk_2542E6B00);
      if (v160)
        v67 |= 0x1000000uLL;
    }
    goto LABEL_65;
  }
LABEL_72:
  v165 = (v67 >> 9) & 1;
  if (((*(_WORD *)(a2 + *(int *)(v106 + 48) + 10) ^ *(_WORD *)(a1 + 48)) & 0x1C0) == 0)
    LODWORD(v165) = 1;
  if ((_DWORD)v165)
    v166 = v67;
  else
    v166 = v67 | 0x200;
  v167 = (char *)(a2 + *(int *)(v106 + 48));
  v168 = type metadata accessor for ItemMetadata();
  v169 = v167[*(int *)(v168 + 124) + 8];
  sub_23AA8EFC8(a2, v107, (uint64_t *)&unk_2542E6B00);
  v565 = (int *)v168;
  if ((v169 & 1) != 0)
  {
    sub_23AA8A05C(v107, (uint64_t *)&unk_2542E6B00);
    v170 = a2;
    v171 = a2;
    v172 = v563;
    sub_23AA8EFC8(v171, v563, (uint64_t *)&unk_2542E6B00);
  }
  else
  {
    v173 = *(_QWORD *)(a1 + 112);
    v174 = v107 + *(int *)(v106 + 48) + (uint64_t)*(int *)(v168 + 124);
    v175 = *(_QWORD *)v174;
    v176 = *(_BYTE *)(v174 + 8);
    sub_23AA8A05C(v107, (uint64_t *)&unk_2542E6B00);
    v170 = a2;
    v177 = a2;
    v172 = v563;
    sub_23AA8EFC8(v177, v563, (uint64_t *)&unk_2542E6B00);
    if ((v176 & 1) != 0 || v173 != v175)
    {
      sub_23AA8A05C(v172, (uint64_t *)&unk_2542E6B00);
      v180 = v166;
      v178 = v565;
      v181 = v170;
      if ((v166 & 0x400) != 0)
        goto LABEL_89;
      goto LABEL_87;
    }
  }
  v178 = v565;
  if (*(_BYTE *)(v172 + *(int *)(v564 + 48) + (uint64_t)v565[31] + 8) != 1)
  {
    sub_23AA8A05C(v172, (uint64_t *)&unk_2542E6B00);
    v180 = v166;
    v181 = v170;
    goto LABEL_89;
  }
  v179 = *(_QWORD *)(a1 + 112);
  sub_23AA8A05C(v172, (uint64_t *)&unk_2542E6B00);
  v180 = v166;
  v181 = v170;
  if (!v179)
  {
    v178 = v565;
    goto LABEL_89;
  }
  v178 = v565;
  if ((v166 & 0x400) == 0)
LABEL_87:
    v180 |= 0x400uLL;
LABEL_89:
  v182 = sub_23AF1DBB4(*(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136));
  v562 = v167;
  if (!v182)
  {
    v188 = *(_QWORD *)&v167[v178[30]];
    if (!v188)
      goto LABEL_97;
    v185 = 0;
    v187 = 0xF000000000000000;
LABEL_95:
    sub_23AA9914C(v188);
    sub_23AA9F52C(0, qword_2569E5780);
    v191 = (void *)sub_23B1C66F8();
    swift_bridgeObjectRelease();
    v192 = (id)FPGetTagsDataForTags();

    v189 = sub_23B1C5AD4();
    v190 = v193;

    if (v187 >> 60 == 15)
    {
      v167 = v562;
      if (v190 >> 60 == 15)
        goto LABEL_97;
    }
    else
    {
      if (v190 >> 60 != 15)
      {
        sub_23AAA3E2C(v185, v187);
        sub_23AAAE6AC(v185, v187);
        v207 = v206;
        sub_23AAA3E18(v189, v190);
        sub_23AAA3E18(v185, v187);
        sub_23AAA3E18(v185, v187);
        if ((v207 & 1) != 0)
        {
          v194 = v564;
          v167 = v562;
          if (*(_QWORD *)(a1 + 176))
            goto LABEL_106;
          goto LABEL_98;
        }
        v194 = v564;
        v167 = v562;
        if ((v180 & 0x800) != 0)
          goto LABEL_105;
LABEL_104:
        v180 |= 0x800uLL;
LABEL_105:
        if (*(_QWORD *)(a1 + 176))
          goto LABEL_106;
        goto LABEL_98;
      }
      v167 = v562;
    }
LABEL_103:
    sub_23AAA3E18(v185, v187);
    sub_23AAA3E18(v189, v190);
    v194 = v564;
    if ((v180 & 0x800) != 0)
      goto LABEL_105;
    goto LABEL_104;
  }
  sub_23AA9914C(v182);
  sub_23AA9F52C(0, qword_2569E5780);
  v183 = (void *)sub_23B1C66F8();
  swift_bridgeObjectRelease();
  v184 = (id)FPGetTagsDataForTags();

  v185 = sub_23B1C5AD4();
  v187 = v186;
  swift_bridgeObjectRelease();

  v188 = *(_QWORD *)&v167[v178[30]];
  if (v188)
    goto LABEL_95;
  if (v187 >> 60 != 15)
  {
    v189 = 0;
    v190 = 0xF000000000000000;
    goto LABEL_103;
  }
LABEL_97:
  v194 = v564;
  if (*(_QWORD *)(a1 + 176))
  {
LABEL_106:
    v198 = &v167[v178[14]];
    v199 = *((_QWORD *)v198 + 1);
    if (v199)
    {
      v200 = v194;
      v201 = *(_QWORD *)v198;
      v202 = sub_23B1C650C();
      v197 = v560;
      if (v202 == v201 && v199 == v203)
      {
        swift_bridgeObjectRelease();
        v194 = v200;
      }
      else
      {
        v205 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        if (!(v205 & 1 | (v180 >> 14) & 1))
          v180 |= 0x4000uLL;
        v194 = v200;
      }
      goto LABEL_119;
    }
    v204 = v557;
    sub_23AA8EFC8(v181, v557, (uint64_t *)&unk_2542E6B00);
    sub_23AA8A05C(v204, (uint64_t *)&unk_2542E6B00);
    v197 = v560;
    if ((v180 & 0x4000) != 0)
      goto LABEL_119;
LABEL_111:
    v180 |= 0x4000uLL;
    goto LABEL_119;
  }
LABEL_98:
  v195 = v557;
  sub_23AA8EFC8(v181, v557, (uint64_t *)&unk_2542E6B00);
  v196 = *(_QWORD *)(v195 + *(int *)(v194 + 48) + (uint64_t)v178[14] + 8);
  sub_23AA8A05C(v195, (uint64_t *)&unk_2542E6B00);
  if (!v196)
  {
    v178 = v565;
    v197 = v560;
    goto LABEL_119;
  }
  v178 = v565;
  v197 = v560;
  if ((v180 & 0x4000) == 0)
    goto LABEL_111;
LABEL_119:
  v208 = *(_WORD *)(a1 + 44);
  v209 = *(_BYTE *)(a1 + 46);
  v210 = *(_WORD *)(a1 + 48);
  v211 = *(_BYTE *)(a1 + 136);
  v212 = *(_DWORD *)(a1 + 144);
  v213 = *(_QWORD *)(a1 + 200);
  v214 = *(_QWORD *)(a1 + 216);
  v215 = *(_DWORD *)(a1 + 256);
  v216 = *(_BYTE *)(a1 + 224) & 1;
  v217 = *(_BYTE *)(a1 + 225) & 1;
  LODWORD(v570) = *(_DWORD *)(a1 + 40);
  BYTE6(v570) = v209;
  WORD2(v570) = v208;
  LOWORD(v571) = v210;
  v218 = *(_OWORD *)(a1 + 72);
  v572 = *(_OWORD *)(a1 + 56);
  v573 = v218;
  v219 = *(_OWORD *)(a1 + 104);
  v574 = *(_OWORD *)(a1 + 88);
  v575 = v219;
  v576 = *(_OWORD *)(a1 + 120);
  v577 = v211;
  v578 = v212;
  v220 = *(_OWORD *)(a1 + 168);
  v579 = *(_OWORD *)(a1 + 152);
  v580 = v220;
  v581 = *(_OWORD *)(a1 + 184);
  v582 = v213;
  v583 = *(_QWORD *)(a1 + 208);
  v584 = v214;
  v585 = v216;
  v586 = v217;
  v587 = *(_OWORD *)(a1 + 232);
  v588 = *(_QWORD *)(a1 + 248);
  v589 = v215;
  v221 = sub_23AA92C30((uint64_t)&v570);
  sub_23AA8EFC8(v181, v197, (uint64_t *)&unk_2542E6B00);
  if (v221)
  {
    v222 = *(_BYTE *)(v197 + *(int *)(v194 + 48) + v178[20]);
    sub_23AA8A05C(v197, (uint64_t *)&unk_2542E6B00);
    if ((v222 & 1) == 0)
    {
      v180 |= 0x8000uLL;
      goto LABEL_127;
    }
  }
  else
  {
    sub_23AA8A05C(v197, (uint64_t *)&unk_2542E6B00);
  }
  v223 = *(_WORD *)(a1 + 44);
  v224 = *(_BYTE *)(a1 + 46);
  v225 = *(_WORD *)(a1 + 48);
  v226 = *(_BYTE *)(a1 + 136);
  v227 = *(_DWORD *)(a1 + 144);
  v228 = *(_QWORD *)(a1 + 200);
  v229 = *(_QWORD *)(a1 + 216);
  v230 = *(_DWORD *)(a1 + 256);
  v231 = *(_BYTE *)(a1 + 224) & 1;
  v232 = *(_BYTE *)(a1 + 225) & 1;
  LODWORD(v570) = *(_DWORD *)(a1 + 40);
  BYTE6(v570) = v224;
  WORD2(v570) = v223;
  LOWORD(v571) = v225;
  v233 = *(_OWORD *)(a1 + 72);
  v572 = *(_OWORD *)(a1 + 56);
  v573 = v233;
  v234 = *(_OWORD *)(a1 + 104);
  v574 = *(_OWORD *)(a1 + 88);
  v575 = v234;
  v576 = *(_OWORD *)(a1 + 120);
  v577 = v226;
  v578 = v227;
  v235 = *(_OWORD *)(a1 + 168);
  v579 = *(_OWORD *)(a1 + 152);
  v580 = v235;
  v581 = *(_OWORD *)(a1 + 184);
  v582 = v228;
  v583 = *(_QWORD *)(a1 + 208);
  v584 = v229;
  v585 = v231;
  v586 = v232;
  v587 = *(_OWORD *)(a1 + 232);
  v588 = *(_QWORD *)(a1 + 248);
  v589 = v230;
  v236 = sub_23AA92C30((uint64_t)&v570);
  v237 = v559;
  sub_23AA8EFC8(v181, v559, (uint64_t *)&unk_2542E6B00);
  if ((v236 & 1) != 0)
  {
    v563 = v180;
    sub_23AA8A05C(v237, (uint64_t *)&unk_2542E6B00);
    goto LABEL_128;
  }
  v238 = *(_BYTE *)(v237 + *(int *)(v194 + 48) + v565[20]);
  sub_23AA8A05C(v237, (uint64_t *)&unk_2542E6B00);
  if ((v238 & ((v180 & 0x10000) == 0)) != 0)
    v180 |= 0x10000uLL;
LABEL_127:
  v563 = v180;
LABEL_128:
  LODWORD(v556) = *(_DWORD *)(a1 + 40);
  v239 = *(unsigned __int8 *)(a1 + 46);
  LODWORD(v555) = *(unsigned __int16 *)(a1 + 44);
  v240 = *(unsigned __int16 *)(a1 + 48);
  v557 = *(_QWORD *)(a1 + 56);
  v241 = *(_QWORD *)(a1 + 72);
  v528 = *(_QWORD *)(a1 + 64);
  v242 = *(char **)(a1 + 80);
  v243 = *(_QWORD *)(a1 + 88);
  v244 = *(_QWORD *)(a1 + 96);
  v245 = *(char **)(a1 + 104);
  v246 = *(char **)(a1 + 112);
  v247 = *(_QWORD *)(a1 + 120);
  v248 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(a1 + 128);
  v249 = *(unsigned __int8 *)(a1 + 136);
  v250 = *(_DWORD *)(a1 + 144);
  v251 = *(_QWORD *)(a1 + 152);
  v252 = *(_QWORD *)(a1 + 160);
  v253 = *(_QWORD *)(a1 + 168);
  v254 = *(_QWORD *)(a1 + 176);
  v255 = *(_QWORD *)(a1 + 184);
  v256 = *(_QWORD *)(a1 + 192);
  v257 = *(_QWORD *)(a1 + 200);
  v258 = *(_DWORD *)(a1 + 208);
  v259 = *(_DWORD *)(a1 + 212);
  v260 = *(_QWORD *)(a1 + 216);
  v262 = *(_QWORD *)(a1 + 232);
  v261 = *(_QWORD *)(a1 + 240);
  v263 = *(_BYTE *)(a1 + 224) & 1;
  v264 = *(_BYTE *)(a1 + 225) & 1;
  LODWORD(v570) = (_DWORD)v556;
  LODWORD(v521) = v239;
  BYTE6(v570) = v239;
  WORD2(v570) = (_WORD)v555;
  LODWORD(v522) = v240;
  LOWORD(v571) = v240;
  v265 = v528;
  *(_QWORD *)&v572 = v557;
  *((_QWORD *)&v572 + 1) = v528;
  v266 = v241;
  *(_QWORD *)&v573 = v241;
  *((_QWORD *)&v573 + 1) = v242;
  v558 = v242;
  v531 = v243;
  *(_QWORD *)&v574 = v243;
  *((_QWORD *)&v574 + 1) = v244;
  v267 = v244;
  v552 = v246;
  v553 = v245;
  *(_QWORD *)&v575 = v245;
  *((_QWORD *)&v575 + 1) = v246;
  v550 = (unint64_t)v248;
  v551 = v247;
  *(_QWORD *)&v576 = v247;
  *((_QWORD *)&v576 + 1) = v248;
  v543 = v250;
  v544 = v249;
  v577 = v249;
  v578 = v250;
  v541 = v252;
  v542 = v251;
  *(_QWORD *)&v579 = v251;
  *((_QWORD *)&v579 + 1) = v252;
  v539 = v254;
  v540 = v253;
  *(_QWORD *)&v580 = v253;
  *((_QWORD *)&v580 + 1) = v254;
  v537 = v256;
  v538 = v255;
  *(_QWORD *)&v581 = v255;
  *((_QWORD *)&v581 + 1) = v256;
  v536 = v257;
  v582 = v257;
  v535 = v258;
  v583 = __PAIR64__(v259, v258);
  LODWORD(v534) = v259;
  v532 = v262;
  v533 = v260;
  v584 = v260;
  v585 = v263;
  LODWORD(v529) = v264;
  v586 = v264;
  *(_QWORD *)&v587 = v262;
  v530 = v261;
  *((_QWORD *)&v587 + 1) = v261;
  v268 = *(_DWORD *)(a1 + 252);
  LODWORD(v560) = *(_DWORD *)(a1 + 248);
  v588 = __PAIR64__(v268, v560);
  LODWORD(v559) = v268;
  v269 = *(_DWORD *)(a1 + 256);
  v589 = v269;
  if ((sub_23AA92C30((uint64_t)&v570) & 1) != 0)
  {
    v270 = v561;
    v271 = v553;
    v272 = (uint64_t)v554;
    v273 = v531;
    v274 = v532;
    v275 = v267;
    v277 = v551;
    v276 = v552;
    v278 = v550;
    v279 = v543;
    v280 = v544;
    v282 = v541;
    v281 = v542;
    v284 = v539;
    v283 = v540;
    v286 = v537;
    v285 = v538;
    v287 = v536;
    v288 = v535;
    v289 = v534;
    v290 = v533;
    v291 = v530;
    v292 = v529;
    v293 = v269;
    goto LABEL_142;
  }
  LODWORD(v570) = (_DWORD)v556;
  WORD2(v570) = (_WORD)v555;
  BYTE6(v570) = (v555 | ((_DWORD)v521 << 16)) >> 16;
  LOWORD(v571) = v522;
  *(_QWORD *)&v572 = v557;
  *((_QWORD *)&v572 + 1) = v265;
  *(_QWORD *)&v573 = v266;
  *((_QWORD *)&v573 + 1) = v558;
  *(_QWORD *)&v574 = v531;
  *((_QWORD *)&v574 + 1) = v267;
  *(_QWORD *)&v575 = v553;
  *((_QWORD *)&v575 + 1) = v552;
  *(_QWORD *)&v576 = v551;
  *((_QWORD *)&v576 + 1) = v550;
  v577 = v544;
  v578 = v543;
  *(_QWORD *)&v579 = v542;
  *((_QWORD *)&v579 + 1) = v541;
  *(_QWORD *)&v580 = v540;
  *((_QWORD *)&v580 + 1) = v539;
  *(_QWORD *)&v581 = v538;
  *((_QWORD *)&v581 + 1) = v537;
  v582 = v536;
  v583 = __PAIR64__(v534, v535);
  v584 = v533;
  v585 = v263;
  v586 = v529;
  *(_QWORD *)&v587 = v532;
  *((_QWORD *)&v587 + 1) = v530;
  v588 = __PAIR64__(v559, v560);
  v589 = v269;
  v294 = sub_23ADAB360((uint64_t)&v570);
  v295 = v561;
  v296 = v523;
  sub_23AA8EFC8(v561, v523, (uint64_t *)&unk_2542E6B00);
  if (!v294)
  {
    sub_23AA8A05C(v296, (uint64_t *)&unk_2542E6B00);
    v297 = v564;
    v299 = v524;
LABEL_134:
    v301 = *(_WORD *)(a1 + 44);
    v302 = *(_BYTE *)(a1 + 46);
    v303 = *(_WORD *)(a1 + 48);
    v304 = *(_BYTE *)(a1 + 136);
    v305 = *(_DWORD *)(a1 + 144);
    v306 = *(_QWORD *)(a1 + 200);
    v307 = *(_QWORD *)(a1 + 216);
    v308 = *(_DWORD *)(a1 + 256);
    v309 = *(_BYTE *)(a1 + 224) & 1;
    v310 = *(_BYTE *)(a1 + 225) & 1;
    LODWORD(v570) = *(_DWORD *)(a1 + 40);
    BYTE6(v570) = v302;
    WORD2(v570) = v301;
    LOWORD(v571) = v303;
    v311 = *(_OWORD *)(a1 + 72);
    v572 = *(_OWORD *)(a1 + 56);
    v573 = v311;
    v312 = *(_OWORD *)(a1 + 104);
    v574 = *(_OWORD *)(a1 + 88);
    v575 = v312;
    v576 = *(_OWORD *)(a1 + 120);
    v577 = v304;
    v578 = v305;
    v313 = *(_OWORD *)(a1 + 168);
    v579 = *(_OWORD *)(a1 + 152);
    v580 = v313;
    v581 = *(_OWORD *)(a1 + 184);
    v582 = v306;
    v583 = *(_QWORD *)(a1 + 208);
    v584 = v307;
    v585 = v309;
    v586 = v310;
    v587 = *(_OWORD *)(a1 + 232);
    v588 = *(_QWORD *)(a1 + 248);
    v589 = v308;
    v314 = sub_23ADAB360((uint64_t)&v570);
    sub_23AA8EFC8(v295, v299, (uint64_t *)&unk_2542E6B00);
    v300 = v295;
    if ((v314 & 1) != 0)
    {
      sub_23AA8A05C(v299, (uint64_t *)&unk_2542E6B00);
    }
    else
    {
      v315 = *(unsigned __int8 *)(v299 + *(int *)(v297 + 48) + v565[21]);
      sub_23AA8A05C(v299, (uint64_t *)&unk_2542E6B00);
      v316 = v563;
      v317 = (v563 >> 18) & 1;
      if (!v315)
        LODWORD(v317) = 1;
      if (!(_DWORD)v317)
        v316 = v563 | 0x40000;
      v563 = v316;
    }
    goto LABEL_141;
  }
  v297 = v564;
  v298 = *(unsigned __int8 *)(v296 + *(int *)(v564 + 48) + v565[21]);
  sub_23AA8A05C(v296, (uint64_t *)&unk_2542E6B00);
  v299 = v524;
  if (v298)
    goto LABEL_134;
  v300 = v295;
  v563 |= 0x20000uLL;
LABEL_141:
  v273 = *(_QWORD *)(a1 + 88);
  v558 = *(char **)(a1 + 80);
  v275 = *(_QWORD *)(a1 + 96);
  v271 = *(char **)(a1 + 104);
  v276 = *(char **)(a1 + 112);
  v277 = *(_QWORD *)(a1 + 120);
  v278 = *(_QWORD *)(a1 + 128);
  v280 = *(_BYTE *)(a1 + 136);
  v279 = *(_DWORD *)(a1 + 144);
  v281 = *(_QWORD *)(a1 + 152);
  v282 = *(_QWORD *)(a1 + 160);
  v283 = *(_QWORD *)(a1 + 168);
  v284 = *(_QWORD *)(a1 + 176);
  v285 = *(_QWORD *)(a1 + 184);
  v286 = *(_QWORD *)(a1 + 192);
  v287 = *(_QWORD *)(a1 + 200);
  v288 = *(_DWORD *)(a1 + 208);
  v289 = *(_DWORD *)(a1 + 212);
  v290 = *(_QWORD *)(a1 + 216);
  v318 = *(_BYTE *)(a1 + 224);
  v319 = *(_BYTE *)(a1 + 225);
  v274 = *(_QWORD *)(a1 + 232);
  v291 = *(_QWORD *)(a1 + 240);
  LODWORD(v560) = *(_DWORD *)(a1 + 248);
  LODWORD(v559) = *(_DWORD *)(a1 + 252);
  v263 = v318 & 1;
  v292 = v319 & 1;
  v293 = *(_DWORD *)(a1 + 256);
  v270 = v300;
  v272 = (uint64_t)v554;
LABEL_142:
  LODWORD(v570) = *(_DWORD *)(a1 + 40);
  BYTE6(v570) = *(_BYTE *)(a1 + 46);
  WORD2(v570) = *(_WORD *)(a1 + 44);
  LOWORD(v571) = *(_WORD *)(a1 + 48);
  *(_QWORD *)&v573 = *(_QWORD *)(a1 + 72);
  *((_QWORD *)&v573 + 1) = v558;
  *(_QWORD *)&v574 = v273;
  *((_QWORD *)&v574 + 1) = v275;
  *(_QWORD *)&v575 = v271;
  *((_QWORD *)&v575 + 1) = v276;
  *(_QWORD *)&v576 = v277;
  *((_QWORD *)&v576 + 1) = v278;
  v577 = v280;
  v578 = v279;
  *(_QWORD *)&v579 = v281;
  *((_QWORD *)&v579 + 1) = v282;
  *(_QWORD *)&v580 = v283;
  *((_QWORD *)&v580 + 1) = v284;
  *(_QWORD *)&v581 = v285;
  *((_QWORD *)&v581 + 1) = v286;
  v582 = v287;
  v583 = __PAIR64__(v289, v288);
  v584 = v290;
  v585 = v263;
  v586 = v292;
  *(_QWORD *)&v587 = v274;
  *((_QWORD *)&v587 + 1) = v291;
  v588 = __PAIR64__(v559, v560);
  v589 = v293;
  v572 = *(_OWORD *)(a1 + 56);
  v320 = sub_23AA92BC4((uint64_t)&v570);
  sub_23AA8EFC8(v270, v272, (uint64_t *)&unk_2542E6B00);
  v321 = v272;
  if (v320)
  {
    v322 = v564;
    v323 = *(_BYTE *)(v272 + *(int *)(v564 + 48) + v565[15]);
    sub_23AA8A05C(v321, (uint64_t *)&unk_2542E6B00);
    if ((v323 & 1) == 0)
    {
      v563 |= 0x80000uLL;
      goto LABEL_151;
    }
  }
  else
  {
    sub_23AA8A05C(v272, (uint64_t *)&unk_2542E6B00);
    v322 = v564;
  }
  v324 = *(_WORD *)(a1 + 44);
  v325 = *(_BYTE *)(a1 + 46);
  v326 = *(_WORD *)(a1 + 48);
  v327 = *(_BYTE *)(a1 + 136);
  v328 = *(_DWORD *)(a1 + 144);
  v329 = *(_QWORD *)(a1 + 200);
  v330 = *(_QWORD *)(a1 + 216);
  v331 = *(_DWORD *)(a1 + 256);
  v332 = *(_BYTE *)(a1 + 224) & 1;
  v333 = *(_BYTE *)(a1 + 225) & 1;
  LODWORD(v570) = *(_DWORD *)(a1 + 40);
  BYTE6(v570) = v325;
  WORD2(v570) = v324;
  LOWORD(v571) = v326;
  v334 = *(_OWORD *)(a1 + 72);
  v572 = *(_OWORD *)(a1 + 56);
  v573 = v334;
  v335 = *(_OWORD *)(a1 + 104);
  v574 = *(_OWORD *)(a1 + 88);
  v575 = v335;
  v576 = *(_OWORD *)(a1 + 120);
  v577 = v327;
  v578 = v328;
  v336 = *(_OWORD *)(a1 + 168);
  v579 = *(_OWORD *)(a1 + 152);
  v580 = v336;
  v581 = *(_OWORD *)(a1 + 184);
  v582 = v329;
  v583 = *(_QWORD *)(a1 + 208);
  v584 = v330;
  v585 = v332;
  v586 = v333;
  v587 = *(_OWORD *)(a1 + 232);
  v588 = *(_QWORD *)(a1 + 248);
  v589 = v331;
  v337 = sub_23AA92BC4((uint64_t)&v570);
  v338 = v525;
  sub_23AA8EFC8(v270, v525, (uint64_t *)&unk_2542E6B00);
  if ((v337 & 1) != 0)
  {
    sub_23AA8A05C(v338, (uint64_t *)&unk_2542E6B00);
  }
  else
  {
    v339 = *(_BYTE *)(v338 + *(int *)(v322 + 48) + v565[15]);
    sub_23AA8A05C(v338, (uint64_t *)&unk_2542E6B00);
    v340 = v563;
    if ((v339 & ((v563 & 0x100000) == 0)) != 0)
      v340 = v563 | 0x100000;
    v563 = v340;
  }
LABEL_151:
  v341 = *(_DWORD *)(a1 + 40);
  LODWORD(v550) = *(unsigned __int8 *)(a1 + 46);
  LODWORD(v552) = *(unsigned __int16 *)(a1 + 44);
  v342 = *(unsigned __int16 *)(a1 + 48);
  v343 = *(_QWORD *)(a1 + 56);
  v344 = *(_QWORD *)(a1 + 64);
  v345 = *(_QWORD *)(a1 + 72);
  v346 = *(_QWORD *)(a1 + 80);
  v347 = *(_QWORD *)(a1 + 88);
  v348 = *(_QWORD *)(a1 + 96);
  v349 = *(_QWORD *)(a1 + 104);
  v350 = *(_QWORD *)(a1 + 112);
  v351 = *(_QWORD *)(a1 + 120);
  v560 = *(_QWORD *)(a1 + 128);
  v352 = *(unsigned __int8 *)(a1 + 136);
  v353 = *(_DWORD *)(a1 + 144);
  v354 = *(char **)(a1 + 152);
  v355 = *(char **)(a1 + 160);
  v356 = *(_QWORD *)(a1 + 168);
  v357 = *(_QWORD *)(a1 + 176);
  v358 = *(_QWORD *)(a1 + 184);
  v359 = *(_QWORD *)(a1 + 192);
  v360 = *(_QWORD *)(a1 + 200);
  v362 = *(_DWORD *)(a1 + 208);
  v361 = *(_DWORD *)(a1 + 212);
  v363 = *(_QWORD *)(a1 + 216);
  v364 = *(_QWORD *)(a1 + 232);
  v365 = *(_QWORD *)(a1 + 240);
  v366 = *(_BYTE *)(a1 + 224) & 1;
  v367 = *(_BYTE *)(a1 + 225) & 1;
  LODWORD(v523) = v341;
  LODWORD(v570) = v341;
  BYTE6(v570) = v550;
  WORD2(v570) = (_WORD)v552;
  v535 = v342;
  LOWORD(v571) = v342;
  v533 = v344;
  v534 = v343;
  *(_QWORD *)&v572 = v343;
  *((_QWORD *)&v572 + 1) = v344;
  v531 = v346;
  v532 = v345;
  *(_QWORD *)&v573 = v345;
  *((_QWORD *)&v573 + 1) = v346;
  v529 = v348;
  v530 = v347;
  *(_QWORD *)&v574 = v347;
  *((_QWORD *)&v574 + 1) = v348;
  v528 = v349;
  *(_QWORD *)&v575 = v349;
  *((_QWORD *)&v575 + 1) = v350;
  v524 = v351;
  v525 = v350;
  *(_QWORD *)&v576 = v351;
  v368 = v560;
  *((_QWORD *)&v576 + 1) = v560;
  LODWORD(v554) = v352;
  v577 = v352;
  LODWORD(v555) = v353;
  v578 = v353;
  v553 = v354;
  *(_QWORD *)&v579 = v354;
  v558 = v355;
  v559 = v356;
  *((_QWORD *)&v579 + 1) = v355;
  *(_QWORD *)&v580 = v356;
  v551 = v357;
  *((_QWORD *)&v580 + 1) = v357;
  v369 = v358;
  *(_QWORD *)&v581 = v358;
  v370 = v359;
  *((_QWORD *)&v581 + 1) = v359;
  v557 = v360;
  v582 = v360;
  LODWORD(v556) = v362;
  v583 = __PAIR64__(v361, v362);
  v543 = v361;
  v538 = v364;
  v539 = v363;
  v584 = v363;
  LODWORD(v536) = v366;
  v585 = v366;
  v371 = v367;
  v586 = v367;
  *(_QWORD *)&v587 = v364;
  v537 = v365;
  *((_QWORD *)&v587 + 1) = v365;
  v373 = *(_DWORD *)(a1 + 252);
  LODWORD(v588) = *(_DWORD *)(a1 + 248);
  v372 = v588;
  HIDWORD(v588) = v373;
  v589 = *(_DWORD *)(a1 + 256);
  v374 = v589;
  v375 = sub_23AA92BF4((uint64_t)&v570);
  v376 = v562[v565[11]];
  v544 = v371;
  LODWORD(v542) = v373;
  LODWORD(v541) = v372;
  LODWORD(v540) = v374;
  if (v375 == v376)
  {
    v383 = (char)v554;
    v384 = v555;
    v385 = v553;
    v386 = v558;
    v387 = v559;
    v388 = v551;
    v389 = v369;
    v390 = v370;
    v391 = v557;
    v392 = v556;
    v377 = v543;
    v379 = v538;
    v393 = v539;
    v381 = v537;
    v380 = v536;
  }
  else
  {
    LODWORD(v570) = v523;
    WORD2(v570) = (_WORD)v552;
    BYTE6(v570) = (v552 | ((_DWORD)v550 << 16)) >> 16;
    LOWORD(v571) = v535;
    *(_QWORD *)&v572 = v534;
    *((_QWORD *)&v572 + 1) = v533;
    *(_QWORD *)&v573 = v532;
    *((_QWORD *)&v573 + 1) = v531;
    *(_QWORD *)&v574 = v530;
    *((_QWORD *)&v574 + 1) = v529;
    *(_QWORD *)&v575 = v528;
    *((_QWORD *)&v575 + 1) = v525;
    *(_QWORD *)&v576 = v524;
    *((_QWORD *)&v576 + 1) = v368;
    v521 = v370;
    v522 = v369;
    v577 = (char)v554;
    v578 = v555;
    *(_QWORD *)&v579 = v553;
    *((_QWORD *)&v579 + 1) = v558;
    *(_QWORD *)&v580 = v559;
    *((_QWORD *)&v580 + 1) = v551;
    *(_QWORD *)&v581 = v369;
    *((_QWORD *)&v581 + 1) = v370;
    v582 = v557;
    v583 = __PAIR64__(v543, v556);
    v377 = v543;
    v379 = v538;
    v378 = v539;
    v584 = v539;
    v380 = v536;
    v585 = v536;
    v586 = v371;
    *(_QWORD *)&v587 = v538;
    v381 = v537;
    *((_QWORD *)&v587 + 1) = v537;
    v588 = __PAIR64__(v373, v372);
    v589 = v374;
    v382 = sub_23AA92BF4((uint64_t)&v570);
    v383 = (char)v554;
    v384 = v555;
    v385 = v553;
    v386 = v558;
    v387 = v559;
    v388 = v551;
    v390 = v521;
    v389 = v522;
    v391 = v557;
    v392 = v556;
    v393 = v378;
    if ((v382 & 1) != 0)
      v394 = v563 | 0x200000;
    else
      v394 = v563 | 0x400000;
    v563 = v394;
  }
  v395 = *(_WORD *)(a1 + 44);
  v396 = *(_BYTE *)(a1 + 46);
  v397 = *(_WORD *)(a1 + 48);
  v398 = *(_QWORD *)(a1 + 120);
  LODWORD(v570) = *(_DWORD *)(a1 + 40);
  BYTE6(v570) = v396;
  WORD2(v570) = v395;
  LOWORD(v571) = v397;
  v399 = *(_OWORD *)(a1 + 72);
  v572 = *(_OWORD *)(a1 + 56);
  v573 = v399;
  v400 = *(_OWORD *)(a1 + 104);
  v574 = *(_OWORD *)(a1 + 88);
  v575 = v400;
  *(_QWORD *)&v576 = v398;
  *((_QWORD *)&v576 + 1) = v560;
  v577 = v383;
  v578 = v384;
  *(_QWORD *)&v579 = v385;
  *((_QWORD *)&v579 + 1) = v386;
  *(_QWORD *)&v580 = v387;
  *((_QWORD *)&v580 + 1) = v388;
  *(_QWORD *)&v581 = v389;
  *((_QWORD *)&v581 + 1) = v390;
  v582 = v391;
  v583 = __PAIR64__(v377, v392);
  v584 = v393;
  v585 = v380;
  v586 = v544;
  *(_QWORD *)&v587 = v379;
  *((_QWORD *)&v587 + 1) = v381;
  v588 = __PAIR64__(v542, v541);
  v589 = v540;
  v401 = sub_23AA92C18((uint64_t)&v570);
  v402 = v561;
  v403 = v545;
  sub_23AA8EFC8(v561, v545, (uint64_t *)&unk_2542E6B00);
  if (v401)
  {
    v404 = v564;
    v405 = *(_BYTE *)(v403 + *(int *)(v564 + 48) + v565[10]);
    sub_23AA8A05C(v403, (uint64_t *)&unk_2542E6B00);
    v406 = v547;
    v407 = (uint64_t)v548;
    v408 = v546;
    if ((v405 & 1) == 0)
    {
      v409 = v563 | 0x2000000;
      goto LABEL_165;
    }
  }
  else
  {
    sub_23AA8A05C(v403, (uint64_t *)&unk_2542E6B00);
    v404 = v564;
    v406 = v547;
    v407 = (uint64_t)v548;
    v408 = v546;
  }
  v410 = *(_WORD *)(a1 + 44);
  v411 = *(_BYTE *)(a1 + 46);
  v412 = *(_WORD *)(a1 + 48);
  v413 = *(_BYTE *)(a1 + 136);
  v414 = *(_DWORD *)(a1 + 144);
  v415 = *(_QWORD *)(a1 + 200);
  v416 = *(_QWORD *)(a1 + 216);
  v417 = *(_DWORD *)(a1 + 256);
  v418 = *(_BYTE *)(a1 + 224) & 1;
  v419 = *(_BYTE *)(a1 + 225) & 1;
  LODWORD(v570) = *(_DWORD *)(a1 + 40);
  BYTE6(v570) = v411;
  WORD2(v570) = v410;
  LOWORD(v571) = v412;
  v420 = *(_OWORD *)(a1 + 72);
  v572 = *(_OWORD *)(a1 + 56);
  v573 = v420;
  v421 = *(_OWORD *)(a1 + 104);
  v574 = *(_OWORD *)(a1 + 88);
  v575 = v421;
  v576 = *(_OWORD *)(a1 + 120);
  v577 = v413;
  v578 = v414;
  v422 = *(_OWORD *)(a1 + 168);
  v579 = *(_OWORD *)(a1 + 152);
  v580 = v422;
  v581 = *(_OWORD *)(a1 + 184);
  v582 = v415;
  v583 = *(_QWORD *)(a1 + 208);
  v584 = v416;
  v585 = v418;
  v586 = v419;
  v587 = *(_OWORD *)(a1 + 232);
  v588 = *(_QWORD *)(a1 + 248);
  v589 = v417;
  v423 = sub_23AA92C18((uint64_t)&v570);
  v424 = v526;
  sub_23AA8EFC8(v402, v526, (uint64_t *)&unk_2542E6B00);
  if ((v423 & 1) != 0)
  {
    sub_23AA8A05C(v424, (uint64_t *)&unk_2542E6B00);
    v409 = v563;
  }
  else
  {
    v425 = *(unsigned __int8 *)(v424 + *(int *)(v404 + 48) + v565[10]);
    sub_23AA8A05C(v424, (uint64_t *)&unk_2542E6B00);
    v409 = v563;
    if (v425)
      v409 = v563 | 0x4000000;
  }
LABEL_165:
  v426 = *(_WORD *)(a1 + 44);
  v427 = *(_BYTE *)(a1 + 46);
  v428 = *(_WORD *)(a1 + 48);
  v429 = *(_BYTE *)(a1 + 136);
  v430 = *(_DWORD *)(a1 + 144);
  v431 = *(_QWORD *)(a1 + 200);
  v432 = *(_QWORD *)(a1 + 216);
  v433 = *(_DWORD *)(a1 + 256);
  v434 = *(_BYTE *)(a1 + 224) & 1;
  v435 = *(_BYTE *)(a1 + 225) & 1;
  LODWORD(v570) = *(_DWORD *)(a1 + 40);
  BYTE6(v570) = v427;
  WORD2(v570) = v426;
  LOWORD(v571) = v428;
  v436 = *(_OWORD *)(a1 + 72);
  v572 = *(_OWORD *)(a1 + 56);
  v573 = v436;
  v437 = *(_OWORD *)(a1 + 104);
  v574 = *(_OWORD *)(a1 + 88);
  v575 = v437;
  v576 = *(_OWORD *)(a1 + 120);
  v577 = v429;
  v578 = v430;
  v438 = *(_OWORD *)(a1 + 168);
  v579 = *(_OWORD *)(a1 + 152);
  v580 = v438;
  v581 = *(_OWORD *)(a1 + 184);
  v582 = v431;
  v583 = *(_QWORD *)(a1 + 208);
  v584 = v432;
  v585 = v434;
  v586 = v435;
  v587 = *(_OWORD *)(a1 + 232);
  v588 = *(_QWORD *)(a1 + 248);
  v589 = v433;
  v439 = sub_23AA92C00((uint64_t)&v570);
  sub_23AA8EFC8(v402, v408, (uint64_t *)&unk_2542E6B00);
  if (!v439)
  {
    sub_23AA8A05C(v408, (uint64_t *)&unk_2542E6B00);
LABEL_170:
    v442 = *(_WORD *)(a1 + 44);
    v443 = *(_BYTE *)(a1 + 46);
    v444 = *(_WORD *)(a1 + 48);
    v445 = *(_BYTE *)(a1 + 136);
    v446 = *(_DWORD *)(a1 + 144);
    v447 = *(_QWORD *)(a1 + 200);
    v448 = *(_QWORD *)(a1 + 216);
    v449 = *(_DWORD *)(a1 + 256);
    v450 = *(_BYTE *)(a1 + 224) & 1;
    v451 = *(_BYTE *)(a1 + 225) & 1;
    LODWORD(v570) = *(_DWORD *)(a1 + 40);
    BYTE6(v570) = v443;
    WORD2(v570) = v442;
    LOWORD(v571) = v444;
    v452 = *(_OWORD *)(a1 + 72);
    v572 = *(_OWORD *)(a1 + 56);
    v573 = v452;
    v453 = *(_OWORD *)(a1 + 104);
    v574 = *(_OWORD *)(a1 + 88);
    v575 = v453;
    v576 = *(_OWORD *)(a1 + 120);
    v577 = v445;
    v578 = v446;
    v454 = *(_OWORD *)(a1 + 168);
    v579 = *(_OWORD *)(a1 + 152);
    v580 = v454;
    v581 = *(_OWORD *)(a1 + 184);
    v582 = v447;
    v583 = *(_QWORD *)(a1 + 208);
    v584 = v448;
    v585 = v450;
    v586 = v451;
    v587 = *(_OWORD *)(a1 + 232);
    v588 = *(_QWORD *)(a1 + 248);
    v589 = v449;
    v455 = sub_23AA92C00((uint64_t)&v570);
    sub_23AA8EFC8(v402, v406, (uint64_t *)&unk_2542E6B00);
    v441 = v562;
    if ((v455 & 1) != 0)
    {
      sub_23AA8A05C(v406, (uint64_t *)&unk_2542E6B00);
      if (!*(_QWORD *)(a1 + 216))
        goto LABEL_180;
    }
    else
    {
      v461 = *(unsigned __int8 *)(v406 + *(int *)(v404 + 48) + v565[9]);
      sub_23AA8A05C(v406, (uint64_t *)&unk_2542E6B00);
      if (v461)
        v409 |= 0x10000000uLL;
      if (!*(_QWORD *)(a1 + 216))
        goto LABEL_180;
    }
    goto LABEL_172;
  }
  v440 = *(_BYTE *)(v408 + *(int *)(v404 + 48) + v565[9]);
  sub_23AA8A05C(v408, (uint64_t *)&unk_2542E6B00);
  if ((v440 & 1) != 0)
    goto LABEL_170;
  v409 |= 0x8000000uLL;
  v441 = v562;
  if (!*(_QWORD *)(a1 + 216))
  {
LABEL_180:
    v458 = v565;
    if (*(_QWORD *)&v441[v565[37] + 8])
      v409 |= 0x80000000uLL;
    goto LABEL_188;
  }
LABEL_172:
  v456 = sub_23B1C63B0();
  v458 = v565;
  v459 = &v441[v565[37]];
  v460 = *((_QWORD *)v459 + 1);
  if (!v457)
  {
    if (!v460)
      goto LABEL_188;
LABEL_187:
    v409 |= 0x80000000uLL;
    goto LABEL_188;
  }
  if (!v460)
  {
    swift_bridgeObjectRelease();
    goto LABEL_187;
  }
  if (v456 == *(_QWORD *)v459 && v457 == v460)
  {
    swift_bridgeObjectRelease();
    goto LABEL_188;
  }
  v462 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  if ((v462 & 1) == 0)
    goto LABEL_187;
LABEL_188:
  v463 = *(_WORD *)(a1 + 44);
  v464 = *(_BYTE *)(a1 + 46);
  v465 = *(_WORD *)(a1 + 48);
  v466 = *(_BYTE *)(a1 + 136);
  v467 = *(_DWORD *)(a1 + 144);
  v468 = *(_QWORD *)(a1 + 200);
  v469 = *(_QWORD *)(a1 + 216);
  v470 = *(_DWORD *)(a1 + 256);
  v471 = *(_BYTE *)(a1 + 224) & 1;
  v472 = *(_BYTE *)(a1 + 225) & 1;
  LODWORD(v570) = *(_DWORD *)(a1 + 40);
  BYTE6(v570) = v464;
  WORD2(v570) = v463;
  LOWORD(v571) = v465;
  v473 = *(_OWORD *)(a1 + 72);
  v572 = *(_OWORD *)(a1 + 56);
  v573 = v473;
  v474 = *(_OWORD *)(a1 + 104);
  v574 = *(_OWORD *)(a1 + 88);
  v575 = v474;
  v576 = *(_OWORD *)(a1 + 120);
  v577 = v466;
  v578 = v467;
  v475 = *(_OWORD *)(a1 + 168);
  v579 = *(_OWORD *)(a1 + 152);
  v580 = v475;
  v581 = *(_OWORD *)(a1 + 184);
  v582 = v468;
  v583 = *(_QWORD *)(a1 + 208);
  v584 = v469;
  v585 = v471;
  v586 = v472;
  v587 = *(_OWORD *)(a1 + 232);
  v588 = *(_QWORD *)(a1 + 248);
  v589 = v470;
  v476 = sub_23AA92C24((uint64_t)&v570);
  sub_23AA8EFC8(v402, v407, (uint64_t *)&unk_2542E6B00);
  if (v476)
  {
    v477 = *(_BYTE *)(v407 + *(int *)(v404 + 48) + v458[18]);
    sub_23AA8A05C(v407, (uint64_t *)&unk_2542E6B00);
    if ((v477 & 1) == 0)
    {
      v409 |= 0x100000000uLL;
LABEL_194:
      v493 = v565;
      goto LABEL_197;
    }
  }
  else
  {
    sub_23AA8A05C(v407, (uint64_t *)&unk_2542E6B00);
  }
  v478 = *(_WORD *)(a1 + 44);
  v479 = *(_BYTE *)(a1 + 46);
  v480 = *(_WORD *)(a1 + 48);
  v481 = *(_BYTE *)(a1 + 136);
  v482 = *(_DWORD *)(a1 + 144);
  v483 = *(_QWORD *)(a1 + 200);
  v484 = *(_QWORD *)(a1 + 216);
  v485 = *(_DWORD *)(a1 + 256);
  v486 = *(_BYTE *)(a1 + 224) & 1;
  v487 = *(_BYTE *)(a1 + 225) & 1;
  LODWORD(v570) = *(_DWORD *)(a1 + 40);
  BYTE6(v570) = v479;
  WORD2(v570) = v478;
  LOWORD(v571) = v480;
  v488 = *(_OWORD *)(a1 + 72);
  v572 = *(_OWORD *)(a1 + 56);
  v573 = v488;
  v489 = *(_OWORD *)(a1 + 104);
  v574 = *(_OWORD *)(a1 + 88);
  v575 = v489;
  v576 = *(_OWORD *)(a1 + 120);
  v577 = v481;
  v578 = v482;
  v490 = *(_OWORD *)(a1 + 168);
  v579 = *(_OWORD *)(a1 + 152);
  v580 = v490;
  v581 = *(_OWORD *)(a1 + 184);
  v582 = v483;
  v583 = *(_QWORD *)(a1 + 208);
  v584 = v484;
  v585 = v486;
  v586 = v487;
  v587 = *(_OWORD *)(a1 + 232);
  v588 = *(_QWORD *)(a1 + 248);
  v589 = v485;
  v491 = sub_23AA92C24((uint64_t)&v570);
  v492 = v527;
  sub_23AA8EFC8(v402, v527, (uint64_t *)&unk_2542E6B00);
  if ((v491 & 1) != 0)
  {
    sub_23AA8A05C(v492, (uint64_t *)&unk_2542E6B00);
    goto LABEL_194;
  }
  v494 = v565;
  v495 = *(unsigned __int8 *)(v492 + *(int *)(v404 + 48) + v565[18]);
  sub_23AA8A05C(v492, (uint64_t *)&unk_2542E6B00);
  v493 = v494;
  if (v495)
    v409 |= 0x200000000uLL;
LABEL_197:
  v496 = v549;
  v497 = *(_QWORD *)(a1 + 240);
  if ((v441[v493[20]] & 1) == 0 && v497 != qword_23B1DA648[v441[v493[21]]])
    v409 |= 0x400000000uLL;
  v498 = *(_WORD *)(a1 + 44);
  v499 = *(_BYTE *)(a1 + 46);
  v500 = *(_WORD *)(a1 + 48);
  v501 = *(_BYTE *)(a1 + 136);
  v502 = *(_DWORD *)(a1 + 144);
  v503 = *(_QWORD *)(a1 + 200);
  v504 = *(_QWORD *)(a1 + 216);
  v505 = *(_QWORD *)(a1 + 232);
  v506 = *(_DWORD *)(a1 + 256);
  v507 = *(_BYTE *)(a1 + 224) & 1;
  v508 = *(_BYTE *)(a1 + 225) & 1;
  LODWORD(v570) = *(_DWORD *)(a1 + 40);
  BYTE6(v570) = v499;
  WORD2(v570) = v498;
  LOWORD(v571) = v500;
  v509 = *(_OWORD *)(a1 + 72);
  v572 = *(_OWORD *)(a1 + 56);
  v573 = v509;
  v510 = *(_OWORD *)(a1 + 104);
  v574 = *(_OWORD *)(a1 + 88);
  v575 = v510;
  v576 = *(_OWORD *)(a1 + 120);
  v577 = v501;
  v578 = v502;
  v511 = *(_OWORD *)(a1 + 168);
  v579 = *(_OWORD *)(a1 + 152);
  v580 = v511;
  v581 = *(_OWORD *)(a1 + 184);
  v582 = v503;
  v583 = *(_QWORD *)(a1 + 208);
  v584 = v504;
  v585 = v507;
  v586 = v508;
  *(_QWORD *)&v587 = v505;
  *((_QWORD *)&v587 + 1) = v497;
  v588 = *(_QWORD *)(a1 + 248);
  v589 = v506;
  if (sub_23AA92C30((uint64_t)&v570))
  {
    v512 = (uint64_t *)(v496 + OBJC_IVAR____TtC9libfssync4FPCK_totalDatalessItems);
    swift_beginAccess();
    v513 = *v512 + 1;
    if (!__OFADD__(*v512, 1))
      goto LABEL_205;
    __break(1u);
  }
  v512 = (uint64_t *)(v496 + OBJC_IVAR____TtC9libfssync4FPCK_totalMaterializedItems);
  swift_beginAccess();
  v513 = *v512 + 1;
  if (__OFADD__(*v512, 1))
  {
LABEL_214:
    __break(1u);
    JUMPOUT(0x23ADD13B8);
  }
LABEL_205:
  *v512 = v513;
  v514 = *(_QWORD *)(a1 + 56);
  v515 = (_QWORD *)(v496 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedFileSizes);
  swift_beginAccess();
  if (__OFADD__(*v515, v514))
  {
    __break(1u);
    goto LABEL_213;
  }
  *v515 += v514;
  v516 = *(_QWORD *)(a1 + 168);
  v517 = (_QWORD *)(v496 + OBJC_IVAR____TtC9libfssync4FPCK_accumulatedSizeOfDisk);
  swift_beginAccess();
  if (__OFADD__(*v517, v516))
  {
LABEL_213:
    __break(1u);
    goto LABEL_214;
  }
  *v517 += v516;
  return v409;
}

uint64_t sub_23ADD13E8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _DWORD v72[10];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  int v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE v96[496];
  uint64_t v97;

  v80 = a5;
  v95 = a2;
  sub_23AA724E8(a3, (uint64_t)v96, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v96, (uint64_t)&v97, &qword_2542E5050);
  v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v8 = MEMORY[0x24BDAC7A8](v94);
  v81 = (char *)v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v82 = (char *)v72 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v89 = (char *)v72 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v93 = (char *)v72 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v78 = (char *)v72 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v79 = (char *)v72 - v18;
  v87 = sub_23B1C7328();
  v83 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v84 = (char *)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_23B1C5BDC();
  v86 = *(_QWORD *)(v88 - 8);
  v20 = MEMORY[0x24BDAC7A8](v88);
  v85 = (char *)v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v90 = (char *)v72 - v22;
  v92 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v23 = MEMORY[0x24BDAC7A8](v92);
  v77 = (char *)v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v91 = (char *)v72 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)v72 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v72 - v30;
  v32 = *(_QWORD *)a1;
  v33 = *(unsigned __int8 *)(a1 + 8);
  sub_23AA8EFC8(a1, (uint64_t)v72 - v30, (uint64_t *)&unk_2542E6B00);
  if (v33 == 2 && !v32)
  {
    sub_23AA8A05C((uint64_t)v31, (uint64_t *)&unk_2542E6B00);
    return 0;
  }
  v34 = *(_QWORD *)v31;
  v35 = v31[8];
  sub_23AA8A05C((uint64_t)v31, (uint64_t *)&unk_2542E6B00);
  if (v35 < 2 || v34 == 0)
  {
    v72[7] = a4;
    v37 = a1 + *(int *)(v92 + 48);
    v75 = type metadata accessor for ItemMetadata();
    v76 = v37;
    v38 = (uint64_t *)(v37 + *(int *)(v75 + 56));
    v40 = *v38;
    v39 = v38[1];
    sub_23AA8EFC8(a1, (uint64_t)v29, (uint64_t *)&unk_2542E6B00);
    v73 = a3;
    v74 = a1;
    if (v39)
    {
      v41 = v39;
    }
    else
    {
      v40 = *((_QWORD *)v29 + 16);
      v41 = *((_QWORD *)v29 + 17);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_23AA8A05C((uint64_t)v29, (uint64_t *)&unk_2542E6B00);
    v43 = *(_QWORD *)(v95 + 80);
    v42 = *(_QWORD *)(v95 + 88);
    swift_bridgeObjectRetain();
    v44 = sub_23AAAE580(v40, v41);
    v46 = v45;
    swift_bridgeObjectRelease();
    if (v46)
    {
      if (v44 == 12565487 && v46 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_17:
        swift_bridgeObjectRetain();
        v48 = sub_23B1C64B8();
        v49 = sub_23AA8A1BC(v48, v40, v41);
        v51 = v50;
        v53 = v52;
        v55 = v54;
        swift_bridgeObjectRelease();
        v40 = MEMORY[0x23B85ED8C](v49, v51, v53, v55);
        v57 = v56;
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      v47 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v47 & 1) != 0)
        goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    v57 = v41;
LABEL_19:
    swift_bridgeObjectRetain();
    v58 = sub_23AAAE580(v43, v42);
    v60 = v59;
    swift_bridgeObjectRelease();
    if (v60)
    {
      if (v58 == 12565487 && v60 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_24:
        swift_bridgeObjectRetain();
        v62 = sub_23B1C64B8();
        v63 = sub_23AA8A1BC(v62, v43, v42);
        v65 = v64;
        v67 = v66;
        v69 = v68;
        swift_bridgeObjectRelease();
        v43 = MEMORY[0x23B85ED8C](v63, v65, v67, v69);
        v42 = v70;
        swift_bridgeObjectRelease();
LABEL_26:
        if (v40 == v43 && v57 == v42)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        __asm { BR              X13 }
      }
      v61 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      if ((v61 & 1) != 0)
        goto LABEL_24;
    }
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  return 0;
}

uint64_t sub_23ADD213C(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  return sub_23ADEFB8C(a1, a2, a3, a4);
}

void sub_23ADD2150()
{
  sub_23ADEFAD4();
}

uint64_t sub_23ADD2218()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  void *v15;
  void *v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  id v19;
  uint64_t result;
  char *v21;
  id v22;
  void *v23;
  char *v24;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - v5;
  v7 = sub_23B1C5A08();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v24 = (char *)&v24 - v12;
  v13 = v0 + OBJC_IVAR____TtC9libfssync4FPCK_rootURL;
  swift_beginAccess();
  sub_23AA8EFC8(v13, (uint64_t)v6, (uint64_t *)&unk_2542E6740);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_23B1C5954();
  v17 = v6;
  v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v17, v7);
  v19 = objc_msgSend(v15, sel_fp_supportDirectoryForVolume_, v16);

  if (!v19)
  {
LABEL_8:
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
    goto LABEL_9;
  }
  sub_23B1C59CC();

  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v4, v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v4, 1, v7);
  if ((_DWORD)result == 1)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v21 = v24;
  sub_23B1C5978();
  v18(v4, v7);
  if (qword_2569E12B0 != -1)
    swift_once();
  v22 = (id)qword_2569E5010;
  v23 = (void *)sub_23B1C5954();
  objc_msgSend(v22, sel_purgeAndWaitAtUrl_, v23);

  return ((uint64_t (*)(char *, uint64_t))v18)(v21, v7);
}

uint64_t sub_23ADD24CC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23B1C58E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C5A08();
  v9 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v0;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker])
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDCD798], v4);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v3, 1, 1, v8);
    swift_retain();
    sub_23B1C59F0();
    type metadata accessor for SQLBackupManifest();
    swift_allocObject();
    v13 = v21;
    v14 = sub_23ABDDE6C((uint64_t)v12);
    if (!v13)
    {
      v15 = v14;
      v16 = (_QWORD *)swift_allocObject();
      v17 = v20;
      v16[2] = v20;
      v16[3] = v15;
      v18 = v17;
      swift_retain();
      sub_23AF4289C(1, (uint64_t)sub_23ADF3118, v16);
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23ADD26D8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t result;
  int v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  char v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  int v32;
  id v33;
  char v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  _BYTE *v39;
  unint64_t v40;
  void (*v41)(_QWORD *@<X8>);
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  char v69;
  uint64_t v70;
  void *v71;
  id v72;
  _BYTE *v73;
  char v74;
  uint64_t v75;
  int v76;
  char v77;
  _BYTE v78[4];
  int v79;
  unint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;

  v83 = a1;
  v8 = sub_23B1C545C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v78[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v82 = &v78[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v78[-v16];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v78[-v18];
  v81 = a4;
  result = sub_23ADC4054();
  if ((result & 1) == 0)
    return result;
  if ((a2 & 1) == 0)
    return result;
  v21 = *(unsigned __int8 *)(v83 + 8);
  if (v21 == 2 && !*(_QWORD *)v83)
    return result;
  if (*(_BYTE *)(v83 + 8))
  {
    v79 = 0;
    v80 = 0xE000000000000000;
    if (v21 == 1)
      goto LABEL_7;
    goto LABEL_15;
  }
  MEMORY[0x24BDAC7A8](result);
  *(_QWORD *)&v78[-16] = a5;
  *(_DWORD *)&v78[-8] = v30;
  v23 = v86;
  result = sub_23B135A84(5, (uint64_t)sub_23ADF3148, (uint64_t)&v78[-32]);
  if (!v23)
  {
    v79 = v32;
    v80 = v31;
    v86 = 0;
    if (*(_BYTE *)(v83 + 8) == 1)
    {
LABEL_7:
      MEMORY[0x24BDAC7A8](result);
      *(_QWORD *)&v78[-16] = a5;
      *(_QWORD *)&v78[-8] = v22;
      v23 = v86;
      sub_23B135A84(5, (uint64_t)sub_23ADF3130, (uint64_t)&v78[-32]);
      if (!v23)
      {
        v26 = v24;
        v27 = v25;
        v86 = 0;
        swift_bridgeObjectRelease();
        v28 = 1;
        v29 = 2;
        v79 = v27;
        v80 = v26;
        goto LABEL_16;
      }
      goto LABEL_11;
    }
LABEL_15:
    v28 = 1;
    v29 = 2;
    goto LABEL_16;
  }
  v79 = 0;
  v80 = 0xE000000000000000;
LABEL_11:
  v33 = v23;
  sub_23B1C536C();
  sub_23AA7E38C((unint64_t *)&qword_2569E29D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEA8]);
  v34 = sub_23B1C575C();

  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  if ((v34 & 1) == 0)
    return swift_bridgeObjectRelease();

  v28 = 0;
  v86 = 0;
  v29 = 3;
LABEL_16:
  v35 = v83;
  v36 = *(unsigned __int8 *)(v83 + *(int *)(v12 + 48));
  sub_23AA8EFC8(v83, (uint64_t)v19, (uint64_t *)&unk_2542E6B00);
  if (v36 == 1)
  {
    sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542E6B00);
    sub_23AA8EFC8(v35, (uint64_t)v17, (uint64_t *)&unk_2542E6B00);
LABEL_19:
    sub_23AA8A05C((uint64_t)v17, (uint64_t *)&unk_2542E6B00);
    v38 = v35;
    v39 = v82;
    sub_23AA8EFC8(v38, (uint64_t)v82, (uint64_t *)&unk_2542E6B00);
LABEL_20:
    sub_23AA8A05C((uint64_t)v39, (uint64_t *)&unk_2542E6B00);
    if ((v28 & 1) != 0)
      return swift_bridgeObjectRelease();
    v40 = 1;
    goto LABEL_23;
  }
  v37 = v19[*(int *)(v12 + 48)];
  sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542E6B00);
  sub_23AA8EFC8(v35, (uint64_t)v17, (uint64_t *)&unk_2542E6B00);
  if (v37 == 2)
    goto LABEL_19;
  v73 = &v17[*(int *)(v12 + 48)];
  v74 = v73[*(int *)(type metadata accessor for ItemMetadata() + 80)];
  sub_23AA8A05C((uint64_t)v17, (uint64_t *)&unk_2542E6B00);
  v75 = v35;
  v39 = v82;
  sub_23AA8EFC8(v75, (uint64_t)v82, (uint64_t *)&unk_2542E6B00);
  if ((v74 & 1) != 0)
    goto LABEL_20;
  v76 = *((_DWORD *)v39 + 10);
  sub_23AA8A05C((uint64_t)v39, (uint64_t *)&unk_2542E6B00);
  if (v76 == v79)
    v77 = v28;
  else
    v77 = 0;
  if (v76 == v79)
    v40 = 1;
  else
    v40 = v29;
  if ((v77 & 1) != 0)
    return swift_bridgeObjectRelease();
LABEL_23:
  v41 = 0;
  v42 = (uint64_t *)(v81 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredBackupManifestVsFSSnapshotDiffCounters);
  v82 = (_BYTE *)v40;
  do
  {
    v43 = __clz(__rbit64(v40));
    v44 = v40 & ~(1 << v43);
    if (((1 << v43) & v40) == 0)
      v44 = v40;
    if (v43 >= 0x40)
      v45 = 0;
    else
      v45 = 1 << v43;
    if (v43 < 0x40)
      v40 = v44;
    swift_beginAccess();
    sub_23AAB7948((uint64_t)v41);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v84 = *v42;
    v47 = v84;
    *v42 = 0x8000000000000000;
    v49 = sub_23ACD61E8(v45);
    v50 = *(_QWORD *)(v47 + 16);
    v51 = (v48 & 1) == 0;
    v52 = v50 + v51;
    if (__OFADD__(v50, v51))
    {
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    v53 = v48;
    if (*(_QWORD *)(v47 + 24) >= v52)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23B18B250();
        v47 = v84;
      }
    }
    else
    {
      sub_23AD189B4(v52, isUniquelyReferenced_nonNull_native);
      v47 = v84;
      v54 = sub_23ACD61E8(v45);
      if ((v53 & 1) != (v55 & 1))
        goto LABEL_63;
      v49 = v54;
    }
    *v42 = v47;
    swift_bridgeObjectRelease();
    v56 = (_QWORD *)*v42;
    if ((v53 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v56[(v49 >> 6) + 8] |= 1 << v49;
      v57 = 8 * v49;
      *(_QWORD *)(v56[6] + v57) = v45;
      *(_QWORD *)(v56[7] + v57) = 0;
      v58 = v56[2];
      v59 = v58 + 1;
      v60 = __OFADD__(v58, 1);
      swift_bridgeObjectRetain();
      if (v60)
        goto LABEL_61;
      v56[2] = v59;
    }
    v61 = v56[7];
    v62 = *(_QWORD *)(v61 + 8 * v49);
    v63 = __OFADD__(v62, 1);
    v64 = v62 + 1;
    if (v63)
      goto LABEL_60;
    *(_QWORD *)(v61 + 8 * v49) = v64;
    swift_endAccess();
    swift_bridgeObjectRelease();
    v41 = sub_23AAED18C;
  }
  while (v40);
  v65 = v81;
  v66 = (_QWORD *)(v81 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInBackupManifestCheck);
  swift_beginAccess();
  if (!__OFADD__(*v66, 1))
  {
    ++*v66;
    v67 = *(void (**)(uint64_t, uint64_t))(v65 + OBJC_IVAR____TtC9libfssync4FPCK_resultHandler);
    v68 = *(_QWORD *)(v83 + 16);
    v69 = *(_BYTE *)(v83 + 24);
    swift_retain();
    v84 = sub_23AA96F18(v68, v69);
    v85 = v70;
    sub_23B1C64F4();
    swift_bridgeObjectRetain();
    v71 = (void *)sub_23B1C63BC();
    v72 = objc_msgSend(v71, sel_fp_obfuscatedFilename);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF162DC((unint64_t)v82);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v67(v84, v85);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_62:
  __break(1u);
LABEL_63:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23ADD2DC0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23ADD2E18(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  result = 0;
  if (a1 > 0x1FFFFFFF)
  {
    if (a1 > 0x7FFFFFFFFFFLL)
    {
      if (a1 <= 0x3FFFFFFFFFFFFLL)
      {
        if (a1 <= 0x3FFFFFFFFFFFLL)
        {
          if (a1 == 0x80000000000)
            return 0xD000000000000018;
          v3 = 0x100000000000;
          v4 = 0xD000000000000016;
          v5 = 0x200000000000;
          v6 = 0xD000000000000020;
        }
        else
        {
          if (a1 > 0xFFFFFFFFFFFFLL)
          {
            v3 = 0x1000000000000;
            v4 = 0xD000000000000024;
            v5 = 0x2000000000000;
          }
          else
          {
            v3 = 0x400000000000;
            v4 = 0xD000000000000016;
            v5 = 0x800000000000;
          }
          v6 = 0xD000000000000021;
        }
        goto LABEL_88;
      }
      if (a1 <= 0x1FFFFFFFFFFFFFLL)
      {
        switch(a1)
        {
          case 0x4000000000000:
            return 0xD000000000000023;
          case 0x8000000000000:
            return 0x797375625F736168;
          case 0x10000000000000:
            return 0xD00000000000001CLL;
        }
        return result;
      }
      if (a1 <= 0x7FFFFFFFFFFFFFLL)
      {
        v3 = 0x20000000000000;
        v4 = 0xD000000000000020;
        v5 = 0x40000000000000;
        v6 = 0xD000000000000022;
        goto LABEL_88;
      }
      v16 = 0x80000000000000;
      if (a1 == 0x100000000000000)
        v17 = 0xD000000000000019;
      else
        v17 = 0;
    }
    else
    {
      if (a1 <= 0xFFFFFFFFFLL)
      {
        if (a1 <= 0xFFFFFFFFLL)
        {
          if (a1 == 0x20000000)
            return 0xD000000000000018;
          v3 = 0x40000000;
          v4 = 0xD000000000000019;
          v5 = 0x80000000;
          v6 = 0xD00000000000001FLL;
        }
        else if (a1 > 0x3FFFFFFFFLL)
        {
          v3 = 0x400000000;
          v4 = 0xD000000000000019;
          v5 = 0x800000000;
          v6 = 0xD000000000000036;
        }
        else
        {
          v3 = 0x100000000;
          v4 = 0xD000000000000020;
          v5 = 0x200000000;
          v6 = 0xD000000000000024;
        }
        goto LABEL_88;
      }
      if (a1 <= 0x7FFFFFFFFFLL)
      {
        if (a1 == 0x1000000000)
          return 0xD000000000000019;
        v3 = 0x2000000000;
        v4 = 0xD00000000000001ELL;
        v5 = 0x4000000000;
        v6 = 0xD00000000000001FLL;
        goto LABEL_88;
      }
      if (a1 <= 0x1FFFFFFFFFFLL)
      {
        v3 = 0x8000000000;
        v4 = 0xD00000000000001ELL;
        v5 = 0x10000000000;
        v6 = 0xD00000000000002ALL;
LABEL_88:
        if (a1 != v5)
          v6 = 0;
        if (a1 == v3)
          return v4;
        else
          return v6;
      }
      v16 = 0x20000000000;
      if (a1 == 0x40000000000)
        v17 = 0xD00000000000001ALL;
      else
        v17 = 0;
    }
    if (a1 == v16)
      return 0xD00000000000001ALL;
    else
      return v17;
  }
  if (a1 < 0x4000)
  {
    if (a1 > 127)
    {
      if (a1 <= 1023)
      {
        v13 = 0xD00000000000001ALL;
        if (a1 != 512)
          v13 = 0;
        if (a1 == 256)
          v13 = 0xD000000000000014;
        if (a1 == 128)
          return 0xD000000000000014;
        else
          return v13;
      }
      else
      {
        v9 = 0xD00000000000001CLL;
        if (a1 == 0x2000)
          v10 = 0xD00000000000001CLL;
        else
          v10 = 0;
        if (a1 == 4096)
          v10 = 0xD00000000000001ALL;
        v11 = 0xD000000000000019;
        if (a1 != 2048)
          v9 = 0;
        if (a1 != 1024)
          v11 = v9;
        if (a1 <= 4095)
          return v11;
        else
          return v10;
      }
    }
    else
    {
      switch(a1)
      {
        case 1:
          result = 0x6F6E5F646C756F63;
          break;
        case 2:
          result = 0xD000000000000019;
          break;
        case 4:
          result = 0xD00000000000001ELL;
          break;
        case 8:
          result = 0xD000000000000023;
          break;
        case 16:
          result = 0xD000000000000022;
          break;
        case 32:
          result = 0xD00000000000001ALL;
          break;
        case 64:
          result = 0xD00000000000001FLL;
          break;
        default:
          return result;
      }
    }
    return result;
  }
  if (a1 >= 0x200000)
  {
    if (a1 <= 0xFFFFFF)
    {
      v7 = 0xD00000000000001BLL;
      v14 = 0xD00000000000001ALL;
      if (a1 != 0x800000)
        v14 = 0;
      if (a1 != 0x400000)
        v7 = v14;
      v8 = a1 == 0x200000;
      goto LABEL_69;
    }
    if (a1 > 0x7FFFFFF)
    {
      v3 = 0x8000000;
      v4 = 0xD000000000000016;
      v5 = 0x10000000;
      v6 = 0xD000000000000014;
    }
    else
    {
      v3 = 0x1000000;
      v4 = 0xD00000000000002ALL;
      v5 = 0x4000000;
      v6 = 0xD000000000000011;
    }
    goto LABEL_88;
  }
  if (a1 < 0x20000)
  {
    v12 = 0xD00000000000001ELL;
    if (a1 != 0x10000)
      v12 = 0;
    if (a1 == 0x8000)
      v12 = 0xD00000000000001DLL;
    if (a1 == 0x4000)
      return 0xD00000000000001FLL;
    else
      return v12;
  }
  else
  {
    if (a1 < 0x80000)
    {
      v7 = 0xD000000000000011;
      if (a1 != 0x40000)
        v7 = 0;
      v8 = a1 == 0x20000;
LABEL_69:
      if (v8)
        return 0xD000000000000010;
      else
        return v7;
    }
    v15 = 0x7974706D655F7369;
    if (a1 != 0x100000)
      v15 = 0;
    if (a1 == 0x80000)
      return 0x5F656469735F7369;
    else
      return v15;
  }
}

uint64_t sub_23ADD3654()
{
  uint64_t *v0;

  return sub_23ADD2E18(*v0);
}

uint64_t sub_23ADD365C(uint64_t a1, uint64_t a2)
{
  return sub_23ADD44EC(a1, a2, (void (*)(uint64_t))MEMORY[0x24BEE42F8]);
}

uint64_t sub_23ADD3668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23ADD453C(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BEE42F8]);
}

uint64_t sub_23ADD3674()
{
  unint64_t *v0;

  return sub_23AF16770(*v0);
}

uint64_t sub_23ADD367C()
{
  uint64_t *v0;

  return sub_23AFD4F18(*v0);
}

unint64_t sub_23ADD3684(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 1;
  result = 0xD000000000000021;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0xD000000000000021;
      break;
    case 3:
      result = 0xD000000000000015;
      break;
    case 7:
    case 31:
      result = 0xD000000000000018;
      break;
    case 15:
      result = 0x75705F7261656C63;
      break;
    case 63:
      result = 0xD000000000000023;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

unint64_t sub_23ADD376C()
{
  uint64_t *v0;

  return sub_23ADD3684(*v0);
}

unint64_t sub_23ADD3774(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  BOOL v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  if (a1 < 0x40000)
  {
    if (a1 > 511)
    {
      if (a1 < 0x2000)
      {
        v20 = 0xD000000000000012;
        v21 = 0xD000000000000018;
        if (a1 != 4096)
          v21 = 0;
        if (a1 != 2048)
          v20 = v21;
        v22 = 0xD000000000000017;
        if (a1 != 1024)
          v22 = 0;
        if (a1 == 512)
          v22 = 0xD000000000000015;
        if (a1 <= 2047)
          return v22;
        else
          return v20;
      }
      else
      {
        if (a1 < 0x8000)
        {
          v13 = 0xD000000000000013;
          v14 = 0xD000000000000021;
          if (a1 != 0x4000)
            v14 = 0;
          v15 = a1 == 0x2000;
        }
        else
        {
          v13 = 0xD00000000000002ALL;
          v14 = 0xD00000000000002BLL;
          if (a1 != 0x20000)
            v14 = 0;
          if (a1 == 0x10000)
            v14 = 0xD00000000000002ALL;
          v15 = a1 == 0x8000;
        }
        if (v15)
          return v13;
        else
          return v14;
      }
    }
    else
    {
      v7 = a1 - 1;
      result = 0;
      switch(v7)
      {
        case 0:
          result = 0xD000000000000021;
          break;
        case 1:
          result = 0xD000000000000013;
          break;
        case 2:
        case 4:
        case 5:
        case 6:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 28:
        case 29:
        case 30:
        case 32:
        case 33:
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
          return result;
        case 3:
          result = 0xD000000000000014;
          break;
        case 7:
          result = 0x6E65726566666964;
          break;
        case 15:
          result = 0xD000000000000023;
          break;
        case 31:
          result = 0xD000000000000017;
          break;
        case 63:
          result = 0xD000000000000018;
          break;
        default:
          result = 0;
          break;
      }
    }
  }
  else
  {
    if (a1 > 0x7FFFFFF)
    {
      if (a1 <= 0xFFFFFFFFLL)
      {
        if (a1 <= 0x1FFFFFFF)
        {
          if (a1 == 0x10000000)
            v23 = 0xD000000000000028;
          else
            v23 = 0;
          if (a1 == 0x8000000)
            return 0xD000000000000028;
          else
            return v23;
        }
        v1 = 0x20000000;
        v2 = 0xD000000000000021;
        v3 = 0x40000000;
        v4 = 0xD000000000000025;
        v5 = 0x80000000;
        v6 = 0xD000000000000022;
        goto LABEL_27;
      }
      if (a1 > 0x3FFFFFFFFLL)
      {
        v1 = 0x400000000;
        v2 = 0xD000000000000026;
        v3 = 0x800000000;
        v4 = 0xD00000000000002BLL;
        v5 = 0x1000000000;
        v6 = 0xD000000000000030;
LABEL_27:
        if (a1 != v5)
          v6 = 0;
        if (a1 == v3)
          v6 = v4;
        if (a1 == v1)
          return v2;
        else
          return v6;
      }
      v9 = 0x100000000;
      v10 = 0xD00000000000002FLL;
      if (a1 == 0x200000000)
        v12 = 0xD00000000000002FLL;
      else
        v12 = 0;
LABEL_79:
      if (a1 == v9)
        return v10;
      else
        return v12;
    }
    if (a1 < 0x400000)
    {
      v16 = 0xD00000000000002BLL;
      if (a1 == 0x200000)
        v17 = 0xD000000000000028;
      else
        v17 = 0;
      if (a1 != 0x100000)
        v16 = v17;
      v18 = 0xD00000000000002BLL;
      if (a1 == 0x80000)
        v19 = 0xD00000000000002BLL;
      else
        v19 = 0;
      if (a1 != 0x40000)
        v18 = v19;
      if (a1 < 0x100000)
        return v18;
      else
        return v16;
    }
    else
    {
      if (a1 > 0xFFFFFF)
      {
        v9 = 0x1000000;
        v10 = 0xD000000000000032;
        if (a1 == 0x4000000)
          v11 = 0xD000000000000028;
        else
          v11 = 0;
        if (a1 == 0x2000000)
          v12 = 0xD000000000000028;
        else
          v12 = v11;
        goto LABEL_79;
      }
      v24 = 0xD000000000000032;
      if (a1 != 0x800000)
        v24 = 0;
      if (a1 == 0x400000)
        return 0xD000000000000028;
      else
        return v24;
    }
  }
  return result;
}

unint64_t sub_23ADD3CF8()
{
  uint64_t *v0;

  return sub_23ADD3774(*v0);
}

uint64_t sub_23ADD3D00(uint64_t a1, uint64_t a2)
{
  return sub_23ADD44EC(a1, a2, (void (*)(uint64_t))MEMORY[0x24BEE4318]);
}

uint64_t sub_23ADD3D0C()
{
  return sub_23B1C74D8();
}

uint64_t sub_23ADD3D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23ADD453C(a1, a2, a3, (void (*)(uint64_t))MEMORY[0x24BEE4318]);
}

uint64_t sub_23ADD3D40()
{
  unint64_t *v0;

  return sub_23AF162C0(*v0);
}

uint64_t sub_23ADD3D48()
{
  uint64_t *v0;

  return sub_23AFD4D54(*v0);
}

unint64_t sub_23ADD3D50(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;

  if (a1 >= 0x10000)
  {
    if (a1 > 0x3FFFFFF)
    {
      if (a1 > 0x3FFFFFFF)
      {
        if (a1 > 0xFFFFFFFFLL)
        {
          v19 = 0x100000000;
          v20 = 0xD000000000000025;
          v21 = 0x200000000;
          v22 = 0xD00000000000001CLL;
        }
        else
        {
          v19 = 0x40000000;
          v20 = 0xD00000000000001FLL;
          v21 = 0x80000000;
          v22 = 0xD00000000000001BLL;
        }
      }
      else
      {
        if (a1 <= 0xFFFFFFF)
        {
          if (a1 == 0x8000000)
            v10 = 0xD00000000000002FLL;
          else
            v10 = 0;
          if (a1 == 0x4000000)
            return 0xD00000000000002FLL;
          else
            return v10;
        }
        v19 = 0x10000000;
        v20 = 0xD00000000000002FLL;
        v21 = 0x20000000;
        v22 = 0xD000000000000022;
      }
      if (a1 != v21)
        v22 = 0;
      if (a1 == v19)
        return v20;
      else
        return v22;
    }
    else if (a1 >= 0x100000)
    {
      v11 = 0xD000000000000039;
      if (a1 == 0x2000000)
        v12 = 0xD00000000000002FLL;
      else
        v12 = 0;
      if (a1 == 0x1000000)
        v13 = 0xD000000000000039;
      else
        v13 = v12;
      v14 = 0xD000000000000032;
      if (a1 != 0x800000)
        v11 = 0;
      if (a1 != 0x100000)
        v14 = v11;
      if (a1 <= 0xFFFFFF)
        return v14;
      else
        return v13;
    }
    else
    {
      v3 = 0xD000000000000032;
      if (a1 == 0x80000)
        v4 = 0xD000000000000032;
      else
        v4 = 0;
      if (a1 == 0x40000)
        v4 = 0xD000000000000032;
      v5 = 0xD000000000000031;
      if (a1 != 0x20000)
        v3 = 0;
      if (a1 != 0x10000)
        v5 = v3;
      if (a1 < 0x40000)
        return v5;
      else
        return v4;
    }
  }
  else if (a1 > 255)
  {
    if (a1 > 4095)
    {
      v15 = 0xD000000000000021;
      v16 = 0xD000000000000031;
      if (a1 != 0x8000)
        v16 = 0;
      if (a1 != 0x4000)
        v15 = v16;
      v17 = 0xD000000000000013;
      if (a1 != 0x2000)
        v17 = 0;
      if (a1 == 4096)
        v18 = 0xD000000000000018;
      else
        v18 = v17;
      if (a1 < 0x4000)
        return v18;
      else
        return v15;
    }
    else
    {
      v6 = 0xD000000000000017;
      v7 = 0xD000000000000012;
      if (a1 != 2048)
        v7 = 0;
      if (a1 != 1024)
        v6 = v7;
      v8 = 0xD000000000000017;
      v9 = 0xD000000000000015;
      if (a1 != 512)
        v9 = 0;
      if (a1 != 256)
        v8 = v9;
      if (a1 <= 1023)
        return v8;
      else
        return v6;
    }
  }
  else
  {
    v1 = a1 - 1;
    result = 0;
    switch(v1)
    {
      case 0:
        result = 0xD000000000000028;
        break;
      case 1:
        result = 0xD000000000000013;
        break;
      case 2:
      case 4:
      case 5:
      case 6:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
        return result;
      case 3:
        result = 0xD000000000000014;
        break;
      case 7:
        result = 0x6E65726566666964;
        break;
      case 15:
        result = 0xD000000000000023;
        break;
      case 31:
        result = 0xD000000000000017;
        break;
      case 63:
        result = 0xD000000000000018;
        break;
      default:
        result = 0;
        break;
    }
  }
  return result;
}

unint64_t sub_23ADD421C()
{
  uint64_t *v0;

  return sub_23ADD3D50(*v0);
}

uint64_t sub_23ADD4224()
{
  unint64_t *v0;

  return sub_23AF164D4(*v0);
}

uint64_t sub_23ADD422C()
{
  uint64_t *v0;

  return sub_23AFD4D78(*v0);
}

unint64_t sub_23ADD4234(uint64_t a1)
{
  unint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  result = 0;
  if (a1 <= 127)
  {
    switch(a1)
    {
      case 1:
        result = 0xD000000000000014;
        break;
      case 2:
        result = 0xD000000000000020;
        break;
      case 4:
        result = 0xD00000000000001ELL;
        break;
      case 8:
        result = 0xD000000000000031;
        break;
      case 16:
        result = 0xD000000000000025;
        break;
      case 32:
        result = 0xD000000000000025;
        break;
      case 64:
        result = 0xD000000000000023;
        break;
      default:
        return result;
    }
  }
  else if (a1 > 2047)
  {
    v7 = 0xD000000000000026;
    if (a1 != 0x4000)
      v7 = 0;
    if (a1 == 0x2000)
      v7 = 0xD000000000000015;
    v8 = 0xD000000000000012;
    v9 = 0xD000000000000015;
    if (a1 != 4096)
      v9 = 0;
    if (a1 != 2048)
      v8 = v9;
    if (a1 < 0x2000)
      return v8;
    else
      return v7;
  }
  else
  {
    v3 = 0xD000000000000030;
    if (a1 == 1024)
      v4 = 0xD000000000000012;
    else
      v4 = 0;
    if (a1 != 512)
      v3 = v4;
    v5 = 0xD000000000000023;
    v6 = 0xD000000000000030;
    if (a1 != 256)
      v6 = 0;
    if (a1 != 128)
      v5 = v6;
    if (a1 <= 511)
      return v5;
    else
      return v3;
  }
  return result;
}

unint64_t sub_23ADD445C()
{
  uint64_t *v0;

  return sub_23ADD4234(*v0);
}

uint64_t sub_23ADD4464()
{
  unint64_t *v0;

  return sub_23AF164F0(*v0);
}

uint64_t sub_23ADD446C()
{
  uint64_t *v0;

  return sub_23AFD4D84(*v0);
}

unint64_t sub_23ADD4474(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;

  v1 = 0xD000000000000012;
  v2 = 0xD000000000000025;
  if (a1 != 1)
    v2 = 0;
  if (a1 != 2)
    v1 = v2;
  if (a1 == 4)
    return 0xD000000000000028;
  else
    return v1;
}

unint64_t sub_23ADD44E4()
{
  uint64_t *v0;

  return sub_23ADD4474(*v0);
}

uint64_t sub_23ADD44EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t *v3;
  uint64_t v5;

  v5 = *v3;
  sub_23B1C74A8();
  a3(v5);
  return sub_23B1C74E4();
}

uint64_t sub_23ADD453C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t *v4;
  uint64_t v6;

  v6 = *v4;
  sub_23B1C74A8();
  a4(v6);
  return sub_23B1C74E4();
}

unint64_t sub_23ADD4588()
{
  unint64_t *v0;

  return sub_23AF162DC(*v0);
}

uint64_t sub_23ADD4590()
{
  uint64_t *v0;

  return sub_23AFD4D6C(*v0);
}

void sub_23ADD4598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  id v25;
  id v26;
  NSObject *v27;
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _QWORD *v39;
  uint8_t *v40;
  void (*v41)(char *, uint64_t);
  id v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  void (*v59)(uint64_t);
  uint64_t v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  id v67;
  id v68;
  id v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  id v75;
  char *v76;
  NSObject *v77;
  char *v78;
  id v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  char *v83;
  void (*v84)(uint64_t);
  uint64_t v85;
  void (*v86)(uint64_t);
  uint64_t v87;
  void (*v88)(uint64_t);
  uint64_t v89;
  void (*v90)(uint64_t);
  uint64_t v91;
  id v92;
  char *v93;
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  id v97;
  id v98;
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  void *v102;
  id v103;
  NSObject *v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  NSObject *v116;
  id v117;

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v114 = (char *)&v107 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v107 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v112 = (char *)&v107 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v111 = (char *)&v107 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v110 = (char *)&v107 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v108 = (char *)&v107 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v107 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v107 - v23;
  v25 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v26 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v27 = v25;
  v28 = sub_23B1C5E40();
  v29 = sub_23B1C6AB8();
  v30 = os_log_type_enabled(v28, v29);
  v115 = v6;
  v116 = v27;
  v113 = v11;
  if (v30)
  {
    v31 = swift_slowAlloc();
    v107 = v3;
    v32 = (uint8_t *)v31;
    v33 = swift_slowAlloc();
    v109 = v22;
    v34 = (_QWORD *)v33;
    *(_DWORD *)v32 = 138412290;
    v35 = -[NSObject enter](v27, sel_enter);
    v36 = v1;
    v37 = v2;
    v38 = v35;
    v117 = v35;
    sub_23B1C6CBC();
    *v34 = v38;
    v2 = v37;
    v1 = v36;

    _os_log_impl(&dword_23AA66000, v28, v29, "%@ ✋🏻  invalidating database", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    v39 = v34;
    v22 = v109;
    MEMORY[0x23B8614BC](v39, -1, -1);
    v40 = v32;
    v3 = v107;
    MEMORY[0x23B8614BC](v40, -1, -1);
  }
  else
  {

    v28 = v27;
  }

  v41 = *(void (**)(char *, uint64_t))(v3 + 8);
  v41(v24, v2);
  v42 = *(id *)(v1 + 64);
  sub_23AC494B4(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_23ADF34E0, v1);

  if (qword_2542E6C40 != -1)
    swift_once();
  objc_msgSend((id)qword_2542EDD50, sel_removeWatcher_, v1);
  v43 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v44 = sub_23B1C5E40();
  v45 = sub_23B1C6AB8();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    _os_log_impl(&dword_23AA66000, v44, v45, "disable event aggregation", v46, 2u);
    MEMORY[0x23B8614BC](v46, -1, -1);
  }

  v47 = v2;
  v41(v22, v2);
  v109 = *(char **)(v1 + 32);
  v48 = *(void (**)(uint64_t))(**((_QWORD **)v109 + 2) + 808);
  v49 = swift_retain();
  v48(v49);
  swift_release();
  v50 = *(_QWORD *)(v1 + 40);
  v51 = *(_QWORD **)(v50 + 16);
  v52 = v51[2];
  v51[2] = 0;
  v51[3] = 0;
  swift_retain();
  sub_23AAB7948(v52);
  v53 = v51[6];
  v51[6] = 0;
  v51[7] = 0;
  sub_23AAB7948(v53);
  swift_release();
  v54 = v110;
  if (*(_BYTE *)(v1 + 72) == 1)
  {
    v55 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v56 = sub_23B1C5E40();
    v57 = sub_23B1C6AB8();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_23AA66000, v56, v57, "cancel trees", v58, 2u);
      MEMORY[0x23B8614BC](v58, -1, -1);
    }

    v41(v108, v47);
    v59 = *(void (**)(uint64_t))(**((_QWORD **)v109 + 2) + 816);
    v60 = swift_retain();
    v59(v60);
    swift_release();
    v61 = *(void (**)(uint64_t))(**(_QWORD **)(v50 + 16) + 816);
    v62 = swift_retain();
    v61(v62);
    swift_release();
  }
  v63 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v64 = sub_23B1C5E40();
  v65 = sub_23B1C6AB8();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v66 = 0;
    _os_log_impl(&dword_23AA66000, v64, v65, "stopping scheduler", v66, 2u);
    MEMORY[0x23B8614BC](v66, -1, -1);
  }

  v41(v54, v47);
  v67 = v42;
  sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)sub_23ADF34F8, v1);

  v68 = v67;
  sub_23AC494B4(0, 0, (uint64_t)"invalidateSource()", 18, 2, (uint64_t)nullsub_1, 0);

  (*(void (**)(void))(**(_QWORD **)(v1 + 24) + 120))();
  v69 = (id)fpfs_current_or_default_log();
  v70 = v111;
  sub_23B1C5E58();
  v71 = sub_23B1C5E40();
  v72 = sub_23B1C6AB8();
  if (os_log_type_enabled(v71, v72))
  {
    v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v73 = 0;
    _os_log_impl(&dword_23AA66000, v71, v72, "cancelling in-flight requests", v73, 2u);
    MEMORY[0x23B8614BC](v73, -1, -1);
  }

  v74 = v47;
  v41(v70, v47);
  v75 = v68;
  sub_23AC494B4(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_23ADF3510, v1);

  v76 = v115;
  v77 = v116;
  v78 = v114;
  if (*(_BYTE *)(v1 + 72) == 1)
  {
    v79 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v80 = sub_23B1C5E40();
    v81 = sub_23B1C6AB8();
    if (os_log_type_enabled(v80, v81))
    {
      v82 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v82 = 0;
      _os_log_impl(&dword_23AA66000, v80, v81, "closing trees", v82, 2u);
      MEMORY[0x23B8614BC](v82, -1, -1);
    }

    v41(v112, v74);
    v83 = v109;
    v84 = *(void (**)(uint64_t))(**((_QWORD **)v109 + 2) + 816);
    v85 = swift_retain();
    v84(v85);
    swift_release();
    v86 = *(void (**)(uint64_t))(**(_QWORD **)(v50 + 16) + 816);
    v87 = swift_retain();
    v86(v87);
    swift_release();
    v88 = *(void (**)(uint64_t))(**((_QWORD **)v83 + 2) + 824);
    v89 = swift_retain();
    v88(v89);
    swift_release();
    v90 = *(void (**)(uint64_t))(**(_QWORD **)(v50 + 16) + 824);
    v91 = swift_retain();
    v90(v91);
    swift_release();
  }
  v92 = (id)fpfs_current_or_default_log();
  v93 = v113;
  sub_23B1C5E58();
  v94 = sub_23B1C5E40();
  v95 = sub_23B1C6AB8();
  if (os_log_type_enabled(v94, v95))
  {
    v96 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v96 = 0;
    _os_log_impl(&dword_23AA66000, v94, v95, "waiting for job completion", v96, 2u);
    MEMORY[0x23B8614BC](v96, -1, -1);
  }

  v41(v93, v74);
  v97 = *(id *)(v1 + 176);
  sub_23B1C6AD0();

  v98 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v99 = sub_23B1C5E40();
  v100 = sub_23B1C6AB8();
  if (os_log_type_enabled(v99, v100))
  {
    v101 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v101 = 0;
    _os_log_impl(&dword_23AA66000, v99, v100, "stopping tracker", v101, 2u);
    MEMORY[0x23B8614BC](v101, -1, -1);
  }

  v41(v78, v74);
  v102 = *(void **)(*(_QWORD *)(v1 + 168) + 16);
  fp_task_tracker_cancel(v102);
  fp_task_tracker_wait((uint64_t)v102);
  v103 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v104 = sub_23B1C5E40();
  v105 = sub_23B1C6AB8();
  if (os_log_type_enabled(v104, v105))
  {
    v106 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v106 = 0;
    _os_log_impl(&dword_23AA66000, v104, v105, "closing the wharf", v106, 2u);
    MEMORY[0x23B8614BC](v106, -1, -1);
  }

  v41(v76, v74);
  if (*(_BYTE *)(v1 + 72) == 1)
    sub_23B1AAEF8();
  sub_23AFC1214(v77);

}

id sub_23ADD4FDC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  unsigned int v4;
  id v5;
  id v6;
  void *v7;
  unsigned int v8;
  id v10;
  void *v11;
  id v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  *(_BYTE *)(a1 + qword_2542EDE58) = 1;
  v2 = qword_2542E69B8;
  if (*(_QWORD *)(a1 + qword_2542E69B8))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23B1C6BA8();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(a1 + v2) = 0;
  swift_unknownObjectRelease();
  *(_QWORD *)(*(_QWORD *)(a1 + 160) + 16) = 0;
  v3 = *(void **)(a1 + qword_2542EDEC8);
  if (v3)
  {
    v13[0] = 0;
    v4 = objc_msgSend(v3, sel_close_, v13);
    v5 = v13[0];
    if (!v4)
      goto LABEL_8;
    v6 = v13[0];
  }
  v7 = *(void **)(a1 + qword_2542EE110);
  v13[0] = 0;
  v8 = objc_msgSend(v7, sel_close_, v13);
  v5 = v13[0];
  if (!v8)
  {
LABEL_8:
    v10 = v5;
    v11 = (void *)sub_23B1C587C();

    swift_willThrow();
    v12 = v11;
    sub_23AFF3164((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLDatabase.swift", 130, 2, 762, v11);
  }
  return v13[0];
}

uint64_t sub_23ADD514C(_BYTE *a1, _QWORD *a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4C10);
  swift_dynamicCastClassUnconditional();
  sub_23ADD57F8(a2);
  v4 = (void *)swift_retain();
  if (objc_sync_enter(v4))
    goto LABEL_19;
  v5 = a1[qword_2542E6C88];
  if (objc_sync_exit(a1))
    goto LABEL_20;
  swift_release();
  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  if ((v5 & 1) != 0)
  {
    sub_23AEBD130(0xD000000000000012, 0x800000023B205210, v6, v7);
    v9 = a2[3];
    v8 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v9);
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v10 = (void *)swift_retain();
    if (!objc_sync_enter(v10))
    {
      v11 = *(id *)&a1[qword_2542E6C60];
      if (!objc_sync_exit(a1))
      {
        swift_release();
        v12 = objc_msgSend(v11, sel_description);
        sub_23B1C63E0();

        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23AEBD130(0x65686373202D2020, 0xEF203A72656C7564, v9, v8);
        swift_bridgeObjectRelease();
        v13 = a2[3];
        v14 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v13);
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE8C0);
        sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23ADF2738, (uint64_t)a1, v13, v15, v14);
        goto LABEL_8;
      }
LABEL_20:
      sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
    }
LABEL_19:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  }
  sub_23AEBD130(0xD000000000000011, 0x800000023B205110, v6, v7);
LABEL_8:
  v16 = a1[qword_2542EE120];
  v17 = a2[3];
  v18 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v17);
  if (v16 == 1)
  {
    sub_23AEBD130(0xD000000000000013, 0x800000023B2051F0, v17, v18);
    v19 = a2[3];
    v20 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v19);
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    if (qword_2542E6EE0 != -1)
      swift_once();
    v21 = (id)qword_2542EDE00;
    v22 = objc_msgSend(v21, sel_description);
    sub_23B1C63E0();

    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(0x65686373202D2020, 0xEF203A72656C7564, v19, v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23AEBD130(0xD000000000000012, 0x800000023B205130, v17, v18);
  }
  v23 = a2[3];
  v24 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v23);
  sub_23AEBD130(0xD000000000000011, 0x800000023B205150, v23, v24);
  v25 = a2[3];
  v26 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v25);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE8C0);
  sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23ADF26F0, (uint64_t)a1, v25, v27, v26);
  v28 = a1[qword_256A079E0];
  v29 = a2[3];
  v30 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v29);
  if (v28 == 1)
  {
    sub_23AEBD130(0xD000000000000021, 0x800000023B2051C0, v29, v30);
    v31 = a2[3];
    v39 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v31);
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    if (qword_2569E12A8 != -1)
      swift_once();
    v32 = (id)qword_256A079A0;
    v33 = objc_msgSend(v32, sel_description);
    sub_23B1C63E0();

    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(0x65686373202D2020, 0xEF203A72656C7564, v31, v39);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23AEBD130(0xD000000000000020, 0x800000023B205170, v29, v30);
  }
  v34 = a2[3];
  v35 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v34);
  sub_23AEBD130(0xD000000000000013, 0x800000023B2051A0, v34, v35);
  v36 = a2[3];
  v37 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v36);
  return sub_23AEBD1D4(8224, 0xE200000000000000, sub_23ADF270C, (uint64_t)a1, v36, MEMORY[0x24BEE4AE0] + 8, v37);
}

void sub_23ADD57F8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  unsigned int v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char **v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t Strong;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  char *v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  __int128 aBlock;
  id (*v67)(uint64_t, void *);
  void *v68;
  unint64_t (*v69)();
  uint64_t v70;
  uint64_t v71;

  v71 = *MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4320);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23B1C5C54();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v55 - v11;
  v62 = v1;
  v13 = *(void **)(v1 + 16);
  v69 = sub_23AFE39F0;
  v70 = 0;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v67 = sub_23AA9432C;
  v68 = &block_descriptor_194;
  v14 = _Block_copy(&aBlock);
  swift_release();
  *(_QWORD *)&aBlock = 0;
  v15 = objc_msgSend(v13, sel_fetchSwift_error_, v14, &aBlock);
  _Block_release(v14);
  v16 = (id)aBlock;
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (!v15)
  {
    v25 = (void *)sub_23B1C587C();

    swift_willThrow();
    return;
  }
  if ((objc_msgSend(v15, sel_next) & 1) == 0)
  {

    return;
  }
  v17 = objc_msgSend(v13, sel_userVersion);
  v18 = objc_msgSend(v17, sel_unsignedIntValue);

  v19 = objc_msgSend(v15, sel_unsignedLongAtIndex_, 1);
  if (objc_msgSend(v15, sel_isNullAtIndex_, 0))
LABEL_26:
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 260);
  v57 = v18;
  v58 = (uint64_t)v19;
  v59 = v7;
  v56 = v10;
  v60 = a1;
  v61 = v12;
  if (swift_dynamicCastMetatype())
    goto LABEL_27;
  sub_23B1C5780();
  swift_allocObject();
  sub_23B1C5774();
  v20 = objc_msgSend(v15, sel_dataAtIndex_, 0);
  v21 = sub_23B1C5AD4();
  v23 = v22;

  v24 = sub_23AA7E38C(&qword_2542E0270, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23B1C5768();
  sub_23AAAE53C(v21, v23);
  v55[1] = v24;
  swift_release();
  v27 = v60[3];
  v26 = v60[4];
  v55[2] = __swift_project_boxed_opaque_existential_1(v60, v27);
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23AE2E2DC();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v64 = 114;
  v65 = 0xE100000000000000;
  v63 = v58;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v58 = sub_23AA7E38C((unint64_t *)&qword_2542DD440, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v27, v26);
  swift_bridgeObjectRelease();
  v28 = &selRef_defaultManager;
  v29 = v6;
  if ((objc_msgSend(v15, sel_isNullAtIndex_, 2) & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v5, 1, 1, v6);
LABEL_11:
    sub_23AA8A05C((uint64_t)v5, (uint64_t *)&unk_2542E4320);
    goto LABEL_12;
  }
  if (objc_msgSend(v15, sel_isNullAtIndex_, 2))
    goto LABEL_26;
  if (swift_dynamicCastMetatype())
LABEL_27:
    sub_23AFF0050((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/Prequelite+FSSyncAdditions.swift", 145, 2, 261);
  swift_allocObject();
  sub_23B1C5774();
  v30 = objc_msgSend(v15, sel_dataAtIndex_, 2);
  v31 = sub_23B1C5AD4();
  v33 = v32;

  sub_23B1C5768();
  sub_23AAAE53C(v31, v33);
  swift_release();
  v34 = v59;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v5, 1, v6) == 1)
    goto LABEL_11;
  v35 = v56;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v56, v5, v29);
  v36 = v60[3];
  v37 = v60[4];
  __swift_project_boxed_opaque_existential_1(v60, v36);
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0xD000000000000010;
  *((_QWORD *)&aBlock + 1) = 0x800000023B205380;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v64 = (uint64_t)objc_msgSend(v15, sel_unsignedLongAtIndex_, 3);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v28 = &selRef_defaultManager;
  sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v36, v37);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v29);
LABEL_12:
  if ((objc_msgSend(v15, v28[398], 4) & 1) == 0)
  {
    v38 = (void *)sub_23AC3A1AC(4);
    v40 = v39;
    v41 = v60[3];
    v42 = v60[4];
    __swift_project_boxed_opaque_existential_1(v60, v41);
    strcpy((char *)&aBlock, "+ FP anchor: ");
    HIWORD(aBlock) = -4864;
    sub_23AFEEE58((uint64_t)v38, (uint64_t)v40);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v41, v42);
    swift_bridgeObjectRelease();

  }
  v43 = v60;
  v44 = v60[3];
  v45 = v60[4];
  __swift_project_boxed_opaque_existential_1(v60, v44);
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0xD000000000000012;
  *((_QWORD *)&aBlock + 1) = 0x800000023B2052C0;
  v64 = (uint64_t)objc_msgSend(v15, sel_unsignedLongAtIndex_, 5);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v44, v45);
  swift_bridgeObjectRelease();
  v46 = v43[3];
  v47 = v43[4];
  __swift_project_boxed_opaque_existential_1(v43, v46);
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0xD000000000000011;
  *((_QWORD *)&aBlock + 1) = 0x800000023B2052E0;
  sub_23AF157D0((unint64_t)objc_msgSend(v15, sel_integerAtIndex_, 6));
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v46, v47);
  swift_bridgeObjectRelease();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_26;
  }
  v49 = *(_BYTE *)(Strong + 88);
  swift_release();
  v50 = v43[3];
  v51 = v43[4];
  __swift_project_boxed_opaque_existential_1(v43, v50);
  if ((v49 & 1) != 0)
  {
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    *(_QWORD *)&aBlock = 0xD000000000000014;
    *((_QWORD *)&aBlock + 1) = 0x800000023B205340;
    objc_msgSend(v15, sel_integerAtIndex_, 7);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v50, v51);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23AEBD130(0xD00000000000001ALL, 0x800000023B205300, v50, v51);
  }
  v52 = v59;
  v53 = v60[3];
  v54 = v60[4];
  __swift_project_boxed_opaque_existential_1(v60, v53);
  *(_QWORD *)&aBlock = 0;
  *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&aBlock = 0xD000000000000014;
  *((_QWORD *)&aBlock + 1) = 0x800000023B205320;
  v64 = (uint64_t)objc_msgSend(v15, sel_unsignedLongAtIndex_, 8);
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(aBlock, *((uint64_t *)&aBlock + 1), v53, v54);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v52 + 8))(v61, v29);
}

BOOL sub_23ADD6414(_QWORD *a1, uint64_t a2)
{
  _OWORD *v2;
  __int128 v4;
  _BYTE v6[17];
  __int128 v7;
  unsigned __int128 v8;
  uint64_t v9;

  v2 = *(_OWORD **)(a2 + qword_2542EDFB8);
  if (v2)
  {
    swift_beginAccess();
    v4 = v2[4];
    v6[0] = BYTE8(v4);
    *(_OWORD *)&v6[1] = *(_OWORD *)((char *)v2 + 73);
    v7 = v2[3];
    v8 = __PAIR128__(*(unint64_t *)v6, v4);
    v9 = *(_QWORD *)&v6[8];
    swift_retain();
    sub_23AAB7528((uint64_t)&v7);
    sub_23AAB7528((uint64_t)&v7 + 8);
    sub_23AAB7528((uint64_t)&v8);
    sub_23AAB7528((uint64_t)&v8 + 8);
    sub_23AAB7528((uint64_t)&v9);
    sub_23ADBB1FC(a1);
    sub_23AAB7500((uint64_t)&v7);
    sub_23AAB7500((uint64_t)&v7 + 8);
    sub_23AAB7500((uint64_t)&v8);
    sub_23AAB7500((uint64_t)&v8 + 8);
    sub_23AAB7500((uint64_t)&v9);
    swift_release();
  }
  return v2 == 0;
}

BOOL sub_23ADD650C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a2 + qword_256A079D8);
  if (v2)
  {
    swift_beginAccess();
    v4 = *(_QWORD *)(v2 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23ADD68CC(a1, v4);
    swift_bridgeObjectRelease();
    v5 = a1[3];
    v6 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    sub_23AEBD130(0xD000000000000020, 0x800000023B205230, v5, v6);
    v7 = a1[3];
    v8 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v7);
    sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23ADF2788, v2, v7, MEMORY[0x24BEE4AE0] + 8, v8);
    swift_release();
  }
  return v2 == 0;
}

uint64_t sub_23ADD6630(_QWORD *a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[4];
  uint64_t v29;
  _QWORD *v30;
  _BYTE v31[16];
  _QWORD *v32;
  char v33;

  v4 = v3;
  v32 = a1;
  v7 = a2 & 1;
  v33 = a2;
  v8 = (void *)MEMORY[0x23B8601A8]();
  sub_23ADDA710(v4, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, 0, (uint64_t)sub_23ADF2230, (uint64_t)v31, v9);
  objc_autoreleasePoolPop(v8);
  v10 = *(void (**)(_QWORD *))(**(_QWORD **)(*(_QWORD *)(v4 + 32) + 16) + 848);
  swift_retain();
  v10(a1);
  v11 = swift_release();
  v12 = MEMORY[0x24BEE4AE0];
  if ((a3 & 1) != 0)
  {
    v13 = a1[3];
    v14 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    sub_23AEBD130(0x662065657274202BLL, 0xEA00000000003A73, v13, v14);
    v15 = a1[3];
    v16 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v15);
    v11 = sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23ADF22E8, v4, v15, v12 + 8, v16);
  }
  v17 = *(void **)(v4 + qword_2542EDF90);
  MEMORY[0x24BDAC7A8](v11);
  v29 = v4;
  v30 = a1;
  v18 = sub_23AC45210(v17, (void (*)(void))sub_23ADF224C);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v28[2] = a1;
  v28[3] = v4;
  LOBYTE(v29) = v7;
  v20 = (void *)MEMORY[0x23B8601A8](v19);
  sub_23ADDA710(v4, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, 0, (uint64_t)sub_23ADF2280, (uint64_t)v28, v21);
  objc_autoreleasePoolPop(v20);
  if ((a3 & 1) != 0)
  {
    v23 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v23);
    sub_23AEBD130(0x662065657274202BLL, 0xEA00000000003A70, v23, v24);
    v25 = a1[3];
    v26 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v25);
    v22 = sub_23AEBD1D4(8224, 0xE200000000000000, sub_23ADF22D0, v4, v25, v12 + 8, v26);
  }
  MEMORY[0x24BDAC7A8](v22);
  v29 = v4;
  v30 = a1;
  return sub_23AC45210(v17, (void (*)(void))sub_23ADF229C);
}

uint64_t sub_23ADD68CC(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  if (!v4)
    return sub_23AEBD130(0xD000000000000015, 0x800000023B205260, v5, v6);
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AEBD130(0xD000000000000014, 0x800000023B201CB0, v5, v6);
  swift_bridgeObjectRelease();
  v21 = a2 + 56;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_23;
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v21 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v10)
        return swift_release();
      v16 = *(_QWORD *)(v21 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v10)
          return swift_release();
        v16 = *(_QWORD *)(v21 + 8 * v12);
        if (!v16)
          break;
      }
    }
LABEL_22:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_23:
    v18 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + 16 * v14 + 8);
    v19 = a1[3];
    v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    if (v18 < 2)
    {
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
    }
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(538976288, 0xE400000000000000, v19, v20);
    result = swift_bridgeObjectRelease();
  }
  v17 = v15 + 3;
  if (v17 >= v10)
    return swift_release();
  v16 = *(_QWORD *)(v21 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v10)
      return swift_release();
    v16 = *(_QWORD *)(v21 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23ADD6C24(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;

  v3 = *(_QWORD *)(a2 + 88);
  v4 = 1 << *(_BYTE *)(v3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v3 + 56);
  v18 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_22;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v18)
      return swift_release();
    v12 = *(_QWORD *)(v17 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v18)
        return swift_release();
      v12 = *(_QWORD *)(v17 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v18)
          return swift_release();
        v12 = *(_QWORD *)(v17 + 8 * v8);
        if (!v12)
          break;
      }
    }
LABEL_21:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_22:
    v14 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + 16 * v10 + 8);
    v16 = a1[3];
    v15 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v16);
    if (v14 < 2)
    {
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
    }
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(538976288, 0xE400000000000000, v16, v15);
    result = swift_bridgeObjectRelease();
  }
  v13 = v11 + 3;
  if (v13 >= v18)
    return swift_release();
  v12 = *(_QWORD *)(v17 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v18)
      return swift_release();
    v12 = *(_QWORD *)(v17 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23ADD6ED0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  _BYTE v7[496];
  _BYTE v8[496];
  _BYTE v9[496];
  _BYTE v10[496];
  _BYTE v11[496];

  v3 = v1 + 32;
  swift_beginAccess();
  sub_23AA724E8(v1 + 32, (uint64_t)v10, &qword_2542DF240);
  sub_23AA724E8((uint64_t)v10, (uint64_t)v11, &qword_2542DF240);
  if (sub_23ADF2D10((uint64_t)v11) == 1)
  {
    v4 = *(void (**)(uint64_t))(v1 + 16);
    v5 = swift_retain();
    v4(v5);
    swift_release();
    sub_23AA724E8(a1, (uint64_t)v7, qword_2542E6E20);
    sub_23AA724E8((uint64_t)v7, (uint64_t)v8, qword_2542E6E20);
    nullsub_1(v8);
    sub_23AA724E8(v3, (uint64_t)v9, &qword_2542DF240);
    sub_23AA724E8((uint64_t)v8, v3, &qword_2542DF240);
    sub_23ADF2D34((uint64_t)v7, (voidsub_23AA88348);
    sub_23ADF2D34((uint64_t)v9, (voidsub_23ADF2A2C);
  }
  else
  {
    sub_23AA724E8((uint64_t)v10, (uint64_t)v9, &qword_2542DF240);
    sub_23AA724E8((uint64_t)v9, a1, qword_2542E6E20);
  }
  return sub_23ADF2D34((uint64_t)v10, (voidsub_23ADF2DF0);
}

uint64_t sub_23ADD7024(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  void *v6;
  _QWORD v8[2];

  if (a3)
  {
    if (a2)
    {
      v4 = a2;
      swift_retain();
      sub_23B1C6EFC();
      swift_bridgeObjectRelease();
      strcpy((char *)v8, "item changed ");
      HIWORD(v8[1]) = -4864;
      v5 = objc_msgSend(v4, sel_description);
      sub_23B1C63E0();

      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v6 = (void *)swift_retain();
      if (objc_sync_enter(v6))
        sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a3);
      sub_23ADB9D84((uint64_t)a3, (uint64_t *)&unk_2569E6520, &qword_2569E2710);
      if (objc_sync_exit(a3))
        sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a3);
      swift_release();
      sub_23B1C64F4();

      swift_release();
    }
    else
    {
      strcpy((char *)v8, "item changed ");
      HIWORD(v8[1]) = -4864;
      swift_retain();
      sub_23AA7B734();
      sub_23B1C64F4();
      swift_release();
    }
  }
  else
  {
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v8[0] = 0xD00000000000001ALL;
    v8[1] = 0x800000023B202C10;
    sub_23AA7B734();
    sub_23B1C64F4();
  }
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t sub_23ADD7250()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _BYTE v14[16];
  _QWORD v15[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E72C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for VFSItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1568);
  v10 = *(void **)(v1 + *(int *)(v9 + 40));
  if (!v10)
  {
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v15[0] = 0xD00000000000001ALL;
    v15[1] = 0x800000023B202C10;
    sub_23AA96F18(*(_QWORD *)v1, *(_BYTE *)(v1 + 8));
    sub_23B1C64F4();
    goto LABEL_5;
  }
  sub_23AA8EFC8(v1 + *(int *)(v9 + 36), (uint64_t)v4, &qword_2542E72C0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    swift_retain();
    sub_23AA8A05C((uint64_t)v4, &qword_2542E72C0);
    strcpy((char *)v15, "item changed ");
    HIWORD(v15[1]) = -4864;
    sub_23AA96F18(*(_QWORD *)v1, *(_BYTE *)(v1 + 8));
    sub_23B1C64F4();
    swift_release();
LABEL_5:
    swift_bridgeObjectRelease();
    return v15[0];
  }
  sub_23AB3CAF0((uint64_t)v4, (uint64_t)v8);
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  swift_retain();
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  strcpy((char *)v15, "item changed ");
  HIWORD(v15[1]) = -4864;
  sub_23AC3E1F8();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v12 = (void *)swift_retain();
  if (objc_sync_enter(v12))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v10);
  sub_23ADB9D84((uint64_t)v10, (uint64_t *)&unk_2542E05B0, (unint64_t *)&unk_2542E05A0);
  if (objc_sync_exit(v10))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v10);
  swift_release();
  sub_23B1C64F4();
  swift_release();
  swift_bridgeObjectRelease();
  v11 = v15[0];
  sub_23AA937BC((uint64_t)v8, type metadata accessor for VFSItem);
  return v11;
}

uint64_t sub_23ADD7550(_QWORD *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t), void (*a4)(_QWORD *), void (*a5)(_QWORD *))
{
  _BYTE *v5;
  _QWORD *v9;
  uint64_t result;
  void (*v12)(_QWORD *);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _BYTE v32[16];
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(_QWORD *);
  uint64_t v36;
  unint64_t v37;
  _BYTE v38[24];
  _BYTE v39[8];
  uint64_t v40;
  unsigned __int8 v41;

  v35 = a4;
  v9 = v5;
  sub_23AA724E8((uint64_t)(v5 + 16), (uint64_t)v38, a2);
  result = sub_23AA724E8((uint64_t)v38, (uint64_t)v39, a2);
  if (v39[0] != 2)
  {
    v12 = a5;
    v13 = v40;
    v14 = v41;
    v15 = a1[3];
    v34 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v15);
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v36 = 0x3A7465736572202BLL;
    v37 = 0xE900000000000020;
    v16 = v13;
    a5 = v12;
    a3(v16, v14);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(0x3A7465736572202BLL, 0xE900000000000020, v15, v34);
    result = swift_bridgeObjectRelease();
  }
  if ((v5[48] & 1) != 0 || (v5[49] & 1) != 0)
  {
    v17 = a1[3];
    v18 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    v36 = 0x3A656C6469202BLL;
    v37 = 0xE700000000000000;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23AEBD130(0x3A656C6469202BLL, 0xE700000000000000, v17, v18);
    result = swift_bridgeObjectRelease();
  }
  if ((v5[50] & 1) != 0)
  {
    v19 = a1[3];
    v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v19);
    result = sub_23AEBD130(0x6C616E676973202BLL, 0xEA00000000006465, v19, v20);
  }
  v21 = MEMORY[0x24BEE4AE0];
  if (*(_QWORD *)(*v9 + 16))
  {
    v22 = a1[3];
    v23 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v22);
    sub_23AEBD130(0x65676E616863202BLL, 0xEA00000000003A73, v22, v23);
    v24 = a1[3];
    v25 = a1[4];
    v26 = __swift_project_boxed_opaque_existential_1(a1, v24);
    MEMORY[0x24BDAC7A8](v26);
    v33 = v9;
    result = sub_23AEBD1D4(8224, 0xE200000000000000, v35, (uint64_t)v32, v24, v21 + 8, v25);
  }
  if (*(_QWORD *)(v9[1] + 16))
  {
    v27 = a1[3];
    v28 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v27);
    sub_23AEBD130(0x697469736F70202BLL, 0xEC0000003A736E6FLL, v27, v28);
    v29 = a1[3];
    v30 = a1[4];
    v31 = __swift_project_boxed_opaque_existential_1(a1, v29);
    MEMORY[0x24BDAC7A8](v31);
    v33 = v9;
    return sub_23AEBD1D4(8224, 0xE200000000000000, a5, (uint64_t)v32, v29, v21 + 8, v30);
  }
  return result;
}

uint64_t sub_23ADD7934(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  int64_t i;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v26;
  int64_t v27;

  v2 = 1 << *(_BYTE *)(*a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(*a2 + 64);
  v24 = (unint64_t)(v2 + 63) >> 6;
  v26 = *a2;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v27)
  {
    if (v4)
    {
      v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      v27 = i;
      v8 = v7 | (i << 6);
      goto LABEL_5;
    }
    v19 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24)
      return swift_release();
    v20 = *(_QWORD *)(v23 + 8 * v19);
    v21 = i + 1;
    if (!v20)
    {
      v21 = i + 2;
      if (i + 2 >= v24)
        return swift_release();
      v20 = *(_QWORD *)(v23 + 8 * v21);
      if (!v20)
      {
        v21 = i + 3;
        if (i + 3 >= v24)
          return swift_release();
        v20 = *(_QWORD *)(v23 + 8 * v21);
        if (!v20)
        {
          v21 = i + 4;
          if (i + 4 >= v24)
            return swift_release();
          v20 = *(_QWORD *)(v23 + 8 * v21);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v4 = (v20 - 1) & v20;
    v27 = v21;
    v8 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_5:
    v9 = *(_QWORD *)(v26 + 56) + 24 * v8;
    v10 = *(void **)v9;
    v11 = *(void **)(v9 + 8);
    v12 = *(void **)(v9 + 16);
    v13 = a1[3];
    v14 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    swift_retain();
    v15 = v10;
    v16 = v11;
    v17 = sub_23ADD7024((uint64_t)v15, v11, v12);
    sub_23AEBD130(v17, v18, v13, v14);
    swift_release();

    result = swift_bridgeObjectRelease();
  }
  v22 = i + 5;
  if (i + 5 >= v24)
    return swift_release();
  v20 = *(_QWORD *)(v23 + 8 * v22);
  if (v20)
  {
    v21 = i + 5;
    goto LABEL_22;
  }
  while (1)
  {
    v21 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v21 >= v24)
      return swift_release();
    v20 = *(_QWORD *)(v23 + 8 * v21);
    ++v22;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23ADD7B50(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;

  v26 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1568);
  v25 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a2;
  v7 = *(_QWORD *)(*a2 + 64);
  v23 = *a2 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v24 = (unint64_t)(v8 + 63) >> 6;
  v27 = v6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24)
      return swift_release();
    v20 = *(_QWORD *)(v23 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v24)
        return swift_release();
      v20 = *(_QWORD *)(v23 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v24)
          return swift_release();
        v20 = *(_QWORD *)(v23 + 8 * v12);
        if (!v20)
        {
          v12 = v19 + 3;
          if (v19 + 3 >= v24)
            return swift_release();
          v20 = *(_QWORD *)(v23 + 8 * v12);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v20 - 1) & v20;
    v14 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_5:
    sub_23AA8EFC8(*(_QWORD *)(v27 + 56) + *(_QWORD *)(v25 + 72) * v14, (uint64_t)v5, &qword_2542E1568);
    v15 = v26[3];
    v16 = v26[4];
    __swift_project_boxed_opaque_existential_1(v26, v15);
    v17 = sub_23ADD7250();
    sub_23AEBD130(v17, v18, v15, v16);
    swift_bridgeObjectRelease();
    result = sub_23AA8A05C((uint64_t)v5, &qword_2542E1568);
  }
  v21 = v19 + 4;
  if (v21 >= v24)
    return swift_release();
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v24)
      return swift_release();
    v20 = *(_QWORD *)(v23 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23ADD7D94(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a1;
  v3 = type metadata accessor for SyncState();
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(v6 + 64);
  v23 = v6 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v24 = (unint64_t)(v8 + 63) >> 6;
  v27 = v6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24)
      return swift_release();
    v20 = *(_QWORD *)(v23 + 8 * v19);
    ++v12;
    if (!v20)
    {
      v12 = v19 + 1;
      if (v19 + 1 >= v24)
        return swift_release();
      v20 = *(_QWORD *)(v23 + 8 * v12);
      if (!v20)
      {
        v12 = v19 + 2;
        if (v19 + 2 >= v24)
          return swift_release();
        v20 = *(_QWORD *)(v23 + 8 * v12);
        if (!v20)
        {
          v12 = v19 + 3;
          if (v19 + 3 >= v24)
            return swift_release();
          v20 = *(_QWORD *)(v23 + 8 * v12);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v20 - 1) & v20;
    v14 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_5:
    sub_23AA907B0(*(_QWORD *)(v27 + 56) + *(_QWORD *)(v26 + 72) * v14, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
    v15 = v25[3];
    v16 = v25[4];
    __swift_project_boxed_opaque_existential_1(v25, v15);
    sub_23AEBC25C();
    sub_23AEBD130(v17, v18, v15, v16);
    swift_bridgeObjectRelease();
    result = sub_23AA937BC((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
  }
  v21 = v19 + 4;
  if (v21 >= v24)
    return swift_release();
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
    v12 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v24)
      return swift_release();
    v20 = *(_QWORD *)(v23 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23ADD7FD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(a1 + 152) = 1;
  v2 = qword_2542EDFB8;
  v3 = *(_QWORD *)(a1 + qword_2542EDFB8);
  if (v3)
  {
    if (*(_QWORD *)(v3 + 136))
    {
      swift_getObjectType();
      swift_retain();
      swift_unknownObjectRetain();
      sub_23B1C6BCC();
      swift_unknownObjectRelease();
      if (*(_QWORD *)(v3 + 136))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_23B1C6BA8();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_retain();
    }
    *(_QWORD *)(v3 + 136) = 0;
    swift_release();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(a1 + v2) = 0;
  swift_release();
  v4 = qword_256A079D8;
  v5 = *(_QWORD *)(a1 + qword_256A079D8);
  if (v5)
  {
    if (*(_QWORD *)(v5 + 96))
    {
      swift_getObjectType();
      swift_retain();
      swift_unknownObjectRetain();
      sub_23B1C6BCC();
      swift_unknownObjectRelease();
      if (*(_QWORD *)(v5 + 96))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_23B1C6BA8();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_retain();
    }
    *(_QWORD *)(v5 + 96) = 0;
    swift_release();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(a1 + v4) = 0;
  return swift_release();
}

void sub_23ADD8168(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  unint64_t i;
  int64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  void (*v69)(void);
  int64_t *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(void);
  unint64_t *v74;
  char *v75;
  void (**v76)(void);
  uint64_t v77;
  char *v78;
  id v79;
  unint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t *, uint64_t, uint64_t, uint64_t);
  int64_t v83;
  unint64_t v84;
  int64_t v85;
  unsigned int (*v86)(uint64_t *, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t *v91;
  char *v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  _QWORD *v100;
  char *v101;
  uint64_t v102;
  unint64_t *v103;
  unint64_t v104;
  unint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  unint64_t j;
  int64_t v113;
  unint64_t v114;
  int64_t v115;
  char *v116;
  NSObject *v117;
  unint64_t v118;
  int64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(void);
  void (*v129)(void);
  void (**v130)(void);
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  char *v134;
  void (**v135)(void);
  uint64_t v136;
  id v137;
  uint64_t v138;
  void (*v139)(uint64_t *, uint64_t, uint64_t, int64_t);
  unsigned int (*v140)(uint64_t *, uint64_t, int64_t);
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t *v145;
  char *v146;
  uint64_t v147;
  void (*v148)(char *, char *, uint64_t);
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  char *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  _QWORD *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  int64_t v166;
  unint64_t v167;
  int64_t v168;
  char *v169;
  int64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(void);
  void (*v179)(void);
  void (**v180)(void);
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  char *v184;
  void (**v185)(void);
  uint64_t v186;
  id v187;
  void (*v188)(char *, uint64_t);
  void (*v189)(_QWORD *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v190)(_QWORD *, uint64_t, uint64_t);
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t *v195;
  char *v196;
  uint64_t v197;
  void (*v198)(char *, char *, uint64_t);
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  char *v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void (*v212)(id *);
  id v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  void (*v219)(id *);
  id v220;
  uint64_t v221;
  int64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  unint64_t v228;
  unint64_t v229;
  uint64_t v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  void (*v237)(id *);
  id v238;
  unint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  int64_t v246;
  unint64_t v247;
  unint64_t v248;
  int64_t v249;
  unint64_t v250;
  int64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void (*v255)(id *);
  id v256;
  unint64_t *v257;
  uint64_t v258;
  void *v259;
  void *v260;
  void (*v261)(void);
  uint64_t v262;
  _QWORD *v263;
  int64_t v264;
  id v265;
  id v266;
  NSObject *v267;
  NSObject *v268;
  os_log_type_t v269;
  BOOL v270;
  uint8_t *v271;
  _QWORD *v272;
  _QWORD *v273;
  id v274;
  _QWORD *v275;
  __n128 (*v276)(char *, uint64_t);
  __n128 v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  id v281;
  NSObject *v282;
  os_log_type_t v283;
  _QWORD *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  NSObject *v288;
  uint64_t v289;
  uint64_t v290;
  void (*v291)(void);
  char *v292;
  unint64_t *v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  int64_t v298;
  int64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  uint64_t v304;
  int64_t v305;
  uint64_t *v306;
  uint64_t v307;
  uint64_t *v308;
  _QWORD *v309;
  _QWORD *v310;
  int64_t v311;
  uint64_t *v312;
  _QWORD *v313;
  _QWORD *v314;
  uint64_t v315;
  _QWORD *v316;
  _QWORD *v317;
  uint64_t v318;
  uint64_t v319;
  unint64_t *v320;
  unint64_t *v321;
  unint64_t *v322;
  int64_t v323;
  uint64_t v324;
  _QWORD *v325;
  _QWORD *v326;
  uint64_t v327;
  int64_t v328;
  char *v329;
  _QWORD *v330;
  unint64_t v331;
  NSObject *v332;
  int64_t v333;
  uint64_t v334;
  __n128 v335;
  uint64_t v336;
  int64_t v337;
  uint64_t v338;
  unint64_t v339;
  id v340;
  id v341;
  id v342;
  id v343;
  uint64_t v344;

  v296 = sub_23B1C5E4C();
  v290 = *(_QWORD *)(v296 - 8);
  v2 = MEMORY[0x24BDAC7A8](v296);
  v295 = (char *)&v289 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v292 = (char *)&v289 - v4;
  v336 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1F0);
  v5 = *(_QWORD *)(v336 - 8);
  v6 = MEMORY[0x24BDAC7A8](v336);
  v310 = (uint64_t *)((char *)&v289 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BDAC7A8](v6);
  v309 = (uint64_t *)((char *)&v289 - v9);
  MEMORY[0x24BDAC7A8](v8);
  v306 = (uint64_t *)((char *)&v289 - v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1F8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v289 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x24BDAC7A8](v12);
  v316 = (uint64_t *)((char *)&v289 - v16);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v289 - v17);
  v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF200);
  v315 = *(_QWORD *)(v337 - 8);
  v19 = MEMORY[0x24BDAC7A8](v337);
  v314 = (uint64_t *)((char *)&v289 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = MEMORY[0x24BDAC7A8](v19);
  v313 = (uint64_t *)((char *)&v289 - v22);
  MEMORY[0x24BDAC7A8](v21);
  v308 = (uint64_t *)((char *)&v289 - v23);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF208);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v329 = (char *)&v289 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v326 = (uint64_t *)((char *)&v289 - v28);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (uint64_t *)((char *)&v289 - v29);
  v324 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
  v323 = *(_QWORD *)(v324 - 8);
  v31 = MEMORY[0x24BDAC7A8](v324);
  v321 = (unint64_t *)((char *)&v289 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = MEMORY[0x24BDAC7A8](v31);
  v320 = (unint64_t *)((char *)&v289 - v34);
  MEMORY[0x24BDAC7A8](v33);
  v312 = (uint64_t *)((char *)&v289 - v35);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A18);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v39 = (uint64_t *)((char *)&v289 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = MEMORY[0x24BDAC7A8](v37);
  v330 = (uint64_t *)((char *)&v289 - v41);
  MEMORY[0x24BDAC7A8](v40);
  v322 = (unint64_t *)((char *)&v289 - v42);
  v302 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
  v301 = *(_QWORD *)(v302 - 8);
  MEMORY[0x24BDAC7A8](v302);
  v300 = (uint64_t)&v289 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v294 = a1;
  v44 = (unint64_t *)(a1 + qword_2542EDFF0);
  swift_beginAccess();
  v293 = v44;
  v45 = *v44;
  v46 = *(_QWORD *)(*v44 + 64);
  v297 = *v44 + 64;
  v47 = 1 << *(_BYTE *)(v45 + 32);
  if (v47 < 64)
    v48 = ~(-1 << v47);
  else
    v48 = -1;
  v49 = v48 & v46;
  v298 = (unint64_t)(v47 + 63) >> 6;
  v303 = v45;
  swift_bridgeObjectRetain();
  v50 = 0;
  v318 = v5;
  v325 = v14;
  v317 = v18;
  v327 = (uint64_t)v30;
  v335.n128_u64[0] = (unint64_t)v39;
  if (!v49)
    goto LABEL_6;
LABEL_5:
  v304 = (v49 - 1) & v49;
  v305 = v50;
  for (i = __clz(__rbit64(v49)) | (v50 << 6); ; i = __clz(__rbit64(v53)) + (v54 << 6))
  {
    v56 = v300;
    sub_23AA8EFC8(*(_QWORD *)(v303 + 56) + *(_QWORD *)(v301 + 72) * i, v300, &qword_2542E6C80);
    v57 = *(_QWORD *)(v56 + *(int *)(v302 + 56));
    swift_bridgeObjectRetain();
    sub_23AA8A05C(v56, &qword_2542E6C80);
    v328 = 0;
    v58 = *(_QWORD *)(v57 + 64);
    v307 = v57 + 64;
    v319 = v57;
    v59 = 1 << *(_BYTE *)(v57 + 32);
    if (v59 < 64)
      v60 = ~(-1 << v59);
    else
      v60 = -1;
    v61 = v60 & v58;
    v311 = (unint64_t)(v59 + 63) >> 6;
    v299 = v311 - 1;
    v62 = (_QWORD *)v323;
    if (!v61)
    {
LABEL_30:
      v83 = v328 + 1;
      v81 = v324;
      if (!__OFADD__(v328, 1))
      {
        if (v83 < v311)
        {
          v84 = *(_QWORD *)(v307 + 8 * v83);
          if (v84)
          {
LABEL_33:
            v334 = (v84 - 1) & v84;
            v80 = __clz(__rbit64(v84)) + (v83 << 6);
            v328 = v83;
            goto LABEL_29;
          }
          v85 = v328 + 2;
          ++v328;
          if (v83 + 1 < v311)
          {
            v84 = *(_QWORD *)(v307 + 8 * v85);
            if (v84)
            {
LABEL_36:
              v83 = v85;
              goto LABEL_33;
            }
            v328 = v83 + 1;
            if (v83 + 2 < v311)
            {
              v84 = *(_QWORD *)(v307 + 8 * (v83 + 2));
              if (v84)
              {
                v83 += 2;
                goto LABEL_33;
              }
              v328 = v83 + 2;
              if (v83 + 3 < v311)
              {
                v84 = *(_QWORD *)(v307 + 8 * (v83 + 3));
                if (v84)
                {
                  v83 += 3;
                  goto LABEL_33;
                }
                v85 = v83 + 4;
                v328 = v83 + 3;
                if (v83 + 4 < v311)
                {
                  v84 = *(_QWORD *)(v307 + 8 * v85);
                  if (v84)
                    goto LABEL_36;
                  while (1)
                  {
                    v83 = v85 + 1;
                    if (__OFADD__(v85, 1))
                      goto LABEL_200;
                    if (v83 >= v311)
                      break;
                    v84 = *(_QWORD *)(v307 + 8 * v83);
                    ++v85;
                    if (v84)
                      goto LABEL_33;
                  }
                  v328 = v299;
                }
              }
            }
          }
        }
        v82 = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v62[7];
        v82(v39, 1, 1, v324);
        v334 = 0;
        goto LABEL_51;
      }
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      swift_release();
      return;
    }
    while (1)
    {
      v334 = (v61 - 1) & v61;
      v80 = __clz(__rbit64(v61)) | (v328 << 6);
      v81 = v324;
LABEL_29:
      sub_23AA8EFC8(*(_QWORD *)(v319 + 56) + v62[9] * v80, (uint64_t)v39, &qword_2542E6A10);
      v82 = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v62[7];
      v82(v39, 0, 1, v81);
LABEL_51:
      v86 = (unsigned int (*)(uint64_t *, uint64_t, uint64_t))v62[6];
      v87 = 1;
      if (v86(v39, 1, v81) != 1)
      {
        v88 = *(int *)(v81 + 64);
        v89 = (char *)v39 + v88;
        v333 = *(int *)(v81 + 80);
        v90 = v39[1];
        v91 = v312;
        *v312 = *v39;
        v91[1] = v90;
        v92 = (char *)v91 + v88;
        v93 = sub_23B1C60A4();
        v94 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32);
        v94(v92, v89, v93);
        v95 = swift_allocObject();
        *(_OWORD *)(v95 + 16) = *(_OWORD *)(v335.n128_u64[0] + v333);
        v96 = *v91;
        v97 = v91[1];
        v98 = v330;
        v99 = (char *)v330 + *(int *)(v81 + 64);
        v100 = (_QWORD *)((char *)v330 + *(int *)(v81 + 80));
        *v330 = v96;
        v98[1] = v97;
        v101 = v92;
        v39 = (uint64_t *)v335.n128_u64[0];
        v94(v99, v101, v93);
        v87 = 0;
        *v100 = sub_23ADF35F8;
        v100[1] = v95;
      }
      v102 = (uint64_t)v330;
      v82(v330, v87, 1, v81);
      v103 = v322;
      sub_23AA724E8(v102, (uint64_t)v322, &qword_2542E6A18);
      if (v86((uint64_t *)v103, 1, v81) == 1)
        break;
      v63 = *(int *)(v81 + 64);
      v64 = (uint64_t)v320;
      v65 = (char *)v320 + v63;
      v331 = (unint64_t)v320 + v63;
      v66 = *v103;
      v67 = v103[1];
      v332 = ((char *)v103 + v63);
      v68 = *(int *)(v81 + 80);
      v69 = *(void (**)(void))((char *)v103 + v68 + 8);
      v333 = *(unint64_t *)((char *)v103 + v68);
      v70 = (int64_t *)((char *)v320 + v68);
      *v320 = v66;
      *(_QWORD *)(v64 + 8) = v67;
      v71 = sub_23B1C60A4();
      v72 = *(_QWORD *)(v71 - 8);
      (*(void (**)(char *, NSObject *, uint64_t))(v72 + 32))(v65, v332, v71);
      v73 = (void (*)(void))v333;
      *v70 = v333;
      v70[1] = (int64_t)v69;
      v74 = v321;
      v75 = (char *)v321 + *(int *)(v81 + 64);
      v76 = (void (**)(void))((char *)v321 + *(int *)(v81 + 80));
      *v321 = v66;
      v74[1] = v67;
      v77 = v72;
      v78 = v75;
      (*(void (**)(void))(v72 + 16))();
      *v76 = v73;
      v76[1] = v69;
      swift_retain();
      v79 = (id)FPDomainUnavailableError();
      v73();
      v39 = (uint64_t *)v335.n128_u64[0];
      swift_release();

      sub_23AA8A05C(v64, &qword_2542E6A10);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v71);
      v62 = (_QWORD *)v323;
      v61 = v334;
      if (!v334)
        goto LABEL_30;
    }
    swift_release();
    v5 = v318;
    v14 = v325;
    v18 = v317;
    v30 = (uint64_t *)v327;
    v50 = v305;
    v49 = v304;
    if (v304)
      goto LABEL_5;
LABEL_6:
    v52 = v50 + 1;
    if (__OFADD__(v50, 1))
    {
      __break(1u);
LABEL_196:
      __break(1u);
      goto LABEL_197;
    }
    if (v52 >= v298)
      break;
    v53 = *(_QWORD *)(v297 + 8 * v52);
    v54 = v50 + 1;
    if (!v53)
    {
      v54 = v50 + 2;
      if (v50 + 2 >= v298)
        goto LABEL_57;
      v53 = *(_QWORD *)(v297 + 8 * v54);
      if (!v53)
      {
        v54 = v50 + 3;
        if (v50 + 3 >= v298)
          goto LABEL_57;
        v53 = *(_QWORD *)(v297 + 8 * v54);
        if (!v53)
        {
          v54 = v50 + 4;
          if (v50 + 4 >= v298)
            goto LABEL_57;
          v53 = *(_QWORD *)(v297 + 8 * v54);
          if (!v53)
          {
            v55 = v50 + 5;
            if (v50 + 5 >= v298)
            {
LABEL_57:
              swift_release();
              v30 = (uint64_t *)v327;
              goto LABEL_58;
            }
            v53 = *(_QWORD *)(v297 + 8 * v55);
            if (!v53)
            {
              while (1)
              {
                v54 = v55 + 1;
                if (__OFADD__(v55, 1))
                  goto LABEL_201;
                if (v54 >= v298)
                  goto LABEL_57;
                v53 = *(_QWORD *)(v297 + 8 * v54);
                ++v55;
                if (v53)
                  goto LABEL_21;
              }
            }
            v54 = v50 + 5;
          }
        }
      }
    }
LABEL_21:
    v304 = (v53 - 1) & v53;
    v305 = v54;
  }
  swift_release();
LABEL_58:
  v104 = sub_23AAF7BD8(MEMORY[0x24BEE4AF8]);
  *v293 = v104;
  swift_bridgeObjectRelease();
  v105 = (unint64_t *)(v294 + qword_2542EE000);
  swift_beginAccess();
  v321 = v105;
  v106 = *v105;
  v107 = *(_QWORD *)(*v105 + 64);
  v322 = (unint64_t *)(*v105 + 64);
  v108 = 1 << *(_BYTE *)(v106 + 32);
  v109 = -1;
  if (v108 < 64)
    v109 = ~(-1 << v108);
  v110 = v109 & v107;
  v323 = (unint64_t)(v108 + 63) >> 6;
  v324 = v106;
  swift_bridgeObjectRetain();
  v111 = 0;
  if (!v110)
    goto LABEL_62;
LABEL_61:
  v328 = (v110 - 1) & v110;
  v330 = v111;
  for (j = __clz(__rbit64(v110)) | ((_QWORD)v111 << 6); ; j = __clz(__rbit64(v114)) + (v115 << 6))
  {
    v117 = *(NSObject **)(*(_QWORD *)(*(_QWORD *)(v324 + 56) + 8 * j) + 16);
    v331 = *(_QWORD *)(*(_QWORD *)(v324 + 56) + 8 * j);
    swift_bridgeObjectRetain();
    v118 = 0;
    v119 = v337;
    v120 = v315;
    v121 = (uint64_t *)v329;
    v332 = v117;
    if (!v117)
    {
LABEL_83:
      v139 = *(void (**)(uint64_t *, uint64_t, uint64_t, int64_t))(v120 + 56);
      v139(v121, 1, 1, v119);
      v335.n128_u64[0] = (unint64_t)v117;
      goto LABEL_84;
    }
    while (1)
    {
      if (v118 >= *(_QWORD *)(v331 + 16))
        goto LABEL_182;
      sub_23AA8EFC8(v331+ ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80))+ *(_QWORD *)(v120 + 72) * v118, (uint64_t)v121, &qword_2542DF200);
      v335.n128_u64[0] = v118 + 1;
      v139 = *(void (**)(uint64_t *, uint64_t, uint64_t, int64_t))(v120 + 56);
      v139(v121, 0, 1, v119);
LABEL_84:
      v140 = *(unsigned int (**)(uint64_t *, uint64_t, int64_t))(v120 + 48);
      v141 = 1;
      if (v140(v121, 1, v119) != 1)
      {
        v142 = *(int *)(v119 + 64);
        v143 = (char *)v121 + v142;
        v334 = *(int *)(v119 + 80);
        v144 = *((_QWORD *)v329 + 1);
        v145 = v308;
        *v308 = *v121;
        v145[1] = v144;
        v146 = (char *)v145 + v142;
        v147 = sub_23B1C60A4();
        v148 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32);
        v148(v146, v143, v147);
        v149 = swift_allocObject();
        *(_OWORD *)(v149 + 16) = *(_OWORD *)&v329[v334];
        v150 = *v145;
        v151 = v326;
        v152 = (char *)v326 + *(int *)(v337 + 64);
        v153 = (_QWORD *)((char *)v326 + *(int *)(v337 + 80));
        *v326 = v150;
        v151[1] = v144;
        v154 = v147;
        v119 = v337;
        v148(v152, v146, v154);
        v141 = 0;
        *v153 = sub_23ADF35F8;
        v153[1] = v149;
        v30 = (uint64_t *)v327;
      }
      v155 = (uint64_t)v326;
      v139(v326, v141, 1, v119);
      sub_23AA724E8(v155, (uint64_t)v30, &qword_2542DF208);
      if (v140(v30, 1, v119) == 1)
        break;
      v122 = *(int *)(v119 + 64);
      v123 = (uint64_t)v313;
      v124 = (char *)v313 + v122;
      v333 = (int64_t)v313 + v122;
      v125 = *v30;
      v126 = v30[1];
      v334 = (uint64_t)v30 + v122;
      v127 = *(int *)(v119 + 80);
      v129 = *(void (**)(void))((char *)v30 + v127);
      v128 = *(void (**)(void))((char *)v30 + v127 + 8);
      v130 = (void (**)(void))((char *)v313 + v127);
      *v313 = v125;
      *(_QWORD *)(v123 + 8) = v126;
      v131 = sub_23B1C60A4();
      v132 = *(_QWORD *)(v131 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v132 + 32))(v124, v334, v131);
      *v130 = v129;
      v130[1] = v128;
      v133 = v314;
      v134 = (char *)v314 + *(int *)(v337 + 64);
      v135 = (void (**)(void))((char *)v314 + *(int *)(v337 + 80));
      *v314 = v125;
      v133[1] = v126;
      v136 = v132;
      (*(void (**)(char *, int64_t, uint64_t))(v132 + 16))(v134, v333, v131);
      *v135 = v129;
      v135[1] = v128;
      swift_retain();
      v137 = (id)FPDomainUnavailableError();
      v129();
      v30 = (uint64_t *)v327;
      swift_release();

      sub_23AA8A05C(v123, &qword_2542DF200);
      v138 = v131;
      v119 = v337;
      (*(void (**)(char *, uint64_t))(v136 + 8))(v134, v138);
      v120 = v315;
      v121 = (uint64_t *)v329;
      v117 = v332;
      v118 = v335.n128_u64[0];
      if (v335.n128_u64[0] == v332)
        goto LABEL_83;
    }
    swift_bridgeObjectRelease();
    v5 = v318;
    v14 = v325;
    v18 = v317;
    v111 = v330;
    v110 = v328;
    if (v328)
      goto LABEL_61;
LABEL_62:
    v113 = (int64_t)v111 + 1;
    if (__OFADD__(v111, 1))
      goto LABEL_196;
    if (v113 >= v323)
      break;
    v114 = v322[v113];
    v115 = (int64_t)v111 + 1;
    if (!v114)
    {
      v115 = (int64_t)v111 + 2;
      if ((uint64_t)v111 + 2 >= v323)
        break;
      v114 = v322[v115];
      if (!v114)
      {
        v115 = (int64_t)v111 + 3;
        if ((uint64_t)v111 + 3 >= v323)
          break;
        v114 = v322[v115];
        if (!v114)
        {
          v115 = (int64_t)v111 + 4;
          if ((uint64_t)v111 + 4 >= v323)
            break;
          v114 = v322[v115];
          if (!v114)
          {
            v116 = (char *)v111 + 5;
            if ((uint64_t)v111 + 5 >= v323)
              break;
            v114 = v322[(_QWORD)v116];
            if (!v114)
            {
              while (1)
              {
                v115 = (int64_t)(v116 + 1);
                if (__OFADD__(v116, 1))
                  break;
                if (v115 >= v323)
                  goto LABEL_89;
                v114 = v322[v115];
                ++v116;
                if (v114)
                  goto LABEL_77;
              }
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
              goto LABEL_204;
            }
            v115 = (int64_t)v111 + 5;
          }
        }
      }
    }
LABEL_77:
    v328 = (v114 - 1) & v114;
    v330 = (_QWORD *)v115;
  }
LABEL_89:
  swift_release();
  v156 = sub_23AAEAAEC(MEMORY[0x24BEE4AF8]);
  *v321 = v156;
  swift_bridgeObjectRelease();
  v157 = (_QWORD *)(v294 + qword_2542EE008);
  swift_beginAccess();
  v326 = v157;
  v158 = (char *)*v157;
  v159 = *(_QWORD *)(*v157 + 64);
  v327 = *v157 + 64;
  v160 = 1 << v158[32];
  v161 = -1;
  if (v160 < 64)
    v161 = ~(-1 << v160);
  v331 = v161 & v159;
  v328 = (unint64_t)(v160 + 63) >> 6;
  v329 = v158;
  swift_bridgeObjectRetain();
  v162 = 0;
  v163 = v336;
LABEL_92:
  if (v331)
  {
    v164 = __clz(__rbit64(v331));
    v331 &= v331 - 1;
    v330 = v162;
    v165 = v164 | ((_QWORD)v162 << 6);
    goto LABEL_110;
  }
  v166 = (int64_t)v162 + 1;
  if (__OFADD__(v162, 1))
  {
LABEL_197:
    __break(1u);
LABEL_198:
    __break(1u);
LABEL_199:
    __break(1u);
LABEL_200:
    __break(1u);
LABEL_201:
    __break(1u);
    goto LABEL_202;
  }
  if (v166 >= v328)
    goto LABEL_120;
  v167 = *(_QWORD *)(v327 + 8 * v166);
  v168 = (int64_t)v162 + 1;
  if (v167)
    goto LABEL_109;
  v168 = (int64_t)v162 + 2;
  if ((uint64_t)v162 + 2 >= v328)
    goto LABEL_120;
  v167 = *(_QWORD *)(v327 + 8 * v168);
  if (v167)
    goto LABEL_109;
  v168 = (int64_t)v162 + 3;
  if ((uint64_t)v162 + 3 >= v328)
    goto LABEL_120;
  v167 = *(_QWORD *)(v327 + 8 * v168);
  if (v167)
    goto LABEL_109;
  v168 = (int64_t)v162 + 4;
  if ((uint64_t)v162 + 4 >= v328)
    goto LABEL_120;
  v167 = *(_QWORD *)(v327 + 8 * v168);
  if (v167)
  {
LABEL_109:
    v331 = (v167 - 1) & v167;
    v330 = (_QWORD *)v168;
    v165 = __clz(__rbit64(v167)) + (v168 << 6);
LABEL_110:
    v170 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)v329 + 7) + 8 * v165) + 16);
    v332 = *(NSObject **)(*((_QWORD *)v329 + 7) + 8 * v165);
    swift_bridgeObjectRetain();
    v171 = 0;
    v333 = v170;
    if (!v170)
    {
LABEL_115:
      v189 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v189(v14, 1, 1, v163);
      v337 = v170;
      goto LABEL_116;
    }
    while ((Class)v171 < v332[2].isa)
    {
      sub_23AA8EFC8((uint64_t)v332+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v171, (uint64_t)v14, &qword_2542DF1F0);
      v337 = v171 + 1;
      v189 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v189(v14, 0, 1, v163);
LABEL_116:
      v190 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48);
      v191 = 1;
      if (v190(v14, 1, v163) != 1)
      {
        v192 = *(int *)(v163 + 64);
        v193 = (char *)v14 + v192;
        v335.n128_u64[0] = *(int *)(v163 + 80);
        v194 = v14[1];
        v195 = v306;
        *v306 = *v14;
        v195[1] = v194;
        v196 = (char *)v195 + v192;
        v197 = sub_23B1C60A4();
        v198 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v197 - 8) + 32);
        v198(v196, v193, v197);
        v199 = swift_allocObject();
        *(_OWORD *)(v199 + 16) = *(_OWORD *)((char *)v325 + v335.n128_u64[0]);
        v200 = *v195;
        v201 = v316;
        v202 = (char *)v316 + *(int *)(v336 + 64);
        v203 = (_QWORD *)((char *)v316 + *(int *)(v336 + 80));
        *v316 = v200;
        v201[1] = v194;
        v204 = v197;
        v18 = v317;
        v198(v202, v196, v204);
        v191 = 0;
        *v203 = sub_23ADF35F8;
        v203[1] = v199;
        v14 = v325;
        v5 = v318;
        v163 = v336;
      }
      v205 = (uint64_t)v316;
      v189(v316, v191, 1, v163);
      sub_23AA724E8(v205, (uint64_t)v18, &qword_2542DF1F8);
      if (v190(v18, 1, v163) == 1)
      {
        swift_bridgeObjectRelease();
        v162 = v330;
        goto LABEL_92;
      }
      v172 = *(int *)(v163 + 64);
      v173 = (uint64_t)v309;
      v174 = (char *)v309 + v172;
      v334 = (uint64_t)v309 + v172;
      v175 = *v18;
      v176 = v18[1];
      v335.n128_u64[0] = (unint64_t)v18 + v172;
      v177 = *(int *)(v336 + 80);
      v178 = *(void (**)(void))((char *)v18 + v177);
      v179 = *(void (**)(void))((char *)v18 + v177 + 8);
      v180 = (void (**)(void))((char *)v309 + v177);
      *v309 = v175;
      *(_QWORD *)(v173 + 8) = v176;
      v181 = sub_23B1C60A4();
      v182 = *(_QWORD *)(v181 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v182 + 32))(v174, v335.n128_u64[0], v181);
      *v180 = v178;
      v180[1] = v179;
      v183 = v310;
      v184 = (char *)v310 + *(int *)(v336 + 64);
      v185 = (void (**)(void))((char *)v310 + *(int *)(v336 + 80));
      *v310 = v175;
      v183[1] = v176;
      v186 = v182;
      (*(void (**)(char *, uint64_t, uint64_t))(v182 + 16))(v184, v334, v181);
      *v185 = v178;
      v185[1] = v179;
      swift_retain();
      v187 = (id)FPDomainUnavailableError();
      v178();
      v18 = v317;
      swift_release();

      v163 = v336;
      v14 = v325;
      sub_23AA8A05C(v173, &qword_2542DF1F0);
      v188 = *(void (**)(char *, uint64_t))(v186 + 8);
      v5 = v318;
      v188(v184, v181);
      v170 = v333;
      v171 = v337;
      if (v337 == v333)
        goto LABEL_115;
    }
    goto LABEL_183;
  }
  v169 = (char *)v162 + 5;
  if ((uint64_t)v162 + 5 < v328)
  {
    v167 = *(_QWORD *)(v327 + 8 * (_QWORD)v169);
    if (!v167)
    {
      while (1)
      {
        v168 = (int64_t)(v169 + 1);
        if (__OFADD__(v169, 1))
          goto LABEL_203;
        if (v168 >= v328)
          goto LABEL_120;
        v167 = *(_QWORD *)(v327 + 8 * v168);
        ++v169;
        if (v167)
          goto LABEL_109;
      }
    }
    v168 = (int64_t)v162 + 5;
    goto LABEL_109;
  }
LABEL_120:
  swift_release();
  v206 = v326;
  v207 = MEMORY[0x24BEE4AF8];
  *v206 = sub_23AAF7BF4(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRelease();
  v208 = v294 + qword_2542EDF80;
  swift_beginAccess();
  v209 = *(_QWORD *)v208;
  v210 = *(_QWORD *)(*(_QWORD *)v208 + 16);
  if (v210)
  {
    swift_bridgeObjectRetain();
    v211 = v209 + 40;
    do
    {
      v212 = *(void (**)(id *))(v211 - 8);
      swift_retain();
      v213 = (id)FPDomainUnavailableError();
      v343 = v213;
      v212(&v343);
      swift_release();

      v211 += 16;
      --v210;
    }
    while (v210);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)v208 = v207;
  swift_bridgeObjectRelease();
  v214 = v294 + qword_2542EDFD8;
  swift_beginAccess();
  v215 = *(_QWORD *)v214;
  v216 = *(_QWORD *)(*(_QWORD *)v214 + 16);
  if (v216)
  {
    swift_bridgeObjectRetain();
    v217 = v215 + 48;
    do
    {
      v218 = *(_QWORD *)(v217 - 16);
      v219 = *(void (**)(id *))(v217 - 8);
      v217 += 24;
      swift_retain();
      sub_23AA93780(v218);
      v220 = (id)FPDomainUnavailableError();
      v342 = v220;
      v219(&v342);

      sub_23ADF2688(v218);
      swift_release();
      --v216;
    }
    while (v216);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)v214 = v207;
  swift_bridgeObjectRelease();
  v221 = v294 + qword_2542EDFE8;
  swift_beginAccess();
  v334 = v221;
  v222 = *(_QWORD *)v221;
  v223 = *(_QWORD *)(*(_QWORD *)v221 + 64);
  v335.n128_u64[0] = *(_QWORD *)v221 + 64;
  v224 = 1 << *(_BYTE *)(v222 + 32);
  v225 = -1;
  if (v224 < 64)
    v225 = ~(-1 << v224);
  v226 = v225 & v223;
  v336 = (unint64_t)(v224 + 63) >> 6;
  v337 = v222;
  swift_bridgeObjectRetain();
  v227 = 0;
  while (2)
  {
    if (v226)
    {
      v228 = __clz(__rbit64(v226));
      v226 &= v226 - 1;
      v229 = v228 | (v227 << 6);
      goto LABEL_149;
    }
    v230 = v227 + 1;
    if (__OFADD__(v227, 1))
      goto LABEL_198;
    if (v230 >= v336)
    {
LABEL_153:
      swift_release();
      v239 = sub_23AAF7C00(MEMORY[0x24BEE4AF8]);
      *(_QWORD *)v334 = v239;
      swift_bridgeObjectRelease();
      v240 = v294 + qword_2542EDFF8;
      swift_beginAccess();
      v335.n128_u64[0] = v240;
      v241 = *(_QWORD *)v240;
      v242 = *(_QWORD *)(*(_QWORD *)v240 + 64);
      v336 = *(_QWORD *)v240 + 64;
      v243 = 1 << *(_BYTE *)(v241 + 32);
      v244 = -1;
      if (v243 < 64)
        v244 = ~(-1 << v243);
      v245 = v244 & v242;
      v337 = (unint64_t)(v243 + 63) >> 6;
      swift_bridgeObjectRetain();
      v246 = 0;
      while (1)
      {
        if (v245)
        {
          v247 = __clz(__rbit64(v245));
          v245 &= v245 - 1;
          v248 = v247 | (v246 << 6);
        }
        else
        {
          v249 = v246 + 1;
          if (__OFADD__(v246, 1))
            goto LABEL_199;
          if (v249 >= v337)
          {
LABEL_178:
            swift_release();
            v257 = (unint64_t *)v335.n128_u64[0];
            *v257 = sub_23AAEABF4(MEMORY[0x24BEE4AF8]);
            swift_bridgeObjectRelease();
            v258 = v294;
            v259 = *(void **)(v294 + qword_2542EDF90);
            swift_retain();
            v260 = v259;
            v261 = v291;
            sub_23B0DB8E8(v260, v258);
            swift_beginAccess();
            v262 = swift_bridgeObjectRetain();
            v263 = sub_23AEA4B64(v262);
            swift_bridgeObjectRelease();
            v264 = v263[2];
            if (!v264)
              goto LABEL_184;
            v265 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
            v266 = (id)fpfs_current_or_default_log();
            sub_23B1C5E58();
            v267 = v265;
            v268 = sub_23B1C5E40();
            v269 = sub_23B1C6AB8();
            v270 = os_log_type_enabled(v268, v269);
            v333 = (int64_t)v261;
            v337 = v264;
            v332 = v267;
            if (v270)
            {
              v271 = (uint8_t *)swift_slowAlloc();
              v272 = v263;
              v273 = (_QWORD *)swift_slowAlloc();
              *(_DWORD *)v271 = 138412290;
              v274 = -[NSObject enter](v267, sel_enter);
              v338 = (uint64_t)v274;
              sub_23B1C6CBC();
              *v273 = v274;

              _os_log_impl(&dword_23AA66000, v268, v269, "%@ Running jobs", v271, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
              swift_arrayDestroy();
              v275 = v273;
              v263 = v272;
              v264 = v337;
              MEMORY[0x23B8614BC](v275, -1, -1);
              MEMORY[0x23B8614BC](v271, -1, -1);
            }
            else
            {

              v268 = v267;
            }

            v276 = *(__n128 (**)(char *, uint64_t))(v290 + 8);
            v277 = v276(v292, v296);
            v278 = 0;
            v277.n128_u64[0] = 136315138;
            v335 = v277;
            v334 = MEMORY[0x24BEE4AD8] + 8;
            v279 = v295;
            v336 = (uint64_t)v276;
            do
            {
              v280 = v263[v278 + 4];
              swift_retain();
              v281 = (id)fpfs_current_or_default_log();
              sub_23B1C5E58();
              swift_retain();
              v282 = sub_23B1C5E40();
              v283 = sub_23B1C6AB8();
              if (os_log_type_enabled(v282, v283))
              {
                v284 = v263;
                v285 = swift_slowAlloc();
                v286 = swift_slowAlloc();
                v344 = v286;
                *(_DWORD *)v285 = v335.n128_u32[0];
                if (v280 < 0)
                  v338 = 2650214;
                else
                  v338 = 2650982;
                v339 = 0xE300000000000000;
                v287 = swift_retain();
                sub_23AE17C40(v287);
                sub_23B1C64F4();
                swift_bridgeObjectRelease();
                sub_23B1C64F4();
                swift_release();
                *(_QWORD *)(v285 + 4) = sub_23AABEC68(v338, v339, &v344);
                swift_release();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_23AA66000, v282, v283, "running job: %s", (uint8_t *)v285, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x23B8614BC](v286, -1, -1);
                MEMORY[0x23B8614BC](v285, -1, -1);
                swift_release();

                v279 = v295;
                v276 = (__n128 (*)(char *, uint64_t))v336;
                ((void (*)(char *, uint64_t))v336)(v295, v296);
                v263 = v284;
                v264 = v337;
              }
              else
              {

                swift_release_n();
                v276(v279, v296);
              }
              ++v278;
            }
            while (v264 != v278);
            swift_release();
            v288 = v332;
            sub_23AFC1214(v332);

            return;
          }
          v250 = *(_QWORD *)(v336 + 8 * v249);
          ++v246;
          if (!v250)
          {
            v246 = v249 + 1;
            if (v249 + 1 >= v337)
              goto LABEL_178;
            v250 = *(_QWORD *)(v336 + 8 * v246);
            if (!v250)
            {
              v246 = v249 + 2;
              if (v249 + 2 >= v337)
                goto LABEL_178;
              v250 = *(_QWORD *)(v336 + 8 * v246);
              if (!v250)
              {
                v246 = v249 + 3;
                if (v249 + 3 >= v337)
                  goto LABEL_178;
                v250 = *(_QWORD *)(v336 + 8 * v246);
                if (!v250)
                {
                  v251 = v249 + 4;
                  if (v251 >= v337)
                    goto LABEL_178;
                  v250 = *(_QWORD *)(v336 + 8 * v251);
                  if (!v250)
                  {
                    while (1)
                    {
                      v246 = v251 + 1;
                      if (__OFADD__(v251, 1))
                        goto LABEL_205;
                      if (v246 >= v337)
                        goto LABEL_178;
                      v250 = *(_QWORD *)(v336 + 8 * v246);
                      ++v251;
                      if (v250)
                        goto LABEL_173;
                    }
                  }
                  v246 = v251;
                }
              }
            }
          }
LABEL_173:
          v245 = (v250 - 1) & v250;
          v248 = __clz(__rbit64(v250)) + (v246 << 6);
        }
        v252 = *(_QWORD *)(*(_QWORD *)(v241 + 56) + 8 * v248);
        v253 = *(_QWORD *)(v252 + 16);
        if (v253)
        {
          swift_bridgeObjectRetain();
          v254 = v252 + 40;
          do
          {
            v255 = *(void (**)(id *))(v254 - 8);
            swift_retain();
            v256 = (id)FPDomainUnavailableError();
            v340 = v256;
            v255(&v340);
            swift_release();

            v254 += 16;
            --v253;
          }
          while (v253);
          swift_bridgeObjectRelease();
        }
      }
    }
    v231 = *(_QWORD *)(v335.n128_u64[0] + 8 * v230);
    ++v227;
    if (v231)
      goto LABEL_148;
    v227 = v230 + 1;
    if (v230 + 1 >= v336)
      goto LABEL_153;
    v231 = *(_QWORD *)(v335.n128_u64[0] + 8 * v227);
    if (v231)
      goto LABEL_148;
    v227 = v230 + 2;
    if (v230 + 2 >= v336)
      goto LABEL_153;
    v231 = *(_QWORD *)(v335.n128_u64[0] + 8 * v227);
    if (v231)
      goto LABEL_148;
    v227 = v230 + 3;
    if (v230 + 3 >= v336)
      goto LABEL_153;
    v231 = *(_QWORD *)(v335.n128_u64[0] + 8 * v227);
    if (v231)
    {
LABEL_148:
      v226 = (v231 - 1) & v231;
      v229 = __clz(__rbit64(v231)) + (v227 << 6);
LABEL_149:
      v233 = *(_QWORD *)(*(_QWORD *)(v337 + 56) + 8 * v229);
      v234 = *(_QWORD *)(v233 + 16);
      if (v234)
      {
        swift_bridgeObjectRetain();
        v235 = v233 + 64;
        do
        {
          v236 = *(_QWORD *)(v235 - 32);
          v237 = *(void (**)(id *))(v235 - 8);
          swift_retain();
          sub_23AA93780(v236);
          v238 = (id)FPDomainUnavailableError();
          v341 = v238;
          v237(&v341);

          sub_23ADF2688(v236);
          swift_release();
          v235 += 40;
          --v234;
        }
        while (v234);
        swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  v232 = v230 + 4;
  if (v232 >= v336)
    goto LABEL_153;
  v231 = *(_QWORD *)(v335.n128_u64[0] + 8 * v232);
  if (v231)
  {
    v227 = v232;
    goto LABEL_148;
  }
  while (1)
  {
    v227 = v232 + 1;
    if (__OFADD__(v232, 1))
      break;
    if (v227 >= v336)
      goto LABEL_153;
    v231 = *(_QWORD *)(v335.n128_u64[0] + 8 * v227);
    ++v232;
    if (v231)
      goto LABEL_148;
  }
LABEL_204:
  __break(1u);
LABEL_205:
  __break(1u);
}

uint64_t sub_23ADDA2BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  unint64_t v23;
  int v24;
  id v25;
  char *v26;
  char *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  char v35;
  void *v36;
  id v37;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  int v56;

  v51 = a7;
  v49 = a6;
  v55 = a5;
  v56 = a4;
  v10 = sub_23B1C5DC8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v45 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v43 - v17;
  v19 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a1;
  v50 = (id)fpfs_adopt_log();
  if (qword_2542E6818 != -1)
    swift_once();
  v22 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v18, 1, 1, v10);
  v53 = 0x61657220636E7973;
  v54 = 0xEA00000000002064;
  v47 = a2;
  v48 = a3;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v23 = v54;
  v43 = v53;
  sub_23AA8EFC8((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_2542E67B8);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10);
  v44 = v18;
  if (v24 == 1)
  {
    v25 = v22;
    v26 = v45;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v16, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v26 = v45;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v45, v16, v10);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v26, v10);
  *(_QWORD *)&v21[*(int *)(v19 + 20)] = v22;
  v27 = &v21[*(int *)(v19 + 24)];
  *(_QWORD *)v27 = "DB queue wait";
  *((_QWORD *)v27 + 1) = 13;
  v27[16] = 2;
  v28 = v22;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v29 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v29 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v29 + 32) = v43;
  *(_QWORD *)(v29 + 40) = v23;
  v41 = v29;
  v40 = 2;
  v39 = 2;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v26, v10);
  swift_bridgeObjectRelease();
  v30 = sub_23AA8A05C((uint64_t)v44, (uint64_t *)&unk_2542E67B8);
  MEMORY[0x24BDAC7A8](v30);
  v31 = v47;
  *(&v43 - 6) = (uint64_t)v21;
  *(&v43 - 5) = v31;
  v39 = v48;
  v40 = v56;
  v41 = v49;
  v42 = v51;
  v33 = v32;
  v34 = v52;
  v35 = sub_23AC4979C(0, v55 & 1, (uint64_t)"syncRead(quiet:function:block:)", 31, 2, (uint64_t)sub_23ADF213C, (uint64_t)(&v43 - 8));
  if (v34)
  {
    sub_23AA937BC((uint64_t)v21, type metadata accessor for Signpost);

  }
  else
  {

    sub_23AA937BC((uint64_t)v21, type metadata accessor for Signpost);
  }
  v36 = v50;
  v37 = (id)fpfs_adopt_log();

  return v35 & 1;
}

void sub_23ADDA710(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  unint64_t v24;
  int v25;
  id v26;
  char *v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int v54;
  int v55;

  v51 = a8;
  v50 = a7;
  v48 = a6;
  v54 = a5;
  v55 = a4;
  v11 = sub_23B1C5DC8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v44 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v41 - v18;
  v20 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a1;
  v49 = (id)fpfs_adopt_log();
  if (qword_2542E6818 != -1)
    swift_once();
  v23 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v19, 1, 1, v11);
  v52 = 0x61657220636E7973;
  v53 = 0xEA00000000002064;
  v46 = a2;
  v47 = a3;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v24 = v53;
  v42 = v52;
  sub_23AA8EFC8((uint64_t)v19, (uint64_t)v17, (uint64_t *)&unk_2542E67B8);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11);
  v43 = v19;
  if (v25 == 1)
  {
    v26 = v23;
    v27 = v44;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v17, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v27 = v44;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v44, v17, v11);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v27, v11);
  *(_QWORD *)&v22[*(int *)(v20 + 20)] = v23;
  v28 = &v22[*(int *)(v20 + 24)];
  *(_QWORD *)v28 = "DB queue wait";
  *((_QWORD *)v28 + 1) = 13;
  v28[16] = 2;
  v29 = v23;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v30 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v30 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v30 + 32) = v42;
  *(_QWORD *)(v30 + 40) = v24;
  v39 = v30;
  v38 = 2;
  v37 = 2;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v27, v11);
  swift_bridgeObjectRelease();
  v31 = sub_23AA8A05C((uint64_t)v43, (uint64_t *)&unk_2542E67B8);
  MEMORY[0x24BDAC7A8](v31);
  v32 = v46;
  *(&v41 - 6) = (uint64_t)v22;
  *(&v41 - 5) = v32;
  v37 = v47;
  v38 = v55;
  v39 = v48;
  v40 = v50;
  v34 = v33;
  sub_23AC494B4(0, v54 & 1, (uint64_t)"syncRead(quiet:function:block:)", 31, 2, (uint64_t)sub_23ADF26CC, (uint64_t)(&v41 - 8));
  sub_23AA937BC((uint64_t)v22, type metadata accessor for Signpost);

  v35 = v49;
  v36 = (id)fpfs_adopt_log();

}

uint64_t sub_23ADDAB50(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  char *v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(uint64_t *__return_ptr, uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;

  v38 = a5;
  v37 = a6;
  LODWORD(v34) = a4;
  v33 = a3;
  v6 = sub_23B1C5DC8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v36 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v32 - v13;
  v15 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  if (qword_2542E6818 != -1)
    swift_once();
  v18 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v14, 1, 1, v6);
  v40 = 0x61657220636E7973;
  v41 = 0xEA00000000002064;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v33 = v40;
  v34 = v41;
  sub_23AA8EFC8((uint64_t)v14, (uint64_t)v12, (uint64_t *)&unk_2542E67B8);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
  v20 = v7;
  v21 = v6;
  v35 = v14;
  if (v19 == 1)
  {
    v22 = v18;
    v23 = v36;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v12, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v23 = v36;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v36, v12, v6);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v17, v23, v6);
  v36 = (char *)*(int *)(v15 + 20);
  *(_QWORD *)&v36[v17] = v18;
  v24 = (char *)(v17 + *(int *)(v15 + 24));
  *(_QWORD *)v24 = "DB queue";
  *((_QWORD *)v24 + 1) = 8;
  v24[16] = 2;
  v25 = v18;
  v32 = v21;
  v26 = v34;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v27 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v27 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v27 + 32) = v33;
  *(_QWORD *)(v27 + 40) = v26;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v32);
  swift_bridgeObjectRelease();
  v28 = sub_23AA8A05C((uint64_t)v35, (uint64_t *)&unk_2542E67B8);
  v29 = v39;
  v38(&v42, v28);
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  sub_23AA937BC(v17, type metadata accessor for Signpost);
  if (!v29)
    v30 = v42;
  return v30 & 1;
}

uint64_t sub_23ADDAF4C@<X0>(uint64_t a1@<X2>, int a2@<W3>, void (*a3)(uint64_t)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  int v19;
  id v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  unint64_t v37;

  v34 = a4;
  v35 = a3;
  LODWORD(v30) = a2;
  v29 = a1;
  v33 = a5;
  v5 = sub_23B1C5DC8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v32 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v28 - v12;
  v14 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  if (qword_2542E6818 != -1)
    swift_once();
  v17 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  v36 = 0x61657220636E7973;
  v37 = 0xEA00000000002064;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v18 = v37;
  v30 = v36;
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_2542E67B8);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
  v31 = v13;
  if (v19 == 1)
  {
    v20 = v17;
    v21 = v32;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v21 = v32;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v32, v11, v5);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v16, v21, v5);
  v32 = (char *)*(int *)(v14 + 20);
  *(_QWORD *)&v32[v16] = v17;
  v22 = *(int *)(v14 + 24);
  v29 = v5;
  v23 = (char *)(v16 + v22);
  *(_QWORD *)v23 = "DB queue";
  *((_QWORD *)v23 + 1) = 8;
  v23[16] = 2;
  v24 = v17;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v25 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v25 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v25 + 32) = v30;
  *(_QWORD *)(v25 + 40) = v18;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v29);
  swift_bridgeObjectRelease();
  v26 = sub_23AA8A05C((uint64_t)v31, (uint64_t *)&unk_2542E67B8);
  v35(v26);
  sub_23B1C6BD8();
  sub_23B1C5DA4();
  return sub_23AA937BC(v16, type metadata accessor for Signpost);
}

uint64_t sub_23ADDB2FC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t result;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  void (*v72)(_QWORD *, uint64_t, uint64_t, uint64_t);
  int64_t v73;
  unint64_t v74;
  int64_t v75;
  unsigned int (*v76)(unint64_t *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t *v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char *v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t *v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t *v117;
  __int128 *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  unint64_t v128;
  void (*v129)(uint64_t *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v130)(uint64_t *, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t *v135;
  char *v136;
  uint64_t v137;
  void (*v138)(char *, char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  char *v142;
  uint64_t (**v143)(uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t, char *, uint64_t);
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  void (*v189)(_QWORD *, uint64_t, uint64_t, unint64_t);
  unsigned int (*v190)(_QWORD *, uint64_t, unint64_t);
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  char *v194;
  uint64_t v195;
  uint64_t *v196;
  char *v197;
  uint64_t v198;
  void (*v199)(char *, char *, uint64_t);
  uint64_t v200;
  uint64_t v201;
  _QWORD *v202;
  char *v203;
  _QWORD *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  __int128 *v208;
  uint64_t v209;
  uint64_t v210;
  _OWORD *v211;
  char *v212;
  uint64_t v213;
  void (*v214)(char *, uint64_t, uint64_t);
  uint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  unint64_t v225;
  unint64_t v226;
  BOOL v227;
  unint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  int v234;
  uint64_t v235;
  unint64_t v236;
  _QWORD *v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t v245;
  _QWORD *v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  uint64_t v256;
  unint64_t v257;
  unint64_t v258;
  unint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  unint64_t v271;
  unint64_t v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unint64_t v276;
  uint64_t v277;
  _QWORD v278[2];
  uint64_t v279;
  uint64_t v280;
  int64_t v281;
  uint64_t v282;
  uint64_t v283;
  int64_t v284;
  char *v285;
  uint64_t v286;
  int64_t v287;
  uint64_t v288;
  char *v289;
  uint64_t v290;
  unint64_t v291;
  unint64_t v292;
  uint64_t *v293;
  int64_t v294;
  uint64_t *v295;
  uint64_t *v296;
  unint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  id v302;
  unint64_t *v303;
  _QWORD *v304;
  uint64_t v305;
  uint64_t v306;
  _QWORD *v307;
  _QWORD *v308;
  uint64_t v309;
  _QWORD *v310;
  _OWORD *v311;
  char *v312;
  _QWORD *v313;
  uint64_t v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  _QWORD *v336;

  v336 = a1;
  v320 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1F0);
  v300 = *(_QWORD *)(v320 - 8);
  v3 = MEMORY[0x24BDAC7A8](v320);
  v311 = (_OWORD *)((char *)v278 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v293 = (_QWORD *)((char *)v278 - v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF1F8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v308 = (_QWORD *)((char *)v278 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x24BDAC7A8](v7);
  v307 = (_QWORD *)((char *)v278 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v299 = (uint64_t)v278 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF200);
  v306 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)&v318 = (char *)v278 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v296 = (_QWORD *)((char *)v278 - v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF208);
  v17 = MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)&v319 = (char *)v278 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v313 = (_QWORD *)((char *)v278 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v312 = (char *)v278 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
  v304 = *(_QWORD **)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)&v316 = (char *)v278 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v295 = (_QWORD *)((char *)v278 - v25);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A18);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v278 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v310 = (_QWORD *)((char *)v278 - v31);
  MEMORY[0x24BDAC7A8](v30);
  v303 = (_QWORD *)((char *)v278 - v32);
  v286 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
  v282 = *(_QWORD *)(v286 - 8);
  MEMORY[0x24BDAC7A8](v286);
  v305 = (uint64_t)v278 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E48);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v289 = (char *)v278 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)v278 - v37;
  v279 = a2;
  v39 = (uint64_t *)(a2 + qword_2542EDFF0);
  v40 = v29;
  swift_beginAccess();
  v41 = *v39;
  v42 = *(_QWORD *)(*v39 + 64);
  v280 = *v39 + 64;
  v43 = 1 << *(_BYTE *)(v41 + 32);
  if (v43 < 64)
    v44 = ~(-1 << v43);
  else
    v44 = -1;
  v45 = v44 & v42;
  v281 = (unint64_t)(v43 + 63) >> 6;
  v278[0] = v281 - 1;
  v283 = v41;
  result = swift_bridgeObjectRetain();
  v287 = 0;
  v297 = 0x800000023B2050F0;
  v314 = v12;
  v321 = v22;
  v285 = v38;
LABEL_6:
  if (v45)
  {
    v288 = (v45 - 1) & v45;
    v47 = __clz(__rbit64(v45)) | (v287 << 6);
    v48 = (uint64_t)v289;
LABEL_8:
    v49 = *(_QWORD *)(v283 + 56);
    v50 = *(_QWORD *)(v283 + 48) + 16 * v47;
    v51 = *(_QWORD *)v50;
    LOBYTE(v50) = *(_BYTE *)(v50 + 8);
    *(_QWORD *)v48 = v51;
    *(_BYTE *)(v48 + 8) = v50;
    v52 = v49 + *(_QWORD *)(v282 + 72) * v47;
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E50);
    v54 = v52;
    v48 = (uint64_t)v289;
    sub_23AA8EFC8(v54, (uint64_t)&v289[*(int *)(v53 + 48)], &qword_2542E6C80);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v48, 0, 1, v53);
    goto LABEL_27;
  }
  v55 = v287 + 1;
  v48 = (uint64_t)v289;
  if (__OFADD__(v287, 1))
    goto LABEL_231;
  if (v55 < v281)
  {
    v56 = *(_QWORD *)(v280 + 8 * v55);
    if (v56)
    {
LABEL_12:
      v288 = (v56 - 1) & v56;
      v47 = __clz(__rbit64(v56)) + (v55 << 6);
      v287 = v55;
      goto LABEL_8;
    }
    v57 = v287 + 2;
    ++v287;
    if (v55 + 1 < v281)
    {
      v56 = *(_QWORD *)(v280 + 8 * v57);
      if (v56)
      {
LABEL_15:
        v55 = v57;
        goto LABEL_12;
      }
      v287 = v55 + 1;
      if (v55 + 2 < v281)
      {
        v56 = *(_QWORD *)(v280 + 8 * (v55 + 2));
        if (v56)
        {
          v55 += 2;
          goto LABEL_12;
        }
        v57 = v55 + 3;
        v287 = v55 + 2;
        if (v55 + 3 < v281)
        {
          v56 = *(_QWORD *)(v280 + 8 * v57);
          if (v56)
            goto LABEL_15;
          while (1)
          {
            v55 = v57 + 1;
            if (__OFADD__(v57, 1))
              goto LABEL_242;
            if (v55 >= v281)
              break;
            v56 = *(_QWORD *)(v280 + 8 * v55);
            ++v57;
            if (v56)
              goto LABEL_12;
          }
          v287 = v278[0];
        }
      }
    }
  }
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E50);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v48, 1, 1, v58);
  v288 = 0;
LABEL_27:
  sub_23AA724E8(v48, (uint64_t)v38, &qword_2569E5E48);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v38, 1, v59) == 1)
  {
    swift_release();
    v109 = (unint64_t *)(v279 + qword_2542EE000);
    swift_beginAccess();
    v110 = *v109;
    v111 = *(_QWORD *)(*v109 + 64);
    v294 = *v109 + 64;
    v112 = 1 << *(_BYTE *)(v110 + 32);
    v113 = -1;
    if (v112 < 64)
      v113 = ~(-1 << v112);
    v114 = v113 & v111;
    v295 = (uint64_t *)((unint64_t)(v112 + 63) >> 6);
    v309 = *MEMORY[0x24BDC8228];
    v303 = (unint64_t *)*MEMORY[0x24BDC8230];
    v297 = v110;
    result = swift_bridgeObjectRetain();
    v115 = 0;
    v292 = (unint64_t)"+ processing requests";
    v305 = 0x800000023B2050B0;
    v116 = v320;
    v117 = (uint64_t *)v319;
    v118 = (__int128 *)v312;
LABEL_74:
    v119 = v306;
    if (v114)
    {
      v298 = (v114 - 1) & v114;
      v301 = v115;
      v120 = __clz(__rbit64(v114)) | (v115 << 6);
LABEL_90:
      v125 = 8 * v120;
      v126 = *(_QWORD **)(*(_QWORD *)(v297 + 56) + v125);
      v127 = v126[2];
      *(_QWORD *)&v315 = *(_QWORD *)(*(_QWORD *)(v297 + 48) + v125);
      v302 = (id)v315;
      v304 = v126;
      result = swift_bridgeObjectRetain();
      v128 = 0;
      v310 = (_QWORD *)v127;
      while (1)
      {
        if (v128 == v127)
        {
          v129 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v119 + 56);
          v129(v117, 1, 1, v12);
          v321 = v127;
        }
        else
        {
          if (v128 >= v304[2])
          {
            __break(1u);
            goto LABEL_228;
          }
          sub_23AA8EFC8((uint64_t)v304+ ((*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80))+ *(_QWORD *)(v119 + 72) * v128, (uint64_t)v117, &qword_2542DF200);
          v321 = v128 + 1;
          v129 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v119 + 56);
          v129(v117, 0, 1, v12);
        }
        v130 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v119 + 48);
        v131 = 1;
        if (v130(v117, 1, v12) != 1)
        {
          v132 = *(int *)(v12 + 64);
          v133 = (char *)v117 + v132;
          *(_QWORD *)&v317 = *(int *)(v12 + 80);
          v134 = v117[1];
          v135 = v296;
          *v296 = *v117;
          v135[1] = v134;
          v136 = (char *)v135 + v132;
          v137 = sub_23B1C60A4();
          v138 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 32);
          v138(v136, v133, v137);
          v139 = swift_allocObject();
          *(_OWORD *)(v139 + 16) = *(_OWORD *)(v319 + v317);
          v140 = *v135;
          v141 = v313;
          v142 = (char *)v313 + *(int *)(v314 + 64);
          v143 = (uint64_t (**)(uint64_t))((char *)v313 + *(int *)(v314 + 80));
          *v313 = v140;
          v141[1] = v134;
          v12 = v314;
          v144 = v137;
          v116 = v320;
          v138(v142, v136, v144);
          v131 = 0;
          *v143 = sub_23ADF26C4;
          v143[1] = (uint64_t (*)(uint64_t))v139;
          v118 = (__int128 *)v312;
          v117 = (uint64_t *)v319;
        }
        v145 = (uint64_t)v313;
        v129(v313, v131, 1, v12);
        sub_23AA724E8(v145, (uint64_t)v118, &qword_2542DF208);
        if (v130((uint64_t *)v118, 1, v12) == 1)
        {

          result = swift_bridgeObjectRelease();
          v115 = v301;
          v114 = v298;
          goto LABEL_74;
        }
        v146 = *(int *)(v12 + 64);
        v147 = (char *)v118 + v146;
        v148 = *(int *)(v12 + 80);
        v149 = v318;
        v150 = v318 + v146;
        v317 = *v118;
        *(_OWORD *)v318 = v317;
        v151 = sub_23B1C60A4();
        v152 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 32);
        v316 = *(__int128 *)((char *)v118 + v148);
        v152(v150, v147, v151);
        *(_OWORD *)(v149 + v148) = v316;
        v153 = v336[3];
        v154 = v336[4];
        __swift_project_boxed_opaque_existential_1(v336, v153);
        v332 = 0;
        v333 = 0xE000000000000000;
        v155 = v317;
        sub_23AA93780(v317);
        sub_23B1C6EFC();
        v156 = sub_23B1C63E0();
        v158 = v157;
        if (v156 == sub_23B1C63E0() && v158 == v159)
          break;
        v160 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v160 & 1) == 0)
        {
          v161 = sub_23B1C63E0();
          v163 = v162;
          if (v161 == sub_23B1C63E0() && v163 == v164)
            break;
          v165 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v165 & 1) == 0)
            sub_23B1C63E0();
        }
LABEL_92:
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        sub_23AE5DE58(v155);
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23ADF2688(v155);
        sub_23AEBD130(v332, v333, v153, v154);
        swift_bridgeObjectRelease();
        result = sub_23AA8A05C(v318, &qword_2542DF200);
        v116 = v320;
        v119 = v306;
        v117 = (uint64_t *)v319;
        v118 = (__int128 *)v312;
        v127 = (uint64_t)v310;
        v128 = v321;
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_92;
    }
    v121 = v115 + 1;
    if (__OFADD__(v115, 1))
      goto LABEL_230;
    if (v121 < (uint64_t)v295)
    {
      v122 = *(_QWORD *)(v294 + 8 * v121);
      v123 = v115 + 1;
      if (v122)
        goto LABEL_89;
      v123 = v115 + 2;
      if (v115 + 2 >= (uint64_t)v295)
        goto LABEL_107;
      v122 = *(_QWORD *)(v294 + 8 * v123);
      if (v122)
        goto LABEL_89;
      v123 = v115 + 3;
      if (v115 + 3 >= (uint64_t)v295)
        goto LABEL_107;
      v122 = *(_QWORD *)(v294 + 8 * v123);
      if (v122)
      {
LABEL_89:
        v298 = (v122 - 1) & v122;
        v301 = v123;
        v120 = __clz(__rbit64(v122)) + (v123 << 6);
        goto LABEL_90;
      }
      v124 = v115 + 4;
      if (v115 + 4 < (uint64_t)v295)
      {
        v122 = *(_QWORD *)(v294 + 8 * v124);
        if (v122)
        {
          v123 = v115 + 4;
          goto LABEL_89;
        }
        while (1)
        {
          v123 = v124 + 1;
          if (__OFADD__(v124, 1))
            goto LABEL_236;
          if (v123 >= (uint64_t)v295)
            break;
          v122 = *(_QWORD *)(v294 + 8 * v123);
          ++v124;
          if (v122)
            goto LABEL_89;
        }
      }
    }
LABEL_107:
    swift_release();
    v166 = (uint64_t *)(v279 + qword_2542EE008);
    swift_beginAccess();
    v167 = *v166;
    v168 = *(_QWORD *)(*v166 + 64);
    v303 = (unint64_t *)(*v166 + 64);
    v169 = 1 << *(_BYTE *)(v167 + 32);
    v170 = -1;
    if (v169 < 64)
      v170 = ~(-1 << v169);
    v171 = v170 & v168;
    v304 = (_QWORD *)((unint64_t)(v169 + 63) >> 6);
    v305 = v167;
    result = swift_bridgeObjectRetain();
    v172 = 0;
    *(_QWORD *)&v315 = v292 | 0x8000000000000000;
LABEL_111:
    v173 = v300;
    if (v171)
    {
      v306 = (v171 - 1) & v171;
      v309 = v172;
      v174 = __clz(__rbit64(v171)) | (v172 << 6);
LABEL_127:
      v179 = *(_QWORD *)(v305 + 56);
      v180 = *(_QWORD *)(v305 + 48) + 16 * v174;
      v181 = *(_QWORD *)v180;
      LODWORD(v317) = *(unsigned __int8 *)(v180 + 8);
      v182 = *(_QWORD *)(*(_QWORD *)(v179 + 8 * v174) + 16);
      v313 = *(_QWORD **)(v179 + 8 * v174);
      result = swift_bridgeObjectRetain();
      v183 = 0;
      v314 = v181;
      v184 = 0x6873617274;
      if (!v181)
        v184 = 1953460082;
      v312 = (char *)v184;
      v185 = 0xE500000000000000;
      if (!v181)
        v185 = 0xE400000000000000;
      v310 = (_QWORD *)v185;
      *(_QWORD *)&v316 = v182;
      while (1)
      {
        v188 = v308;
        if (v183 == v182)
        {
          v189 = *(void (**)(_QWORD *, uint64_t, uint64_t, unint64_t))(v173 + 56);
          v189(v308, 1, 1, v116);
          v321 = v182;
        }
        else
        {
          if (v183 >= v313[2])
          {
LABEL_228:
            __break(1u);
LABEL_229:
            __break(1u);
LABEL_230:
            __break(1u);
LABEL_231:
            __break(1u);
LABEL_232:
            __break(1u);
LABEL_233:
            __break(1u);
LABEL_234:
            __break(1u);
LABEL_235:
            __break(1u);
LABEL_236:
            __break(1u);
LABEL_237:
            __break(1u);
LABEL_238:
            __break(1u);
LABEL_239:
            __break(1u);
LABEL_240:
            __break(1u);
            goto LABEL_241;
          }
          sub_23AA8EFC8((uint64_t)v313+ ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80))+ *(_QWORD *)(v173 + 72) * v183, (uint64_t)v308, &qword_2542DF1F0);
          v321 = v183 + 1;
          v189 = *(void (**)(_QWORD *, uint64_t, uint64_t, unint64_t))(v173 + 56);
          v189(v188, 0, 1, v116);
        }
        v190 = *(unsigned int (**)(_QWORD *, uint64_t, unint64_t))(v173 + 48);
        v191 = 1;
        if (v190(v188, 1, v116) != 1)
        {
          v192 = *(int *)(v116 + 64);
          v193 = v308;
          v194 = (char *)v308 + v192;
          *(_QWORD *)&v319 = *(int *)(v116 + 80);
          v195 = v308[1];
          v196 = v293;
          *v293 = *v308;
          v196[1] = v195;
          v197 = (char *)v196 + v192;
          v198 = sub_23B1C60A4();
          v199 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 32);
          v199(v197, v194, v198);
          v200 = swift_allocObject();
          *(_OWORD *)(v200 + 16) = *(_OWORD *)((char *)v193 + v319);
          v201 = *v196;
          v202 = v307;
          v203 = (char *)v307 + *(int *)(v320 + 64);
          v204 = (_QWORD *)((char *)v307 + *(int *)(v320 + 80));
          *v307 = v201;
          v202[1] = v195;
          v199(v203, v197, v198);
          v116 = v320;
          v191 = 0;
          *v204 = sub_23ADF35F8;
          v204[1] = v200;
        }
        v205 = (uint64_t)v307;
        v189(v307, v191, 1, v116);
        v206 = v299;
        sub_23AA724E8(v205, v299, &qword_2542DF1F8);
        if (v190((_QWORD *)v206, 1, v116) == 1)
        {
          result = swift_bridgeObjectRelease();
          v172 = v309;
          v171 = v306;
          goto LABEL_111;
        }
        v207 = *(int *)(v116 + 64);
        v208 = (__int128 *)v206;
        v209 = v206 + v207;
        v210 = *(int *)(v116 + 80);
        v211 = v311;
        v212 = (char *)v311 + v207;
        v319 = *v208;
        *v311 = v319;
        v213 = sub_23B1C60A4();
        v214 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v213 - 8) + 32);
        v318 = *(__int128 *)((char *)v208 + v210);
        v214(v212, v209, v213);
        *(_OWORD *)((char *)v211 + v210) = v318;
        v215 = v336[3];
        v216 = v336[4];
        __swift_project_boxed_opaque_existential_1(v336, v215);
        v330 = 0;
        v331 = 0xE000000000000000;
        v217 = v319;
        sub_23AA93780(v319);
        sub_23B1C6EFC();
        if (!(_DWORD)v317)
          break;
        if ((_DWORD)v317 == 1)
        {
          v330 = 0x284449656C6966;
          v331 = 0xE700000000000000;
          v328 = v314;
LABEL_133:
          sub_23B1C7304();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          v186 = v330;
          v187 = v331;
          goto LABEL_134;
        }
        swift_bridgeObjectRelease();
        v186 = (uint64_t)v312;
        v187 = (uint64_t)v310;
LABEL_134:
        v183 = v321;
        v330 = v186;
        v331 = v187;
        sub_23B1C64F4();
        sub_23AE5BC48(v217);
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23ADF2688(v217);
        sub_23AEBD130(v330, v331, v215, v216);
        swift_bridgeObjectRelease();
        result = sub_23AA8A05C((uint64_t)v311, &qword_2542DF1F0);
        v173 = v300;
        v182 = v316;
      }
      v330 = 0x284449636F64;
      v331 = 0xE600000000000000;
      LODWORD(v328) = v314;
      goto LABEL_133;
    }
    v175 = v172 + 1;
    if (__OFADD__(v172, 1))
      goto LABEL_232;
    if (v175 < (uint64_t)v304)
    {
      v176 = v303[v175];
      v177 = v172 + 1;
      if (v176)
        goto LABEL_126;
      v177 = v172 + 2;
      if (v172 + 2 < (uint64_t)v304)
      {
        v176 = v303[v177];
        if (v176)
          goto LABEL_126;
        v177 = v172 + 3;
        if (v172 + 3 < (uint64_t)v304)
        {
          v176 = v303[v177];
          if (!v176)
          {
            v178 = v172 + 4;
            if (v172 + 4 < (uint64_t)v304)
            {
              v176 = v303[v178];
              if (v176)
              {
                v177 = v172 + 4;
                goto LABEL_126;
              }
              while (1)
              {
                v177 = v178 + 1;
                if (__OFADD__(v178, 1))
                  goto LABEL_237;
                if (v177 >= (uint64_t)v304)
                  break;
                v176 = v303[v177];
                ++v178;
                if (v176)
                  goto LABEL_126;
              }
            }
            goto LABEL_146;
          }
LABEL_126:
          v306 = (v176 - 1) & v176;
          v309 = v177;
          v174 = __clz(__rbit64(v176)) + (v177 << 6);
          goto LABEL_127;
        }
      }
    }
LABEL_146:
    swift_release();
    v218 = (uint64_t *)(v279 + qword_2542EDFE8);
    swift_beginAccess();
    v219 = *v218;
    v220 = *(_QWORD *)(*v218 + 64);
    v311 = (_OWORD *)(*v218 + 64);
    v221 = 1 << *(_BYTE *)(v219 + 32);
    v222 = -1;
    if (v221 < 64)
      v222 = ~(-1 << v221);
    v223 = v222 & v220;
    v312 = (char *)((unint64_t)(v221 + 63) >> 6);
    result = swift_bridgeObjectRetain();
    v224 = 0;
    v310 = (_QWORD *)result;
    do
    {
LABEL_150:
      if (v223)
      {
        v225 = __clz(__rbit64(v223));
        v223 &= v223 - 1;
        v226 = v225 | (v224 << 6);
      }
      else
      {
        v227 = __OFADD__(v224++, 1);
        if (v227)
          goto LABEL_233;
        if (v224 >= (uint64_t)v312)
          goto LABEL_180;
        v228 = *((_QWORD *)v311 + v224);
        if (!v228)
        {
          v229 = v224 + 1;
          if (v224 + 1 >= (uint64_t)v312)
            goto LABEL_180;
          v228 = *((_QWORD *)v311 + v229);
          if (!v228)
          {
            v229 = v224 + 2;
            if (v224 + 2 >= (uint64_t)v312)
              goto LABEL_180;
            v228 = *((_QWORD *)v311 + v229);
            if (!v228)
            {
              v229 = v224 + 3;
              if (v224 + 3 >= (uint64_t)v312)
                goto LABEL_180;
              v228 = *((_QWORD *)v311 + v229);
              if (!v228)
              {
                while (1)
                {
                  v224 = v229 + 1;
                  if (__OFADD__(v229, 1))
                    goto LABEL_238;
                  if (v224 >= (uint64_t)v312)
                    break;
                  v228 = *((_QWORD *)v311 + v224);
                  ++v229;
                  if (v228)
                    goto LABEL_162;
                }
LABEL_180:
                swift_release();
                v243 = (uint64_t *)(v279 + qword_2542EDFD8);
                swift_beginAccess();
                v321 = *v243;
                v244 = *(_QWORD *)(v321 + 16);
                if (v244)
                {
                  swift_bridgeObjectRetain();
                  v245 = 32;
                  v320 = 0x800000023B2050D0;
                  v246 = v336;
                  do
                  {
                    v247 = *(_QWORD *)(v321 + v245);
                    v248 = v246[3];
                    v249 = v246[4];
                    __swift_project_boxed_opaque_existential_1(v246, v248);
                    v326 = 0;
                    v327 = 0xE000000000000000;
                    sub_23AA93780(v247);
                    sub_23B1C6EFC();
                    swift_bridgeObjectRelease();
                    v326 = 0xD000000000000012;
                    v327 = v320;
                    sub_23AE5BC48(v247);
                    sub_23B1C64F4();
                    swift_bridgeObjectRelease();
                    sub_23AEBD130(v326, v327, v248, v249);
                    swift_bridgeObjectRelease();
                    sub_23ADF2688(v247);
                    v245 += 24;
                    --v244;
                  }
                  while (v244);
                  swift_bridgeObjectRelease();
                }
                v250 = (uint64_t *)(v279 + qword_2542EDFB0);
                swift_beginAccess();
                v251 = *v250;
                v252 = *(_QWORD *)(v251 + 56);
                v320 = v251 + 56;
                v253 = 1 << *(_BYTE *)(v251 + 32);
                v254 = -1;
                if (v253 < 64)
                  v254 = ~(-1 << v253);
                v255 = v254 & v252;
                v321 = (unint64_t)(v253 + 63) >> 6;
                result = swift_bridgeObjectRetain();
                v256 = 0;
                while (1)
                {
                  if (v255)
                  {
                    v257 = __clz(__rbit64(v255));
                    v255 &= v255 - 1;
                    v258 = v257 | (v256 << 6);
                  }
                  else
                  {
                    v227 = __OFADD__(v256++, 1);
                    if (v227)
                      goto LABEL_234;
                    if (v256 >= v321)
                      goto LABEL_205;
                    v262 = *(_QWORD *)(v320 + 8 * v256);
                    if (!v262)
                    {
                      v263 = v256 + 1;
                      if (v256 + 1 >= v321)
                        goto LABEL_205;
                      v262 = *(_QWORD *)(v320 + 8 * v263);
                      if (!v262)
                      {
                        v263 = v256 + 2;
                        if (v256 + 2 >= v321)
                          goto LABEL_205;
                        v262 = *(_QWORD *)(v320 + 8 * v263);
                        if (!v262)
                        {
                          v263 = v256 + 3;
                          if (v256 + 3 >= v321)
                            goto LABEL_205;
                          v262 = *(_QWORD *)(v320 + 8 * v263);
                          if (!v262)
                          {
                            while (1)
                            {
                              v256 = v263 + 1;
                              if (__OFADD__(v263, 1))
                                goto LABEL_239;
                              if (v256 >= v321)
                                break;
                              v262 = *(_QWORD *)(v320 + 8 * v256);
                              ++v263;
                              if (v262)
                                goto LABEL_200;
                            }
LABEL_205:
                            swift_release();
                            v264 = (uint64_t *)(v279 + qword_2542EDFA8);
                            swift_beginAccess();
                            v265 = *v264;
                            v266 = *(_QWORD *)(v265 + 56);
                            v320 = v265 + 56;
                            v267 = 1 << *(_BYTE *)(v265 + 32);
                            v268 = -1;
                            if (v267 < 64)
                              v268 = ~(-1 << v267);
                            v269 = v268 & v266;
                            v321 = (unint64_t)(v267 + 63) >> 6;
                            result = swift_bridgeObjectRetain();
                            v270 = 0;
                            while (1)
                            {
                              if (v269)
                              {
                                v271 = __clz(__rbit64(v269));
                                v269 &= v269 - 1;
                                v272 = v271 | (v270 << 6);
                              }
                              else
                              {
                                v227 = __OFADD__(v270++, 1);
                                if (v227)
                                  goto LABEL_235;
                                if (v270 >= v321)
                                  return swift_release();
                                v276 = *(_QWORD *)(v320 + 8 * v270);
                                if (!v276)
                                {
                                  v277 = v270 + 1;
                                  if (v270 + 1 >= v321)
                                    return swift_release();
                                  v276 = *(_QWORD *)(v320 + 8 * v277);
                                  if (!v276)
                                  {
                                    v277 = v270 + 2;
                                    if (v270 + 2 >= v321)
                                      return swift_release();
                                    v276 = *(_QWORD *)(v320 + 8 * v277);
                                    if (!v276)
                                    {
                                      v277 = v270 + 3;
                                      if (v270 + 3 >= v321)
                                        return swift_release();
                                      v276 = *(_QWORD *)(v320 + 8 * v277);
                                      if (!v276)
                                      {
                                        while (1)
                                        {
                                          v270 = v277 + 1;
                                          if (__OFADD__(v277, 1))
                                            goto LABEL_240;
                                          if (v270 >= v321)
                                            return swift_release();
                                          v276 = *(_QWORD *)(v320 + 8 * v270);
                                          ++v277;
                                          if (v276)
                                            goto LABEL_221;
                                        }
                                      }
                                    }
                                  }
                                  v270 = v277;
                                }
LABEL_221:
                                v269 = (v276 - 1) & v276;
                                v272 = __clz(__rbit64(v276)) + (v270 << 6);
                              }
                              v273 = *(_QWORD *)(*(_QWORD *)(v265 + 48) + 8 * v272);
                              v274 = v336[3];
                              v275 = v336[4];
                              __swift_project_boxed_opaque_existential_1(v336, v274);
                              v322 = 0;
                              v323 = 0xE000000000000000;
                              sub_23AA93780(v273);
                              sub_23B1C6EFC();
                              swift_bridgeObjectRelease();
                              v322 = 0x6972726162205046;
                              v323 = 0xEF20726F66207265;
                              sub_23AE5BC48(v273);
                              sub_23B1C64F4();
                              swift_bridgeObjectRelease();
                              sub_23AEBD130(v322, v323, v274, v275);
                              swift_bridgeObjectRelease();
                              result = sub_23ADF2688(v273);
                            }
                          }
                        }
                      }
                      v256 = v263;
                    }
LABEL_200:
                    v255 = (v262 - 1) & v262;
                    v258 = __clz(__rbit64(v262)) + (v256 << 6);
                  }
                  v259 = *(_QWORD *)(*(_QWORD *)(v251 + 48) + 8 * v258);
                  v260 = v336[3];
                  v261 = v336[4];
                  __swift_project_boxed_opaque_existential_1(v336, v260);
                  v324 = 0;
                  v325 = 0xE000000000000000;
                  sub_23AA93780(v259);
                  sub_23B1C6EFC();
                  swift_bridgeObjectRelease();
                  v324 = 0x6972726162205346;
                  v325 = 0xEF20726F66207265;
                  sub_23AE5BC48(v259);
                  sub_23B1C64F4();
                  swift_bridgeObjectRelease();
                  sub_23AEBD130(v324, v325, v260, v261);
                  swift_bridgeObjectRelease();
                  result = sub_23ADF2688(v259);
                }
              }
            }
          }
          v224 = v229;
        }
LABEL_162:
        v223 = (v228 - 1) & v228;
        v226 = __clz(__rbit64(v228)) + (v224 << 6);
      }
      v230 = *(_QWORD **)(*(_QWORD *)(result + 56) + 8 * v226);
      v231 = v230[2];
    }
    while (!v231);
    v314 = v223;
    *(_QWORD *)&v315 = v224;
    v232 = *(_QWORD *)(result + 48) + 16 * v226;
    v233 = *(_QWORD *)v232;
    v234 = *(unsigned __int8 *)(v232 + 8);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v319 = v233;
    v235 = 0x6873617274;
    if (!v233)
      v235 = 1953460082;
    *(_QWORD *)&v317 = v235;
    v236 = 0xE500000000000000;
    if (!v233)
      v236 = 0xE400000000000000;
    *(_QWORD *)&v316 = v236;
    v313 = v230;
    v237 = v230 + 8;
    LODWORD(v318) = v234;
    while (1)
    {
      v240 = *(v237 - 4);
      v241 = sub_23AE063E0(*((_BYTE *)v237 - 24));
      (*(void (**)(void))(v241 + 168))();
      v242 = v336[3];
      v321 = v336[4];
      v320 = (unint64_t)__swift_project_boxed_opaque_existential_1(v336, v242);
      if (v234)
      {
        if (v234 != 1)
        {
          sub_23AA93780(v240);
          swift_retain();
          v238 = v317;
          v239 = v316;
          goto LABEL_171;
        }
        v328 = 0x284449656C6966;
        v329 = 0xE700000000000000;
        v326 = v319;
        sub_23AA93780(v240);
        swift_retain();
      }
      else
      {
        v328 = 0x284449636F64;
        v329 = 0xE600000000000000;
        LODWORD(v326) = v319;
        sub_23AA93780(v240);
        swift_retain();
      }
      sub_23B1C7304();
      sub_23B1C64F4();
      v234 = v318;
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v238 = v328;
      v239 = v329;
LABEL_171:
      v328 = v238;
      v329 = v239;
      sub_23B1C64F4();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      sub_23AE5BC48(v240);
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23AEBD130(v328, v329, v242, v321);
      swift_bridgeObjectRelease();
      sub_23ADF2688(v240);
      swift_release();
      v237 += 5;
      if (!--v231)
      {
        swift_bridgeObjectRelease();
        result = (uint64_t)v310;
        v224 = v315;
        v223 = v314;
        goto LABEL_150;
      }
    }
  }
  v60 = (uint64_t)&v38[*(int *)(v59 + 48)];
  v61 = *(_QWORD *)v38;
  LODWORD(v302) = v38[8];
  v62 = v305;
  sub_23AA724E8(v60, v305, &qword_2542E6C80);
  v63 = *(_QWORD *)(v62 + *(int *)(v286 + 56));
  v64 = *(_QWORD *)(v63 + 64);
  v290 = v63 + 64;
  v65 = 1 << *(_BYTE *)(v63 + 32);
  if (v65 < 64)
    v66 = ~(-1 << v65);
  else
    v66 = -1;
  v67 = v66 & v64;
  v294 = (unint64_t)(v65 + 63) >> 6;
  v284 = v294 - 1;
  v301 = v63;
  result = swift_bridgeObjectRetain();
  v309 = 0;
  v298 = v61;
  v68 = 0x6873617274;
  if (!v61)
    v68 = 1953460082;
  v292 = v68;
  v69 = 0xE500000000000000;
  if (!v61)
    v69 = 0xE400000000000000;
  v291 = v69;
  while (1)
  {
    v70 = v304;
    if (v67)
    {
      *(_QWORD *)&v317 = (v67 - 1) & v67;
      v71 = __clz(__rbit64(v67)) | (v309 << 6);
LABEL_38:
      sub_23AA8EFC8(*(_QWORD *)(v301 + 56) + v304[9] * v71, (uint64_t)v40, &qword_2542E6A10);
      v72 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v70[7];
      v72(v40, 0, 1, v22);
      goto LABEL_60;
    }
    v73 = v309 + 1;
    if (__OFADD__(v309, 1))
      goto LABEL_229;
    if (v73 < v294)
    {
      v74 = *(_QWORD *)(v290 + 8 * v73);
      if (v74)
        goto LABEL_42;
      v75 = v309 + 2;
      ++v309;
      if (v73 + 1 < v294)
      {
        v74 = *(_QWORD *)(v290 + 8 * v75);
        if (v74)
          goto LABEL_45;
        v309 = v73 + 1;
        if (v73 + 2 < v294)
        {
          v74 = *(_QWORD *)(v290 + 8 * (v73 + 2));
          if (v74)
          {
            v73 += 2;
            goto LABEL_42;
          }
          v309 = v73 + 2;
          if (v73 + 3 < v294)
          {
            v74 = *(_QWORD *)(v290 + 8 * (v73 + 3));
            if (v74)
            {
              v73 += 3;
              goto LABEL_42;
            }
            v75 = v73 + 4;
            v309 = v73 + 3;
            if (v73 + 4 < v294)
              break;
          }
        }
      }
    }
LABEL_59:
    v72 = (void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v304[7];
    v72(v40, 1, 1, v22);
    *(_QWORD *)&v317 = 0;
LABEL_60:
    v76 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v70[6];
    v77 = 1;
    if (v76(v40, 1, v22) != 1)
    {
      v78 = *(int *)(v22 + 64);
      v79 = (char *)v40 + v78;
      *(_QWORD *)&v315 = *(int *)(v321 + 80);
      v80 = *v40;
      v81 = v40[1];
      v82 = v40;
      v83 = v295;
      *v295 = v80;
      v83[1] = v81;
      v84 = (char *)v83 + v78;
      v85 = sub_23B1C60A4();
      v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32);
      v86(v84, v79, v85);
      v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = *(_OWORD *)((char *)v82 + v315);
      v88 = *v83;
      v89 = v83[1];
      v40 = v82;
      v90 = v310;
      v91 = (char *)v310 + *(int *)(v321 + 64);
      v92 = (_QWORD *)((char *)v310 + *(int *)(v321 + 80));
      *v310 = v88;
      v90[1] = v89;
      v86(v91, v84, v85);
      v77 = 0;
      *v92 = sub_23ADF35F8;
      v92[1] = v87;
      v22 = v321;
    }
    v93 = (uint64_t)v310;
    v72(v310, v77, 1, v22);
    v94 = v303;
    sub_23AA724E8(v93, (uint64_t)v303, &qword_2542E6A18);
    if (v76(v94, 1, v22) == 1)
    {
      swift_release();
      result = sub_23AA8A05C(v305, &qword_2542E6C80);
      v12 = v314;
      v38 = v285;
      v45 = v288;
      goto LABEL_6;
    }
    v96 = *v94;
    v95 = v94[1];
    v97 = *(int *)(v22 + 64);
    v98 = v94;
    v99 = (char *)v94 + v97;
    v100 = *(int *)(v22 + 80);
    v101 = v316;
    v102 = v316 + v97;
    *(_QWORD *)v316 = v96;
    *(_QWORD *)(v101 + 8) = v95;
    v103 = sub_23B1C60A4();
    v104 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32);
    v315 = *(_OWORD *)((char *)v98 + v100);
    v104(v102, v99, v103);
    *(_OWORD *)(v101 + v100) = v315;
    v106 = v336[3];
    v105 = v336[4];
    __swift_project_boxed_opaque_existential_1(v336, v106);
    if (!(_DWORD)v302)
    {
      v334 = 0x284449636F64;
      v335 = 0xE600000000000000;
      LODWORD(v332) = v298;
      sub_23AA93780(v96);
      goto LABEL_67;
    }
    if ((_DWORD)v302 == 1)
    {
      v334 = 0x284449656C6966;
      v335 = 0xE700000000000000;
      v332 = v298;
      sub_23AA93780(v96);
LABEL_67:
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v107 = v334;
      v108 = v335;
      v22 = v321;
      goto LABEL_69;
    }
    v22 = v321;
    sub_23AA93780(v96);
    v107 = v292;
    v108 = v291;
LABEL_69:
    v334 = v107;
    v335 = v108;
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AE5BC48(v96);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23ADF2688(v96);
    sub_23AEBD130(v334, v335, v106, v105);
    swift_bridgeObjectRelease();
    result = sub_23AA8A05C(v316, &qword_2542E6A10);
    v67 = v317;
  }
  v74 = *(_QWORD *)(v290 + 8 * v75);
  if (v74)
  {
LABEL_45:
    v73 = v75;
LABEL_42:
    *(_QWORD *)&v317 = (v74 - 1) & v74;
    v71 = __clz(__rbit64(v74)) + (v73 << 6);
    v309 = v73;
    goto LABEL_38;
  }
  while (1)
  {
    v73 = v75 + 1;
    if (__OFADD__(v75, 1))
      break;
    if (v73 >= v294)
    {
      v309 = v284;
      goto LABEL_59;
    }
    v74 = *(_QWORD *)(v290 + 8 * v73);
    ++v75;
    if (v74)
      goto LABEL_42;
  }
LABEL_241:
  __break(1u);
LABEL_242:
  __break(1u);
  return result;
}

uint64_t sub_23ADDD7B0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v6);
  sub_23AEBD130(0xD000000000000015, 0x800000023B205090, v6, v7);
  v8 = a2[3];
  v9 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v8);
  sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23ADF2638, a1, v8, MEMORY[0x24BEE4AE0] + 8, v9);
  (*(void (**)(_QWORD *, uint64_t))(**(_QWORD **)(a1 + 16) + 488))(a2, a3);
  v10 = a2[3];
  v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  sub_23AEBD130(0, 0xE000000000000000, v10, v11);
  (*(void (**)(_QWORD, _QWORD *))(**(_QWORD **)(a1 + 24) + 504))(0, a2);
  return sub_23ADDD8E8(a2, a3, (void (*)(_QWORD *))sub_23ADF2650);
}

uint64_t sub_23ADDD8E8(_QWORD *a1, int a2, void (*a3)(_QWORD *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE v13[24];
  uint64_t v14;
  uint64_t v15;
  int v16;
  void (*v17)(_QWORD *);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v17 = a3;
  v4 = v3;
  v16 = a2;
  v6 = (*(uint64_t (**)(void))(*(_QWORD *)v3 + 632))();
  v15 = 0;
  v8 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v19 = 0x687370616E73202BLL;
  v20 = 0xEB0000000020746FLL;
  sub_23B1C6440();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v18 = v6;
  sub_23AB55910();
  sub_23B1C6D70();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AEBD130(0x687370616E73202BLL, 0xEB0000000020746FLL, v8, v7);
  swift_bridgeObjectRelease();
  v9 = a1[3];
  v10 = a1[4];
  v11 = __swift_project_boxed_opaque_existential_1(a1, v9);
  MEMORY[0x24BDAC7A8](v11);
  v13[16] = v16 & 1;
  v14 = v4;
  return sub_23AEBD1D4(8224, 0xE200000000000000, v17, (uint64_t)v13, v9, MEMORY[0x24BEE4AE0] + 8, v10);
}

uint64_t sub_23ADDDB04(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 16);
  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 96))(&v8);
  v4 = v8;
  v5 = v9;
  swift_retain();
  v6 = sub_23ADBACE0(a1, v4, v5);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v3 + 104))(&v8, v6);
  sub_23ADBACE0(a1, v8, v9);
  return swift_release();
}

uint64_t sub_23ADDDB98(_QWORD *a1, uint64_t a2)
{
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];

  v3 = (_OWORD *)(a2 + qword_2542E6CB0);
  swift_beginAccess();
  v4 = v3[1];
  v7[0] = *v3;
  v7[1] = v4;
  v5 = v3[3];
  v7[2] = v3[2];
  v7[3] = v5;
  sub_23ADF2564((uint64_t)v7);
  sub_23ADD7550(a1, (uint64_t *)&unk_2542E1F10, (void (*)(uint64_t, uint64_t))sub_23B149E14, (void (*)(_QWORD *))sub_23ADF2608, (void (*)(_QWORD *))sub_23ADF2620);
  return sub_23ADF25B8((uint64_t)v7);
}

uint64_t sub_23ADDDC38(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  sub_23AEBD130(0, 0xE000000000000000, v6, v7);
  (*(void (**)(uint64_t, _QWORD *))(**(_QWORD **)(a2 + 24) + 504))(1, a1);
  return sub_23ADDD8E8(a1, a3, (void (*)(_QWORD *))sub_23ADF2514);
}

void sub_23ADDDCCC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16);
  (*(void (**)(void **__return_ptr))(*(_QWORD *)v3 + 96))(&v6);
  v4 = v6;
  swift_retain();
  sub_23ADBA9DC(a1, (uint64_t)v4);

  (*(void (**)(void **__return_ptr))(*(_QWORD *)v3 + 104))(&v6);
  v5 = v6;
  sub_23ADBA9DC(a1, (uint64_t)v6);
  swift_release();

}

uint64_t sub_23ADDDD60(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, void (*a5)(_QWORD *))
{
  _BYTE *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v9 = (_BYTE *)(a1 + *a3);
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v9 + 16) || v9[16] != 2 || (v9[49] & 1) != 0 || (v9[48] & 1) != 0 || v9[50])
  {
    v11 = a2[3];
    v12 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v11);
    sub_23AEBD130(0x73746E657665202BLL, a4, v11, v12);
    v13 = a2[3];
    v14 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v13);
    return sub_23AEBD1D4(8224, 0xE200000000000000, a5, a1, v13, MEMORY[0x24BEE4AE0] + 8, v14);
  }
  return result;
}

uint64_t sub_23ADDDE80(_QWORD *a1, uint64_t a2)
{
  _OWORD *v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];

  v3 = (_OWORD *)(a2 + qword_2542E6CA8);
  swift_beginAccess();
  v4 = v3[1];
  v7[0] = *v3;
  v7[1] = v4;
  v5 = v3[3];
  v7[2] = v3[2];
  v7[3] = v5;
  sub_23ADF2564((uint64_t)v7);
  sub_23ADD7550(a1, &qword_2542DE710, (void (*)(uint64_t, uint64_t))sub_23B149E14, (void (*)(_QWORD *))sub_23ADF24FC, (void (*)(_QWORD *))sub_23ADF35FC);
  return sub_23ADF25B8((uint64_t)v7);
}

_QWORD *sub_23ADDDF20(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;
  char *v18;
  char *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  char *v42;
  _BYTE v43[496];
  id v44[64];

  v40 = a2;
  v39 = a1;
  v44[62] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = sub_23B1C5DC8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v35 - v11;
  v13 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v13);
  v42 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542E6818 != -1)
    swift_once();
  v15 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  v38 = v12;
  sub_23AA8EFC8((uint64_t)v12, (uint64_t)v10, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v16 = v15;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v10, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
  }
  v17 = v6;
  v18 = v42;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v42, v17, v3);
  v36 = *(int *)(v13 + 20);
  *(_QWORD *)&v18[v36] = v15;
  v19 = &v18[*(int *)(v13 + 24)];
  *(_QWORD *)v19 = "SQLDB: Scan ignored items";
  *((_QWORD *)v19 + 1) = 25;
  v37 = v19;
  v19[16] = 2;
  v20 = v15;
  sub_23B1C6BE4();
  sub_23B1C5DA4();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v3);
  sub_23AA8A05C((uint64_t)v38, (uint64_t *)&unk_2542E67B8);
  v21 = v41;
  v22 = *(void **)(v41 + 24);
  v23 = swift_allocObject();
  v24 = v39;
  *(_QWORD *)(v23 + 16) = v21;
  *(_QWORD *)(v23 + 24) = v24;
  *(_BYTE *)(v23 + 32) = v40 & 1;
  *(_QWORD *)(v23 + 40) = 200;
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = sub_23ADF1E90;
  v25[3] = v23;
  v44[4] = sub_23AA698D4;
  v44[5] = v25;
  v44[0] = (id)MEMORY[0x24BDAC760];
  v44[1] = (id)1107296256;
  v44[2] = sub_23AA9432C;
  v44[3] = &block_descriptor_15;
  v26 = _Block_copy(v44);
  swift_retain();
  swift_retain();
  swift_release();
  v44[0] = 0;
  v27 = objc_msgSend(v22, sel_fetchSwift_error_, v26, v44);
  _Block_release(v26);
  v28 = v44[0];
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v17 & 1) != 0)
    __break(1u);
  v41 = v23;
  if (v27)
  {
    if (objc_msgSend(v27, sel_next))
    {
      v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
      while (1)
      {
        v29 = (void *)MEMORY[0x23B8601A8]();
        objc_msgSend(v27, sel_longAtIndex_, 0);
        v30 = sub_23AAAE8F4();
        sub_23AAA1310(v27, v30, 1, (uint64_t)v44);
        if (v2)
          break;
        swift_bridgeObjectRelease();
        memcpy(v43, v44, sizeof(v43));
        sub_23ACFC940((uint64_t)v43);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v25 = sub_23AF9A05C(0, v25[2] + 1, 1, v25);
        v32 = v25[2];
        v31 = v25[3];
        if (v32 >= v31 >> 1)
          v25 = sub_23AF9A05C((_QWORD *)(v31 > 1), v32 + 1, 1, v25);
        v25[2] = v32 + 1;
        memcpy(&v25[62 * v32 + 4], v43, 0x1F0uLL);
        sub_23AAFC3AC((uint64_t)v43);
        objc_autoreleasePoolPop(v29);
        if ((objc_msgSend(v27, sel_next) & 1) == 0)
          goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v29);
      swift_bridgeObjectRelease();

    }
    else
    {
      v25 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_19:

    }
  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  sub_23B1C6BD8();
  v33 = (uint64_t)v42;
  sub_23B1C5DA4();
  sub_23AA937BC(v33, type metadata accessor for Signpost);
  swift_release();
  return v25;
}

uint64_t sub_23ADDE4F4(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  id v9;
  id v10;
  id v11;
  uint64_t v13;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v13 = 16;
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if ((a4 & 1) == 0)
  {
    v9 = a1;
    v10 = objc_msgSend(v9, sel_bindLongParameter_, a3, 0x203E204449776F72, 0xE800000000000000);
    sub_23B1C63E0();

    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v11 = objc_msgSend(a1, sel_bindLongParameter_, a5, v13);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23ADDE720()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 24);
  aBlock[4] = sub_23B01FC5C;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_129;
  v2 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v3 = objc_msgSend(v1, sel_fetchSwift_error_, v2, aBlock);
  _Block_release(v2);
  v4 = aBlock[0];
  if ((swift_isEscapingClosureAtFileLocation() & 1) != 0)
    __break(1u);
  if (v3)
  {
    LOBYTE(v4) = objc_msgSend(v3, sel_next);

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  return v4 & 1;
}

void sub_23ADDE864(id a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(id), uint64_t a8)
{
  _QWORD *v15;
  void (*v16)(void **, id, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *);
  id v17;
  void (*v18)(id);
  id v19;
  void *v20;

  if ((a2 & 1) != 0)
  {
    v19 = a1;
    a7(a1);
    sub_23ACF6618(a1, 1, (void (*)(id))MEMORY[0x24BEE4EF8]);
  }
  else if (a1)
  {
    v20 = a4;
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = a3;
    v15[3] = a4;
    v15[4] = a5;
    v15[5] = a6;
    v15[6] = a7;
    v15[7] = a8;
    v16 = *(void (**)(void **, id, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *))(*(_QWORD *)a3 + 144);
    sub_23AAFCDA4(a1, 0);
    sub_23AAFCDA4(a1, 0);
    v17 = a4;
    swift_retain();
    swift_retain();
    swift_retain();
    v16(&v20, a1, 0, 0, a5, a6, sub_23ADF248C, v15);
    swift_release();
    v18 = (void (*)(id))MEMORY[0x24BEE4EF8];
    sub_23ACF6618(a1, 0, (void (*)(id))MEMORY[0x24BEE4EF8]);
    sub_23ACF6618(a1, 0, v18);
  }
  else
  {
    a7(0);
  }
}

void sub_23ADDE9B4(id a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(id), uint64_t a9)
{
  _QWORD *v14;
  void (*v15)(uint64_t *, id, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, int);
  void (*v16)(id);
  id v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char v21;

  if ((a2 & 1) != 0)
  {
    v17 = a1;
    a8(a1);
    sub_23ACF6618(a1, 1, (void (*)(id))MEMORY[0x24BEE4EF8]);
  }
  else if (a1)
  {
    v20 = a4;
    v21 = a5;
    v18 = a4;
    LOBYTE(v19) = a5;
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = a3;
    sub_23AA9F454(&v18, (uint64_t)(v14 + 3));
    v14[5] = a6;
    v14[6] = a7;
    v14[7] = a8;
    v14[8] = a9;
    v15 = *(void (**)(uint64_t *, id, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t (*)(), _QWORD *, uint64_t, int))(*(_QWORD *)a3 + 144);
    sub_23AAFCDA4(a1, 0);
    sub_23AAFCDA4(a1, 0);
    swift_retain();
    swift_retain();
    swift_retain();
    v15(&v20, a1, 0, 0, a6, a7, sub_23ADF233C, v14, v18, v19);
    swift_release();
    v16 = (void (*)(id))MEMORY[0x24BEE4EF8];
    sub_23ACF6618(a1, 0, (void (*)(id))MEMORY[0x24BEE4EF8]);
    sub_23ACF6618(a1, 0, v16);
  }
  else
  {
    a8(0);
  }
}

uint64_t sub_23ADDEB14(unint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD **v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  char isUniquelyReferenced_nonNull_native;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  id v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;

  v3 = a1;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    v4 = sub_23B1C7088();
    if (v4)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_23;
LABEL_3:
  v5 = (_QWORD **)(a2 + 2);
  v28 = v3;
  v29 = v3 & 0xC000000000000001;
  v6 = 4;
  while (1)
  {
    if (v29)
      v9 = (_QWORD *)MEMORY[0x23B85F860](v6 - 4, v3);
    else
      v9 = *(id *)(v3 + 8 * v6);
    a2 = v9;
    v10 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    v3 = v4;
    v11 = objc_msgSend(v9, sel_itemID);
    v12 = objc_msgSend(v11, sel_identifier);

    swift_beginAccess();
    v13 = a2;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a2 = *v5;
    v30 = *v5;
    *v5 = (_QWORD *)0x8000000000000000;
    v16 = sub_23AA88CF8(v12);
    v17 = a2[2];
    v18 = (v15 & 1) == 0;
    v19 = v17 + v18;
    if (__OFADD__(v17, v18))
      goto LABEL_20;
    v20 = v15;
    if (a2[3] < v19)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_23B1878D8();
LABEL_16:
    a2 = (_QWORD *)(8 * v16);
    if ((v20 & 1) != 0)
    {
      v7 = v30[7];

      *(_QWORD *)(v7 + 8 * v16) = v13;
    }
    else
    {
      v30[(v16 >> 6) + 8] |= 1 << v16;
      *(_QWORD *)(v30[6] + 8 * v16) = v12;
      *(_QWORD *)(v30[7] + 8 * v16) = v13;
      v23 = v30[2];
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (v24)
        goto LABEL_21;
      v30[2] = v25;
      v26 = v12;
    }
    *v5 = v30;

    swift_bridgeObjectRelease();
    swift_endAccess();

    ++v6;
    v4 = v3;
    v8 = v10 == v3;
    v3 = v28;
    if (v8)
      goto LABEL_23;
  }
  sub_23AD11C40(v19, isUniquelyReferenced_nonNull_native);
  v21 = sub_23AA88CF8(v12);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = v21;
    goto LABEL_16;
  }
  type metadata accessor for NSFileProviderItemIdentifier(0);
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

uint64_t sub_23ADDED80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t result;
  _QWORD v35[2];
  char *v36;
  uint64_t v37;
  _QWORD *v38;

  v4 = type metadata accessor for VFSItem(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v35 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return 0;
  v12 = (_QWORD *)(a2 + 16);
  v13 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v14 = *(_QWORD *)(v8 + 72);
  v35[1] = a1;
  swift_bridgeObjectRetain();
  v36 = v10;
  while (1)
  {
    v37 = v11;
    sub_23AA907B0(v13, (uint64_t)v10, type metadata accessor for VFSItem);
    v15 = *(_QWORD *)v10;
    v16 = v10[8];
    swift_beginAccess();
    v17 = (uint64_t)v10;
    v18 = (uint64_t)v7;
    sub_23AA907B0(v17, (uint64_t)v7, type metadata accessor for VFSItem);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = (_QWORD *)*v12;
    v20 = v38;
    *v12 = 0x8000000000000000;
    v22 = sub_23AA97254(v15, v16);
    v23 = v20[2];
    v24 = (v21 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      break;
    v26 = v21;
    if (v20[3] >= v25)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_23B18B010();
    }
    else
    {
      sub_23AD18614(v25, isUniquelyReferenced_nonNull_native);
      v27 = sub_23AA97254(v15, v16);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_18;
      v22 = v27;
    }
    v7 = (char *)v18;
    v29 = v38;
    if ((v26 & 1) != 0)
    {
      sub_23ADF23AC(v18, v38[7] + v22 * v14);
    }
    else
    {
      v38[(v22 >> 6) + 8] |= 1 << v22;
      v30 = v29[6] + 16 * v22;
      *(_QWORD *)v30 = v15;
      *(_BYTE *)(v30 + 8) = v16;
      sub_23AB3CAF0(v18, v29[7] + v22 * v14);
      v31 = v29[2];
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (v32)
        goto LABEL_17;
      v29[2] = v33;
    }
    *v12 = v29;
    swift_bridgeObjectRelease();
    swift_endAccess();
    v10 = v36;
    sub_23AA937BC((uint64_t)v36, type metadata accessor for VFSItem);
    v13 += v14;
    v11 = v37 - 1;
    if (v37 == 1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_23B1C7418();
  __break(1u);
  return result;
}

void sub_23ADDEFF8(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  unsigned __int8 *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;

  v9 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v9);
  v38 = (unsigned __int8 *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a3, sel_itemID);
  v12 = objc_msgSend(v11, sel_identifier);

  v34 = a2;
  v13 = (unint64_t)sub_23ADBA6BC(v12);

  if (!(v13 >> 62))
  {
    v40 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v40)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v32 = sub_23B1C7088();
  swift_bridgeObjectRelease();
  v40 = v32;
  if (!v32)
    goto LABEL_17;
LABEL_3:
  v42 = a4 + 1;
  if (__OFADD__(a4, 1))
  {
    __break(1u);
  }
  else if (v40 >= 1)
  {
    v39 = v4;
    v14 = 0;
    v41 = v13 & 0xC000000000000001;
    v37 = 0x800000023B205050;
    v33 = MEMORY[0x24BEE4AE0] + 8;
    v15 = v40;
    v35 = (_QWORD *)v13;
    v36 = a1;
    do
    {
      if (v41)
        v16 = (id)MEMORY[0x23B85F860](v14, v13);
      else
        v16 = *(id *)(v13 + 8 * v14 + 32);
      v17 = v16;
      v18 = (void *)MEMORY[0x23B8601A8]();
      v43 = v17;
      v19 = a1[3];
      v20 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v19);
      if (v42 >= 201)
      {
        sub_23AEBD130(0xD000000000000018, v37, v19, v20);
      }
      else
      {
        v21 = objc_msgSend(v17, sel_description);
        v22 = sub_23B1C63E0();
        v24 = v23;

        sub_23AEBD130(v22, v24, v19, v20);
        swift_bridgeObjectRelease();
        v25 = v38;
        sub_23AAA3120((uint64_t)v38);
        v26 = *v25;
        sub_23AA937BC((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
        a1 = v36;
        if (v26 == 1)
        {
          v27 = v36[3];
          v28 = v36[4];
          v29 = __swift_project_boxed_opaque_existential_1(v36, v27);
          MEMORY[0x24BDAC7A8](v29);
          v30 = v33;
          *(&v33 - 4) = v34;
          *(&v33 - 3) = (uint64_t)&v43;
          *(&v33 - 2) = v42;
          v31 = v39;
          sub_23AEBD1D4(32, 0xE100000000000000, (void (*)(_QWORD *))sub_23ADF3530, (uint64_t)(&v33 - 6), v27, v30, v28);
          v39 = v31;
        }
        v13 = (unint64_t)v35;
        v15 = v40;
      }
      ++v14;
      objc_autoreleasePoolPop(v18);

    }
    while (v15 != v14);
    goto LABEL_17;
  }
  __break(1u);
}

size_t sub_23ADDF324(_QWORD *a1, size_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  size_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  size_t v31;
  uint64_t v32;
  size_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;

  v36 = type metadata accessor for VFSItem(0);
  v9 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)a3;
  v13 = *(_BYTE *)(a3 + 8);
  v33 = a2;
  result = sub_23ADBA840(v12, v13);
  v15 = *(_QWORD *)(result + 16);
  if (!v15)
    return swift_bridgeObjectRelease();
  v16 = __OFADD__(a4, 1);
  v17 = a4 + 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    v18 = *(unsigned __int8 *)(v9 + 80);
    v31 = result;
    v19 = result + ((v18 + 32) & ~v18);
    v20 = *(_QWORD *)(v9 + 72);
    v37 = v4;
    v38 = v20;
    v34 = 0x800000023B205050;
    v32 = MEMORY[0x24BEE4AE0] + 8;
    v35 = v17;
    do
    {
      v21 = sub_23AA907B0(v19, (uint64_t)v11, type metadata accessor for VFSItem);
      v39 = (void *)MEMORY[0x23B8601A8](v21);
      v22 = a1[3];
      v23 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v22);
      if (v17 >= 201)
      {
        sub_23AEBD130(0xD000000000000018, v34, v22, v23);
      }
      else
      {
        v24 = sub_23AC3E1F8();
        sub_23AEBD130(v24, v25, v22, v23);
        swift_bridgeObjectRelease();
        if (v11[*(int *)(v36 + 28)] == 1)
        {
          v26 = a1[3];
          v27 = a1[4];
          v28 = __swift_project_boxed_opaque_existential_1(a1, v26);
          MEMORY[0x24BDAC7A8](v28);
          v29 = v32;
          *(&v31 - 4) = v33;
          *(&v31 - 3) = (size_t)v11;
          v17 = v35;
          *(&v31 - 2) = v35;
          v30 = v37;
          sub_23AEBD1D4(32, 0xE100000000000000, (void (*)(_QWORD *))sub_23ADF35E0, (uint64_t)(&v31 - 6), v26, v29, v27);
          v37 = v30;
        }
        else
        {
          v17 = v35;
        }
      }
      objc_autoreleasePoolPop(v39);
      sub_23AA937BC((uint64_t)v11, type metadata accessor for VFSItem);
      v19 += v38;
      --v15;
    }
    while (v15);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_23ADDF574(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E40);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_projectBox();
  sub_23AA8EFC8(a1, (uint64_t)v7, (uint64_t *)&unk_2542E21B0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E21B0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
  swift_beginAccess();
  sub_23AA8A660((uint64_t)v7, v8, &qword_2569E5E40);
  dispatch_group_leave(a3);
}

uint64_t sub_23ADDF660(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4)
{
  _BYTE *v4;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  _BYTE *v53;
  _BYTE v54[248];
  _BYTE v55[256];
  _QWORD v56[32];

  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 < 61)
  {
    if (*a4 <= 0)
    {
      v27 = a2[3];
      v28 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v27);
      sub_23AEBD130(0xD00000000000001BLL, 0x800000023B205070, v27, v28);
      return 0;
    }
    v51 = *a4;
    v52 = a4;
    v53 = v4;
    sub_23AA8EFC8(a1, (uint64_t)v11, (uint64_t *)&unk_2542E4760);
    if (qword_2542E1FE0 != -1)
      swift_once();
    v14 = sub_23B1C63E0();
    v16 = v15;
    v18 = v14 == sub_23B1C63E0() && v16 == v17;
    v50 = a3;
    if (!v18)
    {
      v19 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v53;
      if ((v19 & 1) != 0)
        goto LABEL_20;
      if (qword_2542E1FE8 != -1)
        swift_once();
      v21 = sub_23B1C63E0();
      v23 = v22;
      if (v21 != sub_23B1C63E0() || v23 != v24)
      {
        v26 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 = v53;
        if ((v26 & 1) == 0)
          goto LABEL_25;
        goto LABEL_20;
      }
    }
    v20 = v53;
    swift_bridgeObjectRelease_n();
LABEL_20:
    (*(void (**)(_QWORD *__return_ptr, char *))(*(_QWORD *)v20 + 264))(v56, v11);
    sub_23AA724E8((uint64_t)v56, (uint64_t)v54, &qword_2542E5050);
    sub_23AA724E8((uint64_t)v54, (uint64_t)v55, &qword_2542E5050);
    v30 = (uint64_t)&v11[v9[13]];
    sub_23AA724E8(v30, (uint64_t)v54, &qword_2542E5050);
    sub_23AAA5B2C((uint64_t)v54);
    sub_23AA724E8((uint64_t)v55, v30, &qword_2542E5050);
    v31 = *(_QWORD *)v20;
    if ((v20[32] & 1) != 0)
    {
      v32 = (*(uint64_t (**)(char *))(v31 + 320))(v11);
      v35 = &v11[v9[15]];
      *(_QWORD *)v35 = v32;
      *((_QWORD *)v35 + 1) = v36;
      v35[16] = v34 & 1;
    }
    else
    {
      v33 = (*(uint64_t (**)(char *))(v31 + 312))(v11);
      v38 = &v11[v9[14]];
      *(_QWORD *)v38 = v33;
      *((_QWORD *)v38 + 1) = v39;
      *((_QWORD *)v38 + 2) = v40;
      v38[24] = v37 & 1;
    }
LABEL_25:
    v41 = a2[3];
    v42 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v41);
    v43 = sub_23ADF78A4();
    sub_23AEBD130(v43, v44, v41, v42);
    swift_bridgeObjectRelease();
    v45 = v52;
    *v52 = v51 - 1;
    if (v11[v9[12]] == 1)
    {
      v46 = a2[3];
      v47 = a2[4];
      v48 = __swift_project_boxed_opaque_existential_1(a2, v46);
      MEMORY[0x24BDAC7A8](v48);
      *(&v49 - 4) = (uint64_t)v53;
      *(&v49 - 3) = (uint64_t)v11;
      *(&v49 - 2) = v50;
      *(&v49 - 1) = (uint64_t)v45;
      sub_23AEBD1D4(32, 0xE100000000000000, (void (*)(_QWORD *))sub_23ADF2530, (uint64_t)(&v49 - 6), v46, MEMORY[0x24BEE4AE0] + 8, v47);
    }
    sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2542E4760);
    return 1;
  }
  v12 = a2[3];
  v13 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v12);
  sub_23AEBD130(0xD000000000000018, 0x800000023B205050, v12, v13);
  return 1;
}

uint64_t sub_23ADDFB04(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t *a4)
{
  _BYTE *v4;
  int *v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _BYTE v44[248];
  _BYTE v45[256];
  _QWORD v46[32];

  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v12 = (char *)&v39 - v11;
  if (a3 < 61)
  {
    v15 = *a4;
    if (*a4 <= 0)
    {
      v17 = a2[3];
      v18 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v17);
      sub_23AEBD130(0xD00000000000001BLL, 0x800000023B205070, v17, v18);
      return 0;
    }
    sub_23AA8EFC8(a1, (uint64_t)&v39 - v11, (uint64_t *)&unk_2542E6B00);
    v16 = v12[8] != 2 || *(_QWORD *)v12 > 1uLL;
    v42 = v15;
    v43 = a4;
    v40 = v4;
    v41 = a3;
    if (!v16)
    {
      (*(void (**)(_QWORD *__return_ptr, char *))(*(_QWORD *)v4 + 264))(v46, v12);
      sub_23AA724E8((uint64_t)v46, (uint64_t)v44, &qword_2542E5050);
      sub_23AA724E8((uint64_t)v44, (uint64_t)v45, &qword_2542E5050);
      v20 = (uint64_t)&v12[v9[13]];
      sub_23AA724E8(v20, (uint64_t)v44, &qword_2542E5050);
      sub_23AAA5B2C((uint64_t)v44);
      sub_23AA724E8((uint64_t)v45, v20, &qword_2542E5050);
      v21 = *(_QWORD *)v4;
      if ((v4[32] & 1) != 0)
      {
        v22 = (*(uint64_t (**)(char *))(v21 + 320))(v12);
        v25 = &v12[v9[15]];
        *(_QWORD *)v25 = v22;
        *((_QWORD *)v25 + 1) = v26;
        v25[16] = v24 & 1;
      }
      else
      {
        v23 = (*(uint64_t (**)(char *))(v21 + 312))(v12);
        v28 = &v12[v9[14]];
        *(_QWORD *)v28 = v23;
        *((_QWORD *)v28 + 1) = v29;
        *((_QWORD *)v28 + 2) = v30;
        v28[24] = v27 & 1;
      }
    }
    v32 = a2[3];
    v31 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v32);
    v33 = sub_23ADF7370();
    sub_23AEBD130(v33, v34, v32, v31);
    swift_bridgeObjectRelease();
    v35 = v43;
    *v43 = v42 - 1;
    if (v12[v9[12]] == 1)
    {
      v36 = a2[3];
      v37 = a2[4];
      v38 = __swift_project_boxed_opaque_existential_1(a2, v36);
      MEMORY[0x24BDAC7A8](v38);
      *(&v39 - 4) = (uint64_t)v40;
      *(&v39 - 3) = (uint64_t)v12;
      *(&v39 - 2) = v41;
      *(&v39 - 1) = (uint64_t)v35;
      sub_23AEBD1D4(32, 0xE100000000000000, (void (*)(_QWORD *))sub_23ADF266C, (uint64_t)(&v39 - 6), v36, MEMORY[0x24BEE4AE0] + 8, v37);
    }
    sub_23AA8A05C((uint64_t)v12, (uint64_t *)&unk_2542E6B00);
  }
  else
  {
    v13 = a2[3];
    v14 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v13);
    sub_23AEBD130(0xD000000000000018, 0x800000023B205050, v13, v14);
  }
  return 1;
}

void sub_23ADDFE7C(uint64_t a1, uint64_t a2, id *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(id *);
  id v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  id v27;

  v25 = a1;
  v26 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *a3;
  v13 = *(uint64_t (**)(id *))(*(_QWORD *)a2 + 688);
  v14 = v27;
  v15 = v13(&v27);

  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return;
  }
  v17 = __OFADD__(a4, 1);
  v18 = a4 + 1;
  if (!v17)
  {
    v24[0] = v15;
    v24[1] = v5;
    v19 = v15 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v20 = *(_QWORD *)(v10 + 72);
    do
    {
      v21 = sub_23AA8EFC8(v19, (uint64_t)v12, (uint64_t *)&unk_2542E4760);
      v22 = (void *)MEMORY[0x23B8601A8](v21);
      v23 = sub_23ADDF660(v12, v25, v18, v26);
      objc_autoreleasePoolPop(v22);
      sub_23AA8A05C((uint64_t)v12, (uint64_t *)&unk_2542E4760);
      if ((v23 & 1) == 0)
        break;
      v19 += v20;
      --v16;
    }
    while (v16);
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_23ADDFFD0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v27 = a5;
  v24 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *((_BYTE *)a3 + 8);
  v25 = *a3;
  v26 = v13;
  result = (*(uint64_t (**)(uint64_t *))(*(_QWORD *)a2 + 688))(&v25);
  v15 = *(_QWORD *)(result + 16);
  if (!v15)
    return swift_bridgeObjectRelease();
  v16 = __OFADD__(a4, 1);
  v17 = a4 + 1;
  if (!v16)
  {
    v23[1] = result;
    v23[2] = v5;
    v18 = result + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v19 = *(_QWORD *)(v10 + 72);
    do
    {
      v20 = sub_23AA8EFC8(v18, (uint64_t)v12, (uint64_t *)&unk_2542E6B00);
      v21 = (void *)MEMORY[0x23B8601A8](v20);
      v22 = sub_23ADDFB04(v12, v24, v17, v27);
      objc_autoreleasePoolPop(v21);
      sub_23AA8A05C((uint64_t)v12, (uint64_t *)&unk_2542E6B00);
      if ((v22 & 1) == 0)
        break;
      v18 += v19;
      --v15;
    }
    while (v15);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23ADE0120(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (**v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void (*v22)(_QWORD *, uint64_t);
  void (**v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (**v41)(char *, uint64_t, uint64_t, uint64_t);
  char *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD v45[3];
  uint64_t v46[2];
  uint64_t v47;

  v43 = a1;
  v5 = type metadata accessor for SnapshotCounters();
  MEMORY[0x24BDAC7A8](v5);
  v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v13 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v39 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v38 - v17;
  v19 = 3000;
  if ((a2 & 1) == 0)
    v19 = 0x7FFFFFFFFFFFFFFFLL;
  v47 = v19;
  v20 = a3[2];
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v20 + 96))(v46, v16);
  v21 = (void *)v46[0];
  v44 = a3;
  v45[0] = v46[0];
  v22 = *(void (**)(_QWORD *, uint64_t))(*a3 + 240);
  v23 = v41;
  v22(v45, 1);
  if (v23)
  {

    v13[7](v11, 1, 1, v12);
LABEL_7:
    v24 = sub_23AA8A05C((uint64_t)v11, &qword_2542E4770);
    goto LABEL_9;
  }

  v41 = v13;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v13[6])(v11, 1, v12) == 1)
  {
    v13 = v41;
    goto LABEL_7;
  }
  sub_23AA724E8((uint64_t)v11, (uint64_t)v18, (uint64_t *)&unk_2542E4760);
  sub_23ADDF660((uint64_t)v18, v43, 1, &v47);
  v24 = sub_23AA8A05C((uint64_t)v18, (uint64_t *)&unk_2542E4760);
  v13 = v41;
LABEL_9:
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v20 + 104))(v46, v24);
  v25 = (void *)v46[0];
  v45[0] = v46[0];
  v26 = (uint64_t)v42;
  v27 = v44;
  v22(v45, 1);

  v28 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13[6])(v26, 1, v12);
  v29 = (uint64_t)v40;
  v30 = v43;
  if (v28 == 1)
  {
    v31 = &qword_2542E4770;
    v32 = v26;
  }
  else
  {
    v33 = v39;
    sub_23AA724E8(v26, v39, (uint64_t *)&unk_2542E4760);
    sub_23ADDF660(v33, v30, 1, &v47);
    v32 = v33;
    v31 = (uint64_t *)&unk_2542E4760;
  }
  sub_23AA8A05C(v32, v31);
  v34 = v30[3];
  v35 = v30[4];
  __swift_project_boxed_opaque_existential_1(v30, v34);
  strcpy((char *)v46, "+ counters: ");
  BYTE5(v46[1]) = 0;
  HIWORD(v46[1]) = -5120;
  v36 = (uint64_t)v27 + qword_2542EDE50;
  swift_beginAccess();
  sub_23AA907B0(v36, v29, (uint64_t (*)(_QWORD))type metadata accessor for SnapshotCounters);
  sub_23B0ECFE4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AA937BC(v29, (uint64_t (*)(_QWORD))type metadata accessor for SnapshotCounters);
  sub_23AEBD130(v46[0], v46[1], v34, v35);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23ADE050C(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *, uint64_t);
  void *v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  int v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  void *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  uint64_t v45[2];
  uint64_t v46;

  v41 = a1;
  v5 = type metadata accessor for SnapshotCounters();
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v38 = (uint64_t)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v38 - v18;
  v20 = 3000;
  if ((a2 & 1) == 0)
    v20 = 0x7FFFFFFFFFFFFFFFLL;
  v46 = v20;
  v21 = a3[2];
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v21 + 96))(v45, v17);
  v42 = a3;
  v43 = v45[0];
  v44 = v45[1];
  v22 = *(void (**)(uint64_t *, uint64_t))(*a3 + 240);
  v23 = v40;
  v22(&v43, 1);
  if (v23)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
LABEL_7:
    v25 = sub_23AA8A05C((uint64_t)v12, (uint64_t *)&unk_2542E4750);
    goto LABEL_9;
  }
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v40 = (void *)v13;
  if (v24(v12, 1, v13) == 1)
  {
    v13 = (uint64_t)v40;
    goto LABEL_7;
  }
  sub_23AA724E8((uint64_t)v12, (uint64_t)v19, (uint64_t *)&unk_2542E6B00);
  sub_23ADDFB04((uint64_t)v19, v41, 1, &v46);
  v25 = sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542E6B00);
  v13 = (uint64_t)v40;
LABEL_9:
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)v21 + 104))(v45, v25);
  v43 = v45[0];
  v44 = v45[1];
  v26 = v42;
  v22(&v43, 1);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13);
  v28 = (uint64_t)v39;
  v29 = v41;
  if (v27 == 1)
  {
    v30 = (uint64_t *)&unk_2542E4750;
    v31 = (uint64_t)v10;
  }
  else
  {
    v32 = (uint64_t)v10;
    v33 = v38;
    sub_23AA724E8(v32, v38, (uint64_t *)&unk_2542E6B00);
    sub_23ADDFB04(v33, v29, 1, &v46);
    v31 = v33;
    v30 = (uint64_t *)&unk_2542E6B00;
  }
  sub_23AA8A05C(v31, v30);
  v34 = v29[3];
  v35 = v29[4];
  __swift_project_boxed_opaque_existential_1(v29, v34);
  strcpy((char *)v45, "+ counters: ");
  BYTE5(v45[1]) = 0;
  HIWORD(v45[1]) = -5120;
  v36 = (uint64_t)v26 + qword_2542EDE50;
  swift_beginAccess();
  sub_23AA907B0(v36, v28, (uint64_t (*)(_QWORD))type metadata accessor for SnapshotCounters);
  sub_23B0ECFE4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23AA937BC(v28, (uint64_t (*)(_QWORD))type metadata accessor for SnapshotCounters);
  sub_23AEBD130(v45[0], v45[1], v34, v35);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23ADE08E0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_23B1C6CBC();
  *a1 = v5;
  return result;
}

uint64_t sub_23ADE0930(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t result;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;

  v7 = *v3;
  sub_23B1C74A8();
  if (a3)
  {
    sub_23B1C74B4();
    if (a3 == 1)
      sub_23B1C74D8();
  }
  else
  {
    sub_23B1C74B4();
    sub_23B1C74CC();
  }
  v8 = sub_23B1C74E4();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_25:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v3;
    *v3 = 0x8000000000000000;
    sub_23ADE4A88(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    *v3 = v20;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_26;
  }
  v11 = ~v9;
  v12 = a3 == 2;
  v13 = a2 == 1 && a3 == 2;
  if (a2)
    v12 = 0;
  while (1)
  {
    v14 = *(_QWORD *)(v7 + 48) + 16 * v10;
    v15 = *(_QWORD *)v14;
    v16 = *(unsigned __int8 *)(v14 + 8);
    if (!v16)
      break;
    if (v16 == 1)
    {
      if (a3 == 1 && v15 == a2)
        goto LABEL_24;
    }
    else if (v15)
    {
      if (v13)
        goto LABEL_24;
    }
    else if (v12)
    {
      goto LABEL_24;
    }
LABEL_13:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_25;
  }
  if (a3 || (_DWORD)v15 != (_DWORD)a2)
    goto LABEL_13;
LABEL_24:
  result = 0;
  v18 = *(_QWORD *)(*v3 + 48) + 16 * v10;
  a2 = *(_QWORD *)v18;
  a3 = *(_BYTE *)(v18 + 8);
LABEL_26:
  *(_QWORD *)a1 = a2;
  *(_BYTE *)(a1 + 8) = a3;
  return result;
}

uint64_t sub_23ADE0B10(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_23B1C74A8();
  swift_bridgeObjectRetain();
  sub_23B1C64A0();
  v8 = sub_23B1C74E4();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_23B1C7388() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_23B1C7388() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_23ADE4C84(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_23ADE0CBC(_QWORD *a1, void *a2)
{
  return sub_23ADE0CF8(a1, a2, &qword_2542DE780, type metadata accessor for URLResourceKey);
}

uint64_t sub_23ADE0CD0(uint64_t *a1, uint64_t a2)
{
  return sub_23ADE11B8(a1, a2, &qword_2569E5DC0);
}

uint64_t sub_23ADE0CE4(_QWORD *a1, void *a2)
{
  return sub_23ADE0CF8(a1, a2, (uint64_t *)&unk_2569E81B0, type metadata accessor for NSFileProviderItemIdentifier);
}

uint64_t sub_23ADE0CF8(_QWORD *a1, void *a2, uint64_t *a3, void (*a4)(_QWORD))
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  char isUniquelyReferenced_nonNull_native;
  id v26;
  void *v28;
  id v29;
  uint64_t v32;

  v5 = v4;
  v8 = *v4;
  sub_23B1C63E0();
  sub_23B1C74A8();
  swift_bridgeObjectRetain();
  sub_23B1C64A0();
  v9 = sub_23B1C74E4();
  swift_bridgeObjectRelease();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v32 = *v5;
    *v5 = 0x8000000000000000;
    v26 = a2;
    sub_23ADE4E1C((uint64_t)v26, v11, isUniquelyReferenced_nonNull_native, a3, a4);
    *v5 = v32;
    swift_bridgeObjectRelease();
    *a1 = v26;
    return 1;
  }
  v12 = sub_23B1C63E0();
  v14 = v13;
  if (v12 == sub_23B1C63E0() && v14 == v15)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      v18 = ~v10;
      do
      {
        v11 = (v11 + 1) & v18;
        if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
          goto LABEL_15;
        v19 = sub_23B1C63E0();
        v21 = v20;
        if (v19 == sub_23B1C63E0() && v21 == v22)
          goto LABEL_16;
        v24 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v24 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  v28 = *(void **)(*(_QWORD *)(*v5 + 48) + 8 * v11);
  *a1 = v28;
  v29 = v28;
  return 0;
}

uint64_t sub_23ADE0F28(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  id v29;
  uint64_t *v30;
  uint64_t v31;
  int v32;
  void *v33;
  uint64_t v34;

  v32 = a4 & 1;
  v9 = *v4;
  sub_23B1C74A8();
  v33 = a2;
  sub_23B1C63E0();
  swift_bridgeObjectRetain();
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  sub_23B1C74C0();
  if ((a4 & 1) == 0)
    sub_23B1C74B4();
  v31 = a3;
  v10 = sub_23B1C74E4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    do
    {
      v14 = *(_QWORD *)(v9 + 48) + 24 * v12;
      v15 = *(_QWORD *)(v14 + 8);
      v16 = *(_BYTE *)(v14 + 16);
      v17 = sub_23B1C63E0();
      v19 = v18;
      if (v17 == sub_23B1C63E0() && v19 == v20)
      {
        swift_bridgeObjectRelease_n();
        if ((v16 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        v22 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0)
          goto LABEL_6;
        if ((v16 & 1) != 0)
        {
LABEL_5:
          if (v32)
            goto LABEL_17;
          goto LABEL_6;
        }
      }
      if (!v32 && v15 == v31)
      {
LABEL_17:

        swift_bridgeObjectRelease();
        v23 = *(_QWORD *)(*v30 + 48) + 24 * v12;
        v24 = *(void **)v23;
        v25 = *(_QWORD *)(v23 + 8);
        LOBYTE(v23) = *(_BYTE *)(v23 + 16);
        *(_QWORD *)a1 = v24;
        *(_QWORD *)(a1 + 8) = v25;
        *(_BYTE *)(a1 + 16) = v23;
        v26 = v24;
        return 0;
      }
LABEL_6:
      v12 = (v12 + 1) & v13;
    }
    while (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v34 = *v30;
  *v30 = 0x8000000000000000;
  v29 = v33;
  sub_23ADE5058((uint64_t)v29, v31, v32, v12, isUniquelyReferenced_nonNull_native);
  *v30 = v34;
  swift_bridgeObjectRelease();
  *(_QWORD *)a1 = v29;
  *(_QWORD *)(a1 + 8) = v31;
  result = 1;
  *(_BYTE *)(a1 + 16) = v32 != 0;
  return result;
}

uint64_t sub_23ADE11A4(uint64_t *a1, uint64_t a2)
{
  return sub_23ADE11B8(a1, a2, &qword_2542DF398);
}

uint64_t sub_23ADE11B8(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;

  v5 = v3;
  v8 = *v3;
  v9 = sub_23B1C749C();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v5;
    *v5 = 0x8000000000000000;
    sub_23ADE52B4(a2, v11, isUniquelyReferenced_nonNull_native, a3);
    *v5 = v16;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v12 = *(_QWORD *)(v8 + 48);
  if (*(_QWORD *)(v12 + 8 * v11) != a2)
  {
    v13 = ~v10;
    do
    {
      v11 = (v11 + 1) & v13;
      if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v12 + 8 * v11) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_23ADE12C8(uint64_t a1, void *a2, uint64_t a3, void *a4, char a5)
{
  _QWORD *v5;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  char v18;
  char v19;
  char v20;
  char v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  char v27;
  char v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  char v34;
  char v35;
  char v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  char v43;
  uint64_t v44;
  _QWORD *v46;
  uint64_t v47;
  void *v48;
  char v49;
  void *v50;
  _QWORD v51[9];

  v10 = *v5;
  sub_23B1C74A8();
  swift_bridgeObjectRetain();
  sub_23AC4BB9C((uint64_t)v51, (uint64_t)a2, a3, (uint64_t)a4, a5);
  v11 = sub_23B1C74E4() & ~(-1 << *(_BYTE *)(v10 + 32));
  v46 = v5;
  v47 = v10 + 56;
  v50 = (void *)a3;
  if (((*(_QWORD *)(v10 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
    v48 = a2;
    v49 = a5;
    goto LABEL_9;
  }
  v44 = -1 << *(_BYTE *)(v10 + 32);
  v12 = 32 * v11;
  v13 = *(_QWORD *)(v10 + 48) + 32 * v11;
  v14 = a4;
  v15 = *(id *)v13;
  v16 = *(void **)(v13 + 8);
  v17 = *(void **)(v13 + 16);
  v18 = *(_BYTE *)(v13 + 24);
  sub_23AAFA44C(*(id *)v13, v16, v17, v18);
  sub_23AC4AE40((uint64_t)v15, (uint64_t)v16, (uint64_t)v17, v18);
  v19 = a5;
  v21 = v20;
  v22 = v15;
  v23 = v14;
  v24 = v50;
  v25 = v17;
  v26 = v46;
  v27 = v18;
  v28 = v19;
  sub_23ABE4D94(v22, v16, v25, v27);
  if ((v21 & 1) == 0)
  {
    v48 = a2;
    v29 = v23;
    v49 = v28;
    v11 = (v11 + 1) & ~v44;
    if (((*(_QWORD *)(v47 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      while (1)
      {
        v12 = 32 * v11;
        v30 = *(_QWORD *)(v10 + 48) + 32 * v11;
        v31 = *(id *)v30;
        v32 = *(void **)(v30 + 8);
        v33 = *(void **)(v30 + 16);
        v34 = *(_BYTE *)(v30 + 24);
        sub_23AAFA44C(*(id *)v30, v32, v33, v34);
        sub_23AC4AE40((uint64_t)v31, (uint64_t)v32, (uint64_t)v33, v34);
        v36 = v35;
        sub_23ABE4D94(v31, v32, v33, v34);
        if ((v36 & 1) != 0)
          break;
        v11 = (v11 + 1) & ~v44;
        a4 = v29;
        if (((*(_QWORD *)(v47 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
          goto LABEL_9;
      }
      v28 = v49;
      v23 = v29;
      v26 = v46;
      v24 = v50;
      goto LABEL_11;
    }
    a4 = v23;
LABEL_9:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v51[0] = *v46;
    *v46 = 0x8000000000000000;
    sub_23AAFA44C(v48, v50, a4, v49);
    sub_23ADE57E8((uint64_t)v48, (uint64_t)v50, (uint64_t)a4, v49, v11, isUniquelyReferenced_nonNull_native);
    *v46 = v51[0];
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = v48;
    *(_QWORD *)(a1 + 8) = v50;
    *(_QWORD *)(a1 + 16) = a4;
    result = 1;
    *(_BYTE *)(a1 + 24) = v49;
    return result;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  sub_23ABE4D94(a2, v24, v23, v28);
  v39 = *(_QWORD *)(*v26 + 48) + v12;
  v40 = *(void **)v39;
  v41 = *(void **)(v39 + 8);
  v42 = *(void **)(v39 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v39;
  *(_QWORD *)(a1 + 8) = v41;
  *(_QWORD *)(a1 + 16) = v42;
  v43 = *(_BYTE *)(v39 + 24);
  *(_BYTE *)(a1 + 24) = v43;
  sub_23AAFA44C(v40, v41, v42, v43);
  return 0;
}

uint64_t sub_23ADE15DC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t i;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  __int16 v16;
  __int128 v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  _BYTE v21[72];
  _BYTE v22[48];

  v3 = v2;
  v6 = *v2;
  sub_23B1C74A8();
  sub_23AC4BE5C();
  v7 = sub_23B1C74E4();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  i = v7 & ~v8;
  v10 = v6 + 56;
  if (((*(_QWORD *)(v6 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v11 = 48 * i;
    sub_23AA724E8(*(_QWORD *)(v6 + 48) + 48 * i, (uint64_t)v21, (uint64_t *)&unk_2542E05B0);
    sub_23AC4B79C((uint64_t)v21, a2);
    if ((v12 & 1) != 0)
    {
LABEL_3:
      result = 0;
      v14 = *(_QWORD *)(*v3 + 48) + v11;
      v15 = *(_QWORD *)(v14 + 32);
      v16 = *(_WORD *)(v14 + 40);
      v17 = *(_OWORD *)(v14 + 16);
      *(_OWORD *)a1 = *(_OWORD *)v14;
      *(_OWORD *)(a1 + 16) = v17;
      *(_QWORD *)(a1 + 32) = v15;
      *(_WORD *)(a1 + 40) = v16;
      return result;
    }
    for (i = (i + 1) & ~v8; ((*(_QWORD *)(v10 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & ~v8)
    {
      v11 = 48 * i;
      sub_23AA724E8(*(_QWORD *)(v6 + 48) + 48 * i, (uint64_t)v22, (uint64_t *)&unk_2542E05B0);
      sub_23AC4B79C((uint64_t)v22, a2);
      if ((v18 & 1) != 0)
        goto LABEL_3;
    }
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20 = *v3;
  *v3 = 0x8000000000000000;
  sub_23ADE5A94(a2, i, isUniquelyReferenced_nonNull_native);
  *v3 = v20;
  swift_bridgeObjectRelease();
  sub_23AA724E8(a2, a1, (uint64_t *)&unk_2542E05B0);
  return 1;
}

uint64_t sub_23ADE1794(unint64_t *a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v20[9];

  v3 = v2;
  v6 = *v2;
  sub_23B1C74A8();
  swift_bridgeObjectRetain();
  sub_23B14B63C((uint64_t)v20, a2);
  v7 = sub_23B1C74E4();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v9);
    sub_23AA93780(v10);
    sub_23B14CF98(v10, a2);
    v12 = v11;
    sub_23ADF2688(v10);
    if ((v12 & 1) != 0)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      sub_23ADF2688(a2);
      v17 = *(_QWORD *)(*(_QWORD *)(*v3 + 48) + 8 * v9);
      *a1 = v17;
      sub_23AA93780(v17);
      return 0;
    }
    v13 = ~v8;
    while (1)
    {
      v9 = (v9 + 1) & v13;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        break;
      v14 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v9);
      sub_23AA93780(v14);
      sub_23B14CF98(v14, a2);
      v16 = v15;
      sub_23ADF2688(v14);
      if ((v16 & 1) != 0)
        goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20[0] = *v3;
  *v3 = 0x8000000000000000;
  sub_23AA93780(a2);
  sub_23ADE5C5C(a2, v9, isUniquelyReferenced_nonNull_native);
  *v3 = v20[0];
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_23ADE1930(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t *v54;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v3 = v2;
  v60 = a1;
  v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E3050);
  MEMORY[0x24BDAC7A8](v69);
  v65 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v58 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v61 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v58 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v68 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v66 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v64 = (uint64_t)&v58 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v58 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v58 = (uint64_t)&v58 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v58 - v26;
  v59 = v3;
  v28 = *v3;
  sub_23B1C74A8();
  v70 = a2;
  sub_23AA8EFC8(a2, (uint64_t)v27, &qword_2542DDDB0);
  v71 = v16;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23AA724E8((uint64_t)v27, (uint64_t)v10, &qword_2542E1608);
    sub_23B1C74B4();
    swift_bridgeObjectRetain();
    sub_23B14B2C8();
    v29 = (uint64_t)v10;
    v30 = &qword_2542E1608;
  }
  else
  {
    sub_23AA724E8((uint64_t)v27, (uint64_t)v15, &qword_2542E1600);
    sub_23B1C74B4();
    swift_bridgeObjectRetain();
    sub_23B14AE68();
    v29 = (uint64_t)v15;
    v30 = &qword_2542E1600;
  }
  sub_23AA8A05C(v29, v30);
  v31 = sub_23B1C74E4();
  v32 = -1 << *(_BYTE *)(v28 + 32);
  v33 = v31 & ~v32;
  v34 = v28 + 56;
  v36 = (uint64_t)v65;
  v35 = v66;
  if (((*(_QWORD *)(v28 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0)
  {
    v37 = ~v32;
    v68 = *(_QWORD *)(v68 + 72);
    v63 = ~v32;
    do
    {
      v39 = *(_QWORD *)(v28 + 48);
      v67 = v68 * v33;
      sub_23AA8EFC8(v39 + v68 * v33, (uint64_t)v23, &qword_2542DDDB0);
      v40 = v36 + *(int *)(v69 + 48);
      sub_23AA8EFC8((uint64_t)v23, v36, &qword_2542DDDB0);
      sub_23AA8EFC8(v70, v40, &qword_2542DDDB0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_23AA8EFC8(v36, v35, &qword_2542DDDB0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v41 = v62;
          sub_23AA724E8(v40, (uint64_t)v62, &qword_2542E1608);
          sub_23B028CFC(v66, v41);
          v43 = v42;
          v44 = (uint64_t)v41;
          v35 = v66;
          sub_23AA8A05C(v44, &qword_2542E1608);
          sub_23AA8A05C(v35, &qword_2542E1608);
          v38 = &qword_2542DDDB0;
          if ((v43 & 1) != 0)
            goto LABEL_15;
        }
        else
        {
          sub_23AA8A05C(v35, &qword_2542E1608);
          v38 = (uint64_t *)&unk_2569E3050;
        }
      }
      else
      {
        v45 = v23;
        v46 = v34;
        v47 = v28;
        v48 = v64;
        sub_23AA8EFC8(v36, v64, &qword_2542DDDB0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_23AA8A05C(v48, &qword_2542E1600);
          v38 = (uint64_t *)&unk_2569E3050;
          v28 = v47;
          v34 = v46;
          v23 = v45;
          v36 = (uint64_t)v65;
          v37 = v63;
        }
        else
        {
          v49 = v61;
          sub_23AA724E8(v40, v61, &qword_2542E1600);
          sub_23B028224(v48, v49);
          v51 = v50;
          v52 = v49;
          v35 = v66;
          sub_23AA8A05C(v52, &qword_2542E1600);
          sub_23AA8A05C(v48, &qword_2542E1600);
          v38 = &qword_2542DDDB0;
          v28 = v47;
          v34 = v46;
          v23 = v45;
          v36 = (uint64_t)v65;
          v37 = v63;
          if ((v51 & 1) != 0)
          {
LABEL_15:
            sub_23AA8A05C(v36, &qword_2542DDDB0);
            sub_23AA8A05C((uint64_t)v23, &qword_2542DDDB0);
            swift_bridgeObjectRelease();
            sub_23AA8A05C(v70, &qword_2542DDDB0);
            sub_23AA8EFC8(*(_QWORD *)(*v59 + 48) + v67, v60, &qword_2542DDDB0);
            return 0;
          }
        }
      }
      sub_23AA8A05C(v36, v38);
      sub_23AA8A05C((uint64_t)v23, &qword_2542DDDB0);
      v33 = (v33 + 1) & v37;
    }
    while (((*(_QWORD *)(v34 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  v54 = v59;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v56 = v70;
  v57 = v58;
  sub_23AA8EFC8(v70, v58, &qword_2542DDDB0);
  v72 = *v54;
  *v54 = 0x8000000000000000;
  sub_23ADE5DF0(v57, v33, isUniquelyReferenced_nonNull_native);
  *v54 = v72;
  swift_bridgeObjectRelease();
  sub_23AA724E8(v56, v60, &qword_2542DDDB0);
  return 1;
}

uint64_t sub_23ADE1F24(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_23B1C6E30();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_23AA9F52C(0, (unint64_t *)&unk_2542E1F20);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_23B1C6E24();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_23B18E27C(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_23ADE44D8(v26, &qword_2569E5DB8);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_23B18E824(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_23B1C6C44();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_23AA9F52C(0, (unint64_t *)&unk_2542E1F20);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_23B1C6C50();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_23B1C6C50();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_23ADE634C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_2569E5DB8, (unint64_t *)&unk_2542E1F20);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_23ADE21E0(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_23B1C6E30();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_23AA9F52C(0, (unint64_t *)&unk_2569E1C88);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_23B1C6E24();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_23B18E2A0(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_23ADE44D8(v26, &qword_2569E1C80);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_23B18E824(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_23B1C6C44();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_23AA9F52C(0, (unint64_t *)&unk_2569E1C88);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_23B1C6C50();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_23B1C6C50();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_23ADE634C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native, &qword_2569E1C80, (unint64_t *)&unk_2569E1C88);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_23ADE249C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v9 = *v4;
  sub_23B1C74A8();
  sub_23B1C74D8();
  swift_bridgeObjectRetain();
  sub_23B1C64A0();
  v10 = sub_23B1C74E4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v11;
    v14 = *(_QWORD *)(v9 + 48);
    while (1)
    {
      v15 = (_QWORD *)(v14 + 24 * v12);
      if (*v15 == a2)
      {
        v16 = v15[1] == a3 && v15[2] == a4;
        if (v16 || (sub_23B1C7388() & 1) != 0)
          break;
      }
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = *(_QWORD *)(*v4 + 48) + 24 * v12;
    v18 = *(_QWORD *)(v17 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v17;
    *(_QWORD *)(a1 + 16) = v18;
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v4;
    *v4 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    sub_23ADE64DC(a2, a3, a4, v12, isUniquelyReferenced_nonNull_native);
    *v4 = v21;
    swift_bridgeObjectRelease();
    *(_QWORD *)a1 = a2;
    *(_QWORD *)(a1 + 8) = a3;
    result = 1;
    *(_QWORD *)(a1 + 16) = a4;
  }
  return result;
}

uint64_t sub_23ADE2660()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1A60);
  result = sub_23B1C6EC0();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v29 = (unint64_t)(v7 + 63) >> 6;
    v10 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v15 >= v29)
          goto LABEL_37;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v29)
            goto LABEL_37;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v29)
              goto LABEL_37;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v29)
              {
LABEL_37:
                v28 = 1 << *(_BYTE *)(v2 + 32);
                if (v28 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v28;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_43;
                  if (v5 >= v29)
                    goto LABEL_37;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 16 * v14;
      v19 = *(_QWORD *)v18;
      v20 = *(unsigned __int8 *)(v18 + 8);
      sub_23B1C74A8();
      if (v20)
      {
        sub_23B1C74B4();
        if (v20 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      result = sub_23B1C74E4();
      v21 = -1 << *(_BYTE *)(v4 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 16 * v11;
      *(_QWORD *)v12 = v19;
      *(_BYTE *)(v12 + 8) = v20;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23ADE2978()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75A0);
  v3 = sub_23B1C6EC0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_23B1C74A8();
      sub_23B1C64A0();
      result = sub_23B1C74E4();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23ADE2C54(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  int64_t v30;
  _QWORD *v31;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_23B1C6EC0();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v29 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v31 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v4 + 56);
    v30 = (unint64_t)(v7 + 63) >> 6;
    v10 = v5 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v30)
          goto LABEL_33;
        v17 = v31[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v30)
            goto LABEL_33;
          v17 = v31[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v30)
              goto LABEL_33;
            v17 = v31[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v30)
              {
LABEL_33:
                swift_release();
                v3 = v29;
                v28 = 1 << *(_BYTE *)(v4 + 32);
                if (v28 > 63)
                  bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v31 = -1 << v28;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v17 = v31[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v30)
                    goto LABEL_33;
                  v17 = v31[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v9 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15);
      sub_23B1C63E0();
      sub_23B1C74A8();
      sub_23B1C64A0();
      v20 = sub_23B1C74E4();
      result = swift_bridgeObjectRelease();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = v20 & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_23ADE2F60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E30);
  v3 = sub_23B1C6EC0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v31)
          goto LABEL_35;
        v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_35;
          v16 = v32[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_35;
            v16 = v32[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_35:
                swift_release();
                v1 = v0;
                v30 = 1 << *(_BYTE *)(v2 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_41;
                  if (v10 >= v31)
                    goto LABEL_35;
                  v16 = v32[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = *(_QWORD *)(v2 + 48) + 24 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(unsigned __int8 *)(v19 + 16);
      sub_23B1C74A8();
      sub_23B1C63E0();
      sub_23B1C64A0();
      swift_bridgeObjectRelease();
      sub_23B1C74C0();
      if (v22 != 1)
        sub_23B1C74B4();
      result = sub_23B1C74E4();
      v23 = -1 << *(_BYTE *)(v4 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_BYTE *)(v12 + 16) = v22;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23ADE32B0(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = sub_23B1C6EC0();
  v6 = result;
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = 0;
    v8 = (uint64_t *)(v4 + 56);
    v9 = 1 << *(_BYTE *)(v4 + 32);
    v28 = -1 << v9;
    v29 = v3;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v30 = 1 << *(_BYTE *)(v4 + 32);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v7 << 6);
      }
      else
      {
        v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_33;
        v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          v7 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_33;
          v18 = v8[v7];
          if (!v18)
          {
            v7 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_33;
            v18 = v8[v7];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                if (v30 >= 64)
                  bzero((void *)(v4 + 56), 8 * v12);
                else
                  *v8 = v28;
                v3 = v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v7 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_39;
                  if (v7 >= v12)
                    goto LABEL_33;
                  v18 = v8[v7];
                  ++v19;
                  if (v18)
                    goto LABEL_23;
                }
              }
              v7 = v19;
            }
          }
        }
LABEL_23:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v16);
      result = sub_23B1C749C();
      v21 = -1 << *(_BYTE *)(v6 + 32);
      v22 = result & ~v21;
      v23 = v22 >> 6;
      if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v26 = v23 == v25;
          if (v23 == v25)
            v23 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

unint64_t sub_23ADE352C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DA0);
  v3 = sub_23B1C6EC0();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v12 = v11 | (v10 << 6);
      }
      else
      {
        v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v13 >= v8)
          goto LABEL_22;
        v14 = v5[v13];
        ++v10;
        if (!v14)
        {
          v10 = v13 + 1;
          if (v13 + 1 >= v8)
            goto LABEL_22;
          v14 = v5[v10];
          if (!v14)
          {
            v10 = v13 + 2;
            if (v13 + 2 >= v8)
              goto LABEL_22;
            v14 = v5[v10];
            if (!v14)
            {
              v15 = v13 + 3;
              if (v15 >= v8)
              {
LABEL_22:
                swift_release();
                v16 = 1 << *(_BYTE *)(v2 + 32);
                if (v16 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v5 = -1 << v16;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v14 = v5[v15];
              if (!v14)
              {
                while (1)
                {
                  v10 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_28;
                  if (v10 >= v8)
                    goto LABEL_22;
                  v14 = v5[v10];
                  ++v15;
                  if (v14)
                    goto LABEL_21;
                }
              }
              v10 = v15;
            }
          }
        }
LABEL_21:
        v7 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      result = sub_23B18E4C0(*(void **)(*(_QWORD *)(v2 + 48) + 16 * v12), *(unsigned __int8 *)(*(_QWORD *)(v2 + 48) + 16 * v12 + 8) | (*(unsigned __int8 *)(*(_QWORD *)(v2 + 48)+ 16 * v12+ 9) << 8), v3);
    }
  }
  result = swift_release();
  *v1 = v3;
  return result;
}

uint64_t sub_23ADE370C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  char v34[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DA8);
  v3 = sub_23B1C6EC0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32)
          goto LABEL_33;
        v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_33;
          v16 = v33[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_33;
            v16 = v33[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v32)
                    goto LABEL_33;
                  v16 = v33[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = *(_QWORD *)(v2 + 48) + 32 * v14;
      v20 = *(_QWORD *)v19;
      v21 = *(_QWORD *)(v19 + 8);
      v22 = *(_QWORD *)(v19 + 16);
      v23 = *(_BYTE *)(v19 + 24);
      sub_23B1C74A8();
      sub_23AC4BB9C((uint64_t)v34, v20, v21, v22, v23);
      result = sub_23B1C74E4();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 32 * v11;
      *(_QWORD *)v12 = v20;
      *(_QWORD *)(v12 + 8) = v21;
      *(_QWORD *)(v12 + 16) = v22;
      *(_BYTE *)(v12 + 24) = v23;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23ADE3A24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _BYTE v25[48];

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DB0);
  result = sub_23B1C6EC0();
  v3 = result;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 0;
    v24 = (_QWORD *)(v1 + 56);
    v5 = 1 << *(_BYTE *)(v1 + 32);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v1 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = result + 56;
    while (1)
    {
      if (v7)
      {
        v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v12 = v11 | (v4 << 6);
      }
      else
      {
        v13 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v8)
          goto LABEL_33;
        v14 = v24[v13];
        ++v4;
        if (!v14)
        {
          v4 = v13 + 1;
          if (v13 + 1 >= v8)
            goto LABEL_33;
          v14 = v24[v4];
          if (!v14)
          {
            v4 = v13 + 2;
            if (v13 + 2 >= v8)
              goto LABEL_33;
            v14 = v24[v4];
            if (!v14)
            {
              v15 = v13 + 3;
              if (v15 >= v8)
              {
LABEL_33:
                v23 = 1 << *(_BYTE *)(v1 + 32);
                if (v23 > 63)
                  bzero(v24, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v24 = -1 << v23;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v14 = v24[v15];
              if (!v14)
              {
                while (1)
                {
                  v4 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_39;
                  if (v4 >= v8)
                    goto LABEL_33;
                  v14 = v24[v4];
                  ++v15;
                  if (v14)
                    goto LABEL_23;
                }
              }
              v4 = v15;
            }
          }
        }
LABEL_23:
        v7 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v4 << 6);
      }
      sub_23AA724E8(*(_QWORD *)(v1 + 48) + 48 * v12, (uint64_t)v25, (uint64_t *)&unk_2542E05B0);
      sub_23B1C74A8();
      sub_23AC4BE5C();
      result = sub_23B1C74E4();
      v16 = -1 << *(_BYTE *)(v3 + 32);
      v17 = result & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v9 + 8 * (v17 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v9 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v19 = 0;
        v20 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v20 && (v19 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v21 = v18 == v20;
          if (v18 == v20)
            v18 = 0;
          v19 |= v21;
          v22 = *(_QWORD *)(v9 + 8 * v18);
        }
        while (v22 == -1);
        v10 = __clz(__rbit64(~v22)) + (v18 << 6);
      }
      *(_QWORD *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      result = sub_23AA724E8((uint64_t)v25, *(_QWORD *)(v3 + 48) + 48 * v10, (uint64_t *)&unk_2542E05B0);
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

uint64_t sub_23ADE3D08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5D98);
  v3 = sub_23B1C6EC0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_23B1C74A8();
      sub_23B1C63E0();
      sub_23B1C64A0();
      swift_bridgeObjectRelease();
      result = sub_23B1C74E4();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23ADE3FDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  char v28[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E58);
  v3 = sub_23B1C6EC0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_23B1C74A8();
      sub_23B14B63C((uint64_t)v28, v19);
      result = sub_23B1C74E4();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23ADE4294()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5E68);
  v7 = sub_23B1C6EC0();
  if (*(_QWORD *)(v6 + 16))
  {
    v8 = 1 << *(_BYTE *)(v6 + 32);
    v9 = (_QWORD *)(v6 + 56);
    v10 = -1;
    if (v8 < 64)
      v10 = ~(-1 << v8);
    v11 = v10 & *(_QWORD *)(v6 + 56);
    v12 = (unint64_t)(v8 + 63) >> 6;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v14 << 6);
      }
      else
      {
        v17 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v17 >= v12)
          goto LABEL_22;
        v18 = v9[v17];
        ++v14;
        if (!v18)
        {
          v14 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_22;
          v18 = v9[v14];
          if (!v18)
          {
            v14 = v17 + 2;
            if (v17 + 2 >= v12)
              goto LABEL_22;
            v18 = v9[v14];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_22:
                swift_release();
                v20 = 1 << *(_BYTE *)(v6 + 32);
                if (v20 > 63)
                  bzero((void *)(v6 + 56), ((unint64_t)(v20 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v20;
                *(_QWORD *)(v6 + 16) = 0;
                break;
              }
              v18 = v9[v19];
              if (!v18)
              {
                while (1)
                {
                  v14 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_28;
                  if (v14 >= v12)
                    goto LABEL_22;
                  v18 = v9[v14];
                  ++v19;
                  if (v18)
                    goto LABEL_21;
                }
              }
              v14 = v19;
            }
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v14 << 6);
      }
      sub_23AA724E8(*(_QWORD *)(v6 + 48) + *(_QWORD *)(v3 + 72) * v16, (uint64_t)v5, &qword_2542DDDB0);
      result = sub_23B18E620((uint64_t)v5, v7);
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_23ADE44C0(uint64_t a1)
{
  return sub_23ADE44D8(a1, &qword_2569E5DB8);
}

uint64_t sub_23ADE44CC(uint64_t a1)
{
  return sub_23ADE44D8(a1, &qword_2569E1C80);
}

uint64_t sub_23ADE44D8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_23B1C6EC0();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_23B1C6C44();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_23ADE4770()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE770);
  v3 = sub_23B1C6EC0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v32 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v31 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31)
          goto LABEL_33;
        v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v31)
            goto LABEL_33;
          v16 = v32[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v31)
              goto LABEL_33;
            v16 = v32[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v30 = 1 << *(_BYTE *)(v2 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v31)
                    goto LABEL_33;
                  v16 = v32[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = v2;
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 24 * v14);
      v20 = *v19;
      v21 = v19[1];
      v22 = v19[2];
      sub_23B1C74A8();
      sub_23B1C74D8();
      sub_23B1C64A0();
      result = sub_23B1C74E4();
      v23 = -1 << *(_BYTE *)(v4 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 24 * v11);
      *v12 = v20;
      v12[1] = v21;
      v12[2] = v22;
      ++*(_QWORD *)(v4 + 16);
      v2 = v18;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_23ADE4A88(uint64_t result, char a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v7 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0)
    goto LABEL_32;
  if ((a4 & 1) != 0)
  {
    sub_23ADE2660();
  }
  else
  {
    if (v9 > v8)
    {
      result = (uint64_t)sub_23ADE6680();
      goto LABEL_32;
    }
    sub_23ADE7B44();
  }
  v10 = *v4;
  sub_23B1C74A8();
  if (a2)
  {
    sub_23B1C74B4();
    if (a2 == 1)
      sub_23B1C74D8();
  }
  else
  {
    sub_23B1C74B4();
    sub_23B1C74CC();
  }
  result = sub_23B1C74E4();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a3 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v12 = ~v11;
    v13 = a2 == 2;
    v14 = v7 == 1 && a2 == 2;
    if (v7)
      v13 = 0;
    do
    {
      v15 = *(_QWORD *)(v10 + 48) + 16 * a3;
      v16 = *(_QWORD *)v15;
      v17 = *(unsigned __int8 *)(v15 + 8);
      if (v17)
      {
        if (v17 == 1)
        {
          if (a2 == 1 && v16 == v7)
            goto LABEL_31;
        }
        else if (v16)
        {
          if (v14)
            goto LABEL_31;
        }
        else if (v13)
        {
          goto LABEL_31;
        }
      }
      else if (!a2 && (_DWORD)v16 == (_DWORD)v7)
      {
LABEL_31:
        result = sub_23B1C740C();
        __break(1u);
        break;
      }
      a3 = (a3 + 1) & v12;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_32:
  v18 = *v4;
  *(_QWORD *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v19 = *(_QWORD *)(v18 + 48) + 16 * a3;
  *(_QWORD *)v19 = v7;
  *(_BYTE *)(v19 + 8) = a2;
  v20 = *(_QWORD *)(v18 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v18 + 16) = v22;
  return result;
}

uint64_t sub_23ADE4C84(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_23ADE2978();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_23ADE6824();
      goto LABEL_22;
    }
    sub_23ADE7E2C();
  }
  v11 = *v4;
  sub_23B1C74A8();
  sub_23B1C64A0();
  result = sub_23B1C74E4();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_23B1C7388(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_23B1C740C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_23B1C7388();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_23ADE4E1C(uint64_t result, unint64_t a2, char a3, uint64_t *a4, void (*a5)(_QWORD))
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;

  v7 = v5;
  v9 = result;
  v10 = *(_QWORD *)(*v5 + 16);
  v11 = *(_QWORD *)(*v5 + 24);
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_22;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23ADE2C54(v12, a4);
  }
  else
  {
    if (v11 > v10)
    {
      result = (uint64_t)sub_23ADE69E0(a4);
LABEL_22:
      v29 = *v7;
      *(_QWORD *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v29 + 48) + 8 * a2) = v9;
      v30 = *(_QWORD *)(v29 + 16);
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (!v31)
      {
        *(_QWORD *)(v29 + 16) = v32;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_23ADE80D8(v12, a4);
  }
  v13 = *v5;
  sub_23B1C63E0();
  sub_23B1C74A8();
  sub_23B1C64A0();
  v14 = sub_23B1C74E4();
  result = swift_bridgeObjectRelease();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v16 = sub_23B1C63E0();
  v18 = v17;
  if (v16 == sub_23B1C63E0() && v18 == v19)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v21 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    v22 = ~v15;
    do
    {
      a2 = (a2 + 1) & v22;
      if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v23 = sub_23B1C63E0();
      v25 = v24;
      if (v23 == sub_23B1C63E0() && v25 == v26)
        goto LABEL_25;
      v28 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v28 & 1) == 0);
  }
LABEL_26:
  a5(0);
  result = sub_23B1C740C();
  __break(1u);
  return result;
}

uint64_t sub_23ADE5058(uint64_t result, uint64_t a2, char a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v7 = result;
  v8 = *(_QWORD *)(*v5 + 16);
  v9 = *(_QWORD *)(*v5 + 24);
  if (v9 > v8 && (a5 & 1) != 0)
    goto LABEL_25;
  if ((a5 & 1) != 0)
  {
    sub_23ADE2F60();
  }
  else
  {
    if (v9 > v8)
    {
      result = (uint64_t)sub_23ADE6B80();
      goto LABEL_25;
    }
    sub_23ADE83B0();
  }
  v10 = *v5;
  sub_23B1C74A8();
  sub_23B1C63E0();
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  sub_23B1C74C0();
  if ((a3 & 1) == 0)
    sub_23B1C74B4();
  result = sub_23B1C74E4();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a4 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v12 = ~v11;
    do
    {
      v13 = *(_QWORD *)(v10 + 48) + 24 * a4;
      v14 = *(_QWORD *)(v13 + 8);
      v15 = *(_BYTE *)(v13 + 16);
      v16 = sub_23B1C63E0();
      v18 = v17;
      if (v16 == sub_23B1C63E0() && v18 == v19)
      {
        result = swift_bridgeObjectRelease_n();
        if ((v15 & 1) != 0)
          goto LABEL_12;
      }
      else
      {
        v21 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
          goto LABEL_13;
        if ((v15 & 1) != 0)
        {
LABEL_12:
          if ((a3 & 1) != 0)
            goto LABEL_24;
          goto LABEL_13;
        }
      }
      if ((a3 & 1) == 0 && v14 == a2)
      {
LABEL_24:
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2718);
        result = sub_23B1C740C();
        __break(1u);
        break;
      }
LABEL_13:
      a4 = (a4 + 1) & v12;
    }
    while (((*(_QWORD *)(v10 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_25:
  v22 = *v27;
  *(_QWORD *)(*v27 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v23 = *(_QWORD *)(v22 + 48) + 24 * a4;
  *(_QWORD *)v23 = v7;
  *(_QWORD *)(v23 + 8) = a2;
  *(_BYTE *)(v23 + 16) = a3 & 1;
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
    __break(1u);
  else
    *(_QWORD *)(v22 + 16) = v26;
  return result;
}

uint64_t sub_23ADE52B4(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v6 = result;
  v7 = *(_QWORD *)(*v4 + 16);
  v8 = *(_QWORD *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23ADE32B0(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_23ADE6D3C(a4);
      goto LABEL_14;
    }
    sub_23ADE86D4(v9, a4);
  }
  v10 = *v4;
  result = sub_23B1C749C();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  a2 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v12 = *(_QWORD *)(v10 + 48);
    if (*(_QWORD *)(v12 + 8 * a2) == v6)
    {
LABEL_13:
      result = sub_23B1C740C();
      __break(1u);
    }
    else
    {
      v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v12 + 8 * a2) == v6)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = v6;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    *(_QWORD *)(v14 + 16) = v17;
  return result;
}

void sub_23ADE53E8(char *a1, uint64_t a2, unint64_t a3, char a4)
{
  char *v4;
  uint64_t v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  BOOL v32;
  BOOL v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;

  v9 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  v10 = *(_QWORD *)(*(_QWORD *)v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if ((a4 & 1) != 0)
    {
      sub_23ADE352C();
    }
    else
    {
      if (v10 > v9)
      {
        sub_23ADE6EC8();
        goto LABEL_43;
      }
      sub_23ADE8930();
    }
    v11 = *(_QWORD *)v4;
    sub_23B1C74A8();
    if ((a2 & 0x100) != 0)
    {
      sub_23B1C74B4();
      sub_23B1C63E0();
      v12 = a1;
      sub_23B1C64A0();
      swift_bridgeObjectRelease();
      sub_23AA862DC(a1, a2, 1);
    }
    else
    {
      sub_23B1C74B4();
      if ((_BYTE)a2)
      {
        sub_23B1C74B4();
        if (a2 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
    }
    v4 = &v36;
    v13 = sub_23B1C74E4();
    v14 = -1 << *(_BYTE *)(v11 + 32);
    a3 = v13 & ~v14;
    v15 = v11 + 56;
    if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
    {
      v16 = ~v14;
      v17 = a2 == 2;
      v18 = a1 == (char *)1 && a2 == 2;
      if (a1)
        v17 = 0;
      v32 = v17;
      v33 = v18;
      v35 = v11 + 56;
      do
      {
        v19 = *(_QWORD *)(v11 + 48) + 16 * a3;
        v4 = *(char **)v19;
        v5 = *(unsigned __int8 *)(v19 + 8);
        if ((*(_BYTE *)(v19 + 9) & 1) != 0)
        {
          if ((a2 & 0x100) != 0)
          {
            v20 = v11;
            v21 = sub_23B1C63E0();
            v23 = v22;
            if (v21 == sub_23B1C63E0() && v23 == v24)
              goto LABEL_46;
            v26 = sub_23B1C7388();
            sub_23AA88218(v4, v5, 1);
            sub_23AA88218(v4, v5, 1);
            sub_23AA88218(a1, a2, 1);
            sub_23AA88218(v4, v5, 1);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23AA862DC(a1, a2, 1);

            sub_23AA862DC(v4, v5, 1);
            sub_23AA862DC(v4, v5, 1);
            v11 = v20;
            v15 = v35;
            if ((v26 & 1) != 0)
              goto LABEL_47;
          }
        }
        else if ((a2 & 0x100) == 0)
        {
          if (*(_BYTE *)(v19 + 8))
          {
            if ((_DWORD)v5 == 1)
            {
              if (a2 == 1 && v4 == a1)
                goto LABEL_47;
            }
            else if (v4)
            {
              if (v33)
                goto LABEL_47;
            }
            else if (v32)
            {
              goto LABEL_47;
            }
          }
          else if (!(_BYTE)a2 && (_DWORD)v4 == (_DWORD)a1)
          {
            goto LABEL_47;
          }
        }
        a3 = (a3 + 1) & v16;
      }
      while (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_43:
  v27 = *v34;
  *(_QWORD *)(*v34 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v28 = *(_QWORD *)(v27 + 48) + 16 * a3;
  *(_QWORD *)v28 = a1;
  *(_BYTE *)(v28 + 8) = a2;
  *(_BYTE *)(v28 + 9) = BYTE1(a2) & 1;
  v29 = *(_QWORD *)(v27 + 16);
  v30 = __OFADD__(v29, 1);
  v31 = v29 + 1;
  if (v30)
  {
    __break(1u);
LABEL_46:
    sub_23AA88218(v4, v5, 1);
    sub_23AA88218(v4, v5, 1);
    sub_23AA88218(a1, a2, 1);
    sub_23AA88218(v4, v5, 1);
    swift_bridgeObjectRelease_n();
    sub_23AA862DC(a1, a2, 1);

    sub_23AA862DC(v4, v5, 1);
    sub_23AA862DC(v4, v5, 1);
LABEL_47:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6CD8);
    sub_23B1C740C();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v27 + 16) = v31;
  }
}

void sub_23ADE57E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t i, char a6)
{
  uint64_t *v6;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _BYTE v42[72];

  v12 = *(_QWORD *)(*v6 + 16);
  v13 = *(_QWORD *)(*v6 + 24);
  if (v13 > v12 && (a6 & 1) != 0)
    goto LABEL_14;
  if ((a6 & 1) != 0)
  {
    sub_23ADE370C();
  }
  else
  {
    if (v13 > v12)
    {
      v14 = a1;
      v15 = a2;
      v16 = a3;
      sub_23ADE7088();
      goto LABEL_15;
    }
    sub_23ADE8AF0();
  }
  v17 = *v6;
  sub_23B1C74A8();
  sub_23AC4BB9C((uint64_t)v42, a1, a2, a3, a4);
  i = sub_23B1C74E4() & ~(-1 << *(_BYTE *)(v17 + 32));
  v41 = v17 + 56;
  if (((*(_QWORD *)(v17 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) == 0)
  {
LABEL_14:
    v14 = a1;
    v15 = a2;
    v16 = a3;
    goto LABEL_15;
  }
  v37 = -1 << *(_BYTE *)(v17 + 32);
  v39 = v17;
  v18 = *(_QWORD *)(v17 + 48) + 32 * i;
  v19 = *(id *)v18;
  v20 = *(void **)(v18 + 8);
  v21 = *(void **)(v18 + 16);
  v22 = *(_BYTE *)(v18 + 24);
  sub_23AAFA44C(*(id *)v18, v20, v21, v22);
  v14 = a1;
  v15 = a2;
  v16 = a3;
  v40 = a4;
  sub_23AC4AE40((uint64_t)v19, (uint64_t)v20, (uint64_t)v21, v22);
  v24 = v23;
  sub_23ABE4D94(v19, v20, v21, v22);
  if ((v24 & 1) != 0)
    goto LABEL_19;
  for (i = (i + 1) & ~v37; ((*(_QWORD *)(v41 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; a4 = v40)
  {
    v25 = *(_QWORD *)(v39 + 48) + 32 * i;
    v26 = *(id *)v25;
    v27 = *(void **)(v25 + 8);
    v28 = *(void **)(v25 + 16);
    v29 = *(_BYTE *)(v25 + 24);
    sub_23AAFA44C(*(id *)v25, v27, v28, v29);
    sub_23AC4AE40((uint64_t)v26, (uint64_t)v27, (uint64_t)v28, v29);
    v31 = v30;
    sub_23ABE4D94(v26, v27, v28, v29);
    if ((v31 & 1) != 0)
      goto LABEL_19;
    i = (i + 1) & ~v37;
  }
LABEL_15:
  v32 = *v38;
  *(_QWORD *)(*v38 + 8 * (i >> 6) + 56) |= 1 << i;
  v33 = *(_QWORD *)(v32 + 48) + 32 * i;
  *(_QWORD *)v33 = v14;
  *(_QWORD *)(v33 + 8) = v15;
  *(_QWORD *)(v33 + 16) = v16;
  *(_BYTE *)(v33 + 24) = a4;
  v34 = *(_QWORD *)(v32 + 16);
  v35 = __OFADD__(v34, 1);
  v36 = v34 + 1;
  if (!v35)
  {
    *(_QWORD *)(v32 + 16) = v36;
    return;
  }
  __break(1u);
LABEL_19:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6520);
  sub_23B1C740C();
  __break(1u);
}

uint64_t sub_23ADE5A94(uint64_t a1, unint64_t i, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _BYTE v20[72];
  _BYTE v21[48];

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_13;
  if ((a3 & 1) != 0)
  {
    sub_23ADE3A24();
  }
  else
  {
    if (v8 > v7)
    {
      sub_23ADE7248();
      goto LABEL_13;
    }
    sub_23ADE8DDC();
  }
  v9 = *v3;
  sub_23B1C74A8();
  sub_23AC4BE5C();
  v10 = sub_23B1C74E4();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  i = v10 & ~v11;
  v12 = v9 + 56;
  if (((*(_QWORD *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_23AA724E8(*(_QWORD *)(v9 + 48) + 48 * i, (uint64_t)v20, (uint64_t *)&unk_2542E05B0);
    sub_23AC4B79C((uint64_t)v20, a1);
    if ((v13 & 1) != 0)
      goto LABEL_16;
    for (i = (i + 1) & ~v11; ((*(_QWORD *)(v12 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & ~v11)
    {
      sub_23AA724E8(*(_QWORD *)(v9 + 48) + 48 * i, (uint64_t)v21, (uint64_t *)&unk_2542E05B0);
      sub_23AC4B79C((uint64_t)v21, a1);
      if ((v14 & 1) != 0)
        goto LABEL_16;
    }
  }
LABEL_13:
  v15 = *v4;
  *(_QWORD *)(*v4 + 8 * (i >> 6) + 56) |= 1 << i;
  result = sub_23AA724E8(a1, *(_QWORD *)(v15 + 48) + 48 * i, (uint64_t *)&unk_2542E05B0);
  v17 = *(_QWORD *)(v15 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (!v18)
  {
    *(_QWORD *)(v15 + 16) = v19;
    return result;
  }
  __break(1u);
LABEL_16:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E05B0);
  result = sub_23B1C740C();
  __break(1u);
  return result;
}

unint64_t sub_23ADE5C5C(unint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _BYTE v22[72];

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_23ADE3FDC();
  }
  else
  {
    if (v8 > v7)
    {
      result = (unint64_t)sub_23ADE75A0();
      goto LABEL_14;
    }
    sub_23ADE9348();
  }
  v9 = *v3;
  sub_23B1C74A8();
  sub_23B14B63C((uint64_t)v22, v6);
  result = sub_23B1C74E4();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    sub_23AA93780(v11);
    sub_23B14CF98(v11, v6);
    v13 = v12;
    result = sub_23ADF2688(v11);
    if ((v13 & 1) != 0)
    {
LABEL_13:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E60);
      result = sub_23B1C740C();
      __break(1u);
    }
    else
    {
      v14 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        sub_23AA93780(v15);
        sub_23B14CF98(v15, v6);
        v17 = v16;
        result = sub_23ADF2688(v15);
        if ((v17 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v18 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * a2) = v6;
  v19 = *(_QWORD *)(v18 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
    __break(1u);
  else
    *(_QWORD *)(v18 + 16) = v21;
  return result;
}

uint64_t sub_23ADE5DF0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v4 = v3;
  v70 = a1;
  v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E3050);
  MEMORY[0x24BDAC7A8](v69);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v64 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v59 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v63 = (uint64_t)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v67 = (uint64_t)&v59 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v66 = (uint64_t)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v59 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v59 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v59 - v28;
  v30 = *(_QWORD *)(*v4 + 16);
  v31 = *(_QWORD *)(*v4 + 24);
  v60 = v19;
  v61 = v4;
  if (v31 <= v30 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_23ADE4294();
    }
    else
    {
      if (v31 > v30)
      {
        sub_23ADE7748();
        goto LABEL_24;
      }
      sub_23ADE95D4();
    }
    v68 = *v4;
    sub_23B1C74A8();
    sub_23AA8EFC8(v70, (uint64_t)v29, &qword_2542DDDB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = &qword_2542E1608;
      sub_23AA724E8((uint64_t)v29, (uint64_t)v13, &qword_2542E1608);
      sub_23B1C74B4();
      sub_23B14B2C8();
      v33 = (uint64_t)v13;
    }
    else
    {
      v32 = &qword_2542E1600;
      v34 = (uint64_t)v29;
      v35 = v67;
      sub_23AA724E8(v34, v67, &qword_2542E1600);
      sub_23B1C74B4();
      sub_23B14AE68();
      v33 = v35;
    }
    sub_23AA8A05C(v33, v32);
    v36 = sub_23B1C74E4();
    v37 = -1 << *(_BYTE *)(v68 + 32);
    a2 = v36 & ~v37;
    v67 = v68 + 56;
    if (((*(_QWORD *)(v68 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v65 = v24;
      v38 = ~v37;
      v39 = *(_QWORD *)(v19 + 72);
      v40 = v66;
      v62 = v27;
      do
      {
        sub_23AA8EFC8(*(_QWORD *)(v68 + 48) + v39 * a2, (uint64_t)v27, &qword_2542DDDB0);
        v43 = (uint64_t)&v8[*(int *)(v69 + 48)];
        sub_23AA8EFC8((uint64_t)v27, (uint64_t)v8, &qword_2542DDDB0);
        sub_23AA8EFC8(v70, v43, &qword_2542DDDB0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_23AA8EFC8((uint64_t)v8, v40, &qword_2542DDDB0);
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            v41 = v40;
            v42 = &qword_2542E1608;
            goto LABEL_14;
          }
          v44 = v64;
          sub_23AA724E8(v43, (uint64_t)v64, &qword_2542E1608);
          sub_23B028CFC(v66, v44);
          v46 = v45;
          v47 = (uint64_t)v44;
          v40 = v66;
          sub_23AA8A05C(v47, &qword_2542E1608);
          v48 = v40;
          v49 = &qword_2542E1608;
        }
        else
        {
          v50 = (uint64_t)v65;
          sub_23AA8EFC8((uint64_t)v8, (uint64_t)v65, &qword_2542DDDB0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v41 = v50;
            v42 = &qword_2542E1600;
LABEL_14:
            sub_23AA8A05C(v41, v42);
            sub_23AA8A05C((uint64_t)v8, (uint64_t *)&unk_2569E3050);
            goto LABEL_15;
          }
          v51 = v63;
          sub_23AA724E8(v43, v63, &qword_2542E1600);
          sub_23B028224(v50, v51);
          v46 = v52;
          v53 = v51;
          v40 = v66;
          sub_23AA8A05C(v53, &qword_2542E1600);
          v48 = v50;
          v49 = &qword_2542E1600;
          v27 = v62;
        }
        sub_23AA8A05C(v48, v49);
        sub_23AA8A05C((uint64_t)v8, &qword_2542DDDB0);
        if ((v46 & 1) != 0)
          goto LABEL_27;
LABEL_15:
        sub_23AA8A05C((uint64_t)v27, &qword_2542DDDB0);
        a2 = (a2 + 1) & v38;
      }
      while (((*(_QWORD *)(v67 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_24:
  v54 = *v61;
  *(_QWORD *)(*v61 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_23AA724E8(v70, *(_QWORD *)(v54 + 48) + *(_QWORD *)(v60 + 72) * a2, &qword_2542DDDB0);
  v56 = *(_QWORD *)(v54 + 16);
  v57 = __OFADD__(v56, 1);
  v58 = v56 + 1;
  if (v57)
  {
    __break(1u);
LABEL_27:
    sub_23AA8A05C((uint64_t)v27, &qword_2542DDDB0);
    result = sub_23B1C740C();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v54 + 16) = v58;
  }
  return result;
}

void sub_23ADE634C(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_23ADE44D8(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_23ADE69E0(a4);
      goto LABEL_14;
    }
    sub_23ADE97CC(v11, a4);
  }
  v12 = *v5;
  v13 = sub_23B1C6C44();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_23AA9F52C(0, a5);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_23B1C6C50();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_23B1C740C();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_23B1C6C50();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

uint64_t sub_23ADE64DC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v6 = v5;
  v10 = result;
  v11 = *(_QWORD *)(*v5 + 16);
  v12 = *(_QWORD *)(*v5 + 24);
  if (v12 > v11 && (a5 & 1) != 0)
    goto LABEL_18;
  if ((a5 & 1) != 0)
  {
    sub_23ADE4770();
  }
  else
  {
    if (v12 > v11)
    {
      result = (uint64_t)sub_23ADE7988();
      goto LABEL_18;
    }
    sub_23ADE9A40();
  }
  v13 = *v5;
  sub_23B1C74A8();
  sub_23B1C74D8();
  sub_23B1C64A0();
  result = sub_23B1C74E4();
  v14 = -1 << *(_BYTE *)(v13 + 32);
  a4 = result & ~v14;
  v15 = v13 + 56;
  if (((*(_QWORD *)(v13 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) != 0)
  {
    v16 = ~v14;
    v17 = *(_QWORD *)(v13 + 48);
    while (1)
    {
      v18 = (_QWORD *)(v17 + 24 * a4);
      if (*v18 == v10)
      {
        if (v18[1] == a2 && v18[2] == a3)
          break;
        result = sub_23B1C7388();
        if ((result & 1) != 0)
          break;
      }
      a4 = (a4 + 1) & v16;
      if (((*(_QWORD *)(v15 + ((a4 >> 3) & 0xFFFFFFFFFFFFF8)) >> a4) & 1) == 0)
        goto LABEL_18;
    }
    result = sub_23B1C740C();
    __break(1u);
  }
LABEL_18:
  v20 = *v6;
  *(_QWORD *)(*v6 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 24 * a4);
  *v21 = v10;
  v21[1] = a2;
  v21[2] = a3;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_23ADE6680()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1A60);
  v2 = *v0;
  v3 = sub_23B1C6EB4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)v17;
    LOBYTE(v17) = *(_BYTE *)(v17 + 8);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v19 = v18;
    *(_BYTE *)(v19 + 8) = v17;
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23ADE6824()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75A0);
  v2 = *v0;
  v3 = sub_23B1C6EB4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23ADE69D4()
{
  return sub_23ADE69E0((uint64_t *)&unk_2569E81B0);
}

id sub_23ADE69E0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23B1C6EB4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_23ADE6B80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E30);
  v2 = *v0;
  v3 = sub_23B1C6EB4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_28;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
      {
        v9 = v21 + 2;
        if (v21 + 2 >= v13)
          goto LABEL_28;
        v22 = *(_QWORD *)(v6 + 8 * v9);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(void **)v17;
    v19 = *(_QWORD *)(v17 + 8);
    LOBYTE(v17) = *(_BYTE *)(v17 + 16);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v20 = v18;
    *(_QWORD *)(v20 + 8) = v19;
    *(_BYTE *)(v20 + 16) = v17;
    result = v18;
  }
  v23 = v21 + 3;
  if (v23 >= v13)
    goto LABEL_28;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23ADE6D3C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_23B1C6EB4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23ADE6EC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DA0);
  v2 = *v0;
  v3 = sub_23B1C6EB4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(void **)v17;
    v19 = *(_BYTE *)(v17 + 9);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    v21 = *(unsigned __int8 *)(v17 + 8);
    *(_QWORD *)v20 = *(_QWORD *)v17;
    *(_BYTE *)(v20 + 8) = v21;
    *(_BYTE *)(v20 + 9) = v19;
    result = sub_23AA88218(v18, v21, v19);
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23ADE7088()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  char v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DA8);
  v2 = *v0;
  v3 = sub_23B1C6EB4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v13)
      goto LABEL_28;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_28;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
      {
        v9 = v23 + 2;
        if (v23 + 2 >= v13)
          goto LABEL_28;
        v24 = *(_QWORD *)(v6 + 8 * v9);
        if (!v24)
          break;
      }
    }
LABEL_27:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 32 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(void **)v17;
    v19 = *(void **)(v17 + 8);
    v20 = *(void **)(v17 + 16);
    v21 = *(_QWORD *)(v4 + 48) + v16;
    v22 = *(_BYTE *)(v17 + 24);
    *(_QWORD *)v21 = *(_QWORD *)v17;
    *(_QWORD *)(v21 + 8) = v19;
    *(_QWORD *)(v21 + 16) = v20;
    *(_BYTE *)(v21 + 24) = v22;
    result = sub_23AAFA44C(v18, v19, v20, v22);
  }
  v25 = v23 + 3;
  if (v25 >= v13)
    goto LABEL_28;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23ADE7248()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DB0);
  v2 = *v0;
  v3 = sub_23B1C6EB4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_28;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
      {
        v9 = v22 + 2;
        if (v22 + 2 >= v13)
          goto LABEL_28;
        v23 = *(_QWORD *)(v6 + 8 * v9);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 48 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 32);
    v19 = *(_WORD *)(v17 + 40);
    v20 = *(_QWORD *)(v4 + 48) + v16;
    v21 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v20 = *(_OWORD *)v17;
    *(_OWORD *)(v20 + 16) = v21;
    *(_QWORD *)(v20 + 32) = v18;
    *(_WORD *)(v20 + 40) = v19;
  }
  v24 = v22 + 3;
  if (v24 >= v13)
    goto LABEL_28;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23ADE73F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5D98);
  v2 = *v0;
  v3 = sub_23B1C6EB4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23ADE75A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E58);
  v2 = *v0;
  v3 = sub_23B1C6EB4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_23AA93780(v17);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23ADE7748()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5E68);
  v6 = *v0;
  v7 = sub_23B1C6EB4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_27:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 56);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v20 >= v16)
      goto LABEL_25;
    v21 = *(_QWORD *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v16)
        goto LABEL_25;
      v21 = *(_QWORD *)(v10 + 8 * v12);
      if (!v21)
      {
        v12 = v20 + 2;
        if (v20 + 2 >= v16)
          goto LABEL_25;
        v21 = *(_QWORD *)(v10 + 8 * v12);
        if (!v21)
          break;
      }
    }
LABEL_24:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    sub_23AA8EFC8(*(_QWORD *)(v6 + 48) + v19, (uint64_t)v5, &qword_2542DDDB0);
    result = (void *)sub_23AA724E8((uint64_t)v5, *(_QWORD *)(v8 + 48) + v19, &qword_2542DDDB0);
  }
  v22 = v20 + 3;
  if (v22 >= v16)
  {
LABEL_25:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_27;
  }
  v21 = *(_QWORD *)(v10 + 8 * v22);
  if (v21)
  {
    v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v16)
      goto LABEL_25;
    v21 = *(_QWORD *)(v10 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_24;
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_23ADE7970()
{
  return sub_23ADE69E0(&qword_2569E5DB8);
}

id sub_23ADE797C()
{
  return sub_23ADE69E0(&qword_2569E1C80);
}

void *sub_23ADE7988()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE770);
  v2 = *v0;
  v3 = sub_23B1C6EB4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 24 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v18 = *(_QWORD *)(v17 + 16);
    v19 = *(_QWORD *)(v4 + 48) + v16;
    *(_OWORD *)v19 = *(_OWORD *)v17;
    *(_QWORD *)(v19 + 16) = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23ADE7B44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E1A60);
  result = sub_23B1C6EC0();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_39:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v28 = (unint64_t)(v7 + 63) >> 6;
  v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v15 >= v28)
      goto LABEL_37;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v28)
        goto LABEL_37;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v28)
          goto LABEL_37;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 16 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(unsigned __int8 *)(v18 + 8);
    sub_23B1C74A8();
    if (v20)
    {
      sub_23B1C74B4();
      if (v20 == 1)
        sub_23B1C74D8();
    }
    else
    {
      sub_23B1C74B4();
      sub_23B1C74CC();
    }
    result = sub_23B1C74E4();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 16 * v11;
    *(_QWORD *)v12 = v19;
    *(_BYTE *)(v12 + 8) = v20;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_37:
    result = swift_release();
    v1 = v0;
    goto LABEL_39;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v28)
      goto LABEL_37;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23ADE7E2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E75A0);
  v3 = sub_23B1C6EC0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_23B1C74A8();
    swift_bridgeObjectRetain();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23ADE80D8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_23B1C6EC0();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v29 = v2;
  v30 = v4 + 56;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v4 + 56);
  v31 = (unint64_t)(v7 + 63) >> 6;
  v10 = v5 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v31)
      goto LABEL_33;
    v17 = *(_QWORD *)(v30 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v31)
        goto LABEL_33;
      v17 = *(_QWORD *)(v30 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v31)
          goto LABEL_33;
        v17 = *(_QWORD *)(v30 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(void **)(*(_QWORD *)(v4 + 48) + 8 * v15);
    sub_23B1C63E0();
    sub_23B1C74A8();
    v20 = v19;
    sub_23B1C64A0();
    v21 = sub_23B1C74E4();
    result = swift_bridgeObjectRelease();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v30 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v31)
      goto LABEL_33;
    v17 = *(_QWORD *)(v30 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23ADE83B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  int v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t i;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E30);
  v3 = sub_23B1C6EC0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_37:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v0;
  v31 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v32 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  for (i = v2; ; v2 = i)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v32)
      goto LABEL_35;
    v16 = *(_QWORD *)(v31 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v32)
        goto LABEL_35;
      v16 = *(_QWORD *)(v31 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v32)
          goto LABEL_35;
        v16 = *(_QWORD *)(v31 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 24 * v14;
    v19 = *(void **)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(unsigned __int8 *)(v18 + 16);
    sub_23B1C74A8();
    sub_23B1C63E0();
    v22 = v19;
    sub_23B1C64A0();
    swift_bridgeObjectRelease();
    sub_23B1C74C0();
    if (v21 != 1)
      sub_23B1C74B4();
    result = sub_23B1C74E4();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 24 * v11;
    *(_QWORD *)v12 = v22;
    *(_QWORD *)(v12 + 8) = v20;
    *(_BYTE *)(v12 + 16) = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v32)
  {
LABEL_35:
    result = swift_release_n();
    v1 = v30;
    goto LABEL_37;
  }
  v16 = *(_QWORD *)(v31 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v32)
      goto LABEL_35;
    v16 = *(_QWORD *)(v31 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23ADE86D4(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t *v28;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = sub_23B1C6EC0();
  v6 = result;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v28 = v3;
  v7 = 0;
  v8 = v4 + 56;
  v9 = 1 << *(_BYTE *)(v4 + 32);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_33;
      v18 = *(_QWORD *)(v8 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_33;
        v18 = *(_QWORD *)(v8 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_23:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v16);
    result = sub_23B1C749C();
    v21 = -1 << *(_BYTE *)(v6 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    result = swift_release();
    v3 = v28;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v12)
      goto LABEL_33;
    v18 = *(_QWORD *)(v8 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_23ADE8930()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int v15;
  int v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DA0);
  v3 = sub_23B1C6EC0();
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_23:
    result = swift_release();
    *v1 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_6;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8)
      goto LABEL_22;
    v18 = *(_QWORD *)(v5 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        goto LABEL_22;
      v18 = *(_QWORD *)(v5 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          goto LABEL_22;
        v18 = *(_QWORD *)(v5 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_21:
    v7 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_6:
    v13 = *(_QWORD *)(v2 + 48) + 16 * v12;
    v14 = *(id *)v13;
    v15 = *(unsigned __int8 *)(v13 + 8);
    v16 = *(unsigned __int8 *)(v13 + 9);
    sub_23AA88218(*(id *)v13, *(unsigned __int8 *)(v13 + 8), *(_BYTE *)(v13 + 9));
    result = sub_23B18E4C0(v14, v15 | (v16 << 8), v3);
  }
  v19 = v17 + 3;
  if (v19 >= v8)
  {
LABEL_22:
    swift_release();
    goto LABEL_23;
  }
  v18 = *(_QWORD *)(v5 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      goto LABEL_22;
    v18 = *(_QWORD *)(v5 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23ADE8AF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  char v32[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DA8);
  v3 = sub_23B1C6EC0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v30 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v31)
        goto LABEL_33;
      v16 = *(_QWORD *)(v30 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v31)
          goto LABEL_33;
        v16 = *(_QWORD *)(v30 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 32 * v14;
    v19 = *(void **)v18;
    v20 = *(void **)(v18 + 8);
    v21 = *(void **)(v18 + 16);
    v22 = *(_BYTE *)(v18 + 24);
    sub_23B1C74A8();
    sub_23AAFA44C(v19, v20, v21, v22);
    sub_23AC4BB9C((uint64_t)v32, (uint64_t)v19, (uint64_t)v20, (uint64_t)v21, v22);
    result = sub_23B1C74E4();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 32 * v11;
    *(_QWORD *)v12 = v19;
    *(_QWORD *)(v12 + 8) = v20;
    *(_QWORD *)(v12 + 16) = v21;
    *(_BYTE *)(v12 + 24) = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v30 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v31)
      goto LABEL_33;
    v16 = *(_QWORD *)(v30 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23ADE8DDC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  _BYTE v24[48];

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DB0);
  result = sub_23B1C6EC0();
  v3 = result;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 0;
  v5 = v1 + 56;
  v6 = 1 << *(_BYTE *)(v1 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v1 + 56);
  v23 = (unint64_t)(v6 + 63) >> 6;
  v9 = result + 56;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_24;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v23)
      goto LABEL_33;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v23)
        goto LABEL_33;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v23)
          goto LABEL_33;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_24:
    sub_23AA724E8(*(_QWORD *)(v1 + 48) + 48 * v12, (uint64_t)v24, (uint64_t *)&unk_2542E05B0);
    sub_23B1C74A8();
    sub_23AC4BE5C();
    result = sub_23B1C74E4();
    v16 = -1 << *(_BYTE *)(v3 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v9 + 8 * (v17 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v9 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v19 = 0;
      v20 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v20 && (v19 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v21 = v18 == v20;
        if (v18 == v20)
          v18 = 0;
        v19 |= v21;
        v22 = *(_QWORD *)(v9 + 8 * v18);
      }
      while (v22 == -1);
      v10 = __clz(__rbit64(~v22)) + (v18 << 6);
    }
    *(_QWORD *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    result = sub_23AA724E8((uint64_t)v24, *(_QWORD *)(v3 + 48) + 48 * v10, (uint64_t *)&unk_2542E05B0);
    ++*(_QWORD *)(v3 + 16);
  }
  v15 = v13 + 3;
  if (v15 >= v23)
  {
LABEL_33:
    result = swift_release();
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v23)
      goto LABEL_33;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23ADE908C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5D98);
  v3 = sub_23B1C6EC0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v26 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v26)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v26)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v26)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_23B1C74A8();
    sub_23B1C63E0();
    swift_retain();
    sub_23B1C64A0();
    swift_bridgeObjectRelease();
    result = sub_23B1C74E4();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v9 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v26)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v26)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23ADE9348()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E58);
  v3 = sub_23B1C6EC0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_23B1C74A8();
    sub_23AA93780(v19);
    sub_23B14B63C((uint64_t)v27, v19);
    result = sub_23B1C74E4();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23ADE95D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5E68);
  v7 = sub_23B1C6EC0();
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_24:
    *v1 = v7;
    return result;
  }
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v9 = v6 + 56;
  v10 = -1;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  v11 = v10 & *(_QWORD *)(v6 + 56);
  v12 = (unint64_t)(v8 + 63) >> 6;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_6;
    }
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v12)
      goto LABEL_22;
    v18 = *(_QWORD *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_22;
      v18 = *(_QWORD *)(v9 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_22;
        v18 = *(_QWORD *)(v9 + 8 * v14);
        if (!v18)
          break;
      }
    }
LABEL_21:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_6:
    sub_23AA8EFC8(*(_QWORD *)(v6 + 48) + *(_QWORD *)(v3 + 72) * v16, (uint64_t)v5, &qword_2542DDDB0);
    result = sub_23B18E620((uint64_t)v5, v7);
  }
  v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_22:
    result = swift_release_n();
    goto LABEL_24;
  }
  v18 = *(_QWORD *)(v9 + 8 * v19);
  if (v18)
  {
    v14 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v14 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v14 >= v12)
      goto LABEL_22;
    v18 = *(_QWORD *)(v9 + 8 * v14);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23ADE97CC(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_23B1C6EC0();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_23B1C6C44();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23ADE9A40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE770);
  v2 = sub_23B1C6EC0();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v28 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v29 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v9;
    if (!v15)
    {
      v9 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_33;
      v15 = *(_QWORD *)(v28 + 8 * v9);
      if (!v15)
      {
        v9 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v9);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 24 * v13);
    v18 = *v17;
    v19 = v17[1];
    v20 = v17[2];
    sub_23B1C74A8();
    sub_23B1C74D8();
    swift_bridgeObjectRetain();
    sub_23B1C64A0();
    result = sub_23B1C74E4();
    v21 = -1 << *(_BYTE *)(v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v7 + 8 * (v22 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v7 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v7 + 8 * v23);
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    v11 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 24 * v10);
    *v11 = v18;
    v11[1] = v19;
    v11[2] = v20;
    ++*(_QWORD *)(v3 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v9 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v9);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_23ADE9D20(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v4 = v2;
  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v6 = *(_BYTE *)(isStackAllocationSafe + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2)
      swift_willThrow();
    else
      return v9;
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v4 = a2((char *)v10, v7, v5);
    MEMORY[0x23B8614BC](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_23ADE9E7C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t *v18;

  v18 = (unint64_t *)result;
  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_17;
    }
    v13 = __OFADD__(v5++, 1);
    if (v13)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v5 >= v10)
      return sub_23B1907B8(v18, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    if (!v14)
      break;
LABEL_16:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_17:
    if (*(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v12) == 1)
    {
      swift_bridgeObjectRetain();
      v16 = sub_23B1C64AC();
      result = swift_bridgeObjectRelease();
      if (v16 >= 3)
      {
        *(unint64_t *)((char *)v18 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        v13 = __OFADD__(v4++, 1);
        if (v13)
          goto LABEL_29;
      }
    }
  }
  v15 = v5 + 1;
  if (v5 + 1 >= v10)
    return sub_23B1907B8(v18, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v5 + 2;
  if (v5 + 2 >= v10)
    return sub_23B1907B8(v18, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v5 + 3;
  if (v5 + 3 >= v10)
    return sub_23B1907B8(v18, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v5 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return sub_23B1907B8(v18, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_16;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23ADEA03C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t *v19;

  v19 = (unint64_t *)result;
  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v13 = v12 | (v5 << 6);
LABEL_21:
    if (*(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v13) <= 1uLL)
    {
      swift_bridgeObjectRetain();
      v17 = sub_23B1C64AC();
      result = swift_bridgeObjectRelease();
      if (v17 > 2)
        continue;
    }
    *(unint64_t *)((char *)v19 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    if (__OFADD__(v4++, 1))
      goto LABEL_27;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v14 >= v10)
    return sub_23B1907B8(v19, a2, v4, a3);
  v15 = *(_QWORD *)(v6 + 8 * v14);
  ++v5;
  if (v15)
    goto LABEL_20;
  v5 = v14 + 1;
  if (v14 + 1 >= v10)
    return sub_23B1907B8(v19, a2, v4, a3);
  v15 = *(_QWORD *)(v6 + 8 * v5);
  if (v15)
    goto LABEL_20;
  v5 = v14 + 2;
  if (v14 + 2 >= v10)
    return sub_23B1907B8(v19, a2, v4, a3);
  v15 = *(_QWORD *)(v6 + 8 * v5);
  if (v15)
  {
LABEL_20:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_21;
  }
  v16 = v14 + 3;
  if (v16 >= v10)
    return sub_23B1907B8(v19, a2, v4, a3);
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v5 >= v10)
      return sub_23B1907B8(v19, a2, v4, a3);
    v15 = *(_QWORD *)(v6 + 8 * v5);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23ADEA200(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_23AEA6AB0(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_23ADEA268(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_23ADEA268(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int8x8_t v16;
  unint64_t v17;
  uint64_t v18;
  const double *v19;
  int64x2_t v20;
  unint64_t v21;
  int64x2_t v22;
  const double *v23;
  unsigned __int128 v24;
  unsigned __int128 v25;
  int8x16_t v26;
  uint64_t v27;
  unint64_t v28;
  int8x8_t *v29;
  int8x8_t v30;
  int8x8_t v31;
  uint64_t v32;
  unint64_t v33;
  int8x8_t v34;
  unint64_t v35;
  uint64_t v36;
  const double *v37;
  int64x2_t v38;
  unint64_t v39;
  int64x2_t v40;
  const double *v41;
  unsigned __int128 v42;
  unsigned __int128 v43;
  int8x16_t v44;
  uint64_t v45;
  unint64_t v46;
  int8x8_t *v47;
  int8x8_t v48;
  int8x8_t v49;
  uint64_t v50;
  unint64_t v51;
  int8x8_t v52;
  unint64_t v53;
  uint64_t v54;
  const double *v55;
  int64x2_t v56;
  unint64_t v57;
  int64x2_t v58;
  const double *v59;
  unsigned __int128 v60;
  unsigned __int128 v61;
  int8x16_t v62;
  uint64_t v63;
  unint64_t v64;
  int8x8_t *v65;
  int8x8_t v66;
  int8x8_t v67;
  unint64_t v68;
  int8x8_t v69;
  unint64_t v70;
  uint64_t v71;
  const double *v72;
  int64x2_t v73;
  unint64_t v74;
  int64x2_t v75;
  const double *v76;
  unsigned __int128 v77;
  unsigned __int128 v78;
  int8x16_t v79;
  uint64_t v80;
  unint64_t v81;
  int8x8_t *v82;
  int8x8_t v83;
  int8x8_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  int64x2_t v104;
  unint64_t v105;
  const double *v106;
  int64x2_t v107;
  const double *v108;
  unsigned __int128 v109;
  unsigned __int128 v110;
  int8x16_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  int8x8_t v117;
  uint64_t v118;
  uint64_t *v119;
  int64x2_t v120;
  uint64_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int8x16_t v125;
  uint64_t v126;
  unint64_t v127;
  int8x8_t *v128;
  int8x8_t v129;
  int8x8_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  char *v136;
  char *v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  BOOL v149;
  unint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  BOOL v159;
  uint64_t v160;
  char v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  BOOL v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  unint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  unint64_t v183;
  char *v184;
  uint64_t v185;
  unint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  unint64_t v191;
  uint64_t *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *__dst;
  uint64_t v198;

  v2 = a1;
  v3 = a1[1];
  result = sub_23B1C72F8();
  if (result < v3)
  {
    v194 = result;
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
    {
LABEL_216:
      result = sub_23B1C7040();
      __break(1u);
      return result;
    }
    v198 = v1;
    if (v3 < 2)
    {
      v8 = MEMORY[0x24BEE4AF8];
      __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if (v3 != 1)
      {
        v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_174:
        v184 = v11;
        v193 = v8;
        if (v12 >= 2)
        {
          v185 = *v2;
          do
          {
            v186 = v12 - 2;
            if (v12 < 2)
              goto LABEL_203;
            if (!v185)
              goto LABEL_215;
            v187 = v184;
            v188 = *(_QWORD *)&v184[16 * v186 + 32];
            v189 = *(_QWORD *)&v184[16 * v12 + 24];
            sub_23ADEAEE0((char *)(v185 + 24 * v188), (char *)(v185 + 24 * *(_QWORD *)&v184[16 * v12 + 16]), (char *)(v185 + 24 * v189), __dst);
            if (v198)
              break;
            if (v189 < v188)
              goto LABEL_204;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v187 = sub_23AEA6A88((uint64_t)v187);
            if (v186 >= *((_QWORD *)v187 + 2))
              goto LABEL_205;
            v190 = &v187[16 * v186 + 32];
            *(_QWORD *)v190 = v188;
            *((_QWORD *)v190 + 1) = v189;
            v191 = *((_QWORD *)v187 + 2);
            if (v12 > v191)
              goto LABEL_206;
            memmove(&v187[16 * v12 + 16], &v187[16 * v12 + 32], 16 * (v191 - v12));
            v184 = v187;
            *((_QWORD *)v187 + 2) = v191 - 1;
            v12 = v191 - 1;
          }
          while (v191 > 2);
        }
LABEL_171:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v193 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      v193 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v6 = v5 >> 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5860);
      v7 = sub_23B1C6764();
      *(_QWORD *)(v7 + 16) = v6;
      v193 = v7;
      __dst = (char *)(v7 + 32);
    }
    v9 = 0;
    v192 = v2;
    v10 = *v2;
    v11 = (char *)MEMORY[0x24BEE4AF8];
    v195 = v3;
    while (1)
    {
      v13 = v9 + 1;
      if (v9 + 1 >= v3)
        goto LABEL_82;
      v14 = *(_QWORD *)(v10 + 24 * v13 + 16);
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        if (v15 >= 5)
        {
          v18 = *(_QWORD *)(v14 + 16) & 3;
          if ((v15 & 3) == 0)
            v18 = 4;
          v17 = v15 - v18;
          v19 = (const double *)(v14 + 96);
          v20 = 0uLL;
          v21 = v17;
          v22 = 0uLL;
          do
          {
            v23 = v19 - 8;
            v24 = (unsigned __int128)vld4q_f64(v23);
            v25 = (unsigned __int128)vld4q_f64(v19);
            v20 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v24, v20), (int8x16_t)v24, (int8x16_t)v20);
            v22 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v25, v22), (int8x16_t)v25, (int8x16_t)v22);
            v19 += 16;
            v21 -= 4;
          }
          while (v21);
          v26 = vbslq_s8((int8x16_t)vcgtq_s64(v20, v22), (int8x16_t)v20, (int8x16_t)v22);
          v27 = vextq_s8(v26, v26, 8uLL).u64[0];
          v16 = vbsl_s8((int8x8_t)vcgtd_s64(v26.i64[0], v27), *(int8x8_t *)v26.i8, (int8x8_t)v27);
        }
        else
        {
          v16 = 0;
          v17 = 0;
        }
        v28 = v15 - v17;
        v29 = (int8x8_t *)(v14 + 32 * v17 + 32);
        do
        {
          v31 = *v29;
          v29 += 4;
          v30 = v31;
          if (*(_QWORD *)&v31 > *(_QWORD *)&v16)
            v16 = v30;
          --v28;
        }
        while (v28);
      }
      else
      {
        v16 = 0;
      }
      v32 = *(_QWORD *)(v10 + 24 * v9 + 16);
      v33 = *(_QWORD *)(v32 + 16);
      if (v33)
      {
        if (v33 >= 5)
        {
          v36 = *(_QWORD *)(v32 + 16) & 3;
          if ((v33 & 3) == 0)
            v36 = 4;
          v35 = v33 - v36;
          v37 = (const double *)(v32 + 96);
          v38 = 0uLL;
          v39 = v35;
          v40 = 0uLL;
          do
          {
            v41 = v37 - 8;
            v42 = (unsigned __int128)vld4q_f64(v41);
            v43 = (unsigned __int128)vld4q_f64(v37);
            v38 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v42, v38), (int8x16_t)v42, (int8x16_t)v38);
            v40 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v43, v40), (int8x16_t)v43, (int8x16_t)v40);
            v37 += 16;
            v39 -= 4;
          }
          while (v39);
          v44 = vbslq_s8((int8x16_t)vcgtq_s64(v38, v40), (int8x16_t)v38, (int8x16_t)v40);
          v45 = vextq_s8(v44, v44, 8uLL).u64[0];
          v34 = vbsl_s8((int8x8_t)vcgtd_s64(v44.i64[0], v45), *(int8x8_t *)v44.i8, (int8x8_t)v45);
        }
        else
        {
          v34 = 0;
          v35 = 0;
        }
        v46 = v33 - v35;
        v47 = (int8x8_t *)(v32 + 32 * v35 + 32);
        do
        {
          v49 = *v47;
          v47 += 4;
          v48 = v49;
          if (*(_QWORD *)&v49 > *(_QWORD *)&v34)
            v34 = v48;
          --v46;
        }
        while (v46);
      }
      else
      {
        v34 = 0;
      }
      v13 = v9 + 2;
      if (v9 + 2 >= v3)
        break;
      do
      {
        v50 = *(_QWORD *)(v10 + 24 * v13 + 16);
        v51 = *(_QWORD *)(v50 + 16);
        if (v51)
        {
          if (v51 >= 5)
          {
            v54 = *(_QWORD *)(v50 + 16) & 3;
            if ((v51 & 3) == 0)
              v54 = 4;
            v53 = v51 - v54;
            v55 = (const double *)(v50 + 96);
            v56 = 0uLL;
            v57 = v53;
            v58 = 0uLL;
            do
            {
              v59 = v55 - 8;
              v60 = (unsigned __int128)vld4q_f64(v59);
              v61 = (unsigned __int128)vld4q_f64(v55);
              v56 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v60, v56), (int8x16_t)v60, (int8x16_t)v56);
              v58 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v61, v58), (int8x16_t)v61, (int8x16_t)v58);
              v55 += 16;
              v57 -= 4;
            }
            while (v57);
            v62 = vbslq_s8((int8x16_t)vcgtq_s64(v56, v58), (int8x16_t)v56, (int8x16_t)v58);
            v63 = vextq_s8(v62, v62, 8uLL).u64[0];
            v52 = vbsl_s8((int8x8_t)vcgtd_s64(v62.i64[0], v63), *(int8x8_t *)v62.i8, (int8x8_t)v63);
          }
          else
          {
            v52 = 0;
            v53 = 0;
          }
          v64 = v51 - v53;
          v65 = (int8x8_t *)(v50 + 32 * v53 + 32);
          do
          {
            v67 = *v65;
            v65 += 4;
            v66 = v67;
            if (*(_QWORD *)&v67 > *(_QWORD *)&v52)
              v52 = v66;
            --v64;
          }
          while (v64);
        }
        else
        {
          v52 = 0;
        }
        v68 = *(_QWORD *)(v14 + 16);
        if (v68)
        {
          if (v68 >= 5)
          {
            v71 = *(_QWORD *)(v14 + 16) & 3;
            if ((v68 & 3) == 0)
              v71 = 4;
            v70 = v68 - v71;
            v72 = (const double *)(v14 + 96);
            v73 = 0uLL;
            v74 = v70;
            v75 = 0uLL;
            do
            {
              v76 = v72 - 8;
              v77 = (unsigned __int128)vld4q_f64(v76);
              v78 = (unsigned __int128)vld4q_f64(v72);
              v73 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v77, v73), (int8x16_t)v77, (int8x16_t)v73);
              v75 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v78, v75), (int8x16_t)v78, (int8x16_t)v75);
              v72 += 16;
              v74 -= 4;
            }
            while (v74);
            v79 = vbslq_s8((int8x16_t)vcgtq_s64(v73, v75), (int8x16_t)v73, (int8x16_t)v75);
            v80 = vextq_s8(v79, v79, 8uLL).u64[0];
            v69 = vbsl_s8((int8x8_t)vcgtd_s64(v79.i64[0], v80), *(int8x8_t *)v79.i8, (int8x8_t)v80);
          }
          else
          {
            v69 = 0;
            v70 = 0;
          }
          v81 = v68 - v70;
          v82 = (int8x8_t *)(v14 + 32 * v70 + 32);
          do
          {
            v84 = *v82;
            v82 += 4;
            v83 = v84;
            if (*(_QWORD *)&v84 > *(_QWORD *)&v69)
              v69 = v83;
            --v81;
          }
          while (v81);
          if (*(_QWORD *)&v34 < *(_QWORD *)&v16 == *(_QWORD *)&v69 >= *(_QWORD *)&v52)
            goto LABEL_73;
        }
        else if (*(_QWORD *)&v34 < *(_QWORD *)&v16 == *(_QWORD *)&v52 < 1)
        {
          goto LABEL_73;
        }
        ++v13;
        v14 = v50;
      }
      while (v13 != v3);
      v13 = v3;
      if (*(_QWORD *)&v34 < *(_QWORD *)&v16)
        goto LABEL_74;
LABEL_82:
      if (v13 >= v3)
        goto LABEL_124;
      if (__OFSUB__(v13, v9))
        goto LABEL_207;
      if (v13 - v9 >= v194)
        goto LABEL_124;
      v94 = v9 + v194;
      if (__OFADD__(v9, v194))
        goto LABEL_210;
      if (v94 >= v3)
        v94 = v3;
      if (v94 < v9)
      {
LABEL_211:
        __break(1u);
LABEL_212:
        __break(1u);
LABEL_213:
        __break(1u);
LABEL_214:
        __break(1u);
LABEL_215:
        __break(1u);
        goto LABEL_216;
      }
      if (v13 != v94)
      {
        while (1)
        {
          v95 = *(_QWORD *)(v10 + 24 * v13 + 16);
          v96 = v13;
          do
          {
            v97 = (uint64_t *)(v10 + 24 * v96);
            v98 = *(v97 - 1);
            v99 = *(_QWORD *)(v95 + 16);
            if (!v99)
            {
              v102 = *(_QWORD *)(v98 + 16);
              if (!v102)
                break;
              v100 = 0;
LABEL_108:
              if (v102 >= 4)
              {
                v118 = v102 & 0x7FFFFFFFFFFFFFFCLL;
                v119 = (uint64_t *)(v98 + 128);
                v120 = 0uLL;
                v121 = v102 & 0x7FFFFFFFFFFFFFFCLL;
                v122 = 0uLL;
                do
                {
                  v123.i64[0] = *(v119 - 12);
                  v123.i64[1] = *(v119 - 8);
                  v124.i64[0] = *(v119 - 4);
                  v124.i64[1] = *v119;
                  v120 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v123, v120), (int8x16_t)v123, (int8x16_t)v120);
                  v122 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v124, v122), (int8x16_t)v124, (int8x16_t)v122);
                  v119 += 16;
                  v121 -= 4;
                }
                while (v121);
                v125 = vbslq_s8((int8x16_t)vcgtq_s64(v120, v122), (int8x16_t)v120, (int8x16_t)v122);
                v126 = vextq_s8(v125, v125, 8uLL).u64[0];
                v117 = vbsl_s8((int8x8_t)vcgtd_s64(v125.i64[0], v126), *(int8x8_t *)v125.i8, (int8x8_t)v126);
                if (v102 != v118)
                  goto LABEL_113;
              }
              else
              {
                v117 = 0;
                v118 = 0;
LABEL_113:
                v127 = v102 - v118;
                v128 = (int8x8_t *)(v98 + 32 * v118 + 32);
                do
                {
                  v130 = *v128;
                  v128 += 4;
                  v129 = v130;
                  if (*(_QWORD *)&v130 > *(_QWORD *)&v117)
                    v117 = v129;
                  --v127;
                }
                while (v127);
              }
              if (*(_QWORD *)&v117 >= v100)
                break;
              goto LABEL_120;
            }
            if (v99 >= 5)
            {
              v103 = *(_QWORD *)(v95 + 16) & 3;
              if ((v99 & 3) == 0)
                v103 = 4;
              v101 = v99 - v103;
              v104 = 0uLL;
              v105 = v99 - v103;
              v106 = (const double *)(v95 + 96);
              v107 = 0uLL;
              do
              {
                v108 = v106 - 8;
                v109 = (unsigned __int128)vld4q_f64(v108);
                v110 = (unsigned __int128)vld4q_f64(v106);
                v104 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v109, v104), (int8x16_t)v109, (int8x16_t)v104);
                v107 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v110, v107), (int8x16_t)v110, (int8x16_t)v107);
                v106 += 16;
                v105 -= 4;
              }
              while (v105);
              v111 = vbslq_s8((int8x16_t)vcgtq_s64(v104, v107), (int8x16_t)v104, (int8x16_t)v107);
              v112 = vextq_s8(v111, v111, 8uLL).u64[0];
              v100 = (uint64_t)vbsl_s8((int8x8_t)vcgtd_s64(v111.i64[0], v112), *(int8x8_t *)v111.i8, (int8x8_t)v112);
            }
            else
            {
              v100 = 0;
              v101 = 0;
            }
            v113 = v99 - v101;
            v114 = (uint64_t *)(v95 + 32 + 32 * v101);
            do
            {
              v116 = *v114;
              v114 += 4;
              v115 = v116;
              if (v116 > v100)
                v100 = v115;
              --v113;
            }
            while (v113);
            v102 = *(_QWORD *)(v98 + 16);
            if (v102)
              goto LABEL_108;
            if (v100 <= 0)
              break;
LABEL_120:
            if (!v10)
              goto LABEL_212;
            --v96;
            v131 = v97 - 3;
            v132 = *v97;
            v133 = v97[1];
            *(_OWORD *)v97 = *(_OWORD *)(v97 - 3);
            v97[2] = *(v97 - 1);
            *v131 = v132;
            v131[1] = v133;
            *(v97 - 1) = v95;
          }
          while (v96 != v9);
          if (++v13 == v94)
          {
            v13 = v94;
            break;
          }
        }
      }
LABEL_124:
      if (v13 < v9)
        goto LABEL_202;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_23AEA671C(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
      v135 = *((_QWORD *)v11 + 2);
      v134 = *((_QWORD *)v11 + 3);
      v12 = v135 + 1;
      if (v135 >= v134 >> 1)
        v11 = sub_23AEA671C((char *)(v134 > 1), v135 + 1, 1, v11);
      *((_QWORD *)v11 + 2) = v12;
      v136 = v11 + 32;
      v137 = &v11[16 * v135 + 32];
      *(_QWORD *)v137 = v9;
      *((_QWORD *)v137 + 1) = v13;
      v196 = v13;
      if (v135)
      {
        while (1)
        {
          v138 = v12 - 1;
          if (v12 >= 4)
          {
            v143 = &v136[16 * v12];
            v144 = *((_QWORD *)v143 - 8);
            v145 = *((_QWORD *)v143 - 7);
            v149 = __OFSUB__(v145, v144);
            v146 = v145 - v144;
            if (v149)
              goto LABEL_191;
            v148 = *((_QWORD *)v143 - 6);
            v147 = *((_QWORD *)v143 - 5);
            v149 = __OFSUB__(v147, v148);
            v141 = v147 - v148;
            v142 = v149;
            if (v149)
              goto LABEL_192;
            v150 = v12 - 2;
            v151 = &v136[16 * v12 - 32];
            v153 = *(_QWORD *)v151;
            v152 = *((_QWORD *)v151 + 1);
            v149 = __OFSUB__(v152, v153);
            v154 = v152 - v153;
            if (v149)
              goto LABEL_194;
            v149 = __OFADD__(v141, v154);
            v155 = v141 + v154;
            if (v149)
              goto LABEL_197;
            if (v155 >= v146)
            {
              v173 = &v136[16 * v138];
              v175 = *(_QWORD *)v173;
              v174 = *((_QWORD *)v173 + 1);
              v149 = __OFSUB__(v174, v175);
              v176 = v174 - v175;
              if (v149)
                goto LABEL_201;
              v166 = v141 < v176;
              goto LABEL_161;
            }
          }
          else
          {
            if (v12 != 3)
            {
              v167 = *((_QWORD *)v11 + 4);
              v168 = *((_QWORD *)v11 + 5);
              v149 = __OFSUB__(v168, v167);
              v160 = v168 - v167;
              v161 = v149;
              goto LABEL_155;
            }
            v140 = *((_QWORD *)v11 + 4);
            v139 = *((_QWORD *)v11 + 5);
            v149 = __OFSUB__(v139, v140);
            v141 = v139 - v140;
            v142 = v149;
          }
          if ((v142 & 1) != 0)
            goto LABEL_193;
          v150 = v12 - 2;
          v156 = &v136[16 * v12 - 32];
          v158 = *(_QWORD *)v156;
          v157 = *((_QWORD *)v156 + 1);
          v159 = __OFSUB__(v157, v158);
          v160 = v157 - v158;
          v161 = v159;
          if (v159)
            goto LABEL_196;
          v162 = &v136[16 * v138];
          v164 = *(_QWORD *)v162;
          v163 = *((_QWORD *)v162 + 1);
          v149 = __OFSUB__(v163, v164);
          v165 = v163 - v164;
          if (v149)
            goto LABEL_199;
          if (__OFADD__(v160, v165))
            goto LABEL_200;
          if (v160 + v165 >= v141)
          {
            v166 = v141 < v165;
LABEL_161:
            if (v166)
              v138 = v150;
            goto LABEL_163;
          }
LABEL_155:
          if ((v161 & 1) != 0)
            goto LABEL_195;
          v169 = &v136[16 * v138];
          v171 = *(_QWORD *)v169;
          v170 = *((_QWORD *)v169 + 1);
          v149 = __OFSUB__(v170, v171);
          v172 = v170 - v171;
          if (v149)
            goto LABEL_198;
          if (v172 < v160)
            goto LABEL_15;
LABEL_163:
          v177 = v11;
          v178 = v138 - 1;
          if (v138 - 1 >= v12)
          {
            __break(1u);
LABEL_188:
            __break(1u);
LABEL_189:
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
LABEL_198:
            __break(1u);
LABEL_199:
            __break(1u);
LABEL_200:
            __break(1u);
LABEL_201:
            __break(1u);
LABEL_202:
            __break(1u);
LABEL_203:
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            __break(1u);
LABEL_210:
            __break(1u);
            goto LABEL_211;
          }
          if (!v10)
            goto LABEL_213;
          v179 = &v136[16 * v178];
          v180 = *(_QWORD *)v179;
          v181 = &v136[16 * v138];
          v182 = *((_QWORD *)v181 + 1);
          sub_23ADEAEE0((char *)(v10 + 24 * *(_QWORD *)v179), (char *)(v10 + 24 * *(_QWORD *)v181), (char *)(v10 + 24 * v182), __dst);
          if (v198)
            goto LABEL_171;
          if (v182 < v180)
            goto LABEL_188;
          if (v138 > *((_QWORD *)v177 + 2))
            goto LABEL_189;
          *(_QWORD *)v179 = v180;
          *(_QWORD *)&v136[16 * v178 + 8] = v182;
          v183 = *((_QWORD *)v177 + 2);
          if (v138 >= v183)
            goto LABEL_190;
          v11 = v177;
          v12 = v183 - 1;
          memmove(&v136[16 * v138], v181 + 16, 16 * (v183 - 1 - v138));
          *((_QWORD *)v177 + 2) = v183 - 1;
          if (v183 <= 2)
            goto LABEL_15;
        }
      }
      v12 = 1;
LABEL_15:
      v3 = v195;
      v9 = v196;
      if (v196 >= v195)
      {
        v2 = v192;
        v8 = v193;
        goto LABEL_174;
      }
    }
LABEL_73:
    if (*(_QWORD *)&v34 >= *(_QWORD *)&v16)
      goto LABEL_82;
LABEL_74:
    if (v13 < v9)
      goto LABEL_209;
    if (v9 < v13)
    {
      v85 = 24 * v13;
      v86 = 24 * v9;
      v87 = v13;
      v88 = v9;
      while (1)
      {
        if (v88 != --v87)
        {
          if (!v10)
            goto LABEL_214;
          v89 = v10 + v86;
          v90 = v10 + v85;
          v91 = *(_QWORD *)(v10 + v86);
          v92 = *(_OWORD *)(v10 + v86 + 8);
          v93 = *(_OWORD *)(v10 + v85 - 24);
          *(_QWORD *)(v89 + 16) = *(_QWORD *)(v10 + v85 - 8);
          *(_OWORD *)v89 = v93;
          *(_QWORD *)(v90 - 24) = v91;
          *(_OWORD *)(v90 - 16) = v92;
        }
        ++v88;
        v85 -= 24;
        v86 += 24;
        if (v88 >= v87)
          goto LABEL_82;
      }
    }
    goto LABEL_82;
  }
  if (v3 < 0)
    goto LABEL_208;
  if (v3)
    return sub_23ADEACF8(0, v3, 1, v2);
  return result;
}

uint64_t sub_23ADEACF8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64x2_t v14;
  unint64_t v15;
  const double *v16;
  int64x2_t v17;
  const double *v18;
  unsigned __int128 v19;
  unsigned __int128 v20;
  int8x16_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int8x8_t v27;
  uint64_t v28;
  uint64_t *v29;
  int64x2_t v30;
  uint64_t v31;
  int64x2_t v32;
  int64x2_t v33;
  int64x2_t v34;
  int8x16_t v35;
  uint64_t v36;
  unint64_t v37;
  int8x8_t *v38;
  int8x8_t v39;
  int8x8_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;

  if (a3 != a2)
  {
    v4 = *a4;
LABEL_5:
    v5 = *(_QWORD *)(v4 + 24 * a3 + 16);
    v6 = a3;
    while (1)
    {
      v7 = (uint64_t *)(v4 + 24 * v6);
      v8 = *(v7 - 1);
      v9 = *(_QWORD *)(v5 + 16);
      if (!v9)
        break;
      if (v9 >= 5)
      {
        v13 = *(_QWORD *)(v5 + 16) & 3;
        if ((v9 & 3) == 0)
          v13 = 4;
        v11 = v9 - v13;
        v14 = 0uLL;
        v15 = v9 - v13;
        v16 = (const double *)(v5 + 96);
        v17 = 0uLL;
        do
        {
          v18 = v16 - 8;
          v19 = (unsigned __int128)vld4q_f64(v18);
          v20 = (unsigned __int128)vld4q_f64(v16);
          v14 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v19, v14), (int8x16_t)v19, (int8x16_t)v14);
          v17 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v20, v17), (int8x16_t)v20, (int8x16_t)v17);
          v16 += 16;
          v15 -= 4;
        }
        while (v15);
        v21 = vbslq_s8((int8x16_t)vcgtq_s64(v14, v17), (int8x16_t)v14, (int8x16_t)v17);
        v22 = vextq_s8(v21, v21, 8uLL).u64[0];
        v10 = (uint64_t)vbsl_s8((int8x8_t)vcgtd_s64(v21.i64[0], v22), *(int8x8_t *)v21.i8, (int8x8_t)v22);
      }
      else
      {
        v10 = 0;
        v11 = 0;
      }
      v23 = v9 - v11;
      v24 = (uint64_t *)(v5 + 32 + 32 * v11);
      do
      {
        v26 = *v24;
        v24 += 4;
        v25 = v26;
        if (v26 > v10)
          v10 = v25;
        --v23;
      }
      while (v23);
      v12 = *(_QWORD *)(v8 + 16);
      if (v12)
        goto LABEL_21;
      if (v10 <= 0)
        goto LABEL_4;
LABEL_33:
      if (!v4)
      {
        __break(1u);
        return result;
      }
      --v6;
      v41 = v7 - 3;
      v42 = *v7;
      v43 = v7[1];
      *(_OWORD *)v7 = *(_OWORD *)(v7 - 3);
      v7[2] = *(v7 - 1);
      *v41 = v42;
      v41[1] = v43;
      *(v7 - 1) = v5;
      if (v6 == result)
      {
LABEL_4:
        if (++a3 == a2)
          return result;
        goto LABEL_5;
      }
    }
    v12 = *(_QWORD *)(v8 + 16);
    if (!v12)
      goto LABEL_4;
    v10 = 0;
LABEL_21:
    if (v12 >= 4)
    {
      v28 = v12 & 0x7FFFFFFFFFFFFFFCLL;
      v29 = (uint64_t *)(v8 + 128);
      v30 = 0uLL;
      v31 = v12 & 0x7FFFFFFFFFFFFFFCLL;
      v32 = 0uLL;
      do
      {
        v33.i64[0] = *(v29 - 12);
        v33.i64[1] = *(v29 - 8);
        v34.i64[0] = *(v29 - 4);
        v34.i64[1] = *v29;
        v30 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v33, v30), (int8x16_t)v33, (int8x16_t)v30);
        v32 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v34, v32), (int8x16_t)v34, (int8x16_t)v32);
        v29 += 16;
        v31 -= 4;
      }
      while (v31);
      v35 = vbslq_s8((int8x16_t)vcgtq_s64(v30, v32), (int8x16_t)v30, (int8x16_t)v32);
      v36 = vextq_s8(v35, v35, 8uLL).u64[0];
      v27 = vbsl_s8((int8x8_t)vcgtd_s64(v35.i64[0], v36), *(int8x8_t *)v35.i8, (int8x8_t)v36);
      if (v12 == v28)
        goto LABEL_30;
    }
    else
    {
      v27 = 0;
      v28 = 0;
    }
    v37 = v12 - v28;
    v38 = (int8x8_t *)(v8 + 32 * v28 + 32);
    do
    {
      v40 = *v38;
      v38 += 4;
      v39 = v40;
      if (*(_QWORD *)&v40 > *(_QWORD *)&v27)
        v27 = v39;
      --v37;
    }
    while (v37);
LABEL_30:
    if (*(_QWORD *)&v27 >= v10)
      goto LABEL_4;
    goto LABEL_33;
  }
  return result;
}

uint64_t sub_23ADEAEE0(char *__src, char *a2, char *a3, char *__dst)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  const double *v21;
  int64x2_t v22;
  unint64_t v23;
  int64x2_t v24;
  const double *v25;
  unsigned __int128 v26;
  unsigned __int128 v27;
  int8x16_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  int8x8_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64x2_t v37;
  uint64_t v38;
  int64x2_t v39;
  int64x2_t v40;
  int64x2_t v41;
  int8x16_t v42;
  uint64_t v43;
  unint64_t v44;
  int8x8_t *v45;
  int8x8_t v46;
  int8x8_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  const double *v60;
  int64x2_t v61;
  unint64_t v62;
  int64x2_t v63;
  const double *v64;
  unsigned __int128 v65;
  unsigned __int128 v66;
  int8x16_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  int8x8_t v73;
  uint64_t v74;
  uint64_t *v75;
  int64x2_t v76;
  uint64_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int8x16_t v81;
  uint64_t v82;
  unint64_t v83;
  int8x8_t *v84;
  int8x8_t v85;
  int8x8_t v86;
  __int128 v87;
  char *v88;
  __int128 v89;
  uint64_t result;
  char *v91;
  const void *v92;
  char *v93;

  v4 = __dst;
  v5 = a3;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 24;
  v10 = a3 - a2;
  v11 = (a3 - a2) / 24;
  v93 = __src;
  v92 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -23)
      goto LABEL_90;
    if (__dst != a2 || &a2[24 * v11] <= __dst)
      memmove(__dst, a2, 24 * v11);
    v51 = &v4[24 * v11];
    v91 = v51;
    v93 = v6;
    if (v7 >= v6 || v10 < 24)
    {
LABEL_89:
      sub_23AEA69CC((void **)&v93, &v92, &v91);
      return 1;
    }
    while (1)
    {
      v52 = *((_QWORD *)v51 - 1);
      v53 = *((_QWORD *)v6 - 1);
      v54 = *(_QWORD *)(v52 + 16);
      if (!v54)
        break;
      if (v54 >= 5)
      {
        v59 = *(_QWORD *)(v52 + 16) & 3;
        if ((v54 & 3) == 0)
          v59 = 4;
        v56 = v54 - v59;
        v60 = (const double *)(v52 + 96);
        v61 = 0uLL;
        v62 = v56;
        v63 = 0uLL;
        do
        {
          v64 = v60 - 8;
          v65 = (unsigned __int128)vld4q_f64(v64);
          v66 = (unsigned __int128)vld4q_f64(v60);
          v61 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v65, v61), (int8x16_t)v65, (int8x16_t)v61);
          v63 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v66, v63), (int8x16_t)v66, (int8x16_t)v63);
          v60 += 16;
          v62 -= 4;
        }
        while (v62);
        v67 = vbslq_s8((int8x16_t)vcgtq_s64(v61, v63), (int8x16_t)v61, (int8x16_t)v63);
        v68 = vextq_s8(v67, v67, 8uLL).u64[0];
        v55 = (uint64_t)vbsl_s8((int8x8_t)vcgtd_s64(v67.i64[0], v68), *(int8x8_t *)v67.i8, (int8x8_t)v68);
      }
      else
      {
        v55 = 0;
        v56 = 0;
      }
      v69 = v54 - v56;
      v70 = (uint64_t *)(v52 + 32 * v56 + 32);
      do
      {
        v72 = *v70;
        v70 += 4;
        v71 = v72;
        if (v72 > v55)
          v55 = v71;
        --v69;
      }
      while (v69);
      v57 = (unint64_t)(v5 - 24);
      v58 = *(_QWORD *)(v53 + 16);
      if (v58)
        goto LABEL_67;
      if (v55 <= 0)
      {
LABEL_77:
        v91 = v51 - 24;
        if (v5 < v51 || v57 >= (unint64_t)v51 || v5 != v51)
        {
          v87 = *(_OWORD *)(v51 - 24);
          *(_QWORD *)(v57 + 16) = *((_QWORD *)v51 - 1);
          *(_OWORD *)v57 = v87;
        }
        v88 = v6;
        v51 -= 24;
        if (v6 <= v7)
          goto LABEL_89;
        goto LABEL_88;
      }
LABEL_84:
      v88 = v6 - 24;
      if (v5 != v6 || v57 >= (unint64_t)v6)
      {
        v89 = *(_OWORD *)v88;
        *(_QWORD *)(v57 + 16) = *((_QWORD *)v6 - 1);
        *(_OWORD *)v57 = v89;
      }
      v93 = v6 - 24;
      if (v88 <= v7)
        goto LABEL_89;
LABEL_88:
      v6 = v88;
      v5 = (char *)v57;
      if (v51 <= v4)
        goto LABEL_89;
    }
    v57 = (unint64_t)(v5 - 24);
    v58 = *(_QWORD *)(v53 + 16);
    if (!v58)
      goto LABEL_77;
    v55 = 0;
LABEL_67:
    if (v58 >= 4)
    {
      v74 = v58 & 0x7FFFFFFFFFFFFFFCLL;
      v75 = (uint64_t *)(v53 + 128);
      v76 = 0uLL;
      v77 = v58 & 0x7FFFFFFFFFFFFFFCLL;
      v78 = 0uLL;
      do
      {
        v79.i64[0] = *(v75 - 12);
        v79.i64[1] = *(v75 - 8);
        v80.i64[0] = *(v75 - 4);
        v80.i64[1] = *v75;
        v76 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v79, v76), (int8x16_t)v79, (int8x16_t)v76);
        v78 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v80, v78), (int8x16_t)v80, (int8x16_t)v78);
        v75 += 16;
        v77 -= 4;
      }
      while (v77);
      v81 = vbslq_s8((int8x16_t)vcgtq_s64(v76, v78), (int8x16_t)v76, (int8x16_t)v78);
      v82 = vextq_s8(v81, v81, 8uLL).u64[0];
      v73 = vbsl_s8((int8x8_t)vcgtd_s64(v81.i64[0], v82), *(int8x8_t *)v81.i8, (int8x8_t)v82);
      if (v58 == v74)
        goto LABEL_76;
    }
    else
    {
      v73 = 0;
      v74 = 0;
    }
    v83 = v58 - v74;
    v84 = (int8x8_t *)(v53 + 32 * v74 + 32);
    do
    {
      v86 = *v84;
      v84 += 4;
      v85 = v86;
      if (*(_QWORD *)&v86 > *(_QWORD *)&v73)
        v73 = v85;
      --v83;
    }
    while (v83);
LABEL_76:
    if (*(_QWORD *)&v73 >= v55)
      goto LABEL_77;
    goto LABEL_84;
  }
  if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst)
      memmove(__dst, __src, 24 * v9);
    v12 = &v4[24 * v9];
    v91 = v12;
    if (v6 < v5 && v8 >= 24)
    {
      v13 = v4;
      while (1)
      {
        v14 = *((_QWORD *)v6 + 2);
        v15 = *((_QWORD *)v13 + 2);
        v16 = *(_QWORD *)(v14 + 16);
        if (!v16)
          break;
        if (v16 >= 5)
        {
          v20 = *(_QWORD *)(v14 + 16) & 3;
          if ((v16 & 3) == 0)
            v20 = 4;
          v18 = v16 - v20;
          v21 = (const double *)(v14 + 96);
          v22 = 0uLL;
          v23 = v18;
          v24 = 0uLL;
          do
          {
            v25 = v21 - 8;
            v26 = (unsigned __int128)vld4q_f64(v25);
            v27 = (unsigned __int128)vld4q_f64(v21);
            v22 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v26, v22), (int8x16_t)v26, (int8x16_t)v22);
            v24 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64((int64x2_t)v27, v24), (int8x16_t)v27, (int8x16_t)v24);
            v21 += 16;
            v23 -= 4;
          }
          while (v23);
          v28 = vbslq_s8((int8x16_t)vcgtq_s64(v22, v24), (int8x16_t)v22, (int8x16_t)v24);
          v29 = vextq_s8(v28, v28, 8uLL).u64[0];
          v17 = (uint64_t)vbsl_s8((int8x8_t)vcgtd_s64(v28.i64[0], v29), *(int8x8_t *)v28.i8, (int8x8_t)v29);
        }
        else
        {
          v17 = 0;
          v18 = 0;
        }
        v30 = v16 - v18;
        v31 = (uint64_t *)(v14 + 32 * v18 + 32);
        do
        {
          v33 = *v31;
          v31 += 4;
          v32 = v33;
          if (v33 > v17)
            v17 = v32;
          --v30;
        }
        while (v30);
        v19 = *(_QWORD *)(v15 + 16);
        if (v19)
          goto LABEL_24;
        if (v17 > 0)
        {
LABEL_38:
          v49 = v6 + 24;
          v48 = v6;
          if (v7 == v6 && v7 < v49)
            goto LABEL_43;
          goto LABEL_42;
        }
LABEL_34:
        v4 = v13 + 24;
        v48 = v13;
        v49 = v6;
        if (v7 == v13)
        {
          v13 += 24;
          if (v7 < v4)
            goto LABEL_43;
        }
        else
        {
          v13 += 24;
        }
LABEL_42:
        v50 = *(_OWORD *)v48;
        *((_QWORD *)v7 + 2) = *((_QWORD *)v48 + 2);
        *(_OWORD *)v7 = v50;
LABEL_43:
        v7 += 24;
        if (v13 < v12)
        {
          v6 = v49;
          if (v49 < v5)
            continue;
        }
        v92 = v4;
        v93 = v7;
        goto LABEL_89;
      }
      v19 = *(_QWORD *)(v15 + 16);
      if (!v19)
        goto LABEL_34;
      v17 = 0;
LABEL_24:
      if (v19 >= 4)
      {
        v35 = v19 & 0x7FFFFFFFFFFFFFFCLL;
        v36 = (uint64_t *)(v15 + 128);
        v37 = 0uLL;
        v38 = v19 & 0x7FFFFFFFFFFFFFFCLL;
        v39 = 0uLL;
        do
        {
          v40.i64[0] = *(v36 - 12);
          v40.i64[1] = *(v36 - 8);
          v41.i64[0] = *(v36 - 4);
          v41.i64[1] = *v36;
          v37 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v40, v37), (int8x16_t)v40, (int8x16_t)v37);
          v39 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v41, v39), (int8x16_t)v41, (int8x16_t)v39);
          v36 += 16;
          v38 -= 4;
        }
        while (v38);
        v42 = vbslq_s8((int8x16_t)vcgtq_s64(v37, v39), (int8x16_t)v37, (int8x16_t)v39);
        v43 = vextq_s8(v42, v42, 8uLL).u64[0];
        v34 = vbsl_s8((int8x8_t)vcgtd_s64(v42.i64[0], v43), *(int8x8_t *)v42.i8, (int8x8_t)v43);
        if (v19 == v35)
          goto LABEL_33;
      }
      else
      {
        v34 = 0;
        v35 = 0;
      }
      v44 = v19 - v35;
      v45 = (int8x8_t *)(v15 + 32 * v35 + 32);
      do
      {
        v47 = *v45;
        v45 += 4;
        v46 = v47;
        if (*(_QWORD *)&v47 > *(_QWORD *)&v34)
          v34 = v46;
        --v44;
      }
      while (v44);
LABEL_33:
      if (*(_QWORD *)&v34 < v17)
        goto LABEL_38;
      goto LABEL_34;
    }
    goto LABEL_89;
  }
LABEL_90:
  result = sub_23B1C70B8();
  __break(1u);
  return result;
}

uint64_t sub_23ADEB454(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (*(_QWORD *)(a2 + 16))
  {
    v2 = *(_QWORD *)(a1 + 16);
    if (v2)
    {
      v4 = 0;
      v5 = a1 + 32;
      v6 = ~(-1 << *(_BYTE *)(a2 + 32));
      v7 = a2 + 56;
      do
      {
        v8 = *(_QWORD *)(v5 + 8 * v4);
        v9 = sub_23B1C749C();
        v10 = v9 & v6;
        if (((*(_QWORD *)(v7 + (((v9 & (unint64_t)v6) >> 3) & 0xFFFFFFFFFFFFF8)) >> (v9 & v6)) & 1) != 0)
        {
          v11 = *(_QWORD *)(a2 + 48);
          if (*(_QWORD *)(v11 + 8 * v10) == v8)
            return 0;
          while (1)
          {
            v10 = (v10 + 1) & v6;
            if (((*(_QWORD *)(v7 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
              break;
            if (*(_QWORD *)(v11 + 8 * v10) == v8)
              return 0;
          }
        }
        ++v4;
      }
      while (v4 != v2);
    }
  }
  return 1;
}

void sub_23ADEB534(uint64_t a1, uint64_t a2, NSObject *a3)
{
  void *v5;
  char v6;
  void *v7;
  unsigned __int8 v8;

  v5 = *(void **)a1;
  v6 = *(_BYTE *)(a1 + 8);
  swift_beginAccess();
  v7 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v5;
  v8 = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a2 + 24) = v6;
  sub_23AAB5380(v5);
  sub_23ADF2430(v7, v8);
  dispatch_group_leave(a3);
}

uint64_t sub_23ADEB5B8(void *a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;
  _QWORD *v14;
  _QWORD v15[5];

  v8 = sub_23B1C5E4C();
  MEMORY[0x24BDAC7A8](v8);
  v15[3] = sub_23AA9F52C(0, &qword_2569E5E38);
  v15[4] = &off_250BFBAE8;
  v15[0] = a1;
  v13 = a4;
  v14 = v15;
  v9 = (void *)MEMORY[0x23B8601A8](a1);
  sub_23ADDA710(a4, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, 0, (uint64_t)sub_23ADF2218, (uint64_t)v12, v10);
  objc_autoreleasePoolPop(v9);
  sub_23ADD6630(v15, a2 & 1, a3 & 1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t sub_23ADEB830(uint64_t a1, char a2, uint64_t a3, unsigned __int8 a4)
{
  switch(a2)
  {
    case -5:
      return a4 == 251;
    case -4:
      return a4 == 252;
    case -3:
      return a4 == 253;
    case -2:
      return a4 == 254;
    case -1:
      return a4 == 0xFF;
    default:
      if (a4 > 0xFAu)
        return 0;
      if (a2)
      {
        if (a2 == 1)
        {
          if (a4 != 1 || a1 != a3)
            return 0;
        }
        else if (a1)
        {
          if (a4 != 2 || a3 != 1)
            return 0;
        }
        else if (a4 != 2 || a3)
        {
          return 0;
        }
      }
      else if (a4 || (_DWORD)a1 != (_DWORD)a3)
      {
        return 0;
      }
      return 1;
  }
}

uint64_t sub_23ADEB920(uint64_t a1, char a2, char a3, _QWORD *a4, uint64_t a5, unsigned __int8 a6, char a7, _QWORD *a8)
{
  switch(a2)
  {
    case -5:
      if (a6 == 251)
        goto LABEL_17;
      return 0;
    case -4:
      if (a6 != 252)
        return 0;
      goto LABEL_17;
    case -3:
      if (a6 != 253)
        return 0;
      goto LABEL_17;
    case -2:
      if (a6 != 254)
        return 0;
      goto LABEL_17;
    case -1:
      if (a6 == 0xFF)
        goto LABEL_17;
      return 0;
    default:
      if (a6 > 0xFAu)
        return 0;
      if (a2)
      {
        if (a2 == 1)
        {
          if (a6 != 1 || a1 != a5)
            return 0;
        }
        else if (a1)
        {
          if (a6 != 2 || a5 != 1)
            return 0;
        }
        else if (a6 != 2 || a5)
        {
          return 0;
        }
      }
      else if (a6 || (_DWORD)a1 != (_DWORD)a5)
      {
        return 0;
      }
LABEL_17:
      if (a3 != 70)
      {
        if (a7 == 70 || qword_23B1DA698[a3] != qword_23B1DA698[a7])
          return 0;
        return sub_23AF1B25C(a4, a8);
      }
      if (a7 == 70)
        return sub_23AF1B25C(a4, a8);
      return 0;
  }
}

unint64_t sub_23ADEBA5C()
{
  unint64_t result;

  result = qword_2569E5988;
  if (!qword_2569E5988)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA5F0, &type metadata for PendingSetErrorDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E5988);
  }
  return result;
}

unint64_t sub_23ADEBAA0()
{
  unint64_t result;

  result = qword_2569E5990;
  if (!qword_2569E5990)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA5C8, &type metadata for ErrorDirection);
    atomic_store(result, (unint64_t *)&qword_2569E5990);
  }
  return result;
}

unint64_t sub_23ADEBAE4()
{
  unint64_t result;

  result = qword_2569E5998;
  if (!qword_2569E5998)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E3AD4, &type metadata for JobCode);
    atomic_store(result, (unint64_t *)&qword_2569E5998);
  }
  return result;
}

unint64_t sub_23ADEBB28()
{
  unint64_t result;

  result = qword_2569E59A0;
  if (!qword_2569E59A0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1E7268, &type metadata for FileTreeSide);
    atomic_store(result, (unint64_t *)&qword_2569E59A0);
  }
  return result;
}

unint64_t sub_23ADEBB6C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_2542E3620;
  if (!qword_2542E3620)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2542E54E8);
    v2 = MEMORY[0x24BEE0D08];
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2542E3620);
  }
  return result;
}

uint64_t sub_23ADEBBC8(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        return swift_release();
      v18 = *(_QWORD *)(v4 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          return swift_release();
        v18 = *(_QWORD *)(v4 + 8 * v10);
        if (!v18)
        {
          v10 = v17 + 3;
          if (v17 + 3 >= v8)
            return swift_release();
          v18 = *(_QWORD *)(v4 + 8 * v10);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    a2(v14, v15, v16);
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v8)
    return swift_release();
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23ADEBD50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65646F43626F6ALL && a2 == 0xE700000000000000 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646953626F6ALL && a2 == 0xE700000000000000 || (sub_23B1C7388() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023B204030)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23ADEBF6C(char a1)
{
  id v2;
  void *v3;
  char **v4;
  signed int v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE313B0]), sel_init);
  v3 = v2;
  v4 = &selRef_maxFPCKDatabaseChecks;
  if ((a1 & 8) != 0)
    v4 = &selRef_maxFPCKDatabaseChecksDiagnostic;
  v5 = objc_msgSend(v2, *v4);

  return v5;
}

id sub_23ADEBFD4(void *a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)())
{
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  id result;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)();
  uint64_t (*v54)();
  uint64_t (**v55)();
  void *v56;
  int v57;
  char IsEnabledForDomainID;
  char *v59;
  void (**v60)();
  id v61;
  char *v62;
  char *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  objc_class *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)();
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  char *v86;
  uint64_t v87;
  objc_super v88;
  uint64_t aBlock;
  uint64_t v90;
  uint64_t (*v91)(uint64_t, uint64_t);
  void *v92;
  uint64_t (*v93)();
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;

  v83 = a7;
  v84 = a8;
  v85 = a6;
  v81 = a5;
  v79 = a3;
  v80 = a4;
  v78 = a2;
  v82 = a1;
  v15 = sub_23B1C5E4C();
  v87 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v86 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23B1C5C54();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_numberOfFilesChecked] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSAndFSSnapshotCheck] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInFSSnapshotAndFPSnapshotCheck] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInReconciliationTableCheck] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_numberOfBrokenFilesInBackupManifestCheck] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_numberOfReconciliationTableEntries] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_totalDatalessItems] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_totalMaterializedItems] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedFileSizes] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedSizeOfDisk] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedDownloads] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_accumulatedUploads] = 0;
  v21 = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_multipleHardlinksExtensions] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_pendingSetSize] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetSize] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_pendingSetItemPayload] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetItemPayload] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_telemetryReport] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_pendingSetErrors] = v21;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9libfssync4FPCK_superPendingSetErrors] = v21;
  v22 = OBJC_IVAR____TtC9libfssync4FPCK_runID;
  v23 = v14;
  sub_23B1C5C48();
  aBlock = sub_23B1C5BF4();
  v90 = v24;
  v95 = 45;
  v96 = 0xE100000000000000;
  sub_23AAA420C();
  v25 = (_QWORD *)sub_23B1C6CD4();
  result = (id)swift_bridgeObjectRelease();
  if (v25[2])
  {
    v77 = v15;
    v76 = a14;
    v75 = a12;
    v74 = a11;
    v73 = a10;
    v27 = (uint64_t *)&v14[v22];
    v28 = v25[4];
    v29 = v25[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    *v27 = v28;
    v27[1] = v29;
    v72 = v27;
    v30 = OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase;
    *(_QWORD *)&v23[OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase] = 0;
    v31 = OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker;
    *(_QWORD *)&v23[OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker] = 0;
    v32 = OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker;
    *(_QWORD *)&v23[OBJC_IVAR____TtC9libfssync4FPCK_fpSnapshotChecker] = 0;
    v33 = OBJC_IVAR____TtC9libfssync4FPCK_diskVsFSSnapshotIgnoredFilenames;
    v34 = sub_23AAF8CA8((uint64_t)&unk_250BDEAB8);
    swift_arrayDestroy();
    *(_QWORD *)&v23[v33] = v34;
    *(_QWORD *)&v23[OBJC_IVAR____TtC9libfssync4FPCK_launchOptions] = 0;
    v35 = (uint64_t *)&v23[OBJC_IVAR____TtC9libfssync4FPCK_shouldPause];
    *v35 = 0;
    v35[1] = 0;
    v36 = OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskBrokenInvariantsCounters;
    v37 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)&v23[v36] = sub_23AAF83FC(MEMORY[0x24BEE4AF8]);
    v38 = OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskBrokenInvariantsCounters;
    *(_QWORD *)&v23[v38] = sub_23AAF83FC(v37);
    v39 = OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskVsFSSnapshotDiffCounters;
    *(_QWORD *)&v23[v39] = sub_23AAF8410(v37);
    v40 = OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskVsFSSnapshotDiffCounters;
    *(_QWORD *)&v23[v40] = sub_23AAF8410(v37);
    v41 = OBJC_IVAR____TtC9libfssync4FPCK_discoveredFSSnapshotVsFPSnapshotDiffCounters;
    *(_QWORD *)&v23[v41] = sub_23AAF8424(v37);
    v42 = OBJC_IVAR____TtC9libfssync4FPCK_discoveredReconciliationTableBrokenInvariantsCounters;
    *(_QWORD *)&v23[v42] = sub_23AAF8438(v37);
    v43 = OBJC_IVAR____TtC9libfssync4FPCK_discoveredBackupManifestVsFSSnapshotDiffCounters;
    *(_QWORD *)&v23[v43] = sub_23AAF844C(v37);
    v44 = &v23[OBJC_IVAR____TtC9libfssync4FPCK_providerVersion];
    *(_QWORD *)v44 = 0x69737265762D6F6ELL;
    *((_QWORD *)v44 + 1) = 0xEA00000000006E6FLL;
    *(_QWORD *)&v23[OBJC_IVAR____TtC9libfssync4FPCK_skippedLockedItems] = MEMORY[0x24BEE4B08];
    v45 = &v23[OBJC_IVAR____TtC9libfssync4FPCK_rootURL];
    v46 = sub_23B1C5A08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 1, 1, v46);
    v23[OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___importIsRunning] = 2;
    *(_QWORD *)&v23[OBJC_IVAR____TtC9libfssync4FPCK____lazy_storage___vendorExcludedFolders] = 0;
    v47 = v82;
    v48 = v83;
    *(_QWORD *)&v23[OBJC_IVAR____TtC9libfssync4FPCK_providerDomainID] = v82;
    *(_DWORD *)&v23[OBJC_IVAR____TtC9libfssync4FPCK_volumeRole] = v78;
    *(_QWORD *)&v23[OBJC_IVAR____TtC9libfssync4FPCK_domainUserInfo] = v79;
    *(_QWORD *)&v23[OBJC_IVAR____TtC9libfssync4FPCK_reason] = v80;
    v23[OBJC_IVAR____TtC9libfssync4FPCK_usingFPFS] = v81 & 1;
    *(_QWORD *)&v23[v30] = v48;
    v49 = v47;
    swift_retain();
    swift_release();
    *(_QWORD *)&v23[v31] = v84;
    swift_retain();
    swift_release();
    *(_QWORD *)&v23[v32] = a9;
    swift_retain();
    swift_release();
    *(_QWORD *)&v23[OBJC_IVAR____TtC9libfssync4FPCK_openBackupDatabases] = v73;
    v50 = *v35;
    v51 = v74;
    v52 = v75;
    *v35 = v74;
    v35[1] = v52;
    sub_23AAFA320(v51);
    sub_23AAB7948(v50);
    v53 = sub_23AABA6B4;
    if (a13)
    {
      v53 = (uint64_t (*)())a13;
      v54 = v76;
    }
    else
    {
      v54 = 0;
    }
    v55 = (uint64_t (**)())&v23[OBJC_IVAR____TtC9libfssync4FPCK_isInvalidated];
    *v55 = v53;
    v55[1] = v54;
    v93 = sub_23AFE01B4;
    v94 = 0;
    aBlock = MEMORY[0x24BDAC760];
    v90 = 1107296256;
    v91 = sub_23B135DF8;
    v92 = &block_descriptor_225;
    v56 = _Block_copy(&aBlock);
    v57 = v85 & 1;
    sub_23AAFA320(a13);
    IsEnabledForDomainID = FPPinningIsEnabledForDomainID();
    v59 = &v23[OBJC_IVAR____TtC9libfssync4FPCK_ioContext];
    *(_QWORD *)v59 = v56;
    *((_DWORD *)v59 + 2) = v57;
    v59[12] = IsEnabledForDomainID;
    v60 = (void (**)())&v23[OBJC_IVAR____TtC9libfssync4FPCK_resultHandler];
    *v60 = sub_23ADBE818;
    v60[1] = 0;
    v61 = (id)fpfs_current_or_default_log();
    v62 = v86;
    sub_23B1C5E58();
    v63 = v23;
    v64 = sub_23B1C5E40();
    v65 = sub_23B1C6A88();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      v67 = swift_slowAlloc();
      aBlock = v67;
      *(_DWORD *)v66 = 136315138;
      v68 = *v72;
      v69 = v72[1];
      swift_bridgeObjectRetain();
      v95 = sub_23AABEC68(v68, v69, &aBlock);
      sub_23B1C6CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v64, v65, "🧹 FPCK initialized with run id %s", v66, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v67, -1, -1);
      MEMORY[0x23B8614BC](v66, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v87 + 8))(v62, v77);
    v70 = (objc_class *)type metadata accessor for FPCK(0);
    v88.receiver = v63;
    v88.super_class = v70;
    return objc_msgSendSuper2(&v88, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_23ADEC718(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8, __int16 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)())
{
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  id result;
  void *v32;
  int64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v50;

  if ((a9 & 0x100) != 0)
  {
    a8 = sub_23ADEBF6C(a5);
    v17 = v18 & 1;
  }
  else
  {
    v17 = a9 & 1;
  }
  type metadata accessor for FSSnapshotChecker();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 64) = 0;
  *(_BYTE *)(v19 + 72) = 1;
  v20 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v19 + 16) = sub_23AAEC3E0(MEMORY[0x24BEE4AF8]);
  v21 = sub_23AAEC3EC(v20);
  v22 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v19 + 24) = v21;
  *(_QWORD *)(v19 + 32) = v22;
  *(_QWORD *)(v19 + 40) = v22;
  *(_QWORD *)(v19 + 48) = a8;
  *(_BYTE *)(v19 + 56) = v17;
  type metadata accessor for FPSnapshotChecker();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 40) = 0;
  *(_BYTE *)(v23 + 48) = 1;
  *(_QWORD *)(v23 + 16) = sub_23AAEC3F8(v20);
  *(_QWORD *)(v23 + 24) = sub_23AAEC404(v20);
  *(_BYTE *)(v23 + 32) = 0;
  v24 = objc_allocWithZone((Class)type metadata accessor for FPCK(0));
  sub_23AAFA320(a10);
  swift_retain();
  v25 = a3;
  v26 = sub_23ADEBFD4(v25, a2, a4, a5, a6 & 1, a7 & 1, 0, v19, v23, v20, a10, a11, a12, a13);
  swift_release();
  sub_23AAB7948(a10);

  swift_release();
  swift_release();
  v50 = a1 + 64;
  v27 = 1 << *(_BYTE *)(a1 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(v27 + 63) >> 6;
  result = v26;
  v32 = result;
  v33 = 0;
  while (1)
  {
    if (v29)
    {
      v34 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      v35 = v34 | (v33 << 6);
      goto LABEL_8;
    }
    v43 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v43 >= v30)
      goto LABEL_24;
    v44 = *(_QWORD *)(v50 + 8 * v43);
    ++v33;
    if (!v44)
    {
      v33 = v43 + 1;
      if (v43 + 1 >= v30)
        goto LABEL_24;
      v44 = *(_QWORD *)(v50 + 8 * v33);
      if (!v44)
      {
        v33 = v43 + 2;
        if (v43 + 2 >= v30)
          goto LABEL_24;
        v44 = *(_QWORD *)(v50 + 8 * v33);
        if (!v44)
          break;
      }
    }
LABEL_23:
    v29 = (v44 - 1) & v44;
    v35 = __clz(__rbit64(v44)) + (v33 << 6);
LABEL_8:
    v36 = 16 * v35;
    v37 = *(_QWORD *)(a1 + 48) + v36;
    v38 = *(char **)v37;
    v39 = *(_QWORD *)(v37 + 8);
    v40 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v36);
    v41 = *v40;
    v42 = v40[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23ADBEC58(v38, v39, v41, v42, v25);
    swift_bridgeObjectRelease();
    result = (id)swift_bridgeObjectRelease();
  }
  v45 = v43 + 3;
  if (v45 >= v30)
  {
LABEL_24:
    swift_release();

    sub_23AAB7948(a10);
    swift_release();

    return v32;
  }
  v44 = *(_QWORD *)(v50 + 8 * v45);
  if (v44)
  {
    v33 = v45;
    goto LABEL_23;
  }
  while (1)
  {
    v33 = v45 + 1;
    if (__OFADD__(v45, 1))
      break;
    if (v33 >= v30)
      goto LABEL_24;
    v44 = *(_QWORD *)(v50 + 8 * v33);
    ++v45;
    if (v44)
      goto LABEL_23;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FPCK(uint64_t a1)
{
  return sub_23AA94094(a1, qword_2542DF2D0);
}

uint64_t sub_23ADECA70@<X0>(int a1@<W0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_23ADBC9B0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23ADECA88()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char *v6;
  char v7;

  v0 = (void *)sub_23B1C5870();
  v1 = objc_msgSend(v0, sel_domain);
  v2 = sub_23B1C63E0();
  v4 = v3;

  if (v2 == 0xD000000000000021 && v4 == 0x800000023B204D30)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v6 = (char *)objc_msgSend(v0, sel_code);

    v7 = (unint64_t)(v6 - 3) < 2;
    return v7 & 1;
  }
  v5 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    goto LABEL_5;
  sub_23B1C54B0();
  sub_23AB6CD48();
  if ((sub_23B1C575C() & 1) != 0)
  {

    v7 = 1;
  }
  else
  {
    _s3__C4CodeOMa_1(0);
    sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
    v7 = sub_23B1C575C();

  }
  return v7 & 1;
}

uint64_t sub_23ADECBFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t result;
  _QWORD v48[3];
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  int v57;
  _QWORD *v58;

  v0 = sub_23B1C6428();
  MEMORY[0x24BDAC7A8](v0);
  v48[1] = (char *)v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_23AEA5918(v2);
  swift_bridgeObjectRelease();
  v58 = v3;
  sub_23ADEA200(&v58);
  v4 = v58[2];
  if (v4 >= 5)
    v4 = 5;
  v50 = v4;
  if (!v4)
    goto LABEL_35;
  v48[2] = v58;
  v49 = 0;
  v5 = 0;
  v51 = v58 + 4;
  v6 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    v8 = &v51[3 * v5];
    v10 = *v8;
    v9 = v8[1];
    v11 = v8[2];
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v53 = *v8;
      v55 = v5;
      v56 = v6;
      swift_bridgeObjectRetain_n();
      v54 = v9;
      swift_bridgeObjectRetain();
      v52 = v11;
      v13 = (_QWORD *)(v11 + 56);
      v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
      while (1)
      {
        v15 = *(v13 - 3);
        v16 = *(v13 - 2);
        v57 = *((unsigned __int8 *)v13 - 8);
        v17 = *((_BYTE *)v13 - 7);
        v18 = *((_BYTE *)v13 - 6);
        v19 = *v13;
        v20 = objc_allocWithZone(MEMORY[0x24BDD16E0]);
        swift_bridgeObjectRetain();
        v21 = objc_msgSend(v20, sel_initWithInteger_, v15);
        sub_23B0DC740(2);
        v23 = v22;

        if (v23)
        {
          v24 = objc_msgSend(v23, sel_integerValue);

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            goto LABEL_16;
        }
        else
        {
          v24 = 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_16:
            v14 = sub_23AF99F50(0, v14[2] + 1, 1, v14);
        }
        v26 = v14[2];
        v25 = v14[3];
        if (v26 >= v25 >> 1)
          v14 = sub_23AF99F50((_QWORD *)(v25 > 1), v26 + 1, 1, v14);
        v14[2] = v26 + 1;
        v27 = &v14[4 * v26];
        v27[4] = v24;
        v27[5] = v16;
        *((_BYTE *)v27 + 48) = v57;
        *((_BYTE *)v27 + 49) = v17;
        *((_BYTE *)v27 + 50) = v18;
        v13 += 4;
        v27[7] = v19;
        if (!--v12)
        {
          swift_bridgeObjectRelease_n();
          v5 = v55;
          v6 = v56;
          v10 = v53;
          v9 = v54;
          goto LABEL_18;
        }
      }
    }
    swift_bridgeObjectRetain();
    v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_18:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v58 = v6;
    v30 = sub_23AAAF4C4(v10, v9);
    v31 = v6[2];
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
      break;
    v34 = v29;
    if (v6[3] >= v33)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v6 = v58;
        if ((v29 & 1) == 0)
          goto LABEL_25;
      }
      else
      {
        sub_23B18AA64();
        v6 = v58;
        if ((v34 & 1) == 0)
          goto LABEL_25;
      }
    }
    else
    {
      sub_23AD17A80(v33, isUniquelyReferenced_nonNull_native);
      v35 = sub_23AAAF4C4(v10, v9);
      if ((v34 & 1) != (v36 & 1))
        goto LABEL_36;
      v30 = v35;
      v6 = v58;
      if ((v34 & 1) == 0)
      {
LABEL_25:
        v6[(v30 >> 6) + 8] |= 1 << v30;
        v37 = (uint64_t *)(v6[6] + 16 * v30);
        *v37 = v10;
        v37[1] = v9;
        *(_QWORD *)(v6[7] + 8 * v30) = v14;
        v38 = v6[2];
        v39 = __OFADD__(v38, 1);
        v40 = v38 + 1;
        if (v39)
          goto LABEL_34;
        v6[2] = v40;
        swift_bridgeObjectRetain();
        goto LABEL_6;
      }
    }
    v7 = v6[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 8 * v30) = v14;
LABEL_6:
    ++v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5 == v50)
    {
      swift_release();
      sub_23B1C55C4();
      swift_allocObject();
      sub_23B1C55B8();
      v58 = v6;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E10);
      sub_23ADF2054(&qword_2569E5E18, &qword_2569E5E10, (uint64_t (*)(void))sub_23ADF20C0);
      v41 = v49;
      v42 = sub_23B1C55AC();
      if (v41)
      {
        swift_release();

        swift_bridgeObjectRelease();
        return 0;
      }
      else
      {
        v45 = v42;
        v46 = v43;
        swift_bridgeObjectRelease();
        sub_23B1C641C();
        v44 = sub_23B1C63F8();
        sub_23AAAE53C(v45, v46);
        swift_release();
      }
      return v44;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  sub_23B1C7418();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

void sub_23ADED08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint8_t *a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  void (*v17)(char *, uint64_t);
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  id v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  id v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v53 = a1;
  v58 = *MEMORY[0x24BDAC8D0];
  v52 = sub_23B1C5E4C();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v50 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23B1C5BDC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v12 + 8);
  v17(v14, v11);
  v18 = v16 * 1000000000.0;
  if ((~COERCE__INT64(v16 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v18 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v18 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v19 = v54;
  sub_23ADC4674(a3, a4, a5, a6);
  if (v19)
    return;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v21 = v20;
  v17(v14, v11);
  v22 = v21 * 1000000000.0;
  if ((~COERCE__INT64(v21 * 1000000000.0) & 0x7FF0000000000000) == 0)
    goto LABEL_23;
  if (v22 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  if (__OFSUB__((uint64_t)v22, (uint64_t)v18))
    goto LABEL_26;
  if ((*(_BYTE *)(v53 + OBJC_IVAR____TtC9libfssync4FPCK_reason) & 0x20) == 0)
  {
    v54 = (uint64_t)v22 - (uint64_t)v18;
    v23 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E5600);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23B1D2330;
    v56 = sub_23B1C63E0();
    v57 = v25;
    v26 = MEMORY[0x24BEE0D00];
    sub_23B1C6E84();
    v27 = (void *)sub_23AB60CA8();
    v28 = sub_23B1C63E0();
    v30 = v29;

    *(_QWORD *)(inited + 96) = v26;
    *(_QWORD *)(inited + 72) = v28;
    *(_QWORD *)(inited + 80) = v30;
    v31 = v53;
    v56 = sub_23B1C63E0();
    v57 = v32;
    sub_23B1C6E84();
    v34 = *(_QWORD *)(v31 + OBJC_IVAR____TtC9libfssync4FPCK_providerVersion);
    v33 = *(_QWORD *)(v31 + OBJC_IVAR____TtC9libfssync4FPCK_providerVersion + 8);
    *(_QWORD *)(inited + 168) = v26;
    *(_QWORD *)(inited + 144) = v34;
    *(_QWORD *)(inited + 152) = v33;
    swift_bridgeObjectRetain();
    sub_23AAE9FE8(inited);
    v35 = (void *)sub_23B1C61F4();
    swift_bridgeObjectRelease();
    v36 = objc_msgSend(v23, sel_sessionWithCommonProperties_, v35);

    if (v36)
    {
      sub_23ADC0D00(v54);
      if (!v37)
      {
LABEL_17:

        return;
      }
      v38 = v37;
      v39 = (uint64_t *)(v31 + OBJC_IVAR____TtC9libfssync4FPCK_telemetryReport);
      swift_beginAccess();
      *v39 = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v40 = (id)fpfs_current_or_default_log();
      v41 = v50;
      sub_23B1C5E58();
      swift_bridgeObjectRetain();
      v42 = sub_23B1C5E40();
      v43 = sub_23B1C6A88();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v44 = 134217984;
        v55 = *(id *)(v38 + 16);
        sub_23B1C6CBC();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v42, v43, "FPDRTCReporting: postReport with %ld entries", v44, 0xCu);
        MEMORY[0x23B8614BC](v44, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v51 + 8))(v41, v52);
      sub_23B147D30(v38);
      swift_bridgeObjectRelease();
      v45 = (void *)sub_23B1C61F4();
      swift_bridgeObjectRelease();
      objc_msgSend(v36, sel_postReportWithCategory_type_payload_error_, 2, 1, v45, 0);

      v55 = 0;
      if (objc_msgSend(v36, sel_flushMessagesSynchronouslyWithError_, &v55))
      {
        v46 = v55;
        goto LABEL_17;
      }
      v47 = v55;
      v48 = (void *)sub_23B1C587C();

      swift_willThrow();
    }
  }
}

uint64_t sub_23ADED670(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;

  v10 = a1;
  if (a4 | a6)
  {
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AF16770(a4);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF162C0(a6);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v11 = sub_23AF983F4(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v13 = v11[2];
    v12 = v11[3];
    if (v13 >= v12 >> 1)
      v11 = sub_23AF983F4((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
    v11[2] = v13 + 1;
    v14 = &v11[2 * v13];
    v14[4] = 0x6578694620859CE2;
    v14[5] = 0xAC000000203A2064;
    v10 = a1;
  }
  else
  {
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = a3 & ~a4;
  v16 = a5 & ~a6;
  if (v15 | v16)
  {
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23AF16770(v15);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    sub_23AF162C0(v16);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_23AF983F4(0, v11[2] + 1, 1, v11);
    v18 = v11[2];
    v17 = v11[3];
    if (v18 >= v17 >> 1)
      v11 = sub_23AF983F4((_QWORD *)(v17 > 1), v18 + 1, 1, v11);
    v11[2] = v18 + 1;
    v19 = &v11[2 * v18];
    v19[4] = 0x7466654C208C9DE2;
    v19[5] = 0xAB00000000203A20;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
  sub_23AAB5A28((unint64_t *)&qword_2542E74B0, &qword_2542E54E8, MEMORY[0x24BEE12B0]);
  sub_23B1C6338();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23ADED998(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  void (*v25)(_QWORD *@<X8>);
  void (*v26)(_QWORD *@<X8>);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD *@<X8>);
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  uint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t result;
  int v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  void (*v114)(_QWORD *@<X8>);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  int v130;
  char *v131;
  int v132;
  uint64_t v133;
  void (*v134)(_QWORD *@<X8>);
  void (*v135)(_QWORD *@<X8>);
  unint64_t v136;
  void (*v137)(_QWORD *@<X8>);
  _QWORD *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  _BOOL8 v147;
  uint64_t v148;
  char v149;
  unint64_t v150;
  char v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  BOOL v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(_QWORD *@<X8>);
  unint64_t v161;
  uint64_t v162;
  void (*v163)(_QWORD *@<X8>);
  unint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  char v171;
  char v172;
  uint64_t v173;
  char v174;
  uint64_t v175;
  _BOOL8 v176;
  uint64_t v177;
  char v178;
  unint64_t v179;
  char v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  BOOL v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  int64_t v189;
  unint64_t v190;
  char *v191;
  unint64_t v192;
  uint64_t v193;
  void (*v194)(_QWORD *@<X8>);
  void (*v195)(_QWORD *@<X8>);
  int v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  unint64_t v203;
  uint64_t v204;
  char *v205;
  void (*v206)(_QWORD *@<X8>);
  char *v207;
  void (*v208)(_QWORD *@<X8>);
  uint64_t v209;
  uint64_t v210;
  int v211;
  _QWORD *v212;
  uint64_t *v213;
  _BYTE v214[496];
  _BYTE v215[496];
  _BYTE v216[496];
  _BYTE v217[496];
  _QWORD v218[2];
  char v219;
  uint64_t v220;
  char v221;
  char v222;
  char v223;
  uint64_t v224;
  uint64_t v225;
  char v226;
  char v227;
  uint64_t v228;
  char v229;
  uint64_t v230;
  uint64_t v231;
  char v232;
  _QWORD v233[62];
  uint64_t v234;
  unint64_t v235;
  unint64_t v236;
  uint64_t v237;
  unint64_t v238;
  unint64_t v239;
  uint64_t v240;

  v5 = v4;
  v211 = a1;
  v9 = sub_23B1C5E4C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v202 = (char *)&v190 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v12);
  v203 = (unint64_t)&v190 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v200 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v198 = v16;
  v199 = (uint64_t)&v190 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v190 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v19);
  v207 = (char *)&v190 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v5 + OBJC_IVAR____TtC9libfssync4FPCK_numberOfFilesChecked;
  swift_beginAccess();
  v23 = *(_QWORD *)v21 + 1;
  if (__OFADD__(*(_QWORD *)v21, 1))
  {
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
  v201 = v10;
  v212 = (_QWORD *)v21;
  *(_QWORD *)v21 = v23;
  v24 = sub_23ADC4054();
  if ((v24 & 1) == 0)
    return v24 & 1;
  v192 = v14;
  v193 = v9;
  v196 = v24;
  v25 = 0;
  v240 = a4;
  v213 = *(uint64_t **)(a2 + 16);
  v26 = (void (*)(_QWORD *@<X8>))v213[3];
  v204 = a2;
  v208 = v26;
  v209 = a4;
  if ((a4 & 0x4000000000) != 0 && v26)
  {
    sub_23B1C650C();
    sub_23B0CE9B0((uint64_t)v233);
    v27 = v233[4];
    v28 = v233[5];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v28)
    {
      v29 = (_QWORD *)(v5 + OBJC_IVAR____TtC9libfssync4FPCK_multipleHardlinksExtensions);
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v218[0] = *v29;
      v31 = v218[0];
      *v29 = 0x8000000000000000;
      v206 = (void (*)(_QWORD *@<X8>))v27;
      v33 = sub_23AAAF4C4(v27, v28);
      v34 = *(_QWORD *)(v31 + 16);
      v35 = (v32 & 1) == 0;
      v36 = v34 + v35;
      if (__OFADD__(v34, v35))
      {
        __break(1u);
        goto LABEL_171;
      }
      LOBYTE(v27) = v32;
      if (*(_QWORD *)(v31 + 24) >= v36)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          goto LABEL_172;
      }
      else
      {
        sub_23AD180BC(v36, isUniquelyReferenced_nonNull_native);
        v31 = v218[0];
        v37 = sub_23AAAF4C4((uint64_t)v206, v28);
        if ((v27 & 1) != (v38 & 1))
          goto LABEL_235;
        v33 = v37;
      }
      while (1)
      {
        a4 = v209;
        *v29 = v31;
        swift_bridgeObjectRelease();
        v39 = *v29;
        swift_bridgeObjectRetain();
        if ((v27 & 1) == 0)
        {
          sub_23AD280E4(v33, v206, v28, 0, v39);
          swift_bridgeObjectRetain();
        }
        v40 = *(_QWORD *)(v39 + 56);
        v41 = *(_QWORD *)(v40 + 8 * v33);
        v42 = __CFADD__(v41, 1);
        v43 = v41 + 1;
        if (!v42)
          break;
LABEL_171:
        __break(1u);
LABEL_172:
        sub_23B18AE18();
        v31 = v218[0];
      }
      *(_QWORD *)(v40 + 8 * v33) = v43;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = sub_23AAED18C;
    }
    else
    {
      v25 = 0;
    }
  }
  v239 = a4;
  v197 = OBJC_IVAR____TtC9libfssync4FPCK_launchOptions;
  v44 = a4;
  if ((*(_BYTE *)(v5 + OBJC_IVAR____TtC9libfssync4FPCK_launchOptions) & 2) != 0)
  {
    v45 = 0;
    v46 = 0;
    do
    {
      v47 = *(_QWORD *)((char *)&unk_250BDEAE8 + v45 + 32);
      if ((v47 & ~v46) == 0)
        v47 = 0;
      v46 |= v47;
      v45 += 8;
    }
    while (v45 != 232);
    v44 = a4 & ~v46;
    v239 = v44;
  }
  v190 = a3;
  v191 = v18;
  v195 = v25;
  v210 = v5;
  if (v44)
  {
    v48 = 0;
    v49 = v5 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskBrokenInvariantsCounters;
    a3 = 1;
    v194 = sub_23AAED18C;
    while (1)
    {
      v50 = __clz(__rbit64(v44));
      v51 = v44 & ~(1 << v50);
      if (((1 << v50) & v44) == 0)
        v51 = v44;
      if (v50 >= 0x40)
        v52 = 0;
      else
        v52 = 1 << v50;
      if (v50 < 0x40)
        v44 = v51;
      swift_beginAccess();
      sub_23AAB7948((uint64_t)v48);
      v53 = swift_isUniquelyReferenced_nonNull_native();
      v218[0] = *(_QWORD *)v49;
      v54 = v218[0];
      *(_QWORD *)v49 = 0x8000000000000000;
      v56 = sub_23ACD61DC(v52);
      v57 = *(_QWORD *)(v54 + 16);
      v58 = (v55 & 1) == 0;
      v59 = v57 + v58;
      if (__OFADD__(v57, v58))
        break;
      LOBYTE(v21) = v55;
      if (*(_QWORD *)(v54 + 24) >= v59)
      {
        if ((v53 & 1) == 0)
        {
          sub_23B18AFE0();
          v54 = v218[0];
        }
      }
      else
      {
        sub_23AD183EC(v59, v53);
        v54 = v218[0];
        v60 = sub_23ACD61DC(v52);
        if ((v21 & 1) != (v61 & 1))
        {
          type metadata accessor for BrokenInvariants(0);
          sub_23B1C7418();
          __break(1u);
LABEL_234:
          sub_23B1C7418();
          __break(1u);
LABEL_235:
          sub_23B1C7418();
          __break(1u);
LABEL_236:
          result = sub_23B1C7418();
          __break(1u);
          return result;
        }
        v56 = v60;
      }
      *(_QWORD *)v49 = v54;
      swift_bridgeObjectRelease();
      v62 = *(_QWORD **)v49;
      if ((v21 & 1) != 0)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v62[(v56 >> 6) + 8] |= 1 << v56;
        v63 = 8 * v56;
        *(_QWORD *)(v62[6] + v63) = v52;
        *(_QWORD *)(v62[7] + v63) = 0;
        v64 = v62[2];
        v52 = v64 + 1;
        v65 = __OFADD__(v64, 1);
        swift_bridgeObjectRetain();
        if ((v65 & 1) != 0)
        {
          __break(1u);
LABEL_115:
          v126 = (id)v44;
          v127 = sub_23ADC6C60();
          v128 = sub_23ADB9C24(v190);
          v129 = sub_23ADEB454(v128, v127);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v129 & 1) != 0)
          {
            v130 = *(unsigned __int8 *)(v204 + 2);
            v131 = &v191[*(int *)(v192 + 48)];
            v132 = v131[*(int *)(type metadata accessor for ItemMetadata() + 48)];
            v14 = (unint64_t)v205;
            if (v130 != v132)
            {
              v105 = v234;
              if (!v132)
                goto LABEL_131;
              if ((v234 & 0x1000000000) == 0)
              {
                v133 = v234 | 0x1000000000;
                goto LABEL_133;
              }
            }
            goto LABEL_134;
          }
          swift_release();

          goto LABEL_121;
        }
        v62[2] = v52;
      }
      v66 = v62[7];
      v67 = *(_QWORD *)(v66 + 8 * v56);
      v68 = __OFADD__(v67, 1);
      v69 = v67 + 1;
      if (v68)
        goto LABEL_111;
      *(_QWORD *)(v66 + 8 * v56) = v69;
      swift_endAccess();
      swift_bridgeObjectRelease();
      v48 = sub_23AAED18C;
      if (!v44)
        goto LABEL_48;
    }
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    v118 = v56;
    v119 = (uint64_t)v191;
    sub_23AA724E8(v118, (uint64_t)v191, (uint64_t *)&unk_2542E6B00);
    v120 = v199;
    sub_23AA8EFC8(v119, v199, (uint64_t *)&unk_2542E6B00);
    v121 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    v122 = (void *)a3;
    v123 = swift_allocObject();
    v44 = (unint64_t)v205;
    *(_QWORD *)(v123 + 16) = v122;
    *(_QWORD *)(v123 + 24) = v44;
    sub_23AA724E8(v120, v123 + v121, (uint64_t *)&unk_2542E6B00);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DF360);
    v124 = swift_allocObject();
    sub_23ADF29D8((uint64_t)v233);
    v209 = v124 + 32;
    sub_23AA724E8((uint64_t)v233, v124 + 32, &qword_2542DF240);
    *(_QWORD *)(v124 + 16) = sub_23ADF29CC;
    *(_QWORD *)(v124 + 24) = v123;
    v125 = *(unsigned __int8 *)(v49 + 3);
    v65 = v122;
    LOBYTE(v21) = (_BYTE)v206;
    if (v125 != 1)
      goto LABEL_115;
    swift_release();
LABEL_121:
    swift_release();
    v134 = v208;
    if ((v234 & 0x40000000) == 0)
      v234 |= 0x40000000uLL;
    sub_23AA8A05C((uint64_t)v191, (uint64_t *)&unk_2542E6B00);
    sub_23ADC6640(&v239, &v234, v65, (uint64_t)&v237, &v240, &v236, &v235);
    swift_release();
    swift_bridgeObjectRelease();
    sub_23AAB7948((uint64_t)v195);
    v135 = v194;
    goto LABEL_228;
  }
  v194 = 0;
LABEL_48:
  v70 = fpfs_fileattrs_fullpath();
  v49 = v204;
  if (v70)
  {
    v237 = sub_23B1C650C();
    a3 = v210;
    v72 = (uint64_t)v207;
  }
  else
  {
    a3 = v210;
    v72 = (uint64_t)v207;
    if (v208)
    {
      sub_23B1C650C();
      strcpy((char *)v233, "unknownPath/");
      BYTE5(v233[1]) = 0;
      HIWORD(v233[1]) = -5120;
    }
    else
    {
      v233[0] = 0;
      v233[1] = 0xE000000000000000;
      sub_23B1C6EFC();
      swift_bridgeObjectRelease();
      v233[0] = 0xD00000000000001BLL;
      v233[1] = 0x800000023B2053E0;
      v218[0] = *v212;
      sub_23B1C7304();
    }
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v71 = v233[1];
    v237 = v233[0];
  }
  v238 = v71;
  if ((*(_BYTE *)(a3 + v197) & 8) == 0 || (sub_23ADC04D0() & 1) != 0)
  {
    v212 = 0;
    v73 = 0;
    v235 = 0;
    v236 = 0;
LABEL_57:
    v74 = 1;
LABEL_58:
    v234 = 0;
    if ((*(_BYTE *)(v49 + 1) & 1) == 0 && (*(_BYTE *)(v49 + 10) & 1) == 0)
    {
      v233[0] = sub_23B1C63E0();
      v233[1] = v75;
      v218[0] = 47;
      v218[1] = 0xE100000000000000;
      sub_23AAA420C();
      v76 = sub_23B1C6CD4();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v76 + 16)
        && (swift_bridgeObjectRetain(),
            swift_bridgeObjectRelease(),
            (v77 = *(char **)(a3 + OBJC_IVAR____TtC9libfssync4FPCK_fsSnapshotChecker)) != 0))
      {
        v78 = *v213;
        swift_retain();
        if (sub_23AF42298(v78, 0, 1, 0, 1))
        {
          LODWORD(v206) = v74;
          v79 = (void *)sub_23B1C63BC();
          swift_beginAccess();
          v80 = *((_QWORD *)v77 + 2);
          swift_bridgeObjectRetain();
          v81 = sub_23AF40ED0((uint64_t)v79, v80);

          swift_bridgeObjectRelease();
          swift_release();
          if (v81)
          {
            v82 = (char *)sub_23B1C63BC();
            swift_bridgeObjectRelease();
            v56 = v203;
            sub_23AF41798((uint64_t)v213, v82, v203);
            v207 = v77;
            v205 = v82;
            v52 = v200;
            v110 = (*(uint64_t (**)(unint64_t, uint64_t, unint64_t))(v200 + 48))(v56, 1, v192);
            v208 = (void (*)(_QWORD *@<X8>))v73;
            if (v110 != 1)
              goto LABEL_112;
            sub_23AA8A05C(v56, (uint64_t *)&unk_2542E4750);
            LOBYTE(v21) = (_BYTE)v206;
            v14 = (unint64_t)v205;
            if ((*(_BYTE *)(v49 + 3) & 1) != 0)
              goto LABEL_145;
            v111 = sub_23ADC6C60();
            v112 = sub_23ADB9C24(v190);
            v113 = sub_23ADEB454(v112, v111);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v113 & 1) == 0)
              goto LABEL_145;
            v114 = v208;
            if (v213[3]
              && (v115 = *(_QWORD *)(a3 + OBJC_IVAR____TtC9libfssync4FPCK_diskVsFSSnapshotIgnoredFilenames),
                  v116 = sub_23B1C650C(),
                  LOBYTE(v115) = sub_23AA7E798(v116, v117, v115),
                  swift_bridgeObjectRelease(),
                  (v115 & 1) != 0)
              || (v22 = v209, (~v209 & 0x8000000080000) == 0))
            {
              swift_release();

              sub_23ADC6640(&v239, &v234, a3, (uint64_t)&v237, &v240, &v236, &v235);
              swift_release();
              swift_bridgeObjectRelease();
              sub_23AAB7948((uint64_t)v195);
              sub_23AAB7948((uint64_t)v194);
              v108 = (uint64_t)v114;
              goto LABEL_101;
            }
LABEL_127:
            if ((v22 & 0x8000000000000) != 0)
              goto LABEL_145;
            v136 = v234;
            if ((v234 & 1) == 0)
            {
              v136 = v234 | 1;
              v234 |= 1uLL;
            }
            goto LABEL_146;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_23ADC6640(&v239, &v234, a3, (uint64_t)&v237, &v240, &v236, &v235);
    swift_release();
    swift_bridgeObjectRelease();
    sub_23AAB7948((uint64_t)v195);
    sub_23AAB7948((uint64_t)v194);
    v108 = v73;
    goto LABEL_101;
  }
  type metadata accessor for FSRepair();
  v83 = swift_allocObject();
  v235 = 0;
  v236 = 0;
  v212 = (_QWORD *)v83;
  if (!v83)
  {
    v212 = 0;
    v73 = 0;
    goto LABEL_57;
  }
  v73 = v209;
  if (!v209)
  {
    v74 = 0;
    goto LABEL_58;
  }
  v84 = a3 + OBJC_IVAR____TtC9libfssync4FPCK_rootURL;
  v205 = (char *)OBJC_IVAR____TtC9libfssync4FPCK_sqlDatabase;
  a3 += OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskBrokenInvariantsCounters;
  swift_retain();
  v206 = (void (*)(_QWORD *@<X8>))v84;
  swift_beginAccess();
  v208 = 0;
  while (1)
  {
    v85 = __clz(__rbit64(v73));
    v86 = v73 & ~(1 << v85);
    if (((1 << v85) & v73) == 0)
      v86 = v73;
    if (v85 >= 0x40)
      v87 = 0;
    else
      v87 = 1 << v85;
    if (v85 < 0x40)
      v73 = v86;
    v88 = v237;
    v89 = v238;
    sub_23AA8EFC8((uint64_t)v206, v72, (uint64_t *)&unk_2542E6740);
    v21 = sub_23B1C5A08();
    v90 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int64_t))(v90 + 48))(v72, 1, v21) == 1)
      goto LABEL_188;
    v91 = *(_QWORD *)&v205[v210];
    swift_retain();
    swift_bridgeObjectRetain();
    v92 = sub_23AC31C24(v87, v211, v213, v88, v89, v72, v91, v209);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, int64_t))(v90 + 8))(v72, v21);
    if ((v92 & 1) == 0)
      goto LABEL_68;
    swift_beginAccess();
    sub_23AAB7948((uint64_t)v208);
    v93 = swift_isUniquelyReferenced_nonNull_native();
    v218[0] = *(_QWORD *)a3;
    v94 = v218[0];
    *(_QWORD *)a3 = 0x8000000000000000;
    v14 = sub_23ACD61DC(v87);
    v96 = *(_QWORD *)(v94 + 16);
    v22 = (v95 & 1) == 0;
    v97 = v96 + v22;
    if (__OFADD__(v96, v22))
      goto LABEL_125;
    LOBYTE(v21) = v95;
    if (*(_QWORD *)(v94 + 24) >= v97)
    {
      if ((v93 & 1) == 0)
      {
        sub_23B18AFE0();
        v94 = v218[0];
      }
    }
    else
    {
      sub_23AD183EC(v97, v93);
      type metadata accessor for BrokenInvariants(0);
      v94 = v218[0];
      v98 = sub_23ACD61DC(v87);
      if ((v21 & 1) != (v99 & 1))
        goto LABEL_234;
      v14 = v98;
    }
    *(_QWORD *)a3 = v94;
    swift_bridgeObjectRelease();
    v100 = *(_QWORD **)a3;
    if ((v21 & 1) == 0)
      break;
    swift_bridgeObjectRetain();
LABEL_91:
    v106 = v100[7];
    v107 = *(_QWORD *)(v106 + 8 * v14);
    v68 = __OFADD__(v107, 1);
    v22 = v107 + 1;
    if (v68)
      goto LABEL_126;
    *(_QWORD *)(v106 + 8 * v14) = v22;
    swift_endAccess();
    swift_bridgeObjectRelease();
    v208 = sub_23AAED18C;
    if ((v87 & ~v236) != 0)
    {
      v236 |= v87;
      v208 = sub_23AAED18C;
    }
LABEL_68:
    if (!v73)
    {
      swift_release();
      v74 = 0;
      a3 = v210;
      v73 = (unint64_t)v208;
      v49 = v204;
      goto LABEL_58;
    }
  }
  v100[(v14 >> 6) + 8] |= 1 << v14;
  v101 = 8 * v14;
  *(_QWORD *)(v100[6] + v101) = v87;
  *(_QWORD *)(v100[7] + v101) = 0;
  v102 = v100[2];
  v103 = v102 + 1;
  v104 = __OFADD__(v102, 1);
  swift_bridgeObjectRetain();
  if (!v104)
  {
    v100[2] = v103;
    v72 = (uint64_t)v207;
    goto LABEL_91;
  }
  __break(1u);
LABEL_131:
  if ((v105 & 0x800000000) == 0)
  {
    v133 = v105 | 0x800000000;
LABEL_133:
    v234 = v133;
  }
LABEL_134:
  sub_23ADD6ED0((uint64_t)v216);
  sub_23AA724E8((uint64_t)v216, (uint64_t)v217, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v217, (uint64_t)v218, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v218) != 1)
  {
    sub_23AA724E8((uint64_t)v217, (uint64_t)v215, qword_2542E6E20);
    sub_23ACFC940((uint64_t)v215);
    if (qword_2542E7190 != -1)
      goto LABEL_232;
    goto LABEL_139;
  }
  swift_release();
  swift_setDeallocating();
  sub_23AA724E8(v209, (uint64_t)v215, &qword_2542DF240);
  sub_23ADF2D34((uint64_t)v215, (voidsub_23ADF2A2C);
  swift_deallocClassInstance();
  if ((v234 & 1) == 0)
    v234 |= 1uLL;
  sub_23AA8A05C((uint64_t)v191, (uint64_t *)&unk_2542E6B00);
LABEL_144:
  a3 = v210;
LABEL_145:
  v136 = v234;
  if (!v234)
    goto LABEL_193;
LABEL_146:
  v137 = 0;
  v138 = (_QWORD *)(a3 + OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskVsFSSnapshotDiffCounters);
  do
  {
    v139 = a3;
    v140 = __clz(__rbit64(v136));
    v141 = v136 & ~(1 << v140);
    if (((1 << v140) & v136) == 0)
      v141 = v136;
    if (v140 >= 0x40)
      v142 = 0;
    else
      v142 = 1 << v140;
    if (v140 < 0x40)
      v136 = v141;
    swift_beginAccess();
    sub_23AAB7948((uint64_t)v137);
    v143 = swift_isUniquelyReferenced_nonNull_native();
    v218[0] = *v138;
    v144 = v218[0];
    *v138 = 0x8000000000000000;
    v14 = sub_23ACD61E8(v142);
    v146 = *(_QWORD *)(v144 + 16);
    v147 = (v145 & 1) == 0;
    v148 = v146 + v147;
    if (__OFADD__(v146, v147))
    {
      __break(1u);
LABEL_174:
      __break(1u);
      goto LABEL_175;
    }
    v149 = v145;
    if (*(_QWORD *)(v144 + 24) >= v148)
    {
      if ((v143 & 1) == 0)
      {
        sub_23B18AFD4();
        v144 = v218[0];
      }
    }
    else
    {
      sub_23AD183D8(v148, v143);
      v144 = v218[0];
      v150 = sub_23ACD61E8(v142);
      if ((v149 & 1) != (v151 & 1))
        goto LABEL_236;
      v14 = v150;
    }
    a3 = v139;
    *v138 = v144;
    swift_bridgeObjectRelease();
    v152 = (_QWORD *)*v138;
    if ((v149 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v152[(v14 >> 6) + 8] |= 1 << v14;
      v153 = 8 * v14;
      *(_QWORD *)(v152[6] + v153) = v142;
      *(_QWORD *)(v152[7] + v153) = 0;
      v154 = v152[2];
      v155 = v154 + 1;
      v156 = __OFADD__(v154, 1);
      swift_bridgeObjectRetain();
      if (v156)
      {
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        sub_23ADF2D34((uint64_t)v217, (voidsub_23AAAEC3C);
        goto LABEL_190;
      }
      v152[2] = v155;
    }
    v157 = v152[7];
    v158 = *(_QWORD *)(v157 + 8 * v14);
    v68 = __OFADD__(v158, 1);
    v159 = v158 + 1;
    if (v68)
      goto LABEL_174;
    *(_QWORD *)(v157 + 8 * v14) = v159;
    swift_endAccess();
    swift_bridgeObjectRelease();
    v137 = sub_23AAED18C;
  }
  while (v136);

  v160 = sub_23AAED18C;
LABEL_194:
  v163 = v208;
  if ((v21 & 1) != 0)
  {
    v134 = 0;
    goto LABEL_227;
  }
  v164 = v234;
  if (v234)
  {
    v206 = v160;
    v165 = (_QWORD *)(a3 + OBJC_IVAR____TtC9libfssync4FPCK_repairedDiskVsFSSnapshotDiffCounters);
    v166 = v237;
    v167 = v238;
    v168 = v235;
    swift_retain();
    v134 = 0;
    v209 = v166;
    while (1)
    {
      v169 = __clz(__rbit64(v164));
      v170 = v164 & ~(1 << v169);
      if (((1 << v169) & v164) == 0)
        v170 = v164;
      if (v169 >= 0x40)
        v21 = 0;
      else
        v21 = 1 << v169;
      if (v169 < 0x40)
        v164 = v170;
      swift_bridgeObjectRetain();
      v171 = sub_23AC36B88(v21, v211, (uint64_t)v213, v166, v167);
      swift_bridgeObjectRelease();
      if ((v171 & 1) != 0)
      {
        swift_beginAccess();
        sub_23AAB7948((uint64_t)v134);
        v172 = swift_isUniquelyReferenced_nonNull_native();
        v218[0] = *v165;
        v173 = v218[0];
        *v165 = 0x8000000000000000;
        v14 = sub_23ACD61E8(v21);
        v175 = *(_QWORD *)(v173 + 16);
        v176 = (v174 & 1) == 0;
        v177 = v175 + v176;
        if (__OFADD__(v175, v176))
        {
          __break(1u);
LABEL_230:
          __break(1u);
LABEL_231:
          __break(1u);
LABEL_232:
          swift_once();
LABEL_139:
          if ((v220 & (qword_2542EDE38 | 0x10)) != 0 || (v219 & 0x51) != 0 || (v228 & (qword_2542EDE38 | 0x10)) != 0)
          {
LABEL_142:
            sub_23ADF2D34((uint64_t)v217, (voidsub_23AAAEC3C);
            goto LABEL_143;
          }
LABEL_175:
          if ((v227 & 0x51) != 0
            || v222 == 1
            || v229 == 1
            || v221 != 3
            || v223 != 6
            || v226 != 3 && (v226 != 4 || v224 & 0xFFFFFFFFFFFFFFFELL | v225))
          {
            goto LABEL_142;
          }
          if (v232 == 3)
            goto LABEL_189;
          LOBYTE(v21) = (_BYTE)v206;
          v14 = (unint64_t)v205;
          if (v232 != 4)
            goto LABEL_142;
          v161 = v230 & 0xFFFFFFFFFFFFFFFELL | v231;
          sub_23ADF2D34((uint64_t)v217, (voidsub_23AAAEC3C);
          if (v161)
          {
LABEL_143:
            sub_23AA8A05C((uint64_t)v191, (uint64_t *)&unk_2542E6B00);
            sub_23ADF2D34((uint64_t)v217, (voidsub_23AAAEC3C);
            swift_setDeallocating();
            swift_release();
            sub_23AA724E8(v209, (uint64_t)v214, &qword_2542DF240);
            sub_23ADF2D34((uint64_t)v214, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23ADF2A2C);
            swift_deallocClassInstance();
            goto LABEL_144;
          }
LABEL_190:
          v162 = sub_23ADCEA2C((uint64_t)v213, (uint64_t)v191, *(_QWORD *)(v210 + v197));
          swift_release();
          swift_setDeallocating();
          sub_23AA724E8(v209, (uint64_t)v214, &qword_2542DF240);
          sub_23ADF2D34((uint64_t)v214, (voidsub_23ADF2A2C);
          swift_deallocClassInstance();
          sub_23ADF2D34((uint64_t)v217, (voidsub_23AAAEC3C);
          if ((v162 & ~v234) != 0)
            v234 |= v162;
          sub_23AA8A05C((uint64_t)v191, (uint64_t *)&unk_2542E6B00);
          a3 = v210;
          LOBYTE(v21) = (_BYTE)v206;
          v14 = (unint64_t)v205;
          v136 = v234;
          if (v234)
            goto LABEL_146;
LABEL_193:

          v160 = 0;
          goto LABEL_194;
        }
        v178 = v174;
        if (*(_QWORD *)(v173 + 24) >= v177)
        {
          if ((v172 & 1) == 0)
          {
            sub_23B18AFD4();
            v173 = v218[0];
          }
        }
        else
        {
          sub_23AD183D8(v177, v172);
          v173 = v218[0];
          v179 = sub_23ACD61E8(v21);
          if ((v178 & 1) != (v180 & 1))
            goto LABEL_236;
          v14 = v179;
        }
        *v165 = v173;
        swift_bridgeObjectRelease();
        v181 = (_QWORD *)*v165;
        if ((v178 & 1) != 0)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          v181[(v14 >> 6) + 8] |= 1 << v14;
          v182 = 8 * v14;
          *(_QWORD *)(v181[6] + v182) = v21;
          *(_QWORD *)(v181[7] + v182) = 0;
          v183 = v181[2];
          v184 = v183 + 1;
          v185 = __OFADD__(v183, 1);
          swift_bridgeObjectRetain();
          if (v185)
            goto LABEL_231;
          v181[2] = v184;
        }
        v186 = v181[7];
        v187 = *(_QWORD *)(v186 + 8 * v14);
        v68 = __OFADD__(v187, 1);
        v188 = v187 + 1;
        if (v68)
          goto LABEL_230;
        *(_QWORD *)(v186 + 8 * v14) = v188;
        swift_endAccess();
        swift_bridgeObjectRelease();
        if ((v21 & ~v168) != 0)
          v189 = v21;
        else
          v189 = 0;
        v168 |= v189;
        v134 = sub_23AAED18C;
        v166 = v209;
      }
      if (!v164)
      {
        v235 = v168;
        swift_release();
        a3 = v210;
        v163 = v208;
        v160 = v206;
        goto LABEL_227;
      }
    }
  }
  v134 = 0;
  v163 = v208;
LABEL_227:
  swift_release();
  sub_23ADC6640(&v239, &v234, a3, (uint64_t)&v237, &v240, &v236, &v235);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23AAB7948((uint64_t)v195);
  sub_23AAB7948((uint64_t)v194);
  sub_23AAB7948((uint64_t)v163);
  v135 = v160;
LABEL_228:
  sub_23AAB7948((uint64_t)v135);
  v108 = (uint64_t)v134;
LABEL_101:
  sub_23AAB7948(v108);
  LOBYTE(v24) = v196;
  return v24 & 1;
}

BOOL sub_23ADEF094(_OWORD *a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  id v35;
  void *v36;
  id v37;
  int v38;
  id v39;
  unsigned int v40;
  id v42;
  char v43;
  id v44;
  int v45;
  id v46;
  _OWORD v47[15];
  _BYTE v48[16];
  uint64_t v49;
  unsigned __int8 v50;
  _BYTE v51[24];

  v9 = a1[13];
  v47[12] = a1[12];
  v47[13] = v9;
  v47[14] = a1[14];
  v10 = a1[9];
  v47[8] = a1[8];
  v47[9] = v10;
  v11 = a1[11];
  v47[10] = a1[10];
  v47[11] = v11;
  v12 = a1[5];
  v47[4] = a1[4];
  v47[5] = v12;
  v13 = a1[7];
  v47[6] = a1[6];
  v47[7] = v13;
  v14 = a1[1];
  v47[0] = *a1;
  v47[1] = v14;
  v15 = a1[3];
  v47[2] = a1[2];
  v47[3] = v15;
  sub_23AA724E8((uint64_t)v47, (uint64_t)v48, (uint64_t *)&unk_2542E7420);
  sub_23AA724E8((uint64_t)v48, (uint64_t)&v49, (uint64_t *)&unk_2542E7420);
  if (v50 == 255)
    return 0;
  sub_23AA9F454(&v49, (uint64_t)v51);
  if (!a5)
    return 1;
  v16 = sub_23B1C63E0();
  if (!*(_QWORD *)(a5 + 16))
    goto LABEL_10;
  v18 = sub_23AAAF4C4(v16, v17);
  if ((v19 & 1) == 0)
    goto LABEL_10;
  v20 = *(id *)(*(_QWORD *)(a5 + 56) + 8 * v18);
  swift_bridgeObjectRelease();
  objc_opt_self();
  v21 = (id)swift_dynamicCastObjCClass();
  if (!v21)
  {

    goto LABEL_12;
  }
  v22 = sub_23B1C63E0();
  if (!*(_QWORD *)(a5 + 16) || (v24 = sub_23AAAF4C4(v22, v23), (v25 & 1) == 0))
  {

LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    v21 = 0;
    goto LABEL_12;
  }
  v26 = *(id *)(*(_QWORD *)(a5 + 56) + 8 * v24);
  swift_bridgeObjectRelease();
  objc_opt_self();
  v27 = swift_dynamicCastObjCClass();
  if (!v27)
  {

    goto LABEL_11;
  }
  v28 = (void *)v27;
  sub_23B1C63E0();
  v46 = objc_msgSend(v28, sel_integerValue);
  v29 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v30 = (void *)sub_23B1C63BC();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v29, sel_initWithDomain_code_userInfo_, v30, v46, 0);

LABEL_12:
  v31 = sub_23B1C63E0();
  if (*(_QWORD *)(a5 + 16) && (v33 = sub_23AAAF4C4(v31, v32), (v34 & 1) != 0))
  {
    v35 = *(id *)(*(_QWORD *)(a5 + 56) + 8 * v33);
    swift_bridgeObjectRelease();
    objc_opt_self();
    v36 = (void *)swift_dynamicCastObjCClass();
    if (v36)
    {
      v37 = objc_msgSend(v36, sel_integerValue);

      v38 = 0;
      goto LABEL_18;
    }

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v37 = 0;
  v38 = 1;
LABEL_18:
  v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE313B0]), sel_init);
  v40 = objc_msgSend(v39, sel_avoidNilErrorItemsForDetailedPayload);

  if (v40)
  {
    if (!v21)
      return a2 != 0;
LABEL_23:
    v42 = v21;
    if ((sub_23ADECA88() & 1) != 0)
    {
      if (!a2)
      {

LABEL_37:
        return 1;
      }
      v43 = sub_23ADECA88();

      if ((v43 & 1) == 0)
        goto LABEL_37;
    }
    else
    {

      if (!a2)
      {
LABEL_29:

        return 0;
      }
    }
    if (((a4 | v38) & 1) == 0)
    {
      v44 = a2;
      v45 = sub_23ADECA88();

      return ((uint64_t)v37 < a3) & ~v45;
    }
    goto LABEL_29;
  }
  if (v21)
    goto LABEL_23;
  return 0;
}

uint64_t sub_23ADEF42C(void *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  _BYTE v11[496];
  _BYTE v12[496];
  _BYTE v13[24];
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[496];

  sub_23AA724E8(a2, (uint64_t)v12, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v12, (uint64_t)v16, qword_2542E6E20);
  sub_23AA724E8(a2, (uint64_t)v13, qword_2542E6E20);
  if (sub_23AAFC2A4((uint64_t)v13) == 1)
  {
    sub_23ADF1C70();
    v4 = swift_allocError();
    *v5 = 0x8000000000000030;
  }
  else
  {
    v6 = v14;
    v7 = v15;
    sub_23AA724E8((uint64_t)v16, (uint64_t)v11, qword_2542E6E20);
    sub_23ACFC940((uint64_t)v11);
    if (objc_msgSend(a1, sel_code) == (id)255)
    {
      if ((v6 & 8) != 0)
      {
        sub_23ADF1C70();
        v4 = swift_allocError();
        v9 = 0x8000000000000008;
      }
      else if ((v7 & 8) != 0)
      {
        sub_23ADF1C70();
        v4 = swift_allocError();
        v9 = 0x8000000000000018;
      }
      else if (v6)
      {
        sub_23ADF1C70();
        v4 = swift_allocError();
        v9 = 0x8000000000000010;
      }
      else
      {
        sub_23ADF1C70();
        v4 = swift_allocError();
        if (v7)
          v9 = 0x8000000000000020;
        else
          v9 = 0x8000000000000028;
      }
      *v8 = v9;
      sub_23ADF2D34(a2, (voidsub_23AAAEC3C);
    }
    else
    {
      sub_23ADF2D34(a2, (voidsub_23AAAEC3C);
      return 0;
    }
  }
  return v4;
}

void sub_23ADEF614(id a1@<X0>, uint64_t a2@<X1>, uint8_t *a3@<X2>, unsigned __int8 a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X8>)
{
  id v9;
  _QWORD *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint8_t *v41;
  uint64_t v42;
  void *v43;
  uint8_t *v44;
  unsigned __int8 v46;
  id v49;
  uint8_t *v50;
  unsigned __int8 v51;

  v44 = a3;
  v46 = a4;
  if (a4 >= 0xFBu)
  {
    sub_23AA724E8(a2, (uint64_t)&v50, qword_2542E6E20);
    if (sub_23AAFC2A4((uint64_t)&v50) == 1)
    {
      a3 = 0;
      a4 = -1;
    }
    else
    {
      a3 = v50;
      a4 = v51;
    }
  }
  v40 = a4;
  v41 = a3;
  v42 = a2;
  if (a1)
  {
    v9 = a1;
  }
  else
  {
    sub_23ADF1C70();
    v9 = (id)swift_allocError();
    *v10 = 0x8000000000000000;
  }
  v11 = a1;
  v12 = (void *)sub_23B1C5870();

  v13 = v12;
  v14 = objc_msgSend(v13, sel_underlyingErrors);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  v15 = sub_23B1C6704();

  v43 = v13;
  v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v15 + 16))
  {
    v17 = 11;
    while (1)
    {
      v18 = *(id *)(v15 + 32);
      swift_bridgeObjectRelease();
      sub_23AA9F52C(0, (unint64_t *)&qword_2542E2000);
      if ((swift_dynamicCast() & 1) == 0)
        break;
      v12 = v49;
      v19 = objc_msgSend(v49, sel_domain);
      v20 = sub_23B1C63E0();
      v22 = v21;

      sub_23B1C64F4();
      v49 = objc_msgSend(v49, sel_code);
      sub_23B1C7304();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_23AF983F4(0, v16[2] + 1, 1, v16);
      v24 = v16[2];
      v23 = v16[3];
      if (v24 >= v23 >> 1)
        v16 = sub_23AF983F4((_QWORD *)(v23 > 1), v24 + 1, 1, v16);
      v16[2] = v24 + 1;
      v25 = &v16[2 * v24];
      v25[4] = v20;
      v25[5] = v22;

      if (!--v17)
        break;
      v26 = objc_msgSend(v12, sel_underlyingErrors);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      v15 = sub_23B1C6704();

      v13 = v12;
      if (!*(_QWORD *)(v15 + 16))
        goto LABEL_17;
    }
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
  }
  v27 = (void *)sub_23ADC94DC(v43, v42, v41, v40);
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, sel_domain);
    v30 = sub_23B1C63E0();
    v32 = v31;

    sub_23B1C64F4();
    objc_msgSend(v28, sel_code);
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_23AF983F4(0, v16[2] + 1, 1, v16);
    v34 = v16[2];
    v33 = v16[3];
    if (v34 >= v33 >> 1)
      v16 = sub_23AF983F4((_QWORD *)(v33 > 1), v34 + 1, 1, v16);
    v16[2] = v34 + 1;
    v35 = &v16[2 * v34];
    v35[4] = v30;
    v35[5] = v32;

  }
  v36 = objc_msgSend(v43, sel_domain);
  v37 = sub_23B1C63E0();
  v39 = v38;

  sub_23B1C64F4();
  objc_msgSend(v43, sel_code);
  sub_23B1C7304();
  sub_23B1C64F4();

  swift_bridgeObjectRelease();
  *(_QWORD *)a7 = v37;
  *(_QWORD *)(a7 + 8) = v39;
  *(_QWORD *)(a7 + 16) = 1;
  *(_QWORD *)(a7 + 24) = v44;
  *(_BYTE *)(a7 + 32) = v46;
  *(_BYTE *)(a7 + 33) = a5;
  *(_BYTE *)(a7 + 34) = a6;
  *(_QWORD *)(a7 + 40) = v16;
}

void sub_23ADEFAD4()
{
  sub_23B1C6EFC();
  sub_23B1C64F4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
  sub_23B1C7028();
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23ADEFB8C(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t (*v21)(char *, uint64_t);
  void *v22;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  id v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  const void *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  id v66;
  const void *v67;
  id v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  char *v80;
  int v81;
  const void *v82;
  id v83;
  uint64_t (*v84)(char *, uint64_t);
  char *v85;
  uint64_t v86;
  _QWORD aBlock[6];
  uint64_t v88;

  v83 = a4;
  v81 = a3;
  v4 = sub_23B1C5570();
  v76 = *(_QWORD *)(v4 - 8);
  v77 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v75 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4E70);
  MEMORY[0x24BDAC7A8](v6);
  v80 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23B1C5A08();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v74 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v85 = (char *)&v74 - v16;
  sub_23B1C5918();
  aBlock[4] = sub_23AFE01B4;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23B135DF8;
  aBlock[3] = &block_descriptor_141;
  v17 = _Block_copy(aBlock);
  v18 = (void *)objc_opt_self();
  _Block_copy(v17);
  v19 = objc_msgSend(v18, sel_fp_insecureTempDirectoryIgnoringPersona);
  sub_23B1C59CC();

  type metadata accessor for ReadOnlyWharf();
  swift_allocObject();
  v78 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v78(v12, v15, v8);
  v82 = v17;
  v20 = (void *)sub_23B1AD8A4(0x4F52236672616877, 0xE800000000000000, (uint64_t)v12, v17, 0x100000000uLL, 0, 0);
  v21 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v79 = v15;
  v86 = v8;
  v84 = v21;
  v21(v15, v8);
  v22 = (void *)objc_opt_self();
  swift_retain();
  v23 = objc_msgSend(v22, sel_defaultStore);
  v24 = (int)objc_msgSend(v23, sel_softConcurrentOperationLimit);
  LODWORD(v19) = objc_msgSend(v23, sel_hardConcurrentOperationLimit);

  type metadata accessor for JobLimit();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = 0;
  v25[3] = v24;
  v25[4] = v24;
  v25[5] = (int)v19;
  v26 = objc_msgSend(v22, (SEL)&selRef_initWithPhysicalLocation_rootURL_error_);
  v27 = (int)objc_msgSend(v26, sel_softConcurrentContentUpdateLimit);
  LODWORD(v17) = objc_msgSend(v26, sel_hardConcurrentContentUpdateLimit);

  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = v27;
  v28[4] = v27;
  v28[5] = (int)v17;
  v29 = objc_msgSend(v22, (SEL)&selRef_initWithPhysicalLocation_rootURL_error_);
  v30 = (int)objc_msgSend(v29, sel_softConcurrentMetadataOnlyUpdateLimit);
  LODWORD(v17) = objc_msgSend(v29, sel_hardConcurrentMetadataOnlyUpdateLimit);

  v31 = (int)v17;
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = 0;
  v32[3] = v30;
  v32[4] = v30;
  v32[5] = v31;
  v33 = objc_msgSend(v22, (SEL)&selRef_initWithPhysicalLocation_rootURL_error_);
  v34 = (int)objc_msgSend(v33, sel_softConcurrentProvideFileLimit);
  LODWORD(v30) = objc_msgSend(v33, sel_hardConcurrentProvideFileLimit);

  v35 = (int)v30;
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = 0;
  v36[3] = v34;
  v36[4] = v34;
  v36[5] = v35;
  type metadata accessor for RestoreUpgradeSchemaVFSFileTree(0);
  swift_allocObject();
  v88 = sub_23B14910C((uint64_t)v20, (uint64_t)v25, (uint64_t)v28, (uint64_t)v32, (uint64_t)v36);
  swift_retain();
  v37 = objc_msgSend(v22, sel_defaultStore);
  v38 = (int)objc_msgSend(v37, sel_softConcurrentOperationLimit);
  LODWORD(v25) = objc_msgSend(v37, sel_hardConcurrentOperationLimit);

  v39 = (int)v25;
  v40 = (_QWORD *)swift_allocObject();
  v40[2] = 0;
  v40[3] = v38;
  v40[4] = v38;
  v40[5] = v39;
  v41 = objc_msgSend(v22, sel_defaultStore);
  v42 = (int)objc_msgSend(v41, sel_softConcurrentContentUpdateLimit);
  LODWORD(v38) = objc_msgSend(v41, sel_hardConcurrentContentUpdateLimit);

  v43 = (_QWORD *)swift_allocObject();
  v43[2] = 0;
  v43[3] = v42;
  v43[4] = v42;
  v43[5] = (int)v38;
  v44 = objc_msgSend(v22, sel_defaultStore);
  v45 = (int)objc_msgSend(v44, sel_softConcurrentMetadataOnlyUpdateLimit);
  LODWORD(v38) = objc_msgSend(v44, sel_hardConcurrentMetadataOnlyUpdateLimit);

  v46 = (int)v38;
  v47 = (_QWORD *)swift_allocObject();
  v47[2] = 0;
  v47[3] = v45;
  v47[4] = v45;
  v47[5] = v46;
  v48 = objc_msgSend(v22, sel_defaultStore);
  v49 = (int)objc_msgSend(v48, sel_softConcurrentProvideFileLimit);
  LODWORD(v22) = objc_msgSend(v48, sel_hardConcurrentProvideFileLimit);

  v50 = (_QWORD *)swift_allocObject();
  v50[2] = 0;
  v50[3] = v49;
  v50[4] = v49;
  v50[5] = (int)v22;
  type metadata accessor for RestoreUpgradeSchemaFPFileTree(0);
  swift_allocObject();
  v51 = sub_23B1490F0((uint64_t)v20, (uint64_t)v40, (uint64_t)v43, (uint64_t)v47, (uint64_t)v50);
  v52 = objc_msgSend(v83, sel_fileDescriptor);
  v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC8258]), sel_initWithFd_forceColor_, v52, 1);
  if (v53)
  {
    v54 = v53;
    v83 = v20;
    v55 = v82;
    v56 = (uint64_t)v79;
    v57 = (_QWORD *)v88;
    v59 = v85;
    v58 = v86;
    v78(v79, v85, v86);
    v60 = type metadata accessor for TelemetrySignposter(0);
    v61 = (uint64_t)v80;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v80, 1, 1, v60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69F0);
    v62 = swift_allocObject();
    swift_retain();
    swift_retain();
    v63 = sub_23AE3280C(v56, v57, v51, v61, 1uLL, 1886221668, 0xE400000000000000, v62);
    v64 = v54;
    sub_23ADEB5B8(v64, (v81 & 1) == 0, 0, v63);

    v65 = (id)fpfs_adopt_log();
    sub_23ADD4598();
    if ((*(_BYTE *)(v63 + qword_2542EDE58) & 1) == 0)
    {
      v66 = *(id *)(v63 + 64);
      sub_23AC494B4(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_23ACF20E0, v63);

    }
    v67 = v55;
    v68 = (id)fpfs_adopt_log();
    swift_release();

    swift_release();
    swift_release();
    swift_release();

    _Block_release(v67);
    v69 = v59;
    v70 = v58;
  }
  else
  {
    LODWORD(aBlock[0]) = 9;
    sub_23AAB75BC(MEMORY[0x24BEE4AF8]);
    sub_23AA7E38C((unint64_t *)&qword_2542E42F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAFE0], MEMORY[0x24BDCAFD8]);
    v71 = v75;
    v72 = v77;
    sub_23B1C5864();
    sub_23B1C5558();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v72);
    swift_willThrow();
    swift_release();
    swift_release();
    swift_release();
    _Block_release(v82);
    v69 = v85;
    v70 = v86;
  }
  return v84(v69, v70);
}

uint64_t sub_23ADF0418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23ADF0460(a1, a2, a3, &qword_2542DF378, (uint64_t)&unk_23B1D9730, &qword_2569E5A80, (uint64_t)&unk_23B1D9708);
}

uint64_t sub_23ADF043C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23ADF0460(a1, a2, a3, &qword_2569E5A88, (uint64_t)&unk_23B1D9790, &qword_2569E5A90, (uint64_t)&unk_23B1D9774);
}

uint64_t sub_23ADF0460(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6, uint64_t a7)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23AA7E38C(a4, (uint64_t (*)(uint64_t))type metadata accessor for BrokenInvariants, a5);
  result = sub_23AA7E38C(a6, (uint64_t (*)(uint64_t))type metadata accessor for BrokenInvariants, a7);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23ADF04BC()
{
  return sub_23AA7E38C((unint64_t *)&unk_2542DF380, (uint64_t (*)(uint64_t))type metadata accessor for BrokenInvariants, (uint64_t)&unk_23B1CC998);
}

unint64_t sub_23ADF04EC()
{
  unint64_t result;

  result = qword_2569E5A98;
  if (!qword_2569E5A98)
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE1EC0], MEMORY[0x24BEE1E88]);
    atomic_store(result, (unint64_t *)&qword_2569E5A98);
  }
  return result;
}

uint64_t sub_23ADF0530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23ADF0460(a1, a2, a3, &qword_2569E5AC0, (uint64_t)&unk_23B1CC960, &qword_2569E5AC8, (uint64_t)&unk_23B1D97BC);
}

uint64_t sub_23ADF0554()
{
  return sub_23AAB5A28(&qword_2569E5AD0, &qword_2569E5AD8, (uint64_t)&unk_23B1DD070);
}

uint64_t sub_23ADF0580()
{
  return type metadata accessor for FPCKDetachedRoot(0);
}

void sub_23ADF0588()
{
  unint64_t v0;
  unint64_t v1;

  sub_23B1C5A08();
  if (v0 <= 0x3F)
  {
    sub_23AB6BBDC();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

ValueMetadata *type metadata accessor for FPCKRunningMode()
{
  return &type metadata for FPCKRunningMode;
}

uint64_t destroy for PendingSetErrorDetails()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PendingSetErrorDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PendingSetErrorDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PendingSetErrorDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PendingSetErrorDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PendingSetErrorDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PendingSetErrorDetails()
{
  return &type metadata for PendingSetErrorDetails;
}

uint64_t sub_23ADF07C4()
{
  return type metadata accessor for FPCK(0);
}

void sub_23ADF07CC()
{
  unint64_t v0;

  sub_23AB6BBDC();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

ValueMetadata *type metadata accessor for BackupManifestVsFSSnapshotDiffs()
{
  return &type metadata for BackupManifestVsFSSnapshotDiffs;
}

ValueMetadata *type metadata accessor for ReconciliationTableBrokenInvariants()
{
  return &type metadata for ReconciliationTableBrokenInvariants;
}

ValueMetadata *type metadata accessor for FSSnapshotVersusFPSnapshotDiffs()
{
  return &type metadata for FSSnapshotVersusFPSnapshotDiffs;
}

ValueMetadata *type metadata accessor for DiskVersusFSSnapshotDiffs()
{
  return &type metadata for DiskVersusFSSnapshotDiffs;
}

uint64_t getEnumTagSinglePayload for ErrorDirection(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 > 2)
    v4 = (v3 ^ 0xFF) + 1;
  else
    v4 = 0;
  if (v4 >= 6)
    return v4 - 5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ErrorDirection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -5 - a2;
  }
  return result;
}

uint64_t sub_23ADF09D4(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 8);
  if (v1 > 2)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_23ADF09E8(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
  }
  else if (a2)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorDirection()
{
  return &type metadata for ErrorDirection;
}

uint64_t storeEnumTagSinglePayload for PendingSetErrorDetails.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23ADF0A6C + 4 * byte_23B1D9633[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23ADF0AA0 + 4 * byte_23B1D962E[v4]))();
}

uint64_t sub_23ADF0AA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23ADF0AA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23ADF0AB0);
  return result;
}

uint64_t sub_23ADF0ABC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23ADF0AC4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23ADF0AC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23ADF0AD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PendingSetErrorDetails.CodingKeys()
{
  return &type metadata for PendingSetErrorDetails.CodingKeys;
}

unint64_t sub_23ADF0AF0()
{
  unint64_t result;

  result = qword_2569E5BC8;
  if (!qword_2569E5BC8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9AC4, &type metadata for PendingSetErrorDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E5BC8);
  }
  return result;
}

unint64_t sub_23ADF0B38()
{
  unint64_t result;

  result = qword_2542DF268;
  if (!qword_2542DF268)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9CE4, &type metadata for DiskVersusFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2542DF268);
  }
  return result;
}

unint64_t sub_23ADF0B80()
{
  unint64_t result;

  result = qword_2569E5BD0;
  if (!qword_2569E5BD0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9B14, &type metadata for DiskVersusFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5BD0);
  }
  return result;
}

uint64_t sub_23ADF0BC4()
{
  return sub_23AAB5A28(&qword_2569E5BD8, &qword_2569E5BE0, (uint64_t)&unk_23B1DD070);
}

unint64_t sub_23ADF0BF4()
{
  unint64_t result;

  result = qword_2569E5BE8;
  if (!qword_2569E5BE8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9B44, &type metadata for DiskVersusFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5BE8);
  }
  return result;
}

unint64_t sub_23ADF0C3C()
{
  unint64_t result;

  result = qword_2569E5BF0;
  if (!qword_2569E5BF0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9B7C, &type metadata for DiskVersusFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5BF0);
  }
  return result;
}

unint64_t sub_23ADF0C84()
{
  unint64_t result;

  result = qword_2542DE8A8;
  if (!qword_2542DE8A8)
  {
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE45A0], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_2542DE8A8);
  }
  return result;
}

uint64_t sub_23ADF0CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23ADF0CDC, (uint64_t (*)(void))sub_23ADF0D20);
}

unint64_t sub_23ADF0CDC()
{
  unint64_t result;

  result = qword_2569E5C18;
  if (!qword_2569E5C18)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9CAC, &type metadata for DiskVersusFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5C18);
  }
  return result;
}

unint64_t sub_23ADF0D20()
{
  unint64_t result;

  result = qword_2569E5C20;
  if (!qword_2569E5C20)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9C44, &type metadata for DiskVersusFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5C20);
  }
  return result;
}

uint64_t sub_23ADF0D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23ADF0D78, (uint64_t (*)(void))sub_23ADF0DBC);
}

unint64_t sub_23ADF0D78()
{
  unint64_t result;

  result = qword_2569E5C28;
  if (!qword_2569E5C28)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9D0C, &type metadata for DiskVersusFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5C28);
  }
  return result;
}

unint64_t sub_23ADF0DBC()
{
  unint64_t result;

  result = qword_2569E5C30;
  if (!qword_2569E5C30)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9D34, &type metadata for DiskVersusFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5C30);
  }
  return result;
}

uint64_t sub_23ADF0E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23ADA9B50, (uint64_t (*)(void))sub_23ADF0E14);
}

unint64_t sub_23ADF0E14()
{
  unint64_t result;

  result = qword_2569E5C38;
  if (!qword_2569E5C38)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9D90, &type metadata for DiskVersusFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5C38);
  }
  return result;
}

unint64_t sub_23ADF0E5C()
{
  unint64_t result;

  result = qword_2542DF2A0;
  if (!qword_2542DF2A0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9F98, &type metadata for FSSnapshotVersusFPSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2542DF2A0);
  }
  return result;
}

unint64_t sub_23ADF0EA4()
{
  unint64_t result;

  result = qword_2569E5C40;
  if (!qword_2569E5C40)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9DC8, &type metadata for FSSnapshotVersusFPSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5C40);
  }
  return result;
}

uint64_t sub_23ADF0EE8()
{
  return sub_23AAB5A28(&qword_2569E5C48, &qword_2569E5C50, (uint64_t)&unk_23B1DD070);
}

unint64_t sub_23ADF0F18()
{
  unint64_t result;

  result = qword_2569E5C58;
  if (!qword_2569E5C58)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9DF8, &type metadata for FSSnapshotVersusFPSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5C58);
  }
  return result;
}

unint64_t sub_23ADF0F60()
{
  unint64_t result;

  result = qword_2569E5C60;
  if (!qword_2569E5C60)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9E30, &type metadata for FSSnapshotVersusFPSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5C60);
  }
  return result;
}

uint64_t sub_23ADF0FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23ADF0FB8, (uint64_t (*)(void))sub_23ADF0FFC);
}

unint64_t sub_23ADF0FB8()
{
  unint64_t result;

  result = qword_2569E5C88;
  if (!qword_2569E5C88)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9F60, &type metadata for FSSnapshotVersusFPSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5C88);
  }
  return result;
}

unint64_t sub_23ADF0FFC()
{
  unint64_t result;

  result = qword_2569E5C90;
  if (!qword_2569E5C90)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9EF8, &type metadata for FSSnapshotVersusFPSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5C90);
  }
  return result;
}

uint64_t sub_23ADF1040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23ADF1054, (uint64_t (*)(void))sub_23ADF1098);
}

unint64_t sub_23ADF1054()
{
  unint64_t result;

  result = qword_2569E5C98;
  if (!qword_2569E5C98)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9FC0, &type metadata for FSSnapshotVersusFPSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5C98);
  }
  return result;
}

unint64_t sub_23ADF1098()
{
  unint64_t result;

  result = qword_2569E5CA0;
  if (!qword_2569E5CA0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9FE8, &type metadata for FSSnapshotVersusFPSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5CA0);
  }
  return result;
}

uint64_t sub_23ADF10DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23ADA9B0C, (uint64_t (*)(void))sub_23ADF10F0);
}

unint64_t sub_23ADF10F0()
{
  unint64_t result;

  result = qword_2569E5CA8;
  if (!qword_2569E5CA8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA044, &type metadata for FSSnapshotVersusFPSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5CA8);
  }
  return result;
}

unint64_t sub_23ADF1138()
{
  unint64_t result;

  result = qword_2542DF2B8;
  if (!qword_2542DF2B8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA24C, &type metadata for ReconciliationTableBrokenInvariants);
    atomic_store(result, (unint64_t *)&qword_2542DF2B8);
  }
  return result;
}

unint64_t sub_23ADF1180()
{
  unint64_t result;

  result = qword_2569E5CB0;
  if (!qword_2569E5CB0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA07C, &type metadata for ReconciliationTableBrokenInvariants);
    atomic_store(result, (unint64_t *)&qword_2569E5CB0);
  }
  return result;
}

uint64_t sub_23ADF11C4()
{
  return sub_23AAB5A28(&qword_2569E5CB8, &qword_2569E5CC0, (uint64_t)&unk_23B1DD070);
}

unint64_t sub_23ADF11F4()
{
  unint64_t result;

  result = qword_2569E5CC8;
  if (!qword_2569E5CC8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA0AC, &type metadata for ReconciliationTableBrokenInvariants);
    atomic_store(result, (unint64_t *)&qword_2569E5CC8);
  }
  return result;
}

unint64_t sub_23ADF123C()
{
  unint64_t result;

  result = qword_2569E5CD0;
  if (!qword_2569E5CD0)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA0E4, &type metadata for ReconciliationTableBrokenInvariants);
    atomic_store(result, (unint64_t *)&qword_2569E5CD0);
  }
  return result;
}

uint64_t sub_23ADF1280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23ADF1294, (uint64_t (*)(void))sub_23ADF12D8);
}

unint64_t sub_23ADF1294()
{
  unint64_t result;

  result = qword_2569E5CF8;
  if (!qword_2569E5CF8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA214, &type metadata for ReconciliationTableBrokenInvariants);
    atomic_store(result, (unint64_t *)&qword_2569E5CF8);
  }
  return result;
}

unint64_t sub_23ADF12D8()
{
  unint64_t result;

  result = qword_2569E5D00;
  if (!qword_2569E5D00)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA1AC, &type metadata for ReconciliationTableBrokenInvariants);
    atomic_store(result, (unint64_t *)&qword_2569E5D00);
  }
  return result;
}

uint64_t sub_23ADF131C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23ADF1330, (uint64_t (*)(void))sub_23ADF1374);
}

unint64_t sub_23ADF1330()
{
  unint64_t result;

  result = qword_2569E5D08;
  if (!qword_2569E5D08)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA274, &type metadata for ReconciliationTableBrokenInvariants);
    atomic_store(result, (unint64_t *)&qword_2569E5D08);
  }
  return result;
}

unint64_t sub_23ADF1374()
{
  unint64_t result;

  result = qword_2569E5D10;
  if (!qword_2569E5D10)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA29C, &type metadata for ReconciliationTableBrokenInvariants);
    atomic_store(result, (unint64_t *)&qword_2569E5D10);
  }
  return result;
}

uint64_t sub_23ADF13B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23ADA9AC8, (uint64_t (*)(void))sub_23ADF13CC);
}

unint64_t sub_23ADF13CC()
{
  unint64_t result;

  result = qword_2569E5D18;
  if (!qword_2569E5D18)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA2F8, &type metadata for ReconciliationTableBrokenInvariants);
    atomic_store(result, (unint64_t *)&qword_2569E5D18);
  }
  return result;
}

unint64_t sub_23ADF1414()
{
  unint64_t result;

  result = qword_2542DF290;
  if (!qword_2542DF290)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA500, &type metadata for BackupManifestVsFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2542DF290);
  }
  return result;
}

unint64_t sub_23ADF145C()
{
  unint64_t result;

  result = qword_2569E5D20;
  if (!qword_2569E5D20)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA330, &type metadata for BackupManifestVsFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5D20);
  }
  return result;
}

uint64_t sub_23ADF14A0()
{
  return sub_23AAB5A28(&qword_2569E5D28, &qword_2569E5D30, (uint64_t)&unk_23B1DD070);
}

unint64_t sub_23ADF14D0()
{
  unint64_t result;

  result = qword_2569E5D38;
  if (!qword_2569E5D38)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA360, &type metadata for BackupManifestVsFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5D38);
  }
  return result;
}

unint64_t sub_23ADF1518()
{
  unint64_t result;

  result = qword_2569E5D40;
  if (!qword_2569E5D40)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA398, &type metadata for BackupManifestVsFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5D40);
  }
  return result;
}

uint64_t sub_23ADF155C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23ADF1570, (uint64_t (*)(void))sub_23ADF15B4);
}

unint64_t sub_23ADF1570()
{
  unint64_t result;

  result = qword_2569E5D68;
  if (!qword_2569E5D68)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA4C8, &type metadata for BackupManifestVsFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5D68);
  }
  return result;
}

unint64_t sub_23ADF15B4()
{
  unint64_t result;

  result = qword_2569E5D70;
  if (!qword_2569E5D70)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA460, &type metadata for BackupManifestVsFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5D70);
  }
  return result;
}

uint64_t sub_23ADF15F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23AD83400(a1, a2, a3, (uint64_t (*)(void))sub_23ADF160C, (uint64_t (*)(void))sub_23ADF1650);
}

unint64_t sub_23ADF160C()
{
  unint64_t result;

  result = qword_2569E5D78;
  if (!qword_2569E5D78)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA528, &type metadata for BackupManifestVsFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5D78);
  }
  return result;
}

unint64_t sub_23ADF1650()
{
  unint64_t result;

  result = qword_2569E5D80;
  if (!qword_2569E5D80)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DA550, &type metadata for BackupManifestVsFSSnapshotDiffs);
    atomic_store(result, (unint64_t *)&qword_2569E5D80);
  }
  return result;
}

unint64_t sub_23ADF1698()
{
  unint64_t result;

  result = qword_2569E5D88;
  if (!qword_2569E5D88)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9A34, &type metadata for PendingSetErrorDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E5D88);
  }
  return result;
}

unint64_t sub_23ADF16E0()
{
  unint64_t result;

  result = qword_2569E5D90;
  if (!qword_2569E5D90)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D9A5C, &type metadata for PendingSetErrorDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2569E5D90);
  }
  return result;
}

id sub_23ADF1724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,char a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,unint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,void *a45,char a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,void *a63)
{
  id v63;
  id v64;
  id v65;
  id result;

  if (a57)
  {
    sub_23AAA7638(a6, a7, a8, a9, a10, a11, a12, a13, a14);
    sub_23AAAE478(a19, a20, a21);
    sub_23AAAE4B4(a22, a23, a24);
    v63 = a31;
    v64 = a29;
    sub_23AAAE5C0(a35, a36, a37, a38, a39);
    sub_23AAAE478(a44, a45, a46);
    sub_23AAAE4B4(a47, a48, a49);
    v65 = a54;
    swift_bridgeObjectRetain();
    return a63;
  }
  return result;
}

uint64_t sub_23ADF190C(uint64_t a1, void (*a
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v18 = *(_OWORD *)(a1 + 464);
  v19 = *(_OWORD *)(a1 + 480);
  v16 = *(_OWORD *)(a1 + 432);
  v17 = *(_OWORD *)(a1 + 448);
  v14 = *(_OWORD *)(a1 + 400);
  v15 = *(_OWORD *)(a1 + 416);
  v12 = *(_OWORD *)(a1 + 368);
  v13 = *(_OWORD *)(a1 + 384);
  v10 = *(_OWORD *)(a1 + 336);
  v11 = *(_OWORD *)(a1 + 352);
  v8 = *(_OWORD *)(a1 + 304);
  v9 = *(_OWORD *)(a1 + 320);
  v6 = *(_OWORD *)(a1 + 272);
  v7 = *(_OWORD *)(a1 + 288);
  v4 = *(_OWORD *)(a1 + 240);
  v5 = *(_OWORD *)(a1 + 256);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    v13,
    *((_QWORD *)&v13 + 1),
    v14,
    *((_QWORD *)&v14 + 1),
    v15,
    *((_QWORD *)&v15 + 1),
    v16,
    *((_QWORD *)&v16 + 1),
    v17,
    *((_QWORD *)&v17 + 1),
    v18,
    *((_QWORD *)&v18 + 1),
    v19,
    *((_QWORD *)&v19 + 1),
    *(_QWORD *)(a1 + 496));
  return a1;
}

void sub_23ADF19D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,char a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,unint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,void *a45,char a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,void *a63)
{
  if (a57)
  {
    sub_23AAAEE68(a6, a7, a8, a9, a10, a11, a12, a13, a14);
    sub_23AAAEE10(a19, a20, a21);
    sub_23AAAEE4C(a22, a23, a24);

    sub_23AAAE4D0(a35, a36, a37, a38, a39);
    sub_23AAAEE10(a44, a45, a46);
    sub_23AAAEE4C(a47, a48, a49);
    swift_bridgeObjectRelease();

  }
}

__n128 *sub_23ADF1BC0(__n128 *a1, __n128 *a2)
{
  __swift_memcpy17_8(a2, a1);
  return a2;
}

id *sub_23ADF1BFC(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

double sub_23ADF1C24(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 496) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

unint64_t sub_23ADF1C70()
{
  unint64_t result;

  result = qword_2569E5DD8;
  if (!qword_2569E5DD8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1DF240, &type metadata for FPCKPendingSetInternalError);
    atomic_store(result, (unint64_t *)&qword_2569E5DD8);
  }
  return result;
}

void sub_23ADF1CB4(void *a1, uint64_t a2)
{
  if (BYTE1(a2) != 255)
    sub_23AB7C6B4(a1, a2, BYTE1(a2) & 1);
}

id sub_23ADF1CCC(id result, uint64_t a2)
{
  if (BYTE1(a2) != 255)
    return sub_23AB5692C(result, a2, BYTE1(a2) & 1);
  return result;
}

id sub_23ADF1CE4(id result, uint64_t a2)
{
  if (BYTE1(a2) != 255)
    return sub_23AA88218(result, a2, BYTE1(a2) & 1);
  return result;
}

void sub_23ADF1CFC(void *a1, uint64_t a2)
{
  if (BYTE1(a2) != 255)
    sub_23AA862DC(a1, a2, BYTE1(a2) & 1);
}

uint64_t sub_23ADF1D14@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_23ADC8768(*(void **)(v1 + 16), a1);
}

void sub_23ADF1D30()
{
  uint64_t v0;
  unint64_t *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(unint64_t **)(v0 + 16);
  v2 = fpfs_lp_faccessat();
  v3 = *v1;
  v4 = 0x8000000000000040;
  if (v2)
    v4 = 0x8000000000000048;
  *v1 = v4;
  sub_23ACF212C(v3);
}

uint64_t sub_23ADF1D8C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_23ADF1DB0()
{
  unint64_t result;

  result = qword_2569E5DF8;
  if (!qword_2569E5DF8)
  {
    result = MEMORY[0x23B8613CC](&unk_23B1D969C, &type metadata for PendingSetErrorDetails);
    atomic_store(result, (unint64_t *)&qword_2569E5DF8);
  }
  return result;
}

void sub_23ADF1DF8(void *a1, char a2)
{
  uint64_t v2;

  sub_23ADC801C(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(NSObject **)(v2 + 32));
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_23ADF1E3C(void *a1, char a2)
{
  uint64_t v2;

  sub_23ADC7D94(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_DWORD *)(v2 + 24), *(NSObject **)(v2 + 32));
}

void sub_23ADF1E54(_QWORD *a1@<X8>)
{
  sub_23ADC6E9C(a1);
}

uint64_t sub_23ADF1E6C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ADF1E90(void *a1)
{
  uint64_t v1;

  return sub_23ADDE4F4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23ADF1EA0()
{
  return swift_deallocObject();
}

uint64_t sub_23ADF1EB0@<X0>(_QWORD *a1@<X8>)
{
  return sub_23ADF1FD4(&OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskBrokenInvariantsCounters, a1);
}

uint64_t sub_23ADF1EBC()
{
  uint64_t v0;

  return sub_23ADA966C(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_23ADF1EC4()
{
  return swift_deallocObject();
}

uint64_t sub_23ADF1ED4()
{
  return swift_deallocObject();
}

uint64_t sub_23ADF1EE4@<X0>(_QWORD *a1@<X8>)
{
  return sub_23ADF1FD4(&OBJC_IVAR____TtC9libfssync4FPCK_discoveredDiskVsFSSnapshotDiffCounters, a1);
}

uint64_t sub_23ADF1EF0()
{
  uint64_t v0;

  return sub_23ADA96FC(*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ADF1EF8()
{
  return swift_deallocObject();
}

uint64_t sub_23ADF1F08()
{
  return swift_deallocObject();
}

uint64_t sub_23ADF1F18@<X0>(_QWORD *a1@<X8>)
{
  return sub_23ADF1FD4(&OBJC_IVAR____TtC9libfssync4FPCK_discoveredFSSnapshotVsFPSnapshotDiffCounters, a1);
}

uint64_t sub_23ADF1F24()
{
  uint64_t v0;

  return sub_23ADA9710(*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ADF1F2C()
{
  return swift_deallocObject();
}

uint64_t sub_23ADF1F3C()
{
  return swift_deallocObject();
}

uint64_t sub_23ADF1F4C@<X0>(_QWORD *a1@<X8>)
{
  return sub_23ADF1FD4(&OBJC_IVAR____TtC9libfssync4FPCK_discoveredReconciliationTableBrokenInvariantsCounters, a1);
}

uint64_t sub_23ADF1F58()
{
  uint64_t v0;

  return sub_23ADA9724(*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ADF1F60()
{
  return swift_deallocObject();
}

uint64_t sub_23ADF1F70()
{
  return swift_deallocObject();
}

uint64_t sub_23ADF1F80()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ADF1FA4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23ADF1FC8@<X0>(_QWORD *a1@<X8>)
{
  return sub_23ADF1FD4(&OBJC_IVAR____TtC9libfssync4FPCK_discoveredBackupManifestVsFSSnapshotDiffCounters, a1);
}

uint64_t sub_23ADF1FD4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(*(_QWORD *)(v2 + 16) + *a1);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23ADF2024()
{
  uint64_t v0;

  return sub_23ADA9738(*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ADF202C()
{
  return swift_deallocObject();
}

uint64_t sub_23ADF203C()
{
  return swift_deallocObject();
}

uint64_t sub_23ADF204C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23ADC3F58(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

uint64_t sub_23ADF2054(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    v8[0] = MEMORY[0x24BEE0D08];
    v8[1] = v7;
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE04C0], v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23ADF20C0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_2569E5E20;
  if (!qword_2569E5E20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2569E5E28);
    v2 = sub_23ADF1DB0();
    result = MEMORY[0x23B8613CC](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_2569E5E20);
  }
  return result;
}

uint64_t sub_23ADF2124@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_23ADC0834(v1, a1);
}

uint64_t sub_23ADF213C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = sub_23ADDAB50(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 48), *(_QWORD *)(v1 + 56));
  if (!v2)
    *a1 = result & 1;
  return result;
}

uint64_t sub_23ADF2178()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23ADF219C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (id)sub_23B1C63BC();
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);

}

id sub_23ADF21DC()
{
  uint64_t v0;

  return (id)(*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_23ADF21FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_23ADF2218()
{
  uint64_t v0;

  return sub_23ADD514C(*(_BYTE **)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_23ADF2230()
{
  uint64_t v0;

  return sub_23ADDD7B0(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_23ADF224C()
{
  uint64_t v0;

  return sub_23ADDDD60(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), &qword_2542E6CB0, 0xEC0000003A736620, (void (*)(_QWORD *))sub_23ADF254C);
}

uint64_t sub_23ADF2280()
{
  uint64_t v0;

  return sub_23ADDDC38(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_23ADF229C()
{
  uint64_t v0;

  return sub_23ADDDD60(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24), &qword_2542E6CA8, 0xEC0000003A706620, (void (*)(_QWORD *))sub_23ADF24E4);
}

void sub_23ADF22D0(_QWORD *a1)
{
  uint64_t v1;

  sub_23ADDDCCC(a1, v1);
}

uint64_t sub_23ADF22E8(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADDDB04(a1, v1);
}

void sub_23ADF2304(uint64_t a1)
{
  uint64_t v1;

  sub_23ADDF574(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

size_t sub_23ADF230C(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADDF324(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23ADF2328(uint64_t a1)
{
  uint64_t v1;

  return sub_23ADDED80(a1, v1);
}

void sub_23ADF2330(int a1)
{
  uint64_t v1;

  sub_23B071334(a1, *(dispatch_group_t *)(v1 + 16));
}

uint64_t objectdestroy_154Tm_0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ADF2378(void *a1, char a2)
{
  uint64_t v2;

  sub_23ADDE9B4(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void (**)(id))(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_23ADF23AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for VFSItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23ADF23F0()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + 24) != 255)
    sub_23AAB538C(*(id *)(v0 + 16));
  return swift_deallocObject();
}

void sub_23ADF2428(uint64_t a1)
{
  uint64_t v1;

  sub_23ADEB534(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

void sub_23ADF2430(id a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_23AAB538C(a1);
}

id sub_23ADF2448(id a1, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_23AAB5380(a1);
  return a1;
}

void sub_23ADF2460(_QWORD *a1)
{
  uint64_t v1;

  sub_23ADDEFF8(a1, *(_QWORD *)(v1 + 16), **(void ***)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_23ADF2480(unint64_t a1)
{
  _QWORD *v1;

  return sub_23ADDEB14(a1, v1);
}

uint64_t objectdestroy_175Tm()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ADF24D0(void *a1, char a2)
{
  uint64_t v2;

  sub_23ADDE864(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void (**)(id))(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_23ADF24E4(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADDDE80(a1, v1);
}

uint64_t sub_23ADF24FC(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADD7934(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_23ADF2514(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADE0120(a1, *(_BYTE *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

void sub_23ADF2530(uint64_t a1)
{
  uint64_t v1;

  sub_23ADDFE7C(a1, *(_QWORD *)(v1 + 16), *(id **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_23ADF254C(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADDDB98(a1, v1);
}

uint64_t sub_23ADF2564(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23ADF25B8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23ADF2608(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADD7B50(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_23ADF2620(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADD7D94(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23ADF2638(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADDB2FC(a1, v1);
}

uint64_t sub_23ADF2650(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADE050C(a1, *(_BYTE *)(v1 + 16), *(_QWORD **)(v1 + 24));
}

uint64_t sub_23ADF266C(uint64_t a1)
{
  uint64_t v1;

  return sub_23ADDFFD0(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

unint64_t sub_23ADF2688(unint64_t result)
{
  switch((result >> 58) & 0x3C | (result >> 1) & 3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
    case 0x1AuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1DuLL:
    case 0x1EuLL:
    case 0x1FuLL:
    case 0x20uLL:
    case 0x21uLL:
    case 0x22uLL:
    case 0x23uLL:
    case 0x24uLL:
    case 0x25uLL:
    case 0x26uLL:
    case 0x27uLL:
    case 0x28uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23ADF26C4(uint64_t a1)
{
  uint64_t v1;

  return sub_23AFC3CD0(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_23ADF26CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23ADDAF4C(*(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void (**)(uint64_t))(v1 + 48), *(_QWORD *)(v1 + 56), a1);
}

uint64_t sub_23ADF26F0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_23ADF2754(a1, (uint64_t (*)(uint64_t, uint64_t))sub_23ADD650C, a2);
}

void sub_23ADF270C(_QWORD *a1)
{
  sub_23AF95B5C(a1);
}

uint64_t sub_23ADF2738@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_23ADF2754(a1, (uint64_t (*)(uint64_t, uint64_t))sub_23ADD6414, a2);
}

uint64_t sub_23ADF2754@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = a2(a1, v3);
  if (!v4)
    *a3 = result & 1;
  return result;
}

uint64_t sub_23ADF2788(_QWORD *a1)
{
  uint64_t v1;

  return sub_23ADD6C24(a1, v1);
}

uint64_t sub_23ADF27A0()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;

  v1 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);

  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[12];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[13];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23AAA12F0(*(_QWORD *)(v3 + v1[17]), *(_QWORD *)(v3 + v1[17] + 8));
  return swift_deallocObject();
}

uint64_t sub_23ADF29CC()
{
  return sub_23ADF343C((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23ADC6790);
}

double sub_23ADF29D8(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 448) = 1;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_QWORD *)(a1 + 488) = 0;
  return result;
}

void sub_23ADF2A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,char a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,unint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,void *a45,char a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  if (a57 != 1)
    sub_23AAAEC3C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
      a20,
      a21,
      a22,
      a23,
      a24,
      a25,
      a26,
      a27,
      a28,
      a29,
      a30,
      a31,
      a32,
      a33,
      a34,
      a35,
      a36,
      a37,
      a38,
      a39,
      a40,
      a41,
      a42,
      a43,
      a44,
      a45,
      a46,
      a47,
      a48,
      a49,
      a50,
      a51,
      a52,
      a53,
      a54,
      a55,
      a56,
      a57);
}

uint64_t sub_23ADF2D10(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 448);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_23ADF2D34(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v18 = *(_OWORD *)(a1 + 448);
  v19 = *(_OWORD *)(a1 + 464);
  v16 = *(_OWORD *)(a1 + 416);
  v17 = *(_OWORD *)(a1 + 432);
  v14 = *(_OWORD *)(a1 + 384);
  v15 = *(_OWORD *)(a1 + 400);
  v12 = *(_OWORD *)(a1 + 352);
  v13 = *(_OWORD *)(a1 + 368);
  v10 = *(_OWORD *)(a1 + 320);
  v11 = *(_OWORD *)(a1 + 336);
  v8 = *(_OWORD *)(a1 + 288);
  v9 = *(_OWORD *)(a1 + 304);
  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    v13,
    *((_QWORD *)&v13 + 1),
    v14,
    *((_QWORD *)&v14 + 1),
    v15,
    *((_QWORD *)&v15 + 1),
    v16,
    *((_QWORD *)&v16 + 1),
    v17,
    *((_QWORD *)&v17 + 1),
    v18,
    *((_QWORD *)&v18 + 1),
    v19,
    *((_QWORD *)&v19 + 1),
    *(_QWORD *)(a1 + 480),
    *(_QWORD *)(a1 + 488));
  return a1;
}

uint64_t sub_23ADF2DF0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,char a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,unint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,void *a45,char a46,uint64_t a47,uint64_t a48,unint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  if (a57 != 1)
    return sub_23AA88348(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56,
             a57);
  return result;
}

uint64_t sub_23ADF30D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23ADC68FC(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23ADF30EC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23ADF3118(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  return sub_23ADD26D8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

void sub_23ADF3130(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_23ABE41DC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_23ADF3148(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_23ABE46C8(a1, *(_QWORD *)(v2 + 16), *(_DWORD *)(v2 + 24), a2);
}

uint64_t sub_23ADF3164()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23ADF3198(unsigned __int8 *a1, char a2, void *a3)
{
  uint64_t v3;

  sub_23ADCD9C8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void (**)(uint64_t, uint64_t))(v3 + 32));
}

uint64_t sub_23ADF31B4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23ADF31E8(void *a1, void *a2)
{
  uint64_t v2;

  return sub_23ADCE84C(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_23ADF3204()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;

  v1 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();

  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[12];
  v5 = (int *)type metadata accessor for ItemMetadata();
  v6 = v4 + v5[7];
  v7 = sub_23B1C5BDC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = (uint64_t *)(v4 + v5[33]);
  v12 = v11[1];
  if (v12 >> 60 != 15)
    sub_23AAAE53C(*v11, v12);
  swift_bridgeObjectRelease();
  v13 = v3 + v1[13];
  v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23AAA12F0(*(_QWORD *)(v3 + v1[17]), *(_QWORD *)(v3 + v1[17] + 8));
  return swift_deallocObject();
}

uint64_t sub_23ADF3430()
{
  return sub_23ADF343C((uint64_t (*)(_QWORD, _QWORD, uint64_t))sub_23ADCE528);
}

uint64_t sub_23ADF343C(uint64_t (*a1)(_QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00) - 8)
                          + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v2 + 32) & ~v2));
}

void sub_23ADF3490()
{
  uint64_t v0;

  sub_23B035B40(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_23ADF34C4()
{
  uint64_t v0;

  return sub_23ADCAEAC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23ADF34E0()
{
  uint64_t v0;

  return sub_23ADD7FD4(v0);
}

uint64_t sub_23ADF34F8()
{
  uint64_t v0;

  return sub_23AE6B448(v0);
}

void sub_23ADF3510()
{
  uint64_t v0;

  sub_23ADD8168(v0);
}

uint64_t sub_23ADF3530()
{
  return sub_23ADF2460();
}

uint64_t sub_23ADF35E0()
{
  return sub_23ADF230C();
}

uint64_t sub_23ADF35FC(_QWORD *a1)
{
  return sub_23ADF2620(a1);
}

uint64_t sub_23ADF3610@<X0>(int a1@<W0>, char *a2@<X8>)
{
  return sub_23ADECA70(a1, a2);
}

void sub_23ADF3624()
{
  unint64_t v0;
  unint64_t v1;

  sub_23AE4A484();
  if (v0 <= 0x3F)
  {
    sub_23B1C5A08();
    if (v1 <= 0x3F)
      swift_initClassMetadata2();
  }
}

uint64_t sub_23ADF3730(uint64_t a1)
{
  return sub_23ADF3758(a1, (uint64_t (*)(uint64_t))sub_23ADF6D74, (uint64_t (*)(uint64_t))sub_23AE60058);
}

uint64_t sub_23ADF3744(uint64_t a1)
{
  return sub_23ADF3758(a1, (uint64_t (*)(uint64_t))sub_23ADF6E78, (uint64_t (*)(uint64_t))sub_23AE603B4);
}

uint64_t sub_23ADF3758(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t result;
  double v26;
  double v27;
  double v28;
  uint64_t (*v29)(char *, uint64_t);
  double v30;
  char v31;
  uint64_t v32;

  v6 = sub_23B1C5BDC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v32 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4310);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v32 - v17;
  v19 = (void *)a2(a1);
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, sel_date);

    sub_23B1C5BAC();
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v18, v22, 1, v6);
  sub_23AA8EFC8((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_2542E4310);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v6) != 1)
    goto LABEL_9;
  sub_23AA8A05C((uint64_t)v18, (uint64_t *)&unk_2542E4310);
  sub_23B1C5BD0();
  v10 = v12;
  sub_23B1C5B94();
  v24 = v23;
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v26 = v24 * 1000000000.0;
  if ((~*(_QWORD *)&v26 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v26 < 9.22337204e18)
    goto LABEL_13;
  __break(1u);
LABEL_9:
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v16, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  sub_23B1C5B94();
  v28 = v27;
  v29 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  result = v29(v10, v6);
  v30 = v28 * 1000000000.0;
  if ((~*(_QWORD *)&v30 & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v30 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v30 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  v29(v12, v6);
  sub_23AA8A05C((uint64_t)v18, (uint64_t *)&unk_2542E4310);
LABEL_13:
  result = a3(a1);
  if ((v31 & 1) != 0)
    return 0;
  return result;
}

uint64_t sub_23ADF3A24(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
  swift_allocObject();
  return sub_23AEA220C(a1, a2, a3, a4, a5);
}

uint64_t sub_23ADF3A98(uint64_t a1, uint64_t a2)
{
  return sub_23ADF3AAC(a1, a2);
}

uint64_t sub_23ADF3AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  BOOL v10;
  uint64_t result;
  id v12;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = !*(_BYTE *)(a1 + 104) || *(_BYTE *)(a1 + 104) == 4 && *(_OWORD *)(a1 + 88) == 0;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(v2 + 24) + 128))(a1, a2);
  if (!v3)
  {
    if (result < 0)
    {
      swift_release();
      result = sub_23B1C704C();
      __break(1u);
    }
    else
    {
      result = swift_release();
      if (v10)
      {
        v12 = (id)fpfs_current_or_default_log();
        v13 = sub_23B1C5E58();
        v14 = (*(unsigned __int8 (**)(uint64_t))(*(_QWORD *)a1 + 392))(v13);
        swift_retain();
        v15 = sub_23B1C5E40();
        v16 = v14;
        if (os_log_type_enabled(v15, v14))
        {
          v17 = (uint8_t *)swift_slowAlloc();
          v24 = swift_slowAlloc();
          v26 = v24;
          v23 = v17;
          *(_DWORD *)v17 = 136446210;
          v22 = v17 + 4;
          sub_23AE17C44();
          v25 = sub_23AABEC68(v18, v19, &v26);
          sub_23B1C6CBC();
          swift_release();
          swift_bridgeObjectRelease();
          v20 = v23;
          _os_log_impl(&dword_23AA66000, v15, v16, " ✍️  persist job: %{public}s", v23, 0xCu);
          v21 = v24;
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v21, -1, -1);
          MEMORY[0x23B8614BC](v20, -1, -1);

        }
        else
        {

          swift_release();
        }
        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
    }
  }
  return result;
}

void sub_23ADF3D40(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  id v31;
  char *v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t (**v57)(uint64_t);
  _QWORD *v58;
  id v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t v63;
  char *v64;
  int v65;
  uint64_t v66;
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];

  v79 = a7;
  v80 = a8;
  v76 = a6;
  v72 = a5;
  v65 = a4;
  v78 = a3;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DD460);
  MEMORY[0x24BDAC7A8](v13);
  v77 = (uint64_t)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23B1C5DC8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v68 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v63 - v22;
  v24 = type metadata accessor for Signpost(0);
  v66 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v70 = (uint64_t)&v63 - (((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v63 - v27;
  v81 = v10;
  v75 = (id)fpfs_adopt_log();
  if (qword_2542E6818 != -1)
    swift_once();
  v71 = a10;
  v69 = a9;
  v29 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v23, 1, 1, v15);
  strcpy((char *)v82, "async batch ");
  BYTE5(v82[1]) = 0;
  HIWORD(v82[1]) = -5120;
  v73 = a1;
  v74 = a2;
  sub_23B1C6F2C();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  v30 = v82[1];
  v63 = v82[0];
  sub_23AA8EFC8((uint64_t)v23, (uint64_t)v21, (uint64_t *)&unk_2542E67B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15) == 1)
  {
    v31 = v29;
    v32 = v68;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v21, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    v32 = v68;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v68, v21, v15);
  }
  LODWORD(v68) = v65 & 1;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v28, v32, v15);
  *(_QWORD *)&v28[*(int *)(v24 + 20)] = v29;
  v33 = &v28[*(int *)(v24 + 24)];
  *(_QWORD *)v33 = "DB queue wait";
  *((_QWORD *)v33 + 1) = 13;
  v33[16] = 2;
  v34 = v29;
  swift_bridgeObjectRetain();
  sub_23B1C6BE4();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5620);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v35 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v35 + 64) = sub_23AAA0D14();
  *(_QWORD *)(v35 + 32) = v63;
  *(_QWORD *)(v35 + 40) = v30;
  sub_23B1C5D98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v32, v15);
  swift_bridgeObjectRelease();
  sub_23AA8A05C((uint64_t)v23, (uint64_t *)&unk_2542E67B8);
  v64 = v28;
  v36 = v70;
  sub_23AA907B0((uint64_t)v28, v70, type metadata accessor for Signpost);
  v37 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  v38 = ((unint64_t)v67 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject();
  sub_23AA94050(v36, v39 + v37, type metadata accessor for Signpost);
  v40 = (_QWORD *)(v39 + v38);
  v41 = v80;
  *v40 = v79;
  v40[1] = v41;
  v42 = *(void **)(v81 + 64);
  v66 = *(_QWORD *)(v81 + 168);
  v67 = v42;
  v43 = sub_23B1C60A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v77, 1, 1, v43);
  sub_23AA907B0((uint64_t)v28, v36, type metadata accessor for Signpost);
  v44 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
  v46 = (v45 + 25) & 0xFFFFFFFFFFFFFFF8;
  v47 = (v46 + 23) & 0xFFFFFFFFFFFFFFF8;
  v48 = swift_allocObject();
  sub_23AA94050(v36, v48 + v37, type metadata accessor for Signpost);
  v49 = (_QWORD *)(v48 + v38);
  v50 = v76;
  *v49 = v72;
  v49[1] = v50;
  *(_QWORD *)(v48 + v44) = v81;
  v51 = v48 + v45;
  v52 = v74;
  *(_QWORD *)v51 = v73;
  *(_QWORD *)(v51 + 8) = v52;
  *(_BYTE *)(v51 + 16) = v78;
  *(_BYTE *)(v51 + 17) = (_BYTE)v68;
  v53 = (_QWORD *)(v48 + v46);
  v54 = v80;
  *v53 = v79;
  v53[1] = v54;
  v55 = (_QWORD *)(v48 + v47);
  v56 = v71;
  *v55 = v69;
  v55[1] = v56;
  v57 = (uint64_t (**)(uint64_t))(v48 + ((v47 + 23) & 0xFFFFFFFFFFFFFFF8));
  *v57 = sub_23AEB2BA0;
  v57[1] = (uint64_t (*)(uint64_t))v39;
  v58 = (_QWORD *)swift_allocObject();
  v58[2] = sub_23AEB2BA0;
  v58[3] = v39;
  v58[4] = v66;
  swift_retain_n();
  swift_retain_n();
  v59 = v67;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v60 = v77;
  sub_23AA9086C(v59, v77, sub_23AC242E0, v58, (uint64_t)sub_23AABA604, v48);
  swift_release();

  swift_release();
  swift_release();
  sub_23AA8A05C(v60, &qword_2542DD460);
  sub_23AA937BC((uint64_t)v64, type metadata accessor for Signpost);
  v61 = v75;
  v62 = (id)fpfs_adopt_log();

}

id sub_23ADF4384(uint64_t a1, int a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v6;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  id v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t aBlock;
  uint64_t v33;
  uint64_t (*v34)();
  void *v35;
  void (*v36)();
  uint64_t v37;
  uint64_t v38;
  char v39;

  v28 = a5;
  v29 = a6;
  v30 = a4;
  v31 = a3;
  v6 = a2;
  v25 = a2;
  v24 = a1;
  v27 = sub_23B1C60A4();
  v8 = *(_QWORD *)(v27 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v27);
  v10 = objc_msgSend((id)objc_opt_self(), sel_discreteProgressWithTotalUnitCount_, 1);
  objc_msgSend(v10, sel_setCancellable_, 1);
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v38 = a1;
  v39 = v6;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v12;
  sub_23AA9F454(&v38, v13 + 32);
  v36 = sub_23AEB2A64;
  v37 = v13;
  aBlock = MEMORY[0x24BDAC760];
  v33 = 1107296256;
  v34 = sub_23AA698FC;
  v35 = &block_descriptor_452;
  v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  sub_23AAFA320((uint64_t)sub_23AEB2A64);
  swift_release();
  objc_msgSend(v10, sel_setCancellationHandler_, v14);
  _Block_release(v14);
  swift_release();
  swift_release();
  swift_release();
  v15 = swift_allocObject();
  v17 = v28;
  v16 = v29;
  *(_QWORD *)(v15 + 16) = v28;
  *(_QWORD *)(v15 + 24) = v16;
  aBlock = v24;
  LOBYTE(v33) = v25;
  v18 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v27);
  v19 = (*(unsigned __int8 *)(v8 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = v16;
  *((_QWORD *)v20 + 4) = v26;
  sub_23AA9F454(&aBlock, (uint64_t)(v20 + 40));
  v21 = v31;
  *((_QWORD *)v20 + 7) = v31;
  *((_QWORD *)v20 + 8) = v10;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v20[v19], (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
  swift_retain_n();
  swift_retain();
  sub_23AA93780(v21);
  v22 = v10;
  sub_23ADF3D40((uint64_t)"materialize(_:request:qos:completion:)", 38, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)sub_23AA698D4, v15, (uint64_t)sub_23AABA4A0, (uint64_t)v20);
  swift_release();
  swift_release();
  return v22;
}

void sub_23ADF468C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char v14;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v8 = Strong;
    swift_beginAccess();
    v9 = MEMORY[0x23B8615C4](a2 + 16);
    if (v9)
    {
      v10 = (void *)v9;
      v13 = a3;
      v14 = a4;
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = v8;
      sub_23AA9F454(&v13, v11 + 24);
      *(_QWORD *)(v11 + 40) = v10;
      swift_retain();
      v12 = v10;
      sub_23ADF3D40((uint64_t)"materialize(_:request:qos:completion:)", 38, 2, 0, (uint64_t)sub_23AABA6B4, 0, (uint64_t)nullsub_1, 0, (uint64_t)sub_23AAFD5A0, v11);
      swift_release();
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

unint64_t sub_23ADF47B0(void *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t (*v45)();
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(void);
  unint64_t v53;
  uint64_t v54;
  uint64_t (*v55)();
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  _QWORD *v69;
  uint64_t (*v70)();
  unint64_t result;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(void);
  uint64_t v76;
  void (*v77)(uint64_t (*)(), uint64_t);
  id v78;
  id v79;
  unsigned __int8 *v80;
  NSObject *v81;
  os_log_type_t v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  id v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  void (*v94)(_QWORD, _QWORD, _QWORD);
  uint64_t (*v95)();
  void *v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  void *v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  void *v115;
  unsigned __int8 v116;
  void *v117;
  void *v118;
  id v119;
  void *v120;
  void *v121;
  char *v122;
  void *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  uint64_t v131;
  void *v132;
  unsigned int (*v133)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v134)(unint64_t *, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t *v142;
  unint64_t *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t *v154;
  char *v155;
  uint64_t v156;
  unint64_t *v157;
  void (*v158)(char *, char *, char *);
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  unint64_t v162;
  unint64_t v163;
  char *v164;
  _QWORD *v165;
  uint64_t v166;
  unint64_t *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t *v171;
  void (**v172)(_QWORD, _QWORD);
  unint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t *v180;
  uint64_t (*v181)();
  uint64_t *v182;
  void (*v183)(void);
  uint64_t v184;
  uint64_t (*v185)();
  void (**v186)(_QWORD, _QWORD);
  char *v187;
  uint64_t v188;
  uint64_t v189;
  void *v190;
  void *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t inited;
  uint64_t v196;
  unsigned __int8 v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unsigned __int8 *v202;
  unsigned int v203;
  uint64_t v204;
  int v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  char *v210;
  double v211;
  double v212;
  double v213;
  double v214;
  double v215;
  double v216;
  uint64_t v217;
  unint64_t *v218;
  uint64_t (*v219)();
  _QWORD *v220;
  uint64_t v221;
  void *v222;
  uint64_t (*v223)();
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t *v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  unint64_t *v231;
  char *v232;
  uint64_t v233;
  void (*v234)(char *, char *, uint64_t);
  uint64_t v235;
  unint64_t v236;
  unint64_t *v237;
  char *v238;
  _QWORD *v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  char *v243;
  void *v244;
  unint64_t *v245;
  uint64_t (*v246)();
  uint64_t v247;
  unint64_t *v248;
  char *v249;
  uint64_t v250;
  unsigned __int8 *v251;
  char *v252;
  uint64_t v253;
  uint64_t *v254;
  uint64_t v255;
  unsigned __int8 *v256;
  uint64_t v257;
  int64_t v258;
  unsigned int (*v259)(uint64_t, uint64_t, uint64_t);
  uint64_t v260;
  void (*v261)(void);
  char *v262;
  unint64_t v263;
  unint64_t *v264;
  unint64_t *v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t (*v270)();
  uint64_t v271;
  void (*v272)(_QWORD, _QWORD, _QWORD);
  uint64_t *v273;
  unsigned __int8 *v274;
  char *v275;
  uint64_t v276;
  uint64_t (*v277)();
  unsigned int v278;
  void *v279;
  void (*v280)(uint64_t (*)(), uint64_t);
  unint64_t *v281;
  unint64_t *v282;
  unint64_t *v283;
  unint64_t *v284;
  void (**v285)(_QWORD, _QWORD);
  unint64_t *v286;
  char *v287;
  uint64_t v288;
  unint64_t *v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  void (*v293)(void);
  uint64_t (*v294)();
  uint64_t v295;
  unint64_t v296;
  uint64_t v297;
  uint64_t (*v298)();
  uint64_t v299;
  void (*v300)(_QWORD, _QWORD, _QWORD);

  v295 = a3;
  v269 = sub_23B1C5BDC();
  v268 = *(_QWORD *)(v269 - 8);
  MEMORY[0x24BDAC7A8](v269);
  v267 = (char *)&v253 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DDD10);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v270 = (uint64_t (*)())((char *)&v253 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x24BDAC7A8](v8);
  v275 = (char *)&v253 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v277 = (uint64_t (*)())((char *)&v253 - v13);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v274 = (unsigned __int8 *)&v253 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v292 = (uint64_t)&v253 - v16;
  v291 = sub_23B1C5E4C();
  v285 = *(void (***)(_QWORD, _QWORD))(v291 - 8);
  MEMORY[0x24BDAC7A8](v291);
  v294 = (uint64_t (*)())((char *)&v253 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
  v296 = *(_QWORD *)(v297 - 8);
  v18 = MEMORY[0x24BDAC7A8](v297);
  v289 = (unint64_t *)((char *)&v253 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x24BDAC7A8](v18);
  v284 = (unint64_t *)((char *)&v253 - v21);
  MEMORY[0x24BDAC7A8](v20);
  v283 = (unint64_t *)((char *)&v253 - v22);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A18);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v264 = (unint64_t *)((char *)&v253 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = MEMORY[0x24BDAC7A8](v24);
  v290 = (char *)&v253 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v293 = (void (*)(void))((char *)&v253 - v29);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v265 = (unint64_t *)((char *)&v253 - v31);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v266 = (uint64_t)&v253 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v253 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (unint64_t *)((char *)&v253 - v38);
  v40 = MEMORY[0x24BDAC7A8](v37);
  v42 = (char *)&v253 - v41;
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v253 - v43;
  v276 = v3;
  v298 = sub_23AE4F2C0();
  v279 = a1;
  v278 = a2;
  v45 = sub_23B148D70(&v299, (uint64_t)a1, a2);
  v47 = v46;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6C80);
  v49 = *(uint64_t **)(v48 - 8);
  v50 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v49[6];
  if (v50(v47, 1, v48))
  {
    ((void (*)(uint64_t *, _QWORD))v45)(&v299, 0);
    ((void (*)(_QWORD, _QWORD))v298)(&v300, 0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v296 + 56))(v44, 1, 1, v297);
    v51 = (uint64_t)v44;
    return sub_23AA8A05C(v51, &qword_2542E6A18);
  }
  v286 = (unint64_t *)v42;
  v287 = v44;
  v273 = v49;
  v281 = v39;
  v282 = (unint64_t *)v36;
  v259 = v50;
  v260 = v48;
  v52 = v293;
  sub_23ADF8B04(v295, (uint64_t)v293);
  ((void (*)(uint64_t *, _QWORD))v45)(&v299, 0);
  ((void (*)(_QWORD, _QWORD))v298)(&v300, 0);
  v53 = v296;
  v54 = v297;
  v295 = *(_QWORD *)(v296 + 48);
  if (((unsigned int (*)(void (*)(void), uint64_t, uint64_t))v295)(v52, 1, v297) == 1)
  {
    v55 = *(uint64_t (**)())(v53 + 56);
    v56 = (uint64_t)v286;
    ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))v55)(v286, 1, 1, v54);
  }
  else
  {
    v57 = *(int *)(v54 + 64);
    v58 = (char *)v52 + v57;
    v59 = *(int *)(v54 + 80);
    v60 = *((_QWORD *)v52 + 1);
    v61 = v283;
    *v283 = *(_QWORD *)v52;
    v61[1] = v60;
    v62 = (char *)v61 + v57;
    v63 = sub_23B1C60A4();
    v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32);
    v64(v62, v58, v63);
    v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = *(_OWORD *)((char *)v52 + v59);
    v66 = *v61;
    v67 = v61[1];
    v56 = (uint64_t)v286;
    v68 = (char *)v286 + *(int *)(v54 + 64);
    v69 = (unint64_t *)((char *)v286 + *(int *)(v54 + 80));
    *v286 = v66;
    *(_QWORD *)(v56 + 8) = v67;
    v64(v68, v62, v63);
    *v69 = sub_23ADF35F8;
    v69[1] = v65;
    v55 = *(uint64_t (**)())(v53 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v55)(v56, 0, 1, v54);
  }
  v70 = v294;
  v51 = (uint64_t)v287;
  sub_23AA724E8(v56, (uint64_t)v287, &qword_2542E6A18);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v295)(v51, 1, v54) == 1)
    return sub_23AA8A05C(v51, &qword_2542E6A18);
  v72 = *(_QWORD *)v51;

  v73 = v51 + *(int *)(v54 + 64);
  v74 = v51 + *(int *)(v54 + 80);
  v75 = *(void (**)(void))v74;
  v257 = *(_QWORD *)(v74 + 8);
  v76 = sub_23B1C60A4();
  v286 = *(unint64_t **)(v76 - 8);
  v77 = (void (*)(_QWORD))v286[1];
  v287 = (char *)v76;
  v280 = (void (*)(uint64_t (*)(), uint64_t))v77;
  v77(v73);
  v78 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  v79 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  sub_23AA93780(v72);
  sub_23AA93780(v72);
  v80 = (unsigned __int8 *)v78;
  v81 = sub_23B1C5E40();
  v82 = sub_23B1C6A94();
  v83 = os_log_type_enabled(v81, v82);
  v256 = v80;
  v298 = v55;
  if (v83)
  {
    v84 = swift_slowAlloc();
    v293 = v75;
    v85 = v84;
    v86 = (_QWORD *)swift_slowAlloc();
    v272 = (void (*)(_QWORD, _QWORD, _QWORD))swift_slowAlloc();
    v300 = v272;
    *(_DWORD *)v85 = 138412802;
    v87 = objc_msgSend(v80, sel_enter);
    v299 = (uint64_t)v87;
    sub_23B1C6CBC();
    *v86 = v87;

    *(_WORD *)(v85 + 12) = 2080;
    v88 = sub_23AA96F18((uint64_t)v279, v278);
    v299 = sub_23AABEC68(v88, v89, (uint64_t *)&v300);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    *(_WORD *)(v85 + 22) = 2080;
    sub_23AE5BC48(v72);
    v91 = v90;
    v93 = v92;
    sub_23AC03BE4(v72);
    v299 = sub_23AABEC68(v91, v93, (uint64_t *)&v300);
    v54 = v297;
    sub_23B1C6CBC();
    v75 = v293;
    swift_bridgeObjectRelease();
    sub_23AC03BE4(v72);
    _os_log_impl(&dword_23AA66000, v81, v82, "%@ 🛑  cancelling request for %s: %s", (uint8_t *)v85, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v86, -1, -1);
    v94 = v272;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v94, -1, -1);
    MEMORY[0x23B8614BC](v85, -1, -1);

    ((void (**)(uint64_t (*)(), uint64_t))v285)[1](v294, v291);
  }
  else
  {
    sub_23AC03BE4(v72);

    sub_23AC03BE4(v72);
    ((void (**)(uint64_t (*)(), uint64_t))v285)[1](v70, v291);
  }
  v95 = v277;
  sub_23AAFCEE8();
  v96 = (void *)swift_allocError();
  *v97 = 0;
  v75();

  v98 = v276;
  v99 = (uint64_t *)(v276 + qword_2542EDFF0);
  swift_beginAccess();
  v254 = v99;
  v100 = *v99;
  v101 = *(_QWORD *)(*v99 + 16);
  v102 = v273;
  if (v101)
  {
    v103 = v279;
    v104 = sub_23AA97254((uint64_t)v279, v278);
    if ((v105 & 1) != 0)
    {
      v106 = *(_QWORD *)(v100 + 56) + v102[9] * v104;
      v107 = v292;
      sub_23AA8EFC8(v106, v292, &qword_2542E6C80);
      v108 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v102[7];
      v109 = v107;
      v110 = 0;
    }
    else
    {
      v108 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v102[7];
      v107 = v292;
      v109 = v292;
      v110 = 1;
    }
    v111 = v260;
    v108(v109, v110, 1, v260);
  }
  else
  {
    v108 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v273[7];
    v107 = v292;
    v111 = v260;
    v108(v292, 1, 1, v260);
    v103 = v279;
  }
  if (v259(v107, 1, v111))
  {
    sub_23AA8A05C(v107, qword_2542DDD10);
    goto LABEL_20;
  }
  v112 = *(_QWORD *)(v107 + *(int *)(v111 + 56));
  swift_bridgeObjectRetain();
  sub_23AA8A05C(v107, qword_2542DDD10);
  v113 = *(_QWORD *)(v112 + 16);
  swift_bridgeObjectRelease();
  if (v113)
  {
LABEL_20:
    v114 = sub_23ADF6D74(v72);
    if (v114
      && (v115 = v114,
          v116 = objc_msgSend(v114, sel_selectedForMaterialization),
          v115,
          (v116 & 1) == 0)
      || (v117 = sub_23ADF6D74(v72)) != 0
      && (v118 = v117, v119 = objc_msgSend(v117, sel_requestedExtent), v118, v119 == (id)-1))
    {
      v132 = v256;
      sub_23AFC09DC(v256);
      swift_release();

      return sub_23AC03BE4(v72);
    }
    v120 = sub_23ADF6D74(v72);
    if (v120)
    {
      v121 = v120;
      v122 = (char *)objc_msgSend(v120, sel_requestedExtent);

      v263 = v72;
      v123 = sub_23ADF6D74(v72);
      if (v123)
      {
        v124 = v123;
        objc_msgSend(v123, sel_requestedExtent);
        v126 = v125;

        v262 = &v122[v126];
        if (__OFADD__(v122, v126))
        {
LABEL_107:
          __break(1u);
LABEL_108:
          __break(1u);
          goto LABEL_109;
        }
        v127 = *v254;
        v128 = (uint64_t)v275;
        if (*(_QWORD *)(*v254 + 16) && (v129 = sub_23AA97254((uint64_t)v103, v278), (v130 & 1) != 0))
        {
          sub_23AA8EFC8(*(_QWORD *)(v127 + 56) + v273[9] * v129, (uint64_t)v95, &qword_2542E6C80);
          v131 = 0;
        }
        else
        {
          v131 = 1;
        }
        v133 = v259;
        v134 = (unsigned int (*)(unint64_t *, uint64_t, uint64_t))v295;
        v135 = v260;
        v108((uint64_t)v95, v131, 1, v260);
        sub_23AA8EFC8((uint64_t)v95, v128, qword_2542DDD10);
        if (v133(v128, 1, v135) != 1)
        {
          v136 = *(_QWORD *)(v128 + *(int *)(v135 + 56));
          swift_bridgeObjectRetain();
          sub_23AA8A05C(v128, &qword_2542E6C80);
          v137 = 0;
          v138 = *(_QWORD *)(v136 + 64);
          v255 = v136 + 64;
          v271 = v136;
          v139 = 1 << *(_BYTE *)(v136 + 32);
          v140 = -1;
          if (v139 < 64)
            v140 = ~(-1 << v139);
          v141 = v140 & v138;
          v258 = (unint64_t)(v139 + 63) >> 6;
          v253 = v258 - 1;
          v142 = v284;
          v95 = v298;
          v143 = (unint64_t *)v290;
          while (1)
          {
            if (v141)
            {
              v291 = (v141 - 1) & v141;
              v292 = v137;
              v144 = __clz(__rbit64(v141)) | (v137 << 6);
              goto LABEL_40;
            }
            v146 = v137 + 1;
            if (__OFADD__(v137, 1))
              goto LABEL_106;
            if (v146 >= v258)
              break;
            v147 = *(_QWORD *)(v255 + 8 * v146);
            if (v147)
              goto LABEL_44;
            v192 = v137 + 2;
            if (v137 + 2 >= v258)
            {
              v291 = 0;
              v145 = 1;
LABEL_61:
              v292 = v146;
            }
            else
            {
              v147 = *(_QWORD *)(v255 + 8 * v192);
              if (v147)
                goto LABEL_59;
              v193 = v137 + 3;
              if (v137 + 3 >= v258)
                goto LABEL_73;
              v147 = *(_QWORD *)(v255 + 8 * v193);
              if (v147)
                goto LABEL_64;
              v192 = v137 + 4;
              if (v137 + 4 < v258)
              {
                v147 = *(_QWORD *)(v255 + 8 * v192);
                if (v147)
                {
LABEL_59:
                  v146 = v192;
                  goto LABEL_44;
                }
                v193 = v137 + 5;
                if (v137 + 5 < v258)
                {
                  v147 = *(_QWORD *)(v255 + 8 * v193);
                  if (!v147)
                  {
                    while (1)
                    {
                      v146 = v193 + 1;
                      if (__OFADD__(v193, 1))
                        goto LABEL_115;
                      if (v146 >= v258)
                      {
                        v291 = 0;
                        v145 = 1;
                        v146 = v253;
                        goto LABEL_61;
                      }
                      v147 = *(_QWORD *)(v255 + 8 * v146);
                      ++v193;
                      if (v147)
                        goto LABEL_44;
                    }
                  }
LABEL_64:
                  v146 = v193;
LABEL_44:
                  v291 = (v147 - 1) & v147;
                  v144 = __clz(__rbit64(v147)) + (v146 << 6);
                  v292 = v146;
LABEL_40:
                  sub_23AA8EFC8(*(_QWORD *)(v271 + 56) + *(_QWORD *)(v296 + 72) * v144, (uint64_t)v143, &qword_2542E6A10);
                  v145 = 0;
                  goto LABEL_47;
                }
LABEL_73:
                v292 = v192;
LABEL_46:
                v291 = 0;
                v145 = 1;
                goto LABEL_47;
              }
              v291 = 0;
              v145 = 1;
              v292 = v137 + 3;
            }
LABEL_47:
            ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))v95)(v143, v145, 1, v54);
            if (v134(v143, 1, v54) == 1)
            {
              v148 = (uint64_t)v282;
              v149 = v282;
              v150 = 1;
            }
            else
            {
              v151 = *(int *)(v54 + 64);
              v152 = *(int *)(v54 + 80);
              v153 = v143[1];
              v154 = v283;
              *v283 = *v143;
              v154[1] = v153;
              v155 = (char *)v154 + v151;
              v298 = v95;
              v156 = v54;
              v157 = v143;
              v158 = (void (*)(char *, char *, char *))v286[4];
              v159 = (uint64_t)v287;
              v158((char *)v154 + v151, (char *)v143 + v151, v287);
              v160 = swift_allocObject();
              v161 = *(_OWORD *)((char *)v157 + v152);
              v54 = v156;
              *(_OWORD *)(v160 + 16) = v161;
              v162 = *v154;
              v163 = v154[1];
              v148 = (uint64_t)v282;
              v164 = (char *)v282 + *(int *)(v156 + 64);
              v165 = (unint64_t *)((char *)v282 + *(int *)(v156 + 80));
              *v282 = v162;
              *(_QWORD *)(v148 + 8) = v163;
              v166 = v159;
              v134 = (unsigned int (*)(unint64_t *, uint64_t, uint64_t))v295;
              v158(v164, v155, (char *)v166);
              v95 = v298;
              *v165 = sub_23ADF35F8;
              v165[1] = v160;
              v149 = (_QWORD *)v148;
              v150 = 0;
            }
            ((void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))v95)(v149, v150, 1, v54);
            v167 = v281;
            sub_23AA724E8(v148, (uint64_t)v281, &qword_2542E6A18);
            if (v134(v167, 1, v54) == 1)
              goto LABEL_102;
            v298 = v95;
            v168 = *(int *)(v54 + 64);
            v169 = (char *)v142 + v168;
            v170 = *(int *)(v54 + 80);
            v171 = (uint64_t *)((char *)v142 + v170);
            v173 = *v167;
            v172 = (void (**)(_QWORD, _QWORD))v167[1];
            v174 = (char *)v167 + v168;
            v175 = *(unint64_t *)((char *)v167 + v170);
            v293 = *(void (**)(void))((char *)v167 + v170 + 8);
            *v142 = v173;
            v142[1] = (unint64_t)v172;
            v176 = v54;
            v177 = v286;
            v178 = (uint64_t)v287;
            v272 = (void (*)(_QWORD, _QWORD, _QWORD))v286[4];
            v272((char *)v142 + v168, v174, v287);
            v273 = v171;
            v179 = (uint64_t)v293;
            *v171 = v175;
            v171[1] = v179;
            v180 = v289;
            v181 = (uint64_t (*)())((char *)v289 + *(int *)(v176 + 64));
            v182 = (uint64_t *)((char *)v289 + *(int *)(v176 + 80));
            *v289 = v173;
            v180[1] = (unint64_t)v172;
            v285 = v172;
            v183 = (void (*)(void))v177[2];
            v294 = v181;
            v275 = v169;
            v184 = v179;
            v183();
            v274 = (unsigned __int8 *)v175;
            *v182 = v175;
            v182[1] = v184;
            v185 = (uint64_t (*)())sub_23ADF6D74(v173);
            if (v185)
            {
              v95 = v185;
              v261 = v183;
              v186 = v285;
              swift_retain();
              sub_23AA93780(v173);
              v187 = (char *)objc_msgSend(v95, sel_requestedExtent);
              v189 = v188;

              v280(v294, v178);
              v190 = sub_23ADF6D74(v263);
              if (!v190)
                goto LABEL_116;
              v191 = v190;
              v95 = (uint64_t (*)())objc_msgSend(v190, sel_requestedExtent);

              v142 = v284;
              v134 = (unsigned int (*)(unint64_t *, uint64_t, uint64_t))v295;
              if ((uint64_t)v187 < (uint64_t)v95)
              {
LABEL_76:
                v296 = v173;
                v194 = v184;
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
                inited = swift_initStackObject();
                v196 = MEMORY[0x24BEE4AF8];
                *(_QWORD *)(inited + 16) = MEMORY[0x24BEE4AF8];
                *(_QWORD *)(inited + 24) = v196;
                *(_QWORD *)(inited + 32) = v196;
                *(_QWORD *)(inited + 40) = v196;
                *(_QWORD *)(inited + 48) = 0;
                swift_beginAccess();
                v95 = v270;
                v197 = v278;
                sub_23ADF8C04((uint64_t)v279, v278, &qword_2542E6C80, (void (*)(unint64_t, uint64_t))sub_23B183658, (void (*)(void))sub_23B186B9C, (uint64_t)v270);
                swift_endAccess();
                if (v259((uint64_t)v95, 1, v260) == 1)
                  goto LABEL_120;
                v198 = *(unsigned __int8 *)v95;
                sub_23AA8A05C((uint64_t)v95, &qword_2542E6C80);
                v95 = v277;
                if (v198)
                  goto LABEL_123;
                v199 = v288;
                sub_23AE72B50(v279, v197, v276, inited);
                if (v199)
                {
                  swift_setDeallocating();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_release();
                  sub_23AC03BE4(v296);
                  sub_23AA8A05C((uint64_t)v284, &qword_2542E6A10);
                  swift_release();
                  sub_23AA8A05C((uint64_t)v95, qword_2542DDD10);
                  goto LABEL_103;
                }
                v210 = v267;
                sub_23B1C5BD0();
                sub_23B1C5B94();
                v212 = v211;
                (*(void (**)(char *, uint64_t))(v268 + 8))(v210, v269);
                v213 = v212 * 1000000000.0;
                if ((~COERCE__INT64(v212 * 1000000000.0) & 0x7FF0000000000000) == 0)
                  goto LABEL_108;
                v95 = (uint64_t (*)())v256;
                if (v213 > -9.22337204e18)
                {
                  if (v213 >= 9.22337204e18)
                    goto LABEL_110;
                  sub_23ADF691C((_QWORD *)inited, (uint64_t)v213, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
                  v288 = 0;
                  v217 = v297;
                  v218 = v283;
                  v219 = (char *)v283 + *(int *)(v297 + 64);
                  v220 = (unint64_t *)((char *)v283 + *(int *)(v297 + 80));
                  *v283 = v296;
                  v218[1] = (unint64_t)v186;
                  v221 = (uint64_t)v287;
                  ((void (*)(uint64_t (*)(), char *, char *))v261)((uint64_t (*)())v219, v275, v287);
                  *v220 = v274;
                  v220[1] = v194;

                  v280((uint64_t (*)())v219, v221);
                  v294 = sub_23AE4F2C0();
                  v222 = v279;
                  v223 = sub_23B148D70(&v299, (uint64_t)v279, v278);
                  if (v259(v224, 1, v260))
                  {
                    ((void (*)(uint64_t *, _QWORD))v223)(&v299, 0);
                    ((void (*)(_QWORD, _QWORD))v294)(&v300, 0);
                    v225 = v266;
                    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v298)(v266, 1, 1, v217);
                    v226 = v217;
                  }
                  else
                  {
                    v227 = v264;
                    sub_23ADF8B04((uint64_t)v186, (uint64_t)v264);
                    ((void (*)(uint64_t *, _QWORD))v223)(&v299, 0);
                    ((void (*)(_QWORD, _QWORD))v294)(&v300, 0);
                    v228 = 1;
                    v226 = v217;
                    if (((unsigned int (*)(unint64_t *, uint64_t, uint64_t))v295)(v227, 1, v217) != 1)
                    {
                      v229 = *(int *)(v217 + 64);
                      v295 = *(int *)(v217 + 80);
                      v230 = v227[1];
                      v231 = v283;
                      *v283 = *v227;
                      v231[1] = v230;
                      v232 = (char *)v231 + v229;
                      v233 = (uint64_t)v287;
                      v234 = (void (*)(char *, char *, uint64_t))v272;
                      v272((char *)v231 + v229, (char *)v227 + v229, v287);
                      v235 = swift_allocObject();
                      *(_OWORD *)(v235 + 16) = *(_OWORD *)((char *)v227 + v295);
                      v236 = v231[1];
                      v237 = v265;
                      v238 = (char *)v265 + *(int *)(v226 + 64);
                      v239 = (unint64_t *)((char *)v265 + *(int *)(v226 + 80));
                      *v265 = *v231;
                      v237[1] = v236;
                      v240 = v233;
                      v222 = v279;
                      v234(v238, v232, v240);
                      v228 = 0;
                      *v239 = sub_23ADF35F8;
                      v239[1] = v235;
                    }
                    v241 = (uint64_t)v265;
                    ((void (*)(unint64_t *, uint64_t, uint64_t, uint64_t))v298)(v265, v228, 1, v226);
                    v225 = v266;
                    sub_23AA724E8(v241, v266, &qword_2542E6A18);
                  }
                  v242 = v296;
                  sub_23AA8A05C(v225, &qword_2542E6A18);
                  v243 = v275;
                  v244 = (void *)sub_23ADF4384(v222, v278, v242, v275, v274, v194);
                  swift_release();
                  sub_23AC03BE4(v242);
                  v245 = v283;
                  v246 = (char *)v283 + *(int *)(v226 + 64);
                  v247 = *(int *)(v226 + 80);
                  v248 = v284;
                  v95 = (uint64_t (*)())v284[1];
                  *v283 = *v284;
                  v245[1] = (unint64_t)v95;
                  v249 = v243;
                  v250 = (uint64_t)v287;
                  ((void (*)(uint64_t (*)(), char *, char *))v261)((uint64_t (*)())v246, v249, v287);
                  *(_OWORD *)((char *)v245 + v247) = *(_OWORD *)v273;
                  v251 = v95;
                  v280((uint64_t (*)())v246, v250);
                  v252 = (char *)objc_msgSend(v251, sel_totalUnitCount);
                  if (!__OFADD__(v252, 1))
                  {
                    objc_msgSend(v251, sel_setTotalUnitCount_, v252 + 1);
                    objc_msgSend(v251, sel_addChild_withPendingUnitCount_, v244, 1);

                    swift_setDeallocating();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();

                    sub_23AA8A05C((uint64_t)v248, &qword_2542E6A10);
LABEL_102:
                    swift_release();
                    sub_23AA8A05C((uint64_t)v277, qword_2542DDD10);
LABEL_103:
                    v95 = (uint64_t (*)())v256;
                    goto LABEL_104;
                  }
                  goto LABEL_114;
                }
LABEL_109:
                __break(1u);
LABEL_110:
                __break(1u);
LABEL_111:
                __break(1u);
                goto LABEL_112;
              }
              if (__OFADD__(v187, v189))
              {
                __break(1u);
LABEL_106:
                __break(1u);
                goto LABEL_107;
              }
              if ((uint64_t)v262 < (uint64_t)&v187[v189])
                goto LABEL_76;
              sub_23AA8A05C((uint64_t)v284, &qword_2542E6A10);
              swift_release();
              sub_23AC03BE4(v173);

              v54 = v297;
              v95 = v298;
              v143 = (unint64_t *)v290;
            }
            else
            {
              v280(v294, v178);
              sub_23AA8A05C((uint64_t)v142, &qword_2542E6A10);
              v95 = v298;
              v143 = (unint64_t *)v290;
              v54 = v297;
              v134 = (unsigned int (*)(unint64_t *, uint64_t, uint64_t))v295;
            }
            v137 = v292;
            v141 = v291;
          }
          v292 = v137;
          goto LABEL_46;
        }
        goto LABEL_119;
      }
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      sub_23AA8A05C((uint64_t)v95, qword_2542DDD10);
      goto LABEL_123;
    }
LABEL_117:
    __break(1u);
    goto LABEL_118;
  }
  v263 = v72;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
  v200 = swift_initStackObject();
  v201 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v200 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v200 + 24) = v201;
  *(_QWORD *)(v200 + 32) = v201;
  *(_QWORD *)(v200 + 40) = v201;
  *(_QWORD *)(v200 + 48) = 0;
  swift_beginAccess();
  v202 = v274;
  sub_23ADF8C04((uint64_t)v103, v278, &qword_2542E6C80, (void (*)(unint64_t, uint64_t))sub_23B183658, (void (*)(void))sub_23B186B9C, (uint64_t)v274);
  swift_endAccess();
  v203 = v259((uint64_t)v202, 1, v260);
  v204 = v288;
  if (v203 == 1)
  {
    sub_23AA8A05C((uint64_t)v202, qword_2542DDD10);
LABEL_123:
    result = sub_23B1C704C();
    __break(1u);
    return result;
  }
  v205 = *v202;
  sub_23AA8A05C((uint64_t)v202, &qword_2542E6C80);
  v95 = (uint64_t (*)())v256;
  v206 = v269;
  v207 = v268;
  v208 = v267;
  if (v205)
  {
    if (v205 != 1)
      goto LABEL_90;
    v209 = v204;
    sub_23AE737C4((uint64_t)v103, v278, v98, v200);
  }
  else
  {
    v209 = v204;
    sub_23AE72B50(v103, v278, v98, v200);
  }
  if (v209)
    goto LABEL_94;
LABEL_90:
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v215 = v214;
  (*(void (**)(char *, uint64_t))(v207 + 8))(v208, v206);
  v216 = v215 * 1000000000.0;
  if ((~COERCE__INT64(v215 * 1000000000.0) & 0x7FF0000000000000) == 0)
    goto LABEL_111;
  if (v216 <= -9.22337204e18)
  {
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
  if (v216 >= 9.22337204e18)
    goto LABEL_113;
  sub_23ADF691C((_QWORD *)v200, (uint64_t)v216, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
LABEL_94:
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

LABEL_104:
  sub_23AFC09DC(v95);
  swift_release();

  return sub_23AC03BE4(v263);
}

_QWORD *sub_23ADF63F8()
{
  return sub_23ADF6404((uint64_t *)&unk_2542DDE60);
}

_QWORD *sub_23ADF6404(uint64_t *a1)
{
  _QWORD *result;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(a1);
  result = (_QWORD *)swift_allocObject();
  v2 = MEMORY[0x24BEE4AF8];
  result[2] = MEMORY[0x24BEE4AF8];
  result[3] = v2;
  result[4] = v2;
  result[5] = v2;
  result[6] = 0;
  return result;
}

_QWORD *sub_23ADF6438(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v17;
  _QWORD *result;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  void (*v22)(uint64_t *);
  uint64_t v23;
  void (*v24)(void);
  id v25;
  void (*v26)(_QWORD *__return_ptr, id *);
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void (*v33)(uint64_t *);
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _BYTE v49[12];
  id __dst[62];
  _BYTE v51[504];
  _BYTE v52[504];
  uint64_t v53;
  unsigned __int8 v54;
  char v55;
  _QWORD __src[63];
  _QWORD v57[31];
  _BYTE v58[208];
  uint64_t v59;
  uint64_t v60;
  id v61;

  v17 = *(_QWORD *)(a6 + 16);
  v53 = a1;
  v54 = a2;
  v55 = 0;
  result = (*(_QWORD *(**)(_QWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v17 + 168))(__src, &v53, 1);
  if (v8)
    return result;
  v41 = a8;
  v39 = a1;
  v40 = a5;
  sub_23AA724E8((uint64_t)__src, (uint64_t)v51, (uint64_t *)&unk_2542E4CB0);
  sub_23AA724E8((uint64_t)v51, (uint64_t)v52, (uint64_t *)&unk_2542E4CB0);
  result = (_QWORD *)sub_23AAFC2A4((uint64_t)v52);
  if ((_DWORD)result == 1)
    return result;
  v19 = a5 | 1;
  memcpy(__dst, __src, sizeof(__dst));
  if (a7)
    v20 = a7;
  else
    v20 = swift_retain();
  v21 = a2;
  if (BYTE1(__dst[17]) == 2)
  {
    v42 = v39;
    *(_QWORD *)&v43 = a2;
    *((_QWORD *)&v43 + 1) = 3;
    v44 = 0u;
    v45 = 0u;
    v46 = 0u;
    v47 = 0u;
    v48 = 0u;
    *(_QWORD *)v49 = 0;
    *(_DWORD *)&v49[8] = 151650304;
    v22 = *(void (**)(uint64_t *))(*(_QWORD *)a8 + 136);
    swift_retain();
    v22(&v42);
    v21 = a2;
  }
  else
  {
    swift_retain();
  }
  v23 = v19;
  v42 = v39;
  *(_QWORD *)&v43 = v21;
  *((_QWORD *)&v43 + 1) = 3;
  *(_QWORD *)&v44 = a3;
  *((_QWORD *)&v44 + 1) = a4;
  v45 = 0u;
  v46 = 0u;
  v47 = 0u;
  v48 = 0u;
  *(_QWORD *)v49 = 0;
  *(_DWORD *)&v49[8] = 151781376;
  (*(void (**)(uint64_t *))(*(_QWORD *)v20 + 136))(&v42);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F20);
  swift_allocObject();
  sub_23AEA2314(v39, v21, a3, a4, v19);
  v24 = *(void (**)(void))(*(_QWORD *)a8 + 144);
  v24();
  swift_release();
  v25 = __dst[30];
  if (__dst[30])
  {
    v61 = __dst[30];
    v26 = *(void (**)(_QWORD *__return_ptr, id *))(**(_QWORD **)(a6 + 40) + 264);
    v27 = __dst[30];
    v26(v57, &v61);
    sub_23AA724E8((uint64_t)v57, (uint64_t)v58, &qword_2542E5050);
    if (sub_23AAFCF2C((uint64_t)v58) == 1)
    {

    }
    else
    {
      v29 = v59;
      v30 = v60;
      v31 = (*(uint64_t (**)(void))(*(_QWORD *)a6 + 512))();
      v32 = sub_23AEFF0F4(v29, v30, 0, v31 & 1, LOBYTE(__dst[55]) == 1, (uint64_t)__dst[61] & 1);
      if ((unint64_t)(v32 - 500) < 2 || v32 == 3)
      {
        if (LOBYTE(__dst[42]) == 4)
        {
          v42 = (uint64_t)v25;
          v43 = xmmword_23B1DA8E0;
          v44 = 0u;
          v45 = 0u;
          v46 = 0u;
          *(_QWORD *)&v47 = 0;
          *((_QWORD *)&v47 + 1) = 589824;
          *(_QWORD *)v49 = 0;
          v48 = 0uLL;
          *(_DWORD *)&v49[7] = 0;
          v49[11] = 8;
          v33 = *(void (**)(uint64_t *))(*(_QWORD *)v41 + 136);
          v34 = v27;
          v33(&v42);
          sub_23AAB7E4C(v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
          v28 = 1;
          sub_23AA862DC(v25, 0, 1);
          sub_23AEAD8A8((void *)1, 0, 0, 0, 0, 0, 0, 0, 0, 9);

        }
        else
        {

          sub_23AAB7E4C(v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
          v28 = 1;
        }
        goto LABEL_21;
      }

      sub_23AAB7E4C(v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
    }
    v28 = 0;
  }
  else
  {
    v28 = 0;
  }
LABEL_21:
  if (!LOBYTE(__dst[4]))
  {
LABEL_24:
    sub_23AAFC3AC((uint64_t)__dst);
    return (_QWORD *)swift_release();
  }
  if (LOBYTE(__dst[45]) == 2)
  {
    if ((v28 & 1) != 0)
      goto LABEL_24;
    v35 = __dst[57];
    v36 = __dst[58];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60A8);
    v37 = swift_allocObject();
    v38 = v37;
    *(_BYTE *)(v37 + 144) = v21;
    *(_QWORD *)(v37 + 24) = 0;
    *(_QWORD *)(v37 + 32) = 0;
    *(_QWORD *)(v37 + 16) = 0;
    *(_BYTE *)(v37 + 40) = 1;
    *(_OWORD *)(v37 + 48) = 0u;
    *(_OWORD *)(v37 + 64) = 0u;
    *(_QWORD *)(v37 + 80) = 0;
    *(_OWORD *)(v37 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v37 + 104) = 0;
    *(_QWORD *)(v37 + 112) = v35;
    *(_QWORD *)(v37 + 120) = v36;
    *(_QWORD *)(v37 + 128) = v23;
    *(_QWORD *)(v37 + 136) = v39;
    if (v40 < 0)
    {
      *(_QWORD *)(v37 + 88) = 2359552;
      *(_BYTE *)(v37 + 104) = 0;
      sub_23AAAEE10((void *)0x40100, 0, 0);
    }
    ((void (*)(uint64_t))v24)(v38);
    swift_release();
  }
  swift_release();
  return (_QWORD *)sub_23AAFC3AC((uint64_t)__dst);
}

uint64_t sub_23ADF6900(_QWORD *a1, uint64_t a2)
{
  return sub_23ADF691C(a1, a2, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
}

uint64_t sub_23ADF691C(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD))
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  __int128 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  void (*v40)(_QWORD, _QWORD);
  _QWORD *v41;
  uint64_t v42;
  __int128 v43;
  char *v44;
  uint64_t v45[3];
  uint64_t v46;

  v6 = v4;
  v9 = sub_23B1C5E4C();
  v46 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for SyncState();
  MEMORY[0x24BDAC7A8](v34);
  v35 = (uint64_t *)((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v12 = *(_QWORD *)(a1[2] + 16);
  if (v12)
  {
    v37 = a2;
    v38 = v4;
    v39 = a1;
    v40 = a3;
    v41 = v3;
    v36 = swift_bridgeObjectRetain();
    v13 = (unint64_t *)(v36 + 40);
    *(_QWORD *)&v14 = 136315138;
    v43 = v14;
    v42 = MEMORY[0x24BEE4AD8] + 8;
    v15 = v44;
    do
    {
      v21 = *(v13 - 1);
      v20 = *v13;
      swift_bridgeObjectRetain();
      v22 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      swift_bridgeObjectRetain();
      v23 = sub_23B1C5E40();
      v24 = sub_23B1C6A88();
      if (os_log_type_enabled(v23, v24))
      {
        v16 = swift_slowAlloc();
        v17 = v9;
        v18 = swift_slowAlloc();
        v45[0] = v18;
        *(_DWORD *)v16 = v43;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v16 + 4) = sub_23AABEC68(v21, v20, v45);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23AA66000, v23, v24, "%s", (uint8_t *)v16, 0xCu);
        swift_arrayDestroy();
        v19 = v18;
        v9 = v17;
        MEMORY[0x23B8614BC](v19, -1, -1);
        v15 = v44;
        MEMORY[0x23B8614BC](v16, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v9);
      v13 += 2;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    a3 = v40;
    v3 = v41;
    v6 = v38;
    a1 = v39;
    a2 = v37;
  }
  swift_beginAccess();
  v25 = swift_bridgeObjectRetain();
  sub_23AE4F308(v25, a2);
  result = swift_bridgeObjectRelease();
  if (!v6)
  {
    swift_beginAccess();
    v27 = a1[3];
    swift_beginAccess();
    v28 = a1[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3(v27, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v3[7];
    ObjectType = swift_getObjectType();
    v31 = (*(uint64_t (**)(void))(*v3 + 272))();
    v32 = (uint64_t)v35;
    *v35 = v31;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 8))(v32, ObjectType, v29);
    return sub_23AA937BC(v32, (uint64_t (*)(_QWORD))type metadata accessor for SyncState);
  }
  return result;
}

uint64_t sub_23ADF6CB0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00) + 48));
}

uint64_t sub_23ADF6CD4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (unsigned __int8 *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AAA3120((uint64_t)v2);
  v3 = *v2;
  sub_23AA937BC((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  return v3;
}

uint64_t sub_23ADF6D50()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760) + 48));
}

void *sub_23ADF6D74(unint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = 0;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 0uLL:
      v1 = *(void **)(a1 + 24);
      goto LABEL_14;
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x16uLL:
    case 0x24uLL:
      v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x18);
      goto LABEL_14;
    case 2uLL:
      v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE6F0);
      v4 = swift_projectBox();
      v5 = *(int *)(v3 + 64);
      goto LABEL_13;
    case 6uLL:
    case 0x14uLL:
    case 0x25uLL:
      v2 = (uint64_t *)&unk_2542DD400;
      goto LABEL_12;
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x20);
      goto LABEL_14;
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
      v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      goto LABEL_14;
    case 0x1AuLL:
      v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      if (!v1)
        return v1;
      goto LABEL_14;
    case 0x23uLL:
      v2 = (uint64_t *)&unk_2569E2FB8;
      goto LABEL_12;
    case 0x28uLL:
      v2 = (uint64_t *)&unk_2569E2FE8;
LABEL_12:
      v6 = __swift_instantiateConcreteTypeFromMangledName(v2);
      v4 = swift_projectBox();
      v5 = *(int *)(v6 + 48);
LABEL_13:
      v1 = *(void **)(v4 + v5);
LABEL_14:
      v7 = v1;
      break;
    default:
      return v1;
  }
  return v1;
}

void *sub_23ADF6E78(unint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = 0;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 0uLL:
      v1 = *(void **)(a1 + 32);
      goto LABEL_14;
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x16uLL:
    case 0x24uLL:
      v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x20);
      goto LABEL_14;
    case 2uLL:
      v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE6F0);
      v4 = swift_projectBox();
      v5 = *(int *)(v3 + 64);
      goto LABEL_13;
    case 6uLL:
    case 0x14uLL:
    case 0x25uLL:
      v2 = (uint64_t *)&unk_2542DD400;
      goto LABEL_12;
    case 0xEuLL:
    case 0xFuLL:
      v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x18);
      goto LABEL_14;
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
      v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      goto LABEL_14;
    case 0x1AuLL:
      v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFF9) + 0x10);
      if (!v1)
        return v1;
      goto LABEL_14;
    case 0x23uLL:
      v2 = (uint64_t *)&unk_2569E2FB8;
      goto LABEL_12;
    case 0x28uLL:
      v2 = (uint64_t *)&unk_2569E2FE8;
LABEL_12:
      v6 = __swift_instantiateConcreteTypeFromMangledName(v2);
      v4 = swift_projectBox();
      v5 = *(int *)(v6 + 48);
LABEL_13:
      v1 = *(void **)(v4 + v5);
LABEL_14:
      v7 = v1;
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t sub_23ADF6F7C()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)(v0 + 16) + 96))(&v2);
  return v2;
}

uint64_t sub_23ADF6FB8()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(**(_QWORD **)(v0 + 16) + 96))(&v2);
  return v2;
}

uint64_t sub_23ADF6FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD v24[3];

  v4 = v2;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E19C0) - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    v11 = swift_bridgeObjectRetain();
    v12 = v7;
    while (1)
    {
      v13 = (void *)MEMORY[0x23B8601A8](v11);
      sub_23AE14844(v9, v4);
      if (v3)
        break;
      objc_autoreleasePoolPop(v13);
      v9 += v10;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    objc_autoreleasePoolPop(v13);
    return swift_bridgeObjectRelease();
  }
LABEL_6:
  v14 = *(_QWORD *)(v4 + 16);
  v24[0] = a2;
  v24[1] = sub_23AEAD51C;
  v24[2] = v4;
  v15 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)v14 + 520);
  swift_bridgeObjectRetain();
  swift_retain();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7B8);
  v17 = sub_23AAB5A28((unint64_t *)&unk_2542E2050, &qword_2542DE7B8, MEMORY[0x24BEE2B40]);
  v15(v24, v16, v17);
  swift_release();
  result = swift_bridgeObjectRelease();
  if (!v3 && v7)
  {
    v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E19C0) - 8);
    v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v21 = *(_QWORD *)(v19 + 72);
    v22 = swift_bridgeObjectRetain();
    do
    {
      v23 = (void *)MEMORY[0x23B8601A8](v22);
      sub_23AE1664C(v20, v4);
      objc_autoreleasePoolPop(v23);
      v20 += v21;
      --v7;
    }
    while (v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23ADF71B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  _QWORD v24[3];

  v4 = v2;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E6488) - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    v11 = swift_bridgeObjectRetain();
    v12 = v7;
    while (1)
    {
      v13 = (void *)MEMORY[0x23B8601A8](v11);
      sub_23AE14BFC(v9, v4);
      if (v3)
        break;
      objc_autoreleasePoolPop(v13);
      v9 += v10;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    objc_autoreleasePoolPop(v13);
    return swift_bridgeObjectRelease();
  }
LABEL_6:
  v14 = *(_QWORD *)(v4 + 16);
  v24[0] = a2;
  v24[1] = sub_23AEB304C;
  v24[2] = v4;
  v15 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)v14 + 520);
  swift_bridgeObjectRetain();
  swift_retain();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6498);
  v17 = sub_23AAB5A28((unint64_t *)&unk_2569E64A0, &qword_2569E6498, MEMORY[0x24BEE2B40]);
  v15(v24, v16, v17);
  swift_release();
  result = swift_bridgeObjectRelease();
  if (!v3 && v7)
  {
    v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E6488) - 8);
    v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v21 = *(_QWORD *)(v19 + 72);
    v22 = swift_bridgeObjectRetain();
    do
    {
      v23 = (void *)MEMORY[0x23B8601A8](v22);
      sub_23AE16A28(v20, v4);
      objc_autoreleasePoolPop(v23);
      v20 += v21;
      --v7;
    }
    while (v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23ADF7370()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  _OWORD v10[21];
  uint64_t v11;
  _BYTE v12[248];
  _OWORD v13[15];
  uint64_t v14;

  v1 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  sub_23AA724E8(v0 + v1[13], (uint64_t)v12, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v12, (uint64_t)v13, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v13) != 1)
  {
    v10[18] = v13[12];
    v10[19] = v13[13];
    v10[20] = v13[14];
    v11 = v14;
    v10[14] = v13[8];
    v10[15] = v13[9];
    v10[16] = v13[10];
    v10[17] = v13[11];
    v10[10] = v13[4];
    v10[11] = v13[5];
    v10[12] = v13[6];
    v10[13] = v13[7];
    v10[6] = v13[0];
    v10[7] = v13[1];
    v10[8] = v13[2];
    v10[9] = v13[3];
    sub_23AF96E78();
    *(_QWORD *)&v10[0] = 0x3A72747461736E20;
    *((_QWORD *)&v10[0] + 1) = 0xE800000000000000;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  if ((*(_BYTE *)(v0 + v1[14] + 24) & 1) == 0)
  {
    sub_23B0ECB88();
    *(_QWORD *)&v10[0] = 0x3A63657220;
    *((_QWORD *)&v10[0] + 1) = 0xE500000000000000;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  if ((*(_BYTE *)(v0 + v1[15] + 16) & 1) == 0)
  {
    sub_23B0ECCBC();
    *(_QWORD *)&v10[0] = 0x3A63657220;
    *((_QWORD *)&v10[0] + 1) = 0xE500000000000000;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  v2 = *(_QWORD *)(v0 + v1[16]);
  if (v2)
  {
    strcpy((char *)v10, " unsupported:");
    HIWORD(v10[0]) = -4864;
    sub_23AF16528(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  v3 = (uint64_t *)(v0 + v1[17]);
  v4 = *v3;
  v5 = (unint64_t)v3[1] >> 62;
  if (!(_DWORD)v5)
  {
    v6 = 1852270888;
    goto LABEL_13;
  }
  if ((_DWORD)v5 == 1)
  {
    v6 = 1886221352;
LABEL_13:
    *(_QWORD *)&v10[0] = v6 & 0xFFFF0000FFFFFFFFLL | 0x3A00000000;
    *((_QWORD *)&v10[0] + 1) = 0xE500000000000000;
    sub_23ADB47EC(v4);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
  }
  *(_QWORD *)&v10[0] = 0;
  *((_QWORD *)&v10[0] + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23AA96F18(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AA96F18(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  v7 = (void *)sub_23B1C63BC();
  v8 = objc_msgSend(v7, sel_fp_obfuscatedFilename);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AB59228();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AF96AB8();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 3830588;
}

uint64_t sub_23ADF78A4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  _OWORD v10[19];
  uint64_t v11;
  _BYTE v12[248];
  _OWORD v13[15];
  uint64_t v14;

  v1 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  sub_23AA724E8(v0 + v1[13], (uint64_t)v12, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v12, (uint64_t)v13, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v13) != 1)
  {
    v10[16] = v13[12];
    v10[17] = v13[13];
    v10[18] = v13[14];
    v11 = v14;
    v10[12] = v13[8];
    v10[13] = v13[9];
    v10[14] = v13[10];
    v10[15] = v13[11];
    v10[8] = v13[4];
    v10[9] = v13[5];
    v10[10] = v13[6];
    v10[11] = v13[7];
    v10[4] = v13[0];
    v10[5] = v13[1];
    v10[6] = v13[2];
    v10[7] = v13[3];
    sub_23AF96E78();
    *(_QWORD *)&v10[0] = 0x3A72747461736E20;
    *((_QWORD *)&v10[0] + 1) = 0xE800000000000000;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  if ((*(_BYTE *)(v0 + v1[14] + 24) & 1) == 0)
  {
    sub_23B0ECB88();
    *(_QWORD *)&v10[0] = 0x3A63657220;
    *((_QWORD *)&v10[0] + 1) = 0xE500000000000000;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  if ((*(_BYTE *)(v0 + v1[15] + 16) & 1) == 0)
  {
    sub_23B0ECCBC();
    *(_QWORD *)&v10[0] = 0x3A63657220;
    *((_QWORD *)&v10[0] + 1) = 0xE500000000000000;
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  v2 = *(_QWORD *)(v0 + v1[16]);
  if (v2)
  {
    strcpy((char *)v10, " unsupported:");
    HIWORD(v10[0]) = -4864;
    sub_23AF16528(v2);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  v3 = (uint64_t *)(v0 + v1[17]);
  v4 = *v3;
  v5 = (unint64_t)v3[1] >> 62;
  if (!(_DWORD)v5)
  {
    v6 = 1852270888;
    goto LABEL_13;
  }
  if ((_DWORD)v5 == 1)
  {
    v6 = 1886221352;
LABEL_13:
    *(_QWORD *)&v10[0] = v6 & 0xFFFF0000FFFFFFFFLL | 0x3A00000000;
    *((_QWORD *)&v10[0] + 1) = 0xE500000000000000;
    sub_23ADB47EC(v4);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
  }
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23AA7B734();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AA7B734();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  v7 = (void *)sub_23B1C63BC();
  v8 = objc_msgSend(v7, sel_fp_obfuscatedFilename);

  sub_23B1C63E0();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AB59228();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23AF967C4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 3830588;
}

double sub_23ADF7DC8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double result;
  char v36;
  uint64_t v37;
  unint64_t v38;
  _OWORD v39[4];
  _QWORD v40[32];

  v4 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v5 = a2 + v4[14];
  *(_QWORD *)v5 = 0;
  *(_QWORD *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  *(_BYTE *)(v5 + 24) = 1;
  v6 = a2 + v4[15];
  *(_QWORD *)v6 = 0;
  *(_QWORD *)(v6 + 8) = 0;
  *(_BYTE *)(v6 + 16) = 1;
  v7 = objc_msgSend(a1, sel_itemID);
  v8 = objc_msgSend(v7, sel_identifier);

  *(_QWORD *)a2 = v8;
  v9 = objc_msgSend(a1, sel_itemID);
  v10 = objc_msgSend(v9, sel_identifier);

  if (qword_2542E1FE8 != -1)
    swift_once();
  v11 = sub_23B1C63E0();
  v13 = v12;
  if (v11 == sub_23B1C63E0() && v13 == v14)
    goto LABEL_11;
  v15 = sub_23B1C7388();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    v16 = a1;
    v17 = objc_msgSend(v16, sel_itemID);
    v10 = objc_msgSend(v17, sel_identifier);

    if (qword_2542E1FE0 != -1)
      swift_once();
    v18 = sub_23B1C63E0();
    v20 = v19;
    if (v18 == sub_23B1C63E0() && v20 == v21)
    {

LABEL_11:
      swift_bridgeObjectRelease_n();
      goto LABEL_12;
    }
    v36 = sub_23B1C7388();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
    {
      *(_QWORD *)(a2 + 8) = sub_23ADAB49C();
      goto LABEL_13;
    }
  }
LABEL_12:
  v22 = objc_msgSend(a1, sel_itemID);
  v23 = objc_msgSend(v22, sel_identifier);

  *(_QWORD *)(a2 + 8) = v23;
LABEL_13:
  v24 = a2 + v4[13];
  sub_23AAA5788((uint64_t *)v39);
  v25 = v39[1];
  *(_OWORD *)(a2 + 16) = v39[0];
  *(_OWORD *)(a2 + 32) = v25;
  v26 = v39[3];
  *(_OWORD *)(a2 + 48) = v39[2];
  *(_OWORD *)(a2 + 64) = v26;
  v27 = objc_msgSend(a1, sel_filename);
  v28 = sub_23B1C63E0();
  v30 = v29;

  v40[0] = v28;
  v40[1] = v30;
  v38 = sub_23AAA420C();
  v37 = MEMORY[0x24BEE0D00];
  v31 = sub_23B1C6CF8();
  v33 = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 80) = v31;
  *(_QWORD *)(a2 + 88) = v33;
  sub_23AAA3120(a2 + v4[12]);
  sub_23AAA4B74((uint64_t)v40);
  sub_23AA724E8((uint64_t)v40, v24, &qword_2542E5050);
  v34 = sub_23AFA9348((int)objc_msgSend(a1, sel_unsupportedFields, v37, v38, v38, v38, 47, 0xE100000000000000, 58, 0xE100000000000000));

  *(_QWORD *)(a2 + v4[16]) = v34;
  result = 0.0;
  *(_OWORD *)(a2 + v4[17]) = xmmword_23B1D2320;
  return result;
}

uint64_t sub_23ADF8184(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_retain();
    v3 = sub_23B1C6E48();
    swift_release();
    return v3 & 1;
  }
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_20;
  sub_23B1C74A8();
  sub_23B1C63E0();
  sub_23B1C64A0();
  swift_bridgeObjectRelease();
  v5 = sub_23B1C74E4();
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = v5 & ~v6;
  v8 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    goto LABEL_20;
  v9 = sub_23B1C63E0();
  v11 = v10;
  if (v9 == sub_23B1C63E0() && v11 == v12)
  {
LABEL_11:
    swift_bridgeObjectRelease_n();
    v15 = 1;
    return v15 & 1;
  }
  v14 = sub_23B1C7388();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    v16 = ~v6;
    v17 = (v7 + 1) & v16;
    if (((*(_QWORD *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
    {
      while (1)
      {
        v18 = sub_23B1C63E0();
        v20 = v19;
        if (v18 == sub_23B1C63E0() && v20 == v21)
          break;
        v15 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          v17 = (v17 + 1) & v16;
          if (((*(_QWORD *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
            continue;
        }
        return v15 & 1;
      }
      goto LABEL_11;
    }
LABEL_20:
    v15 = 0;
    return v15 & 1;
  }
  v15 = 1;
  return v15 & 1;
}

uint64_t sub_23ADF8398(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_23B1C63E0();
    sub_23B1C74A8();
    sub_23B1C64A0();
    v3 = sub_23B1C74E4();
    swift_bridgeObjectRelease();
    v4 = -1 << *(_BYTE *)(a2 + 32);
    v5 = v3 & ~v4;
    v6 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    {
      v7 = sub_23B1C63E0();
      v9 = v8;
      if (v7 == sub_23B1C63E0() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v12 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
LABEL_18:
        v20 = 1;
        return v20 & 1;
      }
      v13 = ~v4;
      v14 = (v5 + 1) & v13;
      if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
      {
        while (1)
        {
          v15 = sub_23B1C63E0();
          v17 = v16;
          if (v15 == sub_23B1C63E0() && v17 == v18)
            break;
          v20 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            v14 = (v14 + 1) & v13;
            if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
              continue;
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v20 = 0;
  return v20 & 1;
}

uint64_t sub_23ADF855C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E3050);
  MEMORY[0x24BDAC7A8](v56);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v48 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v48 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v48 - v14;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v16 = *(_QWORD *)(v57 - 8);
  v17 = MEMORY[0x24BDAC7A8](v57);
  v53 = (uint64_t)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v48 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v48 - v24;
  if (*(_QWORD *)(a2 + 16))
  {
    v52 = v23;
    sub_23B1C74A8();
    sub_23AA8EFC8(a1, (uint64_t)v25, &qword_2542DDDB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23AA724E8((uint64_t)v25, (uint64_t)v10, &qword_2542E1608);
      sub_23B1C74B4();
      sub_23B14B2C8();
      v26 = (uint64_t)v10;
      v27 = &qword_2542E1608;
    }
    else
    {
      sub_23AA724E8((uint64_t)v25, (uint64_t)v15, &qword_2542E1600);
      sub_23B1C74B4();
      sub_23B14AE68();
      v26 = (uint64_t)v15;
      v27 = &qword_2542E1600;
    }
    sub_23AA8A05C(v26, v27);
    v28 = sub_23B1C74E4();
    v29 = -1 << *(_BYTE *)(a2 + 32);
    v30 = v28 & ~v29;
    v31 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0)
    {
      v54 = a2;
      v55 = a1;
      v32 = ~v29;
      v33 = *(_QWORD *)(v16 + 72);
      v34 = v53;
      v50 = v22;
      v51 = v33;
      do
      {
        sub_23AA8EFC8(*(_QWORD *)(v54 + 48) + v33 * v30, (uint64_t)v22, &qword_2542DDDB0);
        v35 = (uint64_t)&v5[*(int *)(v56 + 48)];
        sub_23AA8EFC8((uint64_t)v22, (uint64_t)v5, &qword_2542DDDB0);
        sub_23AA8EFC8(v55, v35, &qword_2542DDDB0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_23AA8EFC8((uint64_t)v5, v34, &qword_2542DDDB0);
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            sub_23AA8A05C(v34, &qword_2542E1608);
            goto LABEL_8;
          }
          v36 = v49;
          sub_23AA724E8(v35, (uint64_t)v49, &qword_2542E1608);
          sub_23B028CFC(v53, v36);
          v38 = v37;
          v39 = (uint64_t)v36;
          v34 = v53;
          sub_23AA8A05C(v39, &qword_2542E1608);
          sub_23AA8A05C(v34, &qword_2542E1608);
          sub_23AA8A05C((uint64_t)v5, &qword_2542DDDB0);
          if ((v38 & 1) != 0)
            goto LABEL_20;
        }
        else
        {
          v40 = v31;
          v41 = v32;
          v42 = v52;
          sub_23AA8EFC8((uint64_t)v5, v52, &qword_2542DDDB0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_23AA8A05C(v42, &qword_2542E1600);
            v32 = v41;
            v31 = v40;
            v22 = v50;
            v33 = v51;
LABEL_8:
            sub_23AA8A05C((uint64_t)v5, (uint64_t *)&unk_2569E3050);
            goto LABEL_9;
          }
          v43 = v48;
          sub_23AA724E8(v35, v48, &qword_2542E1600);
          sub_23B028224(v42, v43);
          v45 = v44;
          v46 = v43;
          v34 = v53;
          sub_23AA8A05C(v46, &qword_2542E1600);
          sub_23AA8A05C(v42, &qword_2542E1600);
          sub_23AA8A05C((uint64_t)v5, &qword_2542DDDB0);
          v32 = v41;
          v31 = v40;
          v22 = v50;
          v33 = v51;
          if ((v45 & 1) != 0)
          {
LABEL_20:
            sub_23AA8A05C((uint64_t)v22, &qword_2542DDDB0);
            return 1;
          }
        }
LABEL_9:
        sub_23AA8A05C((uint64_t)v22, &qword_2542DDDB0);
        v30 = (v30 + 1) & v32;
      }
      while (((*(_QWORD *)(v31 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0);
    }
  }
  return 0;
}

BOOL sub_23ADF8A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = sub_23B1C749C();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_23ADF8AF8(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

uint64_t sub_23ADF8B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  char v6;
  unint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v5 = sub_23AAB567C(a1);
  if ((v6 & 1) != 0)
  {
    v7 = v5;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v2;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23B186DDC();
      v9 = v15;
    }
    v10 = *(_QWORD *)(v9 + 56);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
    v12 = *(_QWORD *)(v11 - 8);
    sub_23AA724E8(v10 + *(_QWORD *)(v12 + 72) * v7, a2, &qword_2542E6A10);
    sub_23B183664(v7, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6A10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_23ADF8C04@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X2>, void (*a4)(unint64_t, uint64_t)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t *v10;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v10 = v6;
  v12 = sub_23AA97254(a1, a2);
  if ((v13 & 1) != 0)
  {
    v14 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v6;
    v22 = *v10;
    *v10 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      a5();
      v16 = v22;
    }
    v17 = *(_QWORD *)(v16 + 56);
    v18 = __swift_instantiateConcreteTypeFromMangledName(a3);
    v19 = *(_QWORD *)(v18 - 8);
    sub_23AA724E8(v17 + *(_QWORD *)(v19 + 72) * v14, a6, a3);
    a4(v14, v16);
    *v10 = v16;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(a6, 0, 1, v18);
  }
  else
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(a3);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a6, 1, 1, v21);
  }
}

void sub_23ADF8D0C(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  char v17;
  char v18;
  uint64_t v19;
  int64_t v20;
  _QWORD v22[3];
  char v23;
  uint64_t v24;

  v19 = a3 + 56;
  v4 = 1 << *(_BYTE *)(a3 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a3 + 56);
  v20 = (unint64_t)(v4 + 63) >> 6;
  v24 = a3;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v7 >= v20)
      goto LABEL_21;
    v11 = *(_QWORD *)(v19 + 8 * v7);
    if (!v11)
      break;
LABEL_18:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_19:
    v13 = *(_QWORD *)(v24 + 48) + 32 * v9;
    v14 = *(void **)v13;
    v15 = *(void **)(v13 + 8);
    v16 = *(void **)(v13 + 16);
    v17 = *(_BYTE *)(v13 + 24);
    v22[0] = v14;
    v22[1] = v15;
    v22[2] = v16;
    v23 = v17;
    sub_23AAFA44C(v14, v15, v16, v17);
    v18 = a1(v22);
    sub_23ABE4D94(v14, v15, v16, v17);
    if (v3 || (v18 & 1) != 0)
    {
LABEL_21:
      swift_release();
      return;
    }
  }
  v12 = v7 + 1;
  if (v7 + 1 >= v20)
    goto LABEL_21;
  v11 = *(_QWORD *)(v19 + 8 * v12);
  if (v11)
    goto LABEL_17;
  v12 = v7 + 2;
  if (v7 + 2 >= v20)
    goto LABEL_21;
  v11 = *(_QWORD *)(v19 + 8 * v12);
  if (v11)
    goto LABEL_17;
  v12 = v7 + 3;
  if (v7 + 3 >= v20)
    goto LABEL_21;
  v11 = *(_QWORD *)(v19 + 8 * v12);
  if (v11)
    goto LABEL_17;
  v12 = v7 + 4;
  if (v7 + 4 >= v20)
    goto LABEL_21;
  v11 = *(_QWORD *)(v19 + 8 * v12);
  if (v11)
  {
LABEL_17:
    v7 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v20)
      goto LABEL_21;
    v11 = *(_QWORD *)(v19 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_23ADF8F30(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t i;
  BOOL v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v28;
  _QWORD v29[3];
  char v30;
  __int128 v31;
  int64_t v32;

  v4 = v3;
  v24 = a3 + 64;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 64);
  v25 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v28 = (v7 - 1) & v7;
  v32 = v9;
  for (i = __clz(__rbit64(v7)) | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v12 << 6))
  {
    v15 = *(_QWORD *)(a3 + 56);
    v16 = *(_QWORD *)(a3 + 48) + 32 * i;
    v17 = *(void **)v16;
    v18 = *(void **)(v16 + 8);
    v19 = *(void **)(v16 + 16);
    v20 = *(_BYTE *)(v16 + 24);
    v29[0] = v17;
    v29[1] = v18;
    v29[2] = v19;
    v30 = v20;
    v31 = *(_OWORD *)(v15 + 16 * i);
    sub_23AAFA44C(v17, v18, v19, v20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = v4;
    v22 = a1(v29);
    sub_23ABE4D94(v17, v18, v19, v20);
    if (v21)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v23 & 1;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
    {
      swift_release();
      v23 = 1;
      return v23 & 1;
    }
    v4 = 0;
    v9 = v32;
    v7 = v28;
    if (v28)
      goto LABEL_4;
LABEL_5:
    v11 = __OFADD__(v9, 1);
    v12 = v9 + 1;
    if (v11)
      break;
    if (v12 >= v25)
      goto LABEL_28;
    v13 = *(_QWORD *)(v24 + 8 * v12);
    if (!v13)
    {
      v14 = v12 + 1;
      if (v12 + 1 >= v25)
        goto LABEL_28;
      v13 = *(_QWORD *)(v24 + 8 * v14);
      if (v13)
        goto LABEL_16;
      v14 = v12 + 2;
      if (v12 + 2 >= v25)
        goto LABEL_28;
      v13 = *(_QWORD *)(v24 + 8 * v14);
      if (v13)
        goto LABEL_16;
      v14 = v12 + 3;
      if (v12 + 3 >= v25)
        goto LABEL_28;
      v13 = *(_QWORD *)(v24 + 8 * v14);
      if (v13)
      {
LABEL_16:
        v12 = v14;
        goto LABEL_17;
      }
      v14 = v12 + 4;
      if (v12 + 4 < v25)
      {
        v13 = *(_QWORD *)(v24 + 8 * v14);
        if (!v13)
        {
          while (1)
          {
            v12 = v14 + 1;
            if (__OFADD__(v14, 1))
              goto LABEL_31;
            if (v12 >= v25)
              goto LABEL_28;
            v13 = *(_QWORD *)(v24 + 8 * v12);
            ++v14;
            if (v13)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release();
      v23 = 0;
      return v23 & 1;
    }
LABEL_17:
    v28 = (v13 - 1) & v13;
    v32 = v12;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23ADF91CC(uint64_t (*a1)(_OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  __int128 v21;
  char v22;
  _OWORD v23[2];
  uint64_t v24;
  __int16 v25;

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v12++, 1))
      break;
    if (v12 >= v10)
      goto LABEL_27;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
    {
      v17 = v12 + 1;
      if (v12 + 1 >= v10)
        goto LABEL_27;
      v16 = *(_QWORD *)(v6 + 8 * v17);
      if (!v16)
      {
        v17 = v12 + 2;
        if (v12 + 2 >= v10)
          goto LABEL_27;
        v16 = *(_QWORD *)(v6 + 8 * v17);
        if (!v16)
        {
          v17 = v12 + 3;
          if (v12 + 3 >= v10)
            goto LABEL_27;
          v16 = *(_QWORD *)(v6 + 8 * v17);
          if (!v16)
          {
            v17 = v12 + 4;
            if (v12 + 4 >= v10)
            {
LABEL_27:
              swift_release();
              v22 = 0;
              return v22 & 1;
            }
            v16 = *(_QWORD *)(v6 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_30;
                if (v12 >= v10)
                  goto LABEL_27;
                v16 = *(_QWORD *)(v6 + 8 * v12);
                ++v17;
                if (v16)
                  goto LABEL_18;
              }
            }
          }
        }
      }
      v12 = v17;
    }
LABEL_18:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_19:
    v18 = *(_QWORD *)(a3 + 48) + 48 * v14;
    v19 = *(_QWORD *)(v18 + 32);
    v20 = *(_WORD *)(v18 + 40);
    v21 = *(_OWORD *)(v18 + 16);
    v23[0] = *(_OWORD *)v18;
    v23[1] = v21;
    v24 = v19;
    v25 = v20;
    result = a1(v23);
    if (v3)
    {
      swift_release();
      return v22 & 1;
    }
    if ((result & 1) != 0)
    {
      swift_release();
      v22 = 1;
      return v22 & 1;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23ADF938C(uint64_t (*a1)(_OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  __int128 v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;
  __int16 v27;
  __int128 v28;
  int64_t v29;

  v24 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v29 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v10++, 1))
      break;
    if (v10 >= v29)
      goto LABEL_27;
    v14 = *(_QWORD *)(v24 + 8 * v10);
    if (!v14)
    {
      v15 = v10 + 1;
      if (v10 + 1 >= v29)
        goto LABEL_27;
      v14 = *(_QWORD *)(v24 + 8 * v15);
      if (!v14)
      {
        v15 = v10 + 2;
        if (v10 + 2 >= v29)
          goto LABEL_27;
        v14 = *(_QWORD *)(v24 + 8 * v15);
        if (!v14)
        {
          v15 = v10 + 3;
          if (v10 + 3 >= v29)
            goto LABEL_27;
          v14 = *(_QWORD *)(v24 + 8 * v15);
          if (!v14)
          {
            v15 = v10 + 4;
            if (v10 + 4 >= v29)
            {
LABEL_27:
              swift_release();
              v23 = 0;
              return v23 & 1;
            }
            v14 = *(_QWORD *)(v24 + 8 * v15);
            if (!v14)
            {
              while (1)
              {
                v10 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_30;
                if (v10 >= v29)
                  goto LABEL_27;
                v14 = *(_QWORD *)(v24 + 8 * v10);
                ++v15;
                if (v14)
                  goto LABEL_18;
              }
            }
          }
        }
      }
      v10 = v15;
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_19:
    v16 = *(_QWORD *)(a3 + 56);
    v17 = *(_QWORD *)(a3 + 48) + 48 * v12;
    v18 = *(_QWORD *)(v17 + 32);
    v19 = *(_WORD *)(v17 + 40);
    v20 = *(_OWORD *)(v17 + 16);
    v25[0] = *(_OWORD *)v17;
    v25[1] = v20;
    v26 = v18;
    v27 = v19;
    v28 = *(_OWORD *)(v16 + 16 * v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = a1(v25);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v23 & 1;
    }
    v22 = v21;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
    {
      swift_release();
      v23 = 1;
      return v23 & 1;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

BOOL sub_23ADF95D0(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  int v16;
  BOOL v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v25[2];
  int v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _BOOL8 v30;
  uint64_t (*v31)(char *);
  uint64_t v32;

  v4 = v3;
  v30 = a2;
  v31 = a1;
  v32 = sub_23B1C5A08();
  v6 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6740);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v27 = *(_QWORD *)(v6 + 72);
    v28 = v8;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v25[1] = a3;
    swift_bridgeObjectRetain();
    while (1)
    {
      v14 = v32;
      v29(v11, v13, v32);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v15(v11, 0, 1, v14);
      v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v14);
      v17 = v16 != 1;
      if (v16 == 1)
        break;
      v26 = 1;
      v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v19 = v6;
      v20 = v28;
      v18(v28, v11, v14);
      v17 = v30;
      v21 = v31(v20);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
        swift_bridgeObjectRelease();
        return v17;
      }
      v22 = v21;
      v23 = v15;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
      if ((v22 & 1) != 0)
      {
        v17 = v26;
        break;
      }
      v13 += v27;
      --v12;
      v4 = 0;
      v6 = v19;
      if (!v12)
        goto LABEL_9;
    }
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v23(v11, 1, 1, v32);
    v17 = 0;
  }
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_23ADF97F8(uint64_t (*a1)(_OWORD *), uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, _OWORD *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int64_t v24;
  uint64_t v26;
  _OWORD v28[2];
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;

  v26 = a3 + 64;
  v6 = -1;
  v7 = -1 << *(_BYTE *)(a3 + 32);
  if (-v7 < 64)
    v6 = ~(-1 << -(char)v7);
  v8 = v6 & *(_QWORD *)(a3 + 64);
  v24 = (unint64_t)(63 - v7) >> 6;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    do
    {
      if (v8)
      {
        v15 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v16 = v15 | (v10 << 6);
        goto LABEL_24;
      }
      v17 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
LABEL_45:
        __break(1u);
        return result;
      }
      if (v17 >= v24)
        goto LABEL_40;
      v18 = *(_QWORD *)(v26 + 8 * v17);
      if (!v18)
      {
        v19 = v10 + 2;
        if (v10 + 2 >= v24)
          goto LABEL_40;
        v18 = *(_QWORD *)(v26 + 8 * v19);
        if (!v18)
        {
          v20 = v10 + 3;
          if (v17 + 2 >= v24)
            goto LABEL_40;
          v18 = *(_QWORD *)(v26 + 8 * v20);
          if (v18)
            goto LABEL_22;
          v19 = v17 + 3;
          if (v17 + 3 >= v24)
            goto LABEL_40;
          v18 = *(_QWORD *)(v26 + 8 * v19);
          if (!v18)
          {
            v20 = v17 + 4;
            if (v17 + 4 >= v24)
              goto LABEL_40;
            v18 = *(_QWORD *)(v26 + 8 * v20);
            if (v18)
            {
LABEL_22:
              v17 = v20;
              goto LABEL_23;
            }
            v19 = v17 + 5;
            if (v17 + 5 >= v24)
              goto LABEL_40;
            v18 = *(_QWORD *)(v26 + 8 * v19);
            if (!v18)
            {
              while (1)
              {
                v17 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_45;
                if (v17 >= v24)
                  goto LABEL_40;
                v18 = *(_QWORD *)(v26 + 8 * v17);
                ++v19;
                if (v18)
                  goto LABEL_23;
              }
            }
          }
        }
        v17 = v19;
      }
LABEL_23:
      v8 = (v18 - 1) & v18;
      v16 = __clz(__rbit64(v18)) + (v17 << 6);
      v10 = v17;
LABEL_24:
      v28[0] = *(_OWORD *)(*(_QWORD *)(a3 + 56) + 16 * v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a4(&v33, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v33;
      result = swift_bridgeObjectRelease();
      v22 = v21;
    }
    while (!v21);
    v11 = *(_QWORD *)(v21 + 16);
    if (v11)
      break;
LABEL_11:
    v29 = 0;
    memset(v28, 0, sizeof(v28));
    result = sub_23AA8A05C((uint64_t)v28, &qword_2542E16F0);
  }
  v12 = 0;
  v13 = v21 + 32;
  while (v12 < v11)
  {
    sub_23AA77B28(v13, (uint64_t)v28);
    sub_23AA724E8((uint64_t)v28, (uint64_t)&v30, &qword_2542E16F0);
    if (!*((_QWORD *)&v31 + 1))
      goto LABEL_41;
    sub_23ABD76F0(&v30, (uint64_t)v28);
    v14 = a1(v28);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    if (v4)
    {
      sub_23ACF19B8();
      swift_bridgeObjectRelease();
      swift_release();
      return v23 & 1;
    }
    if ((v14 & 1) != 0)
    {
      sub_23ACF19B8();
      swift_bridgeObjectRelease();
      swift_release();
      v23 = 1;
      return v23 & 1;
    }
    ++v12;
    v11 = *(_QWORD *)(v22 + 16);
    v13 += 40;
    if (v12 == v11)
      goto LABEL_11;
  }
  __break(1u);
LABEL_40:
  v32 = 0;
  v30 = 0u;
  v31 = 0u;
LABEL_41:
  sub_23ACF19B8();
  swift_bridgeObjectRelease();
  swift_release();
  v23 = 0;
  return v23 & 1;
}

void *sub_23ADF9B8C(void *result, unint64_t a2, unsigned __int8 a3)
{
  unint64_t v3;
  id v4;
  id v5;
  uint64_t v6;

  v3 = a2;
  if (a3 > 1u)
  {
    if (a3 != 2)
    {
      v4 = objc_msgSend(result, sel_bindObjectParameter_, 0);
      goto LABEL_9;
    }
    v3 = (unint64_t)(a2 != 0) << 63;
LABEL_7:
    v4 = objc_msgSend(result, sel_bindLongParameter_, v3);
LABEL_9:
    v5 = v4;
    v6 = sub_23B1C63E0();

    return (void *)v6;
  }
  if (!a3)
  {
    v3 = -(uint64_t)a2;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) == 0)
    goto LABEL_7;
  __break(1u);
  return result;
}

void *sub_23ADF9C30(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  char v4;
  char v5;
  char v6;
  _BYTE *v7;

  v4 = sub_23AE79350(0, a1, sub_23ACD607C, (uint64_t *)&unk_2569E67A0);
  if (!v2)
  {
    v5 = v4;
    v1 = (void *)sub_23AE78D10(1, a1);
    v6 = sub_23AE78F24(2, a1, sub_23ACD607C);
    if ((v5 & 1) != 0 || !v1 || v6 == 70)
    {
      sub_23AB7B620();
      swift_allocError();
      *v7 = 0;
      swift_willThrow();

    }
  }
  return v1;
}

uint64_t sub_23ADF9D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (qword_2542E7440 != -1)
    swift_once();
  swift_beginAccess();
  os_unfair_recursive_lock_lock_with_options();
  swift_endAccess();
  if (qword_2542E4788 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v16 = sub_23B1C7568();
  v18 = v4;
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_beginAccess();
  v5 = off_2542E4780;
  if (*((_QWORD *)off_2542E4780 + 2) && (v6 = sub_23AAAF4C4(v16, v18), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(v5[7] + 16 * v6);
    swift_endAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_endAccess();
    v9 = sub_23AD7F5BC();
    swift_bridgeObjectRetain();
    sub_23AEA962C(v9, a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E54E8);
    sub_23AAB5A28((unint64_t *)&qword_2542E74B0, &qword_2542E54E8, MEMORY[0x24BEE12B0]);
    v8 = sub_23B1C6338();
    v11 = v10;
    swift_bridgeObjectRelease();
    v17 = sub_23B1C7568();
    v19 = v12;
    sub_23B1C64F4();
    sub_23B1C64F4();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = off_2542E4780;
    off_2542E4780 = (_UNKNOWN *)0x8000000000000000;
    sub_23AD24F84(v8, v11, v17, v19, isUniquelyReferenced_nonNull_native);
    off_2542E4780 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  swift_beginAccess();
  os_unfair_recursive_lock_unlock();
  swift_endAccess();
  return v8;
}

uint64_t sub_23ADF9FF4(char a1)
{
  uint64_t v2;
  char v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2110);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23B1CA760;
  *(_BYTE *)(v2 + 32) = a1;
  if (a1 == 11)
  {
    v2 = (uint64_t)sub_23AF9860C((char *)1, 2, 1, (char *)v2);
    *(_QWORD *)(v2 + 16) = 2;
    v3 = 12;
    goto LABEL_5;
  }
  if (a1 == 5)
  {
    v2 = (uint64_t)sub_23AF9860C((char *)1, 2, 1, (char *)v2);
    *(_QWORD *)(v2 + 16) = 2;
    v3 = 10;
LABEL_5:
    *(_BYTE *)(v2 + 33) = v3;
  }
  MEMORY[0x24BDAC7A8](v2);
  sub_23ADFA2F8(sub_23AEB40F0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23ADFA10C(char a1)
{
  uint64_t v2;
  char v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E2110);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23B1CA760;
  *(_BYTE *)(v2 + 32) = a1;
  if (a1 == 11)
  {
    v2 = (uint64_t)sub_23AF9860C((char *)1, 2, 1, (char *)v2);
    *(_QWORD *)(v2 + 16) = 2;
    v3 = 12;
    goto LABEL_5;
  }
  if (a1 == 5)
  {
    v2 = (uint64_t)sub_23AF9860C((char *)1, 2, 1, (char *)v2);
    *(_QWORD *)(v2 + 16) = 2;
    v3 = 10;
LABEL_5:
    *(_BYTE *)(v2 + 33) = v3;
  }
  MEMORY[0x24BDAC7A8](v2);
  sub_23ADFAFF0(sub_23AEB428C);
  return swift_bridgeObjectRelease();
}

unint64_t sub_23ADFA228()
{
  return 0xD000000000000087;
}

unint64_t sub_23ADFA24C()
{
  return 0xD000000000000018;
}

unint64_t sub_23ADFA268()
{
  return 0xD000000000000020;
}

unint64_t sub_23ADFA284()
{
  return 0xD000000000000011;
}

unint64_t sub_23ADFA2A0()
{
  return 0xD000000000000010;
}

BOOL sub_23ADFA2BC(unsigned int a1, unsigned int a2)
{
  return HIWORD(a2) >= HIWORD(a1) && (unsigned __int16)a2 >= (unsigned __int16)a1;
}

BOOL sub_23ADFA2D8(unsigned int a1, unsigned int a2)
{
  return HIWORD(a2) < HIWORD(a1) || (unsigned __int16)a2 < (unsigned __int16)a1;
}

uint64_t sub_23ADFA2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  unsigned __int8 v25;
  id v26;
  char isEscapingClosureAtFileLocation;
  id v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  __int128 v39;
  char v40;
  _BYTE *v41;
  void (*v42)(_BYTE *);
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  uint64_t v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  NSObject *v84;
  os_log_type_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  __int128 v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  unsigned int v106;
  void *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  int v117;
  int v118;
  uint64_t v119;
  _QWORD v120[4];
  uint64_t v121;
  id aBlock[6];
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  unsigned __int8 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v132 = *MEMORY[0x24BDAC8D0];
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  MEMORY[0x24BDAC7A8](v109);
  v108 = (uint64_t *)((char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v105 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v105 - 8);
  v8 = MEMORY[0x24BDAC7A8](v105);
  v115 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v97 - v10;
  v12 = *(uint64_t (**)(uint64_t))(v2 + 144);
  if (!v12)
    goto LABEL_46;
  v116 = v2;
  v13 = swift_retain();
  v14 = v12(v13);
  sub_23AAB7948((uint64_t)v12);
  v111 = v14;
  if (!v14)
    goto LABEL_47;
  v120[0] = MEMORY[0x24BEE4AF8];
  if (qword_2542E7160 != -1)
    swift_once();
  v15 = sub_23AFE9F34((uint64_t)sub_23AB6FFCC, 0);
  v16 = v15 & 1;
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(&v97 - 4) = a1;
  *(&v97 - 3) = a2;
  *((_BYTE *)&v97 - 16) = v16;
  MEMORY[0x24BDAC7A8](v17);
  *(&v97 - 2) = (uint64_t)v120;
  v18 = v116;
  sub_23ADFBCE8((uint64_t)sub_23AB7BF78, v19, (void (*)(void **, _OWORD *))sub_23AEB3FF0);
  if (v3)
    goto LABEL_6;
  v21 = *(void **)(v18 + 24);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v18;
  *(_QWORD *)(v22 + 24) = a1;
  *(_QWORD *)(v22 + 32) = a2;
  *(_BYTE *)(v22 + 40) = v16;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = sub_23AEB5558;
  v23[3] = v22;
  v99 = v22;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v23;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_748;
  v24 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v25 = objc_msgSend(v21, sel_executeSwift_error_, v24, aBlock);
  _Block_release(v24);
  v26 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
  }
  if ((v25 & 1) != 0)
  {
    v102 = 0;
    v28 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v29 = v116;
    swift_retain();
    v30 = sub_23B1C5E40();
    v31 = sub_23B1C6A88();
    v32 = os_log_type_enabled(v30, v31);
    v33 = MEMORY[0x24BEE4AD8];
    if (v32)
    {
      v34 = swift_slowAlloc();
      v35 = (void *)swift_slowAlloc();
      aBlock[0] = v35;
      *(_DWORD *)v34 = 136446466;
      if (*(_BYTE *)(v29 + 32))
        v36 = 20550;
      else
        v36 = 21318;
      v120[1] = sub_23AABEC68(v36, 0xE200000000000000, (uint64_t *)aBlock);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2048;
      swift_beginAccess();
      v121 = *(_QWORD *)(v120[0] + 16);
      sub_23B1C6CBC();
      _os_log_impl(&dword_23AA66000, v30, v31, "⌛️  %{public}s: %ld throttles expired", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v35, -1, -1);
      MEMORY[0x23B8614BC](v34, -1, -1);

    }
    else
    {

      swift_release();
    }
    v104 = *(void (**)(char *, uint64_t))(v7 + 8);
    v104(v11, v105);
    swift_beginAccess();
    v37 = *(_QWORD *)(v120[0] + 16);
    if (!v37)
    {
LABEL_44:
      (*(void (**)(void))(*(_QWORD *)v111 + 304))();
      swift_release();
LABEL_6:
      swift_release();
      return swift_bridgeObjectRelease();
    }
    v98 = swift_bridgeObjectRetain();
    v38 = (_QWORD *)(v98 + 56);
    *(_QWORD *)&v39 = 136446722;
    v101 = v39;
    v100 = v33 + 8;
    v103 = xmmword_23B1CFCA0;
    while (1)
    {
      v113 = v37;
      v43 = v38;
      v44 = (void *)*(v38 - 3);
      v45 = *((unsigned __int8 *)v43 - 16);
      LODWORD(v46) = *((unsigned __int8 *)v43 - 15);
      v117 = *((unsigned __int8 *)v43 - 14);
      v47 = *v43;
      v48 = v43[1];
      v49 = v43[2];
      v50 = v43[3];
      v51 = (void *)v43[4];
      v112 = v43;
      v52 = v43[7];
      sub_23AB5692C(v44, v45, v46);
      v53 = v51;
      v114 = v52;
      swift_bridgeObjectRetain();
      v54 = v51;
      v55 = sub_23AFECD80(v51);
      v123 = 2;
      v124 = v47;
      v125 = v48;
      v110 = v48;
      v58 = v45;
      v59 = v44;
      v60 = v55 > 0xBu || ((1 << v55) & 0x860) == 0;
      v61 = 0x7FFFFFFFFFFFFFFFLL;
      if (v60)
        v61 = v49;
      v126 = v61;
      v127 = v50;
      v128 = v51;
      v129 = v55;
      v130 = v56;
      v131 = v57;
      v62 = v116;
      v63 = v115;
      v118 = v46;
      v119 = v57;
      if (!v51)
        goto LABEL_37;
      v106 = v58;
      v107 = v44;
      sub_23AB7BFCC();
      v64 = (void *)swift_allocError();
      *(_OWORD *)v65 = v103;
      *(_BYTE *)(v65 + 16) = 3;
      v66 = v51;
      v67 = (void *)sub_23B1C5870();

      v68 = (void *)sub_23B1C5870();
      v69 = objc_msgSend(v67, sel_domain);
      v70 = sub_23B1C63E0();
      v72 = v71;

      v73 = objc_msgSend(v68, sel_domain);
      v74 = sub_23B1C63E0();
      v76 = v75;

      if (v70 == v74 && v72 == v76)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v77 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v77 & 1) == 0)
        {

          v62 = v116;
          v63 = v115;
          v59 = v107;
          v58 = v106;
          LOBYTE(v46) = v118;
          goto LABEL_37;
        }
      }
      v78 = objc_msgSend(v67, sel_code);
      v79 = objc_msgSend(v68, sel_code);

      v60 = v78 == v79;
      v62 = v116;
      v63 = v115;
      v59 = v107;
      v58 = v106;
      LOBYTE(v46) = v118;
      if (v60 && !v110)
      {
        v40 = v117;
        v80 = v102;
        sub_23ADFC308(v107, v106 | (v117 << 16) | (v118 << 8));
        v102 = v80;
        if (v80)
        {
          swift_release();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23AB7C6B4(v59, v58, v46);
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
        goto LABEL_19;
      }
LABEL_37:
      v81 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      swift_retain();
      sub_23AB5692C(v59, v58, v46);
      v82 = v51;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_23AB5692C(v59, v58, v46);
      v83 = v51;
      swift_bridgeObjectRetain();
      v84 = sub_23B1C5E40();
      v85 = sub_23B1C6A94();
      if (os_log_type_enabled(v84, v85))
      {
        v46 = swift_slowAlloc();
        v110 = swift_slowAlloc();
        v121 = v110;
        *(_DWORD *)v46 = v101;
        v86 = *(unsigned __int8 *)(v62 + 32);
        swift_release();
        if (v86)
          v87 = 20550;
        else
          v87 = 21318;
        *(_QWORD *)(v46 + 4) = sub_23AABEC68(v87, 0xE200000000000000, &v121);
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2080;
        v88 = sub_23AE7FA2C(v59, v58 | (v117 << 16) | (v118 << 8));
        v90 = v89;
        sub_23AB7C6B4(v59, v58, v118);
        *(_QWORD *)(v46 + 14) = sub_23AABEC68(v88, v90, &v121);
        swift_bridgeObjectRelease();
        sub_23AB7C6B4(v59, v58, v118);
        *(_WORD *)(v46 + 22) = 2080;
        v91 = v51;
        swift_bridgeObjectRetain();
        v92 = sub_23AFEB7A8();
        v94 = v93;

        swift_bridgeObjectRelease();
        *(_QWORD *)(v46 + 24) = sub_23AABEC68(v92, v94, &v121);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v84, v85, "✍️  %{public}s: throttle %s: %s", (uint8_t *)v46, 0x20u);
        v95 = v110;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v95, -1, -1);
        v96 = v46;
        LOBYTE(v46) = v118;
        MEMORY[0x23B8614BC](v96, -1, -1);

        v40 = v117;
        v104(v115, v105);
      }
      else
      {
        sub_23AB7C6B4(v59, v58, v46);
        swift_release_n();
        sub_23AB7C6B4(v59, v58, v46);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v104(v63, v105);
        v40 = v117;
      }
LABEL_19:
      v38 = v112 + 11;
      v41 = v108;
      *v108 = v59;
      v41[8] = v58;
      v41[9] = v46;
      v41[10] = v40;
      swift_storeEnumTagMultiPayload();
      v42 = *(void (**)(_BYTE *))(*(_QWORD *)v111 + 312);
      sub_23AB5692C(v59, v58, v46);
      v42(v41);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AA8A05C((uint64_t)v41, &qword_2542DDFC0);
      sub_23AB7C6B4(v59, v58, v46);
      v37 = v113 - 1;
      if (v113 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
    }
  }
  sub_23B1C587C();

  swift_willThrow();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23ADFAFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  unsigned __int8 v25;
  id v26;
  char isEscapingClosureAtFileLocation;
  id v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  __int128 v39;
  char v40;
  _BYTE *v41;
  void (*v42)(_BYTE *);
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  uint64_t v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  NSObject *v84;
  os_log_type_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  __int128 v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  unsigned int v106;
  void *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  int v117;
  int v118;
  uint64_t v119;
  _QWORD v120[4];
  uint64_t v121;
  id aBlock[6];
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  unsigned __int8 v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v132 = *MEMORY[0x24BDAC8D0];
  v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v109);
  v108 = (uint64_t *)((char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v105 = sub_23B1C5E4C();
  v7 = *(_QWORD *)(v105 - 8);
  v8 = MEMORY[0x24BDAC7A8](v105);
  v115 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v97 - v10;
  v12 = *(uint64_t (**)(uint64_t))(v2 + 144);
  if (!v12)
    goto LABEL_46;
  v116 = v2;
  v13 = swift_retain();
  v14 = v12(v13);
  sub_23AAB7948((uint64_t)v12);
  v111 = v14;
  if (!v14)
    goto LABEL_47;
  v120[0] = MEMORY[0x24BEE4AF8];
  if (qword_2542E7160 != -1)
    swift_once();
  v15 = sub_23AFE9F34((uint64_t)sub_23AB6FFCC, 0);
  v16 = v15 & 1;
  v17 = MEMORY[0x24BDAC7A8](v15);
  *(&v97 - 4) = a1;
  *(&v97 - 3) = a2;
  *((_BYTE *)&v97 - 16) = v16;
  MEMORY[0x24BDAC7A8](v17);
  *(&v97 - 2) = (uint64_t)v120;
  v18 = v116;
  sub_23ADFBFF8((uint64_t)sub_23AEB5520, v19, (void (*)(void **, _OWORD *))sub_23AEB418C);
  if (v3)
    goto LABEL_6;
  v21 = *(void **)(v18 + 24);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v18;
  *(_QWORD *)(v22 + 24) = a1;
  *(_QWORD *)(v22 + 32) = a2;
  *(_BYTE *)(v22 + 40) = v16;
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = sub_23AEB41B4;
  v23[3] = v22;
  v99 = v22;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v23;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_806;
  v24 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v25 = objc_msgSend(v21, sel_executeSwift_error_, v24, aBlock);
  _Block_release(v24);
  v26 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
  }
  if ((v25 & 1) != 0)
  {
    v102 = 0;
    v28 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v29 = v116;
    swift_retain();
    v30 = sub_23B1C5E40();
    v31 = sub_23B1C6A88();
    v32 = os_log_type_enabled(v30, v31);
    v33 = MEMORY[0x24BEE4AD8];
    if (v32)
    {
      v34 = swift_slowAlloc();
      v35 = (void *)swift_slowAlloc();
      aBlock[0] = v35;
      *(_DWORD *)v34 = 136446466;
      if (*(_BYTE *)(v29 + 32))
        v36 = 20550;
      else
        v36 = 21318;
      v120[1] = sub_23AABEC68(v36, 0xE200000000000000, (uint64_t *)aBlock);
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2048;
      swift_beginAccess();
      v121 = *(_QWORD *)(v120[0] + 16);
      sub_23B1C6CBC();
      _os_log_impl(&dword_23AA66000, v30, v31, "⌛️  %{public}s: %ld throttles expired", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v35, -1, -1);
      MEMORY[0x23B8614BC](v34, -1, -1);

    }
    else
    {

      swift_release();
    }
    v104 = *(void (**)(char *, uint64_t))(v7 + 8);
    v104(v11, v105);
    swift_beginAccess();
    v37 = *(_QWORD *)(v120[0] + 16);
    if (!v37)
    {
LABEL_44:
      (*(void (**)(void))(*(_QWORD *)v111 + 304))();
      swift_release();
LABEL_6:
      swift_release();
      return swift_bridgeObjectRelease();
    }
    v98 = swift_bridgeObjectRetain();
    v38 = (_QWORD *)(v98 + 56);
    *(_QWORD *)&v39 = 136446722;
    v101 = v39;
    v100 = v33 + 8;
    v103 = xmmword_23B1CFCA0;
    while (1)
    {
      v113 = v37;
      v43 = v38;
      v44 = (void *)*(v38 - 3);
      v45 = *((unsigned __int8 *)v43 - 16);
      LODWORD(v46) = *((unsigned __int8 *)v43 - 15);
      v117 = *((unsigned __int8 *)v43 - 14);
      v47 = *v43;
      v48 = v43[1];
      v49 = v43[2];
      v50 = v43[3];
      v51 = (void *)v43[4];
      v112 = v43;
      v52 = v43[7];
      sub_23AA88218(v44, v45, v46);
      v53 = v51;
      v114 = v52;
      swift_bridgeObjectRetain();
      v54 = v51;
      v55 = sub_23AFECD80(v51);
      v123 = 2;
      v124 = v47;
      v125 = v48;
      v110 = v48;
      v58 = v45;
      v59 = v44;
      v60 = v55 > 0xBu || ((1 << v55) & 0x860) == 0;
      v61 = 0x7FFFFFFFFFFFFFFFLL;
      if (v60)
        v61 = v49;
      v126 = v61;
      v127 = v50;
      v128 = v51;
      v129 = v55;
      v130 = v56;
      v131 = v57;
      v62 = v116;
      v63 = v115;
      v118 = v46;
      v119 = v57;
      if (!v51)
        goto LABEL_37;
      v106 = v58;
      v107 = v44;
      sub_23AB7BFCC();
      v64 = (void *)swift_allocError();
      *(_OWORD *)v65 = v103;
      *(_BYTE *)(v65 + 16) = 3;
      v66 = v51;
      v67 = (void *)sub_23B1C5870();

      v68 = (void *)sub_23B1C5870();
      v69 = objc_msgSend(v67, sel_domain);
      v70 = sub_23B1C63E0();
      v72 = v71;

      v73 = objc_msgSend(v68, sel_domain);
      v74 = sub_23B1C63E0();
      v76 = v75;

      if (v70 == v74 && v72 == v76)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v77 = sub_23B1C7388();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v77 & 1) == 0)
        {

          v62 = v116;
          v63 = v115;
          v59 = v107;
          v58 = v106;
          LOBYTE(v46) = v118;
          goto LABEL_37;
        }
      }
      v78 = objc_msgSend(v67, sel_code);
      v79 = objc_msgSend(v68, sel_code);

      v60 = v78 == v79;
      v62 = v116;
      v63 = v115;
      v59 = v107;
      v58 = v106;
      LOBYTE(v46) = v118;
      if (v60 && !v110)
      {
        v40 = v117;
        v80 = v102;
        sub_23ADFCB58(v107, v106 | (v117 << 16) | (v118 << 8));
        v102 = v80;
        if (v80)
        {
          swift_release();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23AA862DC(v59, v58, v46);
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
        goto LABEL_19;
      }
LABEL_37:
      v81 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      swift_retain();
      sub_23AA88218(v59, v58, v46);
      v82 = v51;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_23AA88218(v59, v58, v46);
      v83 = v51;
      swift_bridgeObjectRetain();
      v84 = sub_23B1C5E40();
      v85 = sub_23B1C6A94();
      if (os_log_type_enabled(v84, v85))
      {
        v46 = swift_slowAlloc();
        v110 = swift_slowAlloc();
        v121 = v110;
        *(_DWORD *)v46 = v101;
        v86 = *(unsigned __int8 *)(v62 + 32);
        swift_release();
        if (v86)
          v87 = 20550;
        else
          v87 = 21318;
        *(_QWORD *)(v46 + 4) = sub_23AABEC68(v87, 0xE200000000000000, &v121);
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2080;
        v88 = sub_23AE7FB68(v59, v58 | (v117 << 16) | (v118 << 8));
        v90 = v89;
        sub_23AA862DC(v59, v58, v118);
        *(_QWORD *)(v46 + 14) = sub_23AABEC68(v88, v90, &v121);
        swift_bridgeObjectRelease();
        sub_23AA862DC(v59, v58, v118);
        *(_WORD *)(v46 + 22) = 2080;
        v91 = v51;
        swift_bridgeObjectRetain();
        v92 = sub_23AFEB7A8();
        v94 = v93;

        swift_bridgeObjectRelease();
        *(_QWORD *)(v46 + 24) = sub_23AABEC68(v92, v94, &v121);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23AA66000, v84, v85, "✍️  %{public}s: throttle %s: %s", (uint8_t *)v46, 0x20u);
        v95 = v110;
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v95, -1, -1);
        v96 = v46;
        LOBYTE(v46) = v118;
        MEMORY[0x23B8614BC](v96, -1, -1);

        v40 = v117;
        v104(v115, v105);
      }
      else
      {
        sub_23AA862DC(v59, v58, v46);
        swift_release_n();
        sub_23AA862DC(v59, v58, v46);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v104(v63, v105);
        v40 = v117;
      }
LABEL_19:
      v38 = v112 + 11;
      v41 = v108;
      *v108 = v59;
      v41[8] = v58;
      v41[9] = v46;
      v41[10] = v40;
      swift_storeEnumTagMultiPayload();
      v42 = *(void (**)(_BYTE *))(*(_QWORD *)v111 + 312);
      sub_23AA88218(v59, v58, v46);
      v42(v41);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AA8A05C((uint64_t)v41, (uint64_t *)&unk_2542DDFB0);
      sub_23AA862DC(v59, v58, v46);
      v37 = v113 - 1;
      if (v113 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
    }
  }
  sub_23B1C587C();

  swift_willThrow();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_23ADFBCE8(uint64_t a1, uint64_t a2, void (*a3)(void **, _OWORD *))
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  void *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  __int128 aBlock;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  __int16 v29;
  char v30;
  _OWORD v31[4];
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v7 = *(void **)(v3 + 24);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v3;
  v8[3] = a1;
  v8[4] = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23AEB5524;
  *(_QWORD *)(v9 + 24) = v8;
  *(_QWORD *)&v25 = sub_23AA956C8;
  *((_QWORD *)&v25 + 1) = v9;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v24 = sub_23AA9432C;
  *((_QWORD *)&v24 + 1) = &block_descriptor_795;
  v10 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  *(_QWORD *)&aBlock = 0;
  v11 = objc_msgSend(v7, sel_fetchSwift_error_, v10, &aBlock);
  _Block_release(v10);
  v12 = (id)aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_13:
    __break(1u);
  if (v11)
  {
    if (objc_msgSend(v11, sel_next))
    {
      while (1)
      {
        v14 = (void *)MEMORY[0x23B8601A8]();
        v15 = sub_23AD7F1F4();
        v16 = sub_23AE7EB54(v15, v11, 0);
        if (v4)
          break;
        v18 = v16;
        v19 = v17;
        swift_bridgeObjectRelease();
        v28 = v18;
        v29 = v19 & 0x1FF;
        v30 = BYTE2(v19);
        v20 = *((_QWORD *)sub_23AD7F1F4() + 2);
        swift_bridgeObjectRelease();
        if (v20 >> 31)
        {
          __break(1u);
          goto LABEL_13;
        }
        v21 = sub_23AD7ECFC();
        sub_23AE7990C(v11, (uint64_t)v21, v20, (uint64_t)&aBlock);
        swift_bridgeObjectRelease();
        v31[2] = v25;
        v31[3] = v26;
        v32 = v27;
        v31[0] = aBlock;
        v31[1] = v24;
        a3(&v28, v31);
        sub_23AB7B844((uint64_t)v31);
        sub_23AB7C6B4(v18, v19, BYTE1(v19) & 1);
        objc_autoreleasePoolPop(v14);
        if ((objc_msgSend(v11, sel_next) & 1) == 0)
          goto LABEL_11;
      }
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v14);
    }
LABEL_11:
    swift_release();

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
  }
}

void sub_23ADFBFF8(uint64_t a1, uint64_t a2, void (*a3)(void **, _OWORD *))
{
  uint64_t v3;
  uint64_t v4;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  __int128 aBlock;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  void *v28;
  __int16 v29;
  char v30;
  _OWORD v31[4];
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v7 = *(void **)(v3 + 24);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v3;
  v8[3] = a1;
  v8[4] = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_23AEB4310;
  *(_QWORD *)(v9 + 24) = v8;
  *(_QWORD *)&v25 = sub_23AA956C8;
  *((_QWORD *)&v25 + 1) = v9;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v24 = sub_23AA9432C;
  *((_QWORD *)&v24 + 1) = &block_descriptor_854;
  v10 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  *(_QWORD *)&aBlock = 0;
  v11 = objc_msgSend(v7, sel_fetchSwift_error_, v10, &aBlock);
  _Block_release(v10);
  v12 = (id)aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
LABEL_13:
    __break(1u);
  if (v11)
  {
    if (objc_msgSend(v11, sel_next))
    {
      while (1)
      {
        v14 = (void *)MEMORY[0x23B8601A8]();
        v15 = sub_23AD7F3D8();
        v16 = sub_23AE7EF58((uint64_t)v15, v11, 0);
        if (v4)
          break;
        v18 = (void *)v16;
        v19 = v17;
        swift_bridgeObjectRelease();
        v28 = v18;
        v29 = v19 & 0x1FF;
        v30 = BYTE2(v19);
        v20 = *((_QWORD *)sub_23AD7F3D8() + 2);
        swift_bridgeObjectRelease();
        if (v20 >> 31)
        {
          __break(1u);
          goto LABEL_13;
        }
        v21 = sub_23AD7ECFC();
        sub_23AE7990C(v11, (uint64_t)v21, v20, (uint64_t)&aBlock);
        swift_bridgeObjectRelease();
        v31[2] = v25;
        v31[3] = v26;
        v32 = v27;
        v31[0] = aBlock;
        v31[1] = v24;
        a3(&v28, v31);
        sub_23AB7B844((uint64_t)v31);
        sub_23AA862DC(v18, v19, BYTE1(v19) & 1);
        objc_autoreleasePoolPop(v14);
        if ((objc_msgSend(v11, sel_next) & 1) == 0)
          goto LABEL_11;
      }
      swift_bridgeObjectRelease();
      objc_autoreleasePoolPop(v14);
    }
LABEL_11:
    swift_release();

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
  }
}

BOOL sub_23ADFC308(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  BOOL v12;
  int v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unsigned __int8 v18;
  uint8_t *v19;
  uint8_t *v20;
  char isEscapingClosureAtFileLocation;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  unsigned __int8 v29;
  id v30;
  id v31;
  char *v32;
  id v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  os_log_t v42;
  void *v43;
  uint64_t v45;
  id v46;
  _QWORD v47[2];
  __int16 *v48;
  void *v49;
  os_log_t v50;
  int v51;
  uint64_t (*v52)(uint64_t);
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  char *v59;
  id v60;
  uint8_t *aBlock;
  uint64_t v62;
  id (*v63)(uint64_t, void *);
  void *v64;
  uint64_t (*v65)();
  uint64_t v66;
  uint64_t v67;
  __int16 v68;
  char v69;
  _OWORD v70[4];
  uint64_t v71;
  uint64_t v72;

  v4 = v2;
  v72 = *MEMORY[0x24BDAC8D0];
  v7 = sub_23B1C5E4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23ADFD638(a1, a2 & 0xFF01FF);
  if (v3)
    return v12;
  v57 = v11;
  v59 = v10;
  v55 = v8;
  v56 = v7;
  v13 = *(unsigned __int8 *)(v2 + 104);
  v14 = *(void **)(v2 + 24);
  v60 = v14;
  if (v13 == 1)
  {
    v67 = (uint64_t)a1;
    v68 = a2 & 0x1FF;
    v69 = BYTE2(a2);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v2;
    sub_23AA724E8((uint64_t)&v67, v15 + 24, &qword_2569E6538);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_23AEB4090;
    *(_QWORD *)(v16 + 24) = v15;
    v54 = v15;
    v65 = sub_23AA956C8;
    v66 = v16;
    aBlock = (uint8_t *)MEMORY[0x24BDAC760];
    v62 = 1107296256;
    v63 = sub_23AA9432C;
    v64 = &block_descriptor_768;
    v17 = _Block_copy(&aBlock);
    sub_23AB5692C(a1, a2, BYTE1(a2) & 1);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    v18 = objc_msgSend(v14, sel_executeSwift_error_, v17, &aBlock);
    _Block_release(v17);
    v19 = aBlock;
    v20 = aBlock;
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      if ((v18 & 1) != 0)
      {
        v22 = 0;
        v23 = 0;
        v53 = sub_23AEB4090;
        v24 = v54;
        goto LABEL_9;
      }
LABEL_16:
      sub_23B1C587C();

      swift_willThrow();
      swift_release();
      return v12;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_once();
LABEL_15:
    v70[2] = xmmword_2542EDBD0;
    v70[3] = *(_OWORD *)&byte_2542EDBE0;
    v71 = qword_2542EDBF0;
    v70[0] = xmmword_2542EDBB0;
    v70[1] = unk_2542EDBC0;
    sub_23AB7B810((uint64_t)v70);
    v39 = sub_23AFEB7A8();
    v41 = v40;
    sub_23AB7B844((uint64_t)v70);
    v67 = sub_23AABEC68(v39, v41, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v42 = v50;
    _os_log_impl(&dword_23AA66000, v50, (os_log_type_t)v51, "✍️  %{public}s: throttle %s: %s", v19, 0x20u);
    v43 = v49;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v43, -1, -1);
    MEMORY[0x23B8614BC](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v56);
    v30 = v60;
    v22 = v52;
    goto LABEL_18;
  }
  v67 = (uint64_t)a1;
  v68 = a2 & 0x1FF;
  v69 = BYTE2(a2);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v2;
  sub_23AA724E8((uint64_t)&v67, v25 + 24, &qword_2569E6538);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = sub_23AEB4058;
  *(_QWORD *)(v26 + 24) = v25;
  v58 = v25;
  v65 = sub_23AA956C8;
  v66 = v26;
  aBlock = (uint8_t *)MEMORY[0x24BDAC760];
  v62 = 1107296256;
  v63 = sub_23AA9432C;
  v64 = &block_descriptor_758_0;
  v27 = v14;
  v28 = _Block_copy(&aBlock);
  sub_23AB5692C(a1, a2, BYTE1(a2) & 1);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v29 = objc_msgSend(v27, sel_executeSwift_error_, v28, &aBlock);
  _Block_release(v28);
  v19 = aBlock;
  v20 = aBlock;
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v28 & 1) != 0)
    goto LABEL_23;
  if ((v29 & 1) == 0)
    goto LABEL_16;
  v53 = 0;
  v24 = 0;
  v22 = sub_23AEB4058;
  v23 = v58;
LABEL_9:
  v30 = v60;
  v31 = objc_msgSend(v60, sel_changes);
  v32 = v59;
  if (v31)
  {
    v58 = v23;
    v52 = v22;
    v33 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AB5692C(a1, a2, BYTE1(a2) & 1);
    sub_23AB5692C(a1, a2, BYTE1(a2) & 1);
    swift_retain();
    v34 = sub_23B1C5E40();
    v51 = sub_23B1C6A94();
    if (!os_log_type_enabled(v34, (os_log_type_t)v51))
    {
      sub_23AB7C6B4(a1, a2, BYTE1(a2) & 1);
      swift_release();
      sub_23AB7C6B4(a1, a2, BYTE1(a2) & 1);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v56);
      v22 = v52;
      goto LABEL_18;
    }
    v50 = v34;
    v54 = v24;
    LODWORD(v48) = a2 & 0xFF0000;
    v19 = (uint8_t *)swift_slowAlloc();
    v49 = (void *)swift_slowAlloc();
    aBlock = (uint8_t *)v49;
    *(_DWORD *)v19 = 136446722;
    if (*(_BYTE *)(v4 + 32))
      v35 = 20550;
    else
      v35 = 21318;
    v67 = sub_23AABEC68(v35, 0xE200000000000000, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    *((_WORD *)v19 + 6) = 2080;
    v47[1] = v19 + 14;
    v36 = sub_23AE7FA2C(a1, v48 | (((a2 >> 8) & 1) << 8) | a2);
    v38 = v37;
    sub_23AB7C6B4(a1, a2, BYTE1(a2) & 1);
    v67 = sub_23AABEC68(v36, v38, (uint64_t *)&aBlock);
    v48 = &v68;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AB7C6B4(a1, a2, BYTE1(a2) & 1);
    *((_WORD *)v19 + 11) = 2080;
    if (qword_2542E05C0 == -1)
      goto LABEL_15;
    goto LABEL_24;
  }
LABEL_18:
  if (v57 == 1)
    sub_23ADF9FF4(1);
  v45 = (uint64_t)v53;
  v46 = objc_msgSend(v30, sel_changes);
  sub_23AAB7948(v45);
  sub_23AAB7948((uint64_t)v22);
  return v46 != 0;
}

BOOL sub_23ADFCB58(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  BOOL v12;
  int v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unsigned __int8 v18;
  _WORD *v19;
  char isEscapingClosureAtFileLocation;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  unsigned __int8 v28;
  id v29;
  id v30;
  char *v31;
  id v32;
  NSObject *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  os_log_t v41;
  void *v42;
  uint64_t v44;
  id v45;
  _QWORD v46[2];
  __int16 *v47;
  void *v48;
  os_log_t v49;
  int v50;
  uint64_t (*v51)(uint64_t);
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char *v58;
  id v59;
  id aBlock;
  uint64_t v61;
  id (*v62)(uint64_t, void *);
  void *v63;
  uint64_t (*v64)();
  uint64_t v65;
  uint64_t v66;
  __int16 v67;
  char v68;
  _OWORD v69[4];
  uint64_t v70;
  uint64_t v71;

  v4 = v2;
  v71 = *MEMORY[0x24BDAC8D0];
  v7 = sub_23B1C5E4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23ADFD890(a1, a2 & 0xFF01FF);
  if (v3)
    return v12;
  v56 = v11;
  v58 = v10;
  v54 = v8;
  v55 = v7;
  v13 = *(unsigned __int8 *)(v2 + 104);
  v14 = *(void **)(v2 + 24);
  v59 = v14;
  if (v13 == 1)
  {
    v66 = (uint64_t)a1;
    v67 = a2 & 0x1FF;
    v68 = BYTE2(a2);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = v2;
    sub_23AA724E8((uint64_t)&v66, v15 + 24, (uint64_t *)&unk_2569E31F0);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_23AEB4268;
    *(_QWORD *)(v16 + 24) = v15;
    v53 = v15;
    v64 = sub_23AA956C8;
    v65 = v16;
    aBlock = (id)MEMORY[0x24BDAC760];
    v61 = 1107296256;
    v62 = sub_23AA9432C;
    v63 = &block_descriptor_826;
    v17 = _Block_copy(&aBlock);
    sub_23AA88218(a1, a2, BYTE1(a2) & 1);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    v18 = objc_msgSend(v14, sel_executeSwift_error_, v17, &aBlock);
    _Block_release(v17);
    v19 = aBlock;
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      if ((v18 & 1) != 0)
      {
        v21 = 0;
        v22 = 0;
        v52 = sub_23AEB4268;
        v23 = v53;
        goto LABEL_9;
      }
LABEL_16:
      sub_23B1C587C();

      swift_willThrow();
      swift_release();
      return v12;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_once();
LABEL_15:
    v69[2] = xmmword_2542EDBD0;
    v69[3] = *(_OWORD *)&byte_2542EDBE0;
    v70 = qword_2542EDBF0;
    v69[0] = xmmword_2542EDBB0;
    v69[1] = unk_2542EDBC0;
    sub_23AB7B810((uint64_t)v69);
    v38 = sub_23AFEB7A8();
    v40 = v39;
    sub_23AB7B844((uint64_t)v69);
    v66 = sub_23AABEC68(v38, v40, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    v41 = v49;
    _os_log_impl(&dword_23AA66000, v49, (os_log_type_t)v50, "✍️  %{public}s: throttle %s: %s", (uint8_t *)v19, 0x20u);
    v42 = v48;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v42, -1, -1);
    MEMORY[0x23B8614BC](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v58, v55);
    v29 = v59;
    v21 = v51;
    goto LABEL_18;
  }
  v66 = (uint64_t)a1;
  v67 = a2 & 0x1FF;
  v68 = BYTE2(a2);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v2;
  sub_23AA724E8((uint64_t)&v66, v24 + 24, (uint64_t *)&unk_2569E31F0);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_23AEB41F0;
  *(_QWORD *)(v25 + 24) = v24;
  v57 = v24;
  v64 = sub_23AA956C8;
  v65 = v25;
  aBlock = (id)MEMORY[0x24BDAC760];
  v61 = 1107296256;
  v62 = sub_23AA9432C;
  v63 = &block_descriptor_816;
  v26 = v14;
  v27 = _Block_copy(&aBlock);
  sub_23AA88218(a1, a2, BYTE1(a2) & 1);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v28 = objc_msgSend(v26, sel_executeSwift_error_, v27, &aBlock);
  _Block_release(v27);
  v19 = aBlock;
  LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v27 & 1) != 0)
    goto LABEL_23;
  if ((v28 & 1) == 0)
    goto LABEL_16;
  v52 = 0;
  v23 = 0;
  v21 = sub_23AEB41F0;
  v22 = v57;
LABEL_9:
  v29 = v59;
  v30 = objc_msgSend(v59, sel_changes);
  v31 = v58;
  if (v30)
  {
    v57 = v22;
    v51 = v21;
    v32 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    sub_23AA88218(a1, a2, BYTE1(a2) & 1);
    sub_23AA88218(a1, a2, BYTE1(a2) & 1);
    swift_retain();
    v33 = sub_23B1C5E40();
    v50 = sub_23B1C6A94();
    if (!os_log_type_enabled(v33, (os_log_type_t)v50))
    {
      sub_23AA862DC(a1, a2, BYTE1(a2) & 1);
      swift_release();
      sub_23AA862DC(a1, a2, BYTE1(a2) & 1);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v55);
      v21 = v51;
      goto LABEL_18;
    }
    v49 = v33;
    v53 = v23;
    LODWORD(v47) = a2 & 0xFF0000;
    v19 = (_WORD *)swift_slowAlloc();
    v48 = (void *)swift_slowAlloc();
    aBlock = v48;
    *(_DWORD *)v19 = 136446722;
    if (*(_BYTE *)(v4 + 32))
      v34 = 20550;
    else
      v34 = 21318;
    v66 = sub_23AABEC68(v34, 0xE200000000000000, (uint64_t *)&aBlock);
    sub_23B1C6CBC();
    swift_release();
    swift_bridgeObjectRelease();
    v19[6] = 2080;
    v46[1] = v19 + 7;
    v35 = sub_23AE7FB68(a1, v47 | (((a2 >> 8) & 1) << 8) | a2);
    v37 = v36;
    sub_23AA862DC(a1, a2, BYTE1(a2) & 1);
    v66 = sub_23AABEC68(v35, v37, (uint64_t *)&aBlock);
    v47 = &v67;
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    sub_23AA862DC(a1, a2, BYTE1(a2) & 1);
    v19[11] = 2080;
    if (qword_2542E05C0 == -1)
      goto LABEL_15;
    goto LABEL_24;
  }
LABEL_18:
  if (v56 == 1)
    sub_23ADFA10C(1);
  v44 = (uint64_t)v52;
  v45 = objc_msgSend(v29, sel_changes);
  sub_23AAB7948(v44);
  sub_23AAB7948((uint64_t)v21);
  return v45 != 0;
}

uint64_t sub_23ADFD3AC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  void *v11;
  id v12;
  _QWORD v13[2];

  v3 = sub_23B1C6428();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  strcpy((char *)v13, "AND item_id = ");
  HIBYTE(v13[1]) = -18;
  sub_23B1C63E0();
  sub_23B1C641C();
  v7 = sub_23B1C63EC();
  v9 = v8;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v9 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    v11 = (void *)sub_23B1C5AA4();
    sub_23AAA3E18(v7, v9);
    v12 = objc_msgSend(a2, sel_bindObjectParameter_, v11);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v13[0];
  }
  return result;
}

uint64_t sub_23ADFD538(unint64_t a1, char a2, void *a3)
{
  id v6;
  _QWORD v8[2];

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  strcpy((char *)v8, "AND item_id = ");
  HIBYTE(v8[1]) = -18;
  if (!a2)
    goto LABEL_5;
  if (a2 != 1)
  {
    a1 = (unint64_t)(a1 != 0) << 63;
    goto LABEL_7;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a1 = -(uint64_t)a1;
  }
LABEL_7:
  v6 = objc_msgSend(a3, sel_bindLongParameter_, a1, v8[0], v8[1]);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t sub_23ADFD638(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  id v14;
  unsigned int v15;
  id aBlock[6];
  void *v18;
  __int16 v19;
  char v20;
  uint64_t v21;

  v3 = v2;
  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *(void **)(v2 + 24);
  v18 = a1;
  v7 = (a2 >> 8) & 1;
  v19 = a2 & 0x1FF;
  v20 = BYTE2(a2);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v3;
  sub_23AA724E8((uint64_t)&v18, v8 + 24, &qword_2569E6538);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = sub_23AEB4114;
  v9[3] = v8;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v9;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_785;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23AB5692C(a1, a2, v7);
  swift_release();
  aBlock[0] = 0;
  v11 = objc_msgSend(v6, sel_fetchSwift_error_, v10, aBlock);
  _Block_release(v10);
  v12 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (v11)
  {
    if ((objc_msgSend(v11, sel_next) & 1) != 0)
    {
      v14 = objc_msgSend(v11, sel_longAtIndex_, 0);

      v15 = sub_23AFEC560((unint64_t)v14);
      swift_release();
      if (v15 == 13)
        return 0;
      else
        return v15;
    }
    else
    {
      swift_release();

      return 0;
    }
  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
    return swift_release();
  }
}

uint64_t sub_23ADFD890(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  id v12;
  char isEscapingClosureAtFileLocation;
  id v14;
  unsigned int v15;
  id aBlock[6];
  void *v18;
  __int16 v19;
  char v20;
  uint64_t v21;

  v3 = v2;
  v21 = *MEMORY[0x24BDAC8D0];
  v6 = *(void **)(v2 + 24);
  v18 = a1;
  v7 = (a2 >> 8) & 1;
  v19 = a2 & 0x1FF;
  v20 = BYTE2(a2);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v3;
  sub_23AA724E8((uint64_t)&v18, v8 + 24, (uint64_t *)&unk_2569E31F0);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = sub_23AEB42EC;
  v9[3] = v8;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v9;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_844;
  v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_23AA88218(a1, a2, v7);
  swift_release();
  aBlock[0] = 0;
  v11 = objc_msgSend(v6, sel_fetchSwift_error_, v10, aBlock);
  _Block_release(v10);
  v12 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  if (v11)
  {
    if ((objc_msgSend(v11, sel_next) & 1) != 0)
    {
      v14 = objc_msgSend(v11, sel_longAtIndex_, 0);

      v15 = sub_23AFEC560((unint64_t)v14);
      swift_release();
      if (v15 == 13)
        return 0;
      else
        return v15;
    }
    else
    {
      swift_release();

      return 0;
    }
  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
    return swift_release();
  }
}

unint64_t sub_23ADFDAE8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(uint64_t, _QWORD, uint64_t))
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  a5(a3, a4 & 0xFF01FF, a1);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0xD000000000000020;
}

uint64_t sub_23ADFDBD8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(uint64_t, _QWORD, uint64_t))
{
  _QWORD v10[2];

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  strcpy((char *)v10, "DELETE FROM ");
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  a5(a3, a4 & 0xFF01FF, a1);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v10[0];
}

uint64_t sub_23ADFDCD4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD, _QWORD, _QWORD))
{
  _QWORD *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void (*v15)(_QWORD, _QWORD, _QWORD);
  uint64_t i;
  char v17;
  uint64_t v18;
  _OWORD v20[4];
  uint64_t v21;

  *(_QWORD *)&v20[0] = 0;
  *((_QWORD *)&v20[0] + 1) = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (qword_2542E05C0 != -1)
    swift_once();
  v20[2] = xmmword_2542EDBD0;
  v20[3] = *(_OWORD *)&byte_2542EDBE0;
  v21 = qword_2542EDBF0;
  v20[0] = xmmword_2542EDBB0;
  v20[1] = unk_2542EDBC0;
  sub_23AB7B810((uint64_t)v20);
  v11 = sub_23AD7ECFC();
  v12 = v11[2];
  if (v12)
  {
    v13 = a4;
    v14 = a3;
    v15 = a7;
    for (i = 0; i != v12; ++i)
    {
      v17 = *((_BYTE *)v11 + i + 32);
      sub_23AB7B810((uint64_t)v20);
      sub_23AFDE908(v17);
      swift_bridgeObjectRelease();
      sub_23AB7B844((uint64_t)v20);
    }
    swift_bridgeObjectRelease();
    a7 = v15;
    a3 = v14;
    a4 = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_23AD7ECFC();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E25D0);
  sub_23AB7BEDC();
  sub_23B1C6338();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23AB7B844((uint64_t)v20);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  a7(a3, a4 & 0xFF01FF, a1);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0x20455441445055;
}

uint64_t sub_23ADFDFE8(void *a1, void *a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  _QWORD *v34;
  _QWORD v35[3];
  uint64_t v36;
  void *v37;

  v6 = v5;
  v12 = sub_23AD7E748();
  v13 = v12[2];
  if (!v13)
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  v33 = a4;
  v14 = 0;
  v34 = v12;
  v15 = v12;
  do
  {
    if (a3 == 0xFF)
    {

      goto LABEL_4;
    }
    if (!*((_BYTE *)v15 + v14 + 32))
    {
      switch(*((_BYTE *)v15 + v14 + 32))
      {
        case 0:
          sub_23AAAE478(a1, a2, a3);
          v16 = objc_msgSend(v6, sel_bindLongParameter_, a3);
          goto LABEL_23;
        default:
          goto LABEL_13;
      }
    }
    if (*((_BYTE *)v15 + v14 + 32) != 1)
    {
      if (a3)
      {
        if (a3 == 2)
        {
LABEL_13:
          v17 = a1;
          if (a1)
            goto LABEL_14;
        }
      }
      else
      {
        v17 = a2;
        if (a2)
        {
LABEL_14:
          v37 = v17;
          v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
          v35[0] = v17;
          sub_23AAAE478(a1, a2, a3);
          sub_23AAAE478(a1, a2, a3);
          sub_23AA94C90((uint64_t)v35);
          v19 = v18;
          sub_23AA8A05C((uint64_t)v35, qword_2542E5640);
          if (v19)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_23B1C57B0();
            swift_allocObject();
            sub_23B1C57A4();
            sub_23B1C578C();
            __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2DC0);
            sub_23AC423D4();
            v25 = sub_23B1C5798();
            v27 = v26;
            v28 = v25;
            sub_23AC38554(v25, v26);
            swift_release();
            sub_23AAAE53C(v28, v27);
            swift_bridgeObjectRelease();
            v15 = v34;
          }
          goto LABEL_20;
        }
      }
      sub_23AAAE478(a1, a2, a3);

LABEL_20:
      v22 = a1;
      v23 = a2;
      v24 = a3;
LABEL_21:
      sub_23AEB1228(v22, v23, v24);
      goto LABEL_4;
    }
    if (!a3)
    {
      v36 = MEMORY[0x24BEE1768];
      v35[0] = a1;
      swift_retain();
      sub_23AA94C90((uint64_t)v35);
      v21 = v20;
      sub_23AA8A05C((uint64_t)v35, qword_2542E5640);
      if (!v21)
      {
        sub_23B1C704C();
        __break(1u);
        JUMPOUT(0x23ADFE48CLL);
      }
      swift_bridgeObjectRelease();
      v22 = a1;
      v23 = a2;
      v24 = 0;
      goto LABEL_21;
    }
    sub_23AAAE478(a1, a2, a3);
    v16 = objc_msgSend(v6, sel_bindLongParameter_, 0);
LABEL_23:

    sub_23AEB1228(a1, a2, a3);
LABEL_4:
    ++v14;
  }
  while (v13 != v14);
  swift_bridgeObjectRelease();
  a4 = v33;
LABEL_27:
  v29 = sub_23AD7E748();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = a4;
  *(_QWORD *)(v30 + 24) = a5;
  v35[0] = v29;
  v35[1] = sub_23AEB1180;
  v35[2] = v30;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE7B0);
  sub_23AEB11AC();
  v31 = sub_23B1C6338();
  swift_release();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_23ADFE4A0(uint64_t a1)
{
  void *v1;
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  void *v7;
  unsigned __int16 v8;
  unsigned __int8 v9;
  void *v10;
  unsigned __int16 v11;
  unsigned __int8 v12;

  if (a1 < 0)
  {
    (*(void (**)(void **__return_ptr))(*(_QWORD *)(a1 & 0x7FFFFFFFFFFFFFFFLL) + 416))(&v7);
    if ((~v8 & 0xFF00) != 0)
    {
      v2 = v8 | (v9 << 16);
      v1 = v7;
      v3 = HIWORD(v2);
      v10 = v7;
      if ((v8 & 0x100) != 0)
        LOBYTE(v2) = 0;
      LOBYTE(v11) = v2;
      HIBYTE(v11) = (v8 & 0x100) == 0;
      v12 = v3;
    }
    else
    {
      v1 = 0;
      v10 = 0;
      v12 = 0;
      v11 = -256;
    }
  }
  else
  {
    (*(void (**)(void **__return_ptr))(*(_QWORD *)a1 + 416))(&v10);
    v1 = v10;
  }
  v4 = v11 | (v12 << 16);
  if ((v11 & 0x100) != 0)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E31E0);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v5 + 32) = v1;
  *(_BYTE *)(v5 + 40) = v4;
  *(_BYTE *)(v5 + 41) = 0;
  *(_BYTE *)(v5 + 42) = BYTE2(v4);
  sub_23AEB1B4C(v1, v4);
  sub_23AB7C6B4(v1, v4, 0);
  return v5;
}

uint64_t sub_23ADFE5C4(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;
  unsigned __int16 v6;
  unsigned __int8 v7;
  void *v8;
  unsigned __int16 v9;
  unsigned __int8 v10;

  if (a1 < 0)
  {
    (*(void (**)(void **__return_ptr))(*(_QWORD *)(a1 & 0x7FFFFFFFFFFFFFFFLL) + 416))(&v5);
    if ((~v6 & 0xFF00) != 0)
    {
      v1 = v5;
      v8 = v5;
      LOBYTE(v9) = v6 & ((v6 | (v7 << 16)) << 23 >> 31);
      HIBYTE(v9) = (v6 & 0x100) == 0;
      v10 = v7;
    }
    else
    {
      v1 = 0;
      v8 = 0;
      v10 = 0;
      v9 = -256;
    }
  }
  else
  {
    (*(void (**)(void **__return_ptr))(*(_QWORD *)a1 + 416))(&v8);
    v1 = v8;
  }
  if ((~v9 & 0xFF00) == 0)
    return MEMORY[0x24BEE4AF8];
  v2 = v9 | (v10 << 16);
  if ((v9 & 0x100) != 0)
  {
    sub_23AEB1878(v1, v9 | (v10 << 16));
    sub_23AA862DC(v1, v2, 1);
    sub_23AEB1890(v1, v2);
    return MEMORY[0x24BEE4AF8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E31E8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v3 + 32) = v1;
  *(_BYTE *)(v3 + 40) = v2;
  *(_BYTE *)(v3 + 41) = 0;
  *(_BYTE *)(v3 + 42) = BYTE2(v2);
  sub_23AA88218(v1, v2, 0);
  return v3;
}

BOOL sub_23ADFE718(unsigned int a1, unsigned int a2)
{
  return HIWORD(a1) >= HIWORD(a2) && (unsigned __int16)a1 >= (unsigned __int16)a2;
}

unint64_t sub_23ADFE734(uint64_t a1, char a2)
{
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  sub_23B1C7304();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if ((a2 & 1) == 0)
  {
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    sub_23B1C7304();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
  }
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

void sub_23ADFE870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v3);
  sub_23AA8EFC8(v0, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_2542DDFB0);
  v5 = (char *)sub_23ADFE96C + 4 * word_23B1DAAE2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23ADFE96C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *v0;
  *(_BYTE *)(v1 + 16) = *((_BYTE *)v0 + 8);
  *(_QWORD *)v1 = v0[2];
  *(_QWORD *)(v1 + 8) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  return swift_storeEnumTagMultiPayload();
}

void sub_23ADFF568()
{
  uint64_t v0;
  _BYTE v1[40];
  uint64_t v2;
  _BYTE v3[40];

  sub_23AA724E8(v0, (uint64_t)&v2, &qword_2569E5EB8);
  sub_23AA724E8(v0, (uint64_t)v1, &qword_2569E5EB8);
  sub_23AA724E8(v0, (uint64_t)v3, &qword_2569E5EB8);
  __asm { BR              X9 }
}

id sub_23ADFF5E8()
{
  uint64_t v0;
  void *v1;
  __int16 v2;
  uint64_t v3;
  char v4;
  id result;
  __int128 v6;
  char v7;

  if ((v2 & 0x100) != 0)
  {
    result = (id)sub_23AEADC58(v3, (uint64_t)sub_23AB7C6B4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_23AEADBEC);
    v7 = v2;
  }
  else
  {
    result = v1;
    v7 = 0;
  }
  *(_QWORD *)v0 = v1;
  *(_BYTE *)(v0 + 8) = v7;
  *(_BYTE *)(v0 + 9) = (v2 & 0x100) == 0;
  *(_WORD *)(v0 + 14) = 0;
  *(_DWORD *)(v0 + 10) = 0;
  *(_OWORD *)(v0 + 16) = v6;
  *(_BYTE *)(v0 + 32) = v4;
  return result;
}

void *sub_23ADFF6B8(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  id *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  id *v86;
  uint64_t v87;
  char *v88;
  int EnumCaseMultiPayload;
  char v90;
  uint64_t *v91;
  uint64_t v92;
  id v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned __int8 v120;
  uint64_t v121;
  _QWORD *v122;
  void *v123;
  uint64_t v124;
  id v125;
  uint64_t v126;
  int v127;
  void *v128;
  uint64_t v129;
  unsigned int v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  id v135;
  void *v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned __int8 v147;
  uint64_t v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  uint64_t v187;
  id v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  uint64_t v192;
  unint64_t v193;
  int64_t v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  id v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  unint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  _BYTE *v221;
  _BYTE *v222;
  _BYTE *v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  id v231;
  uint64_t v232;
  uint64_t v233;
  id v234;
  unint64_t v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unsigned int (*v240)(uint64_t, uint64_t, uint64_t);
  uint64_t v241;
  BOOL v242;
  unint64_t v243;
  id v244;
  uint64_t v245;
  unint64_t v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  id v250;
  unint64_t v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  id v256;
  unint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  void *v263;
  void *v264;
  uint64_t v265;
  _QWORD *v266;
  uint64_t v267;
  unint64_t v268;
  void *v269;
  id v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  void *v282;
  uint64_t v283;
  uint64_t v284;
  id v285;
  unint64_t v286;
  unint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  unsigned __int8 v292;
  uint64_t v293;
  uint64_t v294;
  char v295;
  void *v296;
  id v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  _QWORD *v321;
  uint64_t v322;
  uint64_t v323;
  _QWORD *v324;
  uint64_t v325;
  _BYTE *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  _QWORD *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  int v340;
  uint64_t v341;
  char *v342;
  _BYTE v343[128];
  _BYTE v344[128];
  _BYTE v345[128];
  _BYTE v346[128];
  _BYTE v347[128];
  _BYTE v348[128];
  void *v349;

  v309 = a2;
  v340 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DE648);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v304 = (uint64_t)&v299 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v308 = (uint64_t)&v299 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  v315 = *(_QWORD *)(v6 - 8);
  v316 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v305 = (uint64_t)&v299 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v306 = (uint64_t)&v299 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE638);
  MEMORY[0x24BDAC7A8](v10);
  v303 = (uint64_t)&v299 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v301 = *(_QWORD *)(v12 - 8);
  v302 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v300 = (uint64_t)&v299 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v339 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v337 = *(_QWORD *)(v339 - 8);
  v14 = MEMORY[0x24BDAC7A8](v339);
  v314 = (uint64_t)&v299 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v307 = (uint64_t)&v299 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v313 = (uint64_t)&v299 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v317 = (uint64_t)&v299 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v335 = (uint64_t *)((char *)&v299 - v22);
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v331 = *(_QWORD *)(v23 - 8);
  v332 = v23;
  v24 = MEMORY[0x24BDAC7A8](v23);
  v319 = (uint64_t)&v299 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v333 = (uint64_t)&v299 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v312 = (uint64_t)&v299 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v311 = (uint64_t)&v299 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v310 = (uint64_t)&v299 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v318 = (uint64_t)&v299 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v338 = (uint64_t)&v299 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v336 = (uint64_t)&v299 - v38;
  v341 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v39 = MEMORY[0x24BDAC7A8](v341);
  v329 = (uint64_t)&v299 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v328 = (uint64_t)&v299 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v327 = (uint64_t)&v299 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v334 = (uint64_t)&v299 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v326 = (char *)&v299 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v325 = (uint64_t)&v299 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v324 = (uint64_t *)((char *)&v299 - v52);
  v53 = MEMORY[0x24BDAC7A8](v51);
  v323 = (uint64_t)&v299 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v330 = (uint64_t)&v299 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v321 = (uint64_t *)((char *)&v299 - v58);
  v59 = MEMORY[0x24BDAC7A8](v57);
  v320 = (uint64_t)&v299 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v63 = (char *)&v299 - v62;
  v64 = MEMORY[0x24BDAC7A8](v61);
  v66 = (char *)&v299 - v65;
  v67 = MEMORY[0x24BDAC7A8](v64);
  v322 = (uint64_t)&v299 - v68;
  v69 = MEMORY[0x24BDAC7A8](v67);
  v71 = (char *)&v299 - v70;
  v72 = MEMORY[0x24BDAC7A8](v69);
  v74 = (id *)((char *)&v299 - v73);
  v75 = MEMORY[0x24BDAC7A8](v72);
  v77 = (char *)&v299 - v76;
  v78 = MEMORY[0x24BDAC7A8](v75);
  v80 = (char *)&v299 - v79;
  v81 = MEMORY[0x24BDAC7A8](v78);
  v83 = (char *)&v299 - v82;
  v84 = MEMORY[0x24BDAC7A8](v81);
  v86 = (id *)((char *)&v299 - v85);
  MEMORY[0x24BDAC7A8](v84);
  v88 = (char *)&v299 - v87;
  sub_23AA8EFC8((uint64_t)v342, (uint64_t)&v299 - v87, (uint64_t *)&unk_2542DDFB0);
  v342 = v88;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v90 = v340;
  switch(EnumCaseMultiPayload)
  {
    case 0:
      v91 = (uint64_t *)&unk_2542DDFB0;
      v92 = (uint64_t)v342;
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v86, (uint64_t *)&unk_2542DDFB0);
      v93 = *v86;
      v94 = *((_BYTE *)v86 + 8);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v95 + 32) = 2;
      *(_QWORD *)(v95 + 40) = v93;
      *(_BYTE *)(v95 + 48) = v94;
      *(_BYTE *)(v95 + 49) = 0;
      *(_QWORD *)(v95 + 56) = 0;
      *(_QWORD *)(v95 + 64) = 0;
      *(_BYTE *)(v95 + 72) = 1;

      v96 = v92;
      goto LABEL_16;
    case 2:
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v83, (uint64_t *)&unk_2542DDFB0);
      if ((v83[9] & 1) == 0)
        goto LABEL_67;
      v97 = v83[8];
      v98 = *(_QWORD *)v83;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v95 + 32) = 2;
      *(_QWORD *)(v95 + 40) = v98;
      *(_BYTE *)(v95 + 48) = v97;
      *(_BYTE *)(v95 + 49) = 1;
      *(_QWORD *)(v95 + 56) = 0;
      *(_QWORD *)(v95 + 64) = 0;
      *(_BYTE *)(v95 + 72) = 2;
      goto LABEL_46;
    case 4:
      v99 = (uint64_t)v342;
      v100 = v322;
      sub_23AA8EFC8((uint64_t)v342, v322, (uint64_t *)&unk_2542DDFB0);
      if ((*(_BYTE *)(v100 + 25) & 1) != 0)
      {
        v101 = *(_BYTE *)(v100 + 24);
        v102 = *(_QWORD *)(v100 + 16);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
        v95 = swift_allocObject();
        *(_OWORD *)(v95 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v95 + 32) = 16;
        *(_QWORD *)(v95 + 40) = v102;
        *(_BYTE *)(v95 + 48) = v101;
        *(_BYTE *)(v95 + 49) = 1;
        *(_BYTE *)(v95 + 72) = 0;
        sub_23AA862DC(*(id *)v100, *(unsigned __int8 *)(v100 + 8), *(_BYTE *)(v100 + 9));
        goto LABEL_94;
      }
      v135 = *(id *)v100;
      v167 = *(_BYTE *)(v100 + 9);
      v166 = *(unsigned __int8 *)(v100 + 8);
      goto LABEL_66;
    case 5:
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v77, (uint64_t *)&unk_2542DDFB0);
      v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
      v104 = (uint64_t)&v77[*(int *)(v103 + 48)];
      v105 = *(_QWORD *)&v77[*(int *)(v103 + 64)];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v331 + 48))(v77, 1, v332) == 1)
      {
        sub_23AA8A05C(v104, (uint64_t *)&unk_2542E4750);
        sub_23AA8A05C((uint64_t)v77, (uint64_t *)&unk_2542E4750);
        goto LABEL_67;
      }
      v169 = (uint64_t)v77;
      v170 = v319;
      sub_23AA724E8(v169, v319, (uint64_t *)&unk_2542E6B00);
      if ((v105 & 2) != 0)
      {
        v203 = *(_QWORD *)(v170 + 16);
        v204 = *(unsigned __int8 *)(v170 + 24);
        v95 = (uint64_t)sub_23AF98E38(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v206 = *(_QWORD *)(v95 + 16);
        v205 = *(_QWORD *)(v95 + 24);
        if (v206 >= v205 >> 1)
          v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v205 > 1), v206 + 1, 1, (_QWORD *)v95);
        v171 = (uint64_t)v342;
        *(_QWORD *)(v95 + 16) = v206 + 1;
        v207 = v95 + 48 * v206;
        *(_QWORD *)(v207 + 32) = 4;
        *(_QWORD *)(v207 + 40) = v203;
        *(_QWORD *)(v207 + 56) = 0;
        *(_QWORD *)(v207 + 64) = 0;
        *(_QWORD *)(v207 + 48) = v204;
        *(_BYTE *)(v207 + 72) = 0;
      }
      else
      {
        v95 = MEMORY[0x24BEE4AF8];
        v171 = (uint64_t)v342;
      }
      if ((v105 & 3) != 0)
      {
        v208 = *(_QWORD *)v170;
        v209 = *(unsigned __int8 *)(v170 + 8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v95 = (uint64_t)sub_23AF98E38(0, *(_QWORD *)(v95 + 16) + 1, 1, (_QWORD *)v95);
        v211 = *(_QWORD *)(v95 + 16);
        v210 = *(_QWORD *)(v95 + 24);
        v212 = v211 + 1;
        v341 = v104;
        if (v211 >= v210 >> 1)
          v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v210 > 1), v211 + 1, 1, (_QWORD *)v95);
        *(_QWORD *)(v95 + 16) = v212;
        v213 = v95 + 48 * v211;
        *(_QWORD *)(v213 + 32) = 1024;
        *(_QWORD *)(v213 + 40) = v208;
        *(_QWORD *)(v213 + 56) = 0;
        *(_QWORD *)(v213 + 64) = 0;
        *(_QWORD *)(v213 + 48) = v209;
        *(_BYTE *)(v213 + 72) = 4;
        v214 = v170;
        v215 = *(_QWORD *)(v170 + 16);
        v216 = *(unsigned __int8 *)(v214 + 24);
        v218 = *(_QWORD *)(v214 + 128);
        v217 = *(_QWORD *)(v214 + 136);
        v219 = *(_QWORD *)(v95 + 24);
        swift_bridgeObjectRetain();
        if (v212 >= v219 >> 1)
          v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v219 > 1), v211 + 2, 1, (_QWORD *)v95);
        *(_QWORD *)(v95 + 16) = v211 + 2;
        v220 = v95 + 48 * v212;
        *(_QWORD *)(v220 + 32) = 1024;
        *(_QWORD *)(v220 + 40) = v215;
        *(_QWORD *)(v220 + 48) = v216;
        *(_QWORD *)(v220 + 56) = v218;
        *(_QWORD *)(v220 + 64) = v217;
        *(_BYTE *)(v220 + 72) = 1;
        v104 = v341;
        v171 = (uint64_t)v342;
        v170 = v319;
      }
      sub_23AA8A05C(v170, (uint64_t *)&unk_2542E6B00);
      sub_23AA8A05C(v104, (uint64_t *)&unk_2542E4750);
      sub_23AA8A05C(v171, (uint64_t *)&unk_2542DDFB0);
      return (void *)v95;
    case 6:
      v106 = (uint64_t)v342;
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v80, (uint64_t *)&unk_2542DDFB0);
      v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
      v108 = (uint64_t)&v80[*(int *)(v107 + 48)];
      v109 = *(_QWORD *)&v80[*(int *)(v107 + 64)];
      v110 = v336;
      sub_23AA724E8((uint64_t)v80, v336, &qword_2542E4770);
      v111 = v338;
      sub_23AA724E8(v108, v338, &qword_2542E4770);
      if ((v109 & 3) != 0)
      {
        v112 = v318;
        sub_23AA8EFC8(v110, v318, &qword_2542E4770);
        v113 = v337;
        v114 = v339;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v337 + 48))(v112, 1, v339) == 1)
        {
          sub_23AA8A05C(v112, &qword_2542E4770);
          v95 = MEMORY[0x24BEE4AF8];
          goto LABEL_137;
        }
        v187 = v317;
        sub_23AA724E8(v112, v317, (uint64_t *)&unk_2542E4760);
        if (*(_BYTE *)(v187 + *(int *)(v114 + 48)) == 1)
        {
          v188 = *(id *)v187;
          v95 = (uint64_t)sub_23AF98E38(0, 1, 1, MEMORY[0x24BEE4AF8]);
          v190 = *(_QWORD *)(v95 + 16);
          v189 = *(_QWORD *)(v95 + 24);
          v191 = v190 + 1;
          if (v190 >= v189 >> 1)
            v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v189 > 1), v190 + 1, 1, (_QWORD *)v95);
          *(_QWORD *)(v95 + 16) = v191;
          v192 = v95 + 48 * v190;
          *(_QWORD *)(v192 + 32) = 2;
          *(_QWORD *)(v192 + 40) = v188;
          *(_QWORD *)(v192 + 56) = 0;
          *(_QWORD *)(v192 + 64) = 0;
          *(_QWORD *)(v192 + 48) = 256;
          *(_BYTE *)(v192 + 72) = 2;
          if ((v90 & 1) != 0)
          {
            v193 = *(_QWORD *)(v95 + 24);
            v194 = v190 + 2;
            v195 = *(id *)(v187 + 8);
            if (v191 >= v193 >> 1)
              v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v193 > 1), v194, 1, (_QWORD *)v95);
            *(_QWORD *)(v95 + 16) = v194;
            v196 = v95 + 48 * v191;
            *(_QWORD *)(v196 + 32) = 2;
            *(_QWORD *)(v196 + 40) = v195;
            *(_QWORD *)(v196 + 48) = 256;
            *(_QWORD *)(v196 + 56) = 0;
            *(_QWORD *)(v196 + 64) = 0;
            *(_BYTE *)(v196 + 72) = 5;
          }
        }
        else
        {
          v95 = MEMORY[0x24BEE4AF8];
        }
        v233 = *(_QWORD *)(v187 + 80);
        v232 = *(_QWORD *)(v187 + 88);
        v234 = *(id *)(v187 + 8);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v95 = (uint64_t)sub_23AF98E38(0, *(_QWORD *)(v95 + 16) + 1, 1, (_QWORD *)v95);
        v236 = *(_QWORD *)(v95 + 16);
        v235 = *(_QWORD *)(v95 + 24);
        if (v236 >= v235 >> 1)
          v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v235 > 1), v236 + 1, 1, (_QWORD *)v95);
        *(_QWORD *)(v95 + 16) = v236 + 1;
        v237 = v95 + 48 * v236;
        *(_QWORD *)(v237 + 32) = 1024;
        *(_QWORD *)(v237 + 40) = v234;
        *(_QWORD *)(v237 + 48) = 256;
        *(_QWORD *)(v237 + 56) = v233;
        *(_QWORD *)(v237 + 64) = v232;
        *(_BYTE *)(v237 + 72) = 2;
        sub_23AA8A05C(v317, (uint64_t *)&unk_2542E4760);
        v111 = v338;
      }
      else
      {
        v95 = MEMORY[0x24BEE4AF8];
      }
      v114 = v339;
      v113 = v337;
LABEL_137:
      if ((v109 & 2) != 0)
      {
        v239 = v310;
        sub_23AA8EFC8(v111, v310, &qword_2542E4770);
        v240 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48);
        if (v240(v239, 1, v114) == 1)
        {
          sub_23AA8A05C(v239, &qword_2542E4770);
        }
        else
        {
          v249 = v313;
          sub_23AA724E8(v239, v313, (uint64_t *)&unk_2542E4760);
          v250 = *(id *)(v249 + 8);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v95 = (uint64_t)sub_23AF98E38(0, *(_QWORD *)(v95 + 16) + 1, 1, (_QWORD *)v95);
          v252 = *(_QWORD *)(v95 + 16);
          v251 = *(_QWORD *)(v95 + 24);
          if (v252 >= v251 >> 1)
            v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v251 > 1), v252 + 1, 1, (_QWORD *)v95);
          *(_QWORD *)(v95 + 16) = v252 + 1;
          v253 = v95 + 48 * v252;
          *(_QWORD *)(v253 + 32) = 12;
          *(_QWORD *)(v253 + 40) = v250;
          *(_QWORD *)(v253 + 56) = 0;
          *(_QWORD *)(v253 + 64) = 0;
          *(_QWORD *)(v253 + 48) = 256;
          *(_BYTE *)(v253 + 72) = 0;
          sub_23AA8A05C(v313, (uint64_t *)&unk_2542E4760);
          v114 = v339;
        }
        v254 = v312;
        sub_23AA8EFC8(v110, v312, &qword_2542E4770);
        if (v240(v254, 1, v114) == 1)
        {
          sub_23AA8A05C(v111, &qword_2542E4770);
          v111 = v110;
          v110 = v254;
          goto LABEL_173;
        }
        v255 = v314;
        sub_23AA724E8(v254, v314, (uint64_t *)&unk_2542E4760);
        v256 = *(id *)(v255 + 8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v95 = (uint64_t)sub_23AF98E38(0, *(_QWORD *)(v95 + 16) + 1, 1, (_QWORD *)v95);
        v258 = *(_QWORD *)(v95 + 16);
        v257 = *(_QWORD *)(v95 + 24);
        if (v258 >= v257 >> 1)
          v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v257 > 1), v258 + 1, 1, (_QWORD *)v95);
        *(_QWORD *)(v95 + 16) = v258 + 1;
        v259 = v95 + 48 * v258;
        *(_QWORD *)(v259 + 32) = 8;
        *(_QWORD *)(v259 + 40) = v256;
        *(_QWORD *)(v259 + 56) = 0;
        *(_QWORD *)(v259 + 64) = 0;
        *(_QWORD *)(v259 + 48) = 256;
        *(_BYTE *)(v259 + 72) = 0;
        v260 = v314;
      }
      else
      {
        v238 = v311;
        sub_23AA8EFC8(v111, v311, &qword_2542E4770);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v113 + 48))(v238, 1, v114) == 1)
        {
          sub_23AA8A05C(v111, &qword_2542E4770);
          v111 = v110;
          v110 = v238;
          goto LABEL_173;
        }
        v241 = v307;
        sub_23AA724E8(v238, v307, (uint64_t *)&unk_2542E4760);
        v242 = (v109 & 0x4000) != 0 && *(_BYTE *)(v241 + *(int *)(v114 + 48)) == 1;
        v243 = v109 & 0xFFFFFFFFFFFEB7FFLL;
        if (!v242)
          v243 = v109;
        if ((v243 & 0xFFFFFFFFFFFEF7FFLL) != 0)
        {
          v244 = *(id *)(v241 + 8);
          v245 = v241;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v95 = (uint64_t)sub_23AF98E38(0, *(_QWORD *)(v95 + 16) + 1, 1, (_QWORD *)v95);
          v247 = *(_QWORD *)(v95 + 16);
          v246 = *(_QWORD *)(v95 + 24);
          if (v247 >= v246 >> 1)
            v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v246 > 1), v247 + 1, 1, (_QWORD *)v95);
          *(_QWORD *)(v95 + 16) = v247 + 1;
          v248 = v95 + 48 * v247;
          *(_QWORD *)(v248 + 32) = 8;
          *(_QWORD *)(v248 + 40) = v244;
          *(_QWORD *)(v248 + 56) = 0;
          *(_QWORD *)(v248 + 64) = 0;
          *(_QWORD *)(v248 + 48) = 256;
          *(_BYTE *)(v248 + 72) = 0;
        }
        else
        {
          v245 = v241;
        }
        v260 = v245;
      }
      sub_23AA8A05C(v260, (uint64_t *)&unk_2542E4760);
LABEL_173:
      sub_23AA8A05C(v111, &qword_2542E4770);
      sub_23AA8A05C(v110, &qword_2542E4770);
      goto LABEL_174;
    case 7:
      v91 = (uint64_t *)&unk_2542DDFB0;
      v115 = (uint64_t)v342;
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v86, (uint64_t *)&unk_2542DDFB0);
      v116 = (uint64_t *)&unk_2542E6B00;
      v117 = (uint64_t)v86;
      v118 = v333;
      sub_23AA724E8(v117, v333, (uint64_t *)&unk_2542E6B00);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = xmmword_23B1CA760;
      v119 = *(_QWORD *)v118;
      v120 = *(_BYTE *)(v118 + 8);
      *(_QWORD *)(v95 + 32) = 2;
      *(_QWORD *)(v95 + 40) = v119;
      *(_WORD *)(v95 + 48) = v120;
      *(_QWORD *)(v95 + 56) = 0;
      *(_QWORD *)(v95 + 64) = 0;
      *(_BYTE *)(v95 + 72) = 1;
      v121 = v118;
      goto LABEL_14;
    case 8:
      v91 = (uint64_t *)&unk_2542DDFB0;
      v115 = (uint64_t)v342;
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v86, (uint64_t *)&unk_2542DDFB0);
      v116 = (uint64_t *)&unk_2542E4760;
      v122 = v335;
      sub_23AA724E8((uint64_t)v86, (uint64_t)v335, (uint64_t *)&unk_2542E4760);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = xmmword_23B1D2330;
      v123 = (void *)v122[1];
      *(_QWORD *)(v95 + 32) = 1024;
      *(_QWORD *)(v95 + 40) = v123;
      *(_WORD *)(v95 + 48) = 256;
      v124 = v122[11];
      *(_QWORD *)(v95 + 56) = v122[10];
      *(_QWORD *)(v95 + 64) = v124;
      *(_BYTE *)(v95 + 72) = 2;
      *(_QWORD *)(v95 + 80) = 8;
      *(_QWORD *)(v95 + 88) = v123;
      *(_WORD *)(v95 + 96) = 256;
      *(_BYTE *)(v95 + 120) = 0;
      v125 = v123;
      swift_bridgeObjectRetain();
      v121 = (uint64_t)v122;
LABEL_14:
      sub_23AA8A05C(v121, v116);
      goto LABEL_15;
    case 10:
      v106 = (uint64_t)v342;
      v126 = v334;
      sub_23AA8EFC8((uint64_t)v342, v334, (uint64_t *)&unk_2542DDFB0);
      v127 = *(unsigned __int8 *)(v126 + 26);
      v128 = *(void **)v126;
      v129 = *(unsigned __int8 *)(v126 + 8);
      if ((*(_BYTE *)(v126 + 9) & 1) != 0)
      {
        v130 = *(unsigned __int16 *)(v126 + 24);
        if (v130 >> 8 <= 0xFE)
        {
          v131 = *(_QWORD *)(v126 + 16);
          if ((v130 & 0x100) != 0)
          {
            sub_23ADF1CFC(*(void **)(v126 + 16), *(unsigned __int16 *)(v126 + 24));
          }
          else if (v127 == 1)
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
            v95 = swift_allocObject();
            *(_OWORD *)(v95 + 16) = xmmword_23B1CA760;
            *(_QWORD *)(v95 + 32) = 0x100000;
            *(_QWORD *)(v95 + 40) = v131;
            *(_BYTE *)(v95 + 48) = v130;
            *(_BYTE *)(v95 + 49) = 0;
            *(_QWORD *)(v95 + 56) = 0;
            *(_QWORD *)(v95 + 64) = 0;
            *(_BYTE *)(v95 + 72) = 1;
            sub_23AA862DC(v128, v129, 1);
LABEL_174:
            sub_23AA8A05C(v106, (uint64_t *)&unk_2542DDFB0);
            return (void *)v95;
          }
        }
        v135 = v128;
        v166 = v129;
        goto LABEL_65;
      }
      v95 = MEMORY[0x24BEE4AF8];
      if ((v90 & 1) != 0 && *(_BYTE *)(v126 + 27) == 2)
      {
        v95 = (uint64_t)sub_23AF98E38(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v173 = *(_QWORD *)(v95 + 16);
        v172 = *(_QWORD *)(v95 + 24);
        if (v173 >= v172 >> 1)
          v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v172 > 1), v173 + 1, 1, (_QWORD *)v95);
        *(_QWORD *)(v95 + 16) = v173 + 1;
        v174 = v95 + 48 * v173;
        *(_QWORD *)(v174 + 32) = 2;
        *(_QWORD *)(v174 + 40) = v128;
        *(_QWORD *)(v174 + 56) = 0;
        *(_QWORD *)(v174 + 64) = 0;
        *(_QWORD *)(v174 + 48) = v129;
        *(_BYTE *)(v174 + 72) = 1;
      }
      if (v127 == 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v95 = (uint64_t)sub_23AF98E38(0, *(_QWORD *)(v95 + 16) + 1, 1, (_QWORD *)v95);
        v176 = *(_QWORD *)(v95 + 16);
        v175 = *(_QWORD *)(v95 + 24);
        if (v176 >= v175 >> 1)
          v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v175 > 1), v176 + 1, 1, (_QWORD *)v95);
        *(_QWORD *)(v95 + 16) = v176 + 1;
        v177 = v95 + 48 * v176;
        *(_QWORD *)(v177 + 32) = 0x100000;
        *(_QWORD *)(v177 + 40) = v128;
        *(_QWORD *)(v177 + 56) = 0;
        *(_QWORD *)(v177 + 64) = 0;
        *(_QWORD *)(v177 + 48) = v129;
        *(_BYTE *)(v177 + 72) = 1;
      }
      sub_23ADF1CFC(*(void **)(v126 + 16), *(unsigned __int16 *)(v126 + 24));
      goto LABEL_174;
    case 12:
      v132 = (uint64_t)v342;
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v74, (uint64_t *)&unk_2542DDFB0);

      v133 = *v74;
      v134 = *((unsigned __int8 *)v74 + 8);
      if ((*((_BYTE *)v74 + 9) & 1) != 0)
      {
        v135 = *v74;
        goto LABEL_64;
      }
      v178 = *((unsigned __int8 *)v74 + 10);
      if ((v178 - 1) < 2)
      {
        sub_23AA8A05C(v132, (uint64_t *)&unk_2542DDFB0);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
        v95 = swift_allocObject();
        *(_OWORD *)(v95 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v95 + 32) = 1024;
        *(_QWORD *)(v95 + 40) = v133;
        *(_BYTE *)(v95 + 48) = v134;
        *(_BYTE *)(v95 + 49) = 0;
        *(_BYTE *)(v95 + 72) = 6;
        return (void *)v95;
      }
      if (!*((_BYTE *)v74 + 10) || v178 == 23)
      {
        sub_23AA8A05C((uint64_t)v342, (uint64_t *)&unk_2542DDFB0);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
        v95 = swift_allocObject();
        *(_OWORD *)(v95 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v95 + 32) = 4;
        *(_QWORD *)(v95 + 40) = v133;
        *(_BYTE *)(v95 + 48) = v134;
        *(_BYTE *)(v95 + 49) = 0;
        *(_BYTE *)(v95 + 72) = 3;
        return (void *)v95;
      }
      goto LABEL_67;
    case 13:
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v66, (uint64_t *)&unk_2542DDFB0);
      v136 = *(void **)v66;
      v134 = v66[8];
      if ((v66[9] & 1) != 0)
        goto LABEL_63;
      v137 = v66[10];
      if (v137 > 0x17)
        goto LABEL_67;
      if (((1 << v137) & 0x80104B) != 0)
      {
        sub_23AA8A05C((uint64_t)v342, (uint64_t *)&unk_2542DDFB0);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
        v138 = swift_allocObject();
        v95 = v138;
        *(_OWORD *)(v138 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v138 + 32) = 262400;
        *(_QWORD *)(v138 + 40) = v136;
        *(_BYTE *)(v138 + 48) = v134;
        goto LABEL_189;
      }
      if (v137 != 2)
        goto LABEL_67;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v155 = swift_allocObject();
      v95 = v155;
      *(_OWORD *)(v155 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v155 + 32) = 262912;
      *(_QWORD *)(v155 + 40) = v136;
      *(_BYTE *)(v155 + 48) = v134;
      *(_BYTE *)(v155 + 49) = 0;
LABEL_45:
      *(_BYTE *)(v155 + 72) = 0;
LABEL_46:
      sub_23AA8A05C((uint64_t)v342, (uint64_t *)&unk_2542DDFB0);
      return (void *)v95;
    case 20:
      v139 = (uint64_t)v342;
      v140 = v324;
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v324, (uint64_t *)&unk_2542DDFB0);
      if ((*v140 & 0x8000000000000000) == 0)
        goto LABEL_29;
      goto LABEL_96;
    case 21:
      v139 = (uint64_t)v342;
      v141 = v321;
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v321, (uint64_t *)&unk_2542DDFB0);
      if ((*v141 & 0x8000000000000000) != 0)
      {
LABEL_96:
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E68A0);
        v181 = swift_dynamicCastClass();
        if (v181)
        {
          sub_23AA8A05C(v139, (uint64_t *)&unk_2542DDFB0);
          v182 = v181 + *(_QWORD *)(*(_QWORD *)v181 + 616);
          swift_beginAccess();
          v183 = v182;
          v184 = v308;
          sub_23AA8EFC8(v183, v308, qword_2542DE648);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v315 + 48))(v184, 1, v316) == 1)
          {
            sub_23AA8A05C(v184, qword_2542DE648);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
            v95 = swift_allocObject();
            *(_OWORD *)(v95 + 16) = xmmword_23B1CA760;
            v185 = *(_QWORD *)(v181 + 136);
            v186 = *(_BYTE *)(v181 + 144);
            *(_QWORD *)(v95 + 32) = 8;
            *(_QWORD *)(v95 + 40) = v185;
            *(_BYTE *)(v95 + 48) = v186;
            swift_release();
            *(_BYTE *)(v95 + 49) = 0;
            *(_BYTE *)(v95 + 72) = 3;
          }
          else
          {
            v91 = (uint64_t *)&unk_2542E1E00;
            v115 = v306;
            sub_23AA724E8(v184, v306, (uint64_t *)&unk_2542E1E00);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
            v95 = swift_allocObject();
            *(_OWORD *)(v95 + 16) = xmmword_23B1D3B90;
            v226 = *(void **)v115;
            v227 = *(_QWORD *)(v115 + 8);
            *(_QWORD *)(v95 + 32) = 1024;
            *(_QWORD *)(v95 + 40) = v226;
            *(_WORD *)(v95 + 48) = 256;
            v228 = *(_QWORD *)(v115 + 16);
            *(_QWORD *)(v95 + 56) = v227;
            *(_QWORD *)(v95 + 64) = v228;
            *(_BYTE *)(v95 + 72) = 2;
            *(_QWORD *)(v95 + 80) = 8;
            *(_QWORD *)(v95 + 88) = v226;
            *(_WORD *)(v95 + 96) = 256;
            *(_BYTE *)(v95 + 120) = 0;
            v229 = *(_QWORD *)(v181 + 136);
            v230 = *(_BYTE *)(v181 + 144);
            *(_QWORD *)(v95 + 128) = 8;
            *(_QWORD *)(v95 + 136) = v229;
            *(_BYTE *)(v95 + 144) = v230;
            v231 = v226;
            swift_bridgeObjectRetain();
            swift_release();
            *(_BYTE *)(v95 + 145) = 0;
            *(_BYTE *)(v95 + 168) = 3;
LABEL_15:
            v96 = v115;
LABEL_16:
            sub_23AA8A05C(v96, v91);
          }
          return (void *)v95;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69B0);
        v197 = swift_dynamicCastClass();
        if (v197)
        {
          sub_23AA8A05C(v139, (uint64_t *)&unk_2542DDFB0);
          swift_beginAccess();
          v198 = *(void **)(v197 + 176);
          if (v198)
          {
            v199 = v198;
            v95 = (uint64_t)sub_23AF98E38(0, 1, 1, MEMORY[0x24BEE4AF8]);
            v201 = *(_QWORD *)(v95 + 16);
            v200 = *(_QWORD *)(v95 + 24);
            if (v201 >= v200 >> 1)
              v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v200 > 1), v201 + 1, 1, (_QWORD *)v95);
            *(_QWORD *)(v95 + 16) = v201 + 1;
            v202 = v95 + 48 * v201;
            *(_QWORD *)(v202 + 32) = 8;
            *(_QWORD *)(v202 + 40) = v198;
            *(_QWORD *)(v202 + 56) = 0;
            *(_QWORD *)(v202 + 64) = 0;
            *(_QWORD *)(v202 + 48) = 256;
            *(_BYTE *)(v202 + 72) = 3;
          }
          else
          {
            v95 = MEMORY[0x24BEE4AF8];
          }
          if ((*(_BYTE *)(v197 + 168) & 3) != 0)
          {
            v278 = v197 + *(_QWORD *)(*(_QWORD *)v197 + 624);
            swift_beginAccess();
            v279 = v278;
            v280 = v304;
            sub_23AA8EFC8(v279, v304, qword_2542DE648);
            swift_release();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v315 + 48))(v280, 1, v316) == 1)
            {
              sub_23AA8A05C(v280, qword_2542DE648);
            }
            else
            {
              v281 = v305;
              sub_23AA724E8(v280, v305, (uint64_t *)&unk_2542E1E00);
              v282 = *(void **)v281;
              v283 = *(_QWORD *)(v281 + 8);
              v284 = *(_QWORD *)(v281 + 16);
              v285 = v282;
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v95 = (uint64_t)sub_23AF98E38(0, *(_QWORD *)(v95 + 16) + 1, 1, (_QWORD *)v95);
              v287 = *(_QWORD *)(v95 + 16);
              v286 = *(_QWORD *)(v95 + 24);
              if (v287 >= v286 >> 1)
                v95 = (uint64_t)sub_23AF98E38((_QWORD *)(v286 > 1), v287 + 1, 1, (_QWORD *)v95);
              *(_QWORD *)(v95 + 16) = v287 + 1;
              v288 = v95 + 48 * v287;
              *(_QWORD *)(v288 + 32) = 1024;
              *(_QWORD *)(v288 + 40) = v285;
              *(_QWORD *)(v288 + 48) = 256;
              *(_QWORD *)(v288 + 56) = v283;
              *(_QWORD *)(v288 + 64) = v284;
              *(_BYTE *)(v288 + 72) = 2;
              sub_23AA8A05C(v305, (uint64_t *)&unk_2542E1E00);
            }
          }
          else
          {
            swift_release();
          }
          return (void *)v95;
        }
LABEL_29:
        swift_release();
        goto LABEL_67;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6090);
      v142 = swift_dynamicCastClass();
      if (v142)
      {
        v143 = v142;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
        v144 = swift_allocObject();
        v95 = v144;
        *(_OWORD *)(v144 + 16) = xmmword_23B1CA760;
        v145 = 0x4000;
LABEL_33:
        v146 = *(_QWORD *)(v143 + 136);
        v147 = *(_BYTE *)(v143 + 144);
        *(_QWORD *)(v144 + 32) = v145;
        *(_QWORD *)(v144 + 40) = v146;
        *(_WORD *)(v144 + 48) = v147;
        *(_BYTE *)(v144 + 72) = 0;
LABEL_34:
        swift_release();
LABEL_35:
        sub_23AA8A05C(v139, (uint64_t *)&unk_2542DDFB0);
        return (void *)v95;
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5ED0);
      v221 = (_BYTE *)swift_dynamicCastClass();
      if (v221)
      {
        if ((v90 & 1) != 0)
        {
          v222 = v221;
          if (v221[104] == 3)
          {
            v223 = &v221[*(_QWORD *)(*(_QWORD *)v221 + 616)];
            swift_beginAccess();
            v224 = (uint64_t)v223;
            v225 = v303;
            sub_23AA8EFC8(v224, v303, (uint64_t *)&unk_2542DE638);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v301 + 48))(v225, 1, v302) != 1)
            {
              v293 = v300;
              sub_23AA724E8(v225, v300, (uint64_t *)&unk_2542E1DF0);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
              v95 = swift_allocObject();
              *(_OWORD *)(v95 + 16) = xmmword_23B1D2330;
              v294 = *(_QWORD *)v293;
              v295 = *(_BYTE *)(v293 + 8);
              *(_QWORD *)(v95 + 32) = 8;
              *(_QWORD *)(v95 + 40) = v294;
              *(_BYTE *)(v95 + 48) = v295;
              *(_BYTE *)(v95 + 49) = 0;
              *(_BYTE *)(v95 + 72) = 0;
              v296 = (void *)*((_QWORD *)v222 + 17);
              *(_QWORD *)(v95 + 80) = 8;
              *(_QWORD *)(v95 + 88) = v296;
              *(_WORD *)(v95 + 96) = 256;
              *(_BYTE *)(v95 + 120) = 3;
              v297 = v296;
              swift_release();
              sub_23AA8A05C(v293, (uint64_t *)&unk_2542E1DF0);
              goto LABEL_35;
            }
            swift_retain();
            sub_23AA8A05C(v225, (uint64_t *)&unk_2542DE638);
            goto LABEL_182;
          }
        }
        goto LABEL_181;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5568);
      v261 = swift_dynamicCastClass();
      if (!v261)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE630);
        v289 = swift_dynamicCastClass();
        if (v289)
        {
          v290 = v289;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
          v95 = swift_allocObject();
          *(_OWORD *)(v95 + 16) = xmmword_23B1CA760;
          v291 = *(_QWORD *)(v290 + 136);
          v292 = *(_BYTE *)(v290 + 144);
          *(_QWORD *)(v95 + 32) = 1024;
          *(_QWORD *)(v95 + 40) = v291;
          *(_WORD *)(v95 + 48) = v292;
          *(_BYTE *)(v95 + 72) = 6;
          goto LABEL_34;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60E8);
        v298 = swift_dynamicCastClass();
        if (v298)
        {
          v143 = v298;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
          v144 = swift_allocObject();
          v95 = v144;
          *(_OWORD *)(v144 + 16) = xmmword_23B1CA760;
          v145 = 256;
          goto LABEL_33;
        }
        goto LABEL_29;
      }
      v262 = v261;
      if (*(_BYTE *)(v261 + 104) != 3)
      {
LABEL_181:
        swift_retain();
        goto LABEL_182;
      }
      v263 = *(void **)(v261 + 96);
      v349 = *(void **)(v261 + 88);
      v264 = v349;
      swift_retain();
      sub_23AAAE478(v264, v263, 3);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      if ((swift_dynamicCast() & 1) != 0)
      {
        nullsub_1(v348);
        sub_23AA724E8((uint64_t)v348, (uint64_t)v346, &qword_2569E6170);
        sub_23AA724E8((uint64_t)v346, (uint64_t)v347, &qword_2569E6170);
        if ((*(_BYTE *)(v262 + 160) & 3) != 0)
        {
          sub_23AA724E8((uint64_t)v347, (uint64_t)v344, (uint64_t *)&unk_2542E0950);
          sub_23AA724E8((uint64_t)v347, (uint64_t)v345, (uint64_t *)&unk_2542E0950);
          if (sub_23AC050A4((uint64_t)v345) == 1)
          {
            v265 = nullsub_1(v344);
            sub_23AA724E8((uint64_t)v347, (uint64_t)v343, (uint64_t *)&unk_2542E0950);
            v266 = (_QWORD *)nullsub_1(v343);
            v267 = v266[6];
            v268 = v266[7];
            v269 = (void *)v266[8];
            swift_bridgeObjectRetain();
            sub_23ACFC26C(v267, v268);
            v270 = v269;
            swift_bridgeObjectRelease();
            sub_23AB22AE4(*(_QWORD *)(v265 + 48), *(_QWORD *)(v265 + 56));

            v271 = *(_QWORD *)v265;
            LOBYTE(v267) = *(_BYTE *)(v265 + 8);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
            v95 = swift_allocObject();
            *(_OWORD *)(v95 + 16) = xmmword_23B1CA760;
            *(_QWORD *)(v95 + 32) = 1024;
            *(_QWORD *)(v95 + 40) = v271;
            *(_BYTE *)(v95 + 48) = v267;
            *(_BYTE *)(v95 + 49) = 0;
            *(_BYTE *)(v95 + 72) = 0;
            swift_release_n();
            sub_23AEB3CD8((uint64_t)v346, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AEB15BC);
            goto LABEL_35;
          }
        }
        swift_release_n();
        sub_23AEB3CD8((uint64_t)v346, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AEB15BC);
        goto LABEL_183;
      }
LABEL_182:
      swift_release_n();
LABEL_183:
      v168 = v139;
LABEL_68:
      sub_23AA8A05C(v168, (uint64_t *)&unk_2542DDFB0);
      return (void *)MEMORY[0x24BEE4AF8];
    case 22:
      v148 = (uint64_t)v342;
      v149 = v326;
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v326, (uint64_t *)&unk_2542DDFB0);
      if ((*v149 & 1) != 0)
      {
        sub_23AA8A05C(v148, (uint64_t *)&unk_2542DDFB0);
        if ((v309 & 0x4000) != 0)
          return &unk_250BDDBC8;
        else
          return (void *)MEMORY[0x24BEE4AF8];
      }
      else
      {
        sub_23AA8A05C(v148, (uint64_t *)&unk_2542DDFB0);
        return &unk_250BDDB78;
      }
    case 24:
      v99 = (uint64_t)v342;
      v150 = v323;
      sub_23AA8EFC8((uint64_t)v342, v323, (uint64_t *)&unk_2542DDFB0);
      v136 = *(void **)v150;
      v134 = *(unsigned __int8 *)(v150 + 8);
      if ((*(_BYTE *)(v150 + 9) & 1) != 0)
        goto LABEL_63;
      if ((v90 & 1) != 0)
        goto LABEL_89;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v151 = swift_allocObject();
      v95 = v151;
      *(_OWORD *)(v151 + 16) = xmmword_23B1CA760;
      v152 = 0x4000;
      goto LABEL_93;
    case 25:
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v63, (uint64_t *)&unk_2542DDFB0);
      if ((v63[9] & 1) == 0)
        goto LABEL_67;
      v153 = v63[8];
      v154 = *(_QWORD *)v63;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v155 = swift_allocObject();
      v95 = v155;
      *(_OWORD *)(v155 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v155 + 32) = 4096;
      *(_QWORD *)(v155 + 40) = v154;
      *(_BYTE *)(v155 + 48) = v153;
      *(_BYTE *)(v155 + 49) = 1;
      goto LABEL_45;
    case 26:
      v99 = (uint64_t)v342;
      v156 = v320;
      sub_23AA8EFC8((uint64_t)v342, v320, (uint64_t *)&unk_2542DDFB0);
      v136 = *(void **)v156;
      v134 = *(unsigned __int8 *)(v156 + 8);
      if ((*(_BYTE *)(v156 + 9) & 1) != 0)
        goto LABEL_63;
      if ((v90 & 1) != 0)
      {
LABEL_89:
        v168 = v99;
        goto LABEL_68;
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v157 = swift_allocObject();
      v95 = v157;
      *(_OWORD *)(v157 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v157 + 32) = 2;
      *(_QWORD *)(v157 + 40) = v136;
      *(_BYTE *)(v157 + 48) = v134;
      *(_BYTE *)(v157 + 49) = 0;
      v158 = 4;
LABEL_59:
      *(_BYTE *)(v157 + 72) = v158;
      goto LABEL_94;
    case 27:
      v159 = (uint64_t)v342;
      v160 = v330;
      sub_23AA8EFC8((uint64_t)v342, v330, (uint64_t *)&unk_2542DDFB0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v161 = &qword_2542DDDB0;
LABEL_52:
        sub_23AA8A05C(v160, v161);
        goto LABEL_67;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v272 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E3190);
          v273 = v160 + *(int *)(v272 + 48);

          v179 = *(_QWORD *)v160;
          v180 = *(_BYTE *)(v160 + 8);
          goto LABEL_186;
        case 1u:
          v274 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2569E3198);
          v273 = v160 + v274[12];
          v275 = v274[16];
          v276 = v160 + v274[20];

          v179 = *(_QWORD *)v160;
          v180 = *(_BYTE *)(v160 + 8);
          sub_23AAAE4D0(*(_QWORD *)v276, *(_QWORD *)(v276 + 8), *(_QWORD *)(v276 + 16), *(_QWORD *)(v276 + 24), *(_QWORD *)(v276 + 32));

LABEL_186:
          sub_23AA8A05C(v273, (uint64_t *)&unk_2542E4750);
          break;
        case 2u:

          v179 = *(_QWORD *)v160;
          v180 = *(_BYTE *)(v160 + 8);
          sub_23AAAE4D0(*(_QWORD *)(v160 + 24), *(_QWORD *)(v160 + 32), *(_QWORD *)(v160 + 40), *(_QWORD *)(v160 + 48), *(_QWORD *)(v160 + 56));

          break;
        case 4u:
        case 5u:
          v179 = *(_QWORD *)v160;
          v180 = *(_BYTE *)(v160 + 8);
          break;
        default:
          v161 = &qword_2542E1600;
          goto LABEL_52;
      }
      sub_23AA8A05C(v159, (uint64_t *)&unk_2542DDFB0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v138 = swift_allocObject();
      v95 = v138;
      *(_OWORD *)(v138 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v138 + 32) = 0x2000;
      *(_QWORD *)(v138 + 40) = v179;
      *(_BYTE *)(v138 + 48) = v180;
LABEL_189:
      *(_BYTE *)(v138 + 49) = 0;
      *(_BYTE *)(v138 + 72) = 0;
      return (void *)v95;
    case 30:
      v99 = (uint64_t)v342;
      v162 = v328;
      sub_23AA8EFC8((uint64_t)v342, v328, (uint64_t *)&unk_2542DDFB0);
      v136 = *(void **)v162;
      v134 = *(unsigned __int8 *)(v162 + 8);
      if ((*(_BYTE *)(v162 + 9) & 1) != 0)
        goto LABEL_63;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v157 = swift_allocObject();
      v95 = v157;
      *(_OWORD *)(v157 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v157 + 32) = 0x4000;
      *(_QWORD *)(v157 + 40) = v136;
      *(_BYTE *)(v157 + 48) = v134;
      *(_BYTE *)(v157 + 49) = 0;
      *(_QWORD *)(v157 + 56) = 0;
      *(_QWORD *)(v157 + 64) = 0;
      v158 = 1;
      goto LABEL_59;
    case 32:
      v99 = (uint64_t)v342;
      v163 = v325;
      sub_23AA8EFC8((uint64_t)v342, v325, (uint64_t *)&unk_2542DDFB0);
      v136 = *(void **)v163;
      v134 = *(unsigned __int8 *)(v163 + 8);
      if ((*(_BYTE *)(v163 + 9) & 1) != 0)
        goto LABEL_63;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v157 = swift_allocObject();
      v95 = v157;
      *(_OWORD *)(v157 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v157 + 32) = 8;
      *(_QWORD *)(v157 + 40) = v136;
      *(_BYTE *)(v157 + 48) = v134;
      *(_BYTE *)(v157 + 49) = 0;
      v158 = 3;
      goto LABEL_59;
    case 33:
      v99 = (uint64_t)v342;
      sub_23AA8EFC8((uint64_t)v342, (uint64_t)v71, (uint64_t *)&unk_2542DDFB0);
      v136 = *(void **)v71;
      v134 = v71[8];
      if ((v71[9] & 1) != 0)
        goto LABEL_63;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v157 = swift_allocObject();
      v95 = v157;
      *(_OWORD *)(v157 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v157 + 32) = 1024;
      *(_QWORD *)(v157 + 40) = v136;
      *(_BYTE *)(v157 + 48) = v134;
      *(_BYTE *)(v157 + 49) = 0;
      v158 = 6;
      goto LABEL_59;
    case 34:
      v99 = (uint64_t)v342;
      v164 = v327;
      sub_23AA8EFC8((uint64_t)v342, v327, (uint64_t *)&unk_2542DDFB0);
      v136 = *(void **)v164;
      v134 = *(unsigned __int8 *)(v164 + 8);
      if ((*(_BYTE *)(v164 + 9) & 1) != 0)
        goto LABEL_63;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
      v151 = swift_allocObject();
      v95 = v151;
      *(_OWORD *)(v151 + 16) = xmmword_23B1CA760;
      v152 = 0x80000;
      goto LABEL_93;
    case 38:
      v99 = (uint64_t)v342;
      v165 = v329;
      sub_23AA8EFC8((uint64_t)v342, v329, (uint64_t *)&unk_2542DDFB0);
      v136 = *(void **)v165;
      v134 = *(unsigned __int8 *)(v165 + 8);
      if ((*(_BYTE *)(v165 + 9) & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E6160);
        v151 = swift_allocObject();
        v95 = v151;
        *(_OWORD *)(v151 + 16) = xmmword_23B1CA760;
        v152 = 1024;
LABEL_93:
        *(_QWORD *)(v151 + 32) = v152;
        *(_QWORD *)(v151 + 40) = v136;
        *(_BYTE *)(v151 + 48) = v134;
        *(_BYTE *)(v151 + 49) = 0;
        *(_BYTE *)(v151 + 72) = 0;
LABEL_94:
        sub_23AA8A05C(v99, (uint64_t *)&unk_2542DDFB0);
        return (void *)v95;
      }
LABEL_63:
      v135 = v136;
LABEL_64:
      v166 = v134;
LABEL_65:
      v167 = 1;
LABEL_66:
      sub_23AA862DC(v135, v166, v167);
LABEL_67:
      v168 = (uint64_t)v342;
      goto LABEL_68;
    default:
      goto LABEL_67;
  }
}

void *sub_23AE01A68(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  id *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  char *v86;
  int EnumCaseMultiPayload;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  unsigned int v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  uint64_t v139;
  _BYTE *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  id v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  id v168;
  unint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  uint64_t v199;
  id v200;
  unint64_t v201;
  unint64_t v202;
  uint64_t v203;
  id v204;
  unint64_t v205;
  unint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  int64_t v212;
  id v213;
  uint64_t v214;
  uint64_t *v215;
  uint64_t v216;
  _BYTE *v217;
  _BYTE *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char v223;
  uint64_t v224;
  void *v225;
  id v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unsigned int (*v236)(uint64_t, uint64_t, uint64_t);
  uint64_t *v237;
  uint64_t v238;
  uint64_t v239;
  BOOL v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  unint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v264;
  uint64_t v265;
  void *v266;
  void *v267;
  id v268;
  void *v269;
  unint64_t v270;
  unint64_t v271;
  uint64_t v272;
  void *v273;
  void *v274;
  unsigned __int8 v275;
  char v276;
  id v277;
  id v278;
  id v279;
  uint64_t v280;
  uint64_t v281;
  int *v282;
  uint64_t *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  unint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  void **v296;
  void *v297;
  uint64_t v298;
  char v299;
  id v300;
  uint64_t v301;
  uint64_t *v302;
  void *v303;
  void *v304;
  uint64_t v305;
  uint64_t v306;
  void **v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  _QWORD *v327;
  uint64_t v328;
  _QWORD *v329;
  _BYTE *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t *v343;
  uint64_t *v344;
  uint64_t *v345;
  uint64_t *v346;
  uint64_t v347;
  char *v348;
  id v349;
  uint64_t *v350;
  unint64_t v351;
  void *v352;
  uint64_t v353;
  unint64_t v354;
  void *v355;
  uint64_t v356;
  uint64_t v357;
  void *v358;
  unsigned __int8 v359;
  void *v360;

  v316 = a2;
  LODWORD(v347) = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE638);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v311 = (uint64_t)&v306 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v315 = (uint64_t)&v306 - v5;
  v324 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v323 = *(_QWORD *)(v324 - 8);
  v6 = MEMORY[0x24BDAC7A8](v324);
  v312 = (uint64_t)&v306 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v313 = (uint64_t)&v306 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2542DE648);
  MEMORY[0x24BDAC7A8](v9);
  v310 = (uint64_t)&v306 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v309 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  v308 = *(_QWORD *)(v309 - 8);
  MEMORY[0x24BDAC7A8](v309);
  v307 = (void **)((char *)&v306 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v339 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v338 = *(_QWORD *)(v339 - 8);
  v12 = MEMORY[0x24BDAC7A8](v339);
  v322 = (uint64_t)&v306 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v314 = (uint64_t)&v306 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v321 = (uint64_t)&v306 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v325 = (uint64_t)&v306 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v335 = (uint64_t)&v306 - v20;
  v333 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v332 = *(_QWORD *)(v333 - 8);
  v21 = MEMORY[0x24BDAC7A8](v333);
  v317 = (uint64_t)&v306 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v334 = (uint64_t)&v306 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v320 = (uint64_t)&v306 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v319 = (uint64_t)&v306 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v318 = (uint64_t)&v306 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v326 = (uint64_t)&v306 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v340 = (uint64_t)&v306 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v336 = (uint64_t)&v306 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v346 = (uint64_t *)((char *)&v306 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = MEMORY[0x24BDAC7A8](v37);
  v345 = (uint64_t *)((char *)&v306 - v40);
  v41 = MEMORY[0x24BDAC7A8](v39);
  v344 = (uint64_t *)((char *)&v306 - v42);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v337 = (uint64_t)&v306 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v330 = (char *)&v306 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v343 = (uint64_t *)((char *)&v306 - v48);
  v49 = MEMORY[0x24BDAC7A8](v47);
  v329 = (uint64_t *)((char *)&v306 - v50);
  v51 = MEMORY[0x24BDAC7A8](v49);
  v342 = (uint64_t)&v306 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v331 = (uint64_t)&v306 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v327 = (uint64_t *)((char *)&v306 - v56);
  v57 = MEMORY[0x24BDAC7A8](v55);
  v341 = (uint64_t)&v306 - v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v61 = (char *)&v306 - v60;
  v62 = MEMORY[0x24BDAC7A8](v59);
  v64 = (char *)&v306 - v63;
  v65 = MEMORY[0x24BDAC7A8](v62);
  v328 = (uint64_t)&v306 - v66;
  v67 = MEMORY[0x24BDAC7A8](v65);
  v69 = (char *)&v306 - v68;
  v70 = MEMORY[0x24BDAC7A8](v67);
  v72 = (id *)((char *)&v306 - v71);
  v73 = MEMORY[0x24BDAC7A8](v70);
  v75 = (char *)&v306 - v74;
  v76 = MEMORY[0x24BDAC7A8](v73);
  v78 = (char *)&v306 - v77;
  v79 = MEMORY[0x24BDAC7A8](v76);
  v81 = (char *)&v306 - v80;
  v82 = MEMORY[0x24BDAC7A8](v79);
  v84 = (uint64_t *)((char *)&v306 - v83);
  MEMORY[0x24BDAC7A8](v82);
  v86 = (char *)&v306 - v85;
  sub_23AA8EFC8((uint64_t)v348, (uint64_t)&v306 - v85, &qword_2542DDFC0);
  v348 = v86;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v88 = v347;
  switch(EnumCaseMultiPayload)
  {
    case 0:
      v89 = (uint64_t)v348;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v84, &qword_2542DDFC0);
      v90 = *v84;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v91 + 32) = 2;
      *(_QWORD *)(v91 + 40) = v90;
      *(_WORD *)(v91 + 48) = 0;
      *(_QWORD *)(v91 + 56) = 0;
      *(_QWORD *)(v91 + 64) = 0;
      *(_BYTE *)(v91 + 72) = 1;
      v92 = v89;
      goto LABEL_15;
    case 2:
      v93 = (uint64_t)v348;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v81, &qword_2542DDFC0);
      v94 = *(id *)v81;
      v95 = v81[8];
      if ((v81[9] & 1) == 0)
        goto LABEL_168;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v91 + 32) = 2;
      *(_QWORD *)(v91 + 40) = v94;
      *(_BYTE *)(v91 + 48) = v95;
      *(_BYTE *)(v91 + 49) = 1;
      *(_QWORD *)(v91 + 56) = 0;
      *(_QWORD *)(v91 + 64) = 0;
      *(_BYTE *)(v91 + 72) = 2;
      goto LABEL_48;
    case 4:
      v93 = (uint64_t)v348;
      v96 = v328;
      sub_23AA8EFC8((uint64_t)v348, v328, &qword_2542DDFC0);
      v97 = *(_QWORD *)(v96 + 16);
      v98 = *(_BYTE *)(v96 + 24);
      if ((*(_BYTE *)(v96 + 25) & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
        v91 = swift_allocObject();
        *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v91 + 32) = 16;
        *(_QWORD *)(v91 + 40) = v97;
        *(_BYTE *)(v91 + 48) = v98;
        *(_BYTE *)(v91 + 49) = 1;
        *(_BYTE *)(v91 + 72) = 0;
        sub_23AB7C6B4(*(id *)v96, *(unsigned __int8 *)(v96 + 8), *(_BYTE *)(v96 + 9));
        goto LABEL_48;
      }
      sub_23AB7C6B4(*(id *)(v96 + 16), *(unsigned __int8 *)(v96 + 24), 0);
      v162 = *(id *)v96;
      v163 = *(_BYTE *)(v96 + 9);
      v164 = *(unsigned __int8 *)(v96 + 8);
      goto LABEL_170;
    case 5:
      v99 = (uint64_t)v348;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v75, &qword_2542DDFC0);
      v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
      v101 = (uint64_t)&v75[*(int *)(v100 + 48)];
      v102 = *(_QWORD *)&v75[*(int *)(v100 + 64)];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v332 + 48))(v75, 1, v333) == 1)
      {
        sub_23AA8A05C(v101, &qword_2542E4770);
        sub_23AA8A05C((uint64_t)v75, &qword_2542E4770);
        goto LABEL_171;
      }
      v165 = v317;
      sub_23AA724E8((uint64_t)v75, v317, (uint64_t *)&unk_2542E4760);
      if ((v102 & 2) != 0)
      {
        v200 = *(id *)(v165 + 8);
        v91 = (uint64_t)sub_23AF98E10(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v202 = *(_QWORD *)(v91 + 16);
        v201 = *(_QWORD *)(v91 + 24);
        if (v202 >= v201 >> 1)
          v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v201 > 1), v202 + 1, 1, (_QWORD *)v91);
        *(_QWORD *)(v91 + 16) = v202 + 1;
        v203 = v91 + 48 * v202;
        *(_QWORD *)(v203 + 32) = 4;
        *(_QWORD *)(v203 + 40) = v200;
        *(_QWORD *)(v203 + 56) = 0;
        *(_QWORD *)(v203 + 64) = 0;
        *(_QWORD *)(v203 + 48) = 0;
        *(_BYTE *)(v203 + 72) = 0;
      }
      else
      {
        v91 = MEMORY[0x24BEE4AF8];
      }
      if ((v102 & 3) != 0)
      {
        v204 = *(id *)v165;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v91 = (uint64_t)sub_23AF98E10(0, *(_QWORD *)(v91 + 16) + 1, 1, (_QWORD *)v91);
        v206 = *(_QWORD *)(v91 + 16);
        v205 = *(_QWORD *)(v91 + 24);
        v207 = v206 + 1;
        if (v206 >= v205 >> 1)
          v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v205 > 1), v206 + 1, 1, (_QWORD *)v91);
        *(_QWORD *)(v91 + 16) = v207;
        v208 = v91 + 48 * v206;
        *(_QWORD *)(v208 + 32) = 1024;
        *(_QWORD *)(v208 + 40) = v204;
        *(_QWORD *)(v208 + 56) = 0;
        *(_QWORD *)(v208 + 64) = 0;
        *(_QWORD *)(v208 + 48) = 0;
        *(_BYTE *)(v208 + 72) = 4;
        v209 = *(_QWORD *)(v165 + 80);
        v210 = *(_QWORD *)(v165 + 88);
        v211 = *(_QWORD *)(v91 + 24);
        v212 = v206 + 2;
        v213 = *(id *)(v165 + 8);
        swift_bridgeObjectRetain();
        if (v207 >= v211 >> 1)
          v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v211 > 1), v212, 1, (_QWORD *)v91);
        *(_QWORD *)(v91 + 16) = v212;
        v214 = v91 + 48 * v207;
        *(_QWORD *)(v214 + 32) = 1024;
        *(_QWORD *)(v214 + 40) = v213;
        *(_QWORD *)(v214 + 48) = 0;
        *(_QWORD *)(v214 + 56) = v209;
        *(_QWORD *)(v214 + 64) = v210;
        *(_BYTE *)(v214 + 72) = 1;
      }
      sub_23AA8A05C(v165, (uint64_t *)&unk_2542E4760);
      v215 = &qword_2542E4770;
      v216 = v101;
      goto LABEL_164;
    case 6:
      v99 = (uint64_t)v348;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v78, &qword_2542DDFC0);
      v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
      v104 = (uint64_t)&v78[*(int *)(v103 + 48)];
      v105 = *(_QWORD *)&v78[*(int *)(v103 + 64)];
      v106 = v336;
      sub_23AA724E8((uint64_t)v78, v336, (uint64_t *)&unk_2542E4750);
      v107 = v340;
      sub_23AA724E8(v104, v340, (uint64_t *)&unk_2542E4750);
      if ((v105 & 3) != 0)
      {
        v108 = v326;
        sub_23AA8EFC8(v106, v326, (uint64_t *)&unk_2542E4750);
        v109 = v338;
        v110 = v339;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v338 + 48))(v108, 1, v339) == 1)
        {
          sub_23AA8A05C(v108, (uint64_t *)&unk_2542E4750);
          v91 = MEMORY[0x24BEE4AF8];
          goto LABEL_133;
        }
        v181 = v325;
        sub_23AA724E8(v108, v325, (uint64_t *)&unk_2542E6B00);
        v182 = *(int *)(v110 + 48);
        v183 = v181;
        if (*(_BYTE *)(v181 + v182) == 1)
        {
          v184 = *(_QWORD *)v181;
          v185 = *(unsigned __int8 *)(v181 + 8);
          v91 = (uint64_t)sub_23AF98E10(0, 1, 1, MEMORY[0x24BEE4AF8]);
          v187 = *(_QWORD *)(v91 + 16);
          v186 = *(_QWORD *)(v91 + 24);
          v188 = v187 + 1;
          if (v187 >= v186 >> 1)
            v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v186 > 1), v187 + 1, 1, (_QWORD *)v91);
          *(_QWORD *)(v91 + 16) = v188;
          v189 = v91 + 48 * v187;
          *(_QWORD *)(v189 + 32) = 2;
          *(_QWORD *)(v189 + 40) = v184;
          *(_QWORD *)(v189 + 56) = 0;
          *(_QWORD *)(v189 + 64) = 0;
          *(_QWORD *)(v189 + 48) = v185 | 0x100;
          *(_BYTE *)(v189 + 72) = 2;
          if ((v88 & 1) != 0)
          {
            v190 = *(_QWORD *)(v183 + 16);
            v191 = *(unsigned __int8 *)(v183 + 24);
            v192 = *(_QWORD *)(v91 + 24);
            if (v188 >= v192 >> 1)
              v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v192 > 1), v187 + 2, 1, (_QWORD *)v91);
            *(_QWORD *)(v91 + 16) = v187 + 2;
            v193 = v91 + 48 * v188;
            *(_QWORD *)(v193 + 32) = 2;
            *(_QWORD *)(v193 + 40) = v190;
            *(_QWORD *)(v193 + 48) = v191 | 0x100;
            *(_QWORD *)(v193 + 56) = 0;
            *(_QWORD *)(v193 + 64) = 0;
            *(_BYTE *)(v193 + 72) = 5;
          }
        }
        else
        {
          v91 = MEMORY[0x24BEE4AF8];
        }
        v227 = *(_QWORD *)(v183 + 16);
        v228 = *(unsigned __int8 *)(v183 + 24);
        v230 = *(_QWORD *)(v183 + 128);
        v229 = *(_QWORD *)(v183 + 136);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v91 = (uint64_t)sub_23AF98E10(0, *(_QWORD *)(v91 + 16) + 1, 1, (_QWORD *)v91);
        v232 = *(_QWORD *)(v91 + 16);
        v231 = *(_QWORD *)(v91 + 24);
        if (v232 >= v231 >> 1)
          v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v231 > 1), v232 + 1, 1, (_QWORD *)v91);
        *(_QWORD *)(v91 + 16) = v232 + 1;
        v233 = v91 + 48 * v232;
        *(_QWORD *)(v233 + 32) = 1024;
        *(_QWORD *)(v233 + 40) = v227;
        *(_QWORD *)(v233 + 48) = v228 | 0x100;
        *(_QWORD *)(v233 + 56) = v230;
        *(_QWORD *)(v233 + 64) = v229;
        *(_BYTE *)(v233 + 72) = 2;
        sub_23AA8A05C(v325, (uint64_t *)&unk_2542E6B00);
        v107 = v340;
      }
      else
      {
        v91 = MEMORY[0x24BEE4AF8];
      }
      v110 = v339;
      v109 = v338;
LABEL_133:
      if ((v105 & 2) != 0)
      {
        v235 = v318;
        sub_23AA8EFC8(v107, v318, (uint64_t *)&unk_2542E4750);
        v236 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48);
        if (v236(v235, 1, v110) == 1)
        {
          v237 = (uint64_t *)&unk_2542E4750;
          v238 = v235;
        }
        else
        {
          v248 = v321;
          sub_23AA724E8(v235, v321, (uint64_t *)&unk_2542E6B00);
          v249 = *(_QWORD *)(v248 + 16);
          v250 = *(unsigned __int8 *)(v248 + 24);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v91 = (uint64_t)sub_23AF98E10(0, *(_QWORD *)(v91 + 16) + 1, 1, (_QWORD *)v91);
          v252 = *(_QWORD *)(v91 + 16);
          v251 = *(_QWORD *)(v91 + 24);
          if (v252 >= v251 >> 1)
            v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v251 > 1), v252 + 1, 1, (_QWORD *)v91);
          *(_QWORD *)(v91 + 16) = v252 + 1;
          v253 = v91 + 48 * v252;
          *(_QWORD *)(v253 + 32) = 12;
          *(_QWORD *)(v253 + 40) = v249;
          *(_QWORD *)(v253 + 56) = 0;
          *(_QWORD *)(v253 + 64) = 0;
          *(_QWORD *)(v253 + 48) = v250 | 0x100;
          *(_BYTE *)(v253 + 72) = 0;
          v237 = (uint64_t *)&unk_2542E6B00;
          v238 = v321;
        }
        sub_23AA8A05C(v238, v237);
        v254 = v320;
        sub_23AA8EFC8(v106, v320, (uint64_t *)&unk_2542E4750);
        if (v236(v254, 1, v110) == 1)
        {
          sub_23AA8A05C(v107, (uint64_t *)&unk_2542E4750);
          v107 = v106;
          v106 = v254;
          goto LABEL_163;
        }
        v255 = v254;
        v256 = v322;
        sub_23AA724E8(v255, v322, (uint64_t *)&unk_2542E6B00);
        v257 = *(_QWORD *)(v256 + 16);
        v258 = *(unsigned __int8 *)(v256 + 24);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v91 = (uint64_t)sub_23AF98E10(0, *(_QWORD *)(v91 + 16) + 1, 1, (_QWORD *)v91);
        v260 = *(_QWORD *)(v91 + 16);
        v259 = *(_QWORD *)(v91 + 24);
        if (v260 >= v259 >> 1)
          v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v259 > 1), v260 + 1, 1, (_QWORD *)v91);
        *(_QWORD *)(v91 + 16) = v260 + 1;
        v261 = v91 + 48 * v260;
        *(_QWORD *)(v261 + 32) = 8;
        *(_QWORD *)(v261 + 40) = v257;
        *(_QWORD *)(v261 + 56) = 0;
        *(_QWORD *)(v261 + 64) = 0;
        *(_QWORD *)(v261 + 48) = v258 | 0x100;
        *(_BYTE *)(v261 + 72) = 0;
        v247 = v322;
      }
      else
      {
        v234 = v319;
        sub_23AA8EFC8(v107, v319, (uint64_t *)&unk_2542E4750);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v234, 1, v110) == 1)
        {
          sub_23AA8A05C(v107, (uint64_t *)&unk_2542E4750);
          v107 = v106;
          v106 = v234;
          goto LABEL_163;
        }
        v239 = v314;
        sub_23AA724E8(v234, v314, (uint64_t *)&unk_2542E6B00);
        v240 = (v105 & 0x4000) != 0 && *(_BYTE *)(v239 + *(int *)(v110 + 48)) == 1;
        v241 = v105 & 0xFFFFFFFFFFFEB7FFLL;
        if (!v240)
          v241 = v105;
        if ((v241 & 0xFFFFFFFFFFFEF7FFLL) != 0)
        {
          v242 = *(_QWORD *)(v239 + 16);
          v243 = *(unsigned __int8 *)(v239 + 24);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v91 = (uint64_t)sub_23AF98E10(0, *(_QWORD *)(v91 + 16) + 1, 1, (_QWORD *)v91);
          v245 = *(_QWORD *)(v91 + 16);
          v244 = *(_QWORD *)(v91 + 24);
          if (v245 >= v244 >> 1)
            v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v244 > 1), v245 + 1, 1, (_QWORD *)v91);
          *(_QWORD *)(v91 + 16) = v245 + 1;
          v246 = v91 + 48 * v245;
          *(_QWORD *)(v246 + 32) = 8;
          *(_QWORD *)(v246 + 40) = v242;
          *(_QWORD *)(v246 + 56) = 0;
          *(_QWORD *)(v246 + 64) = 0;
          *(_QWORD *)(v246 + 48) = v243 | 0x100;
          *(_BYTE *)(v246 + 72) = 0;
        }
        v247 = v239;
      }
      sub_23AA8A05C(v247, (uint64_t *)&unk_2542E6B00);
LABEL_163:
      sub_23AA8A05C(v107, (uint64_t *)&unk_2542E4750);
      v216 = v106;
      v215 = (uint64_t *)&unk_2542E4750;
LABEL_164:
      sub_23AA8A05C(v216, v215);
      sub_23AA8A05C(v99, &qword_2542DDFC0);
      return (void *)v91;
    case 7:
      v111 = (uint64_t)v348;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v84, &qword_2542DDFC0);
      v112 = (uint64_t *)&unk_2542E4760;
      v113 = (uint64_t)v84;
      v114 = v334;
      sub_23AA724E8(v113, v334, (uint64_t *)&unk_2542E4760);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
      v115 = *(void **)v114;
      *(_QWORD *)(v91 + 32) = 2;
      *(_QWORD *)(v91 + 40) = v115;
      *(_WORD *)(v91 + 48) = 0;
      *(_QWORD *)(v91 + 56) = 0;
      *(_QWORD *)(v91 + 64) = 0;
      *(_BYTE *)(v91 + 72) = 1;
      v116 = v115;
      goto LABEL_14;
    case 8:
      v111 = (uint64_t)v348;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v84, &qword_2542DDFC0);
      v112 = (uint64_t *)&unk_2542E6B00;
      v117 = (uint64_t)v84;
      v114 = v335;
      sub_23AA724E8(v117, v335, (uint64_t *)&unk_2542E6B00);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_23B1D2330;
      v118 = *(_QWORD *)(v114 + 16);
      v119 = *(_BYTE *)(v114 + 24);
      *(_QWORD *)(v91 + 32) = 1024;
      *(_QWORD *)(v91 + 40) = v118;
      *(_BYTE *)(v91 + 48) = v119;
      *(_BYTE *)(v91 + 49) = 1;
      v120 = *(_QWORD *)(v114 + 136);
      *(_QWORD *)(v91 + 56) = *(_QWORD *)(v114 + 128);
      *(_QWORD *)(v91 + 64) = v120;
      *(_BYTE *)(v91 + 72) = 2;
      *(_QWORD *)(v91 + 80) = 8;
      *(_QWORD *)(v91 + 88) = v118;
      *(_BYTE *)(v91 + 96) = v119;
      *(_BYTE *)(v91 + 97) = 1;
      *(_BYTE *)(v91 + 120) = 0;
      swift_bridgeObjectRetain();
LABEL_14:
      sub_23AA8A05C(v114, v112);
      v92 = v111;
LABEL_15:
      sub_23AA8A05C(v92, &qword_2542DDFC0);
      return (void *)v91;
    case 10:
      v121 = (uint64_t)v348;
      v122 = v337;
      sub_23AA8EFC8((uint64_t)v348, v337, &qword_2542DDFC0);
      v123 = *(unsigned __int8 *)(v122 + 26);
      if ((*(_BYTE *)(v122 + 9) & 1) == 0)
      {
        v166 = *(void **)v122;
        v167 = *(unsigned __int8 *)(v122 + 8);
        v91 = MEMORY[0x24BEE4AF8];
        if ((v88 & 1) != 0 && *(_BYTE *)(v122 + 27) == 2)
        {
          v168 = v166;
          v91 = (uint64_t)sub_23AF98E10(0, 1, 1, MEMORY[0x24BEE4AF8]);
          v170 = *(_QWORD *)(v91 + 16);
          v169 = *(_QWORD *)(v91 + 24);
          if (v170 >= v169 >> 1)
            v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v169 > 1), v170 + 1, 1, (_QWORD *)v91);
          *(_QWORD *)(v91 + 16) = v170 + 1;
          v171 = v91 + 48 * v170;
          *(_QWORD *)(v171 + 32) = 2;
          *(_QWORD *)(v171 + 40) = v166;
          *(_QWORD *)(v171 + 56) = 0;
          *(_QWORD *)(v171 + 64) = 0;
          *(_QWORD *)(v171 + 48) = v167;
          *(_BYTE *)(v171 + 72) = 1;
        }
        if (v123 == 1)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v91 = (uint64_t)sub_23AF98E10(0, *(_QWORD *)(v91 + 16) + 1, 1, (_QWORD *)v91);
          v173 = *(_QWORD *)(v91 + 16);
          v172 = *(_QWORD *)(v91 + 24);
          if (v173 >= v172 >> 1)
            v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v172 > 1), v173 + 1, 1, (_QWORD *)v91);
          *(_QWORD *)(v91 + 16) = v173 + 1;
          v174 = v91 + 48 * v173;
          *(_QWORD *)(v174 + 32) = 0x100000;
          *(_QWORD *)(v174 + 40) = v166;
          *(_QWORD *)(v174 + 56) = 0;
          *(_QWORD *)(v174 + 64) = 0;
          *(_QWORD *)(v174 + 48) = v167;
          *(_BYTE *)(v174 + 72) = 1;
        }
        else
        {
          sub_23AB7C6B4(v166, v167, 0);
        }
        sub_23ADF1CB4(*(void **)(v122 + 16), *(unsigned __int16 *)(v122 + 24));
        sub_23AA8A05C(v121, &qword_2542DDFC0);
        return (void *)v91;
      }
      v124 = *(unsigned __int16 *)(v122 + 24);
      if (v124 >> 8 > 0xFE || (v124 & 0x100) != 0)
        goto LABEL_171;
      v125 = *(_QWORD *)(v337 + 16);
      if (v123 != 1)
      {
        sub_23ADF1CB4(*(void **)(v337 + 16), *(unsigned __int16 *)(v122 + 24));
        goto LABEL_171;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v126 = swift_allocObject();
      v91 = v126;
      *(_OWORD *)(v126 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v126 + 32) = 0x100000;
      *(_QWORD *)(v126 + 40) = v125;
LABEL_58:
      *(_BYTE *)(v126 + 48) = v124;
      *(_BYTE *)(v126 + 49) = 0;
      *(_QWORD *)(v126 + 56) = 0;
      *(_QWORD *)(v126 + 64) = 0;
      v147 = 1;
LABEL_63:
      *(_BYTE *)(v126 + 72) = v147;
      goto LABEL_70;
    case 12:
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v72, &qword_2542DDFC0);

      if ((*((_BYTE *)v72 + 9) & 1) != 0)
        goto LABEL_171;
      v94 = *v72;
      v95 = *((unsigned __int8 *)v72 + 8);
      v127 = *((unsigned __int8 *)v72 + 10);
      if ((v127 - 1) < 2)
      {
        sub_23AA8A05C((uint64_t)v348, &qword_2542DDFC0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
        v91 = swift_allocObject();
        *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v91 + 32) = 1024;
        *(_QWORD *)(v91 + 40) = v94;
        *(_BYTE *)(v91 + 48) = v95;
        *(_BYTE *)(v91 + 49) = 0;
        *(_BYTE *)(v91 + 72) = 6;
        return (void *)v91;
      }
      if (!*((_BYTE *)v72 + 10) || v127 == 23)
      {
        sub_23AA8A05C((uint64_t)v348, &qword_2542DDFC0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
        v91 = swift_allocObject();
        *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v91 + 32) = 4;
        *(_QWORD *)(v91 + 40) = v94;
        *(_BYTE *)(v91 + 48) = v95;
        *(_BYTE *)(v91 + 49) = 0;
        *(_BYTE *)(v91 + 72) = 3;
        return (void *)v91;
      }
      goto LABEL_168;
    case 13:
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v64, &qword_2542DDFC0);
      if ((v64[9] & 1) != 0)
        goto LABEL_171;
      v94 = *(id *)v64;
      v95 = v64[8];
      v128 = v64[10];
      v93 = (uint64_t)v348;
      if (v128 > 0x17)
        goto LABEL_168;
      if (((1 << v128) & 0x80104B) != 0)
      {
        sub_23AA8A05C((uint64_t)v348, &qword_2542DDFC0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
        v129 = swift_allocObject();
        v91 = v129;
        *(_OWORD *)(v129 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v129 + 32) = 262400;
        *(_QWORD *)(v129 + 40) = v94;
        *(_BYTE *)(v129 + 48) = v95;
        *(_BYTE *)(v129 + 49) = 0;
        goto LABEL_187;
      }
      if (v128 == 2)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
        v144 = swift_allocObject();
        v91 = v144;
        *(_OWORD *)(v144 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v144 + 32) = 262912;
        *(_QWORD *)(v144 + 40) = v94;
        *(_BYTE *)(v144 + 48) = v95;
        *(_BYTE *)(v144 + 49) = 0;
        goto LABEL_47;
      }
LABEL_168:
      v162 = v94;
      goto LABEL_169;
    case 20:
      v130 = (uint64_t)v348;
      v131 = v329;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v329, &qword_2542DDFC0);
      if ((*v131 & 0x8000000000000000) == 0)
        goto LABEL_31;
      goto LABEL_90;
    case 21:
      v130 = (uint64_t)v348;
      v132 = v327;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v327, &qword_2542DDFC0);
      if ((*v132 & 0x8000000000000000) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EF0);
        v133 = swift_dynamicCastClass();
        if (v133)
        {
          v134 = v133;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
          v135 = swift_allocObject();
          v91 = v135;
          *(_OWORD *)(v135 + 16) = xmmword_23B1CA760;
          v136 = 0x4000;
LABEL_35:
          v137 = *(void **)(v134 + 136);
          *(_QWORD *)(v135 + 32) = v136;
          *(_QWORD *)(v135 + 40) = v137;
          *(_WORD *)(v135 + 48) = 0;
          *(_BYTE *)(v135 + 72) = 0;
LABEL_36:
          v138 = v137;
          swift_release();
LABEL_37:
          sub_23AA8A05C(v130, &qword_2542DDFC0);
          return (void *)v91;
        }
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E68A0);
        v217 = (_BYTE *)swift_dynamicCastClass();
        if (v217)
        {
          if ((v88 & 1) != 0)
          {
            v218 = v217;
            if (v217[104] == 3)
            {
              v219 = (uint64_t)&v217[*(_QWORD *)(*(_QWORD *)v217 + 616)];
              swift_beginAccess();
              v220 = v310;
              sub_23AA8EFC8(v219, v310, qword_2542DE648);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v308 + 48))(v220, 1, v309) != 1)
              {
                v295 = v220;
                v296 = v307;
                sub_23AA724E8(v295, (uint64_t)v307, (uint64_t *)&unk_2542E1E00);
                __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
                v91 = swift_allocObject();
                *(_OWORD *)(v91 + 16) = xmmword_23B1D2330;
                v297 = *v296;
                *(_QWORD *)(v91 + 32) = 8;
                *(_QWORD *)(v91 + 40) = v297;
                *(_WORD *)(v91 + 48) = 0;
                *(_BYTE *)(v91 + 72) = 0;
                v298 = *((_QWORD *)v218 + 17);
                v299 = v218[144];
                *(_QWORD *)(v91 + 80) = 8;
                *(_QWORD *)(v91 + 88) = v298;
                *(_BYTE *)(v91 + 96) = v299;
                *(_BYTE *)(v91 + 97) = 1;
                *(_BYTE *)(v91 + 120) = 3;
                v300 = v297;
                swift_release();
                sub_23AA8A05C((uint64_t)v296, (uint64_t *)&unk_2542E1E00);
                goto LABEL_37;
              }
              swift_retain();
              sub_23AA8A05C(v220, qword_2542DE648);
              goto LABEL_181;
            }
          }
          goto LABEL_180;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E69B0);
        v264 = swift_dynamicCastClass();
        if (v264)
        {
          v265 = v264;
          if (*(_BYTE *)(v264 + 104) != 3)
          {
LABEL_180:
            swift_retain();
            goto LABEL_181;
          }
          v266 = *(void **)(v264 + 96);
          v360 = *(void **)(v264 + 88);
          v267 = v360;
          swift_retain();
          sub_23AAAE478(v267, v266, 3);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0960);
          if ((swift_dynamicCast() & 1) == 0)
          {
LABEL_181:
            swift_release_n();
            v262 = v130;
            goto LABEL_172;
          }
          v268 = v349;
          v270 = v351;
          v269 = v352;
          v272 = v353;
          v271 = v354;
          v273 = v355;
          v274 = v358;
          v275 = v359;
          v276 = *(_BYTE *)(v265 + 168);
          v347 = v356;
          if ((v276 & 3) != 0)
          {
            v345 = (uint64_t *)v357;
            v346 = v350;
            if (v359 == 1)
            {
              v277 = v349;
              swift_bridgeObjectRetain();
              v278 = v269;
              sub_23ACFC26C(v272, v271);
              v279 = v273;
              swift_bridgeObjectRelease();
              sub_23AB22AE4(v272, v271);

              __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
              v91 = swift_allocObject();
              *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
              *(_QWORD *)(v91 + 32) = 1024;
              *(_QWORD *)(v91 + 40) = v268;
              *(_WORD *)(v91 + 48) = 0;
              *(_BYTE *)(v91 + 72) = 0;
              swift_release_n();
              sub_23AEB0840(v268, v346, v270, v269, v272, v271, v273, v347, (uint64_t)v345, v274, 1u);
LABEL_70:
              sub_23AA8A05C((uint64_t)v348, &qword_2542DDFC0);
              return (void *)v91;
            }
            swift_release_n();
            sub_23AEB0840(v268, v346, v270, v269, v272, v271, v273, v347, (uint64_t)v345, v274, v275);
          }
          else
          {
            v302 = v350;
            v303 = v355;
            v304 = v352;
            v305 = v357;
            swift_release_n();
            sub_23AEB0840(v268, v302, v270, v304, v272, v271, v303, v347, v305, v274, v275);
          }
LABEL_171:
          v262 = (uint64_t)v348;
LABEL_172:
          sub_23AA8A05C(v262, &qword_2542DDFC0);
          return (void *)MEMORY[0x24BEE4AF8];
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EF8);
        v293 = swift_dynamicCastClass();
        if (v293)
        {
          v294 = v293;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
          v91 = swift_allocObject();
          *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
          v137 = *(void **)(v294 + 136);
          *(_QWORD *)(v91 + 32) = 1024;
          *(_QWORD *)(v91 + 40) = v137;
          *(_WORD *)(v91 + 48) = 0;
          *(_BYTE *)(v91 + 72) = 6;
          goto LABEL_36;
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F00);
        v301 = swift_dynamicCastClass();
        if (v301)
        {
          v134 = v301;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
          v135 = swift_allocObject();
          v91 = v135;
          *(_OWORD *)(v135 + 16) = xmmword_23B1CA760;
          v136 = 256;
          goto LABEL_35;
        }
LABEL_31:
        swift_release();
        goto LABEL_171;
      }
LABEL_90:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5ED0);
      v176 = (_QWORD *)swift_dynamicCastClass();
      if (v176)
      {
        sub_23AA8A05C(v130, &qword_2542DDFC0);
        v177 = (uint64_t)v176 + *(_QWORD *)(*v176 + 616);
        swift_beginAccess();
        v178 = v315;
        sub_23AA8EFC8(v177, v315, (uint64_t *)&unk_2542DE638);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v323 + 48))(v178, 1, v324) == 1)
        {
          sub_23AA8A05C(v178, (uint64_t *)&unk_2542DE638);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
          v91 = swift_allocObject();
          *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
          v179 = (void *)v176[17];
          *(_QWORD *)(v91 + 32) = 8;
          *(_QWORD *)(v91 + 40) = v179;
          v180 = v179;
          swift_release();
          *(_BYTE *)(v91 + 49) = 0;
          *(_BYTE *)(v91 + 72) = 3;
        }
        else
        {
          v221 = v313;
          sub_23AA724E8(v178, v313, (uint64_t *)&unk_2542E1DF0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
          v91 = swift_allocObject();
          *(_OWORD *)(v91 + 16) = xmmword_23B1D3B90;
          v222 = *(_QWORD *)v221;
          v223 = *(_BYTE *)(v221 + 8);
          *(_QWORD *)(v91 + 32) = 1024;
          *(_QWORD *)(v91 + 40) = v222;
          *(_BYTE *)(v91 + 48) = v223;
          *(_BYTE *)(v91 + 49) = 1;
          v224 = *(_QWORD *)(v221 + 24);
          *(_QWORD *)(v91 + 56) = *(_QWORD *)(v221 + 16);
          *(_QWORD *)(v91 + 64) = v224;
          *(_BYTE *)(v91 + 72) = 2;
          *(_QWORD *)(v91 + 80) = 8;
          *(_QWORD *)(v91 + 88) = v222;
          *(_BYTE *)(v91 + 96) = v223;
          *(_BYTE *)(v91 + 97) = 1;
          *(_BYTE *)(v91 + 120) = 0;
          v225 = (void *)v176[17];
          *(_QWORD *)(v91 + 128) = 8;
          *(_QWORD *)(v91 + 136) = v225;
          v226 = v225;
          swift_bridgeObjectRetain();
          swift_release();
          *(_BYTE *)(v91 + 145) = 0;
          *(_BYTE *)(v91 + 168) = 3;
          sub_23AA8A05C(v221, (uint64_t *)&unk_2542E1DF0);
        }
        return (void *)v91;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5568);
      v194 = swift_dynamicCastClass();
      if (!v194)
        goto LABEL_31;
      sub_23AA8A05C(v130, &qword_2542DDFC0);
      swift_beginAccess();
      v195 = *(unsigned __int8 *)(v194 + 176);
      if (v195 == 255)
      {
        v91 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        v196 = *(_QWORD *)(v194 + 168);
        v91 = (uint64_t)sub_23AF98E10(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v198 = *(_QWORD *)(v91 + 16);
        v197 = *(_QWORD *)(v91 + 24);
        if (v198 >= v197 >> 1)
          v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v197 > 1), v198 + 1, 1, (_QWORD *)v91);
        *(_QWORD *)(v91 + 16) = v198 + 1;
        v199 = v91 + 48 * v198;
        *(_QWORD *)(v199 + 32) = 8;
        *(_QWORD *)(v199 + 40) = v196;
        *(_QWORD *)(v199 + 56) = 0;
        *(_QWORD *)(v199 + 64) = 0;
        *(_QWORD *)(v199 + 48) = v195 | 0x100;
        *(_BYTE *)(v199 + 72) = 3;
      }
      if ((*(_BYTE *)(v194 + 160) & 3) != 0)
      {
        v284 = v194 + *(_QWORD *)(*(_QWORD *)v194 + 624);
        swift_beginAccess();
        v93 = v311;
        sub_23AA8EFC8(v284, v311, (uint64_t *)&unk_2542DE638);
        swift_release();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v323 + 48))(v93, 1, v324) == 1)
        {
          v145 = (uint64_t *)&unk_2542DE638;
LABEL_49:
          sub_23AA8A05C(v93, v145);
        }
        else
        {
          v285 = v312;
          sub_23AA724E8(v93, v312, (uint64_t *)&unk_2542E1DF0);
          v286 = *(_QWORD *)v285;
          v287 = *(unsigned __int8 *)(v285 + 8);
          v289 = *(_QWORD *)(v285 + 16);
          v288 = *(_QWORD *)(v285 + 24);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v91 = (uint64_t)sub_23AF98E10(0, *(_QWORD *)(v91 + 16) + 1, 1, (_QWORD *)v91);
          v291 = *(_QWORD *)(v91 + 16);
          v290 = *(_QWORD *)(v91 + 24);
          if (v291 >= v290 >> 1)
            v91 = (uint64_t)sub_23AF98E10((_QWORD *)(v290 > 1), v291 + 1, 1, (_QWORD *)v91);
          *(_QWORD *)(v91 + 16) = v291 + 1;
          v292 = v91 + 48 * v291;
          *(_QWORD *)(v292 + 32) = 1024;
          *(_QWORD *)(v292 + 40) = v286;
          *(_QWORD *)(v292 + 48) = v287 | 0x100;
          *(_QWORD *)(v292 + 56) = v289;
          *(_QWORD *)(v292 + 64) = v288;
          *(_BYTE *)(v292 + 72) = 2;
          sub_23AA8A05C(v312, (uint64_t *)&unk_2542E1DF0);
        }
      }
      else
      {
        swift_release();
      }
      return (void *)v91;
    case 22:
      v139 = (uint64_t)v348;
      v140 = v330;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v330, &qword_2542DDFC0);
      if ((*v140 & 1) != 0)
      {
        sub_23AA8A05C(v139, &qword_2542DDFC0);
        if ((v316 & 0x4000) != 0)
          return &unk_250BDDC68;
        else
          return (void *)MEMORY[0x24BEE4AF8];
      }
      else
      {
        sub_23AA8A05C(v139, &qword_2542DDFC0);
        return &unk_250BDDC18;
      }
    case 24:
      v141 = v342;
      sub_23AA8EFC8((uint64_t)v348, v342, &qword_2542DDFC0);
      if ((*(_BYTE *)(v141 + 9) & 1) != 0)
        goto LABEL_171;
      v94 = *(id *)v342;
      v95 = *(unsigned __int8 *)(v342 + 8);
      if ((v88 & 1) != 0)
        goto LABEL_168;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v142 = swift_allocObject();
      v91 = v142;
      *(_OWORD *)(v142 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v142 + 32) = 0x4000;
      *(_QWORD *)(v142 + 40) = v94;
      goto LABEL_69;
    case 25:
      v93 = (uint64_t)v348;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v61, &qword_2542DDFC0);
      v143 = *(_QWORD *)v61;
      v95 = v61[8];
      if ((v61[9] & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
        v144 = swift_allocObject();
        v91 = v144;
        *(_OWORD *)(v144 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v144 + 32) = 4096;
        *(_QWORD *)(v144 + 40) = v143;
        *(_BYTE *)(v144 + 48) = v95;
        *(_BYTE *)(v144 + 49) = 1;
LABEL_47:
        *(_BYTE *)(v144 + 72) = 0;
LABEL_48:
        v145 = &qword_2542DDFC0;
        goto LABEL_49;
      }
      v162 = *(id *)v61;
LABEL_169:
      v164 = v95;
      v163 = 0;
LABEL_170:
      sub_23AB7C6B4(v162, v164, v163);
      goto LABEL_171;
    case 26:
      v146 = v341;
      sub_23AA8EFC8((uint64_t)v348, v341, &qword_2542DDFC0);
      if ((*(_BYTE *)(v146 + 9) & 1) != 0)
        goto LABEL_171;
      v94 = *(id *)v341;
      v95 = *(unsigned __int8 *)(v341 + 8);
      if ((v88 & 1) != 0)
        goto LABEL_168;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v126 = swift_allocObject();
      v91 = v126;
      *(_OWORD *)(v126 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v126 + 32) = 2;
      *(_QWORD *)(v126 + 40) = v94;
      *(_BYTE *)(v126 + 48) = v95;
      *(_BYTE *)(v126 + 49) = 0;
      v147 = 4;
      goto LABEL_63;
    case 27:
      v148 = (uint64_t)v348;
      v149 = v331;
      sub_23AA8EFC8((uint64_t)v348, v331, &qword_2542DDFC0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0FC0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v150 = (uint64_t *)&unk_2542E0FC0;
LABEL_55:
        sub_23AA8A05C(v149, v150);
        goto LABEL_171;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v280 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31B0);
          v281 = v149 + *(int *)(v280 + 48);

          v175 = *(_QWORD *)v149;
          goto LABEL_184;
        case 1u:
          v282 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5EE0);
          v281 = v149 + v282[12];
          v283 = (uint64_t *)(v149 + v282[20]);

          v175 = *(_QWORD *)v149;
          sub_23AAAEE68(*v283, v283[1], v283[2], v283[3], v283[4], v283[5], v283[6], v283[7], v283[8]);
LABEL_184:
          sub_23AA8A05C(v281, &qword_2542E4770);
          break;
        case 2u:

          v175 = *(_QWORD *)v149;
          sub_23AAAEE68(*(_QWORD *)(v149 + 24), *(_QWORD *)(v149 + 32), *(_QWORD *)(v149 + 40), *(_QWORD *)(v149 + 48), *(_QWORD *)(v149 + 56), *(_QWORD *)(v149 + 64), *(_QWORD *)(v149 + 72), *(_QWORD *)(v149 + 80), *(_QWORD *)(v149 + 88));
          break;
        case 4u:
        case 5u:
          v175 = *(_QWORD *)v149;
          break;
        default:
          v150 = &qword_2542E1608;
          goto LABEL_55;
      }
      sub_23AA8A05C(v148, &qword_2542DDFC0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v129 = swift_allocObject();
      v91 = v129;
      *(_OWORD *)(v129 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v129 + 32) = 0x2000;
      *(_QWORD *)(v129 + 40) = v175;
      *(_WORD *)(v129 + 48) = 0;
LABEL_187:
      *(_BYTE *)(v129 + 72) = 0;
      return (void *)v91;
    case 30:
      v151 = (uint64_t)v345;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v345, &qword_2542DDFC0);
      if ((*(_BYTE *)(v151 + 9) & 1) != 0)
        goto LABEL_171;
      LOBYTE(v124) = *((_BYTE *)v345 + 8);
      v152 = *v345;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v126 = swift_allocObject();
      v91 = v126;
      *(_OWORD *)(v126 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v126 + 32) = 0x4000;
      *(_QWORD *)(v126 + 40) = v152;
      goto LABEL_58;
    case 32:
      v153 = (uint64_t)v343;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v343, &qword_2542DDFC0);
      if ((*(_BYTE *)(v153 + 9) & 1) != 0)
        goto LABEL_171;
      v154 = *((_BYTE *)v343 + 8);
      v155 = *v343;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v126 = swift_allocObject();
      v91 = v126;
      *(_OWORD *)(v126 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v126 + 32) = 8;
      *(_QWORD *)(v126 + 40) = v155;
      *(_BYTE *)(v126 + 48) = v154;
      *(_BYTE *)(v126 + 49) = 0;
      v147 = 3;
      goto LABEL_63;
    case 33:
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v69, &qword_2542DDFC0);
      if ((v69[9] & 1) != 0)
        goto LABEL_171;
      v156 = v69[8];
      v157 = *(_QWORD *)v69;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v126 = swift_allocObject();
      v91 = v126;
      *(_OWORD *)(v126 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v126 + 32) = 1024;
      *(_QWORD *)(v126 + 40) = v157;
      *(_BYTE *)(v126 + 48) = v156;
      *(_BYTE *)(v126 + 49) = 0;
      v147 = 6;
      goto LABEL_63;
    case 34:
      v158 = (uint64_t)v344;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v344, &qword_2542DDFC0);
      if ((*(_BYTE *)(v158 + 9) & 1) != 0)
        goto LABEL_171;
      LOBYTE(v95) = *((_BYTE *)v344 + 8);
      v159 = *v344;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v142 = swift_allocObject();
      v91 = v142;
      *(_OWORD *)(v142 + 16) = xmmword_23B1CA760;
      v160 = 0x80000;
      goto LABEL_68;
    case 38:
      v161 = v346;
      sub_23AA8EFC8((uint64_t)v348, (uint64_t)v346, &qword_2542DDFC0);
      if ((*((_BYTE *)v161 + 9) & 1) != 0)
        goto LABEL_171;
      LOBYTE(v95) = *((_BYTE *)v346 + 8);
      v159 = *v346;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EC8);
      v142 = swift_allocObject();
      v91 = v142;
      *(_OWORD *)(v142 + 16) = xmmword_23B1CA760;
      v160 = 1024;
LABEL_68:
      *(_QWORD *)(v142 + 32) = v160;
      *(_QWORD *)(v142 + 40) = v159;
LABEL_69:
      *(_BYTE *)(v142 + 48) = v95;
      *(_BYTE *)(v142 + 49) = 0;
      *(_BYTE *)(v142 + 72) = 0;
      goto LABEL_70;
    default:
      goto LABEL_171;
  }
}

uint64_t sub_23AE03F50(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id *v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id *v30;
  uint64_t v31;
  uint64_t v32;
  id *v33;
  uint64_t v34;
  uint64_t v35;
  id *v36;
  uint64_t v37;
  uint64_t v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  char *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  int v64;
  char *v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _BYTE *v76;
  void **v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  void **v84;
  uint64_t *v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  void *v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  id v107;
  uint64_t *v108;
  uint64_t v109;
  char *v110;
  void *v111;
  uint64_t v112;
  void *v113;
  void *v114;
  id v115;
  id v116;
  int EnumCaseMultiPayload;
  id v118;
  uint64_t v119;
  id v120;
  void **v121;
  void *v122;
  id v123;
  char v124;
  id v125;
  void *v126;
  id v127;
  uint64_t v129;
  void **v130;
  _BYTE *v131;
  _QWORD *v132;
  uint64_t v133;
  void **v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  char *v139;
  _QWORD *v140;
  uint64_t v141;
  void *v142;
  __int128 v143;
  char v144;
  id v145;

  v142 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v136 = *(_QWORD *)(v1 - 8);
  v137 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v130 = (void **)((char *)&v129 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v133 = (uint64_t)&v129 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v132 = (uint64_t *)((char *)&v129 - v7);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v141 = (uint64_t)&v129 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v131 = (char *)&v129 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v140 = (uint64_t *)((char *)&v129 - v13);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v134 = (void **)((char *)&v129 - v15);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v139 = (char *)&v129 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v138 = (uint64_t *)((char *)&v129 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (id *)((char *)&v129 - v21);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (void **)((char *)&v129 - v24);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v135 = (uint64_t)&v129 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (id *)((char *)&v129 - v29);
  v31 = MEMORY[0x24BDAC7A8](v28);
  v33 = (id *)((char *)&v129 - v32);
  v34 = MEMORY[0x24BDAC7A8](v31);
  v36 = (id *)((char *)&v129 - v35);
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (void **)((char *)&v129 - v38);
  v40 = MEMORY[0x24BDAC7A8](v37);
  v42 = (char *)&v129 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40);
  v45 = (char *)&v129 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)&v129 - v46;
  sub_23AA8EFC8(v143, (uint64_t)&v129 - v46, &qword_2542DDFC0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v48 = v138;
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v138, &qword_2542DDFC0);
      if ((*((_BYTE *)v48 + 9) & 1) != 0)
        goto LABEL_86;
      v49 = v47;
      v50 = (void *)*v138;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v51 = swift_allocObject();
      v52 = v51;
      *(_OWORD *)(v51 + 16) = xmmword_23B1CA760;
      v53 = 8;
      v54 = &unk_250BDDF38;
      goto LABEL_94;
    case 2u:
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v42, &qword_2542DDFC0);
      if ((v42[9] & 1) != 0)
        goto LABEL_86;
      v55 = (uint64_t)v47;
      v56 = *(void **)v42;
      goto LABEL_62;
    case 4u:
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v30, &qword_2542DDFC0);
      if ((*((_BYTE *)v30 + 9) & 1) != 0)
      {
        sub_23AB7C6B4(v30[2], *((unsigned __int8 *)v30 + 24), *((_BYTE *)v30 + 25));
        goto LABEL_86;
      }
      v49 = v47;
      v103 = *v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v52 + 32) = 64;
      *(_QWORD *)(v52 + 40) = &unk_250BDDDF8;
      *(_QWORD *)(v52 + 48) = v103;
      sub_23AB7C6B4(v30[2], *((unsigned __int8 *)v30 + 24), *((_BYTE *)v30 + 25));
      goto LABEL_95;
    case 5u:
      v57 = v135;
      sub_23AA8EFC8((uint64_t)v47, v135, &qword_2542DDFC0);
      v58 = v47;
      v59 = v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8) + 48);
      v60 = v137;
      v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48);
      if (v61(v59, 1, v137) == 1)
      {
        if (v61(v57, 1, v60) == 1)
        {
          sub_23AA8A05C(v57, &qword_2542E4770);
          v47 = v58;
          goto LABEL_86;
        }
        v121 = v130;
        sub_23AA724E8(v57, (uint64_t)v130, (uint64_t *)&unk_2542E4760);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
        v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
        v122 = *v121;
        *(_QWORD *)(v52 + 32) = 96;
        *(_QWORD *)(v52 + 40) = &unk_250BDDE48;
        *(_QWORD *)(v52 + 48) = v122;
        v123 = v122;
        v109 = (uint64_t)v121;
        v108 = (uint64_t *)&unk_2542E4760;
      }
      else
      {
        v104 = v59;
        v105 = (uint64_t)v130;
        sub_23AA724E8(v104, (uint64_t)v130, (uint64_t *)&unk_2542E4760);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
        v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
        v106 = *(void **)(v105 + 8);
        *(_QWORD *)(v52 + 32) = 8;
        *(_QWORD *)(v52 + 40) = &unk_250BDDE20;
        *(_QWORD *)(v52 + 48) = v106;
        v107 = v106;
        sub_23AA8A05C(v105, (uint64_t *)&unk_2542E4760);
        v108 = &qword_2542E4770;
        v109 = v57;
      }
      sub_23AA8A05C(v109, v108);
      goto LABEL_91;
    case 0xAu:
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v25, &qword_2542DDFC0);
      if ((*((_BYTE *)v25 + 9) & 1) == 0)
      {
        v110 = v47;
        v111 = *v25;
        v112 = *((unsigned __int8 *)v25 + 8);
        sub_23ADF1CB4(v25[2], *((unsigned __int16 *)v25 + 12));
        v113 = v111;
        v47 = v110;
        sub_23AB7C6B4(v113, v112, 0);
        goto LABEL_86;
      }
      v62 = *((unsigned __int16 *)v25 + 12);
      if (v62 >> 8 > 0xFE || (v62 & 0x100) != 0)
        goto LABEL_86;
      v49 = v47;
      v64 = *((unsigned __int8 *)v25 + 27);
      v50 = v25[2];
      if (v64 == 4)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
        v51 = swift_allocObject();
        v52 = v51;
        *(_OWORD *)(v51 + 16) = xmmword_23B1CA760;
        v53 = 32;
        v54 = &unk_250BDDEC0;
        goto LABEL_94;
      }
      if (v64 == 2)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
        v51 = swift_allocObject();
        v52 = v51;
        *(_OWORD *)(v51 + 16) = xmmword_23B1CA760;
        v53 = 32;
        v54 = &unk_250BDDE98;
        goto LABEL_94;
      }
      if (!*((_BYTE *)v25 + 27))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
        v51 = swift_allocObject();
        v52 = v51;
        *(_OWORD *)(v51 + 16) = xmmword_23B1CA760;
        v53 = 64;
        v54 = &unk_250BDDE70;
        goto LABEL_94;
      }
      sub_23ADF1CB4(v25[2], v62);
      v47 = v49;
      goto LABEL_86;
    case 0xBu:
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v39, &qword_2542DDFC0);
      if ((*((_BYTE *)v39 + 9) & 1) != 0)
      {
        sub_23ADF1CB4(v39[2], *((unsigned __int16 *)v39 + 12));
        goto LABEL_86;
      }
      v55 = (uint64_t)v47;
      v56 = *v39;
      sub_23ADF1CB4(v39[2], *((unsigned __int16 *)v39 + 12));
LABEL_62:
      sub_23AA8A05C(v55, &qword_2542DDFC0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_23B1D2330;
      *(_QWORD *)(v52 + 32) = 32;
      *(_QWORD *)(v52 + 40) = &unk_250BDDD58;
      *(_QWORD *)(v52 + 48) = v56;
      if (qword_2542E1FE0 != -1)
        swift_once();
      v114 = (void *)qword_2542EDC88;
      *(_QWORD *)(v52 + 56) = 128;
      *(_QWORD *)(v52 + 64) = &unk_250BDDD80;
      *(_QWORD *)(v52 + 72) = v114;
      v115 = v114;
      return v52;
    case 0xDu:
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v45, &qword_2542DDFC0);
      if ((v45[9] & 1) != 0)
        goto LABEL_86;
      v65 = v47;
      v66 = *(_QWORD *)v45;
      v67 = v45[10];
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v52 = swift_allocObject();
      v143 = xmmword_23B1CA760;
      *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55E0);
      v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = v143;
      *(_BYTE *)(v68 + 32) = v67;
      *(_QWORD *)(v52 + 32) = 393472;
      *(_QWORD *)(v52 + 40) = v68;
      *(_QWORD *)(v52 + 48) = v66;
      v69 = (uint64_t)v65;
      goto LABEL_96;
    case 0xEu:
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v36, &qword_2542DDFC0);
      if ((*((_BYTE *)v36 + 9) & 1) != 0)
      {

        goto LABEL_86;
      }
      v145 = v36[2];
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      if ((swift_dynamicCast() & 1) != 0 && v144 == 3)
      {
        v49 = v47;
        v116 = *v36;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
        v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v52 + 32) = 64;
        *(_QWORD *)(v52 + 40) = &unk_250BDDDA8;
        *(_QWORD *)(v52 + 48) = v116;

        goto LABEL_95;
      }

LABEL_76:
      v119 = (uint64_t)v47;
      v120 = *v36;
      sub_23AA8A05C(v119, &qword_2542DDFC0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v52 + 32) = 96;
      *(_QWORD *)(v52 + 40) = &unk_250BDDDD0;
      *(_QWORD *)(v52 + 48) = v120;
      return v52;
    case 0xFu:
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v33, &qword_2542DDFC0);

      v36 = v33;
      if ((*((_BYTE *)v33 + 9) & 1) != 0)
        goto LABEL_86;
      goto LABEL_76;
    case 0x13u:
      v70 = (uint64_t)v139;
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v139, &qword_2542DDFC0);
      if ((*(_BYTE *)(v70 + 17) & 1) != 0)
        goto LABEL_86;
      v58 = v47;
      v71 = *((_QWORD *)v139 + 1);
      v72 = *v139;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v52 = swift_allocObject();
      v143 = xmmword_23B1CA760;
      *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55E0);
      v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = v143;
      *(_BYTE *)(v73 + 32) = v72;
      *(_QWORD *)(v52 + 32) = 2048;
      *(_QWORD *)(v52 + 40) = v73;
      *(_QWORD *)(v52 + 48) = v71;
      goto LABEL_91;
    case 0x15u:
      v58 = v47;
      v74 = (uint64_t)v47;
      v75 = v132;
      sub_23AA8EFC8(v74, (uint64_t)v132, &qword_2542DDFC0);
      if ((*v75 & 0x8000000000000000) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60D8);
        if (swift_dynamicCastClass())
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
          v52 = swift_allocObject();
          *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
          *(_QWORD *)(v52 + 32) = 0x400000;
          *(_QWORD *)(v52 + 40) = &unk_250BDE050;
          *(_QWORD *)(v52 + 48) = 0;
          goto LABEL_90;
        }
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E68A0);
        v76 = (_BYTE *)swift_dynamicCastClass();
        if (v76)
        {
          if (v76[104] != 3
            || (v77 = (void **)&v76[*(_QWORD *)(*(_QWORD *)v76 + 616)],
                swift_beginAccess(),
                v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00),
                (*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 48))(v77, 1, v78)))
          {
            swift_release();
            v79 = (uint64_t)v58;
            goto LABEL_87;
          }
          v126 = *v77;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
          v52 = swift_allocObject();
          *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
          *(_QWORD *)(v52 + 32) = 32;
          *(_QWORD *)(v52 + 40) = &unk_250BDE028;
          *(_QWORD *)(v52 + 48) = v126;
          v127 = v126;
LABEL_90:
          swift_release();
LABEL_91:
          v69 = (uint64_t)v58;
          goto LABEL_96;
        }
      }
      swift_release();
      v47 = v58;
      goto LABEL_86;
    case 0x17u:
      v80 = v131;
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v131, &qword_2542DDFC0);
      if ((*v80 & 1) != 0)
        goto LABEL_86;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v81 = swift_allocObject();
      v52 = v81;
      *(_OWORD *)(v81 + 16) = xmmword_23B1CA760;
      v82 = 0x20000;
      v83 = &unk_250BDDFD8;
LABEL_52:
      *(_QWORD *)(v81 + 32) = v82;
      *(_QWORD *)(v81 + 40) = v83;
      v98 = v142;
      *(_QWORD *)(v81 + 48) = v142;
      v99 = v98;
      goto LABEL_57;
    case 0x1Bu:
      v84 = v134;
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v134, &qword_2542DDFC0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0FC0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v85 = (uint64_t *)&unk_2542E0FC0;
LABEL_85:
        sub_23AA8A05C((uint64_t)v84, v85);
        goto LABEL_86;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5)
      {
        v49 = v47;
        v50 = *v84;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
        v51 = swift_allocObject();
        v52 = v51;
        *(_OWORD *)(v51 + 16) = xmmword_23B1CA760;
        v53 = 0x2000;
        v54 = &unk_250BDDF60;
      }
      else
      {
        if (EnumCaseMultiPayload != 7)
        {
          v85 = &qword_2542E1608;
          goto LABEL_85;
        }
        v49 = v47;
        v50 = *v84;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
        v51 = swift_allocObject();
        v52 = v51;
        *(_OWORD *)(v51 + 16) = xmmword_23B1CA760;
        v53 = 0x2000;
        v54 = &unk_250BDDF88;
      }
LABEL_94:
      *(_QWORD *)(v51 + 32) = v53;
      *(_QWORD *)(v51 + 40) = v54;
      *(_QWORD *)(v51 + 48) = v50;
LABEL_95:
      v69 = (uint64_t)v49;
LABEL_96:
      sub_23AA8A05C(v69, &qword_2542DDFC0);
      return v52;
    case 0x1Du:
      v86 = v140;
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v140, &qword_2542DDFC0);
      if ((*((_BYTE *)v86 + 9) & 1) != 0)
        goto LABEL_86;
      v49 = v47;
      v50 = (void *)*v140;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v51 = swift_allocObject();
      v52 = v51;
      *(_OWORD *)(v51 + 16) = xmmword_23B1CA760;
      v53 = 0x10000;
      v54 = &unk_250BDDFB0;
      goto LABEL_94;
    case 0x1Fu:
      sub_23AA8EFC8((uint64_t)v47, (uint64_t)v22, &qword_2542DDFC0);
      if ((*((_BYTE *)v22 + 9) & 1) != 0)
      {
        sub_23AB7C6B4(v22[2], *((unsigned __int8 *)v22 + 24), *((_BYTE *)v22 + 25));
        goto LABEL_86;
      }
      v58 = v47;
      v118 = *v22;
      if ((*((_BYTE *)v22 + 25) & 1) != 0)
      {
        sub_23AB7C6B4(*v22, *((unsigned __int8 *)v22 + 8), 0);
        v47 = v58;
        goto LABEL_86;
      }
      v125 = v22[2];
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_23B1D2330;
      *(_QWORD *)(v52 + 32) = 96;
      *(_QWORD *)(v52 + 40) = &unk_250BDDEE8;
      *(_QWORD *)(v52 + 48) = v118;
      *(_QWORD *)(v52 + 56) = 8;
      *(_QWORD *)(v52 + 64) = &unk_250BDDF10;
      *(_QWORD *)(v52 + 72) = v125;
      goto LABEL_91;
    case 0x22u:
      v87 = v141;
      sub_23AA8EFC8((uint64_t)v47, v141, &qword_2542DDFC0);
      if ((*(_BYTE *)(v87 + 9) & 1) != 0)
        goto LABEL_86;
      v88 = v47;
      v89 = *(void **)v141;
      v90 = *(unsigned __int8 *)(v141 + 8);
      if (qword_2542E1FE0 != -1)
        swift_once();
      v91 = sub_23B1C63E0();
      v93 = v92;
      if (v91 == sub_23B1C63E0() && v93 == v94)
      {
        swift_bridgeObjectRelease_n();
LABEL_81:
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
        v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v52 + 32) = 0x80000;
        *(_QWORD *)(v52 + 40) = &unk_250BDE000;
        *(_QWORD *)(v52 + 48) = v89;
        v69 = (uint64_t)v88;
        goto LABEL_96;
      }
      v124 = sub_23B1C7388();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v124 & 1) != 0)
        goto LABEL_81;
      sub_23AB7C6B4(v89, v90, 0);
      v47 = v88;
LABEL_86:
      v79 = (uint64_t)v47;
LABEL_87:
      sub_23AA8A05C(v79, &qword_2542DDFC0);
      return MEMORY[0x24BEE4AF8];
    case 0x25u:
      v95 = v133;
      sub_23AA8EFC8((uint64_t)v47, v133, &qword_2542DDFC0);
      v96 = *(_BYTE *)(v95 + 10);
      sub_23AB7C6B4(*(id *)v95, *(unsigned __int8 *)(v95 + 8), *(_BYTE *)(v95 + 9));
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v52 = swift_allocObject();
      v143 = xmmword_23B1CA760;
      *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55E0);
      v97 = swift_allocObject();
      *(_OWORD *)(v97 + 16) = v143;
      *(_BYTE *)(v97 + 32) = v96;
      *(_QWORD *)(v52 + 32) = 0x800000;
      *(_QWORD *)(v52 + 40) = v97;
      *(_QWORD *)(v52 + 48) = 0;
      v69 = (uint64_t)v47;
      goto LABEL_96;
    case 0x29u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v81 = swift_allocObject();
      v52 = v81;
      *(_OWORD *)(v81 + 16) = xmmword_23B1CA760;
      v82 = 128;
      v83 = &unk_250BDDCB8;
      goto LABEL_52;
    case 0x2Au:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v100 = swift_allocObject();
      v52 = v100;
      *(_OWORD *)(v100 + 16) = xmmword_23B1CA760;
      v101 = 0x200000;
      v102 = &unk_250BDDCE0;
      goto LABEL_56;
    case 0x2Bu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v100 = swift_allocObject();
      v52 = v100;
      *(_OWORD *)(v100 + 16) = xmmword_23B1CA760;
      v101 = 2048;
      v102 = &unk_250BDDD08;
      goto LABEL_56;
    case 0x2Cu:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE828);
      v100 = swift_allocObject();
      v52 = v100;
      *(_OWORD *)(v100 + 16) = xmmword_23B1CA760;
      v101 = 0x1000000;
      v102 = &unk_250BDDD30;
LABEL_56:
      *(_QWORD *)(v100 + 32) = v101;
      *(_QWORD *)(v100 + 40) = v102;
      *(_QWORD *)(v100 + 48) = 0;
LABEL_57:
      v69 = (uint64_t)v47;
      goto LABEL_96;
    default:
      goto LABEL_86;
  }
}

uint64_t sub_23AE05034(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id *v32;
  uint64_t v33;
  uint64_t v34;
  id *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void **v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  unsigned int v64;
  void *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  void *v69;
  char v70;
  char *v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char v82;
  uint64_t v83;
  _QWORD *v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  char *v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  char v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  char v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  id v120;
  char v121;
  int EnumCaseMultiPayload;
  uint64_t v123;
  char v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  __int128 v144;
  char v145;
  id v146;

  v143 = a2;
  v142 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v140 = *(_QWORD *)(v2 - 8);
  v141 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v130 = (uint64_t)&v130 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v131 = (uint64_t)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v137 = (uint64_t *)((char *)&v130 - v8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v136 = (uint64_t)&v130 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v135 = (char *)&v130 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v134 = (uint64_t)&v130 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v138 = (uint64_t)&v130 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v133 = (uint64_t)&v130 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v130 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v130 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v130 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v139 = (uint64_t)&v130 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (id *)((char *)&v130 - v31);
  v33 = MEMORY[0x24BDAC7A8](v30);
  v35 = (id *)((char *)&v130 - v34);
  v36 = MEMORY[0x24BDAC7A8](v33);
  v132 = (uint64_t)&v130 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (void **)((char *)&v130 - v39);
  v41 = MEMORY[0x24BDAC7A8](v38);
  v43 = (char *)&v130 - v42;
  v44 = MEMORY[0x24BDAC7A8](v41);
  v46 = (char *)&v130 - v45;
  MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)&v130 - v47;
  sub_23AA8EFC8(v144, (uint64_t)&v130 - v47, (uint64_t *)&unk_2542DDFB0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_23AA8EFC8((uint64_t)v48, (uint64_t)v21, (uint64_t *)&unk_2542DDFB0);
      v49 = *(id *)v21;
      v50 = v21[8];
      if ((v21[9] & 1) != 0)
        goto LABEL_36;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v51 = swift_allocObject();
      v52 = v51;
      *(_OWORD *)(v51 + 16) = xmmword_23B1CA760;
      v53 = 8;
      v54 = &unk_250BDE2F8;
      goto LABEL_72;
    case 2u:
      v55 = (uint64_t)v48;
      sub_23AA8EFC8((uint64_t)v48, (uint64_t)v43, (uint64_t *)&unk_2542DDFB0);
      v56 = *(void **)v43;
      v57 = v43[8];
      if ((v43[9] & 1) != 0)
        goto LABEL_5;
      goto LABEL_19;
    case 4u:
      sub_23AA8EFC8((uint64_t)v48, (uint64_t)v32, (uint64_t *)&unk_2542DDFB0);
      v49 = *v32;
      v50 = *((unsigned __int8 *)v32 + 8);
      if ((*((_BYTE *)v32 + 9) & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
        v81 = v48;
        v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v52 + 32) = 64;
        *(_QWORD *)(v52 + 40) = &unk_250BDE1B8;
        *(_QWORD *)(v52 + 48) = v49;
        *(_BYTE *)(v52 + 56) = v50;
        sub_23AA862DC(v32[2], *((unsigned __int8 *)v32 + 24), *((_BYTE *)v32 + 25));
        goto LABEL_67;
      }
      sub_23AA862DC(v32[2], *((unsigned __int8 *)v32 + 24), *((_BYTE *)v32 + 25));
LABEL_36:
      v78 = v49;
      v79 = v50;
      goto LABEL_37;
    case 5u:
      v58 = v139;
      sub_23AA8EFC8((uint64_t)v48, v139, (uint64_t *)&unk_2542DDFB0);
      v59 = v58 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0) + 48);
      v60 = v141;
      v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
      if (v61(v59, 1, v141) == 1)
      {
        if (v61(v58, 1, v60) == 1)
        {
          sub_23AA8A05C(v58, (uint64_t *)&unk_2542E4750);
          goto LABEL_38;
        }
        v127 = v130;
        sub_23AA724E8(v58, v130, (uint64_t *)&unk_2542E6B00);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
        v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
        v128 = *(_QWORD *)v127;
        v129 = *(_BYTE *)(v127 + 8);
        *(_QWORD *)(v52 + 32) = 96;
        *(_QWORD *)(v52 + 40) = &unk_250BDE208;
        *(_QWORD *)(v52 + 48) = v128;
        *(_BYTE *)(v52 + 56) = v129;
        sub_23AA8A05C(v127, (uint64_t *)&unk_2542E6B00);
      }
      else
      {
        v116 = v59;
        v117 = v130;
        sub_23AA724E8(v116, v130, (uint64_t *)&unk_2542E6B00);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
        v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
        v118 = *(_QWORD *)(v117 + 16);
        v119 = *(_BYTE *)(v117 + 24);
        *(_QWORD *)(v52 + 32) = 8;
        *(_QWORD *)(v52 + 40) = &unk_250BDE1E0;
        *(_QWORD *)(v52 + 48) = v118;
        *(_BYTE *)(v52 + 56) = v119;
        sub_23AA8A05C(v117, (uint64_t *)&unk_2542E6B00);
        sub_23AA8A05C(v58, (uint64_t *)&unk_2542E4750);
      }
      goto LABEL_58;
    case 0xAu:
      v62 = v48;
      sub_23AA8EFC8((uint64_t)v48, (uint64_t)v27, (uint64_t *)&unk_2542DDFB0);
      v63 = *((_QWORD *)v27 + 2);
      v64 = *((unsigned __int16 *)v27 + 12);
      if ((v27[9] & 1) == 0)
      {
        sub_23ADF1CFC(*((void **)v27 + 2), *((unsigned __int16 *)v27 + 12));
        v48 = v62;
        goto LABEL_38;
      }
      v65 = *(void **)v27;
      v66 = v27[8];
      if (v64 >> 8 > 0xFE)
        goto LABEL_88;
      if ((v64 & 0x100) != 0)
      {
        sub_23ADF1CFC(*((void **)v27 + 2), *((unsigned __int16 *)v27 + 12));
        goto LABEL_88;
      }
      v67 = v27[27];
      if (v27[27])
      {
        if (v67 == 2)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
          v68 = swift_allocObject();
          v52 = v68;
          *(_OWORD *)(v68 + 16) = xmmword_23B1CA760;
          v69 = &unk_250BDE258;
          goto LABEL_91;
        }
        if (v67 == 4)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
          v68 = swift_allocObject();
          v52 = v68;
          *(_OWORD *)(v68 + 16) = xmmword_23B1CA760;
          v69 = &unk_250BDE280;
LABEL_91:
          *(_QWORD *)(v68 + 32) = 32;
          *(_QWORD *)(v68 + 40) = v69;
          goto LABEL_92;
        }
LABEL_88:
        sub_23AA862DC(v65, v66, 1);
        v48 = v62;
        goto LABEL_38;
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v68 = swift_allocObject();
      v52 = v68;
      *(_OWORD *)(v68 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v68 + 32) = 64;
      *(_QWORD *)(v68 + 40) = &unk_250BDE230;
LABEL_92:
      *(_QWORD *)(v68 + 48) = v63;
      *(_BYTE *)(v68 + 56) = v64;
      sub_23AA862DC(v65, v66, 1);
      v74 = (uint64_t)v62;
LABEL_59:
      sub_23AA8A05C(v74, (uint64_t *)&unk_2542DDFB0);
      return v52;
    case 0xBu:
      v55 = (uint64_t)v48;
      sub_23AA8EFC8((uint64_t)v48, (uint64_t)v40, (uint64_t *)&unk_2542DDFB0);
      v56 = *v40;
      v57 = *((unsigned __int8 *)v40 + 8);
      v70 = *((_BYTE *)v40 + 9);
      sub_23ADF1CFC(v40[2], *((unsigned __int16 *)v40 + 12));
      if ((v70 & 1) != 0)
      {
LABEL_5:
        sub_23AA862DC(v56, v57, 1);
        v48 = (char *)v55;
        goto LABEL_38;
      }
LABEL_19:
      sub_23AA8A05C(v55, (uint64_t *)&unk_2542DDFB0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_23B1D2330;
      *(_QWORD *)(v52 + 32) = 32;
      *(_QWORD *)(v52 + 40) = &unk_250BDE118;
      *(_QWORD *)(v52 + 48) = v56;
      *(_BYTE *)(v52 + 56) = v57;
      *(_QWORD *)(v52 + 64) = 128;
      *(_QWORD *)(v52 + 72) = &unk_250BDE140;
      *(_QWORD *)(v52 + 80) = 0;
      *(_BYTE *)(v52 + 88) = 2;
      return v52;
    case 0xDu:
      sub_23AA8EFC8((uint64_t)v48, (uint64_t)v46, (uint64_t *)&unk_2542DDFB0);
      v49 = *(id *)v46;
      v50 = v46[8];
      if ((v46[9] & 1) != 0)
        goto LABEL_36;
      v71 = v48;
      v72 = v46[10];
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v52 = swift_allocObject();
      v144 = xmmword_23B1CA760;
      *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55E0);
      v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = v144;
      *(_BYTE *)(v73 + 32) = v72;
      *(_QWORD *)(v52 + 32) = 393472;
      *(_QWORD *)(v52 + 40) = v73;
      *(_QWORD *)(v52 + 48) = v49;
      *(_BYTE *)(v52 + 56) = v50;
      v74 = (uint64_t)v71;
      goto LABEL_59;
    case 0xEu:
      v75 = v132;
      sub_23AA8EFC8((uint64_t)v48, v132, (uint64_t *)&unk_2542DDFB0);
      if ((*(_BYTE *)(v75 + 9) & 1) != 0)
      {
        v76 = *(id *)v75;
        v77 = *(unsigned __int8 *)(v75 + 8);

        v78 = v76;
        v79 = v77;
LABEL_37:
        sub_23AA862DC(v78, v79, 1);
        goto LABEL_38;
      }
      v146 = *(id *)(v75 + 16);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      if ((swift_dynamicCast() & 1) != 0 && v145 == 3)
      {
        v120 = *(id *)v75;
        v121 = *(_BYTE *)(v75 + 8);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
        v81 = v48;
        v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
        *(_QWORD *)(v52 + 32) = 64;
        *(_QWORD *)(v52 + 40) = &unk_250BDE168;
        *(_QWORD *)(v52 + 48) = v120;
        *(_BYTE *)(v52 + 56) = v121;

        goto LABEL_67;
      }
      v109 = (uint64_t)v48;

      v110 = *(id *)v75;
      v111 = *(_BYTE *)(v75 + 8);
LABEL_80:
      sub_23AA8A05C(v109, (uint64_t *)&unk_2542DDFB0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v52 + 32) = 96;
      *(_QWORD *)(v52 + 40) = &unk_250BDE190;
      *(_QWORD *)(v52 + 48) = v110;
      *(_BYTE *)(v52 + 56) = v111;
      return v52;
    case 0xFu:
      v109 = (uint64_t)v48;
      sub_23AA8EFC8((uint64_t)v48, (uint64_t)v35, (uint64_t *)&unk_2542DDFB0);

      v110 = *v35;
      v111 = *((_BYTE *)v35 + 8);
      if ((*((_BYTE *)v35 + 9) & 1) == 0)
        goto LABEL_80;
      sub_23AA862DC(*v35, *((unsigned __int8 *)v35 + 8), 1);
      v48 = (char *)v109;
      goto LABEL_38;
    case 0x13u:
      v80 = v133;
      sub_23AA8EFC8((uint64_t)v48, v133, (uint64_t *)&unk_2542DDFB0);
      v49 = *(id *)(v80 + 8);
      v50 = *(unsigned __int8 *)(v80 + 16);
      if ((*(_BYTE *)(v80 + 17) & 1) != 0)
        goto LABEL_36;
      v81 = v48;
      v82 = *(_BYTE *)v80;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v52 = swift_allocObject();
      v144 = xmmword_23B1CA760;
      *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55E0);
      v83 = swift_allocObject();
      *(_OWORD *)(v83 + 16) = v144;
      *(_BYTE *)(v83 + 32) = v82;
      *(_QWORD *)(v52 + 32) = 2048;
      *(_QWORD *)(v52 + 40) = v83;
      *(_QWORD *)(v52 + 48) = v49;
      *(_BYTE *)(v52 + 56) = v50;
      goto LABEL_67;
    case 0x15u:
      v84 = v137;
      sub_23AA8EFC8((uint64_t)v48, (uint64_t)v137, (uint64_t *)&unk_2542DDFB0);
      if ((*v84 & 0x8000000000000000) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6360);
        if (swift_dynamicCastClass())
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
          v52 = swift_allocObject();
          *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
          *(_QWORD *)(v52 + 32) = 0x400000;
          *(_QWORD *)(v52 + 40) = &unk_250BDE410;
          *(_QWORD *)(v52 + 48) = 0;
          *(_BYTE *)(v52 + 56) = -1;
          swift_release();
          goto LABEL_58;
        }
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5ED0);
        v85 = (_BYTE *)swift_dynamicCastClass();
        if (v85)
        {
          if (v85[104] == 3)
          {
            v86 = &v85[*(_QWORD *)(*(_QWORD *)v85 + 616)];
            swift_beginAccess();
            v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
            if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 48))(v86, 1, v87))
            {
              v88 = *(_QWORD *)v86;
              v81 = v48;
              v89 = v86[8];
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
              v52 = swift_allocObject();
              *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
              *(_QWORD *)(v52 + 32) = 32;
              *(_QWORD *)(v52 + 40) = &unk_250BDE3E8;
              *(_QWORD *)(v52 + 48) = v88;
              *(_BYTE *)(v52 + 56) = v89;
              swift_release();
LABEL_67:
              v74 = (uint64_t)v81;
              goto LABEL_59;
            }
          }
        }
      }
      swift_release();
      goto LABEL_38;
    case 0x17u:
      v90 = v135;
      sub_23AA8EFC8((uint64_t)v48, (uint64_t)v135, (uint64_t *)&unk_2542DDFB0);
      if ((*v90 & 1) != 0)
        goto LABEL_38;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v91 = swift_allocObject();
      v52 = v91;
      *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
      v92 = 0x20000;
      v93 = &unk_250BDE398;
LABEL_54:
      *(_QWORD *)(v91 + 32) = v92;
      *(_QWORD *)(v91 + 40) = v93;
      *(_QWORD *)(v91 + 48) = v142;
      v106 = v143;
      goto LABEL_57;
    case 0x1Bu:
      v94 = v138;
      sub_23AA8EFC8((uint64_t)v48, v138, (uint64_t *)&unk_2542DDFB0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v95 = &qword_2542DDDB0;
LABEL_86:
        sub_23AA8A05C(v94, v95);
        goto LABEL_38;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5)
      {
        v123 = *(_QWORD *)v94;
        v124 = *(_BYTE *)(v94 + 8);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
        v125 = swift_allocObject();
        v52 = v125;
        *(_OWORD *)(v125 + 16) = xmmword_23B1CA760;
        v126 = &unk_250BDE320;
      }
      else
      {
        if (EnumCaseMultiPayload != 7)
        {
          v95 = &qword_2542E1600;
          goto LABEL_86;
        }
        v123 = *(_QWORD *)v94;
        v124 = *(_BYTE *)(v94 + 8);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
        v125 = swift_allocObject();
        v52 = v125;
        *(_OWORD *)(v125 + 16) = xmmword_23B1CA760;
        v126 = &unk_250BDE348;
      }
      *(_QWORD *)(v125 + 32) = 0x2000;
      *(_QWORD *)(v125 + 40) = v126;
      *(_QWORD *)(v125 + 48) = v123;
      *(_BYTE *)(v125 + 56) = v124;
LABEL_58:
      v74 = (uint64_t)v48;
      goto LABEL_59;
    case 0x1Du:
      v96 = v134;
      sub_23AA8EFC8((uint64_t)v48, v134, (uint64_t *)&unk_2542DDFB0);
      v49 = *(id *)v96;
      v50 = *(unsigned __int8 *)(v96 + 8);
      if ((*(_BYTE *)(v96 + 9) & 1) != 0)
        goto LABEL_36;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v51 = swift_allocObject();
      v52 = v51;
      *(_OWORD *)(v51 + 16) = xmmword_23B1CA760;
      v53 = 0x10000;
      v54 = &unk_250BDE370;
LABEL_72:
      *(_QWORD *)(v51 + 32) = v53;
      *(_QWORD *)(v51 + 40) = v54;
      *(_QWORD *)(v51 + 48) = v49;
      *(_BYTE *)(v51 + 56) = v50;
      goto LABEL_58;
    case 0x1Fu:
      v97 = v48;
      sub_23AA8EFC8((uint64_t)v48, (uint64_t)v24, (uint64_t *)&unk_2542DDFB0);
      v98 = *(void **)v24;
      v99 = v24[8];
      v100 = *((_QWORD *)v24 + 2);
      v101 = v24[24];
      if ((v24[9] & 1) != 0)
      {
        sub_23AA862DC(*((id *)v24 + 2), v24[24], v24[25]);
        v102 = v98;
        v103 = v99;
      }
      else
      {
        if ((v24[25] & 1) == 0)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
          v52 = swift_allocObject();
          *(_OWORD *)(v52 + 16) = xmmword_23B1D2330;
          *(_QWORD *)(v52 + 32) = 96;
          *(_QWORD *)(v52 + 40) = &unk_250BDE2A8;
          *(_QWORD *)(v52 + 48) = v98;
          *(_BYTE *)(v52 + 56) = v99;
          *(_QWORD *)(v52 + 64) = 8;
          *(_QWORD *)(v52 + 72) = &unk_250BDE2D0;
          *(_QWORD *)(v52 + 80) = v100;
          *(_BYTE *)(v52 + 88) = v101;
          v74 = (uint64_t)v97;
          goto LABEL_59;
        }
        v102 = (void *)*((_QWORD *)v24 + 2);
        v103 = v24[24];
      }
      sub_23AA862DC(v102, v103, 1);
      v48 = v97;
LABEL_38:
      sub_23AA8A05C((uint64_t)v48, (uint64_t *)&unk_2542DDFB0);
      return MEMORY[0x24BEE4AF8];
    case 0x22u:
      v104 = v136;
      sub_23AA8EFC8((uint64_t)v48, v136, (uint64_t *)&unk_2542DDFB0);
      v78 = *(void **)v104;
      v79 = *(unsigned __int8 *)(v104 + 8);
      if ((*(_BYTE *)(v104 + 9) & 1) != 0)
        goto LABEL_37;
      if ((_DWORD)v79 != 2 || v78 != 0)
        goto LABEL_38;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v91 = swift_allocObject();
      v52 = v91;
      *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
      *(_QWORD *)(v91 + 32) = 0x80000;
      *(_QWORD *)(v91 + 40) = &unk_250BDE3C0;
      *(_QWORD *)(v91 + 48) = 0;
      v106 = 2;
LABEL_57:
      *(_BYTE *)(v91 + 56) = v106;
      goto LABEL_58;
    case 0x25u:
      v112 = v131;
      sub_23AA8EFC8((uint64_t)v48, v131, (uint64_t *)&unk_2542DDFB0);
      v113 = *(_BYTE *)(v112 + 10);
      sub_23AA862DC(*(id *)v112, *(unsigned __int8 *)(v112 + 8), *(_BYTE *)(v112 + 9));
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v52 = swift_allocObject();
      v144 = xmmword_23B1CA760;
      *(_OWORD *)(v52 + 16) = xmmword_23B1CA760;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E55E0);
      v114 = swift_allocObject();
      *(_OWORD *)(v114 + 16) = v144;
      *(_BYTE *)(v114 + 32) = v113;
      *(_QWORD *)(v52 + 32) = 0x800000;
      *(_QWORD *)(v52 + 40) = v114;
      *(_QWORD *)(v52 + 48) = 0;
      *(_BYTE *)(v52 + 56) = -1;
      v74 = (uint64_t)v48;
      goto LABEL_59;
    case 0x29u:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v91 = swift_allocObject();
      v52 = v91;
      *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
      v92 = 128;
      v93 = &unk_250BDE078;
      goto LABEL_54;
    case 0x2Au:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v91 = swift_allocObject();
      v52 = v91;
      *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
      v107 = &unk_250BDE0A0;
      v108 = 0x200000;
      goto LABEL_56;
    case 0x2Bu:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v91 = swift_allocObject();
      v52 = v91;
      *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
      v107 = &unk_250BDE0C8;
      v108 = 2048;
      goto LABEL_56;
    case 0x2Cu:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE818);
      v91 = swift_allocObject();
      v52 = v91;
      *(_OWORD *)(v91 + 16) = xmmword_23B1CA760;
      v107 = &unk_250BDE0F0;
      v108 = 0x1000000;
LABEL_56:
      *(_QWORD *)(v91 + 32) = v108;
      *(_QWORD *)(v91 + 40) = v107;
      *(_QWORD *)(v91 + 48) = 0;
      v106 = -1;
      goto LABEL_57;
    default:
      goto LABEL_38;
  }
}

uint64_t sub_23AE060FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int EnumCaseMultiPayload;
  unsigned int v11;
  void *v12;
  uint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v24;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v2);
  v7 = (char *)&v24 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - v8;
  sub_23AA8EFC8(v0, (uint64_t)&v24 - v8, (uint64_t *)&unk_2542DDFB0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 40)
  {
    if (EnumCaseMultiPayload != 27)
    {
      if (EnumCaseMultiPayload != 13)
      {
LABEL_21:
        v18 = 0;
        goto LABEL_22;
      }
      sub_23AA8EFC8((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_2542DDFB0);
      v11 = v7[10];
      v12 = *(void **)v7;
      v13 = v7[8];
      v14 = v7[9];
      if (v11 < 3)
      {
        v15 = v12;
        v16 = v13;
        v17 = v14;
LABEL_13:
        sub_23AA862DC(v15, v16, v17);
        goto LABEL_21;
      }
      sub_23AE063E0(v11);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2730);
      v20 = swift_dynamicCastMetatype();
      if ((v14 & 1) != 0)
      {
        if (v20)
        {
          v15 = v12;
          v16 = v13;
          v17 = 1;
          goto LABEL_13;
        }
      }
      else if (v20)
      {
        goto LABEL_21;
      }
      v18 = 262400;
      goto LABEL_22;
    }
    sub_23AA8EFC8((uint64_t)v9, (uint64_t)v4, (uint64_t *)&unk_2542DDFB0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDDB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1608);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        v19 = (uint64_t)&v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31C0) + 48)];
        swift_bridgeObjectRelease();
        sub_23AA8A05C(v19, &qword_2542E4770);
        v18 = 0x2000;
        goto LABEL_22;
      }
      v22 = &qword_2542E1608;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E1600);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        v21 = (uint64_t)&v4[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E31A0) + 48)];
        swift_bridgeObjectRelease();
        sub_23AA8A05C(v21, (uint64_t *)&unk_2542E4750);
        v18 = 0x2000;
        goto LABEL_22;
      }
      v22 = &qword_2542E1600;
    }
    sub_23AA8A05C((uint64_t)v4, v22);
    goto LABEL_21;
  }
  v18 = 1;
LABEL_22:
  sub_23AA8A05C((uint64_t)v9, (uint64_t *)&unk_2542DDFB0);
  return v18;
}

uint64_t sub_23AE063CC(char a1)
{
  return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)*(&off_250C006B0 + a1));
}

uint64_t sub_23AE063E0(char a1)
{
  return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)*(&off_250C008E0 + a1));
}

uint64_t sub_23AE063F4(char a1)
{
  return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)*(&off_250C00B10 + a1));
}

void sub_23AE06408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char v9;

  sub_23AC4AE40(a5, a6, a7, a8);
  if ((v9 & 1) != 0)
    __asm { BR              X10 }
  __asm { BR              X10 }
}

uint64_t sub_23AE064D8()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (v6 == 2)
  {
    sub_23AAFA44C(v1, v2, v3, 0);
    if (v5)
    {
      sub_23AAFA44C(v0, v5, v4, 2);
      sub_23AAFA44C(v1, v2, v3, 0);
      sub_23AAFA44C(v0, v5, v4, 2);

      sub_23ABE4D94(v1, v2, v3, 0);
      sub_23ABE4D94(v0, v5, v4, 2);
      v12 = 0;
    }
    else
    {
      sub_23AAFA44C(v0, 0, v4, 2);
      sub_23AAFA44C(v1, v2, v3, 0);
      sub_23AAFA44C(v0, 0, v4, 2);

      sub_23ABE4D94(v0, 0, v4, 2);
      sub_23ABE4D94(v1, v2, v3, 0);
      v12 = 1;
    }
  }
  else if (v6 == 3)
  {
    sub_23AAFA44C(v1, v2, v3, 0);
    sub_23AAFA44C(v0, v5, v4, 3);
    v7 = v1;
    v8 = sub_23B1C63E0();
    v10 = v9;
    if (v8 == sub_23B1C63E0() && v10 == v11)
      v12 = 1;
    else
      v12 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_23AE06514()
{
  unsigned __int8 v0;

  return ((uint64_t (*)(void))((char *)sub_23AE06530 + 4 * word_23B1DACBA[v0]))();
}

void sub_23AE06530()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  if (v2)
  {
    sub_23AAFA44C(v1, v2, v3, 2);
    sub_23AAFA44C(v0, v5, v4, 0);

    JUMPOUT(0x23AE066DCLL);
  }
  sub_23AAFA44C(v1, 0, v3, 2);
  sub_23AAFA44C(v0, v5, v4, 0);
  sub_23AAFA44C(v1, 0, v3, 2);
  sub_23AAFA44C(v0, v5, v4, 0);

  sub_23ABE4D94(v0, v5, v4, 0);
  JUMPOUT(0x23AE06D64);
}

uint64_t sub_23AE06DC8(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[48];
  _BYTE v9[56];

  sub_23AA724E8(v1, (uint64_t)&v7, (uint64_t *)&unk_2542E05B0);
  sub_23AA724E8(a1, (uint64_t)&v6, (uint64_t *)&unk_2542E05B0);
  sub_23AC4B79C(v1, a1);
  if ((v3 & 1) == 0 || (sub_23AA724E8(v1, (uint64_t)v9, (uint64_t *)&unk_2542E05B0), !v9[41]))
  {
    sub_23AA724E8(a1, (uint64_t)&v5, (uint64_t *)&unk_2542E05B0);
    sub_23AA724E8(v1, (uint64_t)v8, (uint64_t *)&unk_2542E05B0);
    __asm { BR              X10 }
  }
  return 1;
}

void sub_23AE071F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  uint64_t v17;

  sub_23AA724E8(v17, (uint64_t)&a10, (uint64_t *)&unk_2542E05B0);
  if (!a17)
    JUMPOUT(0x23AE07218);
  JUMPOUT(0x23AE070B8);
}

void sub_23AE0722C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  sub_23AA724E8(v10, (uint64_t)&a10, (uint64_t *)&unk_2542E05B0);
  JUMPOUT(0x23AE07088);
}

void sub_23AE07320(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

uint64_t sub_23AE07380()
{
  void *v0;
  void *v1;
  void *v2;

  sub_23AAFA44C(v0, v2, v1, 0);
  sub_23AA7B734();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();

  return 0x28657461657263;
}

void sub_23AE077D8()
{
  uint64_t v0;
  _BYTE v1[48];
  uint64_t v2;
  _BYTE v3[48];

  sub_23AA724E8(v0, (uint64_t)&v2, (uint64_t *)&unk_2542E05B0);
  sub_23AA724E8(v0, (uint64_t)v1, (uint64_t *)&unk_2542E05B0);
  sub_23AA724E8(v0, (uint64_t)v3, (uint64_t *)&unk_2542E05B0);
  __asm { BR              X10 }
}

uint64_t sub_23AE07864()
{
  uint64_t v1;
  char v2;

  sub_23AA96F18(v1, v2);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return 0x28657461657263;
}

uint64_t sub_23AE07B64(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(char *);
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t (*v12)(char *);
  char v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = (uint64_t (*)(char *))result;
    v7 = 0;
    v8 = MEMORY[0x24BEE4AF8];
    v12 = (uint64_t (*)(char *))result;
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      v11 = *(_BYTE *)(a3 + v7 + 32);
      v13 = v11;
      result = v6(&v13);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v14 = v8;
        if ((result & 1) == 0)
        {
          result = sub_23ADACD18(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v14;
        }
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          result = sub_23ADACD18(v9 > 1, v10 + 1, 1);
          v8 = v14;
        }
        *(_QWORD *)(v8 + 16) = v10 + 1;
        *(_BYTE *)(v8 + v10 + 32) = v11;
        v6 = v12;
      }
      if (v5 == ++v7)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_23AE07CA4(unint64_t a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  unint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  void *v38;
  _BYTE v40[16];
  void *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  char v49;
  uint64_t v50;

  v9 = a1;
  v10 = (void *)(a1 + 24);
  swift_beginAccess();
  v11 = *(_QWORD *)(v9 + 24);
  if (*(_QWORD *)(v11 + 16) && (v12 = sub_23ACD5FA0((uint64_t)a2, (uint64_t)a3, (uint64_t)a4, a5), (v13 & 1) != 0))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v11 + 56) + 16 * v12);
    v16 = *v14;
    v15 = v14[1];
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v15 = 0;
    v16 = MEMORY[0x24BEE4AF8];
  }
  v17 = __OFADD__(v15, 1);
  v18 = v15 + 1;
  if (v17)
    goto LABEL_25;
  swift_beginAccess();
  sub_23AAFA44C(a2, a3, a4, a5);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v47 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v9 + 24) = 0x8000000000000000;
  v42 = v16;
  sub_23AD25FC8(v16, v18, a2, a3, a4, a5, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v9 + 24) = v47;
  swift_bridgeObjectRelease();
  sub_23ABE4D94(a2, a3, a4, a5);
  swift_endAccess();
  v20 = objc_msgSend(*(id *)(v9 + 40), sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E67E0);
  v9 = sub_23B1C6704();

  if (v9 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v22 = sub_23B1C7088();
    v21 = swift_bridgeObjectRelease();
    if (v22)
      goto LABEL_8;
  }
  else
  {
    v22 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22)
    {
LABEL_8:
      v44 = v9 & 0xC000000000000001;
      if ((v9 & 0xC000000000000001) != 0)
      {
        v10 = (void *)MEMORY[0x23B85F860](0, v9);
      }
      else
      {
        if (!*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_30:
          MEMORY[0x24BDAC7A8](v21);
          v41 = v10;
          sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23ABD7710, (uint64_t)v40, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318);
        }
        v10 = *(void **)(v9 + 32);
        swift_retain();
      }
      v23 = (void *)swift_retain();
      v24 = objc_sync_enter(v23);
      if ((_DWORD)v24)
      {
LABEL_22:
        MEMORY[0x24BDAC7A8](v24);
        v41 = v10;
        sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23ABD7708, (uint64_t)v40, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314);
      }
      v50 = 0;
      v43 = v9 & 0xFFFFFFFFFFFFFF8;
      v45 = v22 - 1;
      v46 = v9;
      while (1)
      {
        swift_beginAccess();
        sub_23AAFA44C(a2, a3, a4, a5);
        v25 = a2;
        v26 = a2;
        v27 = a3;
        v28 = (uint64_t)a3;
        v29 = a4;
        v30 = a4;
        v31 = a5;
        sub_23ADE12C8((uint64_t)v48, v26, v28, v30, a5);
        swift_endAccess();
        v32 = (void *)v48[0];
        v33 = (void *)v48[1];
        v34 = (void *)v48[2];
        v35 = v49;
        v21 = objc_sync_exit(v10);
        if ((_DWORD)v21)
          goto LABEL_30;
        swift_release_n();
        sub_23ABE4D94(v32, v33, v34, v35);
        v36 = v50;
        v9 = v46;
        if (v45 == v50)
          break;
        a5 = v31;
        a4 = v29;
        a3 = v27;
        a2 = v25;
        v37 = v50 + 1;
        if (v44)
        {
          v10 = (void *)MEMORY[0x23B85F860](v50 + 1, v46);
          if (__OFADD__(v37, 1))
            goto LABEL_23;
        }
        else
        {
          if (v37 >= *(_QWORD *)(v43 + 16))
            goto LABEL_24;
          v10 = *(void **)(v46 + 8 * v50 + 40);
          swift_retain();
          if (__OFADD__(v37, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        v38 = (void *)swift_retain();
        v24 = objc_sync_enter(v38);
        v50 = v36 + 1;
        if ((_DWORD)v24)
          goto LABEL_22;
      }
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AE080B4(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  _BYTE v22[16];
  void *v23;
  uint64_t v24;
  _BYTE v25[48];

  v3 = a1;
  v4 = (void *)(a1 + 24);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 24);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_23ACD6024(a2), (v7 & 1) != 0))
  {
    v8 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v6);
    v10 = *v8;
    v9 = v8[1];
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v9 = 0;
    v10 = MEMORY[0x24BEE4AF8];
  }
  if (__OFADD__(v9, 1))
    goto LABEL_25;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 24) = 0x8000000000000000;
  sub_23AD26148(v10, v9 + 1, a2, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 24) = v24;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v12 = objc_msgSend(*(id *)(v3 + 40), sel_allObjects);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDE70);
  v3 = sub_23B1C6704();

  if (v3 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    v14 = sub_23B1C7088();
    v13 = swift_bridgeObjectRelease();
    if (v14)
      goto LABEL_8;
  }
  else
  {
    v14 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14)
    {
LABEL_8:
      if ((v3 & 0xC000000000000001) != 0)
      {
        v4 = (void *)MEMORY[0x23B85F860](0, v3);
      }
      else
      {
        if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_30:
          MEMORY[0x24BDAC7A8](v13);
          v23 = v4;
          sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23ABD7830, (uint64_t)v22, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318);
        }
        v4 = *(void **)(v3 + 32);
        swift_retain();
      }
      v15 = (void *)swift_retain();
      v16 = objc_sync_enter(v15);
      if ((_DWORD)v16)
      {
LABEL_22:
        MEMORY[0x24BDAC7A8](v16);
        v23 = v4;
        sub_23AFF56B8((uint64_t (*)(uint64_t))sub_23ABD7834, (uint64_t)v22, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314);
      }
      v17 = 0;
      v18 = v14 - 1;
      while (1)
      {
        swift_beginAccess();
        sub_23ADE15DC((uint64_t)v25, a2);
        swift_endAccess();
        v13 = objc_sync_exit(v4);
        if ((_DWORD)v13)
          goto LABEL_30;
        swift_release_n();
        if (v18 == v17)
          break;
        v19 = v17 + 1;
        if ((v3 & 0xC000000000000001) != 0)
        {
          v4 = (void *)MEMORY[0x23B85F860](v17 + 1, v3);
          if (__OFADD__(v19, 1))
            goto LABEL_23;
        }
        else
        {
          if (v19 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_24;
          v4 = *(void **)(v3 + 8 * v17 + 40);
          swift_retain();
          if (__OFADD__(v19, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        v20 = (void *)swift_retain();
        v16 = objc_sync_enter(v20);
        ++v17;
        if ((_DWORD)v16)
          goto LABEL_22;
      }
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AE083F4(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;

  v10 = (uint64_t *)(a1 + 24);
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 24);
  if (*(_QWORD *)(v11 + 16))
  {
    v12 = sub_23ACD5FA0((uint64_t)a2, (uint64_t)a3, (uint64_t)a4, a5);
    if ((v13 & 1) != 0)
    {
      v14 = (uint64_t *)(*(_QWORD *)(v11 + 56) + 16 * v12);
      v16 = *v14;
      v15 = v14[1];
      result = swift_endAccess();
      v18 = v15 - 1;
      if (__OFSUB__(v15, 1))
      {
        __break(1u);
        return result;
      }
      if (!(*(_QWORD *)(v16 + 16) | v18))
      {
        swift_beginAccess();
        sub_23AAFA44C(a2, a3, a4, a5);
        sub_23B182E8C((uint64_t)a2, (uint64_t)a3, (uint64_t)a4, a5);
        swift_endAccess();
        sub_23ABE4D94(a2, a3, a4, a5);
        return swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      sub_23AAFA44C(a2, a3, a4, a5);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v20 = *v10;
      *v10 = 0x8000000000000000;
      sub_23AD25FC8(v16, v18, a2, a3, a4, a5, isUniquelyReferenced_nonNull_native);
      *v10 = v20;
      swift_bridgeObjectRelease();
      sub_23ABE4D94(a2, a3, a4, a5);
    }
  }
  return swift_endAccess();
}

uint64_t sub_23AE085AC(uint64_t a1, unint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v4 = (uint64_t *)(a1 + 24);
  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 24);
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = sub_23ACD6024(a2);
    if ((v7 & 1) != 0)
    {
      v8 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v6);
      v10 = *v8;
      v9 = v8[1];
      swift_endAccess();
      v11 = v9 - 1;
      if (__OFSUB__(v9, 1))
      {
        __break(1u);
        goto LABEL_12;
      }
      if (*(_QWORD *)(v10 + 16) | v11)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v19 = *v4;
        *v4 = 0x8000000000000000;
        sub_23AD26148(v10, v11, a2, isUniquelyReferenced_nonNull_native);
        *v4 = v19;
        goto LABEL_9;
      }
      swift_beginAccess();
      v12 = sub_23ACD6024(a2);
      if ((v13 & 1) != 0)
      {
        a2 = v12;
        v14 = swift_isUniquelyReferenced_nonNull_native();
        v15 = *v4;
        v18 = *v4;
        *v4 = 0x8000000000000000;
        if ((v14 & 1) != 0)
        {
LABEL_7:
          sub_23B1855D8(a2, v15);
          *v4 = v15;
          swift_bridgeObjectRelease();
LABEL_9:
          swift_bridgeObjectRelease();
          return swift_endAccess();
        }
LABEL_12:
        sub_23B18958C();
        v15 = v18;
        goto LABEL_7;
      }
    }
  }
  return swift_endAccess();
}

void sub_23AE08720(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;

  swift_beginAccess();
  v33 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 + 64);
  v35 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v36 = (unint64_t)(v6 + 63) >> 6;
  v38 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v8)
    {
      v41 = (v8 - 1) & v8;
      v42 = v9;
      v10 = __clz(__rbit64(v8)) | (v9 << 6);
      goto LABEL_5;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }
    if (v25 >= v36)
      goto LABEL_21;
    v26 = *(_QWORD *)(v35 + 8 * v25);
    v27 = v9 + 1;
    if (!v26)
    {
      v27 = v9 + 2;
      if (v9 + 2 >= v36)
        goto LABEL_21;
      v26 = *(_QWORD *)(v35 + 8 * v27);
      if (!v26)
      {
        v27 = v9 + 3;
        if (v9 + 3 >= v36)
          goto LABEL_21;
        v26 = *(_QWORD *)(v35 + 8 * v27);
        if (!v26)
          break;
      }
    }
LABEL_20:
    v41 = (v26 - 1) & v26;
    v42 = v27;
    v10 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_5:
    v11 = *(_QWORD *)(v38 + 48) + 32 * v10;
    v12 = *(void **)v11;
    v13 = *(void **)(v11 + 8);
    v14 = *(void **)(v11 + 16);
    v15 = (uint64_t *)(*(_QWORD *)(v38 + 56) + 16 * v10);
    v16 = *v15;
    v17 = v15[1];
    v39 = a2[3];
    v40 = a2[4];
    v18 = *(_BYTE *)(v11 + 24);
    __swift_project_boxed_opaque_existential_1(a2, v39);
    sub_23AAFA44C(v12, v13, v14, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23B1C6EFC();
    sub_23AE07320((uint64_t)v12, (uint64_t)v13, (uint64_t)v14, v18);
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRetain();
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E16F8);
    MEMORY[0x23B85F02C](v16, v23);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRetain();
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E16E0);
    MEMORY[0x23B85F02C](v17, v24);
    sub_23B1C64F4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AEBD130(v20, v22, v39, v40);
    swift_bridgeObjectRelease();
    sub_23ABE4D94(v12, v13, v14, v18);
    v9 = v42;
    v8 = v41;
  }
  v28 = v9 + 4;
  if (v9 + 4 < v36)
  {
    v26 = *(_QWORD *)(v35 + 8 * v28);
    if (!v26)
    {
      while (1)
      {
        v27 = v28 + 1;
        if (__OFADD__(v28, 1))
          goto LABEL_25;
        if (v27 >= v36)
          goto LABEL_21;
        v26 = *(_QWORD *)(v35 + 8 * v27);
        ++v28;
        if (v26)
          goto LABEL_20;
      }
    }
    v27 = v9 + 4;
    goto LABEL_20;
  }
LABEL_21:
  swift_release();
  if ((a3 & 1) != 0)
  {
    v29 = a2[3];
    v30 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v29);
    sub_23AEBD130(0x2064656B636F6C62, 0xED00003A73626F6ALL, v29, v30);
    v31 = a2[3];
    v32 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v31);
    sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23AEB3DFC, v33, v31, MEMORY[0x24BEE4AE0] + 8, v32);
  }
}

uint64_t sub_23AE08AF0(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t i;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v38;
  __int128 v39;
  _OWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  char v44[56];
  int64_t v45;

  swift_beginAccess();
  v33 = a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 + 64);
  v35 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v36 = (unint64_t)(v6 + 63) >> 6;
  v38 = *(_QWORD *)(a1 + 16);
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v45)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v45 = i;
      v12 = v11 | (i << 6);
      goto LABEL_5;
    }
    v25 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    if (v25 >= v36)
      goto LABEL_21;
    v26 = *(_QWORD *)(v35 + 8 * v25);
    v27 = i + 1;
    if (!v26)
    {
      v27 = i + 2;
      if (i + 2 >= v36)
        goto LABEL_21;
      v26 = *(_QWORD *)(v35 + 8 * v27);
      if (!v26)
      {
        v27 = i + 3;
        if (i + 3 >= v36)
          goto LABEL_21;
        v26 = *(_QWORD *)(v35 + 8 * v27);
        if (!v26)
          break;
      }
    }
LABEL_20:
    v8 = (v26 - 1) & v26;
    v45 = v27;
    v12 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_5:
    v13 = *(_QWORD *)(v38 + 48) + 48 * v12;
    v14 = *(_QWORD *)(v13 + 32);
    v15 = *(unsigned __int16 *)(v13 + 40);
    v39 = *(_OWORD *)(*(_QWORD *)(v38 + 56) + 16 * v12);
    v16 = *(_OWORD *)(v13 + 16);
    v40[0] = *(_OWORD *)v13;
    v40[1] = v16;
    v41 = v14;
    v42 = v15;
    v43 = v39;
    sub_23AA724E8((uint64_t)v40, (uint64_t)v44, (uint64_t *)&unk_2542E05B0);
    v18 = a2[3];
    v17 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23B1C6EFC();
    sub_23AE077D8();
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRetain();
    v23 = __swift_instantiateConcreteTypeFromMangledName(qword_2542E16F8);
    MEMORY[0x23B85F02C](v39, v23);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRetain();
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E16E0);
    MEMORY[0x23B85F02C](*((_QWORD *)&v39 + 1), v24);
    sub_23B1C64F4();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AEBD130(v20, v22, v18, v17);
    result = swift_bridgeObjectRelease();
  }
  v28 = i + 4;
  if (i + 4 < v36)
  {
    v26 = *(_QWORD *)(v35 + 8 * v28);
    if (!v26)
    {
      while (1)
      {
        v27 = v28 + 1;
        if (__OFADD__(v28, 1))
          goto LABEL_25;
        if (v27 >= v36)
          goto LABEL_21;
        v26 = *(_QWORD *)(v35 + 8 * v27);
        ++v28;
        if (v26)
          goto LABEL_20;
      }
    }
    v27 = i + 4;
    goto LABEL_20;
  }
LABEL_21:
  result = swift_release();
  if ((a3 & 1) != 0)
  {
    v29 = a2[3];
    v30 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v29);
    sub_23AEBD130(0x2064656B636F6C62, 0xED00003A73626F6ALL, v29, v30);
    v31 = a2[3];
    v32 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v31);
    return sub_23AEBD1D4(8224, 0xE200000000000000, (void (*)(_QWORD *))sub_23AEB3DDC, v33, v31, MEMORY[0x24BEE4AE0] + 8, v32);
  }
  return result;
}

uint64_t sub_23AE08EBC(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t i;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  swift_beginAccess();
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(v4 + 64);
  v27 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v28 = (unint64_t)(v6 + 63) >> 6;
  v31 = *(_QWORD *)(a2 + 32);
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v33)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v33 = i;
      v12 = v11 | (i << 6);
      goto LABEL_5;
    }
    v23 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v23 >= v28)
      return swift_release();
    v24 = *(_QWORD *)(v27 + 8 * v23);
    v25 = i + 1;
    if (!v24)
    {
      v25 = i + 2;
      if (i + 2 >= v28)
        return swift_release();
      v24 = *(_QWORD *)(v27 + 8 * v25);
      if (!v24)
      {
        v25 = i + 3;
        if (i + 3 >= v28)
          return swift_release();
        v24 = *(_QWORD *)(v27 + 8 * v25);
        if (!v24)
          break;
      }
    }
LABEL_20:
    v8 = (v24 - 1) & v24;
    v33 = v25;
    v12 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_5:
    v13 = 16 * v12;
    v14 = (uint64_t *)(*(_QWORD *)(v31 + 48) + v13);
    v16 = *v14;
    v15 = v14[1];
    v17 = (uint64_t *)(*(_QWORD *)(v31 + 56) + v13);
    v18 = *v17;
    v19 = v17[1];
    v20 = a1[3];
    v21 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23B1C6EFC();
    swift_bridgeObjectRelease();
    v32 = v15;
    sub_23B1C64F4();
    v22 = __swift_instantiateConcreteTypeFromMangledName(a3);
    MEMORY[0x23B85F02C](v18, v22);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    MEMORY[0x23B85F02C](v19, v22);
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AEBD130(v16, v32, v20, v21);
    result = swift_bridgeObjectRelease();
  }
  v26 = i + 4;
  if (i + 4 >= v28)
    return swift_release();
  v24 = *(_QWORD *)(v27 + 8 * v26);
  if (v24)
  {
    v25 = i + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v28)
      return swift_release();
    v24 = *(_QWORD *)(v27 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_20;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_23AE09188(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  char v21;
  void *v22;
  unsigned __int16 v23;

  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2738);
  v7 = swift_dynamicCastClass();
  if (v7)
  {
    v8 = v7;
    v9 = sub_23AE58240();
    v2 = v8 + 136;
    v10 = *(_QWORD *)(v8 + 112);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v4 + 328);
LABEL_5:
    swift_retain();
    LOBYTE(v2) = v11(v9, v2, v10, a2 & 1);
    swift_release();
    return v2 & 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E63F0);
  v12 = swift_dynamicCastClass();
  if (v12)
  {
    v13 = v12;
    v9 = sub_23AE58240();
    v2 = v13 + 136;
    v10 = *(_QWORD *)(v13 + 112);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v4 + 336);
    goto LABEL_5;
  }
  (*(void (**)(void **__return_ptr))(*a1 + 408))(&v22);
  v15 = v23;
  if (HIBYTE(v23) < 0xFFu)
  {
    v16 = v22;
    if ((v23 & 0x100) != 0)
    {
      v20 = v22;
      v21 = v23;
      v18 = sub_23AE58240();
      v19 = (*(uint64_t (**)(uint64_t, void **, _QWORD, _QWORD))(*(_QWORD *)v2 + 336))(v18, &v20, a1[14], a2 & 1);
      if (!v3)
        LOBYTE(v2) = v19;
    }
    else
    {
      v20 = v22;
      v17 = sub_23AE58240();
      LOBYTE(v2) = (*(uint64_t (**)(uint64_t, void **, _QWORD, _QWORD))(*(_QWORD *)v2 + 328))(v17, &v20, a1[14], a2 & 1);
      sub_23ADF1CB4(v16, v15);
    }
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  return v2 & 1;
}

uint64_t sub_23AE09348(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  char v21;
  void *v22;
  unsigned __int16 v23;

  v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2730);
  v7 = swift_dynamicCastClass();
  if (v7)
  {
    v8 = v7;
    v9 = sub_23AE57808();
    v2 = v8 + 136;
    v10 = *(_QWORD *)(v8 + 112);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v4 + 328);
LABEL_5:
    swift_retain();
    LOBYTE(v2) = v11(v9, v2, v10, a2 & 1);
    swift_release();
    return v2 & 1;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E63C0);
  v12 = swift_dynamicCastClass();
  if (v12)
  {
    v13 = v12;
    v9 = sub_23AE57808();
    v2 = v13 + 136;
    v10 = *(_QWORD *)(v13 + 112);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v4 + 336);
    goto LABEL_5;
  }
  (*(void (**)(void **__return_ptr))(*a1 + 408))(&v22);
  v15 = v23;
  if (HIBYTE(v23) < 0xFFu)
  {
    v16 = v22;
    if ((v23 & 0x100) != 0)
    {
      v20 = v22;
      v19 = sub_23AE57808();
      LOBYTE(v2) = (*(uint64_t (**)(uint64_t, void **, _QWORD, _QWORD))(*(_QWORD *)v2 + 336))(v19, &v20, a1[14], a2 & 1);
      sub_23ADF1CFC(v16, v15);
    }
    else
    {
      v20 = v22;
      v21 = v23;
      v17 = sub_23AE57808();
      v18 = (*(uint64_t (**)(uint64_t, void **, _QWORD, _QWORD))(*(_QWORD *)v2 + 328))(v17, &v20, a1[14], a2 & 1);
      if (!v3)
        LOBYTE(v2) = v18;
    }
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  return v2 & 1;
}

uint64_t sub_23AE09508(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD **a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  _QWORD *v69;
  int v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  _QWORD *v78;
  _QWORD **v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  void **v87;
  char *v88;
  uint64_t v89;
  int v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD **v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  _QWORD *v102;
  _QWORD *v103;
  char v104;
  _QWORD *v105;
  uint64_t v106;
  char v107;
  _QWORD *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  int v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  int v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  void *v140;
  uint64_t v141;
  uint64_t v142;
  unsigned int (*v143)(uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v155;
  _QWORD **v156;
  uint64_t v157;
  int v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  int v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  int v171;
  void *v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  id v183;
  uint64_t v184;
  char v185;
  id v186;
  id v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  id v204;
  char v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  BOOL v209;
  char v210;
  uint64_t v211;
  uint64_t v212;
  _BYTE *v213;
  char v214;
  char v215;
  char v216;
  id v217;
  uint64_t v218;
  char v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  int v230;
  int v231;
  void *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unsigned int (*v238)(uint64_t, uint64_t, uint64_t);
  void *v239;
  id v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  id v246;
  char v247;
  uint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  char v251;
  void *v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  char v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  int v264;
  id v265;
  char v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  BOOL v270;
  uint64_t v271;
  char v272;
  uint64_t v273;
  int v274;
  BOOL v275;
  char v276;
  id v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  id v282;
  id v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  id v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  id v298;
  char v299;
  id v300;
  void *v301;
  uint64_t v302;
  char v303;
  char v304;
  char v305;
  uint64_t v306;
  char v307;
  uint64_t *v308;
  char v309;
  char v310;
  uint64_t v311;
  void *v312;
  uint64_t v313;
  char v314;
  void *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  int v321;
  int EnumCaseMultiPayload;
  char v323;
  uint64_t v324;
  uint64_t v325;
  char v326;
  id v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  char *v341;
  char *v342;
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  _QWORD **v354;
  _QWORD *v355;
  uint64_t v356;
  uint64_t v357;
  unsigned __int8 v358;
  uint64_t v359;
  int v360;
  char v361;
  unsigned __int8 v362;
  uint64_t v363;
  unsigned __int8 v364;
  unsigned __int8 v365;
  _BYTE v366[496];
  _BYTE v367[496];
  id v368;
  unint64_t v369;

  v354 = a4;
  v353 = a3;
  v346 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E63D0);
  MEMORY[0x24BDAC7A8](v346);
  v348 = (char *)&v328 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v344 = (char *)&v328 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v342 = (char *)&v328 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v349 = *(_QWORD *)(v11 - 8);
  v350 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v338 = (uint64_t)&v328 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v337 = (uint64_t)&v328 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v339 = (uint64_t)&v328 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F10);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v331 = (uint64_t)&v328 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v336 = (uint64_t)&v328 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v330 = (uint64_t)&v328 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v332 = (uint64_t)&v328 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v335 = (uint64_t)&v328 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v333 = (char *)&v328 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v334 = (uint64_t)&v328 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v340 = (char *)&v328 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v341 = (char *)&v328 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v345 = (char *)&v328 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v347 = (uint64_t)&v328 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v328 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40);
  v45 = (char *)&v328 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43);
  v48 = (char *)&v328 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46);
  v51 = (char *)&v328 - v50;
  v52 = MEMORY[0x24BDAC7A8](v49);
  v54 = (char *)&v328 - v53;
  v55 = MEMORY[0x24BDAC7A8](v52);
  v343 = (uint64_t)&v328 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v59 = (char *)&v328 - v58;
  v60 = MEMORY[0x24BDAC7A8](v57);
  v329 = (uint64_t)&v328 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v351 = (uint64_t)&v328 - v63;
  MEMORY[0x24BDAC7A8](v62);
  v352 = (uint64_t)&v328 - v64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EF8);
  v356 = a2;
  v65 = swift_dynamicCastClass();
  if (v65 && a1 == 8)
  {
    v66 = v65 + 136;
    v67 = *(uint64_t (**)(uint64_t, uint64_t))(*v354[4] + 368);
    swift_retain();
    v68 = v66;
    v69 = v355;
    v70 = v67(v68, 1);
    result = swift_release();
    if (!v69)
      return (v70 ^ 1) & 1;
    return result;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6390);
  v72 = swift_dynamicCastClass();
  if (v72 && a1 == 32)
  {
    v73 = v72;
    v74 = v352;
    sub_23AA8EFC8(v353, v352, (uint64_t *)&unk_2569E5F10);
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
    v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48);
    if (v76(v74, 1, v75) == 1)
    {
      v77 = v73;
      swift_retain();
      v78 = v355;
      goto LABEL_9;
    }
    v89 = v351;
    sub_23AA8EFC8(v74, v351, (uint64_t *)&unk_2569E5F10);
    v90 = swift_getEnumCaseMultiPayload() - 2;
    v78 = v355;
    switch(v90)
    {
      case 0:
        v348 = (char *)v75;
        if ((*(_BYTE *)(v89 + 9) & 1) != 0)
          goto LABEL_324;
        v77 = v73;
        v91 = *(id *)v351;
        LODWORD(v351) = *(unsigned __int8 *)(v351 + 8);
        v92 = sub_23B1C63E0();
        v94 = v93;
        if (v92 == sub_23B1C63E0() && v94 == v95)
        {
          swift_retain();
          goto LABEL_124;
        }
        v214 = sub_23B1C7388();
        swift_retain();
        goto LABEL_168;
      case 3:
        v348 = (char *)v75;
        v77 = v73;
        v141 = v89 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8) + 48);
        v142 = v350;
        v143 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v349 + 48);
        if (v143(v89, 1, v350) == 1)
        {
          sub_23AA8A05C(v141, &qword_2542E4770);
          v144 = v89;
LABEL_162:
          sub_23AA8A05C(v144, &qword_2542E4770);
          goto LABEL_163;
        }
        if (v143(v141, 1, v142) != 1)
        {
          sub_23AA8A05C(v89, (uint64_t *)&unk_2542E4760);
          v144 = v141;
          goto LABEL_162;
        }
        v186 = *(id *)v89;
        swift_retain();
        v187 = v186;
        sub_23AA8A05C(v89, (uint64_t *)&unk_2542E4760);
        v188 = sub_23B1C63E0();
        v190 = v189;
        if (v188 == sub_23B1C63E0() && v190 == v191)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_173;
        }
        v214 = sub_23B1C7388();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_169:
        v74 = v352;
        v75 = (uint64_t)v348;
        if ((v214 & 1) != 0)
        {
LABEL_9:
          sub_23AA8A05C(v74, (uint64_t *)&unk_2569E5F10);
          v79 = v354;
          v81 = *(void **)(v77 + 136);
          v80 = v77 + 136;
          sub_23AFFA3FC(v81, &v368);
          if (v78)
            return swift_release();
          v348 = (char *)v75;
          v106 = v80;
          sub_23AA724E8((uint64_t)&v368, (uint64_t)v366, (uint64_t *)&unk_2569E63E0);
          sub_23AA724E8((uint64_t)v366, (uint64_t)v367, (uint64_t *)&unk_2569E63E0);
          if (sub_23AAFC2A4((uint64_t)v367) != 1)
          {
            sub_23AA724E8((uint64_t)v366, (uint64_t)&v359, (uint64_t *)&unk_2569E63E0);
            v107 = v360;
            if ((v360 & 1) == 0)
            {
              v108 = v79[4];
              v109 = v342;
              (*(void (**)(uint64_t, uint64_t))(*v108 + 240))(v106, 1);
              v355 = v108;
              v206 = v109;
              v207 = (uint64_t)v109;
              v208 = v350;
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v349 + 48))(v206, 1, v350) == 1)
              {
                sub_23ADF2D34((uint64_t)v366, (voidsub_23AEB1930);
                swift_release();
                v174 = &qword_2542E4770;
                v175 = v207;
                goto LABEL_202;
              }
              v224 = v207;
              v225 = v339;
              sub_23AA724E8(v224, v339, (uint64_t *)&unk_2542E4760);
              v226 = v225 + *(int *)(v208 + 48);
              LOBYTE(v226) = *(_BYTE *)(v226 + *(int *)(type metadata accessor for ItemMetadata() + 80));
              v227 = v225;
              v228 = v337;
              sub_23AA8EFC8(v227, v337, (uint64_t *)&unk_2542E4760);
              if ((v226 & 1) != 0)
              {
                v229 = v228;
                v230 = *(unsigned __int8 *)(v228 + *(int *)(v350 + 48));
                sub_23AA8A05C(v229, (uint64_t *)&unk_2542E4760);
                if (v230 != 2)
                {
                  swift_release();
                  v231 = v365;
                  sub_23AA8A05C(v339, (uint64_t *)&unk_2542E4760);
                  sub_23ADF2D34((uint64_t)v366, (voidsub_23AEB1930);
                  return v231 == 4 && v361 != 0;
                }
              }
              else
              {
                sub_23AA8A05C(v228, (uint64_t *)&unk_2542E4760);
              }
              v274 = v364;
              if (v359)
                v275 = v364 == 255;
              else
                v275 = 1;
              v276 = v275;
              if (!v275 && (v365 | 4) == 4 || (v362 | 2) != 6 || (v276 & 1) == 0 && (v365 | 2) == 3)
                goto LABEL_252;
              if (v362 != 4)
                goto LABEL_329;
              if (v364 == 255)
                goto LABEL_330;
              v357 = v363;
              v358 = v364;
              v306 = v329;
              sub_23AA8EFC8(v353, v329, (uint64_t *)&unk_2569E5F10);
              if (v76(v306, 1, (uint64_t)v348) == 1)
              {
                sub_23AA8A05C(v306, (uint64_t *)&unk_2569E5F10);
                if ((v107 & 0x10) != 0)
                {
LABEL_328:
                  v274 = v364;
                  v79 = v354;
LABEL_329:
                  if (v274 != 255)
                  {
                    v357 = v363;
                    v358 = v274;
                    v324 = (*(uint64_t (**)(uint64_t *))(*v79[3] + 248))(&v357);
                    if (v324)
                    {
                      v325 = *(_QWORD *)(v324 + 128);
                      swift_release();
                      swift_release();
                      sub_23AA8A05C(v339, (uint64_t *)&unk_2542E4760);
                      sub_23ADF2D34((uint64_t)v366, (voidsub_23AEB1930);
                      return (v325 & 2) == 0;
                    }
                  }
LABEL_330:
                  swift_release();
                  sub_23AA8A05C(v339, (uint64_t *)&unk_2542E4760);
                  sub_23ADF2D34((uint64_t)v366, (voidsub_23AEB1930);
                  return 1;
                }
              }
              else
              {
                EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                sub_23AA8A05C(v306, &qword_2542DDFC0);
                if (EnumCaseMultiPayload == 2 || (v107 & 0x10) != 0)
                  goto LABEL_328;
              }
              v323 = (*(uint64_t (**)(uint64_t))(*v355 + 464))(v106);
              if ((v323 & 1) == 0
                && ((*(uint64_t (**)(uint64_t *, uint64_t))(*v354[5] + 416))(&v357, 1) & 1) != 0)
              {
LABEL_252:
                swift_release();
                sub_23AA8A05C(v339, (uint64_t *)&unk_2542E4760);
                sub_23ADF2D34((uint64_t)v366, (voidsub_23AEB1930);
                return 0;
              }
              goto LABEL_328;
            }
            sub_23ADF2D34((uint64_t)v366, (voidsub_23AEB1930);
          }
LABEL_74:
          swift_release();
          return 1;
        }
        swift_release();
        goto LABEL_324;
      case 8:
        v348 = (char *)v75;
        v77 = v73;
        v145 = *(void **)(v89 + 16);
        v146 = *(unsigned __int16 *)(v89 + 24);
        if ((*(_BYTE *)(v89 + 9) & 1) == 0)
          goto LABEL_117;
        if (v146 >> 8 > 0xFE || (v146 & 0x100) != 0)
          goto LABEL_324;
        v89 = v351;
        if (*(_BYTE *)(v351 + 27) != 2)
        {
LABEL_117:
          v151 = v145;
          v152 = v146;
          goto LABEL_118;
        }
        v147 = sub_23B1C63E0();
        v149 = v148;
        if (v147 == sub_23B1C63E0() && v149 == v150)
        {
          swift_retain();
          swift_bridgeObjectRelease_n();
          sub_23ADF1CB4(v145, v146);
LABEL_274:
          v183 = *(id *)v351;
          v185 = *(_BYTE *)(v351 + 9);
          v184 = *(unsigned __int8 *)(v351 + 8);
          goto LABEL_166;
        }
        LODWORD(v347) = sub_23B1C7388();
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23ADF1CB4(v145, v146);
        if ((v347 & 1) != 0)
          goto LABEL_274;
        swift_release();
        v265 = *(id *)v351;
        v266 = *(_BYTE *)(v351 + 9);
        v267 = *(unsigned __int8 *)(v351 + 8);
LABEL_226:
        sub_23AB7C6B4(v265, v267, v266);
        goto LABEL_163;
      case 9:
        if ((*(_BYTE *)(v89 + 9) & 1) == 0)
        {
          v348 = (char *)v75;
          v198 = v73;
          v199 = *(id *)v89;
          LODWORD(v347) = *(unsigned __int8 *)(v89 + 8);
          v77 = v198;
          v200 = sub_23B1C63E0();
          v202 = v201;
          if (v200 == sub_23B1C63E0() && v202 == v203)
          {
            swift_retain();
            swift_bridgeObjectRelease_n();
            sub_23AB7C6B4(v199, v347, 0);
          }
          else
          {
            v216 = sub_23B1C7388();
            swift_retain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23AB7C6B4(v199, v347, 0);
            if ((v216 & 1) == 0)
            {
              swift_release();
              sub_23ADF1CB4(*(void **)(v351 + 16), *(unsigned __int16 *)(v351 + 24));
LABEL_163:
              v74 = v352;
              goto LABEL_324;
            }
          }
          sub_23ADF1CB4(*(void **)(v351 + 16), *(unsigned __int16 *)(v351 + 24));
          goto LABEL_173;
        }
        v151 = *(void **)(v89 + 16);
        v152 = *(unsigned __int16 *)(v89 + 24);
LABEL_118:
        sub_23ADF1CB4(v151, v152);
LABEL_119:
        sub_23AB7C6B4(*(id *)v89, *(unsigned __int8 *)(v89 + 8), *(_BYTE *)(v89 + 9));
        goto LABEL_324;
      case 12:
        if ((*(_BYTE *)(v89 + 9) & 1) != 0)
        {

          goto LABEL_119;
        }
        v368 = *(id *)(v89 + 16);
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_174;
        if (v367[0] == 3)
        {
          v204 = *(id *)v89;
          LODWORD(v354) = *(unsigned __int8 *)(v89 + 8);
          v205 = *(_BYTE *)(v89 + 9);
        }
        else
        {
          if (v367[0] != 5)
            goto LABEL_174;
          v204 = *(id *)v351;
          LODWORD(v354) = *(unsigned __int8 *)(v351 + 8);
          v205 = *(_BYTE *)(v351 + 9);
        }
        v294 = sub_23B1C63E0();
        v296 = v295;
        if (v294 == sub_23B1C63E0() && v296 == v297)
        {
          v298 = v204;
          swift_bridgeObjectRelease_n();
          sub_23AB7C6B4(v204, v354, v205);
LABEL_268:
          swift_release();
          v268 = v352;

          sub_23AB7C6B4(*(id *)v351, *(unsigned __int8 *)(v351 + 8), *(_BYTE *)(v351 + 9));
          goto LABEL_269;
        }
        v299 = sub_23B1C7388();
        v300 = v204;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23AB7C6B4(v204, v354, v205);
        if ((v299 & 1) != 0)
          goto LABEL_268;
LABEL_174:

        v217 = *(id *)v351;
        v218 = *(unsigned __int8 *)(v351 + 8);
        v219 = *(_BYTE *)(v351 + 9);
        v220 = sub_23B1C63E0();
        v222 = v221;
        if (v220 == sub_23B1C63E0() && v222 == v223)
        {
          swift_release();
          swift_bridgeObjectRelease_n();
          sub_23AB7C6B4(v217, v218, v219);
          v74 = v352;
          goto LABEL_201;
        }
        v251 = sub_23B1C7388();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23AB7C6B4(v217, v218, v219);
        v74 = v352;
        if ((v251 & 1) != 0)
          goto LABEL_201;
        goto LABEL_324;
      case 13:
        v140 = *(void **)(v89 + 16);
        swift_retain();

        if ((*(_BYTE *)(v89 + 9) & 1) != 0)
        {
          swift_release();
          goto LABEL_119;
        }
        v348 = (char *)v75;
        v178 = v73;
        v91 = *(id *)v89;
        LODWORD(v351) = *(unsigned __int8 *)(v89 + 8);
        v77 = v178;
        v179 = sub_23B1C63E0();
        v181 = v180;
        if (v179 == sub_23B1C63E0() && v181 == v182)
        {
LABEL_124:
          swift_bridgeObjectRelease_n();
          v183 = v91;
          v184 = v351;
          v185 = 0;
          goto LABEL_166;
        }
        v214 = sub_23B1C7388();
LABEL_168:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23AB7C6B4(v91, v351, 0);
        goto LABEL_169;
      case 19:
        v77 = v73;
        swift_retain();
        swift_release();
        goto LABEL_9;
      case 29:
        if ((*(_BYTE *)(v89 + 9) & 1) != 0)
        {
          sub_23AB7C6B4(*(id *)(v89 + 16), *(unsigned __int8 *)(v89 + 24), *(_BYTE *)(v89 + 25));
          goto LABEL_119;
        }
        v348 = (char *)v75;
        v192 = v73;
        v193 = *(id *)v89;
        LODWORD(v347) = *(unsigned __int8 *)(v89 + 8);
        v77 = v192;
        v194 = sub_23B1C63E0();
        v196 = v195;
        if (v194 == sub_23B1C63E0() && v196 == v197)
        {
          swift_retain();
          swift_bridgeObjectRelease_n();
          sub_23AB7C6B4(v193, v347, 0);
        }
        else
        {
          v215 = sub_23B1C7388();
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23AB7C6B4(v193, v347, 0);
          if ((v215 & 1) == 0)
          {
            swift_release();
            v265 = *(id *)(v351 + 16);
            v266 = *(_BYTE *)(v351 + 25);
            v267 = *(unsigned __int8 *)(v351 + 24);
            goto LABEL_226;
          }
        }
        v183 = *(id *)(v351 + 16);
        v185 = *(_BYTE *)(v351 + 25);
        v184 = *(unsigned __int8 *)(v351 + 24);
LABEL_166:
        sub_23AB7C6B4(v183, v184, v185);
LABEL_173:
        v74 = v352;
        v75 = (uint64_t)v348;
        goto LABEL_9;
      default:
        sub_23AA8A05C(v89, &qword_2542DDFC0);
        goto LABEL_324;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6388);
  v82 = swift_dynamicCastClass();
  if (!v82)
  {
    if (a1 == 0x40000)
      goto LABEL_32;
    v83 = a1;
    if (a1 != 256)
      goto LABEL_26;
    goto LABEL_49;
  }
  v83 = a1;
  if (a1 > 255)
  {
    if (a1 != 256)
    {
      if (a1 != 0x40000)
        goto LABEL_39;
LABEL_32:
      v99 = v356;
      if (*(_BYTE *)(v356 + 104) || (*(_BYTE *)(v356 + 89) & 1) != 0)
      {
        sub_23AA8EFC8(v353, (uint64_t)v45, (uint64_t *)&unk_2569E5F10);
        v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
        v101 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 48))(v45, 1, v100);
        v102 = v355;
        if (v101 != 1)
        {
          sub_23AA8EFC8((uint64_t)v45, (uint64_t)v42, (uint64_t *)&unk_2569E5F10);
          if (swift_getEnumCaseMultiPayload() != 13)
          {
            v176 = v42;
            goto LABEL_207;
          }
          v133 = *(void **)v42;
          v134 = v42[9];
          v135 = v42[10];
          v136 = v42[8];
          v137 = sub_23ADFE4A0(v99);
          LOBYTE(v135) = sub_23B1A6158(v133, v136 | (v135 << 16) | (v134 << 8), v137);
          swift_bridgeObjectRelease();
          sub_23AB7C6B4(v133, v136, v134);
          if ((v135 & 1) == 0)
            goto LABEL_208;
        }
        sub_23AA8A05C((uint64_t)v45, (uint64_t *)&unk_2569E5F10);
        v103 = (_QWORD *)v99;
        v104 = 1;
        v105 = v102;
        goto LABEL_52;
      }
LABEL_54:
      v123 = 1;
      return v123 & 1;
    }
LABEL_49:
    if ((((uint64_t (*)(void))(*v354)[19])() & 0x100) != 0)
      goto LABEL_54;
    sub_23AA8EFC8(v353, (uint64_t)v51, (uint64_t *)&unk_2569E5F10);
    v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 48))(v51, 1, v122) == 1)
    {
LABEL_51:
      sub_23AA8A05C((uint64_t)v51, (uint64_t *)&unk_2569E5F10);
      v105 = v355;
      v103 = (_QWORD *)v356;
      v104 = 0;
LABEL_52:
      result = sub_23AE09188(v103, v104);
      if (v105)
        return result;
      return (result ^ 1) & 1;
    }
    sub_23AA8EFC8((uint64_t)v51, (uint64_t)v48, (uint64_t *)&unk_2569E5F10);
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      v166 = *(void **)v48;
      v167 = v48[9];
      v168 = v48[10];
      v169 = v48[8];
      v170 = sub_23ADFE4A0(v356);
      LOBYTE(v168) = sub_23B1A6158(v166, v169 | (v168 << 16) | (v167 << 8), v170);
      swift_bridgeObjectRelease();
      sub_23AB7C6B4(v166, v169, v167);
      if ((v168 & 1) != 0)
        goto LABEL_51;
    }
    else
    {
      sub_23AA8A05C((uint64_t)v48, &qword_2542DDFC0);
    }
    sub_23AA8A05C((uint64_t)v51, (uint64_t *)&unk_2569E5F10);
    return 0;
  }
  if (a1 == 64)
  {
    v84 = v82;
    sub_23AA8EFC8(v353, (uint64_t)v59, (uint64_t *)&unk_2569E5F10);
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v59, 1, v85) != 1)
    {
      v138 = v343;
      sub_23AA8EFC8((uint64_t)v59, v343, (uint64_t *)&unk_2569E5F10);
      v139 = swift_getEnumCaseMultiPayload() - 4;
      v86 = v355;
      switch(v139)
      {
        case 0:
          if ((*(_BYTE *)(v138 + 9) & 1) != 0)
          {
            sub_23AB7C6B4(*(id *)(v138 + 16), *(unsigned __int8 *)(v138 + 24), *(_BYTE *)(v138 + 25));
            goto LABEL_197;
          }
          v277 = *(id *)v138;
          LODWORD(v353) = *(unsigned __int8 *)(v138 + 8);
          v278 = sub_23B1C63E0();
          v280 = v279;
          if (v278 == sub_23B1C63E0() && v280 == v281)
          {
            swift_retain();
            swift_bridgeObjectRelease_n();
            sub_23AB7C6B4(v277, v353, 0);
          }
          else
          {
            v303 = sub_23B1C7388();
            swift_retain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23AB7C6B4(v277, v353, 0);
            if ((v303 & 1) == 0)
            {
              swift_release();
              v246 = *(id *)(v343 + 16);
              v247 = *(_BYTE *)(v343 + 25);
              v248 = *(unsigned __int8 *)(v343 + 24);
LABEL_198:
              sub_23AB7C6B4(v246, v248, v247);
LABEL_199:
              v249 = (uint64_t *)&unk_2569E5F10;
              v250 = (uint64_t)v59;
              goto LABEL_325;
            }
          }
          sub_23AB7C6B4(*(id *)(v343 + 16), *(unsigned __int8 *)(v343 + 24), *(_BYTE *)(v343 + 25));
          goto LABEL_17;
        case 1:
          v236 = v138 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8) + 48);
          v237 = v350;
          v238 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v349 + 48);
          if (v238(v138, 1, v350) == 1)
          {
            sub_23AA8A05C(v236, &qword_2542E4770);
            sub_23AA8A05C(v138, &qword_2542E4770);
            goto LABEL_199;
          }
          if (v238(v236, 1, v237) != 1)
          {
            sub_23AA8A05C(v138, (uint64_t *)&unk_2542E4760);
            sub_23AA8A05C(v236, &qword_2542E4770);
            goto LABEL_199;
          }
          v282 = *(id *)v138;
          swift_retain();
          v283 = v282;
          sub_23AA8A05C(v138, (uint64_t *)&unk_2542E4760);
          v284 = sub_23B1C63E0();
          v286 = v285;
          if (v284 == sub_23B1C63E0() && v286 == v287)
          {

            swift_bridgeObjectRelease_n();
            goto LABEL_17;
          }
          v309 = sub_23B1C7388();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v309 & 1) == 0)
            goto LABEL_302;
          goto LABEL_17;
        case 6:
          v234 = *(void **)(v138 + 16);
          v235 = *(unsigned __int16 *)(v138 + 24);
          if (*(_BYTE *)(v138 + 27))
          {
            sub_23ADF1CB4(*(void **)(v138 + 16), *(unsigned __int16 *)(v138 + 24));
            goto LABEL_197;
          }
          swift_retain();
          sub_23ADF1CB4(v234, v235);
          sub_23AB7C6B4(*(id *)v138, *(unsigned __int8 *)(v138 + 8), *(_BYTE *)(v138 + 9));
          goto LABEL_17;
        case 10:
          v239 = *(void **)(v138 + 16);
          swift_retain();

          if ((*(_BYTE *)(v138 + 9) & 1) != 0)
            goto LABEL_196;
          v240 = *(id *)v138;
          LODWORD(v353) = *(unsigned __int8 *)(v138 + 8);
          v241 = sub_23B1C63E0();
          v243 = v242;
          if (v241 == sub_23B1C63E0() && v243 == v244)
          {
            swift_bridgeObjectRelease_n();
            sub_23AB7C6B4(v240, v353, 0);
            goto LABEL_17;
          }
          v304 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23AB7C6B4(v240, v353, 0);
          if ((v304 & 1) != 0)
            goto LABEL_17;
LABEL_302:
          swift_release();
          goto LABEL_199;
        case 11:
          v245 = *(void **)(v138 + 16);
          swift_retain();

          if ((*(_BYTE *)(v138 + 9) & 1) != 0)
          {
LABEL_196:
            swift_release();
LABEL_197:
            v246 = *(id *)v138;
            v247 = *(_BYTE *)(v138 + 9);
            v248 = *(unsigned __int8 *)(v138 + 8);
            goto LABEL_198;
          }
          v288 = *(id *)v138;
          v289 = *(unsigned __int8 *)(v138 + 8);
          v290 = sub_23B1C63E0();
          v292 = v291;
          if (v290 == sub_23B1C63E0() && v292 == v293)
          {
            swift_release();
            swift_bridgeObjectRelease_n();
            sub_23AB7C6B4(v288, v289, 0);
          }
          else
          {
            v305 = sub_23B1C7388();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23AB7C6B4(v288, v289, 0);
            if ((v305 & 1) == 0)
              goto LABEL_199;
          }
          v174 = (uint64_t *)&unk_2569E5F10;
          v175 = (uint64_t)v59;
          goto LABEL_202;
        default:
          sub_23AA8A05C(v138, &qword_2542DDFC0);
          goto LABEL_199;
      }
    }
    swift_retain();
    v86 = v355;
LABEL_17:
    sub_23AA8A05C((uint64_t)v59, (uint64_t *)&unk_2569E5F10);
    v87 = (void **)(v84 + 136);
    v88 = v344;
    (*(void (**)(void **, uint64_t))(*v354[4] + 240))(v87, 1);
    if (v86)
      return swift_release();
    v177 = v350;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v349 + 48))(v88, 1, v350) == 1)
    {
      swift_release();
      v174 = &qword_2542E4770;
      v175 = (uint64_t)v88;
      goto LABEL_202;
    }
    v211 = (uint64_t)v88;
    v212 = v338;
    sub_23AA724E8(v211, v338, (uint64_t *)&unk_2542E4760);
    v213 = (_BYTE *)(v212 + *(int *)(v177 + 48));
    if (*v213 == 2)
    {
      sub_23AA8A05C(v212, (uint64_t *)&unk_2542E4760);
      goto LABEL_74;
    }
    if (v213[*(int *)(type metadata accessor for ItemMetadata() + 80)] != 1)
    {
      sub_23AA8A05C(v212, (uint64_t *)&unk_2542E4760);
      swift_release();
      return 0;
    }
    sub_23AFFA3FC(*v87, &v368);
    sub_23AA724E8((uint64_t)&v368, (uint64_t)v366, (uint64_t *)&unk_2569E63E0);
    sub_23AA724E8((uint64_t)v366, (uint64_t)v367, (uint64_t *)&unk_2569E63E0);
    if (sub_23AAFC2A4((uint64_t)v367) == 1)
    {
      sub_23AA8A05C(v212, (uint64_t *)&unk_2542E4760);
      swift_release();
      sub_23AA724E8((uint64_t)&v368, (uint64_t)&v359, (uint64_t *)&unk_2569E63E0);
      v308 = &v359;
LABEL_321:
      sub_23ADF2D34((uint64_t)v308, (voidsub_23AEB1930);
      return 1;
    }
    sub_23AA724E8((uint64_t)v366, (uint64_t)&v359, (uint64_t *)&unk_2569E63E0);
    v320 = v359;
    swift_release();
    if (!v320)
    {
      sub_23AA8A05C(v212, (uint64_t *)&unk_2542E4760);
      v308 = (uint64_t *)v366;
      goto LABEL_321;
    }
    v321 = v364;
    sub_23AA8A05C(v212, (uint64_t *)&unk_2542E4760);
    sub_23ADF2D34((uint64_t)v366, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AEB1930);
    if (v321 == 255)
      return 1;
    v209 = v365 == 0;
    goto LABEL_150;
  }
LABEL_26:
  if (v83 == 128)
  {
    v96 = v354;
    if ((((uint64_t (*)(void))(*v354)[19])() & 0x100) == 0)
    {
      v97 = *(int *)(v346 + 48);
      v45 = v348;
      sub_23AA8EFC8(v353, (uint64_t)v348, (uint64_t *)&unk_2569E5F10);
      *(_QWORD *)&v45[v97] = v356;
      v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 48))(v45, 1, v98) == 1)
      {
        swift_retain();
        goto LABEL_205;
      }
      sub_23AA8EFC8((uint64_t)v45, (uint64_t)v54, (uint64_t *)&unk_2569E5F10);
      if (swift_getEnumCaseMultiPayload() != 11)
      {
        swift_retain();
        sub_23AA8A05C((uint64_t)v54, &qword_2542DDFC0);
        goto LABEL_205;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6358);
      if (!swift_dynamicCastClass())
      {
        v252 = (void *)*((_QWORD *)v54 + 2);
        v253 = *((unsigned __int16 *)v54 + 12);
        swift_retain();
        sub_23ADF1CB4(v252, v253);
        sub_23AB7C6B4(*(id *)v54, v54[8], v54[9]);
        goto LABEL_205;
      }
      v171 = v54[27];
      v172 = (void *)*((_QWORD *)v54 + 2);
      v173 = *((unsigned __int16 *)v54 + 12);
      swift_retain();
      sub_23ADF1CB4(v172, v173);
      sub_23AB7C6B4(*(id *)v54, v54[8], v54[9]);
      if (v171 != 6)
      {
LABEL_205:
        v254 = sub_23AA8A05C((uint64_t)v45, (uint64_t *)&unk_2569E63D0);
        v255 = (void *)((uint64_t (*)(uint64_t))(*v96)[33])(v254);
        v256 = sub_23AFEA074((uint64_t)sub_23AB6FFCC, 0);

        return v256 & 1;
      }
      swift_release();
LABEL_115:
      v174 = (uint64_t *)&unk_2569E5F10;
      v175 = (uint64_t)v45;
LABEL_202:
      sub_23AA8A05C(v175, v174);
      return 1;
    }
    goto LABEL_54;
  }
LABEL_39:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6340);
  v110 = v356;
  if (swift_dynamicCastClass() && v83 == 2048)
  {
    v45 = (char *)v347;
    sub_23AA8EFC8(v353, v347, (uint64_t *)&unk_2569E5F10);
    v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 48))(v45, 1, v111) == 1)
      goto LABEL_208;
    sub_23AA8EFC8((uint64_t)v45, (uint64_t)v345, (uint64_t *)&unk_2569E5F10);
    v112 = swift_getEnumCaseMultiPayload();
    if (v112 == 43)
      goto LABEL_115;
    if (v112 == 19)
    {
      if ((v345[17] & 1) == 0)
      {
        v113 = (void *)*((_QWORD *)v345 + 1);
        v114 = v345[16];
        v115 = *v345;
        if (qword_23B1DB328[(char)sub_23AE58240()] == qword_23B1DB328[v115])
        {
          v116 = sub_23B1C63E0();
          v118 = v117;
          if (v116 == sub_23B1C63E0() && v118 == v119)
          {
            swift_bridgeObjectRelease_n();
            v120 = v113;
            v121 = v114;
LABEL_66:
            sub_23AB7C6B4(v120, v121, 0);
            goto LABEL_115;
          }
          v307 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23AB7C6B4(v113, v114, 0);
          if ((v307 & 1) != 0)
            goto LABEL_115;
          goto LABEL_208;
        }
        v301 = v113;
        v302 = v114;
        goto LABEL_297;
      }
      goto LABEL_208;
    }
    v176 = v345;
    goto LABEL_207;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6240);
  if (swift_dynamicCastClass() && v83 == 2048)
  {
    v45 = v341;
    sub_23AA8EFC8(v353, (uint64_t)v341, (uint64_t *)&unk_2569E5F10);
    v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 48))(v45, 1, v124) == 1)
      goto LABEL_208;
    sub_23AA8EFC8((uint64_t)v45, (uint64_t)v340, (uint64_t *)&unk_2569E5F10);
    v125 = swift_getEnumCaseMultiPayload();
    if (v125 == 43)
      goto LABEL_115;
    if (v125 == 19)
    {
      if ((v340[17] & 1) == 0)
      {
        v126 = (void *)*((_QWORD *)v340 + 1);
        v127 = v340[16];
        v128 = *v340;
        if (qword_23B1DB328[(char)sub_23AE58240()] == qword_23B1DB328[v128])
        {
          v129 = sub_23B1C63E0();
          v131 = v130;
          if (v129 == sub_23B1C63E0() && v131 == v132)
          {
            swift_bridgeObjectRelease_n();
            v120 = v126;
            v121 = v127;
            goto LABEL_66;
          }
          v310 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23AB7C6B4(v126, v127, 0);
          if ((v310 & 1) != 0)
            goto LABEL_115;
          goto LABEL_208;
        }
        v301 = v126;
        v302 = v127;
LABEL_297:
        sub_23AB7C6B4(v301, v302, 0);
      }
LABEL_208:
      v249 = (uint64_t *)&unk_2569E5F10;
      v250 = (uint64_t)v45;
      goto LABEL_325;
    }
    v176 = v340;
LABEL_207:
    sub_23AA8A05C((uint64_t)v176, &qword_2542DDFC0);
    goto LABEL_208;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EF0);
  v153 = swift_dynamicCastClass();
  v154 = v83 < 0x20000;
  v155 = v83;
  if (!v153)
  {
    v156 = v354;
    if (!v154)
      goto LABEL_146;
    if (v155 == 1)
    {
LABEL_228:
      v268 = v335;
      sub_23AA8EFC8(v353, v335, (uint64_t *)&unk_2569E5F10);
      v269 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v269 - 8) + 48))(v268, 1, v269) != 1)
      {
        v270 = swift_getEnumCaseMultiPayload() == 40;
        sub_23AA8A05C(v268, &qword_2542DDFC0);
        return v270;
      }
LABEL_269:
      v249 = (uint64_t *)&unk_2569E5F10;
      v250 = v268;
      goto LABEL_325;
    }
    if (v155 == 0x2000)
    {
LABEL_218:
      if ((((uint64_t (*)(void))(*v156)[19])() & 0x80) == 0)
        return 1;
      v261 = v332;
      sub_23AA8EFC8(v353, v332, (uint64_t *)&unk_2569E5F10);
      v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v262 - 8) + 48))(v261, 1, v262) != 1)
      {
        v263 = v330;
        sub_23AA8EFC8(v261, v330, (uint64_t *)&unk_2569E5F10);
        v264 = swift_getEnumCaseMultiPayload();
        sub_23AA8A05C(v263, &qword_2542DDFC0);
        if (v264 == 27)
        {
          v174 = (uint64_t *)&unk_2569E5F10;
          v175 = v261;
          goto LABEL_202;
        }
      }
      goto LABEL_239;
    }
LABEL_211:
    if (a1 == 0x10000)
      return 1;
    goto LABEL_212;
  }
  v156 = v354;
  if (v154)
  {
    if (v155 < 0x2000)
    {
      if (v155 != 1)
      {
        if (v155 == 2048)
        {
          v74 = v334;
          sub_23AA8EFC8(v353, v334, (uint64_t *)&unk_2569E5F10);
          v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 48))(v74, 1, v157) == 1)goto LABEL_324;
          sub_23AA8EFC8(v74, (uint64_t)v333, (uint64_t *)&unk_2569E5F10);
          v158 = swift_getEnumCaseMultiPayload();
          if (v158 != 43)
          {
            if (v158 != 19)
            {
              sub_23AA8A05C((uint64_t)v333, &qword_2542DDFC0);
              goto LABEL_324;
            }
            if ((v333[17] & 1) != 0)
            {
LABEL_324:
              v249 = (uint64_t *)&unk_2569E5F10;
              v250 = v74;
              goto LABEL_325;
            }
            v159 = (void *)*((_QWORD *)v333 + 1);
            v160 = v333[16];
            v161 = *v333;
            if (qword_23B1DB328[(char)sub_23AE58240()] != qword_23B1DB328[v161])
            {
              sub_23AB7C6B4(v159, v160, 0);
              v74 = v334;
              goto LABEL_324;
            }
            v162 = sub_23B1C63E0();
            v164 = v163;
            if (v162 == sub_23B1C63E0() && v164 == v165)
            {
              swift_bridgeObjectRelease_n();
              sub_23AB7C6B4(v159, v160, 0);
              v74 = v334;
            }
            else
            {
              v326 = sub_23B1C7388();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_23AB7C6B4(v159, v160, 0);
              v74 = v334;
              if ((v326 & 1) == 0)
                goto LABEL_324;
            }
          }
LABEL_201:
          v174 = (uint64_t *)&unk_2569E5F10;
          v175 = v74;
          goto LABEL_202;
        }
        goto LABEL_212;
      }
      goto LABEL_228;
    }
    if (v155 == 0x2000)
      goto LABEL_218;
    goto LABEL_211;
  }
LABEL_146:
  if (v155 < 0x200000)
  {
    if (v155 != 0x20000)
    {
      if (v155 == 0x80000)
      {
        v209 = (((uint64_t (*)(void))(*v156)[20])() & 1) == 0;
LABEL_150:
        v210 = v209;
        return v210 & 1;
      }
      goto LABEL_212;
    }
    v261 = v336;
    sub_23AA8EFC8(v353, v336, (uint64_t *)&unk_2569E5F10);
    v273 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v273 - 8) + 48))(v261, 1, v273) != 1)
    {
      if (swift_getEnumCaseMultiPayload() == 23)
        return 1;
      v249 = &qword_2542DDFC0;
      goto LABEL_277;
    }
LABEL_239:
    v249 = (uint64_t *)&unk_2569E5F10;
LABEL_277:
    v250 = v261;
    goto LABEL_325;
  }
  if (v155 == 0x200000)
  {
    if (*(_QWORD *)(v110 + 128) != 0x8000)
      return 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2738);
    if (!swift_dynamicCastClass())
      return 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8160);
    if (!swift_dynamicCastClass())
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
      if (!swift_dynamicCastClass())
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E63A0);
        if (!swift_dynamicCastClass())
          return 1;
      }
    }
    v271 = qword_2542E6EE0;
    swift_retain();
    if (v271 != -1)
      swift_once();
    v272 = sub_23AFEA074((uint64_t)sub_23AB6FFCC, 0);
    swift_release();
    return v272 & 1;
  }
  if (a1 == 0x400000)
  {
    LODWORD(result) = ((uint64_t (*)(void))(*v156)[32])();
    return (result ^ 1) & 1;
  }
LABEL_212:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61F8);
  v257 = swift_dynamicCastClass();
  if (v257)
  {
    if (a1 != 0x1000000)
    {
      if (a1 == 0x800000)
      {
        v258 = v257;
        v259 = v331;
        sub_23AA8EFC8(v353, v331, (uint64_t *)&unk_2569E5F10);
        v260 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v260 - 8) + 48))(v259, 1, v260) == 1)
        {
          v249 = (uint64_t *)&unk_2569E5F10;
          v250 = v259;
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 37)
          {
            v311 = *(char *)(v259 + 10);
            v312 = *(void **)v259;
            v313 = *(unsigned __int8 *)(v259 + 8);
            v314 = *(_BYTE *)(v259 + 9);
            if (qword_23B1DB328[(char)sub_23AE58240()] != qword_23B1DB328[v311])
            {
              sub_23AB7C6B4(v312, v313, v314);
              return 0;
            }
            if ((v314 & 1) != 0)
              return 0;
            v315 = *(void **)(v258 + 136);
            v316 = sub_23B1C63E0();
            v318 = v317;
            if (v316 == sub_23B1C63E0() && v318 == v319)
              v123 = 1;
            else
              v123 = sub_23B1C7388();
            v327 = v315;
            sub_23AB5692C(v312, v313, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23AB7C6B4(v312, v313, 0);

            sub_23AB7C6B4(v312, v313, 0);
            return v123 & 1;
          }
          v249 = &qword_2542DDFC0;
          v250 = v259;
        }
LABEL_325:
        sub_23AA8A05C(v250, v249);
        return 0;
      }
LABEL_340:
      v368 = 0;
      v369 = 0xE000000000000000;
      sub_23B1C6EFC();
      swift_bridgeObjectRelease();
      v368 = (id)0xD000000000000024;
      v369 = 0x800000023B1F92D0;
      sub_23AE17C44();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      result = sub_23B1C704C();
      __break(1u);
      return result;
    }
  }
  else if (a1 != 0x1000000)
  {
    goto LABEL_340;
  }
  if (qword_2569E12A8 != -1)
    swift_once();
  return sub_23AFEA074((uint64_t)sub_23AB6FFCC, 0) & 1;
}

uint64_t sub_23AE0BD0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t result;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  id v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  _QWORD *v103;
  char v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  char *v115;
  int EnumCaseMultiPayload;
  uint64_t v117;
  int v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  char *v126;
  int v127;
  uint64_t v128;
  int v129;
  void *v130;
  int v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  void *v137;
  uint64_t v138;
  unsigned int (*v139)(uint64_t, uint64_t, uint64_t);
  uint64_t v140;
  void *v141;
  uint64_t v142;
  id v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  char *v151;
  int v152;
  uint64_t v153;
  int v154;
  id v155;
  uint64_t v156;
  char v157;
  void *v158;
  int v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  void *v164;
  uint64_t v165;
  id v166;
  int v167;
  id v168;
  uint64_t v169;
  uint64_t v170;
  id v171;
  int v172;
  int v173;
  id v174;
  id v175;
  int v176;
  id v177;
  id v178;
  int v179;
  id v180;
  id v181;
  int v182;
  id v183;
  uint64_t v184;
  BOOL v185;
  int v186;
  void *v187;
  uint64_t v188;
  uint64_t v189;
  _BYTE *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  int v195;
  void *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unsigned int (*v202)(uint64_t, uint64_t, uint64_t);
  void *v203;
  id v204;
  int v205;
  id v206;
  void *v207;
  void *v208;
  uint64_t v209;
  uint64_t v210;
  void *v211;
  char v212;
  BOOL v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t (*v216)(uint64_t);
  uint64_t v217;
  char v218;
  uint64_t v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  uint64_t v223;
  char v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t *v230;
  void *v231;
  BOOL v232;
  char v233;
  id v234;
  int v235;
  id v236;
  id v237;
  int v238;
  int v239;
  BOOL v240;
  id v241;
  int v242;
  uint64_t v243;
  id v244;
  int v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  uint64_t v249;
  void *v250;
  uint64_t v251;
  uint64_t *v252;
  uint64_t v253;
  BOOL v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  id v258;
  int v259;
  id v260;
  int v261;
  uint64_t v262;
  void *v263;
  uint64_t v264;
  char v265;
  void *v266;
  char v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  id v275;
  char v276;
  void *v277;
  uint64_t (*v278)(id *);
  id v279;
  uint64_t v280;
  uint64_t v281;
  char v282;
  char v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  char *v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  id v312;
  uint64_t v313;
  unsigned __int8 v314;
  int v315;
  char v316;
  unsigned __int8 v317;
  void *v318;
  unsigned __int8 v319;
  _BYTE v320[496];
  _BYTE v321[496];
  id v322;
  unint64_t v323;

  v309 = a4;
  v308 = a3;
  v301 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E63B0);
  MEMORY[0x24BDAC7A8](v301);
  v303 = (char *)&v284 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v299 = (char *)&v284 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v297 = (char *)&v284 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v304 = *(_QWORD *)(v11 - 8);
  v305 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v293 = (uint64_t)&v284 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v292 = (uint64_t)&v284 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v294 = (uint64_t)&v284 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5DD0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v286 = (uint64_t)&v284 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v291 = (uint64_t)&v284 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v285 = (uint64_t)&v284 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v287 = (uint64_t)&v284 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v290 = (uint64_t)&v284 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v288 = (char *)&v284 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v289 = (char *)&v284 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v295 = (char *)&v284 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v296 = (uint64_t)&v284 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v300 = (char *)&v284 - v37;
  v38 = MEMORY[0x24BDAC7A8](v36);
  v302 = (uint64_t)&v284 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v284 - v41;
  v43 = MEMORY[0x24BDAC7A8](v40);
  v45 = (char *)&v284 - v44;
  v46 = MEMORY[0x24BDAC7A8](v43);
  v48 = (char *)&v284 - v47;
  v49 = MEMORY[0x24BDAC7A8](v46);
  v51 = (char *)&v284 - v50;
  v52 = MEMORY[0x24BDAC7A8](v49);
  v54 = (char *)&v284 - v53;
  v55 = MEMORY[0x24BDAC7A8](v52);
  v298 = (uint64_t)&v284 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v59 = (char *)&v284 - v58;
  v60 = MEMORY[0x24BDAC7A8](v57);
  v284 = (uint64_t)&v284 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v306 = (uint64_t)&v284 - v63;
  MEMORY[0x24BDAC7A8](v62);
  v307 = (uint64_t)&v284 - v64;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542DE630);
  v311 = a2;
  v65 = swift_dynamicCastClass();
  if (!v65 || a1 != 8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F20);
    v73 = swift_dynamicCastClass();
    if (v73 && a1 == 32)
    {
      v74 = v73;
      v51 = (char *)v307;
      sub_23AA8EFC8(v308, v307, &qword_2569E5DD0);
      v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
      v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48);
      if (v76(v51, 1, v75) == 1)
      {
        swift_retain();
        v77 = v310;
        goto LABEL_9;
      }
      v91 = v306;
      sub_23AA8EFC8((uint64_t)v51, v306, &qword_2569E5DD0);
      v92 = swift_getEnumCaseMultiPayload() - 2;
      v77 = v310;
      switch(v92)
      {
        case 0:
          v93 = *(id *)v91;
          v94 = *(unsigned __int8 *)(v91 + 8);
          if ((*(_BYTE *)(v91 + 9) & 1) != 0)
            goto LABEL_22;
          v177 = *(id *)(v74 + 136);
          if (*(_BYTE *)(v74 + 144))
          {
            if (*(_BYTE *)(v74 + 144) == 1)
            {
              if ((_DWORD)v94 != 1 || v177 != v93)
                goto LABEL_84;
            }
            else if (v177)
            {
              if ((_DWORD)v94 != 2 || v93 != (id)1)
                goto LABEL_84;
            }
            else if ((_DWORD)v94 != 2 || v93)
            {
              goto LABEL_84;
            }
          }
          else if (*(_BYTE *)(v91 + 8) || (_DWORD)v177 != (_DWORD)v93)
          {
            goto LABEL_84;
          }
          swift_retain();
          goto LABEL_9;
        case 3:
          v303 = (char *)(v91 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0) + 48));
          v138 = v305;
          v139 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v304 + 48);
          if (v139(v91, 1, v305) == 1)
          {
            sub_23AA8A05C((uint64_t)v303, (uint64_t *)&unk_2542E4750);
            v140 = v91;
LABEL_159:
            sub_23AA8A05C(v140, (uint64_t *)&unk_2542E4750);
            v51 = (char *)v307;
            goto LABEL_84;
          }
          v169 = (uint64_t)v303;
          if (v139((uint64_t)v303, 1, v138) != 1)
          {
            sub_23AA8A05C(v306, (uint64_t *)&unk_2542E6B00);
            v140 = v169;
            goto LABEL_159;
          }
          v170 = v306;
          v171 = *(id *)v306;
          v172 = *(unsigned __int8 *)(v306 + 8);
          swift_retain();
          sub_23AA8A05C(v170, (uint64_t *)&unk_2542E6B00);
          v166 = *(id *)(v74 + 136);
          v173 = *(unsigned __int8 *)(v74 + 144);
          v51 = (char *)v307;
          if (v172)
          {
            if (v172 == 1)
            {
              if (v173 != 1 || v171 != v166)
              {
LABEL_302:
                swift_release();
                goto LABEL_84;
              }
            }
            else
            {
              v213 = v173 == 2;
              if (v171)
              {
LABEL_202:
                if (!v213 || v166 != (id)1)
                  goto LABEL_302;
              }
              else
              {
LABEL_299:
                if (!v213 || v166)
                  goto LABEL_302;
              }
            }
          }
          else if (*(_BYTE *)(v74 + 144) || (_DWORD)v171 != (_DWORD)v166)
          {
            goto LABEL_302;
          }
          goto LABEL_9;
        case 8:
          v141 = *(void **)(v91 + 16);
          v142 = *(unsigned __int16 *)(v91 + 24);
          if ((*(_BYTE *)(v91 + 9) & 1) == 0)
            goto LABEL_79;
          v143 = *(id *)v91;
          if (v142 >> 8 > 0xFE)
          {
            sub_23AA862DC(*(id *)v91, *(unsigned __int8 *)(v91 + 8), 1);
            goto LABEL_76;
          }
          if ((v142 & 0x100) != 0)
          {
            sub_23ADF1CFC(v141, v142);
            v93 = *(id *)v306;
            v95 = *(_BYTE *)(v306 + 9);
            v94 = *(unsigned __int8 *)(v306 + 8);
            goto LABEL_83;
          }
          if (*(_BYTE *)(v306 + 27) != 2)
            goto LABEL_435;
          v186 = *(_WORD *)(v91 + 24);
          v187 = *(void **)(v74 + 136);
          if (*(_BYTE *)(v74 + 144))
          {
            if (*(_BYTE *)(v74 + 144) == 1)
            {
              if (v186 == 1 && v187 == v141)
              {
LABEL_434:
                v272 = *(unsigned __int8 *)(v91 + 8);
                swift_retain();
                sub_23AA862DC(v143, v272, 1);
                goto LABEL_9;
              }
            }
            else if (v187)
            {
              if (v186 == 2 && v141 == (void *)1)
                goto LABEL_434;
            }
            else if (v186 == 2 && !v141)
            {
              goto LABEL_434;
            }
          }
          else if (!*(_WORD *)(v91 + 24) && (_DWORD)v187 == (_DWORD)v141)
          {
            goto LABEL_434;
          }
LABEL_435:
          v93 = *(id *)v91;
          v94 = *(unsigned __int8 *)(v91 + 8);
LABEL_22:
          v95 = 1;
          goto LABEL_83;
        case 9:
          if ((*(_BYTE *)(v91 + 9) & 1) != 0)
          {
            v141 = *(void **)(v91 + 16);
            v142 = *(unsigned __int16 *)(v91 + 24);
LABEL_79:
            sub_23ADF1CFC(v141, v142);
LABEL_82:
            v93 = *(id *)v91;
            v95 = *(_BYTE *)(v91 + 9);
            v94 = *(unsigned __int8 *)(v91 + 8);
            goto LABEL_83;
          }
          v178 = *(id *)v91;
          v179 = *(unsigned __int8 *)(v91 + 8);
          v180 = *(id *)(v74 + 136);
          if (*(_BYTE *)(v74 + 144))
          {
            if (*(_BYTE *)(v74 + 144) == 1)
            {
              if (v179 != 1 || v180 != v178)
              {
LABEL_76:
                sub_23ADF1CFC(*(void **)(v91 + 16), *(unsigned __int16 *)(v91 + 24));
                goto LABEL_84;
              }
            }
            else if (v180)
            {
              if (v179 != 2 || v178 != (id)1)
                goto LABEL_76;
            }
            else if (v179 != 2 || v178)
            {
              goto LABEL_76;
            }
          }
          else if (*(_BYTE *)(v91 + 8) || (_DWORD)v180 != (_DWORD)v178)
          {
            goto LABEL_76;
          }
          v250 = *(void **)(v91 + 16);
          v251 = *(unsigned __int16 *)(v91 + 24);
          swift_retain();
          sub_23ADF1CFC(v250, v251);
LABEL_9:
          sub_23AA8A05C((uint64_t)v51, &qword_2569E5DD0);
          v79 = *(_QWORD *)(v74 + 136);
          v78 = v74 + 136;
          sub_23AFFA330(v79, *(_BYTE *)(v78 + 8), &v322);
          if (v77)
            return swift_release();
          v105 = v78;
          sub_23AA724E8((uint64_t)&v322, (uint64_t)v320, qword_2542E6E20);
          sub_23AA724E8((uint64_t)v320, (uint64_t)v321, qword_2542E6E20);
          if (sub_23AAFC2A4((uint64_t)v321) != 1)
          {
            sub_23AA724E8((uint64_t)v320, (uint64_t)&v313, qword_2542E6E20);
            v106 = v315;
            if ((v315 & 1) == 0)
            {
              v107 = *(_QWORD *)(v309 + 32);
              v108 = (uint64_t)v297;
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v107 + 240))(v105, 1);
              v310 = v107;
              v184 = v305;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v304 + 48))(v108, 1, v305) == 1)
              {
                sub_23ADF2D34((uint64_t)v320, (voidsub_23AAAEC3C);
                swift_release();
                v89 = (uint64_t *)&unk_2542E4750;
                v90 = v108;
                goto LABEL_427;
              }
              v191 = v294;
              sub_23AA724E8(v108, v294, (uint64_t *)&unk_2542E6B00);
              v307 = v191 + *(int *)(v184 + 48);
              LODWORD(v307) = *(unsigned __int8 *)(v307 + *(int *)(type metadata accessor for ItemMetadata() + 80));
              v192 = v191;
              v193 = v292;
              sub_23AA8EFC8(v192, v292, (uint64_t *)&unk_2542E6B00);
              if ((v307 & 1) != 0)
              {
                v194 = *(unsigned __int8 *)(v193 + *(int *)(v184 + 48));
                sub_23AA8A05C(v193, (uint64_t *)&unk_2542E6B00);
                if (v194 != 2)
                {
                  swift_release();
                  v195 = v319;
                  sub_23AA8A05C(v294, (uint64_t *)&unk_2542E6B00);
                  sub_23ADF2D34((uint64_t)v320, (voidsub_23AAAEC3C);
                  v72 = v195 == 4 && v316 != 0;
                  return v72 & 1;
                }
              }
              else
              {
                sub_23AA8A05C(v193, (uint64_t *)&unk_2542E6B00);
              }
              v231 = v318;
              v232 = v314 == 255 || v318 == 0;
              v233 = v232;
              if (!v232 && (v319 | 4) == 4 || (v317 | 2) != 6 || (v233 & 1) == 0 && (v319 | 2) == 3)
                goto LABEL_273;
              if (v317 != 4)
              {
                v256 = v309;
                goto LABEL_462;
              }
              if (!v318)
                goto LABEL_467;
              v312 = v318;
              v252 = &qword_2569E5DD0;
              v253 = v284;
              sub_23AA8EFC8(v308, v284, &qword_2569E5DD0);
              if (v76((char *)v253, 1, v75) != 1)
              {
                if (swift_getEnumCaseMultiPayload() == 2)
                {
                  sub_23AA8A05C(v253, (uint64_t *)&unk_2542DDFB0);
LABEL_461:
                  v256 = v309;
                  v231 = v318;
LABEL_462:
                  if (v231)
                  {
                    v312 = v231;
                    v278 = *(uint64_t (**)(id *))(**(_QWORD **)(v256 + 24) + 248);
                    v279 = v231;
                    v280 = v278(&v312);
                    if (v280)
                    {
                      v281 = *(_QWORD *)(v280 + 128);

                      swift_release();
                      swift_release();
                      sub_23AA8A05C(v294, (uint64_t *)&unk_2542E6B00);
                      sub_23ADF2D34((uint64_t)v320, (voidsub_23AAAEC3C);
                      if ((v281 & 2) == 0)
                        goto LABEL_428;
                      return 0;
                    }

                  }
LABEL_467:
                  swift_release();
                  sub_23AA8A05C(v294, (uint64_t *)&unk_2542E6B00);
                  sub_23ADF2D34((uint64_t)v320, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
                  goto LABEL_428;
                }
                v252 = (uint64_t *)&unk_2542DDFB0;
              }
              v275 = v231;
              sub_23AA8A05C(v253, v252);
              if ((v106 & 0x10) != 0
                || (v276 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v310 + 464))(v105), (v276 & 1) != 0))
              {

              }
              else
              {
                v282 = (*(uint64_t (**)(id *, uint64_t))(**(_QWORD **)(v309 + 40) + 416))(&v312, 1);
                v283 = v282;

                if ((v283 & 1) != 0)
                {
LABEL_273:
                  swift_release();
                  sub_23AA8A05C(v294, (uint64_t *)&unk_2542E6B00);
                  sub_23ADF2D34((uint64_t)v320, (voidsub_23AAAEC3C);
                  return 0;
                }
              }
              goto LABEL_461;
            }
            sub_23ADF2D34((uint64_t)v320, (voidsub_23AAAEC3C);
          }
          goto LABEL_64;
        case 12:
          if ((*(_BYTE *)(v91 + 9) & 1) != 0)
          {

            goto LABEL_82;
          }
          v322 = *(id *)(v91 + 16);
          swift_retain();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
          if ((swift_dynamicCast() & 1) == 0)
            goto LABEL_378;
          if (v321[0] == 3)
          {
            v181 = *(id *)v91;
            v182 = *(unsigned __int8 *)(v91 + 8);
            v183 = *(id *)(v74 + 136);
            if (*(_BYTE *)(v74 + 144))
            {
              if (*(_BYTE *)(v74 + 144) == 1)
                goto LABEL_138;
LABEL_294:
              if (v183)
              {
                if (v182 == 2 && v181 == (id)1)
                  goto LABEL_377;
              }
              else if (v182 == 2 && !v181)
              {
                goto LABEL_377;
              }
LABEL_378:

              v257 = v91;
              v258 = *(id *)v91;
              v259 = *(unsigned __int8 *)(v257 + 8);
              v260 = *(id *)(v74 + 136);
              v261 = *(unsigned __int8 *)(v74 + 144);
              swift_release();
              if (v261)
              {
                if (v261 == 1)
                {
                  v51 = (char *)v307;
                  if (v259 != 1 || v260 != v258)
                    goto LABEL_84;
                }
                else
                {
                  v51 = (char *)v307;
                  if (v260)
                  {
                    if (v259 != 2 || v258 != (id)1)
                      goto LABEL_84;
                  }
                  else if (v259 != 2 || v258)
                  {
                    goto LABEL_84;
                  }
                }
              }
              else
              {
                v51 = (char *)v307;
                if (v259 || (_DWORD)v260 != (_DWORD)v258)
                  goto LABEL_84;
              }
              v89 = &qword_2569E5DD0;
              v90 = (uint64_t)v51;
              goto LABEL_427;
            }
          }
          else
          {
            if (v321[0] != 5)
              goto LABEL_378;
            v181 = *(id *)v91;
            v182 = *(unsigned __int8 *)(v91 + 8);
            v183 = *(id *)(v74 + 136);
            if (*(_BYTE *)(v74 + 144))
            {
              if (*(_BYTE *)(v74 + 144) == 1)
              {
LABEL_138:
                if (v182 != 1 || v183 != v181)
                  goto LABEL_378;
LABEL_377:
                swift_release();

                goto LABEL_84;
              }
              goto LABEL_294;
            }
          }
          if (!v182 && (_DWORD)v183 == (_DWORD)v181)
            goto LABEL_377;
          goto LABEL_378;
        case 13:
          v137 = *(void **)(v91 + 16);
          swift_retain();

          if ((*(_BYTE *)(v91 + 9) & 1) != 0)
          {
            swift_release();
            goto LABEL_82;
          }
          v166 = *(id *)v91;
          v167 = *(unsigned __int8 *)(v91 + 8);
          v168 = *(id *)(v74 + 136);
          if (*(_BYTE *)(v74 + 144))
          {
            if (*(_BYTE *)(v74 + 144) != 1)
            {
              v213 = v167 == 2;
              if (!v168)
                goto LABEL_299;
              goto LABEL_202;
            }
            if (v167 == 1 && v168 == v166)
              goto LABEL_9;
          }
          else if (!*(_BYTE *)(v91 + 8) && (_DWORD)v168 == (_DWORD)v166)
          {
            goto LABEL_9;
          }
          goto LABEL_302;
        case 19:
          swift_retain();
          swift_release();
          goto LABEL_9;
        case 29:
          if ((*(_BYTE *)(v91 + 9) & 1) != 0)
          {
            sub_23AA862DC(*(id *)(v91 + 16), *(unsigned __int8 *)(v91 + 24), *(_BYTE *)(v91 + 25));
            goto LABEL_82;
          }
          v174 = *(id *)v91;
          v175 = *(id *)(v74 + 136);
          v176 = *(unsigned __int8 *)(v74 + 144);
          if (*(_BYTE *)(v91 + 8))
          {
            if (*(_BYTE *)(v91 + 8) == 1)
            {
              if (v176 != 1 || v174 != v175)
              {
LABEL_313:
                v93 = *(id *)(v91 + 16);
                v95 = *(_BYTE *)(v91 + 25);
                v94 = *(unsigned __int8 *)(v91 + 24);
LABEL_83:
                sub_23AA862DC(v93, v94, v95);
LABEL_84:
                v144 = &qword_2569E5DD0;
                v145 = (uint64_t)v51;
LABEL_85:
                sub_23AA8A05C(v145, v144);
                return 0;
              }
            }
            else if (v174)
            {
              if (v176 != 2 || v175 != (id)1)
                goto LABEL_313;
            }
            else if (v176 != 2 || v175)
            {
              goto LABEL_313;
            }
          }
          else if (*(_BYTE *)(v74 + 144) || (_DWORD)v174 != (_DWORD)v175)
          {
            goto LABEL_313;
          }
          v248 = *(void **)(v91 + 16);
          LODWORD(v303) = *(unsigned __int8 *)(v91 + 25);
          v249 = *(unsigned __int8 *)(v91 + 24);
          swift_retain();
          sub_23AA862DC(v248, v249, (char)v303);
          goto LABEL_9;
        default:
          sub_23AA8A05C(v91, (uint64_t *)&unk_2542DDFB0);
          goto LABEL_84;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0DD0);
    v80 = swift_dynamicCastClass();
    if (v80)
    {
      if (a1 <= 255)
      {
        if (a1 == 64)
        {
          v81 = v80;
          sub_23AA8EFC8(v308, (uint64_t)v59, &qword_2569E5DD0);
          v82 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 48))(v59, 1, v82) == 1)
          {
            swift_retain();
            v83 = v309;
            v84 = v310;
LABEL_16:
            sub_23AA8A05C((uint64_t)v59, &qword_2569E5DD0);
            v85 = v81 + 136;
            v86 = v81;
            v87 = (uint64_t)v299;
            (*(void (**)(uint64_t, uint64_t))(**(_QWORD **)(v83 + 32) + 240))(v85, 1);
            if (v84)
              return swift_release();
            v88 = v305;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v304 + 48))(v87, 1, v305) == 1)
            {
              swift_release();
              v89 = (uint64_t *)&unk_2542E4750;
LABEL_19:
              v90 = v87;
LABEL_427:
              sub_23AA8A05C(v90, v89);
              goto LABEL_428;
            }
            v188 = v87;
            v189 = v293;
            sub_23AA724E8(v188, v293, (uint64_t *)&unk_2542E6B00);
            v190 = (_BYTE *)(v189 + *(int *)(v88 + 48));
            if (*v190 == 2)
            {
              sub_23AA8A05C(v189, (uint64_t *)&unk_2542E6B00);
LABEL_64:
              swift_release();
LABEL_428:
              v72 = 1;
              return v72 & 1;
            }
            if (v190[*(int *)(type metadata accessor for ItemMetadata() + 80)] != 1)
            {
              sub_23AA8A05C(v293, (uint64_t *)&unk_2542E6B00);
              swift_release();
              return 0;
            }
            sub_23AFFA330(*(_QWORD *)(v86 + 136), *(_BYTE *)(v86 + 144), &v322);
            sub_23AA724E8((uint64_t)&v322, (uint64_t)v320, qword_2542E6E20);
            sub_23AA724E8((uint64_t)v320, (uint64_t)v321, qword_2542E6E20);
            if (sub_23AAFC2A4((uint64_t)v321) == 1)
            {
              sub_23AA8A05C(v293, (uint64_t *)&unk_2542E6B00);
              swift_release();
              sub_23AA724E8((uint64_t)&v322, (uint64_t)&v313, qword_2542E6E20);
              v255 = &v313;
LABEL_450:
              sub_23ADF2D34((uint64_t)v255, (voidsub_23AAAEC3C);
              goto LABEL_428;
            }
            swift_release();
            sub_23AA724E8((uint64_t)v320, (uint64_t)&v313, qword_2542E6E20);
            if (v314 == 255)
            {
              sub_23AA8A05C(v293, (uint64_t *)&unk_2542E6B00);
              v255 = (uint64_t *)v320;
              goto LABEL_450;
            }
            v271 = v318;
            sub_23AA8A05C(v293, (uint64_t *)&unk_2542E6B00);
            sub_23ADF2D34((uint64_t)v320, (voidsub_23AAAEC3C);
            if (!v271)
              goto LABEL_428;
            v185 = v319 == 0;
LABEL_150:
            v72 = v185;
            return v72 & 1;
          }
          v135 = v298;
          sub_23AA8EFC8((uint64_t)v59, v298, &qword_2569E5DD0);
          v136 = swift_getEnumCaseMultiPayload() - 4;
          v84 = v310;
          switch(v136)
          {
            case 0:
              if ((*(_BYTE *)(v135 + 9) & 1) != 0)
              {
                sub_23AA862DC(*(id *)(v135 + 16), *(unsigned __int8 *)(v135 + 24), *(_BYTE *)(v135 + 25));
                goto LABEL_190;
              }
              v234 = *(id *)v135;
              v235 = *(unsigned __int8 *)(v135 + 8);
              v236 = *(id *)(v81 + 136);
              if (*(_BYTE *)(v81 + 144))
              {
                v83 = v309;
                if (*(_BYTE *)(v81 + 144) == 1)
                {
                  if (v235 != 1 || v236 != v234)
                  {
LABEL_416:
                    v155 = *(id *)(v135 + 16);
                    v157 = *(_BYTE *)(v135 + 25);
                    v156 = *(unsigned __int8 *)(v135 + 24);
                    goto LABEL_191;
                  }
                }
                else if (v236)
                {
                  if (v235 != 2 || v234 != (id)1)
                    goto LABEL_416;
                }
                else if (v235 != 2 || v234)
                {
                  goto LABEL_416;
                }
              }
              else
              {
                v83 = v309;
                if (*(_BYTE *)(v135 + 8) || (_DWORD)v236 != (_DWORD)v234)
                  goto LABEL_416;
              }
              v266 = *(void **)(v135 + 16);
              v267 = *(_BYTE *)(v135 + 25);
              v268 = v81;
              v269 = *(unsigned __int8 *)(v135 + 24);
              swift_retain();
              v270 = v269;
              v81 = v268;
              sub_23AA862DC(v266, v270, v267);
              goto LABEL_16;
            case 1:
              v199 = v81;
              v200 = v135 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0) + 48);
              v201 = v305;
              v202 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v304 + 48);
              if (v202(v135, 1, v305) == 1)
              {
                sub_23AA8A05C(v200, (uint64_t *)&unk_2542E4750);
                sub_23AA8A05C(v135, (uint64_t *)&unk_2542E4750);
                break;
              }
              if (v202(v200, 1, v201) != 1)
              {
                sub_23AA8A05C(v135, (uint64_t *)&unk_2542E6B00);
                sub_23AA8A05C(v200, (uint64_t *)&unk_2542E4750);
                break;
              }
              v237 = *(id *)v135;
              v238 = *(unsigned __int8 *)(v135 + 8);
              swift_retain();
              sub_23AA8A05C(v135, (uint64_t *)&unk_2542E6B00);
              v204 = *(id *)(v199 + 136);
              v239 = *(unsigned __int8 *)(v199 + 144);
              if (!v238)
              {
                if (*(_BYTE *)(v199 + 144))
                  goto LABEL_405;
                v240 = (_DWORD)v237 == (_DWORD)v204;
                v83 = v309;
LABEL_399:
                v81 = v199;
                if (v240)
                  goto LABEL_16;
                goto LABEL_405;
              }
              v83 = v309;
              if (v238 == 1)
              {
                if (v239 != 1)
                  goto LABEL_405;
                v240 = v237 == v204;
                goto LABEL_399;
              }
              v81 = v199;
              v254 = v239 == 2;
              if (v237)
                goto LABEL_350;
LABEL_402:
              if (v254 && !v204)
                goto LABEL_16;
LABEL_405:
              swift_release();
              break;
            case 6:
              v197 = *(void **)(v135 + 16);
              v198 = *(unsigned __int16 *)(v135 + 24);
              v83 = v309;
              if (*(_BYTE *)(v135 + 27))
              {
                sub_23ADF1CFC(*(void **)(v135 + 16), *(unsigned __int16 *)(v135 + 24));
                goto LABEL_190;
              }
              swift_retain();
              sub_23ADF1CFC(v197, v198);
              sub_23AA862DC(*(id *)v135, *(unsigned __int8 *)(v135 + 8), *(_BYTE *)(v135 + 9));
              goto LABEL_16;
            case 10:
              v203 = *(void **)(v135 + 16);
              swift_retain();

              if ((*(_BYTE *)(v135 + 9) & 1) != 0)
                goto LABEL_189;
              v204 = *(id *)v135;
              v205 = *(unsigned __int8 *)(v135 + 8);
              v206 = *(id *)(v81 + 136);
              if (*(_BYTE *)(v81 + 144))
              {
                v83 = v309;
                if (*(_BYTE *)(v81 + 144) == 1)
                {
                  if (v205 == 1 && v206 == v204)
                    goto LABEL_16;
                }
                else
                {
                  v254 = v205 == 2;
                  if (!v206)
                    goto LABEL_402;
LABEL_350:
                  if (v254 && v204 == (id)1)
                    goto LABEL_16;
                }
              }
              else
              {
                v83 = v309;
                if (!*(_BYTE *)(v135 + 8) && (_DWORD)v206 == (_DWORD)v204)
                  goto LABEL_16;
              }
              goto LABEL_405;
            case 11:
              v207 = *(void **)(v135 + 16);
              swift_retain();

              if ((*(_BYTE *)(v135 + 9) & 1) != 0)
              {
LABEL_189:
                swift_release();
LABEL_190:
                v155 = *(id *)v135;
                v157 = *(_BYTE *)(v135 + 9);
                v156 = *(unsigned __int8 *)(v135 + 8);
                goto LABEL_191;
              }
              v241 = *(id *)v135;
              v242 = *(unsigned __int8 *)(v135 + 8);
              v243 = v81;
              v244 = *(id *)(v81 + 136);
              v245 = *(unsigned __int8 *)(v243 + 144);
              swift_release();
              if (v245)
              {
                if (v245 == 1)
                {
                  if (v242 == 1 && v244 == v241)
                    goto LABEL_104;
                }
                else if (v244)
                {
                  if (v242 == 2 && v241 == (id)1)
                    goto LABEL_104;
                }
                else if (v242 == 2 && !v241)
                {
                  goto LABEL_104;
                }
              }
              else if (!v242 && (_DWORD)v244 == (_DWORD)v241)
              {
                goto LABEL_104;
              }
              break;
            default:
              sub_23AA8A05C(v135, (uint64_t *)&unk_2542DDFB0);
              break;
          }
LABEL_192:
          v144 = &qword_2569E5DD0;
          v145 = (uint64_t)v59;
          goto LABEL_85;
        }
LABEL_25:
        if (a1 == 128)
        {
          v96 = v309;
          if (((*(uint64_t (**)(void))(*(_QWORD *)v309 + 152))() & 0x100) == 0)
          {
            v97 = *(int *)(v301 + 48);
            v59 = v303;
            sub_23AA8EFC8(v308, (uint64_t)v303, &qword_2569E5DD0);
            *(_QWORD *)&v59[v97] = v311;
            v98 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 48))(v59, 1, v98) == 1)
            {
              swift_retain();
              goto LABEL_194;
            }
            sub_23AA8EFC8((uint64_t)v59, (uint64_t)v54, &qword_2569E5DD0);
            if (swift_getEnumCaseMultiPayload() != 11)
            {
              swift_retain();
              sub_23AA8A05C((uint64_t)v54, (uint64_t *)&unk_2542DDFB0);
              goto LABEL_194;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60D0);
            if (!swift_dynamicCastClass())
            {
              v208 = (void *)*((_QWORD *)v54 + 2);
              v209 = *((unsigned __int16 *)v54 + 12);
              swift_retain();
              sub_23ADF1CFC(v208, v209);
              sub_23AA862DC(*(id *)v54, v54[8], v54[9]);
              goto LABEL_194;
            }
            v163 = v54[27];
            v164 = (void *)*((_QWORD *)v54 + 2);
            v165 = *((unsigned __int16 *)v54 + 12);
            swift_retain();
            sub_23ADF1CFC(v164, v165);
            sub_23AA862DC(*(id *)v54, v54[8], v54[9]);
            if (v163 != 6)
            {
LABEL_194:
              v210 = sub_23AA8A05C((uint64_t)v59, (uint64_t *)&unk_2569E63B0);
              v211 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v96 + 264))(v210);
              v212 = sub_23AFEA074((uint64_t)sub_23AB6FFCC, 0);

              v72 = v212 & 1;
              return v72 & 1;
            }
            swift_release();
LABEL_104:
            v89 = &qword_2569E5DD0;
            v90 = (uint64_t)v59;
            goto LABEL_427;
          }
LABEL_445:
          v72 = 1;
          return v72 & 1;
        }
        goto LABEL_38;
      }
      if (a1 != 256)
      {
        if (a1 != 0x40000)
        {
LABEL_38:
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E60B0);
          v109 = v311;
          v110 = swift_dynamicCastClass();
          if (v110 && a1 == 2048)
          {
            v111 = v110;
            v112 = v302;
            sub_23AA8EFC8(v308, v302, &qword_2569E5DD0);
            v113 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
            v114 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 48))(v112, 1, v113);
            v115 = v300;
            if (v114 != 1)
            {
              sub_23AA8EFC8(v112, (uint64_t)v300, &qword_2569E5DD0);
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload != 43)
              {
                if (EnumCaseMultiPayload != 19)
                {
                  sub_23AA8A05C((uint64_t)v115, (uint64_t *)&unk_2542DDFB0);
                  goto LABEL_429;
                }
                v117 = *((_QWORD *)v115 + 1);
                v118 = v115[16];
                if ((v115[17] & 1) != 0)
                {
                  sub_23AA862DC(*((id *)v115 + 1), v115[16], 1);
                  goto LABEL_429;
                }
                v214 = *v115;
                if (qword_23B1DB328[(char)sub_23AE57808()] != qword_23B1DB328[v214])
                  goto LABEL_429;
                v215 = *(_QWORD *)(v111 + 136);
                if (*(_BYTE *)(v111 + 144))
                {
                  if (*(_BYTE *)(v111 + 144) == 1)
                  {
                    if (v118 != 1 || v215 != v117)
                      goto LABEL_429;
                  }
                  else if (v215)
                  {
                    if (v118 != 2 || v117 != 1)
                      goto LABEL_429;
                  }
                  else if (v118 != 2 || v117)
                  {
                    goto LABEL_429;
                  }
                }
                else if (v118 || (_DWORD)v215 != (_DWORD)v117)
                {
                  goto LABEL_429;
                }
              }
              v89 = &qword_2569E5DD0;
              v90 = v112;
              goto LABEL_427;
            }
LABEL_429:
            v144 = &qword_2569E5DD0;
            v145 = v112;
            goto LABEL_85;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FB0);
          v121 = swift_dynamicCastClass();
          if (v121 && a1 == 2048)
          {
            v122 = v121;
            v123 = v296;
            sub_23AA8EFC8(v308, v296, &qword_2569E5DD0);
            v124 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
            v125 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 48))(v123, 1, v124);
            v126 = v295;
            if (v125 != 1)
            {
              sub_23AA8EFC8(v123, (uint64_t)v295, &qword_2569E5DD0);
              v127 = swift_getEnumCaseMultiPayload();
              if (v127 != 43)
              {
                if (v127 != 19)
                {
                  sub_23AA8A05C((uint64_t)v126, (uint64_t *)&unk_2542DDFB0);
                  goto LABEL_447;
                }
                v128 = *((_QWORD *)v126 + 1);
                v129 = v126[16];
                if ((v126[17] & 1) != 0)
                {
                  sub_23AA862DC(*((id *)v126 + 1), v126[16], 1);
                  goto LABEL_447;
                }
                v246 = *v126;
                if (qword_23B1DB328[(char)sub_23AE57808()] != qword_23B1DB328[v246])
                  goto LABEL_447;
                v247 = *(_QWORD *)(v122 + 136);
                if (*(_BYTE *)(v122 + 144))
                {
                  if (*(_BYTE *)(v122 + 144) == 1)
                  {
                    if (v129 != 1 || v247 != v128)
                      goto LABEL_447;
                  }
                  else if (v247)
                  {
                    if (v129 != 2 || v128 != 1)
                      goto LABEL_447;
                  }
                  else if (v129 != 2 || v128)
                  {
                    goto LABEL_447;
                  }
                }
                else if (v129 || (_DWORD)v247 != (_DWORD)v128)
                {
                  goto LABEL_447;
                }
              }
              sub_23AA8A05C(v123, &qword_2569E5DD0);
              goto LABEL_445;
            }
LABEL_447:
            sub_23AA8A05C(v123, &qword_2569E5DD0);
            return 0;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6090);
          v146 = swift_dynamicCastClass();
          if (v146)
          {
            v147 = (_QWORD *)v309;
            if (a1 < 0x20000)
            {
              if (a1 < 0x2000)
              {
                if (a1 != 1)
                {
                  if (a1 == 2048)
                  {
                    v148 = v146;
                    v59 = v289;
                    sub_23AA8EFC8(v308, (uint64_t)v289, &qword_2569E5DD0);
                    v149 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
                    v150 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 48))(v59, 1, v149);
                    v151 = v288;
                    if (v150 == 1)
                      goto LABEL_192;
                    sub_23AA8EFC8((uint64_t)v59, (uint64_t)v288, &qword_2569E5DD0);
                    v152 = swift_getEnumCaseMultiPayload();
                    if (v152 != 43)
                    {
                      if (v152 != 19)
                      {
                        sub_23AA8A05C((uint64_t)v151, (uint64_t *)&unk_2542DDFB0);
                        goto LABEL_192;
                      }
                      v153 = *((_QWORD *)v151 + 1);
                      v154 = v151[16];
                      if ((v151[17] & 1) != 0)
                      {
                        v155 = (id)*((_QWORD *)v151 + 1);
                        v156 = v151[16];
                        v157 = 1;
LABEL_191:
                        sub_23AA862DC(v155, v156, v157);
                        goto LABEL_192;
                      }
                      v273 = *v151;
                      if (qword_23B1DB328[(char)sub_23AE57808()] != qword_23B1DB328[v273])
                        goto LABEL_192;
                      v274 = *(_QWORD *)(v148 + 136);
                      if (*(_BYTE *)(v148 + 144))
                      {
                        if (*(_BYTE *)(v148 + 144) == 1)
                        {
                          v59 = v289;
                          if (v154 != 1 || v274 != v153)
                            goto LABEL_192;
                        }
                        else if (v274)
                        {
                          v59 = v289;
                          if (v154 != 2 || v153 != 1)
                            goto LABEL_192;
                        }
                        else
                        {
                          v59 = v289;
                          if (v154 != 2 || v153)
                            goto LABEL_192;
                        }
                      }
                      else
                      {
                        v59 = v289;
                        if (v154 || (_DWORD)v274 != (_DWORD)v153)
                          goto LABEL_192;
                      }
                    }
                    goto LABEL_104;
                  }
LABEL_256:
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F68);
                  v226 = swift_dynamicCastClass();
                  if (v226)
                  {
                    if (a1 != 0x1000000)
                    {
                      if (a1 == 0x800000)
                      {
                        v227 = v226;
                        v228 = v286;
                        sub_23AA8EFC8(v308, v286, &qword_2569E5DD0);
                        v229 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
                        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v229 - 8) + 48))(v228, 1, v229) == 1)
                        {
                          v230 = &qword_2569E5DD0;
                        }
                        else
                        {
                          if (swift_getEnumCaseMultiPayload() == 37)
                          {
                            v262 = *(char *)(v228 + 10);
                            v263 = *(void **)v228;
                            v264 = *(unsigned __int8 *)(v228 + 8);
                            v265 = *(_BYTE *)(v228 + 9);
                            if (qword_23B1DB328[(char)sub_23AE57808()] == qword_23B1DB328[v262])
                            {
                              if ((v265 & 1) != 0)
                              {
                                sub_23AA862DC(v263, v264, 1);
                              }
                              else
                              {
                                v277 = *(void **)(v227 + 136);
                                if (*(_BYTE *)(v227 + 144))
                                {
                                  if (*(_BYTE *)(v227 + 144) == 1)
                                  {
                                    if ((_DWORD)v264 == 1 && v277 == v263)
                                      goto LABEL_428;
                                  }
                                  else if (v277)
                                  {
                                    if ((_DWORD)v264 == 2 && v263 == (void *)1)
                                      goto LABEL_428;
                                  }
                                  else if ((_DWORD)v264 == 2 && !v263)
                                  {
                                    goto LABEL_428;
                                  }
                                }
                                else if (!(_DWORD)v264 && (_DWORD)v277 == (_DWORD)v263)
                                {
                                  goto LABEL_428;
                                }
                              }
                            }
                            else
                            {
                              sub_23AA862DC(v263, v264, v265);
                            }
                            return 0;
                          }
                          v230 = (uint64_t *)&unk_2542DDFB0;
                        }
                        sub_23AA8A05C(v228, v230);
                        return 0;
                      }
LABEL_491:
                      v322 = 0;
                      v323 = 0xE000000000000000;
                      sub_23B1C6EFC();
                      swift_bridgeObjectRelease();
                      v322 = (id)0xD000000000000024;
                      v323 = 0x800000023B1F92D0;
                      sub_23AE17C44();
                      sub_23B1C64F4();
                      swift_bridgeObjectRelease();
                      result = sub_23B1C704C();
                      __break(1u);
                      return result;
                    }
                  }
                  else if (a1 != 0x1000000)
                  {
                    goto LABEL_491;
                  }
                  if (qword_2569E12A8 != -1)
                    swift_once();
                  v72 = sub_23AFEA074((uint64_t)sub_23AB6FFCC, 0) & 1;
                  return v72 & 1;
                }
                goto LABEL_243;
              }
              if (a1 == 0x2000)
                goto LABEL_236;
              goto LABEL_233;
            }
          }
          else
          {
            v147 = (_QWORD *)v309;
            if (a1 < 0x20000)
            {
              if (a1 == 1)
              {
LABEL_243:
                v87 = v290;
                sub_23AA8EFC8(v308, v290, &qword_2569E5DD0);
                v222 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v222 - 8) + 48))(v87, 1, v222) != 1)
                {
                  v72 = swift_getEnumCaseMultiPayload() == 40;
                  sub_23AA8A05C(v87, (uint64_t *)&unk_2542DDFB0);
                  return v72 & 1;
                }
                goto LABEL_254;
              }
              if (a1 == 0x2000)
              {
LABEL_236:
                if (((*(uint64_t (**)(void))(*v147 + 152))() & 0x80) == 0)
                  goto LABEL_428;
                v87 = v287;
                sub_23AA8EFC8(v308, v287, &qword_2569E5DD0);
                v219 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v219 - 8) + 48))(v87, 1, v219) != 1)
                {
                  v220 = v285;
                  sub_23AA8EFC8(v87, v285, &qword_2569E5DD0);
                  v221 = swift_getEnumCaseMultiPayload();
                  sub_23AA8A05C(v220, (uint64_t *)&unk_2542DDFB0);
                  if (v221 == 27)
                  {
                    v89 = &qword_2569E5DD0;
                    goto LABEL_19;
                  }
                }
                goto LABEL_254;
              }
LABEL_233:
              if (a1 == 0x10000)
              {
                v216 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v147[4] + 16) + 768);
                v217 = swift_retain();
                v218 = v216(v217);
                swift_release();
                v72 = v218 ^ 1;
                return v72 & 1;
              }
              goto LABEL_256;
            }
          }
          if (a1 < 0x200000)
          {
            if (a1 != 0x20000)
            {
              if (a1 == 0x80000)
              {
                v185 = ((*(uint64_t (**)(void))(*v147 + 160))() & 1) == 0;
                goto LABEL_150;
              }
              goto LABEL_256;
            }
            v87 = v291;
            sub_23AA8EFC8(v308, v291, &qword_2569E5DD0);
            v225 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v225 - 8) + 48))(v87, 1, v225) != 1)
            {
              if (swift_getEnumCaseMultiPayload() == 23)
                goto LABEL_428;
              v144 = (uint64_t *)&unk_2542DDFB0;
              goto LABEL_255;
            }
LABEL_254:
            v144 = &qword_2569E5DD0;
LABEL_255:
            v145 = v87;
            goto LABEL_85;
          }
          if (a1 == 0x200000)
          {
            if (*(_QWORD *)(v109 + 128) == 0x8000)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2730);
              if (swift_dynamicCastClass())
              {
                __swift_instantiateConcreteTypeFromMangledName(qword_2542DE4A0);
                if (swift_dynamicCastClass()
                  || (__swift_instantiateConcreteTypeFromMangledName(qword_2542E1BE0), swift_dynamicCastClass())
                  || (__swift_instantiateConcreteTypeFromMangledName(&qword_2569E6118), swift_dynamicCastClass()))
                {
                  v223 = qword_2542E6EE0;
                  swift_retain();
                  if (v223 != -1)
                    swift_once();
                  v224 = sub_23AFEA074((uint64_t)sub_23AB6FFCC, 0);
                  swift_release();
                  v72 = v224 & 1;
                  return v72 & 1;
                }
              }
            }
            goto LABEL_428;
          }
          if (a1 != 0x400000)
            goto LABEL_256;
          LOBYTE(result) = (*(uint64_t (**)(void))(*v147 + 256))();
LABEL_157:
          v72 = result ^ 1;
          return v72 & 1;
        }
LABEL_31:
        v99 = v311;
        if (!*(_BYTE *)(v311 + 104) && (*(_BYTE *)(v311 + 89) & 1) == 0)
          goto LABEL_445;
        sub_23AA8EFC8(v308, (uint64_t)v45, &qword_2569E5DD0);
        v100 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
        v101 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 48))(v45, 1, v100);
        v102 = v310;
        if (v101 == 1)
          goto LABEL_34;
        sub_23AA8EFC8((uint64_t)v45, (uint64_t)v42, &qword_2569E5DD0);
        if (swift_getEnumCaseMultiPayload() == 13)
        {
          v130 = *(void **)v42;
          v131 = v42[9];
          v132 = v42[10];
          v133 = v42[8];
          v134 = sub_23ADFE5C4(v99);
          LOBYTE(v132) = sub_23B1A649C(v130, v133 | (v132 << 16) | (v131 << 8), v134);
          v99 = v311;
          swift_bridgeObjectRelease();
          sub_23AA862DC(v130, v133, v131);
          if ((v132 & 1) != 0)
          {
LABEL_34:
            sub_23AA8A05C((uint64_t)v45, &qword_2569E5DD0);
            v103 = (_QWORD *)v99;
            v104 = 1;
LABEL_48:
            result = sub_23AE09348(v103, v104);
            if (v102)
              return result;
            goto LABEL_157;
          }
        }
        else
        {
          sub_23AA8A05C((uint64_t)v42, (uint64_t *)&unk_2542DDFB0);
        }
        v144 = &qword_2569E5DD0;
        v145 = (uint64_t)v45;
        goto LABEL_85;
      }
    }
    else
    {
      if (a1 == 0x40000)
        goto LABEL_31;
      if (a1 != 256)
        goto LABEL_25;
    }
    if (((*(uint64_t (**)(void))(*(_QWORD *)v309 + 152))() & 0x100) != 0)
      goto LABEL_445;
    sub_23AA8EFC8(v308, (uint64_t)v51, &qword_2569E5DD0);
    v119 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
    v120 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 48))(v51, 1, v119);
    v102 = v310;
    if (v120 != 1)
    {
      sub_23AA8EFC8((uint64_t)v51, (uint64_t)v48, &qword_2569E5DD0);
      if (swift_getEnumCaseMultiPayload() != 13)
      {
        sub_23AA8A05C((uint64_t)v48, (uint64_t *)&unk_2542DDFB0);
        goto LABEL_84;
      }
      v158 = *(void **)v48;
      v159 = v48[9];
      v160 = v48[10];
      v161 = v48[8];
      v162 = sub_23ADFE5C4(v311);
      LOBYTE(v160) = sub_23B1A649C(v158, v161 | (v160 << 16) | (v159 << 8), v162);
      swift_bridgeObjectRelease();
      sub_23AA862DC(v158, v161, v159);
      if ((v160 & 1) == 0)
        goto LABEL_84;
    }
    sub_23AA8A05C((uint64_t)v51, &qword_2569E5DD0);
    v103 = (_QWORD *)v311;
    v104 = 0;
    goto LABEL_48;
  }
  v66 = v65 + 136;
  v67 = *(uint64_t (**)(uint64_t, uint64_t))(**(_QWORD **)(v309 + 32) + 368);
  swift_retain();
  v68 = v66;
  v69 = v310;
  v70 = v67(v68, 1);
  result = swift_release();
  if (!v69)
  {
    v72 = v70 ^ 1;
    return v72 & 1;
  }
  return result;
}

uint64_t sub_23AE0E1E0(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5, __int16 a6)
{
  uint64_t v6;
  uint64_t v7;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = v6;
  *(_QWORD *)(v6 + 80) = 0;
  *(_QWORD *)(v6 + 88) = 0;
  *(_QWORD *)(v6 + 16) = a1;
  v12 = a4 & 1;
  *(_BYTE *)(v6 + 24) = a4 & 1;
  v13 = a1;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = 0xE000000000000000;
  *(_QWORD *)(v6 + 48) = sub_23AA6F854(0x696C756465686373, 0xEB000000005F676ELL, 0xD000000000000013, 0x800000023B207560, (uint64_t (*)(uint64_t))sub_23AD7E748, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA8E40);
  *(_QWORD *)(v6 + 56) = v14;
  *(_BYTE *)(v6 + 72) = (a6 & 2) == 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_2542E46C0);
  swift_allocObject();
  v15 = sub_23AEA9F34(v13, a2, a3, v12, a5, a6, 0x800000023B207520, (uint64_t (*)(uint64_t))sub_23AD7F1F4);

  *(_QWORD *)(v7 + 64) = v15;
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = *(_QWORD *)(v15 + 144);
  *(_QWORD *)(v15 + 144) = sub_23AEB4C90;
  *(_QWORD *)(v15 + 152) = v16;
  sub_23AAB7948(v17);
  return v7;
}

uint64_t sub_23AE0E394(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5, __int16 a6)
{
  uint64_t v6;
  uint64_t v7;
  char v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = v6;
  *(_QWORD *)(v6 + 80) = 0;
  *(_QWORD *)(v6 + 88) = 0;
  *(_QWORD *)(v6 + 16) = a1;
  v12 = a4 & 1;
  *(_BYTE *)(v6 + 24) = a4 & 1;
  v13 = a1;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  *(_QWORD *)(v6 + 32) = 0;
  *(_QWORD *)(v6 + 40) = 0xE000000000000000;
  *(_QWORD *)(v6 + 48) = sub_23AA6F854(0x696C756465686373, 0xEB000000005F676ELL, 0xD000000000000013, 0x800000023B207560, (uint64_t (*)(uint64_t))sub_23AD7E748, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _BYTE *))sub_23AEA8E40);
  *(_QWORD *)(v6 + 56) = v14;
  *(_BYTE *)(v6 + 72) = (a6 & 2) == 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E46B8);
  swift_allocObject();
  v15 = sub_23AEA9F34(v13, a2, a3, v12, a5, a6, 0x800000023B207580, (uint64_t (*)(uint64_t))sub_23AD7F3D8);

  *(_QWORD *)(v7 + 64) = v15;
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = *(_QWORD *)(v15 + 144);
  *(_QWORD *)(v15 + 144) = sub_23AEB4CB8;
  *(_QWORD *)(v15 + 152) = v16;
  sub_23AAB7948(v17);
  return v7;
}

uint64_t sub_23AE0E548(uint64_t a1, void (*a2)(uint64_t (*)(uint64_t), uint64_t), void (*a3)(uint64_t (*)(uint64_t), uint64_t))
{
  uint64_t Strong;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return 0;
  v6 = *(uint64_t (**)(uint64_t))(Strong + 80);
  v7 = *(_QWORD *)(Strong + 88);
  a2(v6, v7);
  v8 = swift_release();
  if (!v6)
    return 0;
  v9 = v6(v8);
  a3(v6, v7);
  return v9;
}

uint64_t sub_23AE0E5E8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  int v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;

  v3 = v2;
  v4 = *(uint64_t (**)(uint64_t))(v1 + 80);
  if (v4)
  {
    v5 = result;
    v6 = swift_retain();
    v7 = v4(v6);
    result = sub_23AAB7948((uint64_t)v4);
    if (v7)
    {
      v8 = *(void **)(v5 + 88);
      v9 = *(void **)(v5 + 96);
      v10 = *(unsigned __int8 *)(v5 + 104);
      if (*(_BYTE *)(v5 + 104))
      {
        if (v10 != 1)
          goto LABEL_13;
        v11 = *(void (**)(uint64_t))(*(_QWORD *)v7 + 304);
        v12 = swift_retain();
        v11(v12);
LABEL_12:
        sub_23AAAEE10(v8, v9, v10);
LABEL_13:
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F20);
        v16 = swift_dynamicCastClass();
        if (v16)
        {
          v17 = v16;
          v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v7 + 504);
          swift_retain();
          v18(v17, 1);
          if (v3)
          {
            swift_release();
            return swift_release();
          }
          v16 = swift_release();
        }
        v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 184))(v16);
        if (v19)
        {
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v19 + 120))(v7, v5);
          swift_release();
        }
        return swift_release();
      }
      if ((v8 & 0x200000) != 0)
      {
        v14 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 344);
        v15 = swift_retain();
        v13 = v14(v15);
        if ((v8 & 0x1000000) == 0)
          goto LABEL_12;
      }
      else
      {
        v13 = swift_retain();
        if ((v8 & 0x1000000) == 0)
          goto LABEL_12;
      }
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 552))(v13);
      if (v3)
      {
        sub_23AAAEE10(v8, v9, 0);
        return swift_release();
      }
      goto LABEL_12;
    }
  }
  return result;
}

void sub_23AE0E794(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unsigned __int8 v15;
  id v16;
  char isEscapingClosureAtFileLocation;
  id v18;
  char v19;
  uint64_t v20;
  void *v21;
  unsigned __int8 v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  unsigned __int8 v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  unsigned __int8 v32;
  char v33;
  void *v34;
  id v35;
  _BYTE v36[40];
  id aBlock;
  uint64_t v38;
  id (*v39)(uint64_t, void *);
  ValueMetadata *v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;

  v2 = v1;
  v43 = *MEMORY[0x24BDAC8D0];
  v4 = *(void **)(v2 + 16);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23AEB1244;
  *(_QWORD *)(v6 + 24) = v5;
  v41 = sub_23AA956C8;
  v42 = v6;
  aBlock = (id)MEMORY[0x24BDAC760];
  v38 = 1107296256;
  v39 = sub_23AA9432C;
  v40 = (ValueMetadata *)&block_descriptor_142;
  v7 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v35 = v4;
  v8 = objc_msgSend(v4, sel_fetchSwift_error_, v7, &aBlock);
  _Block_release(v7);
  v9 = aBlock;
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (!v8)
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
    return;
  }
  if ((objc_msgSend(v8, sel_next) & 1) == 0)
  {
    v34 = v8;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v2;
    *(_QWORD *)(v12 + 24) = a1;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = sub_23AEB1264;
    *(_QWORD *)(v13 + 24) = v12;
    v41 = sub_23AA956C8;
    v42 = v13;
    aBlock = (id)MEMORY[0x24BDAC760];
    v38 = 1107296256;
    v39 = sub_23AA9432C;
    v40 = (ValueMetadata *)&block_descriptor_152;
    v14 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    v15 = objc_msgSend(v35, sel_executeSwift_error_, v14, &aBlock);
    _Block_release(v14);
    v16 = aBlock;
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      if ((v15 & 1) != 0)
      {
        v18 = objc_msgSend(v35, sel_lastInsertedRowID, v34);
        v19 = *(_BYTE *)(v2 + 24);
        v40 = &type metadata for SQLItemJobID;
        v41 = (uint64_t (*)())sub_23ABF67DC();
        aBlock = v18;
        LOBYTE(v38) = v19;
        sub_23AA724E8((uint64_t)&aBlock, (uint64_t)v36, &qword_2542E16F0);
        swift_beginAccess();
        sub_23AA8A660((uint64_t)v36, a1 + 48, &qword_2542E16F0);
        swift_endAccess();
        v20 = a1;
        goto LABEL_10;
      }
LABEL_25:
      sub_23B1C587C();

      swift_willThrow();
      goto LABEL_26;
    }
    goto LABEL_31;
  }
  v10 = objc_msgSend(v8, sel_longAtIndex_, 0);
  if ((objc_msgSend(v8, sel_isNullAtIndex_, 1) & 1) != 0)
    v11 = 4;
  else
    v11 = (uint64_t)objc_msgSend(v8, sel_longAtIndex_, 1);
  v21 = v8;
  v22 = objc_msgSend(v8, sel_isNullAtIndex_, 2);
  v23 = *(_BYTE *)(v2 + 24);
  v40 = &type metadata for SQLItemJobID;
  v41 = (uint64_t (*)())sub_23ABF67DC();
  aBlock = v10;
  LOBYTE(v38) = v23;
  sub_23AA724E8((uint64_t)&aBlock, (uint64_t)v36, &qword_2542E16F0);
  swift_beginAccess();
  sub_23AA8A660((uint64_t)v36, a1 + 48, &qword_2542E16F0);
  swift_endAccess();
  if (v11 == 2)
  {
    sub_23AE0F114(v2, a1, (uint64_t)v10);
LABEL_14:
    swift_release();

    return;
  }
  v34 = v21;
  if (v11 >= 2)
  {
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = v2;
    v29[3] = a1;
    v29[4] = v10;
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = sub_23ABF7278;
    *(_QWORD *)(v30 + 24) = v29;
    v41 = sub_23AA956C8;
    v42 = v30;
    aBlock = (id)MEMORY[0x24BDAC760];
    v38 = 1107296256;
    v39 = sub_23AA9432C;
    v40 = (ValueMetadata *)&block_descriptor_162;
    v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    v32 = objc_msgSend(v35, sel_executeSwift_error_, v31, &aBlock);
    _Block_release(v31);
    v16 = aBlock;
    v33 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v33 & 1) == 0)
    {
      if ((v32 & 1) != 0)
      {
        if (!objc_msgSend(v35, sel_changes))
          goto LABEL_26;
        v20 = a1;
LABEL_10:
        sub_23AE0E5E8(v20);
LABEL_26:
        swift_release();
LABEL_27:
        swift_release();

        return;
      }
      goto LABEL_25;
    }
    goto LABEL_32;
  }
  if ((v22 & 1) == 0)
  {
    sub_23AE0F114(v2, a1, (uint64_t)v10);
    goto LABEL_27;
  }
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = v2;
  v24[3] = a1;
  v24[4] = v10;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_23ABF729C;
  *(_QWORD *)(v25 + 24) = v24;
  v41 = sub_23AA956C8;
  v42 = v25;
  aBlock = (id)MEMORY[0x24BDAC760];
  v38 = 1107296256;
  v39 = sub_23AA9432C;
  v40 = (ValueMetadata *)&block_descriptor_172;
  v26 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v27 = objc_msgSend(v35, sel_executeSwift_error_, v26, &aBlock);
  _Block_release(v26);
  v28 = aBlock;
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v26 & 1) != 0)
LABEL_33:
    __break(1u);
  if ((v27 & 1) == 0)
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
    goto LABEL_14;
  }
  swift_release();
  swift_release();

}

uint64_t sub_23AE0EEF4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t result;
  _QWORD v11[4];
  uint64_t v12;
  unint64_t v13;

  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v5 = qword_23B1DB328[(char)sub_23AE57808()];
  v11[3] = MEMORY[0x24BEE1768];
  v11[0] = v5;
  sub_23AA94C90((uint64_t)v11);
  v7 = v6;
  sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  if (v7)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v8 = *(_QWORD *)(a3 + 136);
    if (*(_BYTE *)(a3 + 144))
    {
      if (*(_BYTE *)(a3 + 144) != 1)
      {
        v8 = (unint64_t)(v8 != 0) << 63;
        goto LABEL_8;
      }
      if ((v8 & 0x8000000000000000) == 0)
      {
LABEL_8:
        v9 = objc_msgSend(a1, sel_bindLongParameter_, v8);
        sub_23B1C63E0();

        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        return v12;
      }
      __break(1u);
    }
    v8 = -(uint64_t)v8;
    goto LABEL_8;
  }
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AE0F114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  unsigned int v11;
  id v12;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = *(void **)(a1 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = sub_23ABF72C0;
  v8[3] = v7;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v8;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_182;
  v9 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v10 = v6;
  v11 = objc_msgSend(v6, sel_executeSwift_error_, v9, aBlock);
  _Block_release(v9);
  v12 = aBlock[0];
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v6 & 1) != 0)
    __break(1u);
  if (v11)
  {
    if (!objc_msgSend(v10, sel_changes))
      return swift_release();
    sub_23AE0E5E8(a2);
  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_23AE0F30C(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  id v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v27[0] = 0;
  v27[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v29 = 0;
  v30 = 0xE000000000000000;
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v5 = *(_QWORD *)(a3 + 136);
  if (!*(_BYTE *)(a3 + 144))
    goto LABEL_5;
  if (*(_BYTE *)(a3 + 144) != 1)
  {
    v5 = (unint64_t)(v5 != 0) << 63;
    goto LABEL_7;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    v5 = -(uint64_t)v5;
  }
LABEL_7:
  v6 = objc_msgSend(a1, sel_bindLongParameter_, v5);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v7 = sub_23AE57808();
  v8 = MEMORY[0x24BEE1768];
  v9 = qword_23B1DB328[v7];
  v28 = MEMORY[0x24BEE1768];
  v27[0] = v9;
  sub_23AA94C90((uint64_t)v27);
  v11 = v10;
  sub_23AA8A05C((uint64_t)v27, qword_2542E5640);
  if (!v11)
    goto LABEL_12;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v12 = *(void **)(a3 + 88);
  v13 = *(void **)(a3 + 96);
  v14 = *(_BYTE *)(a3 + 104);
  sub_23AAAE478(v12, v13, v14);
  v15 = sub_23AD7E748();
  sub_23AE1B27C((uint64_t)v15, v12, v13, v14);
  swift_bridgeObjectRelease();
  sub_23AAAEE10(v12, v13, v14);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v16 = *(_QWORD *)(a3 + 128);
  v17 = MEMORY[0x24BEE1E88];
  v28 = MEMORY[0x24BEE1E88];
  v27[0] = v16;
  sub_23AA94C90((uint64_t)v27);
  v19 = v18;
  sub_23AA8A05C((uint64_t)v27, qword_2542E5640);
  if (!v19)
    goto LABEL_12;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v20 = *(_QWORD *)(a3 + 120);
  v28 = v8;
  v27[0] = v20;
  sub_23AA94C90((uint64_t)v27);
  v22 = v21;
  sub_23AA8A05C((uint64_t)v27, qword_2542E5640);
  if (!v22)
    goto LABEL_12;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v23 = *(_QWORD *)(a3 + 112);
  v28 = v17;
  v27[0] = v23;
  sub_23AA94C90((uint64_t)v27);
  v25 = v24;
  sub_23AA8A05C((uint64_t)v27, qword_2542E5640);
  if (v25)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    return v29;
  }
  else
  {
LABEL_12:
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

void sub_23AE0F730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  char isEscapingClosureAtFileLocation;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unsigned __int8 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unsigned __int8 v22;
  char v23;
  void *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  unsigned __int8 v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  id aBlock;
  uint64_t v42;
  id (*v43)(uint64_t, void *);
  void *v44;
  uint64_t (*v45)();
  uint64_t v46;
  uint64_t v47;

  v2 = v1;
  v47 = *MEMORY[0x24BDAC8D0];
  v4 = *(void **)(v1 + 16);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_23AEB10B8;
  *(_QWORD *)(v6 + 24) = v5;
  v45 = sub_23AA956C8;
  v46 = v6;
  aBlock = (id)MEMORY[0x24BDAC760];
  v42 = 1107296256;
  v43 = sub_23AA9432C;
  v44 = &block_descriptor_99;
  v7 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v8 = objc_msgSend(v4, sel_fetchSwift_error_, v7, &aBlock);
  _Block_release(v7);
  v9 = aBlock;
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (!v8)
  {
    sub_23B1C587C();

    swift_willThrow();
    swift_release();
    return;
  }
  if ((objc_msgSend(v8, sel_next) & 1) == 0)
    goto LABEL_24;
  v11 = objc_msgSend(v8, sel_longAtIndex_, 0);
  v39 = objc_msgSend(v8, sel_unsignedLongAtIndex_, 1);
  v12 = objc_msgSend(v8, sel_longAtIndex_, 2);
  v13 = objc_msgSend(v8, sel_unsignedLongAtIndex_, 3);
  if (v12 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    if ((*(_BYTE *)(v2 + 72) & 1) != 0)
    {
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v2;
      *(_QWORD *)(v14 + 24) = v11;
      v15 = swift_allocObject();
      *(_QWORD *)(v15 + 16) = sub_23ABF7218;
      *(_QWORD *)(v15 + 24) = v14;
      v45 = sub_23AA956C8;
      v46 = v15;
      aBlock = (id)MEMORY[0x24BDAC760];
      v42 = 1107296256;
      v43 = sub_23AA9432C;
      v44 = &block_descriptor_129_0;
      v16 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      aBlock = 0;
      v17 = objc_msgSend(v4, sel_executeSwift_error_, v16, &aBlock);
      _Block_release(v16);
      v18 = aBlock;
      LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v16 & 1) == 0)
      {
        if ((v17 & 1) != 0)
          goto LABEL_17;
        sub_23B1C587C();

        swift_willThrow();
LABEL_23:
        swift_release();
LABEL_24:
        swift_release();

        return;
      }
      goto LABEL_28;
    }
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = v2;
    v31[3] = a1;
    v31[4] = v11;
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = sub_23ABF71D8;
    *(_QWORD *)(v32 + 24) = v31;
    v45 = sub_23AA956C8;
    v46 = v32;
    aBlock = (id)MEMORY[0x24BDAC760];
    v42 = 1107296256;
    v43 = sub_23AA9432C;
    v44 = &block_descriptor_119;
    v33 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    aBlock = 0;
    v34 = objc_msgSend(v4, sel_executeSwift_error_, v33, &aBlock);
    _Block_release(v33);
    v35 = aBlock;
    LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v33 & 1) != 0)
      goto LABEL_29;
    if ((v34 & 1) != 0)
    {
LABEL_17:
      swift_release();
      goto LABEL_24;
    }
    sub_23B1C587C();

LABEL_22:
    swift_willThrow();
    goto LABEL_23;
  }
  v37 = v13;
  v38 = v12;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 32) = 0;
  *(_QWORD *)(v19 + 16) = v2;
  *(_BYTE *)(v19 + 40) = 1;
  *(_QWORD *)(v19 + 48) = v11;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_23ABF71AC;
  *(_QWORD *)(v20 + 24) = v19;
  v45 = sub_23AA956C8;
  v46 = v20;
  aBlock = (id)MEMORY[0x24BDAC760];
  v42 = 1107296256;
  v43 = sub_23AA9432C;
  v44 = &block_descriptor_109;
  v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v22 = objc_msgSend(v4, sel_executeSwift_error_, v21, &aBlock);
  _Block_release(v21);
  v36 = aBlock;
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v21 & 1) != 0)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  if ((v22 & 1) == 0)
  {
    sub_23B1C587C();

    goto LABEL_22;
  }
  v23 = sub_23AE57808();
  v24 = *(void **)(a1 + 136);
  v25 = *(_BYTE *)(a1 + 144);
  sub_23AE063E0(v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2730);
  v26 = swift_dynamicCastMetatype();
  if (v26)
  {
    aBlock = v24;
    LOBYTE(v42) = v25;
    v27 = (*(uint64_t (**)(id *, id, id, id))(v26 + 552))(&aBlock, v37, v38, v39);
    v28 = *(void **)(v27 + 88);
    v29 = *(void **)(v27 + 96);
    *(_QWORD *)(v27 + 88) = 0;
    *(_QWORD *)(v27 + 96) = 0;
    v30 = *(_BYTE *)(v27 + 104);
    *(_BYTE *)(v27 + 104) = 0;
    sub_23AAAEE10(v28, v29, v30);
    swift_beginAccess();
    sub_23AA8EFC8(a1 + 48, (uint64_t)&aBlock, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)&aBlock, v27 + 48, &qword_2542E16F0);
    swift_endAccess();
    sub_23AE0E5E8(v27);
    swift_release();
    swift_release();
    if (v40)
    {

      swift_release();
      return;
    }
    goto LABEL_24;
  }
  sub_23B1C704C();
  __break(1u);
}

uint64_t sub_23AE0FE84(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t result;
  _QWORD v11[4];
  uint64_t v12;
  unint64_t v13;

  v11[0] = 0;
  v11[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v5 = qword_23B1DB328[(char)sub_23AE57808()];
  v11[3] = MEMORY[0x24BEE1768];
  v11[0] = v5;
  sub_23AA94C90((uint64_t)v11);
  v7 = v6;
  sub_23AA8A05C((uint64_t)v11, qword_2542E5640);
  if (v7)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v8 = *(_QWORD *)(a3 + 136);
    if (*(_BYTE *)(a3 + 144))
    {
      if (*(_BYTE *)(a3 + 144) != 1)
      {
        v8 = (unint64_t)(v8 != 0) << 63;
        goto LABEL_8;
      }
      if ((v8 & 0x8000000000000000) == 0)
      {
LABEL_8:
        v9 = objc_msgSend(a1, sel_bindLongParameter_, v8);
        sub_23B1C63E0();

        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        return v12;
      }
      __break(1u);
    }
    v8 = -(uint64_t)v8;
    goto LABEL_8;
  }
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AE100A4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  id aBlock[6];
  uint64_t v12;
  char v13;
  uint64_t v14;

  v3 = v2;
  v14 = *MEMORY[0x24BDAC8D0];
  v4 = *(void **)(v2 + 16);
  v12 = a1;
  v13 = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  sub_23AA9F454(&v12, v5 + 24);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = sub_23AEADB54;
  v6[3] = v5;
  aBlock[4] = sub_23AA698D4;
  aBlock[5] = v6;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_36_1;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v8 = objc_msgSend(v4, sel_executeSwift_error_, v7, aBlock);
  _Block_release(v7);
  v9 = aBlock[0];
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v7 & 1) != 0)
    __break(1u);
  if ((v8 & 1) == 0)
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_23AE10258(void *a1, uint64_t a2, unint64_t a3, char a4)
{
  id v7;
  uint64_t v9;

  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (!a4)
    goto LABEL_5;
  if (a4 != 1)
  {
    a3 = (unint64_t)(a3 != 0) << 63;
    goto LABEL_7;
  }
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a3 = -(uint64_t)a3;
  }
LABEL_7:
  v7 = objc_msgSend(a1, sel_bindLongParameter_, a3, 0, 0xE000000000000000);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_23AE10390(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  void *v10;
  id v11;
  _QWORD v12[2];

  v2 = sub_23B1C6428();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  sub_23B1C64F4();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C63E0();
  sub_23B1C641C();
  v6 = sub_23B1C63EC();
  v8 = v7;
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    v10 = (void *)sub_23B1C5AA4();
    sub_23AAA3E18(v6, v8);
    v11 = objc_msgSend(a1, sel_bindObjectParameter_, v10);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v12[0];
  }
  return result;
}

void sub_23AE10548(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_23B1C5E4C();
  v3 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v4);
  __asm { BR              X9 }
}

void sub_23AE1063C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD);
  void (*v11)(uint64_t *);
  uint64_t v12;
  uint64_t v13;

  v3 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 - 160) + 80);
  if (v3 && (v4 = swift_retain(), v5 = v3(v4), sub_23AAB7948((uint64_t)v3), v5))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F20);
    v6 = *(_QWORD *)(v2 - 168);
    v7 = swift_dynamicCastClass();
    if (v7)
    {
      v8 = v7;
      v9 = v6;
      v10 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)v5 + 504);
      swift_retain();
      v10(v8, 0);
      if (v0)
      {
        swift_release();
        swift_release();
        return;
      }
      swift_release();
      v6 = v9;
    }
    *v1 = v6;
    swift_storeEnumTagMultiPayload();
    v11 = *(void (**)(uint64_t *))(*(_QWORD *)v5 + 312);
    swift_retain();
    v11(v1);
    v12 = sub_23AA8A05C((uint64_t)v1, (uint64_t *)&unk_2542DDFB0);
    v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 184))(v12);
    if (v13)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v13 + 128))(v5, v6);
      swift_release();
    }
    swift_release();
  }
  else
  {
    v6 = *(_QWORD *)(v2 - 168);
  }
  sub_23AE0F730(v6);
  if (!v0)
  {
    *(_QWORD *)(v2 - 176) = 0;
    if (sub_23AE57808() == 23 || sub_23AE57808() == 7)
      sub_23AE100A4(*(_QWORD *)(v6 + 136), *(_BYTE *)(v6 + 144));
    sub_23AAB7948(0);
    sub_23AAB7948(0);
    sub_23AAB7948(0);
  }
}

uint64_t sub_23AE113AC(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  char v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[4];
  uint64_t v15;
  unint64_t v16;

  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v5 = *(void **)(a3 + 88);
  v6 = *(void **)(a3 + 96);
  v7 = *(_BYTE *)(a3 + 104);
  sub_23AAAE478(v5, v6, v7);
  sub_23ADFDFE8(v5, v6, v7, 0x696C756465686373, 0xEB000000005F676ELL);
  sub_23AAAEE10(v5, v6, v7);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v8 = *(_QWORD *)(a3 + 136);
  if (!*(_BYTE *)(a3 + 144))
  {
LABEL_5:
    v8 = -(uint64_t)v8;
    goto LABEL_7;
  }
  if (*(_BYTE *)(a3 + 144) == 1)
  {
    if ((v8 & 0x8000000000000000) == 0)
      goto LABEL_7;
    __break(1u);
    goto LABEL_5;
  }
  v8 = (unint64_t)(v8 != 0) << 63;
LABEL_7:
  v9 = objc_msgSend(a1, sel_bindLongParameter_, v8);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v10 = qword_23B1DB328[(char)sub_23AE57808()];
  v14[3] = MEMORY[0x24BEE1768];
  v14[0] = v10;
  sub_23AA94C90((uint64_t)v14);
  v12 = v11;
  sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
  if (v12)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

uint64_t sub_23AE11654(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v5 = *(void **)(a3 + 88);
  v6 = *(void **)(a3 + 96);
  v7 = *(_BYTE *)(a3 + 104);
  sub_23AAAE478(v5, v6, v7);
  sub_23ADFDFE8(v5, v6, v7, 0x696C756465686373, 0xEB000000005F676ELL);
  sub_23AAAEE10(v5, v6, v7);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v8 = *(_QWORD *)(a3 + 120);
  v9 = MEMORY[0x24BEE1768];
  v22 = MEMORY[0x24BEE1768];
  v21[0] = v8;
  sub_23AA94C90((uint64_t)v21);
  v11 = v10;
  sub_23AA8A05C((uint64_t)v21, qword_2542E5640);
  if (!v11)
    goto LABEL_11;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v12 = *(_QWORD *)(a3 + 128);
  v22 = MEMORY[0x24BEE1E88];
  v21[0] = v12;
  sub_23AA94C90((uint64_t)v21);
  v14 = v13;
  sub_23AA8A05C((uint64_t)v21, qword_2542E5640);
  if (!v14)
    goto LABEL_11;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v15 = *(_QWORD *)(a3 + 136);
  if (!*(_BYTE *)(a3 + 144))
  {
LABEL_7:
    v15 = -(uint64_t)v15;
    goto LABEL_9;
  }
  if (*(_BYTE *)(a3 + 144) == 1)
  {
    if ((v15 & 0x8000000000000000) == 0)
      goto LABEL_9;
    __break(1u);
    goto LABEL_7;
  }
  v15 = (unint64_t)(v15 != 0) << 63;
LABEL_9:
  v16 = objc_msgSend(a1, sel_bindLongParameter_, v15);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v17 = qword_23B1DB328[(char)sub_23AE57808()];
  v22 = v9;
  v21[0] = v17;
  sub_23AA94C90((uint64_t)v21);
  v19 = v18;
  sub_23AA8A05C((uint64_t)v21, qword_2542E5640);
  if (v19)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v23;
  }
LABEL_11:
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AE119E4(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v19 = 0;
  v20 = 0xE000000000000000;
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v5 = *(void **)(a3 + 88);
  v6 = *(void **)(a3 + 96);
  v7 = *(_BYTE *)(a3 + 104);
  sub_23AAAE478(v5, v6, v7);
  sub_23ADFDFE8(v5, v6, v7, 0x696C756465686373, 0xEB000000005F676ELL);
  sub_23AAAEE10(v5, v6, v7);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v8 = *(_QWORD *)(a3 + 128);
  v18 = MEMORY[0x24BEE1E88];
  v17[0] = v8;
  sub_23AA94C90((uint64_t)v17);
  v10 = v9;
  sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
  if (!v10)
    goto LABEL_10;
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v11 = *(_QWORD *)(a3 + 136);
  if (!*(_BYTE *)(a3 + 144))
  {
LABEL_6:
    v11 = -(uint64_t)v11;
    goto LABEL_8;
  }
  if (*(_BYTE *)(a3 + 144) == 1)
  {
    if ((v11 & 0x8000000000000000) == 0)
      goto LABEL_8;
    __break(1u);
    goto LABEL_6;
  }
  v11 = (unint64_t)(v11 != 0) << 63;
LABEL_8:
  v12 = objc_msgSend(a1, sel_bindLongParameter_, v11);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v13 = qword_23B1DB328[(char)sub_23AE57808()];
  v18 = MEMORY[0x24BEE1768];
  v17[0] = v13;
  sub_23AA94C90((uint64_t)v17);
  v15 = v14;
  sub_23AA8A05C((uint64_t)v17, qword_2542E5640);
  if (v15)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v19;
  }
LABEL_10:
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AE11D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id, uint64_t, id (*)(uint64_t a1, void *a2), void *, _QWORD), uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int v22;
  id v23;
  char *v24;
  char *v25;
  id v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(id, uint64_t, id (*)(uint64_t, void *), void *, _QWORD);
  id aBlock;
  uint64_t v50;
  id (*v51)(uint64_t, void *);
  void *v52;
  uint64_t (*v53)();
  uint64_t v54;
  uint64_t v55;

  v7 = v6;
  v45 = a4;
  v48 = a5;
  v42 = a3;
  v43 = a1;
  v44 = a2;
  v55 = *MEMORY[0x24BDAC8D0];
  v9 = sub_23B1C5DC8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v39 - v17;
  v19 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v19);
  v47 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542E6818 != -1)
    swift_once();
  v21 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
  sub_23AA8EFC8((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_2542E67B8);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9);
  v39[1] = a6;
  if (v22 == 1)
  {
    v23 = v21;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v16, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v9);
  }
  v24 = v47;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v12, v9);
  v40 = *(int *)(v19 + 20);
  *(_QWORD *)&v24[v40] = v21;
  v25 = &v24[*(int *)(v19 + 24)];
  *(_QWORD *)v25 = "SQLDB: Fetch Jobs";
  *((_QWORD *)v25 + 1) = 17;
  v41 = v25;
  v25[16] = 2;
  v26 = v21;
  sub_23B1C6BE4();
  sub_23B1C5DA4();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_23AA8A05C((uint64_t)v18, (uint64_t *)&unk_2542E67B8);
  v27 = v46;
  v28 = *(void **)(v46 + 16);
  v29 = (_QWORD *)swift_allocObject();
  v30 = v42;
  v29[2] = v27;
  v29[3] = v30;
  v31 = v43;
  v29[4] = v45;
  v29[5] = v31;
  v29[6] = v44;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_23AEB268C;
  *(_QWORD *)(v32 + 24) = v29;
  v53 = sub_23AA956C8;
  v54 = v32;
  aBlock = (id)MEMORY[0x24BDAC760];
  v50 = 1107296256;
  v51 = sub_23AA9432C;
  v52 = &block_descriptor_380;
  v33 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v34 = objc_msgSend(v28, sel_fetchSwift_error_, v33, &aBlock);
  _Block_release(v33);
  v35 = aBlock;
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v33 & 1) != 0)
    __break(1u);
  if (v34)
  {
    if (objc_msgSend(v34, sel_next))
    {
      while (1)
      {
        v36 = (void *)MEMORY[0x23B8601A8]();
        sub_23ABEAEF4(v34, (uint64_t)&aBlock);
        if (v7)
          break;
        v48(aBlock, v50, v51, v52, v53);
        v7 = 0;
        swift_release();
        objc_autoreleasePoolPop(v36);
        if ((objc_msgSend(v34, sel_next) & 1) == 0)
          goto LABEL_14;
      }
      objc_autoreleasePoolPop(v36);
    }
LABEL_14:

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  sub_23B1C6BD8();
  v37 = (uint64_t)v47;
  sub_23B1C5DA4();
  sub_23AA937BC(v37, type metadata accessor for Signpost);
  return swift_release();
}

uint64_t sub_23AE121D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id, uint64_t, id (*)(uint64_t a1, void *a2), void *, _QWORD), uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int v22;
  id v23;
  char *v24;
  char *v25;
  id v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  _QWORD v39[2];
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(id, uint64_t, id (*)(uint64_t, void *), void *, _QWORD);
  id aBlock;
  uint64_t v50;
  id (*v51)(uint64_t, void *);
  void *v52;
  uint64_t (*v53)();
  uint64_t v54;
  uint64_t v55;

  v7 = v6;
  v45 = a4;
  v48 = a5;
  v42 = a3;
  v43 = a1;
  v44 = a2;
  v55 = *MEMORY[0x24BDAC8D0];
  v9 = sub_23B1C5DC8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E67B8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)v39 - v17;
  v19 = type metadata accessor for Signpost(0);
  MEMORY[0x24BDAC7A8](v19);
  v47 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542E6818 != -1)
    swift_once();
  v21 = (void *)qword_2542EDD28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
  sub_23AA8EFC8((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_2542E67B8);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9);
  v39[1] = a6;
  if (v22 == 1)
  {
    v23 = v21;
    sub_23B1C5DB0();
    sub_23AA8A05C((uint64_t)v16, (uint64_t *)&unk_2542E67B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v9);
  }
  v24 = v47;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v47, v12, v9);
  v40 = *(int *)(v19 + 20);
  *(_QWORD *)&v24[v40] = v21;
  v25 = &v24[*(int *)(v19 + 24)];
  *(_QWORD *)v25 = "SQLDB: Fetch Jobs";
  *((_QWORD *)v25 + 1) = 17;
  v41 = v25;
  v25[16] = 2;
  v26 = v21;
  sub_23B1C6BE4();
  sub_23B1C5DA4();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_23AA8A05C((uint64_t)v18, (uint64_t *)&unk_2542E67B8);
  v27 = v46;
  v28 = *(void **)(v46 + 16);
  v29 = (_QWORD *)swift_allocObject();
  v30 = v42;
  v29[2] = v27;
  v29[3] = v30;
  v31 = v43;
  v29[4] = v45;
  v29[5] = v31;
  v29[6] = v44;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_23AEB268C;
  *(_QWORD *)(v32 + 24) = v29;
  v53 = sub_23AA956C8;
  v54 = v32;
  aBlock = (id)MEMORY[0x24BDAC760];
  v50 = 1107296256;
  v51 = sub_23AA9432C;
  v52 = &block_descriptor_352;
  v33 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  v34 = objc_msgSend(v28, sel_fetchSwift_error_, v33, &aBlock);
  _Block_release(v33);
  v35 = aBlock;
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v33 & 1) != 0)
    __break(1u);
  if (v34)
  {
    if (objc_msgSend(v34, sel_next))
    {
      while (1)
      {
        v36 = (void *)MEMORY[0x23B8601A8]();
        sub_23ABEB218(v34, (uint64_t)&aBlock);
        if (v7)
          break;
        v48(aBlock, v50, v51, v52, v53);
        v7 = 0;
        swift_release();
        objc_autoreleasePoolPop(v36);
        if ((objc_msgSend(v34, sel_next) & 1) == 0)
          goto LABEL_14;
      }
      objc_autoreleasePoolPop(v36);
    }
LABEL_14:

  }
  else
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  sub_23B1C6BD8();
  v37 = (uint64_t)v47;
  sub_23B1C5DA4();
  sub_23AA937BC(v37, type metadata accessor for Signpost);
  return swift_release();
}

uint64_t sub_23AE12690(void *a1, unint64_t a2, char a3, uint64_t a4)
{
  id v8;
  id v9;

  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  if (!a3)
  {
LABEL_5:
    a2 = -(uint64_t)a2;
    goto LABEL_7;
  }
  if (a3 == 1)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_7;
    __break(1u);
    goto LABEL_5;
  }
  a2 = (unint64_t)(a2 != 0) << 63;
LABEL_7:
  v8 = objc_msgSend(a1, sel_bindLongParameter_, a2);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  if (qword_2542E5078 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E5540);
  sub_23AAB5A28(&qword_2542E75B0, (uint64_t *)&unk_2542E5540, MEMORY[0x24BEE2B40]);
  sub_23AAA420C();
  sub_23B1C6644();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  if (a4)
  {
    *(_QWORD *)(swift_allocObject() + 16) = a1;
    swift_bridgeObjectRetain_n();
    v9 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE7A0);
    sub_23AAB5A28(&qword_2542E2040, (uint64_t *)&unk_2542DE7A0, MEMORY[0x24BEE2B40]);
    sub_23B1C6644();
    swift_release();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0x2064695F6D657469;
}

uint64_t sub_23AE129F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  id aBlock[7];

  v2 = v1;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = *(void **)(v1 + 16);
  objc_msgSend(v4, sel_assertOnQueue);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = a1;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = sub_23AEB26B0;
  v6[3] = v5;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v6;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_362;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v8 = objc_msgSend(v4, sel_executeSwift_error_, v7, aBlock);
  _Block_release(v7);
  v9 = aBlock[0];
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v7 & 1) != 0)
    __break(1u);
  if ((v8 & 1) == 0)
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_23AE12BB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  id aBlock[7];

  v2 = v1;
  aBlock[6] = *(id *)MEMORY[0x24BDAC8D0];
  v4 = *(void **)(v1 + 16);
  objc_msgSend(v4, sel_assertOnQueue);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = a1;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = sub_23AEB2744;
  v6[3] = v5;
  aBlock[4] = sub_23AA956C8;
  aBlock[5] = v6;
  aBlock[0] = (id)MEMORY[0x24BDAC760];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_23AA9432C;
  aBlock[3] = &block_descriptor_390;
  v7 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v8 = objc_msgSend(v4, sel_executeSwift_error_, v7, aBlock);
  _Block_release(v7);
  v9 = aBlock[0];
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v7 & 1) != 0)
    __break(1u);
  if ((v8 & 1) == 0)
  {
    sub_23B1C587C();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_23AE12D6C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v5 = sub_23B1C6428();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = 0;
  v24 = 0xE000000000000000;
  sub_23B1C6EFC();
  v26 = v23;
  v27 = v24;
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v9 = *(void **)(a3 + 88);
  v10 = *(void **)(a3 + 96);
  v11 = *(_BYTE *)(a3 + 104);
  sub_23AAAE478(v9, v10, v11);
  v22 = a1;
  sub_23ADFDFE8(v9, v10, v11, 0x696C756465686373, 0xEB000000005F676ELL);
  sub_23AAAEE10(v9, v10, v11);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  sub_23B1C63E0();
  sub_23B1C641C();
  v12 = sub_23B1C63EC();
  v14 = v13;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v14 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    v15 = (void *)sub_23B1C5AA4();
    sub_23AAA3E18(v12, v14);
    v16 = objc_msgSend(v22, sel_bindObjectParameter_, v15);

    sub_23B1C63E0();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v17 = qword_23B1DB328[(char)sub_23AE58240()];
    v25 = MEMORY[0x24BEE1768];
    v23 = v17;
    sub_23AA94C90((uint64_t)&v23);
    v19 = v18;
    sub_23AA8A05C((uint64_t)&v23, qword_2542E5640);
    if (v19)
    {
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      return v26;
    }
  }
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AE130A8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  char v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[4];
  uint64_t v15;
  unint64_t v16;

  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_23B1C6EFC();
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_23B1C64F4();
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v5 = *(void **)(a3 + 88);
  v6 = *(void **)(a3 + 96);
  v7 = *(_BYTE *)(a3 + 104);
  sub_23AAAE478(v5, v6, v7);
  sub_23ADFDFE8(v5, v6, v7, 0x696C756465686373, 0xEB000000005F676ELL);
  sub_23AAAEE10(v5, v6, v7);
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v8 = *(_QWORD *)(a3 + 136);
  if (!*(_BYTE *)(a3 + 144))
  {
LABEL_5:
    v8 = -(uint64_t)v8;
    goto LABEL_7;
  }
  if (*(_BYTE *)(a3 + 144) == 1)
  {
    if ((v8 & 0x8000000000000000) == 0)
      goto LABEL_7;
    __break(1u);
    goto LABEL_5;
  }
  v8 = (unint64_t)(v8 != 0) << 63;
LABEL_7:
  v9 = objc_msgSend(a1, sel_bindLongParameter_, v8);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v10 = qword_23B1DB328[(char)sub_23AE57808()];
  v14[3] = MEMORY[0x24BEE1768];
  v14[0] = v10;
  sub_23AA94C90((uint64_t)v14);
  v12 = v11;
  sub_23AA8A05C((uint64_t)v14, qword_2542E5640);
  if (v12)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

uint64_t sub_23AE1335C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *i;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[6];
  _QWORD v18[4];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v3 = *(uint64_t (**)(uint64_t))(v1 + 80);
  if (!v3)
  {
    __break(1u);
    goto LABEL_11;
  }
  v4 = v1;
  v5 = result;
  v6 = swift_retain();
  v7 = v3(v6);
  result = sub_23AAB7948((uint64_t)v3);
  if (!v7)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v8 = *(_QWORD *)(v7 + 32);
  swift_retain();
  v9 = swift_release();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(**(_QWORD **)(v8 + 16) + 96))(&v19, v9);
  swift_release();
  v10 = sub_23AE05034(v19, v20);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v23 = v10;
    for (i = (_BYTE *)(v10 + 56); ; i += 32)
    {
      v13 = *i;
      v14 = *((_QWORD *)i - 2);
      v15 = *((_QWORD *)i - 1);
      v19 = *((_QWORD *)i - 3);
      v20 = v14;
      v21 = v15;
      v22 = v13;
      v16 = MEMORY[0x24BDAC7A8](v14);
      v18[2] = &v19;
      MEMORY[0x24BDAC7A8](v16);
      v17[2] = v5;
      v17[3] = &v19;
      v17[4] = v4;
      swift_bridgeObjectRetain();
      sub_23AE11D10((uint64_t)sub_23AEB26C8, (uint64_t)v18, 0, 0, (void (*)(id, uint64_t, id (*)(uint64_t, void *), void *, _QWORD))sub_23AEB26DC, (uint64_t)v17);
      if (v2)
        break;
      swift_bridgeObjectRelease();
      if (!--v11)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_23AE13508(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  _QWORD v19[6];
  _QWORD v20[5];
  void *v21[2];
  id v22;
  uint64_t v23;

  v23 = a1;
  v3 = *(uint64_t (**)(uint64_t))(v1 + 80);
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v4 = v1;
  v5 = swift_retain();
  v6 = v3(v5);
  sub_23AAB7948((uint64_t)v3);
  if (!v6)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v7 = *(_QWORD *)(v6 + 32);
  swift_retain();
  v8 = swift_release();
  (*(void (**)(void **__return_ptr, uint64_t))(**(_QWORD **)(v7 + 16) + 96))(v21, v8);
  swift_release();
  v9 = v21[0];
  v10 = sub_23AE03F50(v21[0]);

  v12 = *(_QWORD *)(v10 + 16);
  if (v12)
  {
    v20[4] = v10;
    v13 = (void **)(v10 + 48);
    while (1)
    {
      v15 = *(v13 - 1);
      v14 = *v13;
      v21[0] = *(v13 - 2);
      v21[1] = v15;
      v22 = v14;
      v16 = MEMORY[0x24BDAC7A8](v11);
      v20[2] = v21;
      MEMORY[0x24BDAC7A8](v16);
      v19[2] = v23;
      v19[3] = v21;
      v19[4] = v4;
      v18 = v17;
      swift_bridgeObjectRetain();
      sub_23AE121D0((uint64_t)sub_23AEB2650, (uint64_t)v20, 0, 0, (void (*)(id, uint64_t, id (*)(uint64_t, void *), void *, _QWORD))sub_23AEB2660, (uint64_t)v19);
      if (v2)
        break;
      v13 += 3;
      swift_bridgeObjectRelease();

      if (!--v12)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_23AE136D8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  char *(*v31)@<X0>(char *@<X0>, _QWORD *@<X8>);
  uint64_t v32;
  void (*v33)(_QWORD *@<X0>, uint64_t *@<X8>);
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *(*v38)@<X0>(char *@<X0>, _QWORD *@<X8>);

  v8 = sub_23B1C6428();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    v30 = 0;
    v31 = (char *(*)@<X0>(char *@<X0>, _QWORD *@<X8>))0xE000000000000000;
    v12 = a4;
    sub_23B1C6EFC();
    v37 = v30;
    v38 = v31;
    sub_23B1C64F4();
    sub_23B1C63E0();
    sub_23B1C641C();
    v13 = sub_23B1C63EC();
    v15 = v14;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (v15 >> 60 == 15)
    {
      __break(1u);
    }
    else
    {
      v16 = (void *)sub_23B1C5AA4();
      sub_23AAA3E18(v13, v15);
      v17 = objc_msgSend(a1, sel_bindObjectParameter_, v16);

      sub_23B1C63E0();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v35 = 40;
      v36 = 0xE100000000000000;
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = a1;
      v30 = a3;
      v31 = sub_23AAB6430;
      v32 = 0;
      v33 = sub_23ABF73DC;
      v34 = v18;
      swift_bridgeObjectRetain_n();
      v19 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE7A0);
      sub_23AAB5A28(&qword_2542E2040, (uint64_t *)&unk_2542DE7A0, MEMORY[0x24BEE2B40]);
      sub_23AAA420C();
      sub_23B1C6644();
      swift_release();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v20 = objc_msgSend(v19, sel_bindLongParameter_, 0);
      sub_23B1C63E0();

      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      v33 = (void (*)(_QWORD *@<X0>, uint64_t *@<X8>))MEMORY[0x24BEE1768];
      v30 = a2;
      sub_23AA94C90((uint64_t)&v30);
      v22 = v21;
      sub_23AA8A05C((uint64_t)&v30, qword_2542E5640);
      if (v22)
      {
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();

        return v37;
      }
    }
  }
  else
  {
    v30 = 0;
    v31 = (char *(*)@<X0>(char *@<X0>, _QWORD *@<X8>))0xE000000000000000;
    sub_23B1C6EFC();
    v37 = v30;
    v38 = v31;
    sub_23B1C64F4();
    v35 = 40;
    v36 = 0xE100000000000000;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = a1;
    v30 = a3;
    v31 = sub_23AAB6430;
    v32 = 0;
    v33 = sub_23ABF73DC;
    v34 = v23;
    swift_bridgeObjectRetain_n();
    v24 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE7A0);
    sub_23AAB5A28(&qword_2542E2040, (uint64_t *)&unk_2542DE7A0, MEMORY[0x24BEE2B40]);
    sub_23AAA420C();
    sub_23B1C6644();
    swift_release();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v25 = objc_msgSend(v24, sel_bindLongParameter_, 0);
    sub_23B1C63E0();

    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v33 = (void (*)(_QWORD *@<X0>, uint64_t *@<X8>))MEMORY[0x24BEE1768];
    v30 = a2;
    sub_23AA94C90((uint64_t)&v30);
    v27 = v26;
    sub_23AA8A05C((uint64_t)&v30, qword_2542E5640);
    if (v27)
    {
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      sub_23B1C64F4();
      return v37;
    }
  }
  result = sub_23B1C704C();
  __break(1u);
  return result;
}

uint64_t sub_23AE13CFC(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *(*v21)@<X0>(char *@<X0>, _QWORD *@<X8>);
  uint64_t v22;
  void (*v23)(_QWORD *@<X0>, uint64_t *@<X8>);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;

  if (a5 == -1)
    goto LABEL_6;
  sub_23B1C6EFC();
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_23B1C64F4();
  if (a5)
  {
    if (a5 == 1)
    {
      if ((a4 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_6:
        sub_23B1C6EFC();
        v27 = 0;
        v28 = 0xE000000000000000;
        sub_23B1C64F4();
        v25 = 40;
        v26 = 0xE100000000000000;
        v10 = swift_allocObject();
        *(_QWORD *)(v10 + 16) = a1;
        v20 = a3;
        v21 = sub_23AAB6430;
        v22 = 0;
        v23 = sub_23ABF73DC;
        v24 = v10;
        swift_bridgeObjectRetain_n();
        v11 = a1;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE7A0);
        sub_23AAB5A28(&qword_2542E2040, (uint64_t *)&unk_2542DE7A0, MEMORY[0x24BEE2B40]);
        sub_23AAA420C();
        sub_23B1C6644();
        swift_release();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        v12 = objc_msgSend(v11, sel_bindLongParameter_, 0);
        sub_23B1C63E0();

        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    else
    {
      a4 = (unint64_t)(a4 != 0) << 63;
    }
  }
  else
  {
    a4 = -(uint64_t)a4;
  }
  v13 = objc_msgSend(a1, sel_bindLongParameter_, a4);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v25 = 40;
  v26 = 0xE100000000000000;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  v20 = a3;
  v21 = sub_23AAB6430;
  v22 = 0;
  v23 = sub_23ABF73DC;
  v24 = v14;
  swift_bridgeObjectRetain_n();
  v15 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE7A0);
  sub_23AAB5A28(&qword_2542E2040, (uint64_t *)&unk_2542DE7A0, MEMORY[0x24BEE2B40]);
  sub_23AAA420C();
  sub_23B1C6644();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v16 = objc_msgSend(v15, sel_bindLongParameter_, 0);
  sub_23B1C63E0();

  sub_23B1C64F4();
  swift_bridgeObjectRelease();
LABEL_10:
  sub_23B1C64F4();
  v23 = (void (*)(_QWORD *@<X0>, uint64_t *@<X8>))MEMORY[0x24BEE1768];
  v20 = a2;
  sub_23AA94C90((uint64_t)&v20);
  v18 = v17;
  sub_23AA8A05C((uint64_t)&v20, qword_2542E5640);
  if (v18)
  {
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    return v27;
  }
  else
  {
    result = sub_23B1C704C();
    __break(1u);
  }
  return result;
}

uint64_t sub_23AE14238(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6050);
  v10 = swift_allocObject();
  v11 = v10 + *(_QWORD *)(*(_QWORD *)v10 + 592);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_BYTE *)(v10 + 144) = a2;
  *(_QWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 32) = 0;
  *(_QWORD *)(v10 + 16) = 0;
  *(_BYTE *)(v10 + 40) = 1;
  *(_OWORD *)(v10 + 48) = 0u;
  *(_OWORD *)(v10 + 64) = 0u;
  *(_QWORD *)(v10 + 80) = 0;
  *(_OWORD *)(v10 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v10 + 104) = 0;
  *(_QWORD *)(v10 + 112) = a3;
  *(_QWORD *)(v10 + 120) = a4;
  *(_QWORD *)(v10 + 128) = a5;
  *(_QWORD *)(v10 + 136) = a1;
  if ((a5 & 0x8000) != 0)
  {
    *(_QWORD *)(v10 + 88) = 2359552;
    *(_BYTE *)(v10 + 104) = 0;
    sub_23AAAEE10((void *)0x40100, 0, 0);
  }
  return v10;
}

uint64_t sub_23AE14334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E62E0);
  v8 = swift_allocObject();
  v9 = v8 + *(_QWORD *)(*(_QWORD *)v8 + 592);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_BYTE *)(v8 + 40) = 1;
  *(_OWORD *)(v8 + 48) = 0u;
  *(_OWORD *)(v8 + 64) = 0u;
  *(_QWORD *)(v8 + 80) = 0;
  *(_OWORD *)(v8 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v8 + 104) = 0;
  *(_QWORD *)(v8 + 112) = a2;
  *(_QWORD *)(v8 + 120) = a3;
  *(_QWORD *)(v8 + 128) = a4;
  *(_QWORD *)(v8 + 136) = a1;
  if ((a4 & 0x8000) != 0)
  {
    *(_QWORD *)(v8 + 88) = 2359552;
    *(_BYTE *)(v8 + 104) = 0;
    sub_23AAAEE10((void *)0x40100, 0, 0);
  }
  return v8;
}

uint64_t sub_23AE14428(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  id v33;
  os_log_type_t v34;
  char v35;
  id v36;
  char *v37;
  os_log_type_t v38;
  char *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;

  v3 = v1;
  v40 = a1;
  v42 = sub_23B1C5E4C();
  v41 = *(_QWORD *)(v42 - 8);
  v4 = MEMORY[0x24BDAC7A8](v42);
  v39 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v39 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v39 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v39 - v12;
  v14 = sub_23B1C60EC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char **)((char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)(v3 + 64);
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BEE5610], v14);
  v19 = v18;
  LOBYTE(v18) = sub_23B1C6104();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v21 = swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v3 + 192) + 16))
    {
      v22 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v23 = sub_23B1C5E40();
      v24 = sub_23B1C6A94();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_23AA66000, v23, v24, "🚀  scheduler not stable: jobs are running", v25, 2u);
LABEL_8:
        v29 = v42;
        v30 = v41;
        MEMORY[0x23B8614BC](v25, -1, -1);
LABEL_13:

        (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v29);
        v32 = 0;
        return v32 & 1;
      }
    }
    else
    {
      v26 = *(_QWORD *)(v3 + 24);
      if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v26 + 192))(v21) & 1) != 0)
      {
        v27 = (id)fpfs_current_or_default_log();
        sub_23B1C5E58();
        v23 = sub_23B1C5E40();
        v28 = sub_23B1C6A94();
        if (os_log_type_enabled(v23, v28))
        {
          v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v25 = 0;
          _os_log_impl(&dword_23AA66000, v23, v28, "🚀  scheduler not stable: some throttles are still active", v25, 2u);
          v13 = v11;
          goto LABEL_8;
        }
        v13 = v11;
      }
      else
      {
        v31 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v26 + 184))(v40 & 1);
        if (v2)
          return v32 & 1;
        if ((v31 & 1) != 0)
        {
          v33 = (id)fpfs_current_or_default_log();
          sub_23B1C5E58();
          v23 = sub_23B1C5E40();
          v34 = sub_23B1C6A94();
          if (os_log_type_enabled(v23, v34))
          {
            v25 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v25 = 0;
            _os_log_impl(&dword_23AA66000, v23, v34, "🚀  scheduler not stable: some jobs are still pending execution", v25, 2u);
            v13 = v8;
            goto LABEL_8;
          }
          v13 = v8;
        }
        else
        {
          v35 = (*(uint64_t (**)(void))(**(_QWORD **)(v3 + 16) + 304))();
          if ((v35 & 1) == 0)
          {
            v32 = 1;
            return v32 & 1;
          }
          v36 = (id)fpfs_current_or_default_log();
          v37 = v39;
          sub_23B1C5E58();
          v23 = sub_23B1C5E40();
          v38 = sub_23B1C6A94();
          if (os_log_type_enabled(v23, v38))
          {
            v25 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v25 = 0;
            _os_log_impl(&dword_23AA66000, v23, v38, "🚀  scheduler not stable: some reconciliations are pending scheduling", v25, 2u);
            v13 = v37;
            goto LABEL_8;
          }
          v13 = v37;
        }
      }
    }
    v29 = v42;
    v30 = v41;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_23AE14844(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  _QWORD v19[2];

  v19[1] = a2;
  v19[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0F90);
  v3 = MEMORY[0x24BDAC7A8](v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v19 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDDA0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v19 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E19C0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(a1, (uint64_t)v16, &qword_2542E19C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23AA724E8((uint64_t)v16, (uint64_t)v7, (uint64_t *)&unk_2542E0F90);
    sub_23AA8EFC8((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_2542E0F90);
    v17 = (char *)&loc_23AE149D4 + 4 * byte_23B1DADA4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23AA724E8((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_2542DDDA0);
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_2542DDDA0);
  v18 = (char *)sub_23AE14A3C + 4 * byte_23B1DAD9E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AE14A3C()
{
  uint64_t v0;

  sub_23AA8A05C(v0, (uint64_t *)&unk_2542DDDA0);
  return swift_bridgeObjectRelease();
}

void sub_23AE14A5C()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E88);
  swift_bridgeObjectRelease();
  sub_23AA8A05C(v1, (uint64_t *)&unk_2542E4760);
  sub_23AE157AC(v0);
  sub_23AA8A05C(v0, (uint64_t *)&unk_2542E0F90);
  JUMPOUT(0x23AE14BD8);
}

void sub_23AE14A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5E78) + 48);
  swift_bridgeObjectRelease();
  sub_23AA8A05C(v2, (uint64_t *)&unk_2542E4760);
  sub_23AA8A05C(v1, (uint64_t *)&unk_2542E4760);
  sub_23AE157AC(v0);
  JUMPOUT(0x23AE14BD4);
}

void sub_23AE14AD4()
{
  uint64_t v0;

  sub_23AA8A05C(v0, (uint64_t *)&unk_2542E0F90);
  JUMPOUT(0x23AE14AE8);
}

void sub_23AE14AFC()
{
  id *v0;

  swift_bridgeObjectRelease();

  JUMPOUT(0x23AE14B0CLL);
}

void sub_23AE14B34()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E90);
  swift_bridgeObjectRelease();
  sub_23AA8A05C(v1, (uint64_t *)&unk_2542E6B00);
  sub_23AE14FB4(v0);
  JUMPOUT(0x23AE14BD4);
}

void sub_23AE14BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  _QWORD v19[2];

  v19[1] = a2;
  v19[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDDA0);
  v3 = MEMORY[0x24BDAC7A8](v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v19 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0F90);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v19 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6488);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(a1, (uint64_t)v16, &qword_2569E6488);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23AA724E8((uint64_t)v16, (uint64_t)v7, (uint64_t *)&unk_2542DDDA0);
    sub_23AA8EFC8((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_2542DDDA0);
    v17 = (char *)&loc_23AE14D8C + 4 * byte_23B1DADB0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23AA724E8((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_2542E0F90);
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_2542E0F90);
  v18 = (char *)sub_23AE14DFC + 4 * byte_23B1DADAA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23AE14DFC()
{
  id *v0;
  uint64_t v1;

  sub_23AA8A05C(v1, (uint64_t *)&unk_2542E0F90);
  swift_bridgeObjectRelease();

}

void sub_23AE14F58()
{
  id *v0;

  swift_bridgeObjectRelease();

  JUMPOUT(0x23AE14F68);
}

void sub_23AE14FB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56[3];
  uint64_t v57;
  uint64_t v58;

  v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  MEMORY[0x24BDAC7A8](v49);
  v50 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v52 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v51 = (char *)&v44 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDDA0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v44 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v44 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v53 = (uint64_t)&v44 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v44 - v18;
  v20 = sub_23B1C5E4C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (id)fpfs_current_or_default_log();
  v55 = v23;
  sub_23B1C5E58();
  sub_23AA8EFC8(a1, (uint64_t)v19, (uint64_t *)&unk_2542DDDA0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_23AA8EFC8((uint64_t)v19, (uint64_t)v15, (uint64_t *)&unk_2542DDDA0);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E0900);
    v27 = (uint64_t)&v15[*(int *)(v26 + 48)];
    v28 = *(_QWORD *)&v15[*(int *)(v26 + 64)];
    swift_bridgeObjectRelease();
    sub_23AA8A05C(v27, (uint64_t *)&unk_2542E6B00);
    sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E6B00);
    if (!v28)
      goto LABEL_6;
  }
  else if (EnumCaseMultiPayload == 5)
  {
    sub_23AA8EFC8((uint64_t)v19, v53, (uint64_t *)&unk_2542DDDA0);
    swift_bridgeObjectRelease();
LABEL_6:
    sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542DDDA0);
    v29 = sub_23B1C6A94();
LABEL_7:
    v31 = (uint64_t)v54;
    v30 = v55;
    sub_23AA8EFC8(a1, (uint64_t)v54, (uint64_t *)&unk_2542DDDA0);
    swift_retain();
    v32 = sub_23B1C5E40();
    if (os_log_type_enabled(v32, v29))
    {
      v33 = swift_slowAlloc();
      v54 = v10;
      v34 = v33;
      v48 = swift_slowAlloc();
      v56[0] = v48;
      *(_DWORD *)v34 = 136446466;
      v46 = v29;
      if (*(_BYTE *)(v58 + 32))
        v35 = 20550;
      else
        v35 = 21318;
      v57 = sub_23AABEC68(v35, 0xE200000000000000, v56);
      v47 = v20;
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2082;
      v44 = v34 + 14;
      v36 = v53;
      sub_23AA8EFC8(v31, v53, (uint64_t *)&unk_2542DDDA0);
      sub_23AA8A05C(v31, (uint64_t *)&unk_2542DDDA0);
      sub_23AE562E8();
      v45 = v21;
      v38 = v37;
      v40 = v39;
      sub_23AA8A05C(v36, (uint64_t *)&unk_2542DDDA0);
      v57 = sub_23AABEC68(v38, v40, v56);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v32, (os_log_type_t)v46, " ✍️  %{public}s snapshot mutation: %{public}s", (uint8_t *)v34, 0x16u);
      v41 = v48;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v41, -1, -1);
      v42 = v34;
      v10 = v54;
      MEMORY[0x23B8614BC](v42, -1, -1);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v55, v47);
    }
    else
    {
      sub_23AA8A05C(v31, (uint64_t *)&unk_2542DDDA0);

      swift_release();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v30, v20);
    }
    sub_23AA8EFC8(a1, (uint64_t)v10, (uint64_t *)&unk_2542DDDA0);
    v43 = (char *)&loc_23AE154A8 + dword_23AE15794[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v29 = sub_23B1C6AB8();
  sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542DDDA0);
  goto LABEL_7;
}

uint64_t sub_23AE154B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E90);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 - 168);
  sub_23AA724E8(v0, v2, (uint64_t *)&unk_2542E6B00);
  v3 = (_QWORD *)(*(_QWORD *)(v1 - 72) + qword_2542EDE50);
  swift_beginAccess();
  if (*v3 == -1)
  {
    __break(1u);
    JUMPOUT(0x23AE15788);
  }
  ++*v3;
  v4 = *(_QWORD *)(v1 - 128);
  (*(void (**)(uint64_t))(**(_QWORD **)(v1 - 72) + 480))(v2);
  result = sub_23AA8A05C(v2, (uint64_t *)&unk_2542E6B00);
  *(_QWORD *)(v1 - 128) = v4;
  return result;
}

void sub_23AE157AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  id *v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  id *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57[3];
  uint64_t v58;

  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542DDFC0);
  MEMORY[0x24BDAC7A8](v48);
  v49 = (char *)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v55 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)&v43 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0F90);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v52 = (char *)&v43 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v43 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v51 = (id *)((char *)&v43 - v17);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v43 - v18;
  v20 = sub_23B1C5E4C();
  v53 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v24 = a1;
  sub_23AA8EFC8(a1, (uint64_t)v19, (uint64_t *)&unk_2542E0F90);
  v54 = v7;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_23AA8EFC8((uint64_t)v19, (uint64_t)v15, (uint64_t *)&unk_2542E0F90);
    v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5E78);
    v28 = (uint64_t)&v15[*(int *)(v27 + 48)];
    v47 = *(_QWORD *)&v15[*(int *)(v27 + 64)];
    swift_bridgeObjectRelease();
    sub_23AA8A05C(v28, (uint64_t *)&unk_2542E4760);
    sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E4760);
    if (!v47)
      goto LABEL_6;
  }
  else if (EnumCaseMultiPayload == 5)
  {
    v26 = v51;
    sub_23AA8EFC8((uint64_t)v19, (uint64_t)v51, (uint64_t *)&unk_2542E0F90);
    swift_bridgeObjectRelease();

LABEL_6:
    sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542E0F90);
    v29 = sub_23B1C6A94();
LABEL_7:
    v30 = (uint64_t)v52;
    sub_23AA8EFC8(v24, (uint64_t)v52, (uint64_t *)&unk_2542E0F90);
    swift_retain();
    v31 = sub_23B1C5E40();
    if (os_log_type_enabled(v31, v29))
    {
      v32 = swift_slowAlloc();
      v52 = v10;
      v33 = v32;
      v47 = swift_slowAlloc();
      v57[0] = v47;
      *(_DWORD *)v33 = 136446466;
      if (*(_BYTE *)(v56 + 32))
        v34 = 20550;
      else
        v34 = 21318;
      v45 = v29;
      v58 = sub_23AABEC68(v34, 0xE200000000000000, v57);
      v46 = v20;
      sub_23B1C6CBC();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2082;
      v43 = v33 + 14;
      v44 = v22;
      v35 = (uint64_t)v51;
      sub_23AA8EFC8(v30, (uint64_t)v51, (uint64_t *)&unk_2542E0F90);
      sub_23AA8A05C(v30, (uint64_t *)&unk_2542E0F90);
      sub_23AE55E70();
      v37 = v36;
      v39 = v38;
      sub_23AA8A05C(v35, (uint64_t *)&unk_2542E0F90);
      v58 = sub_23AABEC68(v37, v39, v57);
      sub_23B1C6CBC();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v31, (os_log_type_t)v45, " ✍️  %{public}s snapshot mutation: %{public}s", (uint8_t *)v33, 0x16u);
      v40 = v47;
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v40, -1, -1);
      v41 = v33;
      v10 = v52;
      MEMORY[0x23B8614BC](v41, -1, -1);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v46);
    }
    else
    {
      sub_23AA8A05C(v30, (uint64_t *)&unk_2542E0F90);

      swift_release();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v22, v20);
    }
    sub_23AA8EFC8(v24, (uint64_t)v10, (uint64_t *)&unk_2542E0F90);
    v42 = (char *)&loc_23AE15CB0 + *((int *)qword_23AE15F88 + swift_getEnumCaseMultiPayload());
    __asm { BR              X10 }
  }
  v29 = sub_23B1C6AB8();
  sub_23AA8A05C((uint64_t)v19, (uint64_t *)&unk_2542E0F90);
  goto LABEL_7;
}

uint64_t sub_23AE15CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E88);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 - 168);
  sub_23AA724E8(v0, v2, (uint64_t *)&unk_2542E4760);
  v3 = (_QWORD *)(*(_QWORD *)(v1 - 112) + qword_2542EDE50);
  swift_beginAccess();
  if (*v3 == -1)
  {
    __break(1u);
    JUMPOUT(0x23AE15F7CLL);
  }
  ++*v3;
  v4 = *(_QWORD *)(v1 - 120);
  (*(void (**)(uint64_t))(**(_QWORD **)(v1 - 112) + 480))(v2);
  result = sub_23AA8A05C(v2, (uint64_t *)&unk_2542E4760);
  *(_QWORD *)(v1 - 120) = v4;
  return result;
}

void sub_23AE15FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  __int16 v28;
  char v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  __int16 v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(void **)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = (_OWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  v48 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 64);
  v49 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 80);
  v13 = *(unsigned __int8 *)(a1 + 115);
  if (v13 != 9)
  {
    if (v13 != 8)
      return;
    if (BYTE2(v11))
    {
      v23 = *(_QWORD *)(a1 + 32);
      v24 = v11 >> 16;
      v25 = *(void **)a1;
      v26 = *(void **)(a1 + 24);
      v27 = *(void **)(a1 + 16);
      v28 = *(_QWORD *)(a1 + 80);
      sub_23AA88218(v3, v4, BYTE1(v4) & 1);
      sub_23AEAD70C(v27, v26, v23, v9, v48, v49, v10, v12, v28, v24);
      sub_23AA862DC(v25, v4, BYTE1(v4) & 1);
      sub_23AEAD8A8(v27, v26, v23, v9, v48, v49, v10, v12, v28, v24);
      return;
    }
    if ((*(_BYTE *)(*(_QWORD *)(v2 + 40) + 32) & 1) == 0 && (v5 & a2) != 0)
    {
      *(_QWORD *)(a1 + 8) &= 0x1FFuLL;
      *(_QWORD *)(a1 + 16) = v5 & ~a2;
      *v8 = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 99) = 0u;
      v29 = 8;
      goto LABEL_14;
    }
    v39 = *(void **)a1;
    v40 = *(void **)(a1 + 16);
    v41 = *(_QWORD *)(a1 + 80);
    sub_23AA88218(v3, v4, BYTE1(v4) & 1);
    sub_23AEAD70C(v40, v6, v7, v9, v48, v49, v10, v12, v41, 0);
    v36 = v39;
    v37 = v4;
    v38 = (v4 >> 8) & 1;
LABEL_17:
    sub_23AA862DC(v36, v37, v38);
    return;
  }
  v43 = *(_QWORD *)(a1 + 64);
  v44 = *(_QWORD *)(a1 + 72);
  v46 = *(unsigned __int8 *)(a1 + 8);
  v47 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 88);
  v45 = *(_BYTE *)(a1 + 9) & 1;
  v15 = *(unsigned __int16 *)(a1 + 112) | (*(unsigned __int8 *)(a1 + 114) << 16);
  if ((v15 & 0xFF0000) != 0)
  {
    v16 = (v4 >> 8) & 1;
    v17 = *(void **)a1;
    v18 = *(void **)(a1 + 24);
    v19 = *(void **)(a1 + 16);
    v20 = *(_QWORD *)(a1 + 80);
    v21 = *(_QWORD *)(a1 + 96);
    v22 = *(_QWORD *)(a1 + 104);
    sub_23AA88218(v3, *(_QWORD *)(a1 + 8), v16);
    sub_23AEAD7F8(v19, v18, v47, v9, v48, v49, v43, v44, v20, v14, v21, v22, v15, SBYTE2(v15));
    sub_23AA862DC(v17, v46, v45);
    sub_23AEAD994(v19, v18, v47, v9, v48, v49, v43, v44, v20, v14, v21, v22, v15, v42);
    return;
  }
  if ((*(_BYTE *)(*(_QWORD *)(v2 + 32) + 32) & 1) != 0 || (v5 & a2) == 0)
  {
    v30 = (v4 >> 8) & 1;
    v31 = *(void **)a1;
    v32 = *(void **)(a1 + 16);
    v33 = *(_QWORD *)(a1 + 80);
    v34 = *(_QWORD *)(a1 + 96);
    v35 = *(_QWORD *)(a1 + 104);
    sub_23AA88218(v3, *(_QWORD *)(a1 + 8), v30);
    sub_23AEAD7F8(v32, v6, v47, v9, v48, v49, v10, v44, v33, v14, v34, v35, v15, 0);
    v36 = v31;
    LOBYTE(v38) = v45;
    v37 = v46;
    goto LABEL_17;
  }
  *(_QWORD *)(a1 + 8) = v46 | (v45 << 8);
  *(_QWORD *)(a1 + 16) = v5 & ~a2;
  *v8 = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 99) = 0u;
  v29 = 9;
LABEL_14:
  *(_BYTE *)(a1 + 115) = v29;
}

void sub_23AE16300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v3;
  unint64_t v4;
  void *v5;
  unint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;

  v3 = *(id *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(void **)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = (_OWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 72);
  v39 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(unsigned __int8 *)(a1 + 115);
  if (v13 != 9)
  {
    if (v13 != 8)
      return;
    v30 = *(_QWORD *)(a1 + 88);
    v32 = *(_QWORD *)(a1 + 72);
    v16 = *(unsigned __int16 *)(a1 + 112) | (*(unsigned __int8 *)(a1 + 114) << 16);
    if ((v16 & 0xFF0000) != 0)
    {
      v28 = *(_QWORD *)(a1 + 96);
      v34 = *(_QWORD *)(a1 + 56);
      v37 = *(id *)a1;
      v17 = *(_QWORD *)(a1 + 48);
      v18 = *(_QWORD *)(a1 + 104);
      sub_23AB5692C(*(id *)a1, v4, BYTE1(v4) & 1);
      sub_23AEAD7F8((id)v6, v5, v7, v9, v17, v34, v39, v32, v12, v30, v28, v18, v16, SBYTE2(v16));
      sub_23AB7C6B4(v37, v4, BYTE1(v4) & 1);
      sub_23AEAD994((void *)v6, v5, v7, v9, v17, v34, v39, v32, v12, v30, v28, v18, v16, SBYTE2(v16));
      return;
    }
    if ((*(_BYTE *)(*(_QWORD *)(v2 + 40) + 32) & 1) == 0 && (v6 & a2) != 0)
    {
      *(_QWORD *)(a1 + 8) &= 0x1FFuLL;
      *(_QWORD *)(a1 + 16) = v6 & ~a2;
      *v8 = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_OWORD *)(a1 + 99) = 0u;
      v19 = 8;
      goto LABEL_14;
    }
    v29 = *(_QWORD *)(a1 + 32);
    v36 = *(_QWORD *)(a1 + 56);
    v38 = *(_QWORD *)(a1 + 48);
    v26 = *(_QWORD *)(a1 + 96);
    v27 = *(_QWORD *)(a1 + 104);
    sub_23AB5692C(v3, v4, BYTE1(v4) & 1);
    sub_23AEAD7F8((id)v6, v5, v29, v9, v38, v36, v39, v32, v12, v30, v26, v27, v16, 0);
    v23 = v3;
    v24 = v4;
    v25 = (v4 >> 8) & 1;
LABEL_17:
    sub_23AB7C6B4(v23, v24, v25);
    return;
  }
  if (BYTE2(v12))
  {
    v33 = *(_BYTE *)(a1 + 9) & 1;
    v14 = (v4 >> 8) & 1;
    v15 = *(_QWORD *)(a1 + 56);
    v31 = *(unsigned __int8 *)(a1 + 8);
    sub_23AB5692C(v3, *(_QWORD *)(a1 + 8), v14);
    sub_23AEAD70C((id)v6, v5, v7, v9, v10, v15, v39, v11, v12, SBYTE2(v12));
    sub_23AB7C6B4(v3, v31, v33);
    sub_23AEAD8A8((void *)v6, v5, v7, v9, v10, v15, v39, v11, v12, SBYTE2(v12));
    return;
  }
  if ((*(_BYTE *)(*(_QWORD *)(v2 + 32) + 32) & 1) != 0 || (v6 & a2) == 0)
  {
    v35 = *(_BYTE *)(a1 + 9) & 1;
    v20 = (v4 >> 8) & 1;
    v21 = *(_QWORD *)(a1 + 56);
    v22 = *(unsigned __int8 *)(a1 + 8);
    sub_23AB5692C(v3, *(_QWORD *)(a1 + 8), v20);
    sub_23AEAD70C((id)v6, v5, v7, v9, v10, v21, v39, v11, v12, 0);
    v23 = v3;
    v24 = v22;
    LOBYTE(v25) = v35;
    goto LABEL_17;
  }
  *(_QWORD *)(a1 + 8) = *(unsigned __int8 *)(a1 + 8) | ((unint64_t)(*(_BYTE *)(a1 + 9) & 1) << 8);
  *(_QWORD *)(a1 + 16) = v6 & ~a2;
  *v8 = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 99) = 0u;
  v19 = 9;
LABEL_14:
  *(_BYTE *)(a1 + 115) = v19;
}

void sub_23AE1664C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  _QWORD v19[2];

  v19[1] = a2;
  v19[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0F90);
  v3 = MEMORY[0x24BDAC7A8](v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v19 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDDA0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v19 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E19C0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(a1, (uint64_t)v16, &qword_2542E19C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23AA724E8((uint64_t)v16, (uint64_t)v7, (uint64_t *)&unk_2542E0F90);
    sub_23AA8EFC8((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_2542E0F90);
    v17 = (char *)&loc_23AE167E0 + 4 * byte_23B1DADBC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23AA724E8((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_2542DDDA0);
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_2542DDDA0);
  v18 = (char *)sub_23AE1683C + 4 * byte_23B1DADB6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AE1683C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_23AE14FB4(v0);
  return sub_23AA8A05C(v0, (uint64_t *)&unk_2542DDDA0);
}

uint64_t sub_23AE1686C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23AA8A05C(v0, (uint64_t *)&unk_2542E0F90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E88);
  swift_bridgeObjectRelease();
  return sub_23AA8A05C(v1, (uint64_t *)&unk_2542E4760);
}

void sub_23AE168A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23AA8A05C(v0, (uint64_t *)&unk_2542E0F90);
  v2 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5E78) + 48);
  swift_bridgeObjectRelease();
  sub_23AA8A05C(v2, (uint64_t *)&unk_2542E4760);
  JUMPOUT(0x23AE169E4);
}

void sub_23AE16934()
{
  uint64_t v0;
  id *v1;

  sub_23AA8A05C(v0, (uint64_t *)&unk_2542E0F90);
  swift_bridgeObjectRelease();

  JUMPOUT(0x23AE169E8);
}

uint64_t sub_23AE16958()
{
  uint64_t v0;
  uint64_t v1;

  sub_23AA8A05C(v1, (uint64_t *)&unk_2542DDDA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5E90);
  swift_bridgeObjectRelease();
  return sub_23AA8A05C(v0, (uint64_t *)&unk_2542E6B00);
}

void sub_23AE16994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23AA8A05C(v1, (uint64_t *)&unk_2542DDDA0);
  v2 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2542E0900) + 48);
  swift_bridgeObjectRelease();
  sub_23AA8A05C(v2, (uint64_t *)&unk_2542E6B00);
  JUMPOUT(0x23AE169E0);
}

void sub_23AE16A0C()
{
  uint64_t v0;

  sub_23AA8A05C(v0, (uint64_t *)&unk_2542DDDA0);
  swift_bridgeObjectRelease();
  JUMPOUT(0x23AE169E8);
}

void sub_23AE16A28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  _QWORD v19[2];

  v19[1] = a2;
  v19[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDDA0);
  v3 = MEMORY[0x24BDAC7A8](v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v19 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0F90);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v19 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6488);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23AA8EFC8(a1, (uint64_t)v16, &qword_2569E6488);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23AA724E8((uint64_t)v16, (uint64_t)v7, (uint64_t *)&unk_2542DDDA0);
    sub_23AA8EFC8((uint64_t)v7, (uint64_t)v5, (uint64_t *)&unk_2542DDDA0);
    v17 = (char *)&loc_23AE16BBC + 4 * byte_23B1DADC8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23AA724E8((uint64_t)v16, (uint64_t)v13, (uint64_t *)&unk_2542E0F90);
  sub_23AA8EFC8((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_2542E0F90);
  v18 = (char *)sub_23AE16C40 + 4 * byte_23B1DADC2[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23AE16C40()
{
  id *v0;
  uint64_t v1;

  swift_bridgeObjectRelease();

  sub_23AE157AC(v1);
  return sub_23AA8A05C(v1, (uint64_t *)&unk_2542E0F90);
}

void sub_23AE16DE0()
{
  id *v0;
  uint64_t v1;

  sub_23AA8A05C(v1, (uint64_t *)&unk_2542E0F90);
  swift_bridgeObjectRelease();

  JUMPOUT(0x23AE16DBCLL);
}

uint64_t sub_23AE16E04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  void *v23;
  void *v24;
  char v25;
  _BYTE v26[40];
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[56];
  uint64_t v31;

  v4 = sub_23AE7956C(66, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
  if (!v2)
  {
    v5 = (void *)v4;
    v6 = sub_23AE78118(67, a1);
    v7 = sub_23AA9B6DC(97, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    v9 = v8;
    sub_23AE77EF0(98, a1, (uint64_t)v30);
    v10 = (void *)sub_23AAA94C0(129, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    swift_bridgeObjectRetain();
    v11 = sub_23AE77B40(32, a1);
    v13 = sub_23AE77978(33, a1);
    swift_bridgeObjectRelease();
    v31 = sub_23AE777B0(65, a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E61B0);
    swift_allocObject();
    v1 = sub_23AEAC2D0(v5, v6, v7, v9, (uint64_t)v30, v10, v11, v13, v31);

    sub_23AEB1828((uint64_t)v30);
    v14 = sub_23AE775D8(64, a1);
    if ((v15 & 1) != 0)
    {
      v16 = 0;
      v29 = 0u;
      v28 = 0u;
    }
    else
    {
      v16 = v14;
      *(_QWORD *)&v29 = &type metadata for SQLJobID;
      *((_QWORD *)&v29 + 1) = sub_23AEB16D8();
    }
    v27 = v16;
    sub_23AA724E8((uint64_t)&v27, (uint64_t)v26, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)v26, v1 + 48, &qword_2542E16F0);
    swift_endAccess();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_23AE29E4C(v17, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724);
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRelease();
    v23 = *(void **)(v1 + 88);
    v24 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 88) = v18;
    *(_QWORD *)(v1 + 96) = v20;
    v25 = *(_BYTE *)(v1 + 104);
    *(_BYTE *)(v1 + 104) = v22;
    sub_23AAAEE10(v23, v24, v25);
  }
  return v1;
}

uint64_t sub_23AE17118(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  void *v27;
  void *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _BYTE v35[40];
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  void *v39;

  v4 = sub_23AA9B8AC(66, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
  if (!v2)
  {
    v6 = v4;
    v7 = v5;
    v8 = sub_23AE78118(67, a1);
    v9 = sub_23AA9B6DC(97, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    v11 = v10;
    v12 = (void *)sub_23AE784A8(98, a1);
    v14 = v13;
    v34 = v15;
    v39 = v16;
    v33 = (void *)sub_23AAA94C0(129, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    swift_bridgeObjectRetain();
    v32 = sub_23AE77B40(32, a1);
    v31 = sub_23AE77978(33, a1);
    swift_bridgeObjectRelease();
    v30 = sub_23AE777B0(65, a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5570);
    swift_allocObject();
    v1 = sub_23AEAC4C8(v6, v7, v8, v9, v11, v12, v14, v34, v39, v33, v32, v31, v30);

    sub_23AEB1750(v12, v14, v34, v39);
    v18 = sub_23AE775D8(64, a1);
    if ((v19 & 1) != 0)
    {
      v20 = 0;
      v38 = 0u;
      v37 = 0u;
    }
    else
    {
      v20 = v18;
      *(_QWORD *)&v38 = &type metadata for SQLJobID;
      *((_QWORD *)&v38 + 1) = sub_23AEB16D8();
    }
    v36 = v20;
    sub_23AA724E8((uint64_t)&v36, (uint64_t)v35, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)v35, v1 + 48, &qword_2542E16F0);
    swift_endAccess();
    v21 = swift_bridgeObjectRetain();
    v22 = sub_23AE29E4C(v21, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724);
    v24 = v23;
    v26 = v25;
    swift_bridgeObjectRelease();
    v27 = *(void **)(v1 + 88);
    v28 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 88) = v22;
    *(_QWORD *)(v1 + 96) = v24;
    v29 = *(_BYTE *)(v1 + 104);
    *(_BYTE *)(v1 + 104) = v26;
    sub_23AAAEE10(v27, v28, v29);
  }
  return v1;
}

uint64_t sub_23AE17474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  void *v23;
  void *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  sub_23AE77D08(99, a1, (uint64_t)&v30);
  if (!v2)
  {
    v5 = v31;
    v35 = v30;
    v6 = *((_QWORD *)&v31 + 1);
    v7 = v32;
    v8 = v33;
    v9 = v34;
    swift_bridgeObjectRetain();
    v28 = sub_23AE77B40(32, a1);
    v27 = sub_23AE77978(33, a1);
    swift_bridgeObjectRelease();
    v26 = sub_23AE777B0(65, a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)a2);
    v11 = swift_allocObject();
    a2 = v11;
    *(_QWORD *)(v11 + 144) = v5;
    *(_QWORD *)(v11 + 152) = v6;
    *(_OWORD *)(v11 + 160) = v7;
    *(_BYTE *)(v11 + 176) = v8;
    *(_QWORD *)(v11 + 184) = v9;
    *(_QWORD *)(v11 + 24) = 0;
    *(_QWORD *)(v11 + 32) = 0;
    *(_QWORD *)(v11 + 16) = 0;
    *(_BYTE *)(v11 + 40) = 1;
    *(_OWORD *)(v11 + 48) = 0u;
    v12 = v11 + 48;
    *(_OWORD *)(v11 + 64) = 0u;
    *(_QWORD *)(v11 + 80) = 0;
    *(_OWORD *)(v11 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v11 + 104) = 0;
    *(_QWORD *)(v11 + 112) = v28;
    *(_QWORD *)(v11 + 120) = v27;
    v13 = v35;
    *(_QWORD *)(v11 + 128) = v26;
    *(_QWORD *)(v11 + 136) = v13;
    if ((v26 & 0x8000) != 0)
    {
      *(_QWORD *)(v11 + 88) = 2359552;
      *(_BYTE *)(v11 + 104) = 0;
      sub_23AAAEE10((void *)0x40100, 0, 0);
    }
    v14 = sub_23AE775D8(64, a1);
    if ((v15 & 1) != 0)
    {
      v16 = 0;
      v31 = 0u;
      v32 = 0u;
    }
    else
    {
      v16 = v14;
      *(_QWORD *)&v32 = &type metadata for SQLJobID;
      *((_QWORD *)&v32 + 1) = sub_23AEB16D8();
    }
    v30 = v16;
    sub_23AA724E8((uint64_t)&v30, (uint64_t)v29, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)v29, v12, &qword_2542E16F0);
    swift_endAccess();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_23AE29E4C(v17, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724);
    v20 = v19;
    v22 = v21;
    swift_bridgeObjectRelease();
    v23 = *(void **)(a2 + 88);
    v24 = *(void **)(a2 + 96);
    *(_QWORD *)(a2 + 88) = v18;
    *(_QWORD *)(a2 + 96) = v20;
    v25 = *(_BYTE *)(a2 + 104);
    *(_BYTE *)(a2 + 104) = v22;
    sub_23AAAEE10(v23, v24, v25);
  }
  return a2;
}

uint64_t sub_23AE17708(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  void *v22;
  void *v23;
  char v24;
  _BYTE v25[40];
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v4 = sub_23AE7956C(66, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
  if (!v1)
  {
    v5 = v4;
    v6 = sub_23AE7956C(96, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    swift_bridgeObjectRetain();
    v7 = sub_23AE77B40(32, a1);
    v9 = sub_23AE77978(33, a1);
    swift_bridgeObjectRelease();
    v10 = sub_23AE777B0(65, a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61C0);
    v11 = swift_allocObject();
    v2 = v11;
    *(_QWORD *)(v11 + 136) = v5;
    *(_QWORD *)(v11 + 144) = v6;
    *(_BYTE *)(v11 + 40) = 1;
    *(_OWORD *)(v11 + 48) = 0u;
    v12 = v11 + 48;
    *(_OWORD *)(v11 + 64) = 0u;
    *(_QWORD *)(v11 + 24) = 0;
    *(_QWORD *)(v11 + 32) = 0;
    *(_QWORD *)(v11 + 16) = 0;
    *(_QWORD *)(v11 + 80) = 0;
    *(_OWORD *)(v11 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v11 + 104) = 0;
    *(_QWORD *)(v11 + 112) = v7;
    *(_QWORD *)(v11 + 120) = v9;
    *(_QWORD *)(v11 + 128) = v10;
    if ((v10 & 0x8000) != 0)
    {
      *(_QWORD *)(v11 + 88) = 2359552;
      *(_BYTE *)(v11 + 104) = 0;
      sub_23AAAEE10((void *)0x40100, 0, 0);
    }
    v13 = sub_23AE775D8(64, a1);
    if ((v14 & 1) != 0)
    {
      v15 = 0;
      v27 = 0u;
      v28 = 0u;
    }
    else
    {
      v15 = v13;
      *(_QWORD *)&v28 = &type metadata for SQLJobID;
      *((_QWORD *)&v28 + 1) = sub_23AEB16D8();
    }
    v26 = v15;
    sub_23AA724E8((uint64_t)&v26, (uint64_t)v25, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)v25, v12, &qword_2542E16F0);
    swift_endAccess();
    v16 = swift_bridgeObjectRetain();
    v17 = sub_23AE29E4C(v16, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724);
    v19 = v18;
    v21 = v20;
    swift_bridgeObjectRelease();
    v22 = *(void **)(v2 + 88);
    v23 = *(void **)(v2 + 96);
    *(_QWORD *)(v2 + 88) = v17;
    *(_QWORD *)(v2 + 96) = v19;
    v24 = *(_BYTE *)(v2 + 104);
    *(_BYTE *)(v2 + 104) = v21;
    sub_23AAAEE10(v22, v23, v24);
  }
  return v2;
}

uint64_t sub_23AE179A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  void *v26;
  void *v27;
  char v28;
  _BYTE v29[40];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v4 = sub_23AA9B8AC(66, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
  if (!v1)
  {
    v6 = v4;
    v7 = v5;
    v8 = sub_23AA9B8AC(96, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
    v10 = v9;
    swift_bridgeObjectRetain();
    v11 = sub_23AE77B40(32, a1);
    v12 = sub_23AE77978(33, a1);
    swift_bridgeObjectRelease();
    v33 = sub_23AE777B0(65, a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5578);
    v13 = swift_allocObject();
    v2 = v13;
    *(_BYTE *)(v13 + 144) = v7;
    *(_QWORD *)(v13 + 152) = v8;
    *(_BYTE *)(v13 + 160) = v10;
    *(_QWORD *)(v13 + 24) = 0;
    *(_QWORD *)(v13 + 32) = 0;
    *(_QWORD *)(v13 + 16) = 0;
    *(_BYTE *)(v13 + 40) = 1;
    *(_OWORD *)(v13 + 48) = 0u;
    v14 = v13 + 48;
    *(_OWORD *)(v13 + 64) = 0u;
    *(_QWORD *)(v13 + 80) = 0;
    *(_OWORD *)(v13 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v13 + 104) = 0;
    *(_QWORD *)(v13 + 112) = v11;
    *(_QWORD *)(v13 + 120) = v12;
    v15 = v33;
    *(_QWORD *)(v13 + 128) = v33;
    *(_QWORD *)(v13 + 136) = v6;
    if (v15 < 0)
    {
      *(_QWORD *)(v13 + 88) = 2359552;
      *(_BYTE *)(v13 + 104) = 0;
      sub_23AAAEE10((void *)0x40100, 0, 0);
    }
    v16 = sub_23AE775D8(64, a1);
    if ((v17 & 1) != 0)
    {
      v19 = 0;
      v31 = 0u;
      v32 = 0u;
    }
    else
    {
      v19 = v16;
      *(_QWORD *)&v32 = &type metadata for SQLJobID;
      *((_QWORD *)&v32 + 1) = sub_23AEB16D8();
    }
    v30 = v19;
    sub_23AA724E8((uint64_t)&v30, (uint64_t)v29, &qword_2542E16F0);
    swift_beginAccess();
    sub_23AA8A660((uint64_t)v29, v14, &qword_2542E16F0);
    swift_endAccess();
    v20 = swift_bridgeObjectRetain();
    v21 = sub_23AE29E4C(v20, (void (*)(uint64_t *__return_ptr, char *))sub_23AAA6724);
    v23 = v22;
    v25 = v24;
    swift_bridgeObjectRelease();
    v26 = *(void **)(v2 + 88);
    v27 = *(void **)(v2 + 96);
    *(_QWORD *)(v2 + 88) = v21;
    *(_QWORD *)(v2 + 96) = v23;
    v28 = *(_BYTE *)(v2 + 104);
    *(_BYTE *)(v2 + 104) = v25;
    sub_23AAAEE10(v26, v27, v28);
  }
  return v2;
}

void sub_23AE17C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[2];
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v1 = v0;
  v2 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
    goto LABEL_6;
  v6 = *(_QWORD *)(v1 + 32);
  v17 = 0x6574726174732820;
  v18 = 0xEA00000000002064;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = v8 * 1000000000.0;
  if ((~COERCE__INT64(v8 * 1000000000.0) & 0x7FF0000000000000) != 0)
  {
    if (v9 > -9.22337204e18)
    {
      if (v9 < 9.22337204e18)
      {
        sub_23AF3E2AC((uint64_t)v9, v6);
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
LABEL_6:
        v17 = 0;
        v18 = 0xE000000000000000;
        sub_23B1C6EFC();
        swift_bridgeObjectRelease();
        v20 = 60;
        v21 = 0xE100000000000000;
        swift_beginAccess();
        sub_23AA8EFC8(v1 + 48, (uint64_t)&v17, &qword_2542E16F0);
        v10 = v19;
        sub_23AA8A05C((uint64_t)&v17, &qword_2542E16F0);
        if (!v10)
          goto LABEL_9;
        v16[0] = 0;
        v16[1] = 0xE000000000000000;
        sub_23AA8EFC8(v1 + 48, (uint64_t)&v17, &qword_2542E16F0);
        v11 = v19;
        if (v19)
        {
          v12 = __swift_project_boxed_opaque_existential_1(&v17, v19);
          v13 = *(_QWORD *)(v11 - 8);
          MEMORY[0x24BDAC7A8](v12);
          v15 = (char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v13 + 16))(v15);
          sub_23B1C7340();
          (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
LABEL_9:
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          __asm { BR              X9 }
        }
LABEL_13:
        __break(1u);
        JUMPOUT(0x23AE18190);
      }
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  goto LABEL_12;
}

uint64_t sub_23AE181A4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 144))(a2);
}

uint64_t sub_23AE181D0(uint64_t a1, void *a2, int a3, int a4, int a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  __int128 v27;
  _QWORD *v28;
  char v29;
  int v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  void (*v56)(uint64_t, _QWORD, _QWORD, _QWORD);
  uint64_t v57;
  void *v58;
  id v59;
  unsigned __int8 v60;
  unsigned __int8 v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  NSObject *v67;
  os_log_type_t v68;
  id v69;
  void *v70;
  NSObject *v71;
  char *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t *v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t *v86;
  char *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  int v103;
  _QWORD *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  v11 = v10;
  v97 = a5;
  v103 = a3;
  LODWORD(v104) = a4;
  v105 = a2;
  v96 = a1;
  v15 = sub_23B1C5E4C();
  v98 = *(_QWORD *)(v15 - 8);
  v99 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v82 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E64B0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E64B8);
  v95 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = 0;
  swift_beginAccess();
  if (v108 > 1)
  {
LABEL_16:
    v69 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v70 = v105;
    v71 = sub_23B1C5E40();
    v72 = v20;
    v73 = sub_23B1C6AA0();
    if (os_log_type_enabled(v71, v73))
    {
      v74 = (uint8_t *)swift_slowAlloc();
      v75 = swift_slowAlloc();
      v91 = v11;
      v76 = v75;
      v107 = v75;
      v87 = v72;
      *(_DWORD *)v74 = 136315138;
      v77 = v70;
      v78 = sub_23AA7B734();
      v80 = v79;

      v106 = sub_23AABEC68(v78, v80, &v107);
      sub_23B1C6CBC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23AA66000, v71, v73, "Transform could not converge for item %s", v74, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v76, -1, -1);
      MEMORY[0x23B8614BC](v74, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v87, v99);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v72, v99);
    }
  }
  else
  {
    v100 = v26;
    v101 = v18;
    v92 = a10;
    v102 = a9;
    v86 = &v107;
    v94 = v104 & 1;
    *(_QWORD *)&v27 = 136315394;
    v85 = v27;
    v84 = MEMORY[0x24BEE4AD8] + 8;
    v82 = xmmword_23B1CA760;
    v28 = a6;
    v104 = a6;
    v29 = v97;
    v30 = v103;
    v31 = v96;
    v32 = v23;
    v33 = v24;
    v87 = v20;
    v90 = a8;
    v93 = a7;
    v89 = v32;
    v83 = v24;
    while (1)
    {
      v47 = (uint64_t)v32;
      result = sub_23AEA01F8(v31, v105, v30, v94, v102, (uint64_t)v28, v32);
      if (v11)
        return result;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v47, 1, v33) == 1)
      {
        v81 = &qword_2569E64B0;
        return sub_23AA8A05C(v47, v81);
      }
      v49 = v47;
      v47 = (uint64_t)v100;
      sub_23AA724E8(v49, (uint64_t)v100, (uint64_t *)&unk_2569E64B8);
      if ((v29 & 1) == 0)
      {
        v50 = v28[4];
        v51 = *(uint64_t (**)(uint64_t))(**(_QWORD **)(v50 + 16) + 304);
        v52 = swift_retain();
        v53 = v51(v52);
        v28 = v104;
        v54 = swift_release();
        if ((v53 & 1) != 0)
        {
          v55 = (*(uint64_t (**)(uint64_t))(*v28 + 152))(v54);
          v28 = v104;
          if ((v55 & 0x40) != 0)
          {
            v56 = *(void (**)(uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v50 + 16) + 16);
            if (v56)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_2542E20F0);
              v57 = swift_allocObject();
              *(_OWORD *)(v57 + 16) = v82;
              v58 = v105;
              *(_QWORD *)(v57 + 32) = v105;
              *(_BYTE *)(v57 + 56) = 1;
              v59 = v58;
              sub_23AAFA320((uint64_t)v56);
              v56(v57, MEMORY[0x24BEE4AF8], 0, 0);
              v28 = v104;
              sub_23AAB7948((uint64_t)v56);
              swift_bridgeObjectRelease();
            }
          }
        }
      }
      sub_23AE8AE90(v47);
      v61 = v60;
      result = (*(uint64_t (**)(void))(*v28 + 152))();
      if ((((result & 0x4000) != 0) & v61) == 0)
      {
        v81 = (uint64_t *)&unk_2569E64B8;
        return sub_23AA8A05C(v47, v81);
      }
      if (__OFADD__(v108, 1))
        break;
      ++v108;
      v62 = v104;
      v63 = (*(uint64_t (**)(void))(*(_QWORD *)v104[2] + 504))();
      v64 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v62[4] + 696))(v63);
      (*(void (**)(uint64_t))(*(_QWORD *)v62[5] + 696))(v64);
      v65 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v66 = v105;
      v67 = sub_23B1C5E40();
      v68 = sub_23B1C6A88();
      if (os_log_type_enabled(v67, v68))
      {
        v34 = swift_slowAlloc();
        v35 = swift_slowAlloc();
        v91 = 0;
        v36 = v35;
        v107 = v35;
        *(_DWORD *)v34 = v85;
        v88 = v34 + 4;
        v37 = v66;
        v38 = sub_23AA7B734();
        v40 = v39;

        v41 = v38;
        v42 = v98;
        v43 = v99;
        v106 = sub_23AABEC68(v41, v40, &v107);
        sub_23B1C6CBC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2048;
        v106 = v108;
        sub_23B1C6CBC();
        _os_log_impl(&dword_23AA66000, v67, v68, "Ingesting %s, retries %ld", (uint8_t *)v34, 0x16u);
        swift_arrayDestroy();
        v11 = v91;
        MEMORY[0x23B8614BC](v36, -1, -1);
        v44 = v34;
        v20 = v87;
        MEMORY[0x23B8614BC](v44, -1, -1);

        v45 = *(void (**)(char *, uint64_t))(v42 + 8);
        v33 = v83;
        v45(v101, v43);
        v46 = (uint64_t)v100;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v98 + 8))(v101, v99);
        v46 = v47;
      }
      sub_23AA8A05C(v46, (uint64_t *)&unk_2569E64B8);
      v29 = v97;
      v28 = v104;
      v30 = v103;
      v31 = v96;
      v32 = v89;
      if (v108 >= 2)
        goto LABEL_16;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23AE18910(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD **a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  unsigned int (*v17)(_BYTE *, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD **v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  id *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD **v41;
  char v42;
  int v43;
  id v44;
  id v45;
  _BYTE *v46;
  double v47;
  double v48;
  double v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  void (*v57)(_OWORD *__return_ptr, id *, uint64_t);
  id v58;
  uint64_t v59;
  id v61;
  _BYTE *v62;
  double v63;
  double v64;
  void (*v65)(_BYTE *, uint64_t);
  double v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  double v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  _BYTE *v82;
  double v83;
  double v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  uint64_t v93;
  int v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  void (*v104)(uint64_t *);
  id v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  id v112;
  _BYTE *v113;
  double v114;
  double v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  _BYTE v125[12];
  int v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD **v137;
  uint64_t v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  _BYTE v144[32];
  uint64_t v145;
  char v146;
  _QWORD v147[62];
  _BYTE v148[504];
  _QWORD v149[63];
  id v150;
  __int16 v151;
  _OWORD v152[31];
  _BYTE v153[248];
  _BYTE v154[256];

  v129 = a6;
  v134 = a5;
  v136 = a3;
  v137 = a4;
  v133 = sub_23B1C5BDC();
  v131 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133);
  v132 = &v125[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = &v125[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v125[-v14];
  sub_23AA8EFC8(a1, (uint64_t)&v125[-v14], &qword_2542E4770);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v17 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
  if (v17(v15, 1, v16) == 1)
  {
    sub_23AA8A05C((uint64_t)v15, &qword_2542E4770);
LABEL_4:
    v18 = 0;
    goto LABEL_6;
  }
  sub_23AA724E8((uint64_t)&v15[*(int *)(v16 + 52)], (uint64_t)v149, &qword_2542E5050);
  sub_23AAB7E4C(v149, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
  sub_23AA8A05C((uint64_t)v15, (uint64_t *)&unk_2542E4760);
  sub_23AA724E8((uint64_t)v149, (uint64_t)v152, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v152) == 1)
    goto LABEL_4;
  sub_23AAB7E4C(v149, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
  v18 = *(_QWORD *)&v152[13];
LABEL_6:
  sub_23AA8EFC8(a1, (uint64_t)v13, &qword_2542E4770);
  if (v17(v13, 1, v16) == 1)
  {
    sub_23AA8A05C((uint64_t)v13, &qword_2542E4770);
    v19 = v137;
  }
  else
  {
    sub_23AA724E8((uint64_t)&v13[*(int *)(v16 + 52)], (uint64_t)v149, &qword_2542E5050);
    sub_23AAB7E4C(v149, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
    sub_23AA8A05C((uint64_t)v13, (uint64_t *)&unk_2542E4760);
    sub_23AA724E8((uint64_t)v149, (uint64_t)v152, &qword_2542E5050);
    v20 = sub_23AAFCF2C((uint64_t)v152);
    v19 = v137;
    if (v20 != 1)
    {
      sub_23AAB7E4C(v149, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      v23 = *((_QWORD *)&v152[13] + 1);
LABEL_12:
      v24 = a2 + *(int *)(v16 + 52);
      sub_23AA724E8(v24, (uint64_t)v153, &qword_2542E5050);
      sub_23AA724E8((uint64_t)v153, (uint64_t)v154, &qword_2542E5050);
      v25 = sub_23AAFCF2C((uint64_t)v154);
      v135 = a2;
      if (v25 == 1)
        v26 = 0;
      else
        v26 = *(_QWORD *)(v24 + 208);
      v130 = v6;
      v27 = *v136;
      v127 = v23;
      v128 = v18;
      if ((v27 & 2) != 0)
      {
        v28 = v135 + 8;
        v29 = sub_23B1C63E0();
        v31 = v30;
        if (v29 == sub_23B1C63E0() && v31 == v32)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v33 = sub_23B1C7388();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v33 & 1) == 0)
          {
            v78 = v130;
            v79 = (*(uint64_t (**)(uint64_t))(*v137[4] + 336))(v28);
            if (v78)
              return v22 & 1;
            v23 = v127;
            v18 = v128;
            v130 = 0;
            if (v79 == v127)
            {
              v34 = v127;
            }
            else
            {
              v93 = v79;
              sub_23AA724E8(v24, (uint64_t)v149, &qword_2542E5050);
              sub_23AA724E8((uint64_t)v149, (uint64_t)v152, &qword_2542E5050);
              v94 = sub_23AAFCF2C((uint64_t)v152);
              v34 = v93;
              if (v94 != 1)
                *(_QWORD *)(v24 + 216) = v93;
              if ((v27 & 0x400000000000000) == 0)
                *v136 = v27 | 0x400000000000000;
              v23 = v127;
            }
LABEL_22:
            v35 = *(int *)(v16 + 48);
            v36 = (id *)v135;
            v37 = *(unsigned __int8 *)(v135 + v35);
            v136 = (_QWORD *)v34;
            if (v37 != 1)
              goto LABEL_42;
            v38 = v23;
            if (v18)
            {
              if (v18 == 500)
              {
                if (v23 > 2)
                {
                  if (v23 == 3)
                  {
                    v38 = 1002;
                    goto LABEL_32;
                  }
                  if (v23 == 502)
                  {
                    v38 = 1003;
                    goto LABEL_32;
                  }
                }
                else
                {
                  if (v23 == 1)
                  {
                    v38 = 1000;
                    goto LABEL_32;
                  }
                  if (v23 == 2)
                  {
                    v38 = 1001;
                    goto LABEL_32;
                  }
                }
                v38 = 500;
              }
              else if (v18 == 501)
              {
                v38 = v23;
              }
              else
              {
                v38 = v18;
              }
            }
LABEL_32:
            v39 = v34;
            switch(v26)
            {
              case 0:
                break;
              case 500:
                if (v34 > 2)
                {
                  if (v34 == 3)
                  {
                    v39 = 1002;
                    break;
                  }
                  if (v34 == 502)
                  {
                    v39 = 1003;
                    break;
                  }
                }
                else
                {
                  if (v34 == 1)
                  {
                    v39 = 1000;
                    break;
                  }
                  if (v34 == 2)
                  {
                    v39 = 1001;
                    break;
                  }
                }
                v39 = 500;
                break;
              case 501:
                v39 = v34;
                break;
              default:
                v39 = v26;
                break;
            }
            if (v38 != v39)
            {
              v40 = v26;
              if ((unint64_t)(v39 - 501) < 2 || v39 == 1003)
              {
                v61 = *(id *)v135;
                v62 = v132;
                sub_23B1C5BD0();
                sub_23B1C5B94();
                v64 = v63;
                v65 = *(void (**)(_BYTE *, uint64_t))(v131 + 8);
                v65(v62, v133);
                v66 = v64 * 1000000000.0;
                if ((~COERCE__INT64(v64 * 1000000000.0) & 0x7FF0000000000000) == 0)
                {
LABEL_187:
                  __break(1u);
                  goto LABEL_188;
                }
                if (v66 <= -9.22337204e18)
                {
LABEL_188:
                  __break(1u);
                  goto LABEL_189;
                }
                if (v66 >= 9.22337204e18)
                {
LABEL_189:
                  __break(1u);
                  goto LABEL_190;
                }
                v67 = (uint64_t)v66;
                __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61F8);
                v68 = swift_allocObject();
                *(_QWORD *)(v68 + 24) = 0;
                *(_QWORD *)(v68 + 32) = 0;
                *(_QWORD *)(v68 + 16) = 0;
                *(_QWORD *)(v68 + 112) = 0;
                *(_QWORD *)(v68 + 120) = v67;
                v126 = 1;
                *(_BYTE *)(v68 + 40) = 1;
                *(_OWORD *)(v68 + 48) = 0u;
                *(_OWORD *)(v68 + 64) = 0u;
                *(_QWORD *)(v68 + 80) = 0;
                *(_QWORD *)(v68 + 128) = 0;
                *(_QWORD *)(v68 + 136) = v61;
                *(_OWORD *)(v68 + 88) = xmmword_23B1DA8F0;
                *(_BYTE *)(v68 + 104) = 0;
                sub_23AAAEE10((void *)0x40100, 0, 0);
                v69 = *(void (**)(uint64_t))(*(_QWORD *)v134 + 144);
                v69(v68);
                v70 = swift_release();
                if ((v129 & 1) == 0)
                {
LABEL_43:
                  v41 = v137;
                  v42 = ((uint64_t (*)(void))(*v137)[64])();
                  if (*((unsigned __int8 *)v36 + v35) - 1 <= 1
                    || (v43 = sub_23AEFF068(v128, v127, v42 & 1, 0),
                        v43 == sub_23AEFF068(v40, (uint64_t)v136, v42 & 1, 0)))
                  {
LABEL_49:
                    v55 = v41[2];
                    v150 = *v36;
                    v56 = (uint64_t)v150;
                    v151 = 0;
                    v57 = *(void (**)(_OWORD *__return_ptr, id *, uint64_t))(*v55 + 168);
                    v58 = v150;
                    v59 = v130;
                    v57(v152, &v150, 1);
                    if (v59)
                    {

                      return v22 & 1;
                    }

                    sub_23AA724E8((uint64_t)v152, (uint64_t)v148, &qword_2569E6458);
                    sub_23AA724E8((uint64_t)v148, (uint64_t)v149, &qword_2569E6458);
                    if (sub_23AAFC2A4((uint64_t)v149) == 1)
                    {
LABEL_57:
                      v22 = v126;
                      return v22 & 1;
                    }
                    memcpy(v147, v152, sizeof(v147));
                    if (LOBYTE(v147[26]) != 255)
                    {
                      v145 = v147[25];
                      v146 = v147[26];
                      if (BYTE1(v147[42]) != 6 || LOBYTE(v147[12]) == 2)
                      {
                        sub_23AAFCF50((uint64_t)v147);
                        goto LABEL_57;
                      }
                      v133 = v56;
                      v88 = v147[61];
                      v89 = *(_BYTE *)(v135 + v35);
                      v90 = sub_23AEFF0F4(v128, v127, 0, v42 & 1, (v89 & 0xF) == 1, v147[61] != 0);
                      if (v90 > 999)
                      {
                        v91 = v136;
                        if ((unint64_t)(v90 - 1000) > 2)
                        {
LABEL_137:
                          v95 = v90 == 3;
                          goto LABEL_138;
                        }
                      }
                      else
                      {
                        v91 = v136;
                        if (v90 != 500)
                        {
                          if (v90 == 501)
                          {
                            v92 = 16 * ((v89 & 0xF) == 0);
                            goto LABEL_142;
                          }
                          if (v90 == 502)
                          {
                            v92 = (unint64_t)((v89 & 0xF) == 0) << 6;
                            goto LABEL_142;
                          }
                          goto LABEL_137;
                        }
                      }
                      v95 = (v89 & 0xF) == 1;
LABEL_138:
                      v100 = v95;
                      v92 = 4 * v100;
LABEL_142:
                      v101 = sub_23AEFF0F4(v40, (uint64_t)v91, 0, v42 & 1, (v89 & 0xF) == 1, v88 != 0);
                      if (v101 <= 501)
                      {
                        if (v101 == 3)
                        {
                          v102 = 4;
                          goto LABEL_163;
                        }
                        if (v101 != 500)
                        {
                          if (v101 == 501)
                          {
                            if ((v88 & 3) == 0 && (v89 & 0xF) == 0)
                              v102 = 16;
                            else
                              v102 = 0;
                            if ((v88 & 2) != 0)
                            {
                              v138 = v133;
                              v139 = xmmword_23B1CFA60;
                              v140 = 0u;
                              v141 = 0u;
                              v142 = 0u;
                              v143 = 0u;
                              memset(v144, 0, 27);
                              v144[27] = 13;
                              v104 = *(void (**)(uint64_t *))(*(_QWORD *)v134 + 136);
                              v105 = v58;
                              v104(&v138);

                            }
                            goto LABEL_163;
                          }
LABEL_162:
                          v102 = 0;
                          goto LABEL_163;
                        }
                      }
                      else if ((unint64_t)(v101 - 1000) >= 3)
                      {
                        if (v101 == 502)
                        {
                          if ((0xEu >> (v89 & 0xF)) & 1 | ((v88 & 2) != 0))
                            v102 = 0;
                          else
                            v102 = 64;
                          goto LABEL_163;
                        }
                        goto LABEL_162;
                      }
                      v102 = 4 * ((v89 & 0xF) == 1);
LABEL_163:
                      (*(void (**)(uint64_t *, unint64_t, uint64_t))(*v137[3] + 400))(&v145, (v102 ^ v92) & v92, v102 & (v102 ^ v92) & 0x3FLL);
                      sub_23AAFCF50((uint64_t)v147);
                      goto LABEL_57;
                    }
                    v80 = *(unsigned __int8 *)(v135 + v35);
                    if (v128 <= 501)
                    {
                      if (v128 == 3)
                      {
                        v97 = 4;
                        if (v40 > 999)
                        {
                          if (v40 != 1000)
                          {
                            if (v40 == 1001 || v40 == 1002)
                            {
                              v99 = 4;
                              v96 = 4;
                              if ((_DWORD)v80 == 1)
                                goto LABEL_174;
                              goto LABEL_166;
                            }
                            goto LABEL_168;
                          }
                        }
                        else if (v40 != 500)
                        {
                          v98 = v147[61];
                          if (v40 == 501)
                          {
                            v96 = 4;
                            if (*(_BYTE *)(v135 + v35))
                              goto LABEL_167;
                            goto LABEL_172;
                          }
                          if (v40 == 502)
                          {
                            v96 = 4;
                            if (!*(_BYTE *)(v135 + v35) && (v147[61] & 2) == 0)
                              goto LABEL_125;
                            v99 = 4;
                            goto LABEL_166;
                          }
                          goto LABEL_168;
                        }
                        v96 = 4;
                        if ((_DWORD)v80 == 1)
                          goto LABEL_135;
                        goto LABEL_165;
                      }
                      if (v128 != 500)
                      {
                        if (v128 == 501)
                          __asm { BR              X10 }
LABEL_119:
                        v97 = 0;
                        if (v40 <= 999)
                        {
                          if (v40 != 500)
                          {
                            v98 = v147[61];
                            if (v40 != 501)
                            {
                              if (v40 == 502)
                              {
                                v96 = 0;
                                if (!*(_BYTE *)(v135 + v35) && (v147[61] & 2) == 0)
                                {
LABEL_125:
                                  v99 = 64;
                                  goto LABEL_174;
                                }
                                goto LABEL_165;
                              }
                              goto LABEL_168;
                            }
                            v96 = 0;
                            if (*(_BYTE *)(v135 + v35))
                              goto LABEL_167;
LABEL_172:
                            if ((v98 & 3) != 0)
                              goto LABEL_167;
                            v99 = 16;
LABEL_174:
                            if ((v99 & ~v96) == 0)
                            {
LABEL_183:
                              sub_23AAFCF50((uint64_t)v147);
                              v22 = v126;
                              return v22 & 1;
                            }
                            v106 = *(void **)(v135 + 8);
                            v107 = sub_23B1C63E0();
                            v109 = v108;
                            if (v107 == sub_23B1C63E0() && v109 == v110)
                            {
                              swift_bridgeObjectRelease_n();
                              goto LABEL_183;
                            }
                            v111 = sub_23B1C7388();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if ((v111 & 1) != 0)
                              goto LABEL_183;
                            v112 = v106;
                            v113 = v132;
                            sub_23B1C5BD0();
                            sub_23B1C5B94();
                            v115 = v114;
                            (*(void (**)(_BYTE *, uint64_t))(v131 + 8))(v113, v133);
                            v116 = v115 * 1000000000.0;
                            if ((~COERCE__INT64(v115 * 1000000000.0) & 0x7FF0000000000000) != 0)
                            {
                              if (v116 > -9.22337204e18)
                              {
                                if (v116 < 9.22337204e18)
                                {
                                  v117 = (uint64_t)v116;
                                  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6240);
                                  v118 = swift_allocObject();
                                  *(_BYTE *)(v118 + 40) = 1;
                                  *(_QWORD *)(v118 + 24) = 0;
                                  *(_QWORD *)(v118 + 32) = 0;
                                  *(_QWORD *)(v118 + 16) = 0;
                                  *(_OWORD *)(v118 + 48) = 0u;
                                  *(_OWORD *)(v118 + 64) = 0u;
                                  *(_QWORD *)(v118 + 80) = 0;
                                  *(_QWORD *)(v118 + 112) = 0;
                                  *(_QWORD *)(v118 + 120) = v117;
                                  *(_QWORD *)(v118 + 128) = 0;
                                  *(_QWORD *)(v118 + 136) = v112;
                                  *(_OWORD *)(v118 + 88) = xmmword_23B1DA910;
                                  *(_BYTE *)(v118 + 104) = 0;
                                  sub_23AAAEE10((void *)0x40100, 0, 0);
                                  (*(void (**)(uint64_t))(*(_QWORD *)v134 + 144))(v118);
                                  swift_release();
                                  goto LABEL_183;
                                }
LABEL_198:
                                __break(1u);
                                JUMPOUT(0x23AE19AB4);
                              }
LABEL_197:
                              __break(1u);
                              goto LABEL_198;
                            }
LABEL_196:
                            __break(1u);
                            goto LABEL_197;
                          }
LABEL_109:
                          v96 = 0;
                          if ((_DWORD)v80 != 1)
                            goto LABEL_165;
LABEL_135:
                          v99 = 4;
                          goto LABEL_174;
                        }
                        if (v40 == 1000)
                          goto LABEL_109;
                        if (v40 == 1001 || v40 == 1002)
                        {
                          v96 = 0;
                          if ((_DWORD)v80 == 1)
                            goto LABEL_135;
LABEL_165:
                          v99 = v96;
LABEL_166:
                          v96 = v99;
LABEL_167:
                          v99 = 0;
                          goto LABEL_174;
                        }
LABEL_168:
                        v96 = v97;
                        v99 = 4 * (v40 == 3);
                        goto LABEL_174;
                      }
                    }
                    else if ((unint64_t)(v128 - 1000) >= 3)
                    {
                      if (v128 == 502)
                        __asm { BR              X10 }
                      goto LABEL_119;
                    }
                    __asm { BR              X10 }
                  }
                  v44 = *v36;
                  LOBYTE(v149[0]) = 0;
                  v45 = v44;
                  v46 = v132;
                  sub_23B1C5BD0();
                  sub_23B1C5B94();
                  v48 = v47;
                  (*(void (**)(_BYTE *, uint64_t))(v131 + 8))(v46, v133);
                  v49 = v48 * 1000000000.0;
                  if ((~COERCE__INT64(v48 * 1000000000.0) & 0x7FF0000000000000) != 0)
                  {
                    if (v49 > -9.22337204e18)
                    {
                      if (v49 < 9.22337204e18)
                      {
                        v50 = (uint64_t)v49;
                        v51 = (unint64_t)LOBYTE(v149[0]) << 8;
                        *(_QWORD *)&v152[0] = v44;
                        *((_QWORD *)&v152[0] + 1) = v51;
                        v152[1] = xmmword_23B1D69B0;
                        *(_QWORD *)&v152[2] = (uint64_t)v49;
                        *(_QWORD *)&v152[5] = 0;
                        BYTE3(v152[7]) = 9;
                        (*(void (**)(_OWORD *))(*(_QWORD *)v134 + 136))(v152);
                        sub_23AEB32DC(v44, v51, (void *)0x10000, 0, v50, v52, v53, v54, v119, v120, 0, v121, v122, v123, v124, SBYTE2(v124), SHIBYTE(v124), 9);
                        v36 = (id *)v135;
                        v41 = v137;
                        goto LABEL_49;
                      }
                      goto LABEL_186;
                    }
                  }
                  else
                  {
                    __break(1u);
                  }
                  __break(1u);
LABEL_186:
                  __break(1u);
                  goto LABEL_187;
                }
                (*(void (**)(_OWORD *__return_ptr, uint64_t))(*(_QWORD *)v137[4][2] + 96))(v152, v70);
                v71 = *(_QWORD *)&v152[0];
                v72 = v132;
                sub_23B1C5BD0();
                sub_23B1C5B94();
                v74 = v73;
                v65(v72, v133);
                v75 = v74 * 1000000000.0;
                if ((~COERCE__INT64(v74 * 1000000000.0) & 0x7FF0000000000000) == 0)
                {
LABEL_190:
                  __break(1u);
                  goto LABEL_191;
                }
                if (v75 <= -9.22337204e18)
                {
LABEL_191:
                  __break(1u);
                  goto LABEL_192;
                }
                if (v75 >= 9.22337204e18)
                {
LABEL_192:
                  __break(1u);
                  goto LABEL_193;
                }
                v76 = (uint64_t)v75;
                __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61E0);
                v77 = swift_allocObject();
                *(_QWORD *)(v77 + 24) = 0;
                *(_QWORD *)(v77 + 32) = 0;
                *(_QWORD *)(v77 + 16) = 0;
                *(_QWORD *)(v77 + 112) = 0;
                *(_QWORD *)(v77 + 120) = v76;
                v126 = 1;
                *(_BYTE *)(v77 + 40) = 1;
                *(_OWORD *)(v77 + 48) = 0u;
                *(_OWORD *)(v77 + 64) = 0u;
                *(_QWORD *)(v77 + 80) = 0;
                *(_QWORD *)(v77 + 128) = 0;
                *(_QWORD *)(v77 + 136) = v71;
                *(_OWORD *)(v77 + 88) = xmmword_23B1DA900;
                *(_BYTE *)(v77 + 104) = 0;
                sub_23AAAEE10((void *)0x40100, 0, 0);
                v69(v77);
              }
              else
              {
                v81 = *(id *)v135;
                v82 = v132;
                sub_23B1C5BD0();
                sub_23B1C5B94();
                v84 = v83;
                (*(void (**)(_BYTE *, uint64_t))(v131 + 8))(v82, v133);
                v85 = v84 * 1000000000.0;
                if ((~COERCE__INT64(v84 * 1000000000.0) & 0x7FF0000000000000) == 0)
                {
LABEL_193:
                  __break(1u);
                  goto LABEL_194;
                }
                if (v85 <= -9.22337204e18)
                {
LABEL_194:
                  __break(1u);
                  goto LABEL_195;
                }
                if (v85 >= 9.22337204e18)
                {
LABEL_195:
                  __break(1u);
                  goto LABEL_196;
                }
                v86 = (uint64_t)v85;
                __swift_instantiateConcreteTypeFromMangledName(&qword_2569E61F8);
                v87 = swift_allocObject();
                *(_BYTE *)(v87 + 40) = 1;
                *(_OWORD *)(v87 + 48) = 0u;
                *(_OWORD *)(v87 + 64) = 0u;
                *(_QWORD *)(v87 + 24) = 0;
                *(_QWORD *)(v87 + 32) = 0;
                *(_QWORD *)(v87 + 16) = 0;
                *(_QWORD *)(v87 + 80) = 0;
                *(_OWORD *)(v87 + 88) = xmmword_23B1CA770;
                *(_BYTE *)(v87 + 104) = 0;
                *(_QWORD *)(v87 + 112) = 0;
                *(_QWORD *)(v87 + 120) = v86;
                *(_QWORD *)(v87 + 128) = 0;
                *(_QWORD *)(v87 + 136) = v81;
                (*(void (**)(void))(*(_QWORD *)v134 + 144))();
                v126 = 0;
              }
              swift_release();
              goto LABEL_43;
            }
LABEL_42:
            v40 = v26;
            v126 = 0;
            goto LABEL_43;
          }
        }
        v23 = v127;
        v18 = v128;
      }
      v34 = v23;
      goto LABEL_22;
    }
  }
  v21 = (*(uint64_t (**)(uint64_t))(*v19[4] + 328))(a2);
  if (!v6)
  {
    v23 = v21;
    goto LABEL_12;
  }
  return v22 & 1;
}

unint64_t sub_23AE19AE4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(unint64_t, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  char *v38;
  double v39;
  double v40;
  double v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  unsigned __int8 v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  _QWORD *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char *v62;
  double v63;
  double v64;
  void (*v65)(char *, _QWORD *);
  double v66;
  uint64_t v67;
  void (*v68)(unint64_t);
  uint64_t v69;
  uint64_t v70;
  char v71;
  char *v72;
  double v73;
  double v74;
  double v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  double v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v99;
  uint64_t v100;
  int v101;
  char *v102;
  double v103;
  double v104;
  double v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  char *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD v126[3];
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  _BYTE v131[32];
  id v132;
  id v133[62];
  _BYTE v134[504];
  _QWORD v135[63];
  unint64_t v136;
  __int16 v137;
  _OWORD v138[31];
  _BYTE v139[248];
  _BYTE v140[256];

  v118 = a6;
  v122 = a5;
  v125 = a4;
  v121 = (_QWORD *)sub_23B1C5BDC();
  v119 = *(v121 - 1);
  MEMORY[0x24BDAC7A8](v121);
  v120 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (unint64_t)&v114 - v15;
  sub_23AA8EFC8(a1, (uint64_t)&v114 - v15, (uint64_t *)&unk_2542E4750);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v18 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
  v19 = v18(v16, 1, v17);
  v124 = a2;
  if (v19 == 1)
  {
    sub_23AA8A05C(v16, (uint64_t *)&unk_2542E4750);
    v123 = 0;
  }
  else
  {
    sub_23AA724E8(v16 + *(int *)(v17 + 52), (uint64_t)v135, &qword_2542E5050);
    sub_23AAB7E4C(v135, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
    sub_23AA8A05C(v16, (uint64_t *)&unk_2542E6B00);
    sub_23AA724E8((uint64_t)v135, (uint64_t)v138, &qword_2542E5050);
    if (sub_23AAFCF2C((uint64_t)v138) == 1)
    {
      v123 = 0;
    }
    else
    {
      sub_23AAB7E4C(v135, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      v123 = *(_QWORD *)&v138[13];
    }
    a2 = v124;
  }
  sub_23AA8EFC8(a1, (uint64_t)v14, (uint64_t *)&unk_2542E4750);
  if (v18((unint64_t)v14, 1, v17) == 1)
  {
    sub_23AA8A05C((uint64_t)v14, (uint64_t *)&unk_2542E4750);
    v20 = v6;
  }
  else
  {
    v16 = (unint64_t)&qword_2542E5050;
    sub_23AA724E8((uint64_t)&v14[*(int *)(v17 + 52)], (uint64_t)v135, &qword_2542E5050);
    sub_23AAB7E4C(v135, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AA88224);
    sub_23AA8A05C((uint64_t)v14, (uint64_t *)&unk_2542E6B00);
    sub_23AA724E8((uint64_t)v135, (uint64_t)v138, &qword_2542E5050);
    v20 = v6;
    if (sub_23AAFCF2C((uint64_t)v138) != 1)
    {
      sub_23AAB7E4C(v135, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAA5BA4);
      v23 = *((_QWORD *)&v138[13] + 1);
      v21 = v125;
      goto LABEL_13;
    }
  }
  v21 = v125;
  v22 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v125 + 32) + 328))(a2);
  if (v20)
    return v16 & 1;
  v23 = v22;
LABEL_13:
  v16 = a2 + *(int *)(v17 + 52);
  sub_23AA724E8(v16, (uint64_t)v139, &qword_2542E5050);
  sub_23AA724E8((uint64_t)v139, (uint64_t)v140, &qword_2542E5050);
  if (sub_23AAFCF2C((uint64_t)v140) == 1)
    v24 = 0;
  else
    v24 = *(_QWORD *)(v16 + 208);
  v25 = *a3;
  v116 = v24;
  if ((v25 & 2) == 0)
    goto LABEL_17;
  v30 = *(_QWORD *)(v124 + 16);
  v31 = *(_QWORD *)v124;
  v32 = *(unsigned __int8 *)(v124 + 8);
  if (!*(_BYTE *)(v124 + 24))
  {
    if (*(_BYTE *)(v124 + 8) || (_DWORD)v30 != (_DWORD)v31)
      goto LABEL_85;
    goto LABEL_17;
  }
  if (*(_BYTE *)(v124 + 24) != 1)
  {
    if (v30)
    {
      if (v32 != 2 || v31 != 1)
        goto LABEL_85;
    }
    else if (v32 != 2 || v31)
    {
      goto LABEL_85;
    }
LABEL_17:
    v26 = v23;
    goto LABEL_18;
  }
  if (v32 == 1 && v30 == v31)
    goto LABEL_17;
LABEL_85:
  v79 = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v21 + 32) + 336))(v124 + 16);
  if (v20)
    return v16 & 1;
  v26 = v79;
  if (v79 == v23)
  {
    v26 = v23;
    v24 = v116;
  }
  else
  {
    sub_23AA724E8(v16, (uint64_t)v135, &qword_2542E5050);
    sub_23AA724E8((uint64_t)v135, (uint64_t)v138, &qword_2542E5050);
    if (sub_23AAFCF2C((uint64_t)v138) != 1)
      *(_QWORD *)(v16 + 216) = v26;
    v24 = v116;
    if ((v25 & 0x400000000000000) == 0)
      *a3 = v25 | 0x400000000000000;
  }
LABEL_18:
  v27 = v124;
  v117 = *(int *)(v17 + 48);
  v28 = *(unsigned __int8 *)(v124 + v117);
  v115 = v26;
  if (v28 != 1)
  {
LABEL_50:
    LODWORD(v16) = 0;
    goto LABEL_51;
  }
  v29 = v23;
  if (v123)
  {
    if (v123 == 500)
    {
      if (v23 > 2)
      {
        if (v23 == 3)
        {
          v29 = 1002;
          goto LABEL_40;
        }
        if (v23 == 502)
        {
          v29 = 1003;
          goto LABEL_40;
        }
      }
      else
      {
        if (v23 == 1)
        {
          v29 = 1000;
          goto LABEL_40;
        }
        if (v23 == 2)
        {
          v29 = 1001;
          goto LABEL_40;
        }
      }
      v29 = 500;
    }
    else if (v123 == 501)
    {
      v29 = v23;
    }
    else
    {
      v29 = v123;
    }
  }
LABEL_40:
  v33 = v26;
  switch(v24)
  {
    case 0:
      break;
    case 500:
      if (v26 > 2)
      {
        if (v26 == 3)
        {
          v33 = 1002;
          break;
        }
        if (v26 == 502)
        {
          v33 = 1003;
          break;
        }
      }
      else
      {
        if (v26 == 1)
        {
          v33 = 1000;
          break;
        }
        if (v26 == 2)
        {
          v33 = 1001;
          break;
        }
      }
      v33 = 500;
      break;
    case 501:
      v33 = v26;
      break;
    default:
      v33 = v24;
      break;
  }
  if (v29 == v33)
    goto LABEL_50;
  v59 = v20;
  if ((unint64_t)(v33 - 501) >= 2 && v33 != 1003)
  {
    v82 = *(_QWORD *)v124;
    v83 = *(_BYTE *)(v124 + 8);
    v84 = v120;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v86 = v85;
    (*(void (**)(char *, _QWORD *))(v119 + 8))(v84, v121);
    v87 = v86 * 1000000000.0;
    if ((~COERCE__INT64(v86 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
LABEL_209:
      __break(1u);
      goto LABEL_210;
    }
    if (v87 <= -9.22337204e18)
    {
LABEL_210:
      __break(1u);
      goto LABEL_211;
    }
    if (v87 >= 9.22337204e18)
    {
LABEL_211:
      __break(1u);
      goto LABEL_212;
    }
    v88 = (uint64_t)v87;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F68);
    v89 = swift_allocObject();
    *(_BYTE *)(v89 + 144) = v83;
    *(_QWORD *)(v89 + 24) = 0;
    *(_QWORD *)(v89 + 32) = 0;
    *(_QWORD *)(v89 + 16) = 0;
    *(_BYTE *)(v89 + 40) = 1;
    *(_OWORD *)(v89 + 48) = 0u;
    *(_OWORD *)(v89 + 64) = 0u;
    *(_QWORD *)(v89 + 80) = 0;
    *(_OWORD *)(v89 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v89 + 104) = 0;
    *(_QWORD *)(v89 + 112) = 0;
    *(_QWORD *)(v89 + 120) = v88;
    *(_QWORD *)(v89 + 128) = 0;
    *(_QWORD *)(v89 + 136) = v82;
    (*(void (**)(void))(*(_QWORD *)v122 + 144))();
    v78 = 0;
LABEL_97:
    swift_release();
    v20 = v59;
    LODWORD(v16) = v78;
    goto LABEL_51;
  }
  v60 = *(_QWORD *)v124;
  v61 = *(_BYTE *)(v124 + 8);
  v62 = v120;
  sub_23B1C5BD0();
  sub_23B1C5B94();
  v64 = v63;
  v65 = *(void (**)(char *, _QWORD *))(v119 + 8);
  v65(v62, v121);
  v66 = v64 * 1000000000.0;
  if ((~COERCE__INT64(v64 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_203:
    __break(1u);
    goto LABEL_204;
  }
  if (v66 <= -9.22337204e18)
  {
LABEL_204:
    __break(1u);
    goto LABEL_205;
  }
  if (v66 >= 9.22337204e18)
  {
LABEL_205:
    __break(1u);
    goto LABEL_206;
  }
  v67 = (uint64_t)v66;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F68);
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 144) = v61;
  *(_QWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 16) = 0;
  *(_BYTE *)(v16 + 40) = 1;
  *(_OWORD *)(v16 + 48) = 0u;
  *(_OWORD *)(v16 + 64) = 0u;
  *(_QWORD *)(v16 + 80) = 0;
  *(_QWORD *)(v16 + 112) = 0;
  *(_QWORD *)(v16 + 120) = v67;
  *(_QWORD *)(v16 + 128) = 0;
  *(_QWORD *)(v16 + 136) = v60;
  *(_OWORD *)(v16 + 88) = xmmword_23B1DA8F0;
  *(_BYTE *)(v16 + 104) = 0;
  sub_23AAAEE10((void *)0x40100, 0, 0);
  v68 = *(void (**)(unint64_t))(*(_QWORD *)v122 + 144);
  v68(v16);
  LODWORD(v16) = 1;
  v69 = swift_release();
  v20 = v59;
  if ((v118 & 1) != 0)
  {
    (*(void (**)(_OWORD *__return_ptr, uint64_t))(**(_QWORD **)(*(_QWORD *)(v125 + 32) + 16) + 96))(v138, v69);
    v70 = *(_QWORD *)&v138[0];
    v71 = BYTE8(v138[0]);
    v72 = v120;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v74 = v73;
    v65(v72, v121);
    v75 = v74 * 1000000000.0;
    if ((~COERCE__INT64(v74 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
LABEL_206:
      __break(1u);
      goto LABEL_207;
    }
    if (v75 <= -9.22337204e18)
    {
LABEL_207:
      __break(1u);
      goto LABEL_208;
    }
    if (v75 >= 9.22337204e18)
    {
LABEL_208:
      __break(1u);
      goto LABEL_209;
    }
    v76 = (uint64_t)v75;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F50);
    v77 = swift_allocObject();
    *(_BYTE *)(v77 + 144) = v71;
    *(_QWORD *)(v77 + 24) = 0;
    *(_QWORD *)(v77 + 32) = 0;
    *(_QWORD *)(v77 + 16) = 0;
    v78 = 1;
    *(_BYTE *)(v77 + 40) = 1;
    *(_OWORD *)(v77 + 48) = 0u;
    *(_OWORD *)(v77 + 64) = 0u;
    *(_QWORD *)(v77 + 80) = 0;
    *(_QWORD *)(v77 + 112) = 0;
    *(_QWORD *)(v77 + 120) = v76;
    *(_QWORD *)(v77 + 128) = 0;
    *(_QWORD *)(v77 + 136) = v70;
    *(_OWORD *)(v77 + 88) = xmmword_23B1DA900;
    *(_BYTE *)(v77 + 104) = 0;
    sub_23AAAEE10((void *)0x40100, 0, 0);
    v68(v77);
    v27 = v124;
    goto LABEL_97;
  }
LABEL_51:
  v34 = (*(uint64_t (**)(void))(*(_QWORD *)v125 + 512))();
  if (*(unsigned __int8 *)(v27 + v117) - 1 > 1)
  {
    v35 = v20;
    v36 = sub_23AEFF068(v123, v23, v34 & 1, 0);
    v90 = v36 == sub_23AEFF068(v116, v115, v34 & 1, 0);
    v20 = v35;
    if (!v90)
    {
      v118 = v16;
      v16 = *(_QWORD *)v27;
      v37 = *(unsigned __int8 *)(v27 + 8);
      LOBYTE(v135[0]) = 0;
      v38 = v120;
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v40 = v39;
      (*(void (**)(char *, _QWORD *))(v119 + 8))(v38, v121);
      v41 = v40 * 1000000000.0;
      if ((~COERCE__INT64(v40 * 1000000000.0) & 0x7FF0000000000000) != 0)
      {
        if (v41 > -9.22337204e18)
        {
          if (v41 < 9.22337204e18)
          {
            v42 = (uint64_t)v41;
            v43 = v37 | ((unint64_t)LOBYTE(v135[0]) << 8);
            *(_QWORD *)&v138[0] = v16;
            *((_QWORD *)&v138[0] + 1) = v43;
            v138[1] = xmmword_23B1D69B0;
            *(_QWORD *)&v138[2] = (uint64_t)v41;
            LODWORD(v138[7]) = 150994944;
            (*(void (**)(_OWORD *))(*(_QWORD *)v122 + 136))(v138);
            sub_23AEB2410((void *)v16, v43, (void *)0x10000, 0, v42, v44, v45, v46, v108, v109, v110, v111, v112, v113, 0, 0, 0, 9);
            v20 = v35;
            v27 = v124;
            LODWORD(v16) = v118;
            goto LABEL_57;
          }
          goto LABEL_202;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_202:
      __break(1u);
      goto LABEL_203;
    }
  }
LABEL_57:
  v47 = *(_QWORD *)(v125 + 16);
  v48 = v27;
  v49 = *(_QWORD *)v27;
  v50 = *(unsigned __int8 *)(v48 + 8);
  v136 = v49;
  v137 = v50;
  (*(void (**)(_OWORD *__return_ptr, unint64_t *, uint64_t))(*(_QWORD *)v47 + 168))(v138, &v136, 1);
  if (!v20)
  {
    sub_23AA724E8((uint64_t)v138, (uint64_t)v134, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v134, (uint64_t)v135, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v135) != 1)
    {
      memcpy(v133, v138, sizeof(v133));
      if (v133[30])
      {
        v132 = v133[30];
        if (BYTE1(v133[42]) == 6 && LOBYTE(v133[17]) != 2)
        {
          v118 = v16;
          v121 = v133[61];
          v51 = v133[61] != 0;
          v124 = *(unsigned __int8 *)(v124 + v117);
          v52 = (v124 & 0xF) == 1;
          v53 = v133[30];
          v54 = sub_23AEFF0F4(v123, v23, 0, v34 & 1, v52, v51);
          if (v54 > 999)
          {
            v55 = v116;
            v56 = v53;
            v57 = v121;
            v58 = v124;
            if ((unint64_t)(v54 - 1000) > 2)
            {
LABEL_142:
              v90 = v54 == 3;
              goto LABEL_143;
            }
          }
          else
          {
            v55 = v116;
            v56 = v53;
            v57 = v121;
            v58 = v124;
            if (v54 != 500)
            {
              if (v54 == 501)
              {
                v16 = 16 * ((v124 & 0xF) == 0);
                goto LABEL_147;
              }
              if (v54 == 502)
              {
                v16 = (unint64_t)((v124 & 0xF) == 0) << 6;
                goto LABEL_147;
              }
              goto LABEL_142;
            }
          }
          v90 = (v58 & 0xF) == 1;
LABEL_143:
          v95 = v90;
          v16 = 4 * v95;
LABEL_147:
          v96 = sub_23AEFF0F4(v55, v115, 0, v34 & 1, (v58 & 0xF) == 1, v57 != 0);
          if (v96 <= 501)
          {
            if (v96 == 3)
            {
              v97 = 4;
              goto LABEL_167;
            }
            if (v96 != 500)
            {
              if (v96 == 501)
              {
                if ((v57 & 3) == 0 && (v58 & 0xF) == 0)
                  v97 = 16;
                else
                  v97 = 0;
                v99 = v125;
                if ((v57 & 2) != 0)
                {
                  v126[0] = v49;
                  v126[1] = v50;
                  v126[2] = 1;
                  v127 = 0u;
                  v128 = 0u;
                  v129 = 0u;
                  v130 = 0u;
                  memset(v131, 0, 27);
                  v131[27] = 13;
                  (*(void (**)(_QWORD *))(*(_QWORD *)v122 + 136))(v126);
                }
                goto LABEL_168;
              }
LABEL_166:
              v97 = 0;
              goto LABEL_167;
            }
          }
          else if ((unint64_t)(v96 - 1000) >= 3)
          {
            if (v96 == 502)
            {
              if ((0xEu >> (v58 & 0xF)) & 1 | ((v57 & 2) != 0))
                v97 = 0;
              else
                v97 = 64;
              goto LABEL_167;
            }
            goto LABEL_166;
          }
          v97 = 4 * ((v58 & 0xF) == 1);
LABEL_167:
          v99 = v125;
LABEL_168:
          (*(void (**)(id *, unint64_t, uint64_t))(**(_QWORD **)(v99 + 24) + 400))(&v132, (v97 ^ v16) & v16, v97 & (v97 ^ v16) & 0x3FLL);

          sub_23AAFC3AC((uint64_t)v133);
          LOBYTE(v16) = v118;
          return v16 & 1;
        }
LABEL_195:
        sub_23AAFC3AC((uint64_t)v133);
        return v16 & 1;
      }
      v81 = *(unsigned __int8 *)(v124 + v117);
      if (v123 <= 501)
      {
        if (v123 == 3)
        {
          v93 = 4;
          if (v116 > 999)
          {
            if (v116 != 1000)
            {
              if (v116 == 1001 || v116 == 1002)
              {
                v92 = 4;
                v91 = 4;
                if ((_DWORD)v81 == 1)
                  goto LABEL_180;
                goto LABEL_171;
              }
              goto LABEL_174;
            }
          }
          else if (v116 != 500)
          {
            v94 = (char)v133[61];
            if (v116 != 501)
            {
              if (v116 == 502)
              {
                v91 = 4;
                if (*(_BYTE *)(v124 + v117) || ((uint64_t)v133[61] & 2) != 0)
                {
                  v92 = 4;
LABEL_171:
                  v91 = v92;
LABEL_172:
                  v92 = 0;
                  goto LABEL_180;
                }
LABEL_173:
                v92 = 64;
                goto LABEL_180;
              }
              goto LABEL_174;
            }
            v91 = 4;
            if (*(_BYTE *)(v124 + v117))
              goto LABEL_172;
            goto LABEL_178;
          }
          v91 = 4;
          if ((_DWORD)v81 == 1)
            goto LABEL_116;
          goto LABEL_170;
        }
        if (v123 != 500)
        {
          if (v123 == 501)
            __asm { BR              X10 }
          goto LABEL_124;
        }
      }
      else if ((unint64_t)(v123 - 1000) >= 3)
      {
        if (v123 == 502)
          __asm { BR              X10 }
LABEL_124:
        v93 = 0;
        if (v116 <= 999)
        {
          if (v116 != 500)
          {
            v94 = (char)v133[61];
            if (v116 != 501)
            {
              if (v116 == 502)
              {
                v91 = 0;
                if (*(_BYTE *)(v124 + v117) || ((uint64_t)v133[61] & 2) != 0)
                  goto LABEL_170;
                goto LABEL_173;
              }
              goto LABEL_174;
            }
            v91 = 0;
            if (*(_BYTE *)(v124 + v117))
              goto LABEL_172;
LABEL_178:
            if ((v94 & 3) != 0)
              goto LABEL_172;
            v92 = 16;
LABEL_180:
            if ((v92 & ~v91) == 0)
              goto LABEL_195;
            v100 = *(_QWORD *)(v124 + 16);
            v101 = *(unsigned __int8 *)(v124 + 24);
            if ((_DWORD)v50)
            {
              if ((_DWORD)v50 == 1)
              {
                if (v101 == 1 && v49 == v100)
                  goto LABEL_195;
              }
              else if (v49)
              {
                if (v101 == 2 && v100 == 1)
                  goto LABEL_195;
              }
              else if (v101 == 2 && !v100)
              {
                goto LABEL_195;
              }
            }
            else if (!*(_BYTE *)(v124 + 24) && (_DWORD)v49 == (_DWORD)v100)
            {
              goto LABEL_195;
            }
            v102 = v120;
            sub_23B1C5BD0();
            sub_23B1C5B94();
            v104 = v103;
            (*(void (**)(char *, _QWORD *))(v119 + 8))(v102, v121);
            v105 = v104 * 1000000000.0;
            if ((~COERCE__INT64(v104 * 1000000000.0) & 0x7FF0000000000000) != 0)
            {
              if (v105 > -9.22337204e18)
              {
                if (v105 < 9.22337204e18)
                {
                  v106 = v16;
                  v107 = (uint64_t)v105;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5FB0);
                  v16 = swift_allocObject();
                  *(_BYTE *)(v16 + 144) = v101;
                  *(_QWORD *)(v16 + 24) = 0;
                  *(_QWORD *)(v16 + 32) = 0;
                  *(_QWORD *)(v16 + 16) = 0;
                  *(_BYTE *)(v16 + 40) = 1;
                  *(_OWORD *)(v16 + 48) = 0u;
                  *(_OWORD *)(v16 + 64) = 0u;
                  *(_QWORD *)(v16 + 80) = 0;
                  *(_QWORD *)(v16 + 112) = 0;
                  *(_QWORD *)(v16 + 120) = v107;
                  *(_QWORD *)(v16 + 128) = 0;
                  *(_QWORD *)(v16 + 136) = v100;
                  *(_OWORD *)(v16 + 88) = xmmword_23B1DA910;
                  *(_BYTE *)(v16 + 104) = 0;
                  sub_23AAAEE10((void *)0x40100, 0, 0);
                  (*(void (**)(unint64_t))(*(_QWORD *)v122 + 144))(v16);
                  swift_release();
                  sub_23AAFC3AC((uint64_t)v133);
                  LOBYTE(v16) = v106;
                  return v16 & 1;
                }
LABEL_214:
                __break(1u);
                JUMPOUT(0x23AE1AC9CLL);
              }
LABEL_213:
              __break(1u);
              goto LABEL_214;
            }
LABEL_212:
            __break(1u);
            goto LABEL_213;
          }
LABEL_115:
          v91 = 0;
          if ((_DWORD)v81 == 1)
          {
LABEL_116:
            v92 = 4;
            goto LABEL_180;
          }
LABEL_170:
          v92 = v91;
          goto LABEL_171;
        }
        if (v116 == 1000)
          goto LABEL_115;
        if (v116 == 1001 || v116 == 1002)
        {
          v91 = 0;
          if ((_DWORD)v81 == 1)
            goto LABEL_116;
          goto LABEL_170;
        }
LABEL_174:
        v91 = v93;
        v92 = 4 * (v116 == 3);
        goto LABEL_180;
      }
      __asm { BR              X10 }
    }
  }
  return v16 & 1;
}

uint64_t sub_23AE1ACCC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 152))(a2);
}

uint64_t sub_23AE1ACF8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t *, uint64_t, uint64_t, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD *__return_ptr, uint64_t *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *i;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  double v41;
  double v42;
  double v43;
  _QWORD *v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  void (*v53)(_QWORD *__return_ptr, uint64_t *, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD v60[62];
  _BYTE v61[504];
  _BYTE v62[504];
  uint64_t v63;
  __int16 v64;
  _QWORD v65[63];
  uint64_t v66;
  char v67;

  v6 = sub_23B1C5BDC();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = a1;
  v67 = a2;
  v16 = a3;
  v17 = *(_QWORD *)(a3 + 32);
  v18 = (uint64_t)v59;
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)v17 + 240))(&v66, 1);
  if (v18)
    return result;
  v55 = v8;
  v56 = v16;
  v59 = v15;
  v20 = v58;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_23AA8A05C((uint64_t)v11, (uint64_t *)&unk_2542E4750);
  v21 = (uint64_t)v59;
  sub_23AA724E8((uint64_t)v11, (uint64_t)v59, (uint64_t *)&unk_2542E6B00);
  v22 = *(_QWORD *)(v21 + 128);
  v23 = *(_QWORD *)(v21 + 136);
  v65[0] = 0;
  LOBYTE(v65[1]) = -1;
  v24 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, _QWORD *))(*(_QWORD *)v17 + 256);
  swift_bridgeObjectRetain();
  v25 = v24(&v66, v22, v23, v65);
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(v25 + 16);
  if (!v26)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return sub_23AA8A05C((uint64_t)v59, (uint64_t *)&unk_2542E6B00);
  }
  v27 = *(_QWORD *)(v56 + 16);
  v28 = *(void (**)(_QWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v27 + 168);
  v29 = *(_QWORD *)(v25 + 32);
  v30 = *(unsigned __int8 *)(v25 + 40);
  v63 = v29;
  v64 = v30;
  v28(v65, &v63, 1);
  v53 = v28;
  v54 = v27;
  v52 = v25;
  for (i = (unsigned __int8 *)(v25 + 56); ; i += 16)
  {
    sub_23AA724E8((uint64_t)v65, (uint64_t)v61, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v61, (uint64_t)v62, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v62) == 1)
      goto LABEL_12;
    memcpy(v60, v65, sizeof(v60));
    if (!v60[3] || v60[2] || LOBYTE(v60[20]) || (v60[18] & 0x400) == 0)
    {
      sub_23AAFC3AC((uint64_t)v60);
LABEL_12:
      if (!--v26)
        goto LABEL_22;
      goto LABEL_13;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
    v32 = swift_allocObject();
    v33 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v32 + 16) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v32 + 24) = v33;
    *(_QWORD *)(v32 + 32) = v33;
    *(_QWORD *)(v32 + 40) = v33;
    *(_QWORD *)(v32 + 48) = 0;
    v49 = v60[58];
    v50 = v60[57];
    swift_beginAccess();
    v51 = (_QWORD *)(v32 + 32);
    v34 = *(_QWORD **)(v32 + 32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v34 = sub_23AF98DE8(0, v34[2] + 1, 1, v34);
    v36 = v34[2];
    v35 = v34[3];
    v37 = v36 + 1;
    if (v36 >= v35 >> 1)
    {
      v48 = v36 + 1;
      v44 = v34;
      v45 = v36;
      v46 = sub_23AF98DE8((_QWORD *)(v35 > 1), v36 + 1, 1, v44);
      v37 = v48;
      v36 = v45;
      v34 = v46;
    }
    v34[2] = v37;
    v38 = &v34[15 * v36];
    v38[4] = v29;
    v38[5] = v30;
    v39 = v50;
    v38[6] = 0;
    v38[7] = v39;
    v38[8] = v49;
    *(_OWORD *)(v38 + 9) = 0u;
    *(_OWORD *)(v38 + 11) = 0u;
    *(_OWORD *)(v38 + 13) = 0u;
    *(_OWORD *)(v38 + 15) = 0u;
    *(_OWORD *)((char *)v38 + 131) = 0u;
    *((_BYTE *)v38 + 147) = 9;
    *v51 = v34;
    swift_endAccess();
    v40 = v55;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v42 = v41;
    result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v40, v20);
    v43 = v42 * 1000000000.0;
    if ((~COERCE__INT64(v42 * 1000000000.0) & 0x7FF0000000000000) == 0)
      break;
    if (v43 <= -9.22337204e18)
      goto LABEL_26;
    if (v43 >= 9.22337204e18)
      goto LABEL_27;
    sub_23ADF691C((_QWORD *)v32, (uint64_t)v43, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
    sub_23AAFC3AC((uint64_t)v60);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_deallocClassInstance();
    if (!--v26)
      goto LABEL_22;
LABEL_13:
    v29 = *((_QWORD *)i - 1);
    v30 = *i;
    v63 = v29;
    v64 = v30;
    v53(v65, &v63, 1);
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23AE1B27C(uint64_t a1, void *a2, void *a3, unsigned __int8 a4)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  void *v27;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = v4;
    swift_bridgeObjectRetain();
    v11 = 0;
    while (a4 == 0xFF)
    {

LABEL_4:
      if (v5 == ++v11)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    if (!*(_BYTE *)(a1 + v11 + 32))
    {
      switch(*(_BYTE *)(a1 + v11 + 32))
      {
        case 0:
          sub_23AAAE478(a2, a3, a4);
          v12 = objc_msgSend(v6, sel_bindLongParameter_, a4);
          goto LABEL_22;
        default:
          goto LABEL_13;
      }
    }
    if (*(_BYTE *)(a1 + v11 + 32) == 1)
    {
      if (!a4)
      {
        v26 = MEMORY[0x24BEE1768];
        v25[0] = a2;
        swift_retain();
        sub_23AA94C90((uint64_t)v25);
        v17 = v16;
        sub_23AA8A05C((uint64_t)v25, qword_2542E5640);
        if (!v17)
        {
          sub_23B1C704C();
          __break(1u);
          JUMPOUT(0x23AE1B69CLL);
        }
        swift_bridgeObjectRelease();
        sub_23AEB1228(a2, a3, 0);
        goto LABEL_4;
      }
      sub_23AAAE478(a2, a3, a4);
      v12 = objc_msgSend(v6, sel_bindLongParameter_, 0);
      goto LABEL_22;
    }
    if (a4)
    {
      if (a4 == 2)
      {
LABEL_13:
        v13 = a2;
        if (a2)
        {
LABEL_14:
          v27 = v13;
          v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F30);
          v25[0] = v13;
          sub_23AAAE478(a2, a3, a4);
          sub_23AAAE478(a2, a3, a4);
          sub_23AA94C90((uint64_t)v25);
          v15 = v14;
          sub_23AA8A05C((uint64_t)v25, qword_2542E5640);
          if (!v15)
          {
            sub_23B1C57B0();
            swift_allocObject();
            sub_23B1C57A4();
            sub_23B1C578C();
            __swift_instantiateConcreteTypeFromMangledName(&qword_2569E2DC0);
            sub_23AC423D4();
            v18 = sub_23B1C5798();
            v24 = v19;
            v20 = v18;
            sub_23AC38554(v18, v19);
            swift_release();
            sub_23AAAE53C(v20, v24);
          }
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
      }
    }
    else
    {
      v13 = a3;
      if (a3)
        goto LABEL_14;
    }
    sub_23AAAE478(a2, a3, a4);
    v12 = objc_msgSend(v6, sel_bindObjectParameter_, 0);
LABEL_22:

LABEL_23:
    sub_23AEB1228(a2, a3, a4);
    goto LABEL_4;
  }
LABEL_25:
  result = MEMORY[0x23B85EEAC](2108479, 0xE300000000000000, v5);
  v25[0] = result;
  v25[1] = v22;
  v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v23 = result & 0xFFFFFFFFFFFFLL;
  if (v23)
  {
    sub_23AE1B6B0(2uLL);
    return v25[0];
  }
  return result;
}

unint64_t sub_23AE1B6B0(unint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  char v4;

  if (result)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v2 = v1[1];
      if ((v2 & 0x2000000000000000) != 0)
        v3 = HIBYTE(v2) & 0xF;
      else
        v3 = *v1 & 0xFFFFFFFFFFFFLL;
      result = sub_23B1C64D0();
      if ((v4 & 1) != 0)
        goto LABEL_12;
      if (4 * v3 >= result >> 14)
        return sub_23B1C647C();
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

void sub_23AE1B74C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23AE1B790()
{
  uint64_t v1;

  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return v1;
}

uint64_t sub_23AE1B8B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  return a2;
}

uint64_t sub_23AE1B96C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *v4;
  id *v6;
  char *v7;

  v4 = *(_BYTE **)(a2 + 32);
  if ((v4[32] & 1) == 0)
  {
    v6 = (id *)result;
    result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v4 + 304))(result + 8, 0);
    if (!v3)
    {
      if ((result & 1) != 0)
      {
        return sub_23AEAC6D0(v6, a3);
      }
      else
      {
        v7 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760) + 48);
        result = type metadata accessor for ItemMetadata();
        v7[*(int *)(result + 48)] = v7[*(int *)(result + 44)];
      }
    }
  }
  return result;
}

uint64_t sub_23AE1BA0C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t *v6;
  char *v7;

  v4 = *(_BYTE **)(a2 + 32);
  if ((v4[32] & 1) == 0)
  {
    v6 = (uint64_t *)result;
    result = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v4 + 304))(result + 16, 0);
    if (!v3)
    {
      if ((result & 1) != 0)
      {
        return sub_23AEAC980(v6, a3);
      }
      else
      {
        v7 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00) + 48);
        result = type metadata accessor for ItemMetadata();
        v7[*(int *)(result + 48)] = v7[*(int *)(result + 44)];
      }
    }
  }
  return result;
}

uint64_t sub_23AE1BAAC(id *a1, id *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  _BYTE *v15;
  uint64_t v16;
  id *v17;
  uint64_t (*v18)(id *, _QWORD);
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id *v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  int v27;
  id v28;
  double v29;
  double v30;
  double v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  id *v49;
  uint64_t *v50;
  id *v51;

  v51 = a1;
  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_BYTE **)(a4 + 32);
  if ((v15[32] & 1) != 0)
    return result;
  v50 = a3;
  v16 = *a3;
  if ((v16 & 0x20002) == 0)
    return result;
  v48 = a5;
  v49 = a2;
  v17 = a2 + 1;
  v18 = *(uint64_t (**)(id *, _QWORD))(*(_QWORD *)v15 + 304);
  result = v18(v17, 0);
  if (v5)
    return result;
  v19 = result;
  if (result == 2)
  {
    if ((v16 & 2) != 0)
    {
      v47 = 0;
      goto LABEL_20;
    }
LABEL_11:
    v23 = v49;
    v24 = v50;
    goto LABEL_12;
  }
  if ((v16 & 2) == 0)
  {
    v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760) + 48);
    v21 = type metadata accessor for ItemMetadata();
    if ((v19 & 1) != 0)
    {
      v22 = *((_BYTE *)v51 + v20 + *(int *)(v21 + 48));
      v23 = v49;
      goto LABEL_24;
    }
    goto LABEL_11;
  }
  v47 = result & 1;
LABEL_20:
  if (((*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a4 + 24) + 296))(0, 68) & 1) != 0)
  {
    v22 = v18(v51, 0) & 1;
  }
  else
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
    v34 = (uint64_t)v51 + *(int *)(v33 + 48);
    v22 = *(_BYTE *)(v34 + *(int *)(type metadata accessor for ItemMetadata() + 48));
  }
  v23 = v49;
  if ((v47 & 1) == 0)
  {
    if ((v22 & 1) != 0)
    {
      v40 = *v49;
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v42 = v41;
      result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      v43 = v42 * 1000000000.0;
      v24 = v50;
      if ((~COERCE__INT64(v42 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      if (v43 <= -9.22337204e18)
      {
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      if (v43 >= 9.22337204e18)
      {
LABEL_48:
        __break(1u);
        return result;
      }
      v44 = (uint64_t)v43;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6210);
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 24) = 0;
      *(_QWORD *)(v45 + 32) = 0;
      *(_QWORD *)(v45 + 16) = 0;
      *(_BYTE *)(v45 + 40) = 1;
      *(_OWORD *)(v45 + 48) = 0u;
      *(_OWORD *)(v45 + 64) = 0u;
      *(_QWORD *)(v45 + 80) = 0;
      *(_OWORD *)(v45 + 88) = xmmword_23B1CA770;
      *(_BYTE *)(v45 + 104) = 0;
      *(_QWORD *)(v45 + 112) = 0x2000000000000000;
      *(_QWORD *)(v45 + 120) = v44;
      *(_QWORD *)(v45 + 128) = 0x10000000000;
      *(_QWORD *)(v45 + 136) = v40;
      (*(void (**)(void))(*(_QWORD *)v48 + 144))();
      swift_release();
    }
    else
    {
      v24 = v50;
    }
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
    v26 = (char *)v23 + *(int *)(v25 + 48);
    result = type metadata accessor for ItemMetadata();
    v27 = v26[*(int *)(result + 44)];
    v26[*(int *)(result + 48)] = v27;
    if (v27 == *((unsigned __int8 *)v51 + *(int *)(v25 + 48) + *(int *)(result + 48)))
      return result;
    if ((*v24 & 0x800000000000000) == 0)
      *v24 |= 0x800000000000000uLL;
    v28 = *v23;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v30 = v29;
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v31 = v30 * 1000000000.0;
    if ((~COERCE__INT64(v30 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v31 > -9.22337204e18)
      {
        if (v31 < 9.22337204e18)
        {
          v32 = &qword_2569E61E8;
LABEL_33:
          v38 = (uint64_t)v31;
          __swift_instantiateConcreteTypeFromMangledName(v32);
          v39 = swift_allocObject();
          *(_QWORD *)(v39 + 24) = 0;
          *(_QWORD *)(v39 + 32) = 0;
          *(_QWORD *)(v39 + 16) = 0;
          *(_BYTE *)(v39 + 40) = 1;
          *(_OWORD *)(v39 + 48) = 0u;
          *(_OWORD *)(v39 + 64) = 0u;
          *(_QWORD *)(v39 + 80) = 0;
          *(_OWORD *)(v39 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v39 + 104) = 0;
          *(_QWORD *)(v39 + 112) = 0x2000000000000000;
          *(_QWORD *)(v39 + 120) = v38;
          *(_QWORD *)(v39 + 128) = 0x10000000000;
          *(_QWORD *)(v39 + 136) = v28;
          (*(void (**)(void))(*(_QWORD *)v48 + 144))();
          return swift_release();
        }
        goto LABEL_42;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
LABEL_24:
  if ((v22 & 1) == 0)
  {
    sub_23AEAC6D0(v23, v48);
    if ((v16 & 0x800000000000000) == 0)
      *v50 = v16 | 0x800000000000000;
    v23 = v49;
  }
  v35 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760) + 48);
  result = type metadata accessor for ItemMetadata();
  if (v35[*(int *)(result + 44)] == 1)
  {
    v28 = *v23;
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v37 = v36;
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v31 = v37 * 1000000000.0;
    if ((~COERCE__INT64(v37 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v31 > -9.22337204e18)
      {
        if (v31 < 9.22337204e18)
        {
          v32 = &qword_2569E6208;
          goto LABEL_33;
        }
        goto LABEL_45;
      }
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  return result;
}

uint64_t sub_23AE1BFB0(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t (*v18)(uint64_t *, _QWORD);
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  double v29;
  double v30;
  double v31;
  uint64_t *v32;
  uint64_t v33;
  char v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t *v52;

  v52 = a1;
  v10 = sub_23B1C5BDC();
  v11 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_BYTE **)(a4 + 32);
  if ((v15[32] & 1) != 0)
    return result;
  v51 = a3;
  v16 = *a3;
  if ((v16 & 0x20002) == 0)
    return result;
  v49 = a5;
  v50 = a2;
  v17 = a2 + 2;
  v18 = *(uint64_t (**)(uint64_t *, _QWORD))(*(_QWORD *)v15 + 304);
  result = v18(v17, 0);
  if (v5)
    return result;
  v19 = result;
  if (result == 2)
  {
    if ((v16 & 2) == 0)
      goto LABEL_30;
    v48 = 0;
  }
  else
  {
    if ((v16 & 2) == 0)
    {
      v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00) + 48);
      v21 = type metadata accessor for ItemMetadata();
      if ((v19 & 1) != 0)
      {
        v22 = *((_BYTE *)v52 + v20 + *(int *)(v21 + 48));
        v23 = v50;
        goto LABEL_16;
      }
      goto LABEL_30;
    }
    v48 = result & 1;
  }
  if (((*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a4 + 24) + 296))(0, 68) & 1) != 0)
  {
    v22 = v18(v52, 0) & 1;
  }
  else
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
    v25 = (uint64_t)v52 + *(int *)(v24 + 48);
    v22 = *(_BYTE *)(v25 + *(int *)(type metadata accessor for ItemMetadata() + 48));
  }
  v23 = v50;
  if ((v48 & 1) == 0)
  {
    if ((v22 & 1) == 0)
      goto LABEL_31;
    v33 = *v50;
    v34 = *((_BYTE *)v50 + 8);
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v36 = v35;
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v37 = v36 * 1000000000.0;
    if ((~COERCE__INT64(v36 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v37 <= -9.22337204e18)
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v37 >= 9.22337204e18)
    {
LABEL_47:
      __break(1u);
      return result;
    }
    v38 = (uint64_t)v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F80);
    v39 = swift_allocObject();
    *(_BYTE *)(v39 + 144) = v34;
    *(_QWORD *)(v39 + 24) = 0;
    *(_QWORD *)(v39 + 32) = 0;
    *(_QWORD *)(v39 + 16) = 0;
    *(_BYTE *)(v39 + 40) = 1;
    *(_OWORD *)(v39 + 48) = 0u;
    *(_OWORD *)(v39 + 64) = 0u;
    *(_QWORD *)(v39 + 80) = 0;
    *(_OWORD *)(v39 + 88) = xmmword_23B1CA770;
    *(_BYTE *)(v39 + 104) = 0;
    *(_QWORD *)(v39 + 112) = 0x2000000000000000;
    *(_QWORD *)(v39 + 120) = v38;
    *(_QWORD *)(v39 + 128) = 0x10000000000;
    *(_QWORD *)(v39 + 136) = v33;
    (*(void (**)(void))(*(_QWORD *)v49 + 144))();
    swift_release();
LABEL_30:
    v23 = v50;
LABEL_31:
    v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
    v41 = (uint64_t)v23 + *(int *)(v40 + 48);
    result = type metadata accessor for ItemMetadata();
    v42 = *(unsigned __int8 *)(v41 + *(int *)(result + 44));
    *(_BYTE *)(v41 + *(int *)(result + 48)) = v42;
    if (v42 == *((unsigned __int8 *)v52 + *(int *)(v40 + 48) + *(int *)(result + 48)))
      return result;
    if ((*v51 & 0x800000000000000) == 0)
      *v51 |= 0x800000000000000uLL;
    v27 = *v23;
    v28 = *((_BYTE *)v23 + 8);
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v44 = v43;
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v31 = v44 * 1000000000.0;
    if ((~COERCE__INT64(v44 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v31 > -9.22337204e18)
      {
        if (v31 < 9.22337204e18)
        {
          v32 = &qword_2569E5F58;
          goto LABEL_38;
        }
        goto LABEL_41;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
LABEL_16:
  if ((v22 & 1) == 0)
  {
    sub_23AEAC980(v23, v49);
    if ((v16 & 0x800000000000000) == 0)
      *v51 = v16 | 0x800000000000000;
    v23 = v50;
  }
  v26 = (uint64_t)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00) + 48);
  result = type metadata accessor for ItemMetadata();
  if (*(_BYTE *)(v26 + *(int *)(result + 44)) == 1)
  {
    v27 = *v23;
    v28 = *((_BYTE *)v23 + 8);
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v30 = v29;
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v31 = v30 * 1000000000.0;
    if ((~COERCE__INT64(v30 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v31 > -9.22337204e18)
      {
        if (v31 < 9.22337204e18)
        {
          v32 = &qword_2569E5F78;
LABEL_38:
          v45 = (uint64_t)v31;
          __swift_instantiateConcreteTypeFromMangledName(v32);
          v46 = swift_allocObject();
          *(_BYTE *)(v46 + 144) = v28;
          *(_QWORD *)(v46 + 24) = 0;
          *(_QWORD *)(v46 + 32) = 0;
          *(_QWORD *)(v46 + 16) = 0;
          *(_BYTE *)(v46 + 40) = 1;
          *(_OWORD *)(v46 + 48) = 0u;
          *(_OWORD *)(v46 + 64) = 0u;
          *(_QWORD *)(v46 + 80) = 0;
          *(_OWORD *)(v46 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v46 + 104) = 0;
          *(_QWORD *)(v46 + 112) = 0x2000000000000000;
          *(_QWORD *)(v46 + 120) = v45;
          *(_QWORD *)(v46 + 128) = 0x10000000000;
          *(_QWORD *)(v46 + 136) = v27;
          (*(void (**)(void))(*(_QWORD *)v49 + 144))();
          return swift_release();
        }
        goto LABEL_44;
      }
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  return result;
}

_QWORD *sub_23AE1C4A4(unint64_t a1, char a2, uint64_t a3, char a4, int a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *result;
  uint64_t v12;
  _BYTE __dst[496];
  _BYTE v14[504];
  _BYTE v15[504];
  unint64_t v16;
  char v17;
  char v18;
  _QWORD __src[63];

  if ((*(_BYTE *)(*(_QWORD *)(a6 + 32) + 32) & 1) != 0 || a2 == 2 && a1 < 2)
    return 0;
  v12 = *(_QWORD *)(a6 + 16);
  v16 = a1;
  v17 = a2;
  v18 = 0;
  result = (*(_QWORD *(**)(_QWORD *__return_ptr, unint64_t *, uint64_t))(*(_QWORD *)v12 + 168))(__src, &v16, 1);
  if (!v6)
  {
    sub_23AA724E8((uint64_t)__src, (uint64_t)v14, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v14, (uint64_t)v15, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v15) == 1)
      return sub_23AE9FB4C(a3, a4, a5, a6);
    memcpy(__dst, __src, sizeof(__dst));
    sub_23AAFC3AC((uint64_t)__dst);
    return 0;
  }
  return result;
}

uint64_t sub_23AE1C5CC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[128];
  _BYTE v26[128];
  __int128 v27;
  __int128 v28;
  id v29;

  v24 = a4;
  v23 = sub_23B1C545C();
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s3__C4CodeOMa_1(0);
  *(_QWORD *)&v27 = -2010;
  sub_23AA7E38C((unint64_t *)&qword_2542E1FA0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_23B1CCA68);
  if ((sub_23B1C575C() & 1) != 0 || (*(_QWORD *)&v27 = -2005, (sub_23B1C575C() & 1) != 0))
  {
    if ((~(_DWORD)a3 & 0xFF00) == 0)
    {
LABEL_39:
      v10 = 0;
      return v10 & 1;
    }
    if ((a3 & 0x100) != 0)
    {
      if (BYTE2(a3) < 2u)
      {
        sub_23AEB1878(a2, a3);
        sub_23AEB1878(a2, a3);
        sub_23AA862DC(a2, a3, 1);
        goto LABEL_25;
      }
      if (BYTE2(a3) != 10)
      {
        sub_23AEB1878(a2, a3);
        sub_23AA862DC(a2, a3, 1);
        goto LABEL_39;
      }
      sub_23AEB1878(a2, a3);
      sub_23AEB1878(a2, a3);
      sub_23AA862DC(a2, a3, 1);
    }
    else
    {
      if (BYTE2(a3) >= 2u)
      {
        if (BYTE2(a3) != 10)
        {
          sub_23AA88218(a2, a3, 0);
          goto LABEL_39;
        }
        sub_23AA88218(a2, a3, 0);
        sub_23AA88218(a2, a3, 0);
LABEL_25:
        if ((*(_BYTE *)(*(_QWORD *)(v24 + 32) + 32) & 1) == 0)
          goto LABEL_26;
        goto LABEL_16;
      }
      sub_23AA88218(a2, a3, 0);
      sub_23AA88218(a2, a3, 0);
    }
    if (*(_BYTE *)(*(_QWORD *)(v24 + 32) + 32) == 1)
    {
LABEL_26:
      sub_23AEB1890(a2, a3);
      goto LABEL_39;
    }
LABEL_16:
    v11 = (void *)sub_23B1C5870();
    v12 = objc_msgSend(v11, sel_userInfo);
    v13 = sub_23B1C620C();

    v14 = sub_23B1C63E0();
    if (*(_QWORD *)(v13 + 16) && (v16 = sub_23AAAF4C4(v14, v15), (v17 & 1) != 0))
    {
      sub_23AAA15AC(*(_QWORD *)(v13 + 56) + 32 * v16, (uint64_t)&v27);
    }
    else
    {
      v27 = 0u;
      v28 = 0u;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AEB1890(a2, a3);
    if (*((_QWORD *)&v28 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0 && (v26[0] & 1) != 0)
      {
        v10 = 0;
        return v10 & 1;
      }
    }
    else
    {
      sub_23AA8A05C((uint64_t)&v27, qword_2542E5640);
    }
LABEL_36:
    v10 = 1;
    return v10 & 1;
  }
  LODWORD(v27) = sub_23B1C54BC();
  sub_23AB6CD48();
  if ((sub_23B1C575C() & 1) == 0)
  {
    LODWORD(v27) = sub_23B1C548C();
    if ((sub_23B1C575C() & 1) == 0)
    {
      *(_QWORD *)&v27 = -1004;
      if ((sub_23B1C575C() & 1) != 0)
        goto LABEL_39;
      *(_QWORD *)&v27 = -1000;
      if ((sub_23B1C575C() & 1) != 0)
        goto LABEL_39;
      *(_QWORD *)&v27 = -1003;
      if ((sub_23B1C575C() & 1) != 0)
        goto LABEL_39;
      LODWORD(v27) = sub_23B1C5510();
      if ((sub_23B1C575C() & 1) != 0)
        goto LABEL_39;
      sub_23B1C539C();
      sub_23AA7E38C((unint64_t *)&qword_2569E29D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEB0], MEMORY[0x24BDCAEA8]);
      v18 = v23;
      v19 = sub_23B1C575C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
      if ((v19 & 1) != 0)
        goto LABEL_39;
      v29 = a1;
      v20 = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      if (!swift_dynamicCast())
      {

        v10 = 0;
        return v10 & 1;
      }
      sub_23AA724E8((uint64_t)&v27, (uint64_t)v25, (uint64_t *)&unk_2542E0950);
      sub_23AA724E8((uint64_t)v25, (uint64_t)v26, (uint64_t *)&unk_2542E0950);
      if (sub_23AC050A4((uint64_t)v26) != 19)
      {
        sub_23AEB3CD8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AC04FC4);

        v10 = 0;
        return v10 & 1;
      }

      goto LABEL_36;
    }
  }
  v10 = *(_BYTE *)(*(_QWORD *)(v24 + 32) + 32) ^ 1;
  return v10 & 1;
}

uint64_t sub_23AE1CB2C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  void (*v11)(void **);
  id v12;
  id v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[11];
  char v24;
  _BYTE v25[496];
  _BYTE v26[496];
  _BYTE v27[496];
  _BYTE v28[504];
  void *v29;

  sub_23AA724E8(a2, (uint64_t)v26, (uint64_t *)&unk_2569E63E0);
  sub_23AA724E8((uint64_t)v26, (uint64_t)v28, (uint64_t *)&unk_2569E63E0);
  v29 = a1;
  sub_23AA724E8(a2, (uint64_t)v27, (uint64_t *)&unk_2569E63E0);
  result = sub_23AAFC2A4((uint64_t)v27);
  if ((_DWORD)result != 1)
  {
    sub_23AA724E8((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_2569E63E0);
    v14 = a1;
    v15 = xmmword_23B1DA920;
    v16 = 0u;
    v17 = 0u;
    v18 = 0u;
    v19 = 0;
    v20 = 655360;
    v22 = 0;
    memset(v23, 0, sizeof(v23));
    v21 = 0;
    v24 = 9;
    v11 = *(void (**)(void **))(*(_QWORD *)a7 + 136);
    sub_23ADF2D34(a2, (voidsub_23AEB367C);
    v12 = a1;
    v11(&v14);
    sub_23AB7C6B4(a1, 0, 0);
    sub_23AEAD8A8((void *)0x106, 0, 0, 0, 0, 0, 0, 0, 0, 10);
    if (v25[98] != 1)
      __asm { BR              X10 }
    v14 = a1;
    v15 = xmmword_23B1CFA60;
    v16 = 0u;
    v17 = 0u;
    v18 = 0u;
    v19 = 0;
    v20 = 983040;
    v22 = 0;
    memset(v23, 0, sizeof(v23));
    v21 = 0;
    v24 = 9;
    v13 = v12;
    v11(&v14);
    sub_23AB7C6B4(a1, 0, 0);
    sub_23AEAD8A8((void *)1, 0, 0, 0, 0, 0, 0, 0, 0, 15);
    return sub_23ADF2D34(a2, (voidsub_23AEB1930);
  }
  return result;
}

void sub_23AE1CD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,unsigned __int8 a54)
{
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  void (*v68)(uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  id v76;

  v60 = *(_QWORD *)(v57 + 24);
  sub_23AEA49E8();
  v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v61 + 32) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5F00);
  v62 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v60 + 272))(v59 - 72, v61);
  if (a12)
  {
    sub_23ADF2D34(v55, (voidsub_23AEB1930);
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v63 = v62;
  swift_bridgeObjectRelease();
  if (v63 >> 62)
  {
    swift_bridgeObjectRetain();
    v64 = sub_23B1C7088();
    swift_bridgeObjectRelease();
  }
  else
  {
    v64 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v64)
  {
    if ((v63 & 0xC000000000000001) != 0)
    {
      v65 = MEMORY[0x23B85F860](0, v63);
    }
    else
    {
      if (!*(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        JUMPOUT(0x23AE1D060);
      }
      v65 = *(_QWORD *)(v63 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(v65 + 104) == 1)
    {
      v66 = *(void **)(v65 + 88);
      v67 = *(void **)(v65 + 96);
      *(_QWORD *)(v65 + 88) = 0;
      *(_QWORD *)(v65 + 96) = 0;
      *(_BYTE *)(v65 + 104) = 4;
      sub_23AAAEE10(v66, v67, 1);
      v68 = *(void (**)(uint64_t))(*(_QWORD *)v56 + 144);
      v69 = swift_retain();
      v68(v69);
      swift_release();
LABEL_22:
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
      v75 = swift_allocObject();
      *(_QWORD *)(v75 + 24) = 0;
      *(_QWORD *)(v75 + 32) = 0;
      *(_QWORD *)(v75 + 16) = 0;
      *(_BYTE *)(v75 + 40) = 1;
      *(_OWORD *)(v75 + 48) = 0u;
      *(_OWORD *)(v75 + 64) = 0u;
      *(_QWORD *)(v75 + 80) = 0;
      *(_QWORD *)(v75 + 112) = a11;
      *(_QWORD *)(v75 + 120) = v58;
      *(_QWORD *)(v75 + 128) = 2048;
      *(_QWORD *)(v75 + 136) = v54;
      *(_OWORD *)(v75 + 88) = xmmword_23B1CA750;
      *(_BYTE *)(v75 + 104) = 0;
      v76 = v54;
      sub_23AAAE478((id)0x40100, 0, 0);
      sub_23AAAEE10((void *)0x40100, 0, 0);
      (*(void (**)(uint64_t))(*(_QWORD *)v56 + 144))(v75);
      swift_release();
      sub_23ADF2D34(v55, (voidsub_23AEB1930);
LABEL_28:
      JUMPOUT(0x23AE1CD48);
    }
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (!a28 || a54 == 255 || (a29 & 0x10) != 0)
  {
    v70 = a10;
    if ((a10 & 0x20) == 0)
      v70 = a10 | 0x20;
  }
  else
  {
    v70 = a10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6348);
  v71 = swift_allocObject();
  v72 = v71;
  *(_QWORD *)(v71 + 24) = 0;
  *(_QWORD *)(v71 + 32) = 0;
  *(_QWORD *)(v71 + 16) = 0;
  *(_BYTE *)(v71 + 40) = 1;
  *(_OWORD *)(v71 + 48) = 0u;
  *(_OWORD *)(v71 + 64) = 0u;
  *(_QWORD *)(v71 + 80) = 0;
  *(_OWORD *)(v71 + 88) = xmmword_23B1CA770;
  *(_BYTE *)(v71 + 104) = 0;
  *(_QWORD *)(v71 + 112) = a11;
  *(_QWORD *)(v71 + 120) = v58;
  *(_QWORD *)(v71 + 128) = v70;
  *(_QWORD *)(v71 + 136) = v54;
  if ((v70 & 0x8000) != 0)
  {
    *(_QWORD *)(v71 + 88) = 2359552;
    *(_BYTE *)(v71 + 104) = 0;
    v74 = v54;
    sub_23AAAEE10((void *)0x40100, 0, 0);
  }
  else
  {
    v73 = v54;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v56 + 144))(v72);
  goto LABEL_22;
}

uint64_t sub_23AE1D074(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  void (*v13)(uint64_t *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  int v23;
  _BYTE v24[496];
  uint64_t v25;
  unsigned __int8 v26;
  _BYTE v27[496];
  _BYTE v28[496];
  _BYTE v29[504];
  uint64_t v30;

  v30 = a6;
  sub_23AA724E8(a3, (uint64_t)v27, qword_2542E6E20);
  sub_23AA724E8((uint64_t)v27, (uint64_t)v29, qword_2542E6E20);
  v25 = a1;
  v26 = a2;
  sub_23AA724E8(a3, (uint64_t)v28, qword_2542E6E20);
  result = sub_23AAFC2A4((uint64_t)v28);
  if ((_DWORD)result != 1)
  {
    sub_23AA724E8((uint64_t)v29, (uint64_t)v24, qword_2542E6E20);
    v14 = a1;
    v15 = a2;
    v16 = 262;
    v17 = 0u;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v22 = 0;
    v23 = 151650304;
    v13 = *(void (**)(uint64_t *))(*(_QWORD *)a8 + 136);
    sub_23ACFC940((uint64_t)v24);
    v13(&v14);
    if (v24[138] != 1)
      __asm { BR              X10 }
    v14 = a1;
    v15 = a2;
    v16 = 1;
    v17 = 0u;
    v18 = 0u;
    v19 = 0u;
    v20 = 0u;
    v21 = 0u;
    v22 = 0;
    v23 = 151977984;
    v13(&v14);
    return sub_23ADF2D34(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23AAAEC3C);
  }
  return result;
}

void sub_23AE1D214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned __int8 a27,int a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  void *v73;
  void (*v74)(uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v65 = v58;
  v66 = *(_QWORD *)(v62 + 24);
  sub_23AAB5630();
  v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v67 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60E8);
  v68 = (*(uint64_t (**)(unint64_t *, uint64_t))(*(_QWORD *)v66 + 272))(&STACK[0x278], v67);
  if (v60)
  {
    sub_23ADF2D34(v59, (voidsub_23AAAEC3C);
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v69 = v68;
  swift_bridgeObjectRelease();
  if (v69 >> 62)
  {
    swift_bridgeObjectRetain();
    v76 = sub_23B1C7088();
    swift_bridgeObjectRelease();
    v70 = a10;
    if (v76)
      goto LABEL_5;
  }
  else
  {
    v70 = a10;
    if (*(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v69 & 0xC000000000000001) != 0)
      {
        v71 = MEMORY[0x23B85F860](0, v69);
      }
      else
      {
        if (!*(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x23AE1D4ECLL);
        }
        v71 = *(_QWORD *)(v69 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(v71 + 104) == 1)
      {
        v72 = *(void **)(v71 + 88);
        v73 = *(void **)(v71 + 96);
        *(_QWORD *)(v71 + 88) = 0;
        *(_QWORD *)(v71 + 96) = 0;
        *(_BYTE *)(v71 + 104) = 4;
        sub_23AAAEE10(v72, v73, 1);
        v74 = *(void (**)(uint64_t))(*(_QWORD *)v65 + 144);
        v75 = swift_retain();
        v74(v75);
        swift_release();
LABEL_21:
        swift_release();
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E1BE0);
        v80 = swift_allocObject();
        *(_BYTE *)(v80 + 144) = v63;
        *(_QWORD *)(v80 + 24) = 0;
        *(_QWORD *)(v80 + 32) = 0;
        *(_QWORD *)(v80 + 16) = 0;
        *(_BYTE *)(v80 + 40) = 1;
        *(_OWORD *)(v80 + 48) = 0u;
        *(_OWORD *)(v80 + 64) = 0u;
        *(_QWORD *)(v80 + 80) = 0;
        *(_QWORD *)(v80 + 112) = v70;
        *(_QWORD *)(v80 + 120) = v57;
        *(_QWORD *)(v80 + 128) = 2048;
        *(_QWORD *)(v80 + 136) = v61;
        *(_OWORD *)(v80 + 88) = xmmword_23B1CA750;
        *(_BYTE *)(v80 + 104) = 0;
        sub_23AAAEE10((void *)0x40100, 0, 0);
        (*(void (**)(uint64_t))(*(_QWORD *)v65 + 144))(v80);
        swift_release();
        sub_23ADF2D34(v59, (voidsub_23AAAEC3C);
LABEL_25:
        JUMPOUT(0x23AE1D1F0);
      }
      swift_release();
LABEL_13:
      v77 = *(_QWORD *)(v64 - 72);
      if ((a27 == 255 || !a57 || (a29 & 0x10) != 0) && (v77 & 0x20) == 0)
        v77 |= 0x20uLL;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60C0);
      v78 = swift_allocObject();
      v79 = v78;
      *(_BYTE *)(v78 + 144) = v63;
      *(_QWORD *)(v78 + 24) = 0;
      *(_QWORD *)(v78 + 32) = 0;
      *(_QWORD *)(v78 + 16) = 0;
      *(_BYTE *)(v78 + 40) = 1;
      *(_OWORD *)(v78 + 48) = 0u;
      *(_OWORD *)(v78 + 64) = 0u;
      *(_QWORD *)(v78 + 80) = 0;
      *(_OWORD *)(v78 + 88) = xmmword_23B1CA770;
      *(_BYTE *)(v78 + 104) = 0;
      *(_QWORD *)(v78 + 112) = v70;
      *(_QWORD *)(v78 + 120) = v57;
      *(_QWORD *)(v78 + 128) = v77;
      *(_QWORD *)(v78 + 136) = v61;
      if ((v77 & 0x8000) != 0)
      {
        *(_QWORD *)(v78 + 88) = 2359552;
        *(_BYTE *)(v78 + 104) = 0;
        sub_23AAAEE10((void *)0x40100, 0, 0);
      }
      (*(void (**)(uint64_t))(*(_QWORD *)v65 + 144))(v79);
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  goto LABEL_13;
}

uint64_t sub_23AE1D500(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;

  v4 = v3;
  v7 = a3 & 1;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1E00);
  v9 = sub_23AB5A3F4((char *)(a1 + *(int *)(v8 + 40)), a2, v7);
  v10 = sub_23B1C63E0();
  v12 = v11;
  if (v10 == sub_23B1C63E0() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      v9 |= 2uLL;
  }
  v17 = *(_QWORD *)(v4 + 8);
  v16 = *(_QWORD *)(v4 + 16);
  v19 = *(_QWORD *)(a1 + 8);
  v18 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v20 = sub_23AAAE580(v17, v16);
  v22 = v21;
  swift_bridgeObjectRelease();
  if (v22)
  {
    if (v20 == 12565487 && v22 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRetain();
      v24 = sub_23B1C64B8();
      v25 = sub_23AA8A1BC(v24, v17, v16);
      v27 = v26;
      v29 = v28;
      v31 = v30;
      swift_bridgeObjectRelease();
      v17 = MEMORY[0x23B85ED8C](v25, v27, v29, v31);
      v16 = v32;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    v23 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
      goto LABEL_14;
  }
  swift_bridgeObjectRetain();
LABEL_16:
  swift_bridgeObjectRetain();
  v33 = sub_23AAAE580(v19, v18);
  v35 = v34;
  swift_bridgeObjectRelease();
  if (v35)
  {
    if (v33 == 12565487 && v35 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    v36 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v36 & 1) != 0)
    {
LABEL_21:
      swift_bridgeObjectRetain();
      v37 = sub_23B1C64B8();
      v38 = sub_23AA8A1BC(v37, v19, v18);
      v40 = v39;
      v42 = v41;
      v44 = v43;
      swift_bridgeObjectRelease();
      v45 = MEMORY[0x23B85ED8C](v38, v40, v42, v44);
      v18 = v46;
      swift_bridgeObjectRelease();
      if (v17 != v45)
        goto LABEL_26;
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRetain();
  if (v17 != v19)
  {
LABEL_26:
    v47 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9 | ((v47 & 1) == 0);
  }
LABEL_24:
  if (v16 != v18)
    goto LABEL_26;
  swift_bridgeObjectRelease_n();
  return v9;
}

uint64_t sub_23AE1D818(char *a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;

  v6 = a3 & 1;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1DF0);
  v8 = sub_23AB5A3F4(&a1[*(int *)(v7 + 40)], a2, v6);
  v9 = v8;
  v10 = *v3;
  v11 = *(_QWORD *)a1;
  v12 = a1[8];
  if (*((_BYTE *)v3 + 8))
  {
    if (*((_BYTE *)v3 + 8) != 1)
    {
      if (v10)
      {
        if (v12 == 2 && v11 == 1)
          goto LABEL_22;
      }
      else if (v12 == 2 && !v11)
      {
        goto LABEL_22;
      }
LABEL_21:
      v9 = v8 | 2;
      goto LABEL_22;
    }
    if (v12 != 1 || v10 != v11)
      goto LABEL_21;
  }
  else
  {
    if (a1[8])
      v14 = 0;
    else
      v14 = (_DWORD)v10 == (_DWORD)v11;
    if (!v14)
      goto LABEL_21;
  }
LABEL_22:
  v16 = v3[2];
  v15 = v3[3];
  v18 = *((_QWORD *)a1 + 2);
  v17 = *((_QWORD *)a1 + 3);
  swift_bridgeObjectRetain();
  v19 = sub_23AAAE580(v16, v15);
  v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    if (v19 == 12565487 && v21 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRetain();
      v23 = sub_23B1C64B8();
      v24 = sub_23AA8A1BC(v23, v16, v15);
      v26 = v25;
      v28 = v27;
      v30 = v29;
      swift_bridgeObjectRelease();
      v16 = MEMORY[0x23B85ED8C](v24, v26, v28, v30);
      v15 = v31;
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    v22 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
      goto LABEL_27;
  }
  swift_bridgeObjectRetain();
LABEL_29:
  swift_bridgeObjectRetain();
  v32 = sub_23AAAE580(v18, v17);
  v34 = v33;
  swift_bridgeObjectRelease();
  if (v34)
  {
    if (v32 == 12565487 && v34 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    v35 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    if ((v35 & 1) != 0)
    {
LABEL_34:
      swift_bridgeObjectRetain();
      v36 = sub_23B1C64B8();
      v37 = sub_23AA8A1BC(v36, v18, v17);
      v39 = v38;
      v41 = v40;
      v43 = v42;
      swift_bridgeObjectRelease();
      v44 = MEMORY[0x23B85ED8C](v37, v39, v41, v43);
      v17 = v45;
      swift_bridgeObjectRelease();
      if (v16 != v44)
        goto LABEL_39;
      goto LABEL_37;
    }
  }
  swift_bridgeObjectRetain();
  if (v16 != v18)
  {
LABEL_39:
    v46 = sub_23B1C7388();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9 | ((v46 & 1) == 0);
  }
LABEL_37:
  if (v15 != v17)
    goto LABEL_39;
  swift_bridgeObjectRelease_n();
  return v9;
}

BOOL sub_23AE1DB1C()
{
  _QWORD *v0;

  if (*(_QWORD *)(*v0 + 16))
    return 0;
  if (*(_QWORD *)(v0[1] + 16))
    return 0;
  if (*(_QWORD *)(v0[2] + 16))
    return 0;
  return *(_QWORD *)(v0[3] + 16) == 0;
}

uint64_t sub_23AE1DB6C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  BOOL v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  _BOOL4 v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  _BOOL4 v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v106;
  id v107;
  id v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v126;
  id v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  id v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v147;
  id v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  id v152;
  id v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v165;
  _QWORD *v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  id v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  int64_t v188;
  unint64_t v189;
  char v190;
  unint64_t v191;
  unint64_t v192;
  int64_t v193;
  unint64_t v194;
  unint64_t v195;
  int64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  BOOL v208;
  BOOL v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  int64_t v219;
  char v220;
  id v221;
  unint64_t v222;
  uint64_t v223;
  unint64_t v224;
  int64_t v225;
  unint64_t v226;
  int64_t v227;
  uint64_t v228;
  void *v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  id v248;
  uint64_t v249;
  uint64_t v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char v261;
  id v262;
  id v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t result;
  _QWORD *v268;
  void *v269;
  uint64_t v270;
  _QWORD *v271;
  uint64_t v272;
  char v273;
  void *v274;
  unint64_t v275;
  BOOL v276;
  uint64_t v277;
  uint64_t v278;
  int64_t v279;
  _QWORD *v280;
  _QWORD *v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t v285;
  unint64_t v286;
  uint64_t v287;
  int64_t v288;
  int64_t v289;
  unint64_t *v290;
  unint64_t v291;
  _QWORD *v292;
  void *v293;
  void *v294;
  void *v295;
  unint64_t v296;
  void *v297;
  uint64_t v298;
  void *v299;
  _QWORD v300[2];
  unint64_t v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;

  v3 = *(_QWORD *)(v1 + 120);
  v4 = 1000000000 * v3;
  if ((unsigned __int128)(v3 * (__int128)1000000000) >> 64 != (1000000000 * v3) >> 63)
    goto LABEL_373;
  v287 = a1 - v4;
  if (__OFSUB__(a1, v4))
  {
LABEL_374:
    __break(1u);
LABEL_375:
    sub_23B1C740C();
    __break(1u);
LABEL_376:
    sub_23AA88218((id)v1, v2, 1);
    sub_23AA88218((id)v1, v2, 1);
    v268 = v282;
    sub_23AA88218((id)v1, v2, 1);

    swift_bridgeObjectRelease_n();
    sub_23AA862DC((id)v1, v2, 1);
    v269 = (void *)v1;
    v270 = v2;
    goto LABEL_378;
  }
  v5 = v1;
  v304 = sub_23ACD83D8(0);
  v6 = v1 + 48;
  v2 = 1;
  swift_beginAccess();
  v1 = *(_QWORD *)(v1 + 48);
  v7 = swift_bridgeObjectRetain();
  v8 = sub_23AEA4C5C(v7);
  swift_bridgeObjectRelease();
  v292 = v8;
  v290 = (unint64_t *)v6;
  v291 = v5;
  v283 = sub_23AB6BC30((uint64_t)v8);
  if (v283)
  {
    v9 = 0;
    v282 = v8 + 4;
    do
    {
      if (v292[2] <= v9)
      {
        __break(1u);
LABEL_364:
        __break(1u);
LABEL_365:
        __break(1u);
LABEL_366:
        __break(1u);
        goto LABEL_367;
      }
      v10 = &v282[5 * v9];
      v11 = *v10;
      v12 = *((unsigned __int8 *)v10 + 8);
      v13 = v10[2];
      v14 = v10[4];
      v15 = *((_BYTE *)v10 + 24);
      if (v14 >= v287)
        goto LABEL_36;
      v296 = v9;
      v16 = *(_QWORD *)(v291 + 80);
      if (!*(_QWORD *)(v16 + 16))
        goto LABEL_44;
      sub_23B1C74A8();
      sub_23B1C74B4();
      if (v12)
      {
        sub_23B1C74B4();
        if (v12 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      v17 = sub_23B1C74E4();
      v18 = -1 << *(_BYTE *)(v16 + 32);
      v19 = v17 & ~v18;
      v1 = v16 + 56;
      if (((*(_QWORD *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        goto LABEL_44;
      v20 = ~v18;
      v21 = v12 == 2;
      v22 = v11 == 1 && v12 == 2;
      if (v11)
        v21 = 0;
      v276 = v21;
      swift_bridgeObjectRetain();
      while (1)
      {
        v23 = *(_QWORD *)(v16 + 48) + 16 * v19;
        if ((*(_BYTE *)(v23 + 9) & 1) == 0)
        {
          v24 = *(_QWORD *)v23;
          v25 = *(unsigned __int8 *)(v23 + 8);
          if (v25)
          {
            if (v25 == 1)
            {
              if (v12 == 1 && v24 == v11)
                break;
            }
            else if (v24)
            {
              if (v22)
                break;
            }
            else if (v276)
            {
              break;
            }
            goto LABEL_23;
          }
          if (!v12 && (_DWORD)v24 == (_DWORD)v11)
            break;
        }
LABEL_23:
        v19 = (v19 + 1) & v20;
        if (((*(_QWORD *)(v1 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v2 = 1;
LABEL_44:
          v301 = 0;
          v302 = 0xE000000000000000;
          sub_23B1C6EFC();
          swift_bridgeObjectRelease();
          v301 = 0xD000000000000011;
          v302 = 0x800000023B201BA0;
          sub_23AA96F18(v11, v12);
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          sub_23B1C64F4();
          v303 = v14 / 1000000000;
          sub_23AB55910();
          sub_23B1C6D70();
          sub_23B1C64F4();
          swift_bridgeObjectRelease();
          v34 = v301;
          v35 = v302;
          sub_23AF98354();
          v36 = *(_QWORD **)(v304 + 16);
          sub_23AF9839C(v36);
          v37 = sub_23AF983DC((uint64_t)v36, v34, v35);
          nullsub_1(v37);
          v31 = v290;
          swift_beginAccess();
          v5 = v291;
          v38 = *(_QWORD *)(v291 + 80);
          sub_23B1C74A8();
          sub_23B1C74B4();
          if (v12)
          {
            sub_23B1C74B4();
            if (v12 == 1)
              sub_23B1C74D8();
          }
          else
          {
            sub_23B1C74B4();
            sub_23B1C74CC();
          }
          v1 = (unint64_t)&v301;
          v39 = sub_23B1C74E4();
          v40 = -1 << *(_BYTE *)(v38 + 32);
          v41 = v39 & ~v40;
          if (((*(_QWORD *)(v38 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) != 0)
          {
            v1 = ~v40;
            v42 = v11 == 1 && v12 == 2;
            if (v11)
              v43 = 0;
            else
              v43 = v12 == 2;
            swift_bridgeObjectRetain();
            do
            {
              v44 = *(_QWORD *)(v38 + 48) + 16 * v41;
              if ((*(_BYTE *)(v44 + 9) & 1) == 0)
              {
                v45 = *(_QWORD *)v44;
                v46 = *(unsigned __int8 *)(v44 + 8);
                if (v46)
                {
                  if (v46 == 1)
                  {
                    if (v12 == 1 && v45 == v11)
                      goto LABEL_106;
                  }
                  else if (v45)
                  {
                    if (v42)
                      goto LABEL_106;
                  }
                  else if (v43)
                  {
                    goto LABEL_106;
                  }
                }
                else if (!v12 && (_DWORD)v45 == (_DWORD)v11)
                {
LABEL_106:
                  swift_bridgeObjectRelease();
                  v2 = 1;
                  goto LABEL_166;
                }
              }
              v41 = (v41 + 1) & v1;
            }
            while (((*(_QWORD *)(v38 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) != 0);
            swift_bridgeObjectRelease();
            v2 = 1;
          }
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v300[0] = *(_QWORD *)(v291 + 80);
          v48 = v300[0];
          *(_QWORD *)(v291 + 80) = 0x8000000000000000;
          if (*(_QWORD *)(v48 + 24) <= *(_QWORD *)(v48 + 16))
          {
            if (isUniquelyReferenced_nonNull_native)
              sub_23ADE352C();
            else
              sub_23ADE8930();
            v48 = v300[0];
            sub_23B1C74A8();
            sub_23B1C74B4();
            if (v12)
            {
              sub_23B1C74B4();
              if (v12 == 1)
                sub_23B1C74D8();
            }
            else
            {
              sub_23B1C74B4();
              sub_23B1C74CC();
            }
            v1 = (unint64_t)&v301;
            v58 = sub_23B1C74E4();
            v59 = -1 << *(_BYTE *)(v48 + 32);
            v41 = v58 & ~v59;
            if (((*(_QWORD *)(v48 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) != 0)
            {
              v1 = ~v59;
              __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6CD8);
              v60 = v12 == 2;
              v61 = v11 == 1 && v12 == 2;
              if (v11)
                v60 = 0;
              do
              {
                v62 = *(_QWORD *)(v48 + 48) + 16 * v41;
                if ((*(_BYTE *)(v62 + 9) & 1) == 0)
                {
                  v63 = *(_QWORD *)v62;
                  v64 = *(unsigned __int8 *)(v62 + 8);
                  if (v64)
                  {
                    if (v64 == 1)
                    {
                      if (v12 == 1 && v63 == v11)
                        goto LABEL_375;
                    }
                    else if (v63)
                    {
                      if (v61)
                        goto LABEL_375;
                    }
                    else if (v60)
                    {
                      goto LABEL_375;
                    }
                  }
                  else if (!v12 && (_DWORD)v63 == (_DWORD)v11)
                  {
                    goto LABEL_375;
                  }
                }
                v41 = (v41 + 1) & v1;
              }
              while (((*(_QWORD *)(v48 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) != 0);
            }
          }
          else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v1 = (unint64_t)v300;
            sub_23ADE6EC8();
            v48 = v300[0];
          }
          *(_QWORD *)(v48 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v41;
          v65 = *(_QWORD *)(v48 + 48) + 16 * v41;
          *(_QWORD *)v65 = v11;
          *(_BYTE *)(v65 + 8) = v12;
          *(_BYTE *)(v65 + 9) = 0;
          v66 = *(_QWORD *)(v48 + 16);
          v67 = __OFADD__(v66, 1);
          v68 = v66 + 1;
          if (!v67)
          {
LABEL_165:
            *(_QWORD *)(v48 + 16) = v68;
            *(_QWORD *)(v5 + 80) = v48;
            swift_bridgeObjectRelease();
LABEL_166:
            swift_endAccess();
            *(_BYTE *)(v5 + 40) = 1;
            swift_beginAccess();
            v1 = *(_QWORD *)(v5 + 48);
            v78 = sub_23AA97254(v11, v12);
            if ((v79 & 1) != 0)
            {
              v80 = v78;
              v81 = swift_isUniquelyReferenced_nonNull_native();
              v1 = *v31;
              v303 = *v31;
              *v31 = 0x8000000000000000;
              if ((v81 & 1) == 0)
              {
                sub_23B1882F8();
                v1 = v303;
              }
              sub_23B1841E4(v80, v1);
              *v31 = v1;
              swift_bridgeObjectRelease();
            }
            swift_endAccess();
            *(_BYTE *)(v5 + 40) = 1;
            v9 = v296;
            goto LABEL_7;
          }
LABEL_367:
          __break(1u);
LABEL_368:
          __break(1u);
          goto LABEL_369;
        }
      }
      swift_bridgeObjectRelease();
      v2 = 1;
      v9 = v296;
LABEL_36:
      if (v13 >= a1)
        v26 = 1;
      else
        v26 = v15;
      v5 = v291;
      if ((v26 & 1) == 0)
      {
        v296 = v9;
        v301 = 0;
        v302 = 0xE000000000000000;
        sub_23B1C6EFC();
        swift_bridgeObjectRelease();
        v301 = 0x206D657449202DLL;
        v302 = 0xE700000000000000;
        sub_23AA96F18(v11, v12);
        sub_23B1C64F4();
        swift_bridgeObjectRelease();
        sub_23B1C64F4();
        v27 = v301;
        v28 = v302;
        sub_23AF98354();
        v29 = *(_QWORD **)(v304 + 16);
        sub_23AF9839C(v29);
        v30 = (uint64_t)v29;
        v31 = v290;
        v5 = v291;
        v32 = sub_23AF983DC(v30, v27, v28);
        nullsub_1(v32);
        swift_beginAccess();
        v33 = *(_QWORD *)(v291 + 80);
        sub_23B1C74A8();
        sub_23B1C74B4();
        if (v12)
        {
          sub_23B1C74B4();
          if (v12 == 1)
            sub_23B1C74D8();
        }
        else
        {
          sub_23B1C74B4();
          sub_23B1C74CC();
        }
        v1 = (unint64_t)&v301;
        v49 = sub_23B1C74E4();
        v50 = -1 << *(_BYTE *)(v33 + 32);
        v51 = v49 & ~v50;
        if (((*(_QWORD *)(v33 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) != 0)
        {
          v1 = ~v50;
          v52 = v11 == 1 && v12 == 2;
          if (v11)
            v53 = 0;
          else
            v53 = v12 == 2;
          swift_bridgeObjectRetain();
          do
          {
            v54 = *(_QWORD *)(v33 + 48) + 16 * v51;
            if ((*(_BYTE *)(v54 + 9) & 1) == 0)
            {
              v55 = *(_QWORD *)v54;
              v56 = *(unsigned __int8 *)(v54 + 8);
              if (v56)
              {
                if (v56 == 1)
                {
                  if (v12 == 1 && v55 == v11)
                    goto LABEL_106;
                }
                else if (v55)
                {
                  if (v52)
                    goto LABEL_106;
                }
                else if (v53)
                {
                  goto LABEL_106;
                }
              }
              else if (!v12 && (_DWORD)v55 == (_DWORD)v11)
              {
                goto LABEL_106;
              }
            }
            v51 = (v51 + 1) & v1;
          }
          while (((*(_QWORD *)(v33 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) != 0);
          swift_bridgeObjectRelease();
          v2 = 1;
        }
        v57 = swift_isUniquelyReferenced_nonNull_native();
        v300[0] = *(_QWORD *)(v291 + 80);
        v48 = v300[0];
        *(_QWORD *)(v291 + 80) = 0x8000000000000000;
        if (*(_QWORD *)(v48 + 24) <= *(_QWORD *)(v48 + 16))
        {
          if (v57)
            sub_23ADE352C();
          else
            sub_23ADE8930();
          v48 = v300[0];
          sub_23B1C74A8();
          sub_23B1C74B4();
          if (v12)
          {
            sub_23B1C74B4();
            if (v12 == 1)
              sub_23B1C74D8();
          }
          else
          {
            sub_23B1C74B4();
            sub_23B1C74CC();
          }
          v1 = (unint64_t)&v301;
          v69 = sub_23B1C74E4();
          v70 = -1 << *(_BYTE *)(v48 + 32);
          v51 = v69 & ~v70;
          if (((*(_QWORD *)(v48 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) != 0)
          {
            v1 = ~v70;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6CD8);
            v71 = v12 == 2;
            v72 = v11 == 1 && v12 == 2;
            if (v11)
              v71 = 0;
            do
            {
              v73 = *(_QWORD *)(v48 + 48) + 16 * v51;
              if ((*(_BYTE *)(v73 + 9) & 1) == 0)
              {
                v74 = *(_QWORD *)v73;
                v75 = *(unsigned __int8 *)(v73 + 8);
                if (v75)
                {
                  if (v75 == 1)
                  {
                    if (v12 == 1 && v74 == v11)
                      goto LABEL_375;
                  }
                  else if (v74)
                  {
                    if (v72)
                      goto LABEL_375;
                  }
                  else if (v71)
                  {
                    goto LABEL_375;
                  }
                }
                else if (!v12 && (_DWORD)v74 == (_DWORD)v11)
                {
                  goto LABEL_375;
                }
              }
              v51 = (v51 + 1) & v1;
            }
            while (((*(_QWORD *)(v48 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) != 0);
          }
        }
        else if ((v57 & 1) == 0)
        {
          v1 = (unint64_t)v300;
          sub_23ADE6EC8();
          v48 = v300[0];
        }
        *(_QWORD *)(v48 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v51;
        v76 = *(_QWORD *)(v48 + 48) + 16 * v51;
        *(_QWORD *)v76 = v11;
        *(_BYTE *)(v76 + 8) = v12;
        *(_BYTE *)(v76 + 9) = 0;
        v77 = *(_QWORD *)(v48 + 16);
        v67 = __OFADD__(v77, 1);
        v68 = v77 + 1;
        if (v67)
          goto LABEL_371;
        goto LABEL_165;
      }
LABEL_7:
      ++v9;
    }
    while (v9 != v283);
  }
  swift_release();
  v1 = *(_QWORD *)(v5 + 56);
  v275 = v5 + 56;
  v82 = swift_bridgeObjectRetain();
  v83 = sub_23AEA4B78(v82);
  swift_bridgeObjectRelease();
  v280 = v83;
  v278 = sub_23AB6CF48((uint64_t)v83);
  if (!v278)
  {
LABEL_255:
    swift_release();
    v183 = *(_QWORD *)(v5 + 64);
    v184 = *(_QWORD *)(v183 + 56);
    v285 = v183 + 56;
    v185 = 1 << *(_BYTE *)(v183 + 32);
    if (v185 < 64)
      v186 = ~(-1 << v185);
    else
      v186 = -1;
    v187 = v186 & v184;
    v288 = (unint64_t)(v185 + 63) >> 6;
    v298 = *(_QWORD *)(v5 + 64);
    swift_bridgeObjectRetain();
    v188 = 0;
    while (1)
    {
      if (v187)
      {
        v191 = __clz(__rbit64(v187));
        v187 &= v187 - 1;
        v192 = v191 | (v188 << 6);
      }
      else
      {
        v193 = v188 + 1;
        if (__OFADD__(v188, 1))
          goto LABEL_365;
        if (v193 >= v288)
        {
          swift_release();
          v195 = v291;
          goto LABEL_306;
        }
        v194 = *(_QWORD *)(v285 + 8 * v193);
        ++v188;
        v195 = v291;
        if (!v194)
        {
          v188 = v193 + 1;
          if (v193 + 1 >= v288)
            goto LABEL_305;
          v194 = *(_QWORD *)(v285 + 8 * v188);
          if (!v194)
          {
            v188 = v193 + 2;
            if (v193 + 2 >= v288)
              goto LABEL_305;
            v194 = *(_QWORD *)(v285 + 8 * v188);
            if (!v194)
            {
              v196 = v193 + 3;
              if (v196 >= v288)
              {
LABEL_305:
                swift_release();
LABEL_306:
                v213 = sub_23ACD849C(0);
                if (sub_23AB6CF48(v213))
                  v214 = sub_23AAF8890(v213);
                else
                  v214 = MEMORY[0x24BEE4B08];
                swift_bridgeObjectRelease();
                *(_QWORD *)(v195 + 64) = v214;
                swift_bridgeObjectRelease();
                *(_BYTE *)(v195 + 40) = 1;
                v215 = *(_QWORD *)(v195 + 72);
                v216 = *(_QWORD *)(v215 + 56);
                v277 = v215 + 56;
                v217 = 1 << *(_BYTE *)(v215 + 32);
                if (v217 < 64)
                  v218 = ~(-1 << v217);
                else
                  v218 = -1;
                v1 = v218 & v216;
                v279 = (unint64_t)(v217 + 63) >> 6;
                v282 = *(_QWORD **)(v195 + 72);
                swift_bridgeObjectRetain();
                v219 = 0;
LABEL_315:
                if (v1)
                {
                  v222 = __clz(__rbit64(v1));
                  v223 = (v1 - 1) & v1;
                  v289 = v219;
                  v224 = v222 | (v219 << 6);
                }
                else
                {
                  v225 = v219 + 1;
                  if (__OFADD__(v219, 1))
                    goto LABEL_366;
                  if (v225 >= v279)
                  {
LABEL_357:
                    swift_release();
                    v264 = sub_23ACD8544(0);
                    if (sub_23AB6CF48(v264))
                      v265 = sub_23AAF8A74(v264);
                    else
                      v265 = MEMORY[0x24BEE4B08];
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(v195 + 72) = v265;
                    swift_bridgeObjectRelease();
                    *(_BYTE *)(v195 + 40) = 1;
                    v266 = v304;
                    if (sub_23AB6CF48(v304))
                    {
                      sub_23AE23E30();
                      sub_23AD6F6C4(v266);
                    }
                    return swift_bridgeObjectRelease();
                  }
                  v226 = *(_QWORD *)(v277 + 8 * v225);
                  v227 = v219 + 1;
                  if (!v226)
                  {
                    v227 = v219 + 2;
                    if (v219 + 2 >= v279)
                      goto LABEL_357;
                    v226 = *(_QWORD *)(v277 + 8 * v227);
                    if (!v226)
                    {
                      v227 = v219 + 3;
                      if (v219 + 3 >= v279)
                        goto LABEL_357;
                      v226 = *(_QWORD *)(v277 + 8 * v227);
                      if (!v226)
                      {
                        v228 = v219 + 4;
                        if (v219 + 4 >= v279)
                          goto LABEL_357;
                        v226 = *(_QWORD *)(v277 + 8 * v228);
                        if (!v226)
                        {
                          while (1)
                          {
                            v227 = v228 + 1;
                            if (__OFADD__(v228, 1))
                              break;
                            if (v227 >= v279)
                              goto LABEL_357;
                            v226 = *(_QWORD *)(v277 + 8 * v227);
                            ++v228;
                            if (v226)
                              goto LABEL_330;
                          }
LABEL_370:
                          __break(1u);
LABEL_371:
                          __break(1u);
LABEL_372:
                          __break(1u);
LABEL_373:
                          __break(1u);
                          goto LABEL_374;
                        }
                        v227 = v219 + 4;
                      }
                    }
                  }
LABEL_330:
                  v223 = (v226 - 1) & v226;
                  v289 = v227;
                  v224 = __clz(__rbit64(v226)) + (v227 << 6);
                }
                v286 = v223;
                v229 = *(void **)(v282[6] + 8 * v224);
                v301 = 0;
                v302 = 0xE000000000000000;
                v230 = v229;
                sub_23B1C6EFC();
                swift_bridgeObjectRelease();
                v301 = 0xD000000000000014;
                v302 = 0x800000023B201AE0;
                v299 = v230;
                v231 = sub_23B1C63E0();
                v233 = v232;
                if (v231 == sub_23B1C63E0() && v233 == v234)
                {
                  swift_bridgeObjectRelease_n();
                }
                else
                {
                  v236 = sub_23B1C7388();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v236 & 1) == 0)
                  {
                    v237 = sub_23B1C63E0();
                    v239 = v238;
                    if (v237 == sub_23B1C63E0() && v239 == v240)
                    {
                      swift_bridgeObjectRelease_n();
                    }
                    else
                    {
                      v242 = sub_23B1C7388();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v242 & 1) == 0)
                        sub_23B1C63E0();
                    }
                  }
                }
                sub_23B1C64F4();
                swift_bridgeObjectRelease();
                v243 = v301;
                v244 = v302;
                sub_23AF98354();
                v245 = *(_QWORD **)(v304 + 16);
                sub_23AF9839C(v245);
                v246 = sub_23AF983DC((uint64_t)v245, v243, v244);
                nullsub_1(v246);
                swift_beginAccess();
                v247 = *(_QWORD *)(v195 + 80);
                sub_23B1C74A8();
                sub_23B1C74B4();
                sub_23B1C63E0();
                v248 = v299;
                swift_bridgeObjectRetain();
                sub_23B1C64A0();
                v295 = v248;

                swift_bridgeObjectRelease();
                v249 = sub_23B1C74E4();
                v250 = -1 << *(_BYTE *)(v247 + 32);
                v251 = v249 & ~v250;
                if (((*(_QWORD *)(v247 + 56 + ((v251 >> 3) & 0xFFFFFFFFFFFFF8)) >> v251) & 1) == 0)
                {
LABEL_313:
                  swift_bridgeObjectRelease();
                  v195 = v291;
                  v220 = swift_isUniquelyReferenced_nonNull_native();
                  v301 = *(_QWORD *)(v291 + 80);
                  *(_QWORD *)(v291 + 80) = 0x8000000000000000;
                  v2 = (uint64_t)v295;
                  v221 = v295;
                  sub_23ADE53E8((char *)v299, 256, v251, v220);
                  *(_QWORD *)(v291 + 80) = v301;

                  swift_bridgeObjectRelease();
                  goto LABEL_314;
                }
                v252 = ~v250;
                while (1)
                {
                  v253 = *(_QWORD *)(v247 + 48) + 16 * v251;
                  if ((*(_BYTE *)(v253 + 9) & 1) != 0)
                  {
                    v254 = *(void **)v253;
                    v255 = *(unsigned __int8 *)(v253 + 8);
                    v256 = sub_23B1C63E0();
                    v258 = v257;
                    if (v256 == sub_23B1C63E0() && v258 == v259)
                    {
                      sub_23AA88218(v254, v255, 1);
                      sub_23AA88218(v254, v255, 1);
                      v263 = v295;
                      sub_23AA88218(v254, v255, 1);

                      swift_bridgeObjectRelease_n();
                      sub_23AA862DC(v254, v255, 1);
                      sub_23AA862DC(v254, v255, 1);
LABEL_354:
                      v2 = (uint64_t)v295;

                      swift_bridgeObjectRelease();
                      v195 = v291;
LABEL_314:
                      swift_endAccess();
                      *(_BYTE *)(v195 + 40) = 1;

                      v219 = v289;
                      v1 = v286;
                      goto LABEL_315;
                    }
                    v261 = sub_23B1C7388();
                    sub_23AA88218(v254, v255, 1);
                    sub_23AA88218(v254, v255, 1);
                    v262 = v295;
                    sub_23AA88218(v254, v255, 1);

                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_23AA862DC(v254, v255, 1);
                    sub_23AA862DC(v254, v255, 1);
                    if ((v261 & 1) != 0)
                      goto LABEL_354;
                  }
                  v251 = (v251 + 1) & v252;
                  if (((*(_QWORD *)(v247 + 56 + ((v251 >> 3) & 0xFFFFFFFFFFFFF8)) >> v251) & 1) == 0)
                    goto LABEL_313;
                }
              }
              v194 = *(_QWORD *)(v285 + 8 * v196);
              if (!v194)
              {
                while (1)
                {
                  v188 = v196 + 1;
                  if (__OFADD__(v196, 1))
                    break;
                  if (v188 >= v288)
                    goto LABEL_305;
                  v194 = *(_QWORD *)(v285 + 8 * v188);
                  ++v196;
                  if (v194)
                    goto LABEL_277;
                }
LABEL_369:
                __break(1u);
                goto LABEL_370;
              }
              v188 = v196;
            }
          }
        }
LABEL_277:
        v187 = (v194 - 1) & v194;
        v192 = __clz(__rbit64(v194)) + (v188 << 6);
      }
      v197 = *(_QWORD *)(v298 + 48) + 16 * v192;
      v2 = *(_QWORD *)v197;
      v198 = *(unsigned __int8 *)(v197 + 8);
      v301 = 0;
      v302 = 0xE000000000000000;
      sub_23B1C6EFC();
      swift_bridgeObjectRelease();
      v301 = 0xD000000000000014;
      v302 = 0x800000023B201AE0;
      sub_23AA96F18(v2, v198);
      sub_23B1C64F4();
      swift_bridgeObjectRelease();
      v199 = v301;
      v200 = v302;
      sub_23AF98354();
      v201 = *(_QWORD **)(v304 + 16);
      sub_23AF9839C(v201);
      v202 = sub_23AF983DC((uint64_t)v201, v199, v200);
      nullsub_1(v202);
      swift_beginAccess();
      v203 = *(_QWORD *)(v291 + 80);
      sub_23B1C74A8();
      sub_23B1C74B4();
      if ((_DWORD)v198)
      {
        sub_23B1C74B4();
        if ((_DWORD)v198 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      v204 = sub_23B1C74E4();
      v205 = -1 << *(_BYTE *)(v203 + 32);
      v206 = v204 & ~v205;
      v1 = v203 + 56;
      if (((*(_QWORD *)(v203 + 56 + ((v206 >> 3) & 0xFFFFFFFFFFFFF8)) >> v206) & 1) == 0)
      {
LABEL_260:
        v189 = v291;
        v190 = swift_isUniquelyReferenced_nonNull_native();
        v301 = *(_QWORD *)(v291 + 80);
        *(_QWORD *)(v291 + 80) = 0x8000000000000000;
        v1 = (unint64_t)&v301;
        sub_23ADE53E8((char *)v2, v198, v206, v190);
        *(_QWORD *)(v291 + 80) = v301;
        swift_bridgeObjectRelease();
        goto LABEL_261;
      }
      v207 = ~v205;
      v208 = v2 == 1 && (_DWORD)v198 == 2;
      if (v2)
        v209 = 0;
      else
        v209 = (_DWORD)v198 == 2;
      swift_bridgeObjectRetain();
      while (1)
      {
        v210 = *(_QWORD *)(v203 + 48) + 16 * v206;
        if ((*(_BYTE *)(v210 + 9) & 1) != 0)
          goto LABEL_291;
        v211 = *(_QWORD *)v210;
        v212 = *(unsigned __int8 *)(v210 + 8);
        if (!v212)
          break;
        if (v212 == 1)
        {
          if ((_DWORD)v198 == 1 && v211 == v2)
            goto LABEL_303;
        }
        else if (v211)
        {
          if (v208)
            goto LABEL_303;
        }
        else if (v209)
        {
          goto LABEL_303;
        }
LABEL_291:
        v206 = (v206 + 1) & v207;
        if (((*(_QWORD *)(v1 + ((v206 >> 3) & 0xFFFFFFFFFFFFF8)) >> v206) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_260;
        }
      }
      if ((_DWORD)v198 || (_DWORD)v211 != (_DWORD)v2)
        goto LABEL_291;
LABEL_303:
      swift_bridgeObjectRelease();
      v189 = v291;
LABEL_261:
      swift_endAccess();
      *(_BYTE *)(v189 + 40) = 1;
    }
  }
  v84 = 0;
  while (1)
  {
    if (v280[2] <= v84)
      goto LABEL_364;
    v90 = (uint64_t)&v280[4 * v84 + 4];
    v86 = *(void **)v90;
    v2 = *(_QWORD *)(v90 + 8);
    v91 = *(_QWORD *)(v90 + 24);
    v92 = *(_BYTE *)(v90 + 16);
    if (v91 >= v287)
    {
      v108 = v86;
      goto LABEL_191;
    }
    v284 = v84;
    v93 = *(_QWORD *)(v5 + 80);
    v297 = *(void **)v90;
    if (!*(_QWORD *)(v93 + 16))
    {
      v132 = v86;
      goto LABEL_213;
    }
    sub_23B1C74A8();
    sub_23B1C74B4();
    sub_23B1C63E0();
    v94 = v86;
    swift_bridgeObjectRetain();
    sub_23B1C64A0();

    swift_bridgeObjectRelease();
    v95 = sub_23B1C74E4();
    v96 = -1 << *(_BYTE *)(v93 + 32);
    v97 = v95 & ~v96;
    if (((*(_QWORD *)(v93 + 56 + ((v97 >> 3) & 0xFFFFFFFFFFFFF8)) >> v97) & 1) != 0)
      break;

    swift_bridgeObjectRelease();
    v5 = v291;
LABEL_213:
    v301 = 0;
    v302 = 0xE000000000000000;
    sub_23B1C6EFC();
    sub_23B1C64F4();
    sub_23AA7B734();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    sub_23B1C64F4();
    v303 = v91 / 1000000000;
    sub_23AB55910();
    sub_23B1C6D70();
    sub_23B1C64F4();
    swift_bridgeObjectRelease();
    v133 = v301;
    v134 = v302;
    sub_23AF98354();
    v2 = *(_QWORD *)(v304 + 16);
    sub_23AF9839C((_QWORD *)v2);
    v135 = sub_23AF983DC(v2, v133, v134);
    nullsub_1(v135);
    swift_beginAccess();
    v136 = *(_QWORD *)(v5 + 80);
    sub_23B1C74A8();
    sub_23B1C74B4();
    sub_23B1C63E0();
    v137 = v86;
    swift_bridgeObjectRetain();
    sub_23B1C64A0();
    v294 = v137;

    swift_bridgeObjectRelease();
    v138 = sub_23B1C74E4();
    v139 = -1 << *(_BYTE *)(v136 + 32);
    v140 = v138 & ~v139;
    if (((*(_QWORD *)(v136 + 56 + ((v140 >> 3) & 0xFFFFFFFFFFFFF8)) >> v140) & 1) == 0)
    {
LABEL_223:
      swift_bridgeObjectRelease();
      v1 = swift_isUniquelyReferenced_nonNull_native();
      v300[0] = *(_QWORD *)(v291 + 80);
      v149 = v300[0];
      *(_QWORD *)(v291 + 80) = 0x8000000000000000;
      v150 = *(_QWORD *)(v149 + 16);
      v151 = *(_QWORD *)(v149 + 24);
      v152 = v294;
      v274 = v152;
      if (v151 > v150)
      {
        if ((v1 & 1) == 0)
        {
          v1 = (unint64_t)v300;
          sub_23ADE6EC8();
        }
      }
      else
      {
        v2 = (uint64_t)v152;
        if ((_DWORD)v1)
          sub_23ADE352C();
        else
          sub_23ADE8930();
        v154 = v300[0];
        sub_23B1C74A8();
        sub_23B1C74B4();
        sub_23B1C63E0();
        v155 = (id)v2;
        sub_23B1C64A0();
        v282 = v155;

        swift_bridgeObjectRelease();
        v1 = (unint64_t)&v301;
        v156 = sub_23B1C74E4();
        v157 = -1 << *(_BYTE *)(v154 + 32);
        v140 = v156 & ~v157;
        if (((*(_QWORD *)(v154 + 56 + ((v140 >> 3) & 0xFFFFFFFFFFFFF8)) >> v140) & 1) != 0)
        {
          v158 = ~v157;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6CD8);
          do
          {
            v159 = *(_QWORD *)(v154 + 48) + 16 * v140;
            if ((*(_BYTE *)(v159 + 9) & 1) != 0)
            {
              v1 = *(_QWORD *)v159;
              v2 = *(unsigned __int8 *)(v159 + 8);
              v160 = sub_23B1C63E0();
              v162 = v161;
              if (v160 == sub_23B1C63E0() && v162 == v163)
                goto LABEL_376;
              v165 = sub_23B1C7388();
              sub_23AA88218((id)v1, v2, 1);
              sub_23AA88218((id)v1, v2, 1);
              v166 = v282;
              sub_23AA88218((id)v1, v2, 1);

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_23AA862DC((id)v1, v2, 1);
              sub_23AA862DC((id)v1, v2, 1);
              if ((v165 & 1) != 0)
                goto LABEL_379;
            }
            v140 = (v140 + 1) & v158;
          }
          while (((*(_QWORD *)(v154 + 56 + ((v140 >> 3) & 0xFFFFFFFFFFFFF8)) >> v140) & 1) != 0);
        }
      }
      v86 = v297;
      v85 = v300[0];
      *(_QWORD *)(v300[0] + ((v140 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v140;
      v87 = *(_QWORD *)(v85 + 48) + 16 * v140;
      *(_QWORD *)v87 = v297;
      *(_WORD *)(v87 + 8) = 256;
      v88 = *(_QWORD *)(v85 + 16);
      v67 = __OFADD__(v88, 1);
      v89 = v88 + 1;
      if (v67)
        goto LABEL_368;
LABEL_174:
      *(_QWORD *)(v85 + 16) = v89;
      v5 = v291;
      *(_QWORD *)(v291 + 80) = v85;

      swift_bridgeObjectRelease();
      goto LABEL_175;
    }
    v141 = ~v139;
    while (1)
    {
      v142 = *(_QWORD *)(v136 + 48) + 16 * v140;
      if ((*(_BYTE *)(v142 + 9) & 1) == 0)
        goto LABEL_215;
      v120 = *(void **)v142;
      v121 = *(unsigned __int8 *)(v142 + 8);
      v143 = sub_23B1C63E0();
      v2 = v144;
      if (v143 == sub_23B1C63E0() && v2 == v145)
        break;
      v147 = sub_23B1C7388();
      sub_23AA88218(v120, v121, 1);
      sub_23AA88218(v120, v121, 1);
      v148 = v294;
      sub_23AA88218(v120, v121, 1);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23AA862DC(v120, v121, 1);
      sub_23AA862DC(v120, v121, 1);
      if ((v147 & 1) != 0)
        goto LABEL_227;
LABEL_215:
      v140 = (v140 + 1) & v141;
      if (((*(_QWORD *)(v136 + 56 + ((v140 >> 3) & 0xFFFFFFFFFFFFF8)) >> v140) & 1) == 0)
        goto LABEL_223;
    }
LABEL_226:
    sub_23AA88218(v120, v121, 1);
    sub_23AA88218(v120, v121, 1);
    v153 = v294;
    sub_23AA88218(v120, v121, 1);

    swift_bridgeObjectRelease_n();
    sub_23AA862DC(v120, v121, 1);
    sub_23AA862DC(v120, v121, 1);
LABEL_227:

    swift_bridgeObjectRelease();
    v5 = v291;
    v86 = v297;
LABEL_175:
    swift_endAccess();
    *(_BYTE *)(v5 + 40) = 1;
    swift_beginAccess();
    v1 = v275;
    sub_23B1829E8((uint64_t)v294);
    swift_endAccess();
    v84 = v284;

    *(_BYTE *)(v5 + 40) = 1;
LABEL_176:
    ++v84;

    if (v84 == v278)
      goto LABEL_255;
  }
  v293 = v94;
  v273 = v92;
  v282 = (_QWORD *)v2;
  v272 = v91;
  v98 = ~v96;
  while (1)
  {
    v99 = *(_QWORD *)(v93 + 48) + 16 * v97;
    if ((*(_BYTE *)(v99 + 9) & 1) != 0)
      break;
LABEL_182:
    v97 = (v97 + 1) & v98;
    if (((*(_QWORD *)(v93 + 56 + ((v97 >> 3) & 0xFFFFFFFFFFFFF8)) >> v97) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      v5 = v291;
      v86 = v297;
      v91 = v272;
      goto LABEL_213;
    }
  }
  v1 = *(_QWORD *)v99;
  v100 = *(unsigned __int8 *)(v99 + 8);
  v101 = sub_23B1C63E0();
  v103 = v102;
  if (v101 != sub_23B1C63E0() || v103 != v104)
  {
    v106 = sub_23B1C7388();
    sub_23AA88218((id)v1, v100, 1);
    sub_23AA88218((id)v1, v100, 1);
    v107 = v293;
    sub_23AA88218((id)v1, v100, 1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AA862DC((id)v1, v100, 1);
    sub_23AA862DC((id)v1, v100, 1);
    if ((v106 & 1) != 0)
      goto LABEL_254;
    goto LABEL_182;
  }
  sub_23AA88218((id)v1, v100, 1);
  sub_23AA88218((id)v1, v100, 1);
  v182 = v293;
  sub_23AA88218((id)v1, v100, 1);

  swift_bridgeObjectRelease_n();
  sub_23AA862DC((id)v1, v100, 1);
  sub_23AA862DC((id)v1, v100, 1);
LABEL_254:

  swift_bridgeObjectRelease();
  v5 = v291;
  v2 = (uint64_t)v282;
  v86 = v297;
  v92 = v273;
LABEL_191:
  if (v2 >= a1)
    v109 = 1;
  else
    v109 = v92;
  if ((v109 & 1) != 0)
    goto LABEL_176;
  v284 = v84;
  v301 = 0;
  v302 = 0xE000000000000000;
  sub_23B1C6EFC();
  swift_bridgeObjectRelease();
  v301 = 0x206D657449202DLL;
  v302 = 0xE700000000000000;
  sub_23AA7B734();
  sub_23B1C64F4();
  swift_bridgeObjectRelease();
  sub_23B1C64F4();
  v110 = v301;
  v111 = v302;
  sub_23AF98354();
  v2 = *(_QWORD *)(v304 + 16);
  sub_23AF9839C((_QWORD *)v2);
  v112 = sub_23AF983DC(v2, v110, v111);
  nullsub_1(v112);
  swift_beginAccess();
  v113 = *(_QWORD *)(v5 + 80);
  sub_23B1C74A8();
  sub_23B1C74B4();
  sub_23B1C63E0();
  v297 = v86;
  v114 = v86;
  swift_bridgeObjectRetain();
  sub_23B1C64A0();
  v294 = v114;

  swift_bridgeObjectRelease();
  v115 = sub_23B1C74E4();
  v116 = -1 << *(_BYTE *)(v113 + 32);
  v117 = v115 & ~v116;
  if (((*(_QWORD *)(v113 + 56 + ((v117 >> 3) & 0xFFFFFFFFFFFFF8)) >> v117) & 1) != 0)
  {
    v118 = ~v116;
    do
    {
      v119 = *(_QWORD *)(v113 + 48) + 16 * v117;
      if ((*(_BYTE *)(v119 + 9) & 1) != 0)
      {
        v120 = *(void **)v119;
        v121 = *(unsigned __int8 *)(v119 + 8);
        v122 = sub_23B1C63E0();
        v2 = v123;
        if (v122 == sub_23B1C63E0() && v2 == v124)
          goto LABEL_226;
        v126 = sub_23B1C7388();
        sub_23AA88218(v120, v121, 1);
        sub_23AA88218(v120, v121, 1);
        v127 = v294;
        sub_23AA88218(v120, v121, 1);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23AA862DC(v120, v121, 1);
        sub_23AA862DC(v120, v121, 1);
        if ((v126 & 1) != 0)
          goto LABEL_227;
      }
      v117 = (v117 + 1) & v118;
    }
    while (((*(_QWORD *)(v113 + 56 + ((v117 >> 3) & 0xFFFFFFFFFFFFF8)) >> v117) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  v1 = swift_isUniquelyReferenced_nonNull_native();
  v300[0] = *(_QWORD *)(v291 + 80);
  v128 = v300[0];
  *(_QWORD *)(v291 + 80) = 0x8000000000000000;
  v129 = *(_QWORD *)(v128 + 16);
  v130 = *(_QWORD *)(v128 + 24);
  v131 = v294;
  v274 = v131;
  if (v130 > v129)
  {
    if ((v1 & 1) == 0)
    {
      v1 = (unint64_t)v300;
      sub_23ADE6EC8();
    }
    goto LABEL_250;
  }
  v2 = (uint64_t)v131;
  if ((_DWORD)v1)
    sub_23ADE352C();
  else
    sub_23ADE8930();
  v167 = v300[0];
  sub_23B1C74A8();
  sub_23B1C74B4();
  sub_23B1C63E0();
  v168 = (id)v2;
  sub_23B1C64A0();
  v282 = v168;

  swift_bridgeObjectRelease();
  v1 = (unint64_t)&v301;
  v169 = sub_23B1C74E4();
  v170 = -1 << *(_BYTE *)(v167 + 32);
  v117 = v169 & ~v170;
  if (((*(_QWORD *)(v167 + 56 + ((v117 >> 3) & 0xFFFFFFFFFFFFF8)) >> v117) & 1) == 0)
  {
LABEL_250:
    v86 = v297;
    v85 = v300[0];
    *(_QWORD *)(v300[0] + ((v117 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v117;
    v180 = *(_QWORD *)(v85 + 48) + 16 * v117;
    *(_QWORD *)v180 = v297;
    *(_WORD *)(v180 + 8) = 256;
    v181 = *(_QWORD *)(v85 + 16);
    v67 = __OFADD__(v181, 1);
    v89 = v181 + 1;
    if (v67)
      goto LABEL_372;
    goto LABEL_174;
  }
  v171 = ~v170;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542E6CD8);
  while (2)
  {
    v172 = *(_QWORD *)(v167 + 48) + 16 * v117;
    if ((*(_BYTE *)(v172 + 9) & 1) == 0)
    {
LABEL_242:
      v117 = (v117 + 1) & v171;
      if (((*(_QWORD *)(v167 + 56 + ((v117 >> 3) & 0xFFFFFFFFFFFFF8)) >> v117) & 1) == 0)
        goto LABEL_250;
      continue;
    }
    break;
  }
  v2 = *(_QWORD *)v172;
  v1 = *(unsigned __int8 *)(v172 + 8);
  v173 = sub_23B1C63E0();
  v175 = v174;
  if (v173 != sub_23B1C63E0() || v175 != v176)
  {
    v178 = sub_23B1C7388();
    sub_23AA88218((id)v2, v1, 1);
    sub_23AA88218((id)v2, v1, 1);
    v179 = v282;
    sub_23AA88218((id)v2, v1, 1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AA862DC((id)v2, v1, 1);
    sub_23AA862DC((id)v2, v1, 1);
    if ((v178 & 1) != 0)
      goto LABEL_379;
    goto LABEL_242;
  }
  sub_23AA88218((id)v2, v1, 1);
  sub_23AA88218((id)v2, v1, 1);
  v271 = v282;
  sub_23AA88218((id)v2, v1, 1);

  swift_bridgeObjectRelease_n();
  sub_23AA862DC((id)v2, v1, 1);
  v269 = (void *)v2;
  v270 = v1;
LABEL_378:
  sub_23AA862DC(v269, v270, 1);
LABEL_379:
  result = sub_23B1C740C();
  __break(1u);
  return result;
}

uint64_t sub_23AE1FF7C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void (*v33)(_QWORD *, uint64_t, uint64_t);
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(_QWORD *, uint64_t);
  uint64_t v39;
  id v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t ObjectType;
  char *v49;
  uint64_t v50;
  uint64_t v51;

  v1 = v0;
  v50 = sub_23B1C6020();
  v2 = *(_QWORD *)(v50 - 8);
  v3 = MEMORY[0x24BDAC7A8](v50);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (uint64_t *)((char *)&v39 - v6);
  v8 = sub_23B1C60E0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v45 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - v12;
  v14 = sub_23B1C60A4();
  v47 = *(_QWORD *)(v14 - 8);
  ObjectType = v14;
  MEMORY[0x24BDAC7A8](v14);
  v46 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23B1C6B78();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  if (!*(_QWORD *)(v1[6] + 16)
    && !*(_QWORD *)(v1[7] + 16)
    && !*(_QWORD *)(v1[8] + 16)
    && !*(_QWORD *)(v1[9] + 16))
  {
    if (v1[17]
      && (swift_getObjectType(), swift_unknownObjectRetain(), sub_23B1C6BCC(), swift_unknownObjectRelease(), v1[17]))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_23B1C6BA8();
      swift_unknownObjectRelease();
      v1[17] = 0;
    }
    else
    {
      v1[17] = 0;
    }
    return swift_unknownObjectRelease();
  }
  v42 = v9;
  v43 = v2;
  v49 = v13;
  v44 = v8;
  if (!v1[17])
  {
    swift_bridgeObjectRetain();
    sub_23B1C656C();
    swift_bridgeObjectRelease();
    sub_23AA9F52C(0, (unint64_t *)&qword_2542E7520);
    v21 = *(void **)(v1[12] + 64);
    v51 = MEMORY[0x24BEE4AF8];
    sub_23AA7E38C((unint64_t *)&qword_2542E1F80, (uint64_t (*)(uint64_t))MEMORY[0x24BEE57C0], MEMORY[0x24BEE57D0]);
    v40 = v21;
    v41 = v5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E1EF0);
    sub_23AAB5A28((unint64_t *)&qword_2542E1F00, (uint64_t *)&unk_2542E1EF0, MEMORY[0x24BEE12C8]);
    v22 = v50;
    sub_23B1C6DE8();
    v23 = sub_23B1C6B84();

    v24 = v41;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v1[17] = v23;
    result = swift_unknownObjectRelease();
    if (v1[17])
    {
      swift_getObjectType();
      v25 = swift_allocObject();
      swift_weakInit();
      swift_unknownObjectRetain();
      swift_retain();
      v26 = (uint64_t)v46;
      sub_23B1C6080();
      sub_23AA78928(0, v26, (uint64_t)sub_23AEB3D3C, v25);
      swift_unknownObjectRelease();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v26, ObjectType);
      result = swift_release();
      if (v1[17])
      {
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        v27 = v22;
        v28 = v45;
        sub_23B1C60C8();
        v29 = v1[14];
        *v7 = v29;
        v30 = *MEMORY[0x24BEE5420];
        v31 = v24;
        v32 = v43;
        v33 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v43 + 104);
        v33(v7, v30, v27);
        MEMORY[0x23B85EA14](v28, v7);
        v47 = *(_QWORD *)(v32 + 8);
        ((void (*)(_QWORD *, uint64_t))v47)(v7, v27);
        v34 = *(void (**)(char *, uint64_t))(v42 + 8);
        v35 = v28;
        v36 = v44;
        v34(v35, v44);
        *v7 = v29;
        v33(v7, v30, v27);
        *v31 = 0;
        v33(v31, *MEMORY[0x24BEE5400], v27);
        v37 = v49;
        MEMORY[0x23B85F530](v49, v7, v31, ObjectType);
        swift_unknownObjectRelease();
        v38 = (void (*)(_QWORD *, uint64_t))v47;
        ((void (*)(_QWORD *, uint64_t))v47)(v31, v27);
        v38(v7, v27);
        result = ((uint64_t (*)(char *, uint64_t))v34)(v37, v36);
        if (v1[17])
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          sub_23B1C6BB4();
          return swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t sub_23AE204A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;

  v0 = sub_23B1C5BDC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23B1C5E4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v10 = sub_23B1C5E40();
    v11 = sub_23B1C6A94();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_23AA66000, v10, v11, "💂🏼‍♀️  evaluating stuck imports", v12, 2u);
      MEMORY[0x23B8614BC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v14 = v13;
    result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    v15 = v14 * 1000000000.0;
    if ((~COERCE__INT64(v14 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18)
        {
          v16 = sub_23AE1DB6C((uint64_t)v15);
          sub_23AE1FF7C(v16);
          return swift_release();
        }
LABEL_11:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_23AE206A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD v28[6];

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v28 - v7;
  result = swift_beginAccess();
  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16);
  v11 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 16);
  v12 = __OFADD__(v10, v11);
  v13 = v10 + v11;
  if (v12)
  {
    __break(1u);
    goto LABEL_16;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v1 + 64) + 16);
  v12 = __OFADD__(v13, v14);
  v15 = v13 + v14;
  if (v12)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16 = *(_QWORD *)(*(_QWORD *)(v1 + 72) + 16);
  v12 = __OFADD__(v15, v16);
  v17 = v15 + v16;
  if (v12)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v1 + 80) + 16);
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_18:
    __break(1u);
    return result;
  }
  if ((*(_BYTE *)(v1 + 88) & 1) != 0)
  {
    if (v19 <= 29)
    {
      v20 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v21 = sub_23B1C5E40();
      v22 = sub_23B1C6A94();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_23AA66000, v21, v22, "💂🏼‍♀️ we can track more items", v23, 2u);
        MEMORY[0x23B8614BC](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      *(_BYTE *)(v1 + 88) = 0;
      *(_BYTE *)(v1 + 40) = 1;
      return sub_23AE2151C();
    }
  }
  else if (v19 > 50)
  {
    v24 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v25 = sub_23B1C5E40();
    v26 = sub_23B1C6A94();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v27 = 134217984;
      v28[5] = v19;
      sub_23B1C6CBC();
      _os_log_impl(&dword_23AA66000, v25, v26, "💂🏼‍♀️ we're tracking to many importing items (%ld)", v27, 0xCu);
      MEMORY[0x23B8614BC](v27, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    *(_BYTE *)(v1 + 88) = 1;
    *(_BYTE *)(v1 + 40) = 1;
  }
  return result;
}

uint64_t sub_23AE2093C(void *a1, unsigned __int8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  void (*v21)(uint64_t *, uint64_t);
  uint64_t v22;
  unsigned int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  char v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];
  uint64_t v53;
  char v54;

  v5 = v3;
  v50 = a3;
  v8 = sub_23B1C5E4C();
  v48 = *(_QWORD *)(v8 - 8);
  v49 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = (uint64_t)a1;
  v54 = a2;
  swift_beginAccess();
  v17 = (void *)sub_23B18D0C4(a1, a2);
  v19 = v18;
  swift_endAccess();
  sub_23ADF1CFC(v17, v19);
  *(_BYTE *)(v5 + 40) = 1;
  result = ((uint64_t (*)(void))sub_23AE206A4)();
  if (v4 || (*(_BYTE *)(v5 + 88) & 1) != 0)
    return result;
  v21 = *(void (**)(uint64_t *, uint64_t))(**(_QWORD **)(*(_QWORD *)(v5 + 96) + 32) + 240);
  swift_retain();
  v21(&v53, 1);
  swift_release();
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v16, 1, v22) != 1)
  {
    sub_23AA907B0((uint64_t)&v16[*(int *)(v22 + 48)], (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    sub_23AA8A05C((uint64_t)v16, (uint64_t *)&unk_2542E6B00);
    v23 = *((_DWORD *)v13 + 1);
    v24 = v13[8];
    result = sub_23AA937BC((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
    if ((v24 & 1) != 0)
      goto LABEL_6;
    v26 = *(_QWORD *)(v5 + 128);
    v27 = (v23 / 0x3E8 + 1) * v26;
    if (((unsigned __int128)(v23 / 0x3E8 + 1) * v26) >> 64 == v27 >> 63)
    {
      v28 = 1000000000 * v27;
      if ((unsigned __int128)(v27 * (__int128)1000000000) >> 64 == (1000000000 * v27) >> 63)
      {
        v25 = v50 + v28;
        if (!__OFADD__(v50, v28))
        {
          v47 = 0;
          goto LABEL_11;
        }
LABEL_17:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
  sub_23AA8A05C((uint64_t)v16, (uint64_t *)&unk_2542E4750);
LABEL_6:
  v25 = 0;
  v47 = 1;
LABEL_11:
  v29 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v30 = v53;
  v31 = v54;
  v32 = sub_23B1C5E40();
  v33 = sub_23B1C6A94();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc();
    v46 = v25;
    v35 = (uint8_t *)v34;
    v45 = swift_slowAlloc();
    v52[0] = v45;
    *(_DWORD *)v35 = 136315138;
    v44[1] = v35 + 4;
    v36 = sub_23AA96F18(v30, v31);
    v51 = sub_23AABEC68(v36, v37, v52);
    sub_23B1C6CBC();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v32, v33, "💂🏼‍♀️ start monitoring import:disk for %s", v35, 0xCu);
    v38 = v45;
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v38, -1, -1);
    v39 = v35;
    v25 = v46;
    MEMORY[0x23B8614BC](v39, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v49);
  v40 = v53;
  v41 = v54;
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v51 = *(_QWORD *)(v5 + 48);
  *(_QWORD *)(v5 + 48) = 0x8000000000000000;
  sub_23AD25AA8(v25, v47, v50, v40, v41, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v5 + 48) = v51;
  swift_bridgeObjectRelease();
  v43 = swift_endAccess();
  *(_BYTE *)(v5 + 40) = 1;
  return sub_23AE206A4(v43);
}

uint64_t sub_23AE20D94(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  void (*v41)(id *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  char v46;
  uint64_t v47;
  int v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint8_t *v62;
  id v63;
  id v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81[9];
  uint64_t v82;
  id v83;

  v3 = v2;
  v72 = a2;
  v70 = sub_23B1C5E4C();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v73 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ItemMetadata();
  MEMORY[0x24BDAC7A8](v6);
  v68 = (uint64_t)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542E4770);
  MEMORY[0x24BDAC7A8](v8);
  v74 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = a1;
  v71 = v2 + 48;
  swift_beginAccess();
  v10 = *(_QWORD *)(v2 + 80);
  sub_23B1C74A8();
  sub_23B1C74B4();
  sub_23B1C63E0();
  v78 = a1;
  v11 = a1;
  swift_bridgeObjectRetain();
  sub_23B1C64A0();

  swift_bridgeObjectRelease();
  v12 = sub_23B1C74E4();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
  {

    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v79 = v11;
  v75 = v2;
  v16 = ~v13;
  v77 = v10;
  while (1)
  {
    v17 = *(_QWORD *)(v10 + 48) + 16 * v14;
    if ((*(_BYTE *)(v17 + 9) & 1) == 0)
      goto LABEL_3;
    v80 = 16 * v14;
    v18 = v15;
    v19 = *(void **)v17;
    v20 = *(unsigned __int8 *)(v17 + 8);
    v21 = sub_23B1C63E0();
    v23 = v22;
    if (v21 == sub_23B1C63E0() && v23 == v24)
      break;
    v26 = sub_23B1C7388();
    sub_23AA88218(v19, v20, 1);
    sub_23AA88218(v19, v20, 1);
    v27 = v16;
    v28 = v79;
    sub_23AA88218(v19, v20, 1);

    v16 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AA862DC(v19, v20, 1);
    sub_23AA862DC(v19, v20, 1);
    v10 = v77;
    v15 = v18;
    v29 = v80;
    if ((v26 & 1) != 0)
      goto LABEL_14;
LABEL_3:
    v14 = (v14 + 1) & v16;
    if (((*(_QWORD *)(v15 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      v3 = v75;
      goto LABEL_17;
    }
  }
  sub_23AA88218(v19, v20, 1);
  sub_23AA88218(v19, v20, 1);
  v30 = v79;
  sub_23AA88218(v19, v20, 1);

  swift_bridgeObjectRelease_n();
  sub_23AA862DC(v19, v20, 1);
  sub_23AA862DC(v19, v20, 1);
  v29 = v80;
LABEL_14:
  swift_bridgeObjectRelease();
  v31 = v75;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33 = *(_QWORD *)(v31 + 80);
  v81[0] = v33;
  *(_QWORD *)(v31 + 80) = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_23ADE6EC8();
    v33 = v81[0];
  }
  v34 = *(_QWORD *)(v33 + 48) + v29;
  v35 = *(void **)v34;
  v36 = *(_BYTE *)(v34 + 9);
  v37 = *(unsigned __int8 *)(v34 + 8);
  sub_23B18EEEC(v14);
  *(_QWORD *)(v31 + 80) = v81[0];

  swift_bridgeObjectRelease();
  sub_23AA862DC(v35, v37, v36);
  v3 = v31;
LABEL_17:
  v38 = swift_endAccess();
  *(_BYTE *)(v3 + 40) = 1;
  v39 = v76;
  result = sub_23AE206A4(v38);
  if (v39 || (*(_BYTE *)(v3 + 88) & 1) != 0)
    return result;
  v41 = *(void (**)(id *, uint64_t))(**(_QWORD **)(*(_QWORD *)(v3 + 96) + 40) + 240);
  swift_retain();
  v41(&v83, 1);
  swift_release();
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v43 = (uint64_t)v74;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v74, 1, v42) == 1)
  {
    sub_23AA8A05C(v43, &qword_2542E4770);
    goto LABEL_22;
  }
  v44 = v68;
  sub_23AA907B0(v43 + *(int *)(v42 + 48), v68, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  sub_23AA8A05C(v43, (uint64_t *)&unk_2542E4760);
  v45 = *(_DWORD *)(v44 + 4);
  v46 = *(_BYTE *)(v44 + 8);
  result = sub_23AA937BC(v44, (uint64_t (*)(_QWORD))type metadata accessor for ItemMetadata);
  if ((v46 & 1) != 0)
  {
LABEL_22:
    v47 = 0;
    v48 = 1;
    v49 = v73;
    goto LABEL_27;
  }
  v50 = *(_QWORD *)(v3 + 128);
  v51 = (v45 / 0x3E8 + 1) * v50;
  v49 = v73;
  if (((unsigned __int128)(v45 / 0x3E8 + 1) * v50) >> 64 != v51 >> 63)
  {
    __break(1u);
    goto LABEL_33;
  }
  v52 = 1000000000 * v51;
  if ((unsigned __int128)(v51 * (__int128)1000000000) >> 64 != (1000000000 * v51) >> 63)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v47 = v72 + v52;
  if (__OFADD__(v72, v52))
  {
LABEL_34:
    __break(1u);
    return result;
  }
  v48 = 0;
LABEL_27:
  v53 = (id)fpfs_current_or_default_log();
  sub_23B1C5E58();
  v54 = v83;
  v55 = sub_23B1C5E40();
  v56 = sub_23B1C6A94();
  if (os_log_type_enabled(v55, v56))
  {
    v80 = v47;
    v57 = swift_slowAlloc();
    v75 = v3;
    v58 = (uint8_t *)v57;
    v59 = swift_slowAlloc();
    v81[0] = v59;
    *(_DWORD *)v58 = 136315138;
    v60 = sub_23AA7B734();
    LODWORD(v79) = v48;
    v82 = sub_23AABEC68(v60, v61, v81);
    v47 = v80;
    sub_23B1C6CBC();

    LOBYTE(v48) = (_BYTE)v79;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23AA66000, v55, v56, "💂🏼‍♀️ start monitoring import:provider for %s", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8614BC](v59, -1, -1);
    v62 = v58;
    v3 = v75;
    MEMORY[0x23B8614BC](v62, -1, -1);

    (*(void (**)(char *, uint64_t))(v69 + 8))(v73, v70);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v69 + 8))(v49, v70);
  }
  v63 = v83;
  swift_beginAccess();
  v64 = v63;
  v65 = swift_isUniquelyReferenced_nonNull_native();
  v82 = *(_QWORD *)(v3 + 56);
  *(_QWORD *)(v3 + 56) = 0x8000000000000000;
  sub_23AD25BFC(v47, v48, v72, v64, v65);
  *(_QWORD *)(v3 + 56) = v82;

  swift_bridgeObjectRelease();
  v66 = swift_endAccess();
  *(_BYTE *)(v3 + 40) = 1;
  return sub_23AE206A4(v66);
}

uint64_t sub_23AE2151C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t (*)(uint64_t, void **, char), uint64_t *);
  uint64_t v13;

  v1 = v0;
  v2 = sub_23B1C5BDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  if ((*(_BYTE *)(v1 + 88) & 1) == 0)
  {
    sub_23B1C5BD0();
    sub_23B1C5B94();
    v8 = v7;
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v9 = v8 * 1000000000.0;
    if ((~COERCE__INT64(v8 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v9 > -9.22337204e18)
      {
        if (v9 < 9.22337204e18)
        {
          v10 = *(_QWORD *)(*(_QWORD *)(v1 + 96) + 16);
          MEMORY[0x24BDAC7A8](result);
          *(&v13 - 2) = v1;
          *(&v13 - 1) = v11;
          v12 = *(void (**)(uint64_t (*)(uint64_t, void **, char), uint64_t *))(*(_QWORD *)v10 + 264);
          swift_retain();
          v12(sub_23AEB3D44, &v13 - 4);
          return swift_release();
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_23AE21688(void *a1, char a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  void *v49;
  id v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  char v61;
  id v62;
  char v63;
  char v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  BOOL v71;
  BOOL v72;
  uint64_t v73;
  void *v74;
  int v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  BOOL v83;
  BOOL v84;
  id v85;
  uint64_t v86;
  void *v87;
  int v88;
  id v89;
  char v90;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  void *v96;
  void *v97;
  void *v98;
  uint64_t v99;
  _QWORD v100[2];
  int v101;

  v7 = v6;
  v8 = a5;
  v9 = a3;
  if (a2 == -1)
  {
    if (!a3)
      goto LABEL_116;
    swift_beginAccess();
    v32 = *(_QWORD *)(v8 + 80);
    if (*(_QWORD *)(v32 + 16))
    {
      v93 = v8;
      sub_23B1C74A8();
      sub_23B1C74B4();
      sub_23B1C63E0();
      v33 = v9;
      swift_bridgeObjectRetain();
      sub_23B1C64A0();

      swift_bridgeObjectRelease();
      v34 = sub_23B1C74E4();
      v35 = -1 << *(_BYTE *)(v32 + 32);
      v36 = v34 & ~v35;
      v37 = v32 + 56;
      if (((*(_QWORD *)(v32 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0)
      {
        v97 = v33;
        v38 = ~v35;
        v95 = v32;
        do
        {
          v39 = *(_QWORD *)(v32 + 48) + 16 * v36;
          if ((*(_BYTE *)(v39 + 9) & 1) != 0)
          {
            v40 = v37;
            v41 = *(void **)v39;
            v42 = *(unsigned __int8 *)(v39 + 8);
            v43 = sub_23B1C63E0();
            v45 = v44;
            if (v43 == sub_23B1C63E0() && v45 == v46)
            {
              sub_23AA88218(v41, v42, 1);
              sub_23AA88218(v41, v42, 1);
              v66 = v97;
              sub_23AA88218(v41, v42, 1);

              swift_bridgeObjectRelease_n();
              sub_23AA862DC(v41, v42, 1);
              sub_23AA862DC(v41, v42, 1);
LABEL_57:

              goto LABEL_107;
            }
            v101 = sub_23B1C7388();
            sub_23AA88218(v41, v42, 1);
            sub_23AA88218(v41, v42, 1);
            v48 = v38;
            v49 = v9;
            v50 = v97;
            sub_23AA88218(v41, v42, 1);

            v9 = v49;
            v38 = v48;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23AA862DC(v41, v42, 1);
            sub_23AA862DC(v41, v42, 1);
            v32 = v95;
            v37 = v40;
            if ((v101 & 1) != 0)
              goto LABEL_57;
          }
          v36 = (v36 + 1) & v38;
        }
        while (((*(_QWORD *)(v37 + ((v36 >> 3) & 0xFFFFFFFFFFFFF8)) >> v36) & 1) != 0);

        swift_bridgeObjectRelease();
        v7 = v6;
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      v8 = v93;
    }
    else
    {
      v56 = v9;
    }
    swift_beginAccess();
    v58 = v9;
    sub_23ADE0CE4(v100, v58);
    v59 = (void *)v100[0];
    swift_endAccess();

    *(_BYTE *)(v8 + 40) = 1;
    sub_23AE206A4(v60);

    if (!v7)
      goto LABEL_116;
    return v61 & 1;
  }
  if (!a3)
  {
    swift_beginAccess();
    v52 = a5;
    v53 = *(_QWORD *)(a5 + 80);
    if (*(_QWORD *)(v53 + 16))
    {
      sub_23B1C74A8();
      sub_23B1C74B4();
      if (a2)
      {
        sub_23B1C74B4();
        if (a2 == 1)
          sub_23B1C74D8();
      }
      else
      {
        sub_23B1C74B4();
        sub_23B1C74CC();
      }
      v67 = sub_23B1C74E4();
      v68 = -1 << *(_BYTE *)(v53 + 32);
      v69 = v67 & ~v68;
      if (((*(_QWORD *)(v53 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) != 0)
      {
        v70 = ~v68;
        v71 = a1 == (void *)1 && a2 == 2;
        if (a1)
          v72 = 0;
        else
          v72 = a2 == 2;
        swift_bridgeObjectRetain();
        do
        {
          v73 = *(_QWORD *)(v53 + 48) + 16 * v69;
          if ((*(_BYTE *)(v73 + 9) & 1) == 0)
          {
            v74 = *(void **)v73;
            v75 = *(unsigned __int8 *)(v73 + 8);
            if (v75)
            {
              if (v75 == 1)
              {
                if (a2 == 1 && v74 == a1)
                  goto LABEL_79;
              }
              else if (v74)
              {
                if (v71)
                  goto LABEL_79;
              }
              else if (v72)
              {
                goto LABEL_79;
              }
            }
            else if (!a2 && (_DWORD)v74 == (_DWORD)a1)
            {
LABEL_79:
              swift_bridgeObjectRelease();
              v8 = v52;
              goto LABEL_117;
            }
          }
          v69 = (v69 + 1) & v70;
        }
        while (((*(_QWORD *)(v53 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) != 0);
        swift_bridgeObjectRelease();
      }
    }
    swift_beginAccess();
    v8 = v52;
    sub_23ADE0930((uint64_t)v100, (uint64_t)a1, a2);
    v76 = swift_endAccess();
    *(_BYTE *)(v52 + 40) = 1;
    sub_23AE206A4(v76);
    if (!v6)
      goto LABEL_117;
    return v61 & 1;
  }
  if (a4 == 3)
  {
    v54 = a5 + 48;
    swift_beginAccess();
    v55 = *(_QWORD *)(v8 + 80);
    if (!*(_QWORD *)(v55 + 16))
      goto LABEL_109;
    sub_23B1C74A8();
    sub_23B1C74B4();
    if (a2)
    {
      sub_23B1C74B4();
      if (a2 == 1)
        sub_23B1C74D8();
    }
    else
    {
      sub_23B1C74B4();
      sub_23B1C74CC();
    }
    v78 = sub_23B1C74E4();
    v79 = -1 << *(_BYTE *)(v55 + 32);
    v80 = v78 & ~v79;
    if (((*(_QWORD *)(v55 + 56 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) != 0)
    {
      v93 = v8;
      v99 = v6;
      v81 = v9;
      v82 = ~v79;
      v83 = a1 == (void *)1 && a2 == 2;
      if (a1)
        v84 = 0;
      else
        v84 = a2 == 2;
      v98 = v81;
      v85 = v81;
      swift_bridgeObjectRetain();
      do
      {
        v86 = *(_QWORD *)(v55 + 48) + 16 * v80;
        if ((*(_BYTE *)(v86 + 9) & 1) == 0)
        {
          v87 = *(void **)v86;
          v88 = *(unsigned __int8 *)(v86 + 8);
          if (v88)
          {
            if (v88 == 1)
            {
              if (a2 == 1 && v87 == a1)
                goto LABEL_106;
            }
            else if (v87)
            {
              if (v83)
                goto LABEL_106;
            }
            else if (v84)
            {
              goto LABEL_106;
            }
          }
          else if (!a2 && (_DWORD)v87 == (_DWORD)a1)
          {
LABEL_106:

            goto LABEL_107;
          }
        }
        v80 = (v80 + 1) & v82;
      }
      while (((*(_QWORD *)(v55 + 56 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) != 0);
      swift_bridgeObjectRelease();
      v9 = v98;
      v7 = v99;
      v8 = v93;
    }
    else
    {
LABEL_109:
      v89 = v9;
    }
    if (*(_QWORD *)(*(_QWORD *)v54 + 16))
    {
      sub_23AA97254((uint64_t)a1, a2);
      if ((v90 & 1) != 0)
      {

        goto LABEL_116;
      }
    }
    v65 = v7;
    sub_23AE2093C(a1, a2, a6);
LABEL_114:

    if (!v65)
      goto LABEL_116;
    return v61 & 1;
  }
  if (a4 != 4)
    goto LABEL_116;
  swift_beginAccess();
  v13 = *(_QWORD *)(v8 + 80);
  v92 = a6;
  if (!*(_QWORD *)(v13 + 16))
  {
    v57 = v9;
LABEL_51:
    if (*(_QWORD *)(*(_QWORD *)(v8 + 56) + 16))
    {
      v62 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23AA88CF8(v62);
      v64 = v63;

      if ((v64 & 1) != 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_116;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a6 = v92;
    }
    v65 = v7;
    sub_23AE20D94(v9, a6);
    goto LABEL_114;
  }
  v93 = v8;
  sub_23B1C74A8();
  sub_23B1C74B4();
  sub_23B1C63E0();
  v96 = v9;
  v14 = v9;
  swift_bridgeObjectRetain();
  sub_23B1C64A0();

  swift_bridgeObjectRelease();
  v15 = sub_23B1C74E4();
  v16 = -1 << *(_BYTE *)(v13 + 32);
  v17 = v15 & ~v16;
  v18 = v13 + 56;
  if (((*(_QWORD *)(v13 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
  {

    swift_bridgeObjectRelease();
LABEL_50:
    a6 = v92;
    v8 = v93;
    v9 = v96;
    goto LABEL_51;
  }
  v94 = v14;
  v19 = ~v16;
  while (1)
  {
    v20 = *(_QWORD *)(v13 + 48) + 16 * v17;
    if ((*(_BYTE *)(v20 + 9) & 1) == 0)
      goto LABEL_8;
    v21 = *(void **)v20;
    v22 = *(unsigned __int8 *)(v20 + 8);
    v23 = sub_23B1C63E0();
    v25 = v24;
    if (v23 == sub_23B1C63E0() && v25 == v26)
      break;
    v101 = sub_23B1C7388();
    sub_23AA88218(v21, v22, 1);
    sub_23AA88218(v21, v22, 1);
    v28 = v18;
    v29 = v19;
    v30 = v13;
    v31 = v94;
    sub_23AA88218(v21, v22, 1);

    v13 = v30;
    v19 = v29;
    v18 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23AA862DC(v21, v22, 1);
    sub_23AA862DC(v21, v22, 1);
    if ((v101 & 1) != 0)
      goto LABEL_84;
LABEL_8:
    v17 = (v17 + 1) & v19;
    if (((*(_QWORD *)(v18 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
    {

      swift_bridgeObjectRelease();
      v7 = v6;
      goto LABEL_50;
    }
  }
  sub_23AA88218(v21, v22, 1);
  sub_23AA88218(v21, v22, 1);
  v77 = v94;
  sub_23AA88218(v21, v22, 1);

  swift_bridgeObjectRelease_n();
  sub_23AA862DC(v21, v22, 1);
  sub_23AA862DC(v21, v22, 1);
LABEL_84:

LABEL_107:
  swift_bridgeObjectRelease();
  v8 = v93;
LABEL_116:
  swift_beginAccess();
LABEL_117:
  v61 = *(_BYTE *)(v8 + 88) ^ 1;
  return v61 & 1;
}

uint64_t sub_23AE2217C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t (*v28)(uint64_t, char);
  uint64_t (*v29)();
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char v35;
  id v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t (*v51)(uint64_t, char);
  uint64_t (*v52)();
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  char v59;
  uint64_t (*v60)(uint64_t, char);
  uint64_t (*v61)();
  uint64_t v62;
  id v63;
  uint64_t (*v64)(uint64_t, char);
  void (*v65)(_QWORD *);
  uint64_t v66;
  void *v67;
  double v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t result;
  char *v73;
  unint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t *v82;
  int v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, char);
  uint64_t (*v86)();
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  id v94;
  id v95;
  uint64_t (*v96)(uint64_t, char);
  void (*v97)(_QWORD *);
  uint64_t v98;
  char *v99;
  double v100;
  double v101;
  double v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t *v106;
  void *v107;
  id v108;
  uint64_t (*v109)(uint64_t, char);
  void (*v110)(_QWORD *);
  uint64_t v111;
  unint64_t v112;
  char v113;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  id v119;
  char *v120;
  NSObject *v121;
  os_log_type_t v122;
  uint8_t *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  void (**v129)(_QWORD, _QWORD);
  unsigned int v130;
  char *v131;
  void (**v132)(char *, uint64_t *);
  uint64_t *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138[4];
  _BYTE v139[32];

  v2 = sub_23B1C5E4C();
  v132 = *(void (***)(char *, uint64_t *))(v2 - 8);
  v133 = (uint64_t *)v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v131 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v134 = (char *)&v128 - v5;
  v6 = sub_23B1C5BDC();
  v7 = *(void (***)(_QWORD, _QWORD))(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t **)((char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (uint64_t **)((char *)&v128 - v15);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (void **)((char *)&v128 - v18);
  MEMORY[0x24BDAC7A8](v17);
  v20 = a1;
  v22 = (uint64_t *)((char *)&v128 - v21);
  sub_23AA8EFC8(v20, (uint64_t)&v128 - v21, (uint64_t *)&unk_2542DDFB0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0xBu:
      sub_23AA8EFC8((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_2542DDFB0);
      v23 = *v19;
      v24 = *((unsigned __int8 *)v19 + 8);
      if (*((_BYTE *)v19 + 9) == 1)
      {
        sub_23ADF1CFC(v19[2], *((unsigned __int16 *)v19 + 12));
        sub_23AA862DC(v23, v24, 1);
        goto LABEL_61;
      }
      v33 = *((unsigned __int8 *)v19 + 27);
      if (v33 != 3)
      {
        if (v33 != 4)
        {
          if (v33 != 6 || (v31 = v135, *((unsigned __int8 *)v19 + 26) - 3 >= 2))
          {
            sub_23ADF1CFC(v19[2], *((unsigned __int16 *)v19 + 12));
LABEL_61:
            sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542DDFB0);
            v31 = v135;
            goto LABEL_62;
          }
          v34 = *((unsigned __int16 *)v19 + 12);
          v7 = (void (**)(_QWORD, _QWORD))v19[2];
          sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542DDFB0);
          v6 = v136;
          v22 = (uint64_t *)(v136 + 48);
          swift_beginAccess();
          if (!*(_QWORD *)(*(_QWORD *)(v6 + 48) + 16))
            goto LABEL_94;
          sub_23AA97254((uint64_t)v23, v24);
          if ((v35 & 1) == 0)
            goto LABEL_94;
          v129 = v7;
          v36 = (id)fpfs_current_or_default_log();
          v37 = v134;
          sub_23B1C5E58();
          v38 = sub_23B1C5E40();
          v39 = sub_23B1C6A94();
          if (os_log_type_enabled(v38, v39))
          {
            v40 = swift_slowAlloc();
            v128 = v22;
            v41 = (uint8_t *)v40;
            v42 = swift_slowAlloc();
            v138[0] = v42;
            *(_DWORD *)v41 = 136315138;
            v43 = sub_23AA96F18((uint64_t)v23, v24);
            v130 = v34;
            v137 = sub_23AABEC68(v43, v44, v138);
            v31 = v135;
            sub_23B1C6CBC();
            v34 = v130;
            v7 = v129;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_23AA66000, v38, v39, "💂🏼‍♀️ stop monitoring import:disk for %s", v41, 0xCu);
            swift_arrayDestroy();
            v45 = v42;
            v6 = v136;
            MEMORY[0x23B8614BC](v45, -1, -1);
            v46 = v41;
            v22 = v128;
            MEMORY[0x23B8614BC](v46, -1, -1);

            v132[1](v134, v133);
          }
          else
          {

            v132[1](v37, v133);
            v7 = v129;
          }
          swift_beginAccess();
          v112 = sub_23AA97254((uint64_t)v23, v24);
          if ((v113 & 1) == 0)
          {
LABEL_93:
            swift_endAccess();
            *(_BYTE *)(v6 + 40) = 1;
LABEL_94:
            if (v34 >> 8 <= 0xFE)
            {
              if ((v34 & 0x100) != 0)
              {
                v116 = *(_QWORD *)(v6 + 56);
                v134 = (char *)(v6 + 56);
                if (*(_QWORD *)(v116 + 16))
                {
                  v130 = v34;
                  sub_23ADF1CE4(v7, v34);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_23AA88CF8(v7);
                  v118 = v117;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v31 = v135;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v34 = v130;
                  swift_bridgeObjectRelease();
                  sub_23ADF1CFC(v7, v34);
                  if ((v118 & 1) != 0)
                  {
                    v119 = (id)fpfs_current_or_default_log();
                    v120 = v131;
                    sub_23B1C5E58();
                    sub_23AA88218(v7, v34, 1);
                    v121 = sub_23B1C5E40();
                    v122 = sub_23B1C6A94();
                    if (os_log_type_enabled(v121, v122))
                    {
                      v123 = (uint8_t *)swift_slowAlloc();
                      v124 = swift_slowAlloc();
                      v138[0] = v124;
                      *(_DWORD *)v123 = 136315138;
                      v125 = sub_23AA7B734();
                      v137 = sub_23AABEC68(v125, v126, v138);
                      v31 = v135;
                      sub_23B1C6CBC();
                      v34 = v130;
                      swift_bridgeObjectRelease();
                      sub_23ADF1CFC(v7, v34);
                      _os_log_impl(&dword_23AA66000, v121, v122, "💂🏼‍♀️ stop monitoring import:provider for %s", v123, 0xCu);
                      swift_arrayDestroy();
                      v127 = v124;
                      v6 = v136;
                      MEMORY[0x23B8614BC](v127, -1, -1);
                      MEMORY[0x23B8614BC](v123, -1, -1);

                      v132[1](v131, v133);
                    }
                    else
                    {
                      sub_23ADF1CFC(v7, v34);

                      v132[1](v120, v133);
                    }
                    swift_beginAccess();
                    sub_23B1829E8((uint64_t)v7);
                    swift_endAccess();
                    sub_23ADF1CFC(v7, v34);
                    *(_BYTE *)(v6 + 40) = 1;
                  }
                }
              }
              sub_23ADF1CFC(v7, v34);
            }
            goto LABEL_62;
          }
          v99 = (char *)v112;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v115 = *v22;
          v137 = *v22;
          *v22 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
LABEL_92:
            sub_23B1841E4((unint64_t)v99, v115);
            *v22 = v115;
            swift_bridgeObjectRelease();
            goto LABEL_93;
          }
LABEL_110:
          sub_23B1882F8();
          v115 = v137;
          goto LABEL_92;
        }
        v73 = (char *)v19[2];
        v133 = v22;
        v134 = v73;
        v31 = *((unsigned __int16 *)v19 + 12);
        v22 = (uint64_t *)(v136 + 48);
        swift_beginAccess();
        v132 = (void (**)(char *, uint64_t *))v23;
        v74 = sub_23AA97254((uint64_t)v23, v24);
        if ((v75 & 1) == 0)
        {
LABEL_49:
          v34 = v24;
          swift_endAccess();
          v78 = v136;
          *(_BYTE *)(v136 + 40) = 1;
          if (v31 >> 8 > 0xFE)
          {
LABEL_52:
            swift_beginAccess();
            sub_23ADE0930((uint64_t)v138, (uint64_t)v132, v34);
            swift_endAccess();
            *(_BYTE *)(v78 + 40) = 1;
            sub_23ADF1CFC(v134, v31);
            v31 = v135;
            v22 = v133;
LABEL_53:
            sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542DDFB0);
            goto LABEL_62;
          }
          if ((v31 & 0x100) == 0)
          {
            sub_23ADF1CFC(v134, v31);
            v78 = v136;
            goto LABEL_52;
          }
          v99 = v134;
          sub_23B1C5BD0();
          sub_23B1C5B94();
          v101 = v100;
          ((void (**)(char *, uint64_t))v7)[1](v9, v6);
          v102 = v101 * 1000000000.0;
          if ((~COERCE__INT64(v101 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            v6 = v136;
            v22 = v133;
            if (v102 > -9.22337204e18)
            {
              if (v102 < 9.22337204e18)
              {
                v103 = v135;
                sub_23AE20D94(v99, (uint64_t)v102);
                v104 = v134;
                sub_23ADF1CFC(v134, v31);
                v105 = v31;
                v31 = v103;
                sub_23ADF1CFC(v104, v105);
                if (!v103)
                  goto LABEL_53;
                return sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542DDFB0);
              }
LABEL_109:
              __break(1u);
              goto LABEL_110;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_109;
        }
        v23 = (void *)v74;
        v76 = swift_isUniquelyReferenced_nonNull_native();
        v77 = *v22;
        v138[0] = *v22;
        *v22 = 0x8000000000000000;
        if ((v76 & 1) != 0)
        {
LABEL_48:
          sub_23B1841E4((unint64_t)v23, v77);
          *v22 = v77;
          swift_bridgeObjectRelease();
          goto LABEL_49;
        }
LABEL_106:
        sub_23B1882F8();
        v77 = v138[0];
        goto LABEL_48;
      }
      v67 = v19[2];
      v31 = *((unsigned __int16 *)v19 + 12);
      sub_23B1C5BD0();
      sub_23B1C5B94();
      v69 = v68;
      ((void (**)(char *, uint64_t))v7)[1](v9, v6);
      v70 = v69 * 1000000000.0;
      if ((~COERCE__INT64(v69 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_104;
      }
      v6 = v136;
      if (v70 <= -9.22337204e18)
      {
LABEL_104:
        __break(1u);
        goto LABEL_105;
      }
      if (v70 >= 9.22337204e18)
      {
LABEL_105:
        __break(1u);
        goto LABEL_106;
      }
      v71 = v135;
      sub_23AE2093C(v23, v24, (uint64_t)v70);
      if (v71)
      {
        sub_23ADF1CFC(v67, v31);
        return sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542DDFB0);
      }
      if (v31 >> 8 <= 0xFE)
      {
        if ((v31 & 0x100) != 0)
        {
          swift_beginAccess();
          sub_23B1829E8((uint64_t)v67);
          swift_endAccess();
          *(_BYTE *)(v6 + 40) = 1;
          sub_23ADF1CFC(v67, v31);
          goto LABEL_88;
        }
        sub_23ADF1CFC(v67, v31);
      }
      swift_beginAccess();
      sub_23ADE0930((uint64_t)v138, (uint64_t)v23, v24);
      swift_endAccess();
      *(_BYTE *)(v6 + 40) = 1;
LABEL_88:
      sub_23ADF1CFC(v67, v31);
      sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542DDFB0);
      v31 = 0;
LABEL_62:
      result = sub_23AE206A4();
      if (!v31)
        return sub_23AE1FF7C();
      return result;
    case 0x14u:
      sub_23AA8EFC8((uint64_t)v22, (uint64_t)v13, (uint64_t *)&unk_2542DDFB0);
      if ((*v13 & 0x8000000000000000) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E1BE0);
        v25 = swift_dynamicCastClass();
        if (v25)
          goto LABEL_9;
        goto LABEL_6;
      }
      __swift_instantiateConcreteTypeFromMangledName(qword_2542E68A0);
      v47 = swift_dynamicCastClass();
      if (v47)
        goto LABEL_27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
      v48 = swift_dynamicCastClass();
      if (!v48)
        goto LABEL_6;
      goto LABEL_37;
    case 0x15u:
      sub_23AA8EFC8((uint64_t)v22, (uint64_t)v16, (uint64_t *)&unk_2542DDFB0);
      if ((*v16 & 0x8000000000000000) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E68A0);
        v47 = swift_dynamicCastClass();
        if (v47)
        {
LABEL_27:
          sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542DDFB0);
          swift_beginAccess();
          v49 = *(_QWORD *)(v47 + 264);
          v50 = *(unsigned __int8 *)(v47 + 272);
          swift_release();
          if (v50 != 255)
          {
            v51 = sub_23AE232A4((uint64_t)v139);
            v52 = sub_23B148DD0(v138, v49, v50);
            v31 = v135;
            if ((*(_BYTE *)(v53 + 24) & 1) == 0)
              sub_23AD6B278();
            ((void (*)(uint64_t *, _QWORD))v52)(v138, 0);
            v51((uint64_t)v139, 0);
            goto LABEL_62;
          }
          goto LABEL_77;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6398);
        v48 = swift_dynamicCastClass();
        if (v48)
        {
LABEL_37:
          sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542DDFB0);
          v63 = *(id *)(v48 + 136);
          swift_release();
          v64 = sub_23AE232A4((uint64_t)v139);
          v65 = sub_23B148E2C(v138, v63);
          if ((*(_BYTE *)(v66 + 24) & 1) == 0)
            sub_23AD6B278();
          ((void (*)(uint64_t *, _QWORD))v65)(v138, 0);

          v64((uint64_t)v139, 0);
          v31 = v135;
          goto LABEL_62;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6330);
        v88 = swift_dynamicCastClass();
        if (v88)
        {
          v89 = v88 + *(_QWORD *)(*(_QWORD *)v88 + 592);
          swift_beginAccess();
          v90 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 48))(v89, 1, v90))
          {
            v106 = v22;
            v107 = *(void **)(v89 + 8);
            swift_retain();
            v108 = v107;
            v109 = sub_23AE232A4((uint64_t)v139);
            v110 = sub_23B148E2C(v138, v108);
            if ((*(_BYTE *)(v111 + 24) & 1) == 0)
              sub_23AD6B278();
            ((void (*)(uint64_t *, _QWORD))v110)(v138, 0);
            v109((uint64_t)v139, 0);
            swift_release_n();

            v22 = v106;
            goto LABEL_13;
          }
LABEL_67:
          swift_release();
LABEL_13:
          v32 = (uint64_t)v22;
LABEL_14:
          sub_23AA8A05C(v32, (uint64_t *)&unk_2542DDFB0);
          v31 = v135;
          goto LABEL_62;
        }
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(qword_2542E1BE0);
        v25 = swift_dynamicCastClass();
        if (v25)
        {
LABEL_9:
          sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542DDFB0);
          v26 = *(_QWORD *)(v25 + 136);
          v27 = *(_BYTE *)(v25 + 144);
          swift_release();
          v28 = sub_23AE232A4((uint64_t)v139);
          v29 = sub_23B148DD0(v138, v26, v27);
          if ((*(_BYTE *)(v30 + 24) & 1) == 0)
            sub_23AD6B278();
          ((void (*)(uint64_t *, _QWORD))v29)(v138, 0);
          v28((uint64_t)v139, 0);
          v31 = v135;
          goto LABEL_62;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60A0);
        v54 = swift_dynamicCastClass();
        if (v54)
        {
          v55 = v54 + *(_QWORD *)(*(_QWORD *)v54 + 592);
          swift_beginAccess();
          v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56))
          {
            v57 = v22;
            v58 = *(_QWORD *)(v55 + 16);
            v59 = *(_BYTE *)(v55 + 24);
            swift_retain();
            v60 = sub_23AE232A4((uint64_t)v139);
            v61 = sub_23B148DD0(v138, v58, v59);
            if ((*(_BYTE *)(v62 + 24) & 1) == 0)
              sub_23AD6B278();
            ((void (*)(uint64_t *, _QWORD))v61)(v138, 0);
            v60((uint64_t)v139, 0);
            swift_release();
            v22 = v57;
          }
          goto LABEL_67;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60F8);
        v79 = swift_dynamicCastClass();
        if (v79)
        {
          v80 = v79;
          v81 = v22;
          v82 = (uint64_t *)(v79 + 152);
          swift_beginAccess();
          v83 = *(unsigned __int8 *)(v80 + 160);
          if (v83 != 255)
          {
            v84 = *v82;
            swift_retain();
            v85 = sub_23AE232A4((uint64_t)v139);
            v86 = sub_23B148DD0(v138, v84, v83);
            if ((*(_BYTE *)(v87 + 24) & 1) == 0)
              sub_23AD6B278();
            ((void (*)(uint64_t *, _QWORD))v86)(v138, 0);
            v85((uint64_t)v139, 0);
            swift_release();
          }
          swift_release();
          v32 = (uint64_t)v81;
          goto LABEL_14;
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E5ED0);
        v91 = swift_dynamicCastClass();
        if (v91)
        {
          v92 = v91;
          sub_23AA8A05C((uint64_t)v22, (uint64_t *)&unk_2542DDFB0);
          swift_beginAccess();
          v93 = *(void **)(v92 + 224);
          v94 = v93;
          swift_release();
          if (v93)
          {
            v95 = v94;
            v96 = sub_23AE232A4((uint64_t)v139);
            v97 = sub_23B148E2C(v138, v95);
            v31 = v135;
            if ((*(_BYTE *)(v98 + 24) & 1) == 0)
              sub_23AD6B278();
            ((void (*)(uint64_t *, _QWORD))v97)(v138, 0);

            v96((uint64_t)v139, 0);
            goto LABEL_62;
          }
LABEL_77:
          v31 = v135;
          goto LABEL_62;
        }
      }
LABEL_6:
      swift_release();
      goto LABEL_61;
    case 0x27u:
      sub_23AE23E30();
      goto LABEL_13;
    default:
      goto LABEL_61;
  }
}

uint64_t (*sub_23AE232A4(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23ADB023C;
}

uint64_t sub_23AE232E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD v23[5];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char v30;

  v1 = sub_23B1C5E4C();
  v2 = *(_QWORD *)(v1 - 8);
  result = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 40) == 1)
  {
    *(_BYTE *)(v0 + 40) = 0;
    sub_23B1C57B0();
    swift_allocObject();
    v6 = sub_23B1C57A4();
    sub_23B1C578C();
    swift_beginAccess();
    v7 = *(_QWORD *)(v0 + 56);
    v8 = *(_BYTE *)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 72);
    v10 = *(_BYTE *)(v0 + 80);
    LOBYTE(v26) = *(_BYTE *)(v0 + 48);
    v27 = v7;
    v28 = v8;
    v29 = v9;
    v30 = v10;
    sub_23AEB4CE0();
    v11 = sub_23B1C5798();
    v13 = v12;
    v23[4] = v1;
    v24 = v6;
    v23[3] = v2;
    v23[1] = v23;
    v14 = *(_QWORD *)(v0 + 16);
    MEMORY[0x24BDAC7A8](*(_QWORD *)(v0 + 24));
    v22 = (_QWORD *)v13;
    v26 = 0x656372756F736572;
    v27 = 0xEA00000000002F73;
    v15 = sub_23B1C64F4();
    v16 = v27;
    MEMORY[0x24BDAC7A8](v15);
    v23[-4] = v14;
    v23[-3] = v17;
    v18 = v17;
    v21 = v16;
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AEB5954);
    v23[2] = v5;
    v19 = v14 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
    swift_beginAccess();
    v20 = MEMORY[0x24BDAC7A8](*(unsigned int *)(v19 + 12));
    v22 = &v23[-4];
    LOBYTE(v25) = 1;
    sub_23B0E1010(v20, v18, v16, 2097665, 0x180u, 0, (uint64_t)&v25, (uint64_t)sub_23AEB57D4, (uint64_t)&v23[-4]);
    result = v24;
    if ((v25 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      return sub_23AAAE53C(v11, v13);
    }
  }
  return result;
}

uint64_t sub_23AE23880()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v20[5];
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = (_QWORD *)v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 40) == 1)
  {
    *(_BYTE *)(v0 + 40) = 0;
    sub_23B1C57B0();
    swift_allocObject();
    v7 = sub_23B1C57A4();
    sub_23B1C578C();
    swift_beginAccess();
    v21 = v1[6];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6898);
    sub_23AAB5A28((unint64_t *)&unk_2569E68A0, &qword_2569E6898, (uint64_t)&unk_23B1DF420);
    v20[4] = v7;
    v8 = sub_23B1C5798();
    v10 = v9;
    v20[1] = v6;
    v20[2] = v3;
    v20[3] = v2;
    swift_bridgeObjectRelease();
    v20[0] = v20;
    v11 = v1[2];
    MEMORY[0x24BDAC7A8](v1[3]);
    v19 = (_QWORD *)v10;
    v21 = 0x656372756F736572;
    v22 = 0xEA00000000002F73;
    v12 = sub_23B1C64F4();
    v13 = v22;
    MEMORY[0x24BDAC7A8](v12);
    v20[-4] = v11;
    v20[-3] = v14;
    v15 = v14;
    v18 = v13;
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AEB5954);
    v16 = v11 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
    swift_beginAccess();
    v17 = MEMORY[0x24BDAC7A8](*(unsigned int *)(v16 + 12));
    v19 = &v20[-4];
    LOBYTE(v23) = 1;
    result = sub_23B0E1010(v17, v15, v13, 2097665, 0x180u, 0, (uint64_t)&v23, (uint64_t)sub_23AEB57D4, (uint64_t)&v20[-4]);
    if ((v23 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      return sub_23AAAE53C(v8, v10);
    }
  }
  return result;
}

uint64_t sub_23AE23E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD v25[2];
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v1 = v0;
  v2 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  if (*(_BYTE *)(v0 + 40) == 1)
  {
    v29 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    v30 = result;
    *(_BYTE *)(v0 + 40) = 0;
    sub_23B1C57B0();
    swift_allocObject();
    v6 = sub_23B1C57A4();
    sub_23B1C578C();
    swift_beginAccess();
    v7 = *(_QWORD *)(v0 + 56);
    v9 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD *)(v0 + 80);
    v11 = *(_BYTE *)(v0 + 88);
    v32 = *(_QWORD *)(v0 + 48);
    v33 = v7;
    v34 = v9;
    v35 = v8;
    v36 = v10;
    v37 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2569E64F8);
    sub_23AAB5A28((unint64_t *)&unk_2569E6500, &qword_2569E64F8, (uint64_t)&unk_23B1D7B20);
    v28 = v6;
    v12 = sub_23B1C5798();
    v14 = v13;
    v27 = v3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25[1] = v25;
    v15 = *(_QWORD *)(v1 + 16);
    MEMORY[0x24BDAC7A8](*(_QWORD *)(v1 + 24));
    v24 = v14;
    v26 = (unint64_t)v14;
    v32 = 0x656372756F736572;
    v33 = 0xEA00000000002F73;
    v16 = sub_23B1C64F4();
    v17 = v33;
    MEMORY[0x24BDAC7A8](v16);
    v25[-4] = v15;
    v25[-3] = v18;
    v19 = v18;
    v23 = v17;
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23AEB5954);
    v20 = v15 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
    swift_beginAccess();
    v21 = MEMORY[0x24BDAC7A8](*(unsigned int *)(v20 + 12));
    v24 = &v25[-4];
    LOBYTE(v31) = 1;
    result = sub_23B0E1010(v21, v19, v17, 2097665, 0x180u, 0, (uint64_t)&v31, (uint64_t)sub_23AEB57D4, (uint64_t)&v25[-4]);
    v22 = v26;
    if ((v31 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      return sub_23AAAE53C(v12, v22);
    }
  }
  return result;
}

uint64_t sub_23AE24470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  __int128 v28;
  char v29;

  v1 = sub_23B1C5E4C();
  v2 = *(_QWORD *)(v1 - 8);
  result = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 40) == 1)
  {
    *(_BYTE *)(v0 + 40) = 0;
    sub_23B1C57B0();
    swift_allocObject();
    v6 = sub_23B1C57A4();
    sub_23B1C578C();
    swift_beginAccess();
    v7 = *(_QWORD *)(v0 + 56);
    v8 = *(_BYTE *)(v0 + 64);
    v9 = *(_BYTE *)(v0 + 88);
    LOBYTE(v25) = *(_BYTE *)(v0 + 48);
    v26 = v7;
    v27 = v8;
    v28 = *(_OWORD *)(v0 + 72);
    v29 = v9;
    sub_23AEB260C();
    v10 = sub_23B1C5798();
    v12 = v11;
    v22[3] = v1;
    v23 = v6;
    v22[2] = v2;
    v22[0] = v22;
    v13 = *(_QWORD *)(v0 + 16);
    MEMORY[0x24BDAC7A8](*(_QWORD *)(v0 + 24));
    v21 = (_QWORD *)v12;
    v25 = 0x656372756F736572;
    v26 = 0xEA00000000002F73;
    v14 = sub_23B1C64F4();
    v15 = v26;
    MEMORY[0x24BDAC7A8](v14);
    v22[-4] = v13;
    v22[-3] = v16;
    v17 = v16;
    v20 = v15;
    sub_23B0E1344((_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_23ADB1194);
    v22[1] = v5;
    v18 = v13 + OBJC_IVAR____TtC9libfssync13DocumentWharf_wharfHandle;
    swift_beginAccess();
    v19 = MEMORY[0x24BDAC7A8](*(unsigned int *)(v18 + 12));
    v21 = &v22[-4];
    LOBYTE(v24) = 1;
    sub_23B0E1010(v19, v17, v15, 2097665, 0x180u, 0, (uint64_t)&v24, (uint64_t)sub_23ADB11C8, (uint64_t)&v22[-4]);
    result = v23;
    if ((v24 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      return sub_23AAAE53C(v10, v12);
    }
  }
  return result;
}

void sub_23AE24A0C(_QWORD *a1, char a2, void (*a3)(_QWORD *__return_ptr, uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Class isa;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  char v21;
  uint64_t v22;
  char v23;
  void *v24;
  id v25;
  NSObject *v26;
  id v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  os_log_t v41;
  uint64_t v42;
  uint64_t (*v43)(NSObject **);
  id v44;
  uint64_t v45;
  int v46;
  char *v47;
  NSObject *v48;
  id v49;
  NSObject *v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  os_log_t v59;
  _QWORD **v60;
  id v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  char *v66;
  id v67;
  char *v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  void *v72;
  void *v73;
  NSObject *v74;
  unsigned __int8 v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  double v80;
  double v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  double v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  double v88;
  double v89;
  double v90;
  uint64_t v91;
  char *v92;
  double v93;
  double v94;
  void (*v95)(char *, uint64_t);
  double v96;
  uint64_t v97;
  char *v98;
  double v99;
  double v100;
  double v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  char *v107;
  double v108;
  double v109;
  void (*v110)(char *, uint64_t);
  double v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char *v115;
  double v116;
  double v117;
  double v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  double v122;
  double v123;
  double v124;
  _QWORD v125[2];
  os_log_t v126;
  int v127;
  os_log_t v128;
  void *v129;
  _QWORD *v130;
  NSObject *v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  NSObject *v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  unsigned __int8 v144;
  os_log_t v145;
  unsigned __int8 v146;
  NSObject *v147;
  unsigned __int8 v148;
  _QWORD v149[62];
  _BYTE v150[496];
  _BYTE v151[496];
  _QWORD v152[62];
  _BYTE v153[496];

  v7 = sub_23B1C5BDC();
  v134 = *(_QWORD *)(v7 - 8);
  v135 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v136 = (char *)v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  MEMORY[0x24BDAC7A8](v9);
  v133 = (uint64_t)v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_23B1C5E4C();
  isa = v140[-1].isa;
  v12 = MEMORY[0x24BDAC7A8](v140);
  v137 = (char *)v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v138 = (char *)v125 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v139 = (char *)v125 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v125 - v18;
  v20 = (void *)swift_retain();
  if (objc_sync_enter(v20))
LABEL_92:
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a1);
  v21 = *((_BYTE *)a1 + qword_2542E6C88);
  if (objc_sync_exit(a1))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a1);
  v22 = swift_release();
  if ((v21 & 1) != 0)
  {
    a3(v152, v22);
    if (!v3)
    {
      sub_23AA724E8((uint64_t)v152, (uint64_t)v150, qword_2542E6E20);
      sub_23AA724E8((uint64_t)v150, (uint64_t)v151, qword_2542E6E20);
      if (sub_23AAFC2A4((uint64_t)v151) != 1)
      {
        sub_23AA724E8((uint64_t)v150, (uint64_t)v149, qword_2542E6E20);
        memcpy(v153, v149, sizeof(v153));
        v23 = v149[1];
        if (LOBYTE(v149[1]) == 255)
          goto LABEL_16;
        v24 = (void *)v149[30];
        v147 = v149[0];
        v148 = v149[1];
        if (!v149[30])
          goto LABEL_16;
        if (BYTE1(v149[17]) == 3)
        {
          v25 = objc_allocWithZone((Class)FPLoggerScope);
          v129 = v24;
          v26 = v24;
          v27 = objc_msgSend(v25, sel_init);
          v28 = (id)fpfs_current_or_default_log();
          sub_23B1C5E58();
          sub_23ADF2D34((uint64_t)v150, (voidsub_23AA88348);
          v29 = v27;
          v30 = sub_23B1C5E40();
          v31 = sub_23B1C6A94();
          v32 = v31;
          v33 = os_log_type_enabled(v30, v31);
          v132 = v29;
          if (v33)
          {
            v34 = swift_slowAlloc();
            v127 = v32;
            v35 = v34;
            v130 = (_QWORD *)swift_slowAlloc();
            v128 = (os_log_t)swift_slowAlloc();
            v145 = v128;
            *(_DWORD *)v35 = 138412546;
            v126 = v30;
            v36 = objc_msgSend(v29, sel_enter);
            v131 = v26;
            v37 = v36;
            v143 = (uint64_t)v36;
            v125[1] = &v144;
            sub_23B1C6CBC();
            *v130 = v37;

            *(_WORD *)(v35 + 12) = 2082;
            v38 = sub_23B02F54C();
            v143 = sub_23AABEC68(v38, v39, (uint64_t *)&v145);
            v26 = v131;
            sub_23B1C6CBC();
            swift_bridgeObjectRelease();
            sub_23ADF2D34((uint64_t)v150, (voidsub_23AAAEC3C);
            v30 = v126;
            _os_log_impl(&dword_23AA66000, v126, (os_log_type_t)v127, "%@ evaluating disk import status for %{public}s", (uint8_t *)v35, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
            v40 = v130;
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v40, -1, -1);
            v41 = v128;
            swift_arrayDestroy();
            MEMORY[0x23B8614BC](v41, -1, -1);
            MEMORY[0x23B8614BC](v35, -1, -1);
          }
          else
          {

            sub_23ADF2D34((uint64_t)v150, (voidsub_23AAAEC3C);
          }

          v45 = *((_QWORD *)isa + 1);
          ((void (*)(char *, NSObject *))v45)(v19, v140);
          v46 = LOBYTE(v149[42]);
          v47 = v139;
          v48 = v26;
          v49 = (id)fpfs_current_or_default_log();
          sub_23B1C5E58();
          sub_23AA724E8((uint64_t)v150, (uint64_t)&v145, qword_2542E6E20);
          sub_23ADF2D34((uint64_t)v150, (voidsub_23AA88348);
          sub_23ADF2D34((uint64_t)v150, (voidsub_23AA88348);
          sub_23ACFC940((uint64_t)&v145);
          v50 = sub_23B1C5E40();
          v51 = sub_23B1C6AAC();
          if (os_log_type_enabled(v50, (os_log_type_t)v51))
          {
            v127 = v51;
            v128 = v50;
            v130 = (_QWORD *)v45;
            v45 = swift_slowAlloc();
            v52 = swift_slowAlloc();
            v143 = v52;
            *(_DWORD *)v45 = 136446466;
            v53 = 0xED00006465747365;
            v54 = 0x7265746E49746F6ELL;
            v131 = v48;
            switch(v46)
            {
              case 0:
                goto LABEL_23;
              case 1:
                v53 = 0xEC000000676E6974;
                v54 = 0x746F687370616E73;
                goto LABEL_23;
              case 2:
                v53 = 0xE800000000000000;
                v54 = 0x676E696863746177;
LABEL_23:
                v141 = sub_23AABEC68(v54, v53, &v143);
                sub_23B1C6CBC();
                swift_bridgeObjectRelease();
                sub_23ADF2D34((uint64_t)v150, (voidsub_23AAAEC3C);
                *(_WORD *)(v45 + 12) = 2082;
                v126 = (os_log_t)(v45 + 14);
                v56 = sub_23B02F54C();
                v58 = v57;
                sub_23ADF2D34((uint64_t)v150, (voidsub_23AAAEC3C);
                v141 = sub_23AABEC68(v56, v58, &v143);
                sub_23B1C6CBC();
                swift_bridgeObjectRelease();
                sub_23ADF2D34((uint64_t)v150, (voidsub_23AAAEC3C);
                v59 = v128;
                _os_log_impl(&dword_23AA66000, v128, (os_log_type_t)v127, "👽 item content status is %{public}s instead of content:import: %{public}s", (uint8_t *)v45, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x23B8614BC](v52, -1, -1);
                MEMORY[0x23B8614BC](v45, -1, -1);

                v48 = v140;
                v45 = (uint64_t)v130;
                ((void (*)(char *, NSObject *))v130)(v139, v140);
                v50 = v131;
                break;
              default:
                break;
            }
          }
          else
          {
            sub_23ADF2D34((uint64_t)v150, (voidsub_23AAAEC3C);
            sub_23ADF2D34((uint64_t)v150, (voidsub_23AAAEC3C);
            sub_23AA724E8((uint64_t)v150, (uint64_t)&v143, qword_2542E6E20);
            sub_23AAFC3AC((uint64_t)&v143);

            v55 = v140;
            ((void (*)(char *, NSObject *))v45)(v47, v140);
            v50 = v48;
            v48 = v55;
          }
          if (LOBYTE(v149[17]) != 2)
          {
            v67 = (id)fpfs_current_or_default_log();
            v68 = v138;
            sub_23B1C5E58();
            v69 = sub_23B1C5E40();
            v70 = sub_23B1C6A94();
            if (os_log_type_enabled(v69, v70))
            {
              v71 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v71 = 0;
              _os_log_impl(&dword_23AA66000, v69, v70, "skip item not watching content", v71, 2u);
              MEMORY[0x23B8614BC](v71, -1, -1);
            }

            v66 = v68;
LABEL_33:
            ((void (*)(char *, NSObject *))v45)(v66, v48);
            v72 = v132;
            sub_23AAD2D6C(v132);

            sub_23ADF2D34((uint64_t)v150, (voidsub_23AAAEC3C);
            return;
          }
          v60 = (_QWORD **)a1[4];
          if ((((uint64_t (*)(NSObject **))(*v60)[51])(&v147) & 1) != 0)
          {
            v61 = (id)fpfs_current_or_default_log();
            v62 = v137;
            sub_23B1C5E58();
            v63 = sub_23B1C5E40();
            v64 = sub_23B1C6A94();
            if (os_log_type_enabled(v63, v64))
            {
              v65 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v65 = 0;
              _os_log_impl(&dword_23AA66000, v63, v64, "skip item with pending children", v65, 2u);
              v62 = v137;
              MEMORY[0x23B8614BC](v65, -1, -1);
            }

            v66 = v62;
            goto LABEL_33;
          }
          v73 = v132;
          v74 = v147;
          v75 = v148;
          v145 = v147;
          v146 = v148;
          if ((v149[17] & 0x10000) != 0)
          {
            v76 = ((uint64_t (*)(os_log_t *, uint64_t))(*v60)[46])(&v145, 1);
            v143 = (uint64_t)v74;
            v144 = v75;
            if ((v76 & 1) == 0)
            {
              v97 = v133;
              ((void (*)(uint64_t *, uint64_t))(*v60)[30])(&v143, 1);
              v131 = v50;
              v102 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 48))(v97, 1, v102) == 1)
              {
                sub_23AA8A05C(v133, (uint64_t *)&unk_2542E4750);
                goto LABEL_60;
              }
              v103 = v133;
              v104 = v133 + *(int *)(v102 + 48);
              LOBYTE(v104) = *(_BYTE *)(v104 + *(int *)(type metadata accessor for ItemMetadata() + 80));
              sub_23AA8A05C(v103, (uint64_t *)&unk_2542E6B00);
              if ((v104 & 1) != 0)
              {
LABEL_60:
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8190);
                v105 = swift_allocObject();
                *(_OWORD *)(v105 + 16) = xmmword_23B1D3B90;
                v106 = v129;
                *(_QWORD *)(v105 + 32) = v129;
                *(_WORD *)(v105 + 40) = 256;
                *(_OWORD *)(v105 + 48) = 0u;
                *(_OWORD *)(v105 + 64) = 0u;
                *(_OWORD *)(v105 + 80) = 0u;
                *(_OWORD *)(v105 + 96) = 0u;
                *(_WORD *)(v105 + 112) = 0;
                *(_BYTE *)(v105 + 114) = 9;
                *(_BYTE *)(v105 + 147) = 8;
                *(_QWORD *)(v105 + 152) = v106;
                *(_WORD *)(v105 + 160) = 256;
                *(_QWORD *)(v105 + 168) = 6;
                *(_OWORD *)(v105 + 176) = 0u;
                *(_OWORD *)(v105 + 192) = 0u;
                *(_OWORD *)(v105 + 208) = 0u;
                *(_OWORD *)(v105 + 224) = 0u;
                *(_OWORD *)(v105 + 240) = 0u;
                *(_OWORD *)(v105 + 250) = 0u;
                *(_WORD *)(v105 + 266) = 2314;
                *(_QWORD *)(v105 + 272) = v106;
                *(_WORD *)(v105 + 280) = 256;
                v140 = v131;
                v107 = v136;
                sub_23B1C5BD0();
                sub_23B1C5B94();
                v109 = v108;
                v110 = *(void (**)(char *, uint64_t))(v134 + 8);
                v110(v107, v135);
                v111 = v109 * 1000000000.0;
                if ((~COERCE__INT64(v109 * 1000000000.0) & 0x7FF0000000000000) != 0)
                {
                  if (v111 > -9.22337204e18)
                  {
                    if (v111 < 9.22337204e18)
                    {
                      *(_OWORD *)(v105 + 288) = xmmword_23B1D7F80;
                      *(_QWORD *)(v105 + 304) = (uint64_t)v111;
                      *(_BYTE *)(v105 + 354) = 0;
                      *(_BYTE *)(v105 + 387) = 8;
                      sub_23ADF6FF0(MEMORY[0x24BEE4AF8], v105);
                      v112 = swift_bridgeObjectRelease();
                      (*(void (**)(uint64_t *__return_ptr, uint64_t))(*v60[2] + 96))(&v141, v112);
                      v113 = v141;
                      v114 = v142;
                      v115 = v136;
                      sub_23B1C5BD0();
                      sub_23B1C5B94();
                      v117 = v116;
                      v110(v115, v135);
                      v118 = v117 * 1000000000.0;
                      if ((~COERCE__INT64(v117 * 1000000000.0) & 0x7FF0000000000000) != 0)
                      {
                        if (v118 > -9.22337204e18)
                        {
                          if (v118 < 9.22337204e18)
                          {
                            v119 = (uint64_t)v118;
                            __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60D0);
                            v120 = swift_allocObject();
                            *(_BYTE *)(v120 + 144) = v114;
                            *(_QWORD *)(v120 + 24) = 0;
                            *(_QWORD *)(v120 + 32) = 0;
                            *(_QWORD *)(v120 + 16) = 0;
                            *(_BYTE *)(v120 + 40) = 1;
                            *(_OWORD *)(v120 + 48) = 0u;
                            *(_OWORD *)(v120 + 64) = 0u;
                            *(_QWORD *)(v120 + 80) = 0;
                            *(_OWORD *)(v120 + 88) = xmmword_23B1CA770;
                            *(_BYTE *)(v120 + 104) = 0;
                            *(_QWORD *)(v120 + 112) = 0x2000000000000000;
                            *(_QWORD *)(v120 + 120) = v119;
                            *(_QWORD *)(v120 + 128) = 0x10000;
                            *(_QWORD *)(v120 + 136) = v113;
                            v121 = v136;
                            sub_23B1C5BD0();
                            sub_23B1C5B94();
                            v123 = v122;
                            v110(v121, v135);
                            v124 = v123 * 1000000000.0;
                            if ((~COERCE__INT64(v123 * 1000000000.0) & 0x7FF0000000000000) != 0)
                            {
                              if (v124 > -9.22337204e18)
                              {
                                if (v124 < 9.22337204e18)
                                {
                                  sub_23ADF3AAC(v120, (uint64_t)v124);
                                  swift_release();
                                  goto LABEL_58;
                                }
                                goto LABEL_91;
                              }
LABEL_90:
                              __break(1u);
LABEL_91:
                              __break(1u);
                              goto LABEL_92;
                            }
LABEL_89:
                            __break(1u);
                            goto LABEL_90;
                          }
LABEL_88:
                          __break(1u);
                          goto LABEL_89;
                        }
LABEL_87:
                        __break(1u);
                        goto LABEL_88;
                      }
LABEL_86:
                      __break(1u);
                      goto LABEL_87;
                    }
LABEL_85:
                    __break(1u);
                    goto LABEL_86;
                  }
LABEL_84:
                  __break(1u);
                  goto LABEL_85;
                }
LABEL_83:
                __break(1u);
                goto LABEL_84;
              }
              v50 = v131;
            }
          }
          else
          {
            v143 = (uint64_t)v147;
            v144 = v148;
          }
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2569E8190);
          v77 = swift_allocObject();
          *(_OWORD *)(v77 + 16) = xmmword_23B1CA760;
          *(_QWORD *)(v77 + 32) = v129;
          *(_WORD *)(v77 + 40) = 256;
          *(_QWORD *)(v77 + 48) = 4;
          *(_OWORD *)(v77 + 56) = 0u;
          *(_OWORD *)(v77 + 72) = 0u;
          *(_OWORD *)(v77 + 88) = 0u;
          *(_OWORD *)(v77 + 104) = 0u;
          *(_OWORD *)(v77 + 120) = 0u;
          *(_OWORD *)(v77 + 130) = 0u;
          *(_WORD *)(v77 + 146) = 2314;
          v50;
          v78 = MEMORY[0x24BEE4AF8];
          sub_23ADF6FF0(MEMORY[0x24BEE4AF8], v77);
          v131 = v50;
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDE60);
          v91 = swift_allocObject();
          *(_QWORD *)(v91 + 16) = v78;
          *(_QWORD *)(v91 + 24) = v78;
          *(_QWORD *)(v91 + 32) = v78;
          *(_QWORD *)(v91 + 40) = v78;
          *(_QWORD *)(v91 + 48) = 0;
          v92 = v136;
          sub_23B1C5BD0();
          sub_23B1C5B94();
          v94 = v93;
          v95 = *(void (**)(char *, uint64_t))(v134 + 8);
          v95(v92, v135);
          v96 = v94 * 1000000000.0;
          if ((~COERCE__INT64(v94 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v96 > -9.22337204e18)
            {
              if (v96 < 9.22337204e18)
              {
                sub_23ADF6438((uint64_t)v147, v148, 0x2000000000000000, (uint64_t)v96, 0x20000, (uint64_t)a1, 0, v91);
                v98 = v136;
                sub_23B1C5BD0();
                sub_23B1C5B94();
                v100 = v99;
                v95(v98, v135);
                v101 = v100 * 1000000000.0;
                if ((~COERCE__INT64(v100 * 1000000000.0) & 0x7FF0000000000000) != 0)
                {
                  if (v101 > -9.22337204e18)
                  {
                    if (v101 < 9.22337204e18)
                    {
                      sub_23ADF691C((_QWORD *)v91, (uint64_t)v101, (void (*)(_QWORD, _QWORD))sub_23ADF6FF0);
                      swift_setDeallocating();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();

                      swift_deallocClassInstance();
LABEL_58:
                      sub_23AAD2D6C(v73);

                      sub_23ADF2D34((uint64_t)v150, (voidsub_23AAAEC3C);
                      return;
                    }
                    goto LABEL_82;
                  }
LABEL_81:
                  __break(1u);
LABEL_82:
                  __break(1u);
                  goto LABEL_83;
                }
LABEL_80:
                __break(1u);
                goto LABEL_81;
              }
LABEL_79:
              __break(1u);
              goto LABEL_80;
            }
LABEL_78:
            __break(1u);
            goto LABEL_79;
          }
LABEL_77:
          __break(1u);
          goto LABEL_78;
        }
        if ((a2 & 1) == 0 || BYTE1(v149[17]) != 6 || !LOBYTE(v149[42]))
        {
LABEL_16:
          sub_23ADF2D34((uint64_t)v150, (voidsub_23AAAEC3C);
          return;
        }
        v42 = v149[0];
        v43 = *(uint64_t (**)(NSObject **))(*(_QWORD *)a1[4] + 408);
        v44 = (id)v149[30];
        if ((v43(&v147) & 1) != 0)
        {

          goto LABEL_16;
        }
        v140 = 0;
        v79 = v136;
        sub_23B1C5BD0();
        sub_23B1C5B94();
        v81 = v80;
        v82 = v135;
        v83 = *(void (**)(char *, uint64_t))(v134 + 8);
        v83(v79, v135);
        v84 = v81 * 1000000000.0;
        if ((~COERCE__INT64(v81 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v84 > -9.22337204e18)
          {
            if (v84 < 9.22337204e18)
            {
              v85 = (uint64_t)v84;
              __swift_instantiateConcreteTypeFromMangledName(qword_2542E1BE0);
              v86 = swift_allocObject();
              *(_BYTE *)(v86 + 144) = v23;
              *(_QWORD *)(v86 + 24) = 0;
              *(_QWORD *)(v86 + 32) = 0;
              *(_QWORD *)(v86 + 16) = 0;
              *(_BYTE *)(v86 + 40) = 1;
              *(_OWORD *)(v86 + 48) = 0u;
              *(_OWORD *)(v86 + 64) = 0u;
              *(_QWORD *)(v86 + 80) = 0;
              *(_QWORD *)(v86 + 112) = 0x2000000000000000;
              *(_QWORD *)(v86 + 120) = v85;
              *(_QWORD *)(v86 + 128) = 0x20000;
              *(_QWORD *)(v86 + 136) = v42;
              *(_OWORD *)(v86 + 88) = xmmword_23B1CA750;
              *(_BYTE *)(v86 + 104) = 0;
              sub_23AAAEE10((void *)0x40100, 0, 0);
              v87 = v136;
              sub_23B1C5BD0();
              sub_23B1C5B94();
              v89 = v88;
              v83(v87, v82);
              v90 = v89 * 1000000000.0;
              if ((~COERCE__INT64(v89 * 1000000000.0) & 0x7FF0000000000000) != 0)
              {
                if (v90 > -9.22337204e18)
                {
                  if (v90 < 9.22337204e18)
                  {
                    sub_23ADF3AAC(v86, (uint64_t)v90);

                    sub_23ADF2D34((uint64_t)v150, (voidsub_23AAAEC3C);
                    swift_release();
                    return;
                  }
                  goto LABEL_76;
                }
LABEL_75:
                __break(1u);
LABEL_76:
                __break(1u);
                goto LABEL_77;
              }
LABEL_74:
              __break(1u);
              goto LABEL_75;
            }
LABEL_73:
            __break(1u);
            goto LABEL_74;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_73;
      }
    }
  }
}

_QWORD *sub_23AE25CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  _OWORD v7[31];
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  char v11;

  v10 = a2;
  v11 = a3;
  result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t *))(**(_QWORD **)(a1 + 32) + 280))(&v8, &v10);
  if (!v4)
  {
    if (v9 == 255)
    {
      sub_23ACFC784(v7);
      return (_QWORD *)sub_23AA724E8((uint64_t)v7, (uint64_t)a4, qword_2542E6E20);
    }
    else
    {
      return sub_23AFFA330(v8, v9, a4);
    }
  }
  return result;
}

uint64_t sub_23AE25D94(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  unsigned __int8 v43;

  v9 = sub_23B1C5BDC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4750);
  result = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a1;
  v43 = a2;
  if (*(_BYTE *)(a3 + 440) != 1)
    return result;
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(**(_QWORD **)(a4 + 32) + 240))(&v42, 1);
  if (v4)
    return result;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    v19 = &v16[*(int *)(v17 + 48)];
    LOBYTE(v19) = v19[*(int *)(type metadata accessor for ItemMetadata() + 80)];
    sub_23AA8A05C((uint64_t)v16, (uint64_t *)&unk_2542E6B00);
    if ((v19 & 1) == 0)
      goto LABEL_13;
    v20 = v42;
    v41 = v43;
    sub_23B1C5BD0();
    v21 = (unint64_t)v12;
    sub_23B1C5B94();
    v23 = v22;
    v10 = *(_QWORD *)(v10 + 8);
    ((void (*)(char *, uint64_t))v10)(v12, v9);
    v24 = v23 * 1000000000.0;
    if ((~COERCE__INT64(v23 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v24 > -9.22337204e18)
      {
        v40 = v20;
        if (v24 < 9.22337204e18)
        {
          v25 = (uint64_t)v24;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60C8);
          v26 = swift_allocObject();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v26 + *(_QWORD *)(*(_QWORD *)v26 + 592), 1, 1, v17);
          *(_BYTE *)(v26 + 144) = v41;
          *(_QWORD *)(v26 + 24) = 0;
          *(_QWORD *)(v26 + 32) = 0;
          *(_QWORD *)(v26 + 16) = 0;
          *(_BYTE *)(v26 + 40) = 1;
          *(_OWORD *)(v26 + 48) = 0u;
          *(_OWORD *)(v26 + 64) = 0u;
          *(_QWORD *)(v26 + 80) = 0;
          *(_OWORD *)(v26 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v26 + 104) = 0;
          *(_QWORD *)(v26 + 112) = 0x2000000000000000;
          *(_QWORD *)(v26 + 120) = v25;
          v27 = v40;
          *(_QWORD *)(v26 + 128) = 0x10000;
          *(_QWORD *)(v26 + 136) = v27;
          sub_23B1C5BD0();
          v21 = (unint64_t)v12;
          sub_23B1C5B94();
          v29 = v28;
          ((void (*)(char *, uint64_t))v10)(v12, v9);
          v30 = v29 * 1000000000.0;
          if ((~COERCE__INT64(v29 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v30 > -9.22337204e18)
            {
              if (v30 < 9.22337204e18)
              {
                sub_23ADF3AAC(v26, (uint64_t)v30);
                return swift_release();
              }
              goto LABEL_32;
            }
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_29;
  }
  sub_23AA8A05C((uint64_t)v16, (uint64_t *)&unk_2542E4750);
LABEL_13:
  v31 = *(_QWORD *)(a4 + 24);
  sub_23AAB5630();
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_23B1CA760;
  *(_QWORD *)(v32 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60E8);
  v21 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)v31 + 272))(&v42, v32);
  result = swift_bridgeObjectRelease();
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v39 = sub_23B1C7088();
    result = swift_bridgeObjectRelease();
    if (v39)
    {
LABEL_15:
      if ((v21 & 0xC000000000000001) == 0)
      {
        if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_35;
        }
        v33 = *(_QWORD *)(v21 + 32);
        swift_retain();
        goto LABEL_18;
      }
LABEL_33:
      v33 = MEMORY[0x23B85F860](0, v21);
LABEL_18:
      swift_bridgeObjectRelease();
      if (*(_BYTE *)(v33 + 104) == 1)
      {
        v34 = *(void **)(v33 + 88);
        v35 = *(void **)(v33 + 96);
        *(_QWORD *)(v33 + 88) = 0;
        *(_QWORD *)(v33 + 96) = 0;
        *(_BYTE *)(v33 + 104) = 4;
        sub_23AAAEE10(v34, v35, 1);
        swift_retain();
        sub_23B1C5BD0();
        sub_23B1C5B94();
        v37 = v36;
        result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        v38 = v37 * 1000000000.0;
        if ((~COERCE__INT64(v37 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v38 > -9.22337204e18)
          {
            if (v38 < 9.22337204e18)
            {
              sub_23ADF3AAC(v33, (uint64_t)v38);
              return swift_release_n();
            }
            goto LABEL_37;
          }
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      return swift_release();
    }
  }
  else if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_15;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23AE26278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  char v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  int v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void **v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *(*v84)@<X0>(void *@<X8>);
  _QWORD *v85;
  id v86;
  uint64_t v87;
  char v88;
  id v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(id *__return_ptr, id *, uint64_t);
  id v99;
  void *v100;
  uint64_t v101;
  unsigned __int8 v102;
  id v103;
  char *v104;
  id v105;
  NSObject *v106;
  os_log_type_t v107;
  uint8_t *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  id v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122[3];
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void **v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD v135[63];
  id v136;
  char v137;
  char v138;
  uint64_t v139[66];
  char v140;
  _BYTE v141[504];
  id v142;
  char v143;
  id v144[373];
  _BYTE v145[496];
  _QWORD v146[62];
  _BYTE v147[504];
  uint64_t v148;

  v2 = MEMORY[0x24BDAC7A8](a1);
  v148 = v1;
  v4 = v3;
  v134 = v2;
  v5 = sub_23B1C5E4C();
  v123 = *(_QWORD *)(v5 - 8);
  v124 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v125 = (char *)v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v122[1] = (_QWORD **)((char *)v122 - v9);
  MEMORY[0x24BDAC7A8](v8);
  v122[2] = (_QWORD **)((char *)v122 - v10);
  v130 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E4760);
  v128 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v127 = (uint64_t)v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E6B00);
  v12 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  v126 = (uint64_t)v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DDFB0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v132 = (void **)((char *)v122 - v19);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v131 = (uint64_t)v122 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v122 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)v122 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)v122 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v133 = (uint64_t)v122 - v31;
  v32 = (void *)swift_retain();
  if (objc_sync_enter(v32))
    sub_23AFEFD14((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v4);
  v33 = v4[qword_2542E6C88];
  if (objc_sync_exit(v4))
    sub_23AFEFD28((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v4);
  result = swift_release();
  if ((v33 & 1) == 0)
    return result;
  v122[0] = v4;
  if (*(_QWORD *)&v4[qword_2542EDFB8])
  {
    swift_retain();
    v35 = v134;
    v36 = v148;
    sub_23AE2217C(v134);
    v148 = v36;
    if (v36)
      return swift_release();
    swift_release();
  }
  else
  {
    v35 = v134;
  }
  v37 = v133;
  sub_23AA8EFC8(v35, v133, (uint64_t *)&unk_2542DDFB0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 5u:
      sub_23AA8EFC8(v37, (uint64_t)v30, (uint64_t *)&unk_2542DDFB0);
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EB0);
      v39 = (uint64_t)&v30[*(int *)(v38 + 48)];
      v40 = *(_QWORD *)&v30[*(int *)(v38 + 64)];
      v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      v42 = v129;
      if (v41(v30, 1, v129) == 1)
      {
        sub_23AA8A05C(v39, (uint64_t *)&unk_2542E4750);
        v43 = (uint64_t)v30;
        v44 = (uint64_t *)&unk_2542E4750;
        goto LABEL_48;
      }
      if (v41((char *)v39, 1, v42) != 1)
      {
        sub_23AA8A05C((uint64_t)v30, (uint64_t *)&unk_2542E6B00);
        v44 = (uint64_t *)&unk_2542E4750;
        goto LABEL_47;
      }
      v65 = v126;
      v66 = sub_23AA724E8((uint64_t)v30, v126, (uint64_t *)&unk_2542E6B00);
      if ((v40 & 2) == 0)
      {
        v44 = (uint64_t *)&unk_2542E6B00;
        v43 = v65;
        goto LABEL_48;
      }
      MEMORY[0x24BDAC7A8](v66);
      sub_23AE24A0C(v122[0], 0, (void (*)(_QWORD *__return_ptr, uint64_t))sub_23AEB3CAC);
      sub_23AA8A05C(v65, (uint64_t *)&unk_2542E6B00);
      return sub_23AA8A05C(v133, (uint64_t *)&unk_2542DDFB0);
    case 6u:
      sub_23AA8EFC8(v37, (uint64_t)v27, (uint64_t *)&unk_2542DDFB0);
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5EA8);
      v39 = (uint64_t)&v27[*(int *)(v51 + 48)];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v27, 1, v130) == 1)
      {
        sub_23AA8A05C(v39, &qword_2542E4770);
        v43 = (uint64_t)v27;
        v44 = &qword_2542E4770;
LABEL_48:
        sub_23AA8A05C(v43, v44);
        v37 = v133;
        return sub_23AA8A05C(v37, (uint64_t *)&unk_2542DDFB0);
      }
      v67 = *(_QWORD *)&v27[*(int *)(v51 + 64)];
      v68 = v127;
      v69 = sub_23AA724E8((uint64_t)v27, v127, (uint64_t *)&unk_2542E4760);
      if ((v67 & 2) == 0)
      {
        sub_23AA8A05C(v68, (uint64_t *)&unk_2542E4760);
        v44 = &qword_2542E4770;
LABEL_47:
        v43 = v39;
        goto LABEL_48;
      }
      MEMORY[0x24BDAC7A8](v69);
      sub_23AE24A0C(v122[0], 0, (void (*)(_QWORD *__return_ptr, uint64_t))sub_23AEB3C94);
      sub_23AA8A05C(v68, (uint64_t *)&unk_2542E4760);
      sub_23AA8A05C(v39, &qword_2542E4770);
      return sub_23AA8A05C(v133, (uint64_t *)&unk_2542DDFB0);
    case 0xAu:
      v45 = v131;
      sub_23AA8EFC8(v37, v131, (uint64_t *)&unk_2542DDFB0);
      v46 = *(unsigned __int8 *)(v45 + 27);
      v47 = *(id *)v45;
      v48 = *(unsigned __int8 *)(v45 + 8);
      if (*(_BYTE *)(v45 + 9) == 1)
      {
        if (v46 == 3)
        {
          v144[0] = *(id *)v45;
          MEMORY[0x24BDAC7A8](v47);
          sub_23AE24A0C(v122[0], 0, (void (*)(_QWORD *__return_ptr, uint64_t))sub_23AEB3C78);

LABEL_32:
          sub_23ADF1CFC(*(void **)(v45 + 16), *(unsigned __int16 *)(v45 + 24));
          return sub_23AA8A05C(v133, (uint64_t *)&unk_2542DDFB0);
        }
        sub_23AA862DC(v47, v48, 1);
      }
      else if (v46 == 2)
      {
        v144[0] = *(id *)v45;
        LOBYTE(v144[1]) = v48;
        MEMORY[0x24BDAC7A8](v47);
        sub_23AE24A0C(v122[0], 0, (void (*)(_QWORD *__return_ptr, uint64_t))sub_23AEB3C38);
        goto LABEL_32;
      }
      sub_23ADF1CFC(*(void **)(v45 + 16), *(unsigned __int16 *)(v45 + 24));
      return sub_23AA8A05C(v37, (uint64_t *)&unk_2542DDFB0);
    case 0xBu:
      v52 = v132;
      v53 = sub_23AA8EFC8(v37, (uint64_t)v132, (uint64_t *)&unk_2542DDFB0);
      v54 = *v52;
      v55 = *((unsigned __int8 *)v52 + 8);
      if (*((_BYTE *)v52 + 9) != 1)
      {
        v70 = *((unsigned __int8 *)v52 + 26);
        v71 = *((unsigned __int8 *)v52 + 27);
        v144[0] = *v52;
        LOBYTE(v144[1]) = v55;
        if (v71 != 2)
        {
          v72 = v148;
          v73 = v122[0];
          if (v71 == 3)
          {
            v83 = v122[0];
            v85 = (_QWORD *)MEMORY[0x24BDAC7A8](v122[0]);
            v84 = sub_23AEB3C38;
            goto LABEL_65;
          }
          if (v71 != 6)
          {
LABEL_67:
            if (v70 != 3)
              goto LABEL_68;
            goto LABEL_62;
          }
          v74 = (*(uint64_t (**)(void))(**((_QWORD **)v122[0] + 2) + 232))();
          if (v72)
            goto LABEL_70;
          if ((v74 & 1) != 0)
          {
LABEL_42:
            v142 = v54;
            v143 = v55;
            MEMORY[0x24BDAC7A8](v74);
            v83 = v122[0];
            v84 = sub_23AEB57A8;
            v85 = v122[0];
LABEL_65:
            sub_23AE24A0C(v85, 0, (void (*)(_QWORD *__return_ptr, uint64_t))v84);
            if (v72)
              goto LABEL_70;
            v73 = v83;
            goto LABEL_67;
          }
          (*(void (**)(id *__return_ptr))(**(_QWORD **)(v122[0][4] + 16) + 96))(&v142);
          v148 = 0;
          v134 = (uint64_t)v142;
          v75 = v143;
          v76 = sub_23ADA816C();
          v78 = v77;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60D0);
          v79 = swift_allocObject();
          *(_BYTE *)(v79 + 144) = v75;
          *(_QWORD *)(v79 + 24) = 0;
          *(_QWORD *)(v79 + 32) = 0;
          *(_QWORD *)(v79 + 16) = 0;
          *(_BYTE *)(v79 + 40) = 1;
          *(_OWORD *)(v79 + 48) = 0u;
          *(_OWORD *)(v79 + 64) = 0u;
          *(_QWORD *)(v79 + 80) = 0;
          *(_OWORD *)(v79 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v79 + 104) = 0;
          *(_QWORD *)(v79 + 112) = v76;
          *(_QWORD *)(v79 + 120) = v78;
          v80 = v134;
          *(_QWORD *)(v79 + 128) = 0x20000;
          *(_QWORD *)(v79 + 136) = v80;
          v81 = sub_23AF3EA84();
          v82 = v148;
          sub_23ADF3AAC(v79, v81);
          v72 = v82;
          if (!v82)
          {
            v74 = swift_release();
            v52 = v132;
            goto LABEL_42;
          }
          swift_release();
          sub_23ADF1CFC(v132[2], *((unsigned __int16 *)v132 + 12));
          return sub_23AA8A05C(v133, (uint64_t *)&unk_2542DDFB0);
        }
        v87 = v148;
        v88 = (*(uint64_t (**)(uint64_t))(**((_QWORD **)v122[0] + 2) + 240))(v53);
        v72 = v87;
        if (v87)
          goto LABEL_70;
        if ((v88 & 1) != 0)
        {
          v73 = v122[0];
          if (v70 == 3)
          {
LABEL_62:
            (*(void (**)(id *__return_ptr))(**(_QWORD **)(v73[4] + 16) + 96))(&v142);
            v89 = v142;
            v90 = v143;
            v91 = sub_23ADA816C();
            v93 = v92;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60D0);
            v94 = swift_allocObject();
            *(_BYTE *)(v94 + 144) = v90;
            *(_QWORD *)(v94 + 24) = 0;
            *(_QWORD *)(v94 + 32) = 0;
            *(_QWORD *)(v94 + 16) = 0;
            *(_BYTE *)(v94 + 40) = 1;
            *(_OWORD *)(v94 + 48) = 0u;
            *(_OWORD *)(v94 + 64) = 0u;
            *(_QWORD *)(v94 + 80) = 0;
            *(_OWORD *)(v94 + 88) = xmmword_23B1CA770;
            *(_BYTE *)(v94 + 104) = 0;
            *(_QWORD *)(v94 + 112) = v91;
            *(_QWORD *)(v94 + 120) = v93;
            *(_QWORD *)(v94 + 128) = 0x20000;
            *(_QWORD *)(v94 + 136) = v89;
            v95 = sub_23AF3EA84();
            sub_23ADF3AAC(v94, v95);
            if (!v72)
            {
              swift_release();
              goto LABEL_73;
            }
            swift_release();
LABEL_70:
            sub_23ADF1CFC(v52[2], *((unsigned __int16 *)v52 + 12));
            return sub_23AA8A05C(v133, (uint64_t *)&unk_2542DDFB0);
          }
        }
        else
        {
          v113 = v122[0];
          (*(void (**)(id *__return_ptr))(**(_QWORD **)(v122[0][4] + 16) + 96))(&v142);
          v114 = v142;
          v115 = v143;
          v116 = sub_23ADA816C();
          v118 = v117;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2569E60D0);
          v119 = swift_allocObject();
          *(_BYTE *)(v119 + 144) = v115;
          *(_QWORD *)(v119 + 24) = 0;
          *(_QWORD *)(v119 + 32) = 0;
          *(_QWORD *)(v119 + 16) = 0;
          *(_BYTE *)(v119 + 40) = 1;
          *(_OWORD *)(v119 + 48) = 0u;
          *(_OWORD *)(v119 + 64) = 0u;
          *(_QWORD *)(v119 + 80) = 0;
          *(_OWORD *)(v119 + 88) = xmmword_23B1CA770;
          *(_BYTE *)(v119 + 104) = 0;
          *(_QWORD *)(v119 + 112) = v116;
          *(_QWORD *)(v119 + 120) = v118;
          *(_QWORD *)(v119 + 128) = 0x20000;
          *(_QWORD *)(v119 + 136) = v114;
          v120 = sub_23AF3EA84();
          sub_23ADF3AAC(v119, v120);
          swift_release();
          v73 = v113;
          v52 = v132;
          if (v70 == 3)
            goto LABEL_62;
        }
LABEL_68:
        if (!v70)
        {
          v142 = v144[0];
          v143 = (char)v144[1];
          v121 = (_QWORD *)MEMORY[0x24BDAC7A8](v73);
          sub_23AE24A0C(v121, 1, (void (*)(_QWORD *__return_ptr, uint64_t))sub_23AEB57A8);
          if (v72)
            goto LABEL_70;
        }
LABEL_73:
        v96 = v133;
        sub_23ADF1CFC(v52[2], *((unsigned __int16 *)v52 + 12));
        return sub_23AA8A05C(v96, (uint64_t *)&unk_2542DDFB0);
      }
      sub_23ADF1CFC(v52[2], *((unsigned __int16 *)v52 + 12));
      v49 = v54;
      v50 = v55;
LABEL_21:
      sub_23AA862DC(v49, v50, 1);
      return sub_23AA8A05C(v37, (uint64_t *)&unk_2542DDFB0);
    case 0xCu:
      sub_23AA8EFC8(v37, (uint64_t)v17, (uint64_t *)&unk_2542DDFB0);
      v56 = (void *)*((_QWORD *)v17 + 2);
      v57 = v17[10];
      v58 = *(id *)v17;
      v59 = v17[8];
      if (v17[9] != 1)
      {
        v139[65] = *(_QWORD *)v17;
        v140 = v59;
        __asm { BR              X9 }
      }
      if ((_DWORD)v57 != 6)
      {
        sub_23AA862DC(*(id *)v17, v17[8], 1);

        return sub_23AA8A05C(v37, (uint64_t *)&unk_2542DDFB0);
      }
      v142 = (id)*((_QWORD *)v17 + 2);
      v60 = v56;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542DE880);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v61 = v144[0];
        v62 = v144[1];
        v63 = (char)v144[2];
        v64 = v148;
        if (LOBYTE(v144[2]) <= 0xFBu)
        {

          sub_23AB7C0B0((uint64_t)v61, (uint64_t)v62, v63);
          goto LABEL_94;
        }
        sub_23AB7C0B0((uint64_t)v144[0], (uint64_t)v144[1], (char)v144[2]);
      }
      else
      {
        v64 = v148;
      }
      v139[63] = (uint64_t)v56;
      v86 = v56;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542E0950);
      if (swift_dynamicCast())
      {
        nullsub_1(v144);
        sub_23AA724E8((uint64_t)v144, (uint64_t)v141, &qword_2569E6170);
        sub_23AA724E8((uint64_t)v141, (uint64_t)&v142, &qword_2569E6170);
        if (sub_23AEB3C04((uint64_t)&v142) != 1)
        {
          sub_23AA724E8((uint64_t)v141, (uint64_t)&v136, &qword_2569E6170);
          sub_23AA724E8((uint64_t)&v136, (uint64_t)v139, (uint64_t *)&unk_2542E0950);
          if (sub_23AC050A4((uint64_t)v139) == 13)
          {

            sub_23AA862DC(v58, v59, 1);
            sub_23AA724E8((uint64_t)v144, (uint64_t)v135, &qword_2569E6170);
            sub_23AEB3CD8((uint64_t)v135, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AEB15BC);
            return sub_23AA8A05C(v133, (uint64_t *)&unk_2542DDFB0);
          }
          sub_23AEB3CD8((uint64_t)v141, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_23AEB15BC);
        }
      }
      v97 = v122[0][2];
      v136 = v58;
      v137 = v59;
      v138 = 1;
      v98 = *(void (**)(id *__return_ptr, id *, uint64_t))(*(_QWORD *)v97 + 168);
      v99 = v58;
      v98(v144, &v136, 1);
      if (v64)
      {
        sub_23AA862DC(v58, v59, 1);

        v100 = v58;
        v101 = v59;
LABEL_95:
        sub_23AA862DC(v100, v101, 1);
        return sub_23AA8A05C(v133, (uint64_t *)&unk_2542DDFB0);
      }
      sub_23AA862DC(v58, v59, 1);
      sub_23AA724E8((uint64_t)v144, (uint64_t)v141, (uint64_t *)&unk_2542E4CB0);
      sub_23AA724E8((uint64_t)v141, (uint64_t)&v142, (uint64_t *)&unk_2542E4CB0);
      if (sub_23AAFC2A4((uint64_t)&v142) == 1)
      {

LABEL_86:
        v96 = v133;
        sub_23AA862DC(v58, v59, 1);
        return sub_23AA8A05C(v96, (uint64_t *)&unk_2542DDFB0);
      }
      memcpy(v147, v144, 0x1F0uLL);
      sub_23AFFD9BC((uint64_t)v139);
      sub_23AAFC3AC((uint64_t)v147);
      memcpy(v146, v139, sizeof(v146));
      v102 = v146[26];
      if (LOBYTE(v146[26]) == 255)
      {

        sub_23AAFCF50((uint64_t)v146);
        goto LABEL_86;
      }
      if (BYTE1(v146[42]) == 4)
      {
        v132 = (void **)v56;
        v134 = v146[25];
        v103 = (id)fpfs_current_or_default_log();
        v104 = v125;
        sub_23B1C5E58();
        v105 = v99;
        v106 = sub_23B1C5E40();
        v107 = sub_23B1C6AA0();
        if (os_log_type_enabled(v106, v107))
        {
          v108 = (uint8_t *)swift_slowAlloc();
          v109 = swift_slowAlloc();
          v148 = 0;
          v131 = v109;
          v139[0] = v109;
          *(_DWORD *)v108 = 136446210;
          v130 = (uint64_t)(v108 + 4);
          v110 = sub_23AA7B734();
          v135[0] = sub_23AABEC68(v110, v111, v139);
          sub_23B1C6CBC();
          swift_bridgeObjectRelease();
          sub_23AA862DC(v58, v59, 1);
          _os_log_impl(&dword_23AA66000, v106, v107, "👽  enumerating %{public}s is throttled, unfaulting folder to allow user access", v108, 0xCu);
          v112 = v131;
          swift_arrayDestroy();
          MEMORY[0x23B8614BC](v112, -1, -1);
          MEMORY[0x23B8614BC](v108, -1, -1);

          (*(void (**)(char *, uint64_t))(v123 + 8))(v125, v124);
        }
        else
        {
          sub_23AA862DC(v58, v59, 1);

          (*(void (**)(char *, uint64_t))(v123 + 8))(v104, v124);
        }
        sub_23AFFDC50((uint64_t)v145);
        sub_23AE25D94(v134, v102, (uint64_t)v145, (uint64_t)v122[0]);

        sub_23AAFC3AC((uint64_t)v145);
      }
      else
      {

      }
      sub_23AAFCF50((uint64_t)v146);
LABEL_94:
      v100 = v58;
      v101 = v59;
      goto LABEL_95;
    case 0x11u:
      sub_23AA8EFC8(v37, (uint64_t)v24, (uint64_t *)&unk_2542DDFB0);
      v49 = *(id *)v24;
      v50 = v24[8];
      if (v24[9] == 1)
        goto LABEL_21;
      v144[0] = *(id *)v24;
      LOBYTE(v144[1]) = v50;
      MEMORY[0x24BDAC7A8](v49);
      sub_23AE24A0C(v122[0], 0, (void (*)(_QWORD *__return_ptr, uint64_t))sub_23AEB57A8);
      return sub_23AA8A05C(v133, (uint64_t *)&unk_2542DDFB0);
    default:
      return sub_23AA8A05C(v37, (uint64_t *)&unk_2542DDFB0);
  }
}

void sub_23AE28874(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  void (*v6)(_QWORD *__return_ptr, id *, uint64_t);
  id v7;
  _OWORD v8[31];
  _BYTE v9[504];
  _BYTE v10[504];
  id v11;
  __int16 v12;
  _QWORD __src[63];
  _BYTE v14[496];
  _BYTE __dst[496];

  v5 = *(_QWORD *)(a1 + 16);
  v11 = *(id *)(a2 + 8);
  v12 = 256;
  v6 = *(void (**)(_QWORD *__return_ptr, id *, uint64_t))(*(_QWORD *)v5 + 168);
  v7 = v11;
  v6(__src, &v11, 1);
  if (v3)
  {

  }
  else
  {

    sub_23AA724E8((uint64_t)__src, (uint64_t)v9, (uint64_t *)&unk_2542E4CB0);
    sub_23AA724E8((uint64_t)v9, (uint64_t)v10, (uint64_t *)&unk_2542E4CB0);
    if (sub_23AAFC2A4((uint64_t)v10) == 1)
    {
      sub_23ACFC784(v8);
      sub_23AA724E8((uint64_t)v8, a3, qword_2542E6E20);
    }
    else
    {
      memcpy(__dst, __src, sizeof(__dst));
      sub_23AFFD9BC((uint64_t)v8);
      sub_23AAFC3AC((uint64_t)__dst);
      memcpy(v14, v8, sizeof(v14));
      sub_23AFFDC50(a3);
      sub_23AAFCF50((uint64_t)v14);
      nullsub_1(a3);
    }
  }
}

uint64_t sub_23AE289A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  void (*v5)(uint64_t *__return_ptr, char *);
  void (*v6)(uint64_t *__return_ptr, char *);
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  int v24;
  uint64_t v25;

  BYTE2(v25) = 1;
  v4 = *a1;
  v5 = (void (*)(uint64_t *__return_ptr, char *))a1[1];
  v6 = (void (*)(uint64_t *__return_ptr, char *))a1[3];
  v6((uint64_t *)((char *)&v25 + 1), (char *)&v25 + 2);
  v5(&v25, (char *)&v25 + 1);
  result = sub_23AAACAE4(v25, v4, sub_23AAA15E8, (void (*)(uint64_t))sub_23AD824BC, &v23);
  if (!v2)
  {
    v8 = v23;
    LOBYTE(v23) = 2;
    v6((uint64_t *)((char *)&v25 + 2), (char *)&v23);
    v5((uint64_t *)((char *)&v25 + 1), (char *)&v25 + 2);
    v9 = sub_23AAAA254(BYTE1(v25), v4, (uint64_t *)&unk_2542E5630, 0xD000000000000026, 0x800000023B205D20);
    if ((v10 & 1) != 0
      || (v11 = v9,
          LOBYTE(v23) = 3,
          v6((uint64_t *)((char *)&v25 + 2), (char *)&v23),
          v5((uint64_t *)((char *)&v25 + 1), (char *)&v25 + 2),
          v12 = sub_23AAAA254(BYTE1(v25), v4, (uint64_t *)&unk_2542E5630, 0xD000000000000026, 0x800000023B205D20),
          (v13 & 1) != 0))
    {
      v11 = 0;
      v21 = 0;
      v24 = 1;
    }
    else
    {
      v21 = v12;
      v24 = 0;
    }
    LOBYTE(v23) = 4;
    v6((uint64_t *)((char *)&v25 + 2), (char *)&v23);
    v5((uint64_t *)((char *)&v25 + 1), (char *)&v25 + 2);
    v14 = sub_23AAAA254(BYTE1(v25), v4, &qword_2569E5548, 0xD000000000000025, 0x800000023B205CF0);
    if ((v15 & 1) != 0)
      v16 = 0;
    else
      v16 = v14;
    v17 = *((_QWORD *)&v8 + 1);
    if (*((_QWORD *)&v8 + 1) >> 60 == 15)
    {
      v22 = v16;
      LOBYTE(v23) = 0;
      v6((uint64_t *)((char *)&v25 + 2), (char *)&v23);
      v5((uint64_t *)((char *)&v25 + 1), (char *)&v25 + 2);
      result = sub_23AE76EA8(BYTE1(v25), v4);
      v18 = 0;
      v17 = 0xF000000000000000;
      v19 = v21;
      v20 = v24;
      v16 = v22;
    }
    else
    {
      result = 0;
      v19 = v21;
      v18 = v8;
      v20 = v24;
    }
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v18;
    *(_QWORD *)(a2 + 16) = v17;
    *(_QWORD *)(a2 + 24) = v11;
    *(_QWORD *)(a2 + 32) = v19;
    *(_BYTE *)(a2 + 40) = v20;
    *(_QWORD *)(a2 + 48) = v16;
  }
  return result;
}

void sub_23AE28C58(char a1)
{
  __asm { BR              X10 }
}

uint64_t *sub_23AE28CA4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  id v9;
  uint64_t *v10;
  _BYTE v12[256];
  uint64_t v13;

  sub_23AA724E8(v1 + 168, (uint64_t)v12, qword_2542E48C0);
  sub_23AA724E8((uint64_t)v12, v6 - 120, qword_2542E48C0);
  if (*(_QWORD *)(v4 + 280) >> 60 == 11)
  {
    v9 = objc_msgSend(v2, sel_bindObjectParameter_, 0);
    v10 = (uint64_t *)sub_23B1C63E0();

  }
  else
  {
    v7 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)v4 = *(_OWORD *)v5;
    *(_OWORD *)(v4 + 16) = v7;
    *(_OWORD *)(v4 + 32) = *(_OWORD *)(v5 + 32);
    *(_QWORD *)(v4 + 48) = *(_QWORD *)(v5 + 48);
    v10 = &v13;
    sub_23AD7F9A4(v3);
    if (!v0)
      return (uint64_t *)v8;
  }
  return v10;
}

void sub_23AE29230(char a1)
{
  uint64_t v2;

  v2 = sub_23B1C6428();
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

uint64_t sub_23AE292B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  sub_23AA724E8(v1 + 128, v0 + 64, qword_2542E48C0);
  sub_23AA724E8(v0 + 64, v6 - 152, qword_2542E48C0);
  if (*(_QWORD *)(v6 - 136) >> 60 == 11)
  {
    v9 = objc_msgSend(v3, sel_bindObjectParameter_, 0);
    v10 = sub_23B1C63E0();

  }
  else
  {
    v7 = v5[1];
    *(_OWORD *)(v0 + 576) = *v5;
    *(_OWORD *)(v0 + 592) = v7;
    *(_OWORD *)(v0 + 608) = v5[2];
    *(_QWORD *)(v0 + 624) = *(_QWORD *)(v6 - 104);
    v10 = v0 + 576;
    sub_23AD7F9A4(v4);
    if (!v2)
      return v8;
  }
  return v10;
}

uint64_t sub_23AE29C98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE *v6;

  v4 = sub_23AE76908(0, a1, MEMORY[0x24BEE1768], 0xD00000000000001ALL, 0x800000023B205B00);
  if (!v2)
  {
    v1 = 1;
    switch(v4)
    {
      case 0:
        v1 = sub_23AE76908(1u, a1, (uint64_t)&type metadata for JobWaitCondition, 0xD000000000000027, 0x800000023B205AA0);
        sub_23AE766E8(2u, a1);
        break;
      case 1:
      case 2:
        v1 = sub_23AE766E8(2u, a1);
        break;
      case 3:
        sub_23AEB1308();
        v1 = swift_allocError();
        break;
      case 4:
        return v1;
      case 5:
        v1 = 0;
        break;
      default:
        sub_23AB7B620();
        swift_allocError();
        *v6 = 0;
        swift_willThrow();
        break;
    }
  }
  return v1;
}

uint64_t sub_23AE29E4C(uint64_t a1, void (*a2)(uint64_t *__return_ptr, char *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;

  BYTE1(v10) = 0;
  a2(&v10, (char *)&v10 + 1);
  v6 = sub_23AE77410(v10, a1);
  if (!v2)
  {
    v3 = 1;
    switch(v6)
    {
      case 0:
        BYTE3(v9) = 1;
        ((void (*)(uint64_t *__return_ptr, char *, _QWORD))a2)((uint64_t *)((char *)&v9 + 2), (char *)&v9 + 3, 0);
        v3 = sub_23AE77248(BYTE2(v9), a1);
        BYTE1(v9) = 2;
        a2(&v9, (char *)&v9 + 1);
        sub_23AE77070(v9, a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
        break;
      case 1:
        BYTE5(v9) = 2;
        ((void (*)(uint64_t *__return_ptr, char *, _QWORD))a2)((uint64_t *)((char *)&v9 + 4), (char *)&v9 + 5, 0);
        v3 = sub_23AE77070(BYTE4(v9), a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
        break;
      case 2:
        HIBYTE(v9) = 2;
        ((void (*)(uint64_t *__return_ptr, char *, _QWORD))a2)((uint64_t *)((char *)&v9 + 6), (char *)&v9 + 7, 0);
        v3 = sub_23AE77070(BYTE6(v9), a1, sub_23ACD5F8C, (void (*)(uint64_t))sub_23B06D430);
        break;
      case 3:
        sub_23AEB1308();
        v3 = swift_allocError();
        break;
      case 4:
        return v3;
      case 5:
        v3 = 0;
        break;
      default:
        sub_23AB7B620();
        swift_allocError();
        *v8 = 0;
        swift_willThrow();
        break;
    }
  }
  return v3;
}

void sub_23AE2A060(int a1)
{
  __asm { BR              X10 }
}

_OWORD *sub_23AE2A09C(char a1)
{
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  uint64_t v11;
  _OWORD v13[32];

  v3 = v2[13];
  v13[12] = v2[12];
  v13[13] = v3;
  v13[14] = v2[14];
  v4 = v2[9];
  v13[8] = v2[8];
  v13[9] = v4;
  v5 = v2[11];
  v13[10] = v2[10];
  v13[11] = v5;
  v6 = v2[5];
  v13[4] = v2[4];
  v13[5] = v6;
  v7 = v2[7];
  v13[6] = v2[6];
  v13[7] = v7;
  v8 = v2[1];
  v13[0] = *v2;
  v13[1] = v8;
  v9 = v2[3];
  v13[2] = v2[2];
  v13[3] = v9;
  v10 = v13;
  sub_23AE28C58(a1);
  if (!v1)
    return (_OWORD *)v11;
  return v10;
}

uint64_t sub_23AE2A33C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t (*v12)(void);
  id v13;
  uint64_t v14;
  unsigned __int8 v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned __int8 v18;
  _QWORD *v19;
  id v20;
  char v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  _QWORD **v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (((*(uint64_t (**)(void))(*(_QWORD *)a2 + 152))() & 0x4000) == 0)
    goto LABEL_5;
  v5 = *(void **)a1;
  if (!*(_QWORD *)a1)
    goto LABEL_5;
  v6 = *(unsigned __int8 *)(a1 + 208);
  if ((_DWORD)v6 == 255)
    goto LABEL_5;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 216);
  if (((v7 | v8) & 0x80) == 0)
    goto LABEL_5;
  v11 = *(_QWORD *)(a1 + 200);
  if ((v7 & 0x80) != 0 && (*(_BYTE *)(*(_QWORD *)(a2 + 32) + 32) & 1) == 0 && (v7 & 9) != 0)
  {
    v12 = *(uint64_t (**)(void))(*(_QWORD *)a2 + 176);
    v13 = v5;
    v14 = v12();
    v15 = sub_23AE2A840(v11, v6, v14);
    if (v2)
    {

      swift_release();
      return v9 & 1;
    }
    v17 = v11;
    v18 = v15;
    v19 = v16;
    v29 = v17;
    swift_release();
    if ((v18 & 1) != 0)
    {
      if (v19)
      {
        swift_retain();
        sub_23AE89D84((_QWORD **)a2, v29, v6, v19);
        sub_23AE8A198(a2, v13, v29, v6);

LABEL_28:
        swift_release_n();
        v9 = 1;
        return v9 & 1;
      }

    }
    else
    {

      swift_release();
    }
    v11 = v29;
  }
  v9 = 0;
  if ((*(_BYTE *)(*(_QWORD *)(a2 + 40) + 32) & 1) == 0 && (v8 & 0x80) != 0 && (v8 & 9) != 0)
  {
    v20 = v5;
    v21 = sub_23AE2ACE0(v20, a2);
    if (v2)
    {

      return v9 & 1;
    }
    v23 = v22;
    if ((v21 & 1) != 0)
    {
      if (v22)
      {
        v24 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 176);
        v25 = swift_retain();
        v26 = (_QWORD **)v24(v25);
        sub_23AE89F90(v26, v20, v23);
        v27 = swift_release();
        v28 = v24(v27);
        sub_23AE8A814(v28, v11, v6, v20);

        swift_release();
        goto LABEL_28;
      }

    }
    else
    {

      swift_release();
    }
LABEL_5:
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_23AE2A5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t (*v12)(void);
  id v13;
  uint64_t v14;
  char v15;
  _QWORD *v16;
  char v17;
  _QWORD *v18;
  id v19;
  unsigned __int8 v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  _QWORD **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (((*(uint64_t (**)(void))(*(_QWORD *)a2 + 152))() & 0x4000) == 0)
    goto LABEL_5;
  v5 = *(unsigned __int8 *)(a1 + 8);
  if ((_DWORD)v5 == 255)
    goto LABEL_5;
  v6 = *(void **)(a1 + 240);
  if (!v6)
    goto LABEL_5;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 248);
  if (((v7 | v8) & 0x80) == 0)
    goto LABEL_5;
  v11 = *(_QWORD *)a1;
  if ((v7 & 0x80) != 0 && (*(_BYTE *)(*(_QWORD *)(a2 + 32) + 32) & 1) == 0 && (v7 & 9) != 0)
  {
    v28 = *(_QWORD *)a1;
    v12 = *(uint64_t (**)(void))(*(_QWORD *)a2 + 176);
    v13 = v6;
    v14 = v12();
    v15 = sub_23AE2ACE0(v13, v14);
    if (v2)
    {

      swift_release();
      return v9 & 1;
    }
    v17 = v15;
    v18 = v16;
    swift_release();
    if ((v17 & 1) != 0)
    {
      if (v18)
      {
        swift_retain();
        sub_23AE89F90((_QWORD **)a2, v13, v18);
        sub_23AE8A814(a2, v28, v5, v13);

LABEL_28:
        swift_release_n();
        v9 = 1;
        return v9 & 1;
      }

    }
    else
    {

      swift_release();
    }
    v11 = v28;
  }
  v9 = 0;
  if ((*(_BYTE *)(*(_QWORD *)(a2 + 40) + 32) & 1) == 0 && (v8 & 0x80) != 0 && (v8 & 9) != 0)
  {
    v19 = v6;
    v20 = sub_23AE2A840(v11, v5, a2);
    if (v2)
    {

      return v9 & 1;
    }
    v22 = v21;
    if ((v20 & 1) != 0)
    {
      if (v21)
      {
        v23 = *(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 176);
        v24 = swift_retain();
        v25 = (_QWORD **)v23(v24);
        sub_23AE89D84(v25, v11, v5, v22);
        v26 = swift_release();
        v27 = v23(v26);
        sub_23AE8A198(v27, v19, v11, v5);

        swift_release();
        goto LABEL_28;
      }

    }
    else
    {

      swift_release();
    }
LABEL_5:
    v9 = 0;
  }
  return v9 & 1;
}

_QWORD *sub_23AE2A840(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t (*v35)(uint64_t *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  unsigned __int8 v40;
  _QWORD v41[62];
  _BYTE v42[504];
  _BYTE v43[504];
  uint64_t v44;
  unsigned __int8 v45;
  char v46;
  _QWORD v47[64];
  uint64_t v48;

  v7 = sub_23B1C5E4C();
  v36 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 152))(v8) & 0x4000) == 0)
    goto LABEL_2;
  v12 = *(_QWORD *)(a3 + 16);
  v44 = a1;
  v45 = a2;
  v46 = 0;
  (*(void (**)(_QWORD *__return_ptr, uint64_t *, uint64_t))(*(_QWORD *)v12 + 168))(v47, &v44, 1);
  if (v3)
    return (_QWORD *)(v11 & 1);
  sub_23AA724E8((uint64_t)v47, (uint64_t)v42, (uint64_t *)&unk_2542E4CB0);
  sub_23AA724E8((uint64_t)v42, (uint64_t)v43, (uint64_t *)&unk_2542E4CB0);
  if (sub_23AAFC2A4((uint64_t)v43) == 1)
  {
LABEL_2:
    v11 = 0;
    return (_QWORD *)(v11 & 1);
  }
  memcpy(v41, v47, sizeof(v41));
  v39 = a1;
  v40 = a2;
  v14 = 1;
  v48 = 1;
  v15 = *(_QWORD *)(a3 + 24);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E5F98);
  v35 = *(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)v15 + 272);
  swift_beginAccess();
  *(_QWORD *)&v17 = 134217984;
  v32 = v17;
  v34 = xmmword_23B1CA760;
  v33 = v15;
  while (1)
  {
    if (__ROR8__(0x1CAC083126E978D5 * v14 + 0x10624DD2F1A9FB8, 3) <= 0x4189374BC6A7EEuLL)
    {
      v18 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v19 = sub_23B1C5E40();
      v20 = sub_23B1C6AA0();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = v16;
        v22 = swift_slowAlloc();
        *(_DWORD *)v22 = v32;
        *(_QWORD *)(v22 + 4) = v48;
        _os_log_impl(&dword_23AA66000, v19, v20, "wasDeletionAcked: too many iterations %ld, is there a cycle in the tree?", (uint8_t *)v22, 0xCu);
        v23 = v22;
        v16 = v21;
        MEMORY[0x23B8614BC](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v7);
    }
    sub_23AAB5630();
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v34;
    *(_QWORD *)(v24 + 32) = v16;
    v25 = v35(&v39, v24);
    result = (_QWORD *)swift_bridgeObjectRelease();
    if (v25 >> 62)
      break;
    v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v26)
      goto LABEL_31;
LABEL_13:
    swift_bridgeObjectRelease();
    result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t *))(**(_QWORD **)(a3 + 32) + 280))(&v37, &v39);
    if (v38 == 255)
      goto LABEL_42;
    if (v38)
    {
      if (v38 == 1)
      {
        if (v40 == 1 && v37 == v39)
          goto LABEL_42;
      }
      else if (v37)
      {
        if (v40 == 2 && v39 == 1)
          goto LABEL_42;
      }
      else if (v40 == 2 && !v39)
      {
        goto LABEL_42;
      }
    }
    else if (!v40 && (_DWORD)v37 == (_DWORD)v39)
    {
LABEL_42:
      sub_23AAFC3AC((uint64_t)v41);
      goto LABEL_2;
    }
    v39 = v37;
    v40 = v38;
    v14 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    ++v48;
  }
  swift_bridgeObjectRetain();
  v26 = sub_23B1C7088();
  result = (_QWORD *)swift_bridgeObjectRelease();
  if (!v26)
    goto LABEL_13;
LABEL_31:
  v27 = v41[58];
  if ((v25 & 0xC000000000000001) != 0)
  {
    v28 = 0;
    while (1)
    {
      result = (_QWORD *)MEMORY[0x23B85F860](v28, v25);
      v29 = v28 + 1;
      if (__OFADD__(v28, 1))
        goto LABEL_46;
      if (result[15] >= v27)
        goto LABEL_44;
      swift_unknownObjectRelease();
      ++v28;
      if (v29 == v26)
        goto LABEL_41;
    }
  }
  v30 = 0;
  while (1)
  {
    v31 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (*(_QWORD *)(*(_QWORD *)(v25 + 8 * v30 + 32) + 120) >= v41[58])
    {
      swift_retain();
LABEL_44:
      swift_bridgeObjectRelease();
      sub_23AAFC3AC((uint64_t)v41);
      v11 = 1;
      return (_QWORD *)(v11 & 1);
    }
    ++v30;
    if (v31 == v26)
    {
LABEL_41:
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_23AE2ACE0(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  void (*v12)(_QWORD *__return_ptr, void **, uint64_t);
  id v13;
  uint64_t result;
  uint64_t v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  char *v41;
  uint64_t i;
  __int128 v43;
  uint64_t (*v44)(id *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD v49[62];
  _BYTE v50[504];
  _BYTE v51[504];
  void *v52;
  __int16 v53;
  _QWORD v54[64];
  id v55;

  v5 = sub_23B1C5E4C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 152))(v7) & 0x4000) == 0)
    goto LABEL_2;
  v11 = *(_QWORD *)(a2 + 16);
  v52 = a1;
  v53 = 0;
  v12 = *(void (**)(_QWORD *__return_ptr, void **, uint64_t))(*(_QWORD *)v11 + 168);
  v13 = a1;
  v12(v54, &v52, 1);
  if (v2)
  {

    return v10 & 1;
  }

  sub_23AA724E8((uint64_t)v54, (uint64_t)v50, &qword_2569E6458);
  sub_23AA724E8((uint64_t)v50, (uint64_t)v51, &qword_2569E6458);
  if (sub_23AAFC2A4((uint64_t)v51) == 1)
  {
LABEL_2:
    v10 = 0;
    return v10 & 1;
  }
  memcpy(v49, v54, sizeof(v49));
  v55 = v13;
  v15 = 1;
  v48 = 1;
  v16 = v13;
  v17 = *(_QWORD *)(a2 + 24);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2569E6228);
  v46 = v17;
  v44 = *(uint64_t (**)(id *, uint64_t))(*(_QWORD *)v17 + 272);
  swift_beginAccess();
  *(_QWORD *)&v18 = 134217984;
  v40 = v18;
  v43 = xmmword_23B1CA760;
  v41 = v9;
  for (i = a2; ; a2 = i)
  {
    if (__ROR8__(0x1CAC083126E978D5 * v15 + 0x10624DD2F1A9FB8, 3) <= 0x4189374BC6A7EEuLL)
    {
      v19 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v20 = sub_23B1C5E40();
      v21 = sub_23B1C6AA0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        *(_DWORD *)v22 = v40;
        *(_QWORD *)(v22 + 4) = v48;
        _os_log_impl(&dword_23AA66000, v20, v21, "wasDeletionAcked: too many iterations %ld, is there a cycle in the tree?", (uint8_t *)v22, 0xCu);
        MEMORY[0x23B8614BC](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    sub_23AEA49E8();
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = v43;
    *(_QWORD *)(v23 + 32) = v45;
    v24 = v44(&v55, v23);
    result = swift_bridgeObjectRelease();
    if (v24 >> 62)
      break;
    v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v25)
      goto LABEL_21;
LABEL_14:
    swift_bridgeObjectRelease();
    (*(void (**)(void **__return_ptr, id *))(**(_QWORD **)(a2 + 32) + 280))(&v47, &v55);
    v26 = v47;
    if (!v47)
    {
LABEL_34:

      goto LABEL_35;
    }
    v27 = v6;
    v28 = v5;
    v29 = v55;
    v30 = sub_23B1C63E0();
    v32 = v31;
    if (v30 == sub_23B1C63E0() && v32 == v33)
    {

      swift_bridgeObjectRelease_n();
LABEL_35:
      sub_23AAFCF50((uint64_t)v49);
      goto LABEL_2;
    }
    v34 = sub_23B1C7388();

    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v34 & 1) != 0)
    {

      goto LABEL_35;
    }
    v55 = v26;
    v15 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    ++v48;
    v5 = v28;
    v6 = v27;
    v9 = v41;
  }
  swift_bridgeObjectRetain();
  v25 = sub_23B1C7088();
  result = swift_bridgeObjectRelease();
  if (!v25)
    goto LABEL_14;
LABEL_21:
  v35 = v49[58];
  if ((v24 & 0xC000000000000001) != 0)
  {
    v36 = 0;
    while (1)
    {
      result = MEMORY[0x23B85F860](v36, v24);
      v37 = v36 + 1;
      if (__OFADD__(v36, 1))
        goto LABEL_39;
      if (*(_QWORD *)(result + 120) >= v35)
        goto LABEL_37;
      swift_unknownObjectRelease();
      ++v36;
      if (v37 == v25)
        goto LABEL_33;
    }
  }
  v38 = 0;
  while (1)
  {
    v39 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (*(_QWORD *)(*(_QWORD *)(v24 + 8 * v38 + 32) + 120) >= v49[58])
    {
      swift_retain();
LABEL_37:
      swift_bridgeObjectRelease();

      sub_23AAFCF50((uint64_t)v49);
      v10 = 1;
      return v10 & 1;
    }
    ++v38;
    if (v39 == v25)
    {
LABEL_33:
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_23AE2B1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  _QWORD *v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  _QWORD *v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  char *v33;
  NSObject *v34;
  NSObject *v35;
  os_log_type_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint8_t *v39;
  NSObject *v40;
  _QWORD *v41;
  id v42;
  _QWORD *v43;
  uint8_t *v44;
  id v45;
  id v46;
  NSObject *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint8_t *v51;
  _QWORD *v52;
  id v53;
  uint8_t *v54;
  _QWORD *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  void (*v61)(const char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t (*)(), uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t (*)(), uint64_t);
  __int128 *v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  void (*v73)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t (*)(), uint64_t);
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t (*)(), uint64_t);
  __int128 *v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  void *v81;
  NSObject *v82;
  uint64_t v83;
  _QWORD *v84;
  uint8_t *v85;
  NSObject *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  _OWORD v91[8];
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  _BYTE v101[24];
  _BYTE v102[24];
  char v103[24];
  char v104[32];
  uint64_t v105;

  v2 = v1;
  v90 = sub_23B1C5E4C();
  v3 = *(_QWORD *)(v90 - 8);
  v4 = MEMORY[0x24BDAC7A8](v90);
  v88 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v89 = (char *)&v83 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v83 - v8;
  v10 = sub_23B1C60EC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v0 + 64);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BEE5610], v10);
  v15 = v14;
  LOBYTE(v14) = sub_23B1C6104();
  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    return;
  }
  if ((*(_BYTE *)(v0 + 80) & 0x40) == 0)
  {
    v16 = (_QWORD *)v0;
    if ((fp_task_tracker_is_cancelled(*(void **)(*(_QWORD *)(v0 + 168) + 16)) & 1) != 0
      || (*(_BYTE *)(v0 + 152) & 1) != 0)
    {
      sub_23AD2C7F8();
      swift_allocError();
      swift_willThrow();
      return;
    }
    v17 = *(void **)(v0 + qword_2542EDF90);
    swift_retain();
    sub_23B0DBFEC(v17, v0, (uint64_t)v91);
    v87 = v2;
    v96 = v91[0];
    v97 = v91[1];
    v98 = v91[2];
    v99 = v91[3];
    v92 = v91[4];
    v93 = v91[5];
    v94 = v91[6];
    v95 = v91[7];
    v18 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
    v19 = (id)fpfs_current_or_default_log();
    sub_23B1C5E58();
    v20 = v18;
    v21 = sub_23B1C5E40();
    v22 = sub_23B1C6A94();
    if (os_log_type_enabled(v21, v22))
    {
      v85 = (uint8_t *)v0;
      v23 = (uint8_t *)swift_slowAlloc();
      v84 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      v24 = -[NSObject enter](v20, sel_enter, v23 + 4);
      *(_QWORD *)&v91[0] = v24;
      sub_23B1C6CBC();
      v25 = v84;
      *v84 = v24;
      v16 = v85;

      _os_log_impl(&dword_23AA66000, v21, v22, "%@ 👁  processing ingestion", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
      swift_arrayDestroy();
      MEMORY[0x23B8614BC](v25, -1, -1);
      MEMORY[0x23B8614BC](v23, -1, -1);
    }
    else
    {

      v21 = v20;
    }

    v26 = *(void (**)(char *, uint64_t))(v3 + 8);
    v27 = v9;
    v28 = v90;
    v26(v27, v90);
    v29 = *(_QWORD *)(v96 + 16);
    v86 = v20;
    if (v29
      || (sub_23AA724E8((uint64_t)&v97, (uint64_t)v101, (uint64_t *)&unk_2542E1F10),
          sub_23AA724E8((uint64_t)v101, (uint64_t)v104, (uint64_t *)&unk_2542E1F10),
          v104[0] != 2)
      || (BYTE1(v99) & 1) != 0
      || (v99 & 1) != 0
      || (BYTE2(v99) & 1) != 0)
    {
      v31 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
      v32 = (id)fpfs_current_or_default_log();
      v33 = v89;
      sub_23B1C5E58();
      v34 = v31;
      v35 = sub_23B1C5E40();
      v36 = sub_23B1C6A88();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = v16;
        v38 = swift_slowAlloc();
        v84 = v26;
        v39 = (uint8_t *)v38;
        v40 = v34;
        v41 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v39 = 138412290;
        v85 = v39 + 4;
        v42 = -[NSObject enter](v40, sel_enter);
        *(_QWORD *)&v91[0] = v42;
        sub_23B1C6CBC();
        *v41 = v42;
        v16 = v37;
        v33 = v89;

        _os_log_impl(&dword_23AA66000, v35, v36, "%@ 👁  processing FS tree changes", v39, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        v43 = v41;
        v34 = v40;
        v28 = v90;
        MEMORY[0x23B8614BC](v43, -1, -1);
        v44 = v39;
        v26 = (void (*)(char *, uint64_t))v84;
        MEMORY[0x23B8614BC](v44, -1, -1);
      }
      else
      {

        v35 = v34;
      }
      v30 = v87;

      v26(v33, v28);
      sub_23AE668F8(v16);
      if (v30)
      {
        sub_23ADF25B8((uint64_t)&v92);
        sub_23ADF25B8((uint64_t)&v96);
        sub_23AFC45E8(v34);

LABEL_44:
        v82 = v86;
        sub_23AFC09DC(v86);

        return;
      }
      *((_BYTE *)v16 + qword_256A079D0) = v99;
      sub_23AFC45E8(v34);

    }
    else
    {
      v30 = v87;
    }
    if (*(_QWORD *)(v92 + 16)
      || (sub_23AA724E8((uint64_t)&v93, (uint64_t)v102, &qword_2542DE710),
          sub_23AA724E8((uint64_t)v102, (uint64_t)v103, &qword_2542DE710),
          v103[0] != 2)
      || (BYTE1(v95) & 1) != 0
      || (v95 & 1) != 0
      || (BYTE2(v95) & 1) != 0)
    {
      v45 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
      v46 = (id)fpfs_current_or_default_log();
      sub_23B1C5E58();
      v47 = v45;
      v48 = sub_23B1C5E40();
      v49 = sub_23B1C6A88();
      if (os_log_type_enabled(v48, v49))
      {
        v85 = (uint8_t *)v16;
        v50 = swift_slowAlloc();
        v84 = v26;
        v51 = (uint8_t *)v50;
        v52 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v51 = 138412290;
        v89 = (char *)(v51 + 4);
        v53 = -[NSObject enter](v47, sel_enter);
        *(_QWORD *)&v91[0] = v53;
        sub_23B1C6CBC();
        *v52 = v53;
        v16 = v85;

        _os_log_impl(&dword_23AA66000, v48, v49, "%@ 👁  processing FP tree changes", v51, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2542E7570);
        swift_arrayDestroy();
        MEMORY[0x23B8614BC](v52, -1, -1);
        v54 = v51;
        v26 = (void (*)(char *, uint64_t))v84;
        MEMORY[0x23B8614BC](v54, -1, -1);
      }
      else
      {

        v48 = v47;
      }

      v26(v88, v90);
      v55 = sub_23AE4F234();
      sub_23AE66B78(v55);
      if (v30)
      {
        sub_23ADF25B8((uint64_t)&v92);
        sub_23ADF25B8((uint64_t)&v96);
        swift_release();
        sub_23AFC45E8(v47);

        goto LABEL_44;
      }
      swift_release();
      sub_23AFC45E8(v47);

    }
    v56 = v16[20];
    v57 = *(unsigned __int8 *)(v56 + 48);
    v87 = v30;
    if (v57 == 1)
    {
      v58 = swift_allocObject();
      v59 = v97;
      *(_OWORD *)(v58 + 16) = v96;
      *(_OWORD *)(v58 + 32) = v59;
      v60 = v99;
      *(_OWORD *)(v58 + 48) = v98;
      *(_OWORD *)(v58 + 64) = v60;
      *(_QWORD *)(v58 + 80) = v16;
      v61 = *(void (**)(const char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t (*)(), uint64_t))(*v16 + 416);
      swift_retain();
      v61("processPendingIngestion()", 25, 2, 0, 1, nullsub_1, 0, sub_23AEB43A4, v58);
      swift_release();
    }
    else
    {
      v62 = *((_QWORD *)&v99 + 1);
      v100 = *((_QWORD *)&v99 + 1);
      swift_bridgeObjectRetain();
      sub_23ADF25B8((uint64_t)&v96);
      v63 = *(_QWORD *)(v62 + 16);
      if (v63)
      {
        v64 = *(void (**)(uint64_t (*)(), uint64_t))(*v16 + 2344);
        v65 = (__int128 *)(v62 + 32);
        do
        {
          v66 = swift_allocObject();
          v67 = *v65++;
          *(_OWORD *)(v66 + 16) = v67;
          v68 = swift_retain();
          v69 = (void *)MEMORY[0x23B8601A8](v68);
          v64(sub_23ADF35F8, v66);
          objc_autoreleasePoolPop(v69);
          swift_release();
          --v63;
        }
        while (v63);
      }
      sub_23AAB7500((uint64_t)&v100);
    }
    if (*(_BYTE *)(v56 + 49) == 1)
    {
      v70 = swift_allocObject();
      v71 = v93;
      *(_OWORD *)(v70 + 16) = v92;
      *(_OWORD *)(v70 + 32) = v71;
      v72 = v95;
      *(_OWORD *)(v70 + 48) = v94;
      *(_OWORD *)(v70 + 64) = v72;
      *(_QWORD *)(v70 + 80) = v16;
      v73 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD), _QWORD, uint64_t (*)(), uint64_t))(*v16 + 416);
      swift_retain();
      v73("processPendingIngestion()", 25, 2, 1, 1, nullsub_1, 0, sub_23AEB4384, v70);
      swift_release();
    }
    else
    {
      v74 = *((_QWORD *)&v95 + 1);
      v105 = *((_QWORD *)&v95 + 1);
      swift_bridgeObjectRetain();
      sub_23ADF25B8((uint64_t)&v92);
      v75 = *(_QWORD *)(v74 + 16);
      if (v75)
      {
        v76 = *(void (**)(uint64_t (*)(), uint64_t))(*v16 + 2344);
        v77 = (__int128 *)(v74 + 32);
        do
        {
          v78 = swift_allocObject();
          v79 = *v77++;
          *(_OWORD *)(v78 + 16) = v79;
          v80 = swift_retain();
          v81 = (void *)MEMORY[0x23B8601A8](v80);
          v76(sub_23ADF35F8, v78);
          objc_autoreleasePoolPop(v81);
          swift_release();
          --v75;
        }
        while (v75);
      }
      sub_23AAB7500((uint64_t)&v105);
    }
    goto LABEL_44;
  }
}

